

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Aug 13 15:55:58 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F56K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    30                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    31                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    33                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	text0,global,reloc=2,class=CODE,delta=1
    35                           	psect	text1,global,reloc=2,class=CODE,delta=1
    36                           	psect	text2,global,reloc=2,class=CODE,delta=1
    37                           	psect	text3,global,reloc=2,class=CODE,delta=1
    38                           	psect	text4,global,reloc=2,class=CODE,delta=1
    39                           	psect	text5,global,reloc=2,class=CODE,delta=1
    40                           	psect	text6,global,reloc=2,class=CODE,delta=1
    41                           	psect	text7,global,reloc=2,class=CODE,delta=1
    42                           	psect	text8,global,reloc=2,class=CODE,delta=1
    43                           	psect	text9,global,reloc=2,class=CODE,delta=1
    44                           	psect	text10,global,reloc=2,class=CODE,delta=1
    45                           	psect	text11,global,reloc=2,class=CODE,delta=1
    46                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text13,global,reloc=2,class=CODE,delta=1
    48                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text25,global,reloc=2,class=CODE,delta=1
    60                           	psect	text26,global,reloc=2,class=CODE,delta=1
    61                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text28,global,reloc=2,class=CODE,delta=1
    63                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text35,global,reloc=2,class=CODE,delta=1
    70                           	psect	text36,global,reloc=2,class=CODE,delta=1
    71                           	psect	text37,global,reloc=2,class=CODE,delta=1
    72                           	psect	text38,global,reloc=2,class=CODE,delta=1
    73                           	psect	text39,global,reloc=2,class=CODE,delta=1
    74                           	psect	text40,global,reloc=2,class=CODE,delta=1
    75                           	psect	text41,global,reloc=2,class=CODE,delta=1
    76                           	psect	text42,global,reloc=2,class=CODE,delta=1
    77                           	psect	text43,global,reloc=2,class=CODE,delta=1
    78                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text45,global,reloc=4,class=CODE,delta=1
    80                           	psect	text46,global,reloc=2,class=CODE,delta=1
    81                           	psect	text47,global,reloc=2,class=CODE,delta=1
    82                           	psect	text48,global,reloc=2,class=CODE,delta=1
    83                           	psect	text49,global,reloc=4,class=CODE,delta=1
    84                           	psect	text50,global,reloc=2,class=CODE,delta=1
    85                           	psect	text51,global,reloc=2,class=CODE,delta=1
    86                           	psect	text52,global,reloc=2,class=CODE,delta=1
    87                           	psect	text53,global,reloc=2,class=CODE,delta=1
    88                           	psect	text54,global,reloc=2,class=CODE,delta=1
    89                           	psect	text55,global,reloc=2,class=CODE,delta=1
    90                           	psect	text56,global,reloc=2,class=CODE,delta=1
    91                           	psect	text57,global,reloc=2,class=CODE,delta=1
    92                           	psect	text58,global,reloc=2,class=CODE,delta=1
    93                           	psect	text59,global,reloc=2,class=CODE,delta=1
    94                           	psect	text60,global,reloc=2,class=CODE,delta=1
    95                           	psect	text61,global,reloc=2,class=CODE,delta=1
    96                           	psect	text62,global,reloc=2,class=CODE,delta=1
    97                           	psect	text63,global,reloc=2,class=CODE,delta=1
    98                           	psect	text64,global,reloc=2,class=CODE,delta=1
    99                           	psect	text65,global,reloc=2,class=CODE,delta=1
   100                           	psect	text66,global,reloc=2,class=CODE,delta=1
   101                           	psect	text67,global,reloc=2,class=CODE,delta=1
   102                           	psect	text68,global,reloc=2,class=CODE,delta=1
   103                           	psect	text69,global,reloc=2,class=CODE,delta=1
   104                           	psect	text70,global,reloc=2,class=CODE,delta=1
   105                           	psect	text71,global,reloc=2,class=CODE,delta=1
   106                           	psect	text72,global,reloc=2,class=CODE,delta=1
   107                           	psect	text73,global,reloc=2,class=CODE,delta=1
   108                           	psect	text74,global,reloc=2,class=CODE,delta=1
   109                           	psect	text75,global,reloc=2,class=CODE,delta=1
   110                           	psect	text76,global,reloc=2,class=CODE,delta=1
   111                           	psect	text77,global,reloc=2,class=CODE,delta=1
   112                           	psect	text78,global,reloc=2,class=CODE,delta=1
   113                           	psect	text79,global,reloc=2,class=CODE,delta=1
   114                           	psect	text80,global,reloc=2,class=CODE,delta=1
   115                           	psect	text81,global,reloc=2,class=CODE,delta=1
   116                           	psect	text82,global,reloc=2,class=CODE,delta=1
   117                           	psect	text83,global,reloc=2,class=CODE,delta=1
   118                           	psect	text84,global,reloc=2,class=CODE,delta=1
   119                           	psect	text85,global,reloc=2,class=CODE,delta=1
   120                           	psect	text86,global,reloc=2,class=CODE,delta=1
   121                           	psect	text87,global,reloc=2,class=CODE,delta=1
   122                           	psect	text88,global,reloc=2,class=CODE,delta=1
   123                           	psect	text89,global,reloc=2,class=CODE,delta=1
   124                           	psect	text90,global,reloc=2,class=CODE,delta=1
   125                           	psect	text91,global,reloc=2,class=CODE,delta=1
   126                           	psect	text92,global,reloc=2,class=CODE,delta=1
   127                           	psect	text93,global,reloc=2,class=CODE,delta=1
   128                           	psect	text94,global,reloc=2,class=CODE,delta=1
   129                           	psect	text95,global,reloc=2,class=CODE,delta=1
   130                           	psect	text96,global,reloc=2,class=CODE,delta=1
   131                           	psect	text97,global,reloc=2,class=CODE,delta=1
   132                           	psect	text98,global,reloc=2,class=CODE,delta=1
   133                           	psect	text99,global,reloc=2,class=CODE,delta=1
   134                           	psect	text100,global,reloc=2,class=CODE,delta=1
   135                           	psect	text101,global,reloc=2,class=CODE,delta=1
   136                           	psect	text102,global,reloc=2,class=CODE,delta=1
   137                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   138                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   139                           	psect	text103,global,reloc=2,class=CODE,delta=1
   140                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   141  0000                     
   142                           ; Version 1.45
   143                           ; Generated 16/11/2017 GMT
   144                           ; 
   145                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   146                           ; All rights reserved.
   147                           ; 
   148                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   149                           ; 
   150                           ; Redistribution and use in source and binary forms, with or without modification, are
   151                           ; permitted provided that the following conditions are met:
   152                           ; 
   153                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   154                           ;        conditions and the following disclaimer.
   155                           ; 
   156                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   157                           ;        of conditions and the following disclaimer in the documentation and/or other
   158                           ;        materials provided with the distribution.
   159                           ; 
   160                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   161                           ;        software without specific prior written permission.
   162                           ; 
   163                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   164                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   165                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   166                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   167                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   168                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   169                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   170                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   171                           ; 
   172                           ; 
   173                           ; Code-generator required, PIC18F56K42 Definitions
   174                           ; 
   175                           ; SFR Addresses
   176  0000                     
   177                           	psect	idataBANK0
   178  008AA4                     __pidataBANK0:
   179                           	opt stack 0
   180                           
   181                           ;initializer for _Max_Entrada10
   182  008AA4  0AEB               	dw	2795
   183                           
   184                           ;initializer for _Max_Saida9
   185  008AA6  005A               	dw	90
   186                           
   187                           ;initializer for _Max_Saida8
   188  008AA8  0050               	dw	80
   189                           
   190                           ;initializer for _Max_Saida7
   191  008AAA  0046               	dw	70
   192                           
   193                           ;initializer for _Max_Saida6
   194  008AAC  003C               	dw	60
   195                           
   196                           ;initializer for _Max_Saida5
   197  008AAE  0032               	dw	50
   198                           
   199                           ;initializer for _Max_Saida4
   200  008AB0  0028               	dw	40
   201                           
   202                           ;initializer for _Max_Saida3
   203  008AB2  001E               	dw	30
   204                           
   205                           ;initializer for _Max_Saida2
   206  008AB4  0014               	dw	20
   207                           
   208                           ;initializer for _Min_Entrada1
   209  008AB6  00BC               	dw	188
   210                           
   211                           ;initializer for _Max_Saida1
   212  008AB8  000A               	dw	10
   213                           
   214                           	psect	idataBANK1
   215  008ABA                     __pidataBANK1:
   216                           	opt stack 0
   217                           
   218                           ;initializer for _Max_Entrada9
   219  008ABA  0A1B               	dw	2587
   220                           
   221                           ;initializer for _Max_Entrada8
   222  008ABC  08FF               	dw	2303
   223                           
   224                           ;initializer for _Max_Entrada7
   225  008ABE  0814               	dw	2068
   226                           
   227                           ;initializer for _Max_Entrada6
   228  008AC0  06C6               	dw	1734
   229                           
   230                           ;initializer for _Max_Entrada5
   231  008AC2  05EB               	dw	1515
   232                           
   233                           ;initializer for _Max_Entrada4
   234  008AC4  04C4               	dw	1220
   235                           
   236                           ;initializer for _Max_Entrada3
   237  008AC6  03AE               	dw	942
   238                           
   239                           ;initializer for _Max_Entrada2
   240  008AC8  028E               	dw	654
   241                           
   242                           ;initializer for _Max_Entrada1
   243  008ACA  01B0               	dw	432
   244                           
   245                           	psect	idataBANK2
   246  008ADA                     __pidataBANK2:
   247                           	opt stack 0
   248                           
   249                           ;initializer for trataRespostaHTTP@F20030
   250  008ADA  32                 	db	50
   251  008ADB  30                 	db	48
   252  008ADC  30                 	db	48
   253  008ADD  00                 	db	0
   254                           
   255                           ;initializer for verificaFimFrame@F19980
   256  008ADE  7D                 	db	125
   257  008ADF  5D                 	db	93
   258  008AE0  00                 	db	0
   259                           
   260                           ;initializer for _Max_Saida10
   261  008AE1  0064               	dw	100
   262                           
   263                           	psect	idataBANK3
   264  008ACC                     __pidataBANK3:
   265                           	opt stack 0
   266                           
   267                           ;initializer for verificaERRO@F19983
   268  008ACC  45                 	db	69
   269  008ACD  52                 	db	82
   270  008ACE  52                 	db	82
   271  008ACF  4F                 	db	79
   272  008AD0  3A                 	db	58
   273  008AD1  00                 	db	0
   274                           
   275                           ;initializer for trataRespostaHTTP@F20034
   276  008AD2  34                 	db	52
   277  008AD3  30                 	db	48
   278  008AD4  34                 	db	52
   279  008AD5  00                 	db	0
   280                           
   281                           ;initializer for trataRespostaHTTP@F20032
   282  008AD6  32                 	db	50
   283  008AD7  30                 	db	48
   284  008AD8  34                 	db	52
   285  008AD9  00                 	db	0
   286                           
   287                           	psect	mediumconst
   288  00FAD8                     __pmediumconst:
   289                           	opt stack 0
   290  00FAD8  00                 	db	0
   291  00FAD9                     _dpowers:
   292                           	opt stack 0
   293  00FAD9  0001               	dw	1
   294  00FADB  0000               	dw	0
   295  00FADD  000A               	dw	10
   296  00FADF  0000               	dw	0
   297  00FAE1  0064               	dw	100
   298  00FAE3  0000               	dw	0
   299  00FAE5  03E8               	dw	1000
   300  00FAE7  0000               	dw	0
   301  00FAE9  2710               	dw	10000
   302  00FAEB  0000               	dw	0
   303  00FAED  86A0               	dw	34464
   304  00FAEF  0001               	dw	1
   305  00FAF1  4240               	dw	16960
   306  00FAF3  000F               	dw	15
   307  00FAF5  9680               	dw	38528
   308  00FAF7  0098               	dw	152
   309  00FAF9  E100               	dw	57600
   310  00FAFB  05F5               	dw	1525
   311  00FAFD  CA00               	dw	51712
   312  00FAFF  3B9A               	dw	15258
   313  00FB01                     __end_of_dpowers:
   314                           	opt stack 0
   315  00FB01                     __powers_:
   316                           	opt stack 0
   317  00FB01  00                 	db	0
   318  00FB02  80                 	db	128
   319  00FB03  3F                 	db	63
   320  00FB04  00                 	db	0
   321  00FB05  20                 	db	32
   322  00FB06  41                 	db	65
   323  00FB07  00                 	db	0
   324  00FB08  C8                 	db	200
   325  00FB09  42                 	db	66
   326  00FB0A  00                 	db	0
   327  00FB0B  7A                 	db	122
   328  00FB0C  44                 	db	68
   329  00FB0D  40                 	db	64
   330  00FB0E  1C                 	db	28
   331  00FB0F  46                 	db	70
   332  00FB10  50                 	db	80
   333  00FB11  C3                 	db	195
   334  00FB12  47                 	db	71
   335  00FB13  24                 	db	36
   336  00FB14  74                 	db	116
   337  00FB15  49                 	db	73
   338  00FB16  97                 	db	151
   339  00FB17  18                 	db	24
   340  00FB18  4B                 	db	75
   341  00FB19  BC                 	db	188
   342  00FB1A  BE                 	db	190
   343  00FB1B  4C                 	db	76
   344  00FB1C  6B                 	db	107
   345  00FB1D  6E                 	db	110
   346  00FB1E  4E                 	db	78
   347  00FB1F  03                 	db	3
   348  00FB20  15                 	db	21
   349  00FB21  50                 	db	80
   350  00FB22  79                 	db	121
   351  00FB23  AD                 	db	173
   352  00FB24  60                 	db	96
   353  00FB25  F3                 	db	243
   354  00FB26  49                 	db	73
   355  00FB27  71                 	db	113
   356  00FB28                     __end_of__powers_:
   357                           	opt stack 0
   358  00FB28                     __npowers_:
   359                           	opt stack 0
   360  00FB28  00                 	db	0
   361  00FB29  80                 	db	128
   362  00FB2A  3F                 	db	63
   363  00FB2B  CD                 	db	205
   364  00FB2C  CC                 	db	204
   365  00FB2D  3D                 	db	61
   366  00FB2E  D7                 	db	215
   367  00FB2F  23                 	db	35
   368  00FB30  3C                 	db	60
   369  00FB31  12                 	db	18
   370  00FB32  83                 	db	131
   371  00FB33  3A                 	db	58
   372  00FB34  B7                 	db	183
   373  00FB35  D1                 	db	209
   374  00FB36  38                 	db	56
   375  00FB37  C6                 	db	198
   376  00FB38  27                 	db	39
   377  00FB39  37                 	db	55
   378  00FB3A  38                 	db	56
   379  00FB3B  86                 	db	134
   380  00FB3C  35                 	db	53
   381  00FB3D  C0                 	db	192
   382  00FB3E  D6                 	db	214
   383  00FB3F  33                 	db	51
   384  00FB40  CC                 	db	204
   385  00FB41  2B                 	db	43
   386  00FB42  32                 	db	50
   387  00FB43  70                 	db	112
   388  00FB44  89                 	db	137
   389  00FB45  30                 	db	48
   390  00FB46  E7                 	db	231
   391  00FB47  DB                 	db	219
   392  00FB48  2E                 	db	46
   393  00FB49  E5                 	db	229
   394  00FB4A  3C                 	db	60
   395  00FB4B  1E                 	db	30
   396  00FB4C  42                 	db	66
   397  00FB4D  A2                 	db	162
   398  00FB4E  0D                 	db	13
   399  00FB4F                     __end_of__npowers_:
   400                           	opt stack 0
   401  00FB4F                     _hexpowers:
   402                           	opt stack 0
   403  00FB4F  0001               	dw	1
   404  00FB51  0000               	dw	0
   405  00FB53  0010               	dw	16
   406  00FB55  0000               	dw	0
   407  00FB57  0100               	dw	256
   408  00FB59  0000               	dw	0
   409  00FB5B  1000               	dw	4096
   410  00FB5D  0000               	dw	0
   411  00FB5F  0000               	dw	0
   412  00FB61  0001               	dw	1
   413  00FB63  0000               	dw	0
   414  00FB65  0010               	dw	16
   415  00FB67  0000               	dw	0
   416  00FB69  0100               	dw	256
   417  00FB6B  0000               	dw	0
   418  00FB6D  1000               	dw	4096
   419  00FB6F                     __end_of_hexpowers:
   420                           	opt stack 0
   421  00FB6F  7B                 	db	123
   422  00FB70  22                 	db	34
   423  00FB71  63                 	db	99	;'c'
   424  00FB72  6F                 	db	111	;'o'
   425  00FB73  64                 	db	100	;'d'
   426  00FB74  65                 	db	101	;'e'
   427  00FB75  22                 	db	34
   428  00FB76  3A                 	db	58	;':'
   429  00FB77  22                 	db	34
   430  00FB78  31                 	db	49	;'1'
   431  00FB79  31                 	db	49	;'1'
   432  00FB7A  3A                 	db	58	;':'
   433  00FB7B  32                 	db	50	;'2'
   434  00FB7C  32                 	db	50	;'2'
   435  00FB7D  3A                 	db	58	;':'
   436  00FB7E  33                 	db	51	;'3'
   437  00FB7F  33                 	db	51	;'3'
   438  00FB80  3A                 	db	58	;':'
   439  00FB81  34                 	db	52	;'4'
   440  00FB82  34                 	db	52	;'4'
   441  00FB83  3A                 	db	58	;':'
   442  00FB84  35                 	db	53	;'5'
   443  00FB85  35                 	db	53	;'5'
   444  00FB86  3A                 	db	58	;':'
   445  00FB87  36                 	db	54	;'6'
   446  00FB88  36                 	db	54	;'6'
   447  00FB89  22                 	db	34
   448  00FB8A  2C                 	db	44
   449  00FB8B  22                 	db	34
   450  00FB8C  74                 	db	116	;'t'
   451  00FB8D  61                 	db	97	;'a'
   452  00FB8E  73                 	db	115	;'s'
   453  00FB8F  6B                 	db	107	;'k'
   454  00FB90  52                 	db	82	;'R'
   455  00FB91  65                 	db	101	;'e'
   456  00FB92  73                 	db	115	;'s'
   457  00FB93  70                 	db	112	;'p'
   458  00FB94  6F                 	db	111	;'o'
   459  00FB95  6E                 	db	110	;'n'
   460  00FB96  73                 	db	115	;'s'
   461  00FB97  65                 	db	101	;'e'
   462  00FB98  46                 	db	70	;'F'
   463  00FB99  72                 	db	114	;'r'
   464  00FB9A  61                 	db	97	;'a'
   465  00FB9B  6D                 	db	109	;'m'
   466  00FB9C  65                 	db	101	;'e'
   467  00FB9D  73                 	db	115	;'s'
   468  00FB9E  22                 	db	34
   469  00FB9F  3A                 	db	58	;':'
   470  00FBA0  5B                 	db	91	;'['
   471  00FBA1  7B                 	db	123
   472  00FBA2  22                 	db	34
   473  00FBA3  66                 	db	102	;'f'
   474  00FBA4  72                 	db	114	;'r'
   475  00FBA5  61                 	db	97	;'a'
   476  00FBA6  6D                 	db	109	;'m'
   477  00FBA7  65                 	db	101	;'e'
   478  00FBA8  49                 	db	73	;'I'
   479  00FBA9  64                 	db	100	;'d'
   480  00FBAA  22                 	db	34
   481  00FBAB  3A                 	db	58	;':'
   482  00FBAC  22                 	db	34
   483  00FBAD  63                 	db	99	;'c'
   484  00FBAE  35                 	db	53	;'5'
   485  00FBAF  38                 	db	56	;'8'
   486  00FBB0  65                 	db	101	;'e'
   487  00FBB1  66                 	db	102	;'f'
   488  00FBB2  63                 	db	99	;'c'
   489  00FBB3  37                 	db	55	;'7'
   490  00FBB4  63                 	db	99	;'c'
   491  00FBB5  2D                 	db	45
   492  00FBB6  63                 	db	99	;'c'
   493  00FBB7  31                 	db	49	;'1'
   494  00FBB8  63                 	db	99	;'c'
   495  00FBB9  30                 	db	48	;'0'
   496  00FBBA  2D                 	db	45
   497  00FBBB  34                 	db	52	;'4'
   498  00FBBC  38                 	db	56	;'8'
   499  00FBBD  65                 	db	101	;'e'
   500  00FBBE  34                 	db	52	;'4'
   501  00FBBF  2D                 	db	45
   502  00FBC0  39                 	db	57	;'9'
   503  00FBC1  35                 	db	53	;'5'
   504  00FBC2  36                 	db	54	;'6'
   505  00FBC3  63                 	db	99	;'c'
   506  00FBC4  2D                 	db	45
   507  00FBC5  32                 	db	50	;'2'
   508  00FBC6  33                 	db	51	;'3'
   509  00FBC7  32                 	db	50	;'2'
   510  00FBC8  38                 	db	56	;'8'
   511  00FBC9  31                 	db	49	;'1'
   512  00FBCA  37                 	db	55	;'7'
   513  00FBCB  37                 	db	55	;'7'
   514  00FBCC  37                 	db	55	;'7'
   515  00FBCD  32                 	db	50	;'2'
   516  00FBCE  37                 	db	55	;'7'
   517  00FBCF  30                 	db	48	;'0'
   518  00FBD0  30                 	db	48	;'0'
   519  00FBD1  22                 	db	34
   520  00FBD2  2C                 	db	44
   521  00FBD3  22                 	db	34
   522  00FBD4  76                 	db	118	;'v'
   523  00FBD5  61                 	db	97	;'a'
   524  00FBD6  6C                 	db	108	;'l'
   525  00FBD7  75                 	db	117	;'u'
   526  00FBD8  65                 	db	101	;'e'
   527  00FBD9  22                 	db	34
   528  00FBDA  3A                 	db	58	;':'
   529  00FBDB  22                 	db	34
   530  00FBDC  34                 	db	52	;'4'
   531  00FBDD  33                 	db	51	;'3'
   532  00FBDE  32                 	db	50	;'2'
   533  00FBDF  31                 	db	49	;'1'
   534  00FBE0  22                 	db	34
   535  00FBE1  2C                 	db	44
   536  00FBE2  22                 	db	34
   537  00FBE3  72                 	db	114	;'r'
   538  00FBE4  65                 	db	101	;'e'
   539  00FBE5  73                 	db	115	;'s'
   540  00FBE6  75                 	db	117	;'u'
   541  00FBE7  6C                 	db	108	;'l'
   542  00FBE8  74                 	db	116	;'t'
   543  00FBE9  22                 	db	34
   544  00FBEA  3A                 	db	58	;':'
   545  00FBEB  74                 	db	116	;'t'
   546  00FBEC  72                 	db	114	;'r'
   547  00FBED  75                 	db	117	;'u'
   548  00FBEE  65                 	db	101	;'e'
   549  00FBEF  7D                 	db	125
   550  00FBF0  5D                 	db	93	;']'
   551  00FBF1  7D                 	db	125
   552  00FBF2  0D                 	db	13
   553  00FBF3  0A                 	db	10
   554  00FBF4  0D                 	db	13
   555  00FBF5  0A                 	db	10
   556  00FBF6  00                 	db	0
   557  00FBF7                     STR_78:
   558  00FBF7  41                 	db	65	;'A'
   559  00FBF8  54                 	db	84	;'T'
   560  00FBF9  2B                 	db	43
   561  00FBFA  53                 	db	83	;'S'
   562  00FBFB  2E                 	db	46
   563  00FBFC  48                 	db	72	;'H'
   564  00FBFD  54                 	db	84	;'T'
   565  00FBFE  54                 	db	84	;'T'
   566  00FBFF  50                 	db	80	;'P'
   567  00FC00  50                 	db	80	;'P'
   568  00FC01  4F                 	db	79	;'O'
   569  00FC02  53                 	db	83	;'S'
   570  00FC03  54                 	db	84	;'T'
   571  00FC04  3D                 	db	61	;'='
   572  00FC05  73                 	db	115	;'s'
   573  00FC06  65                 	db	101	;'e'
   574  00FC07  72                 	db	114	;'r'
   575  00FC08  76                 	db	118	;'v'
   576  00FC09  69                 	db	105	;'i'
   577  00FC0A  63                 	db	99	;'c'
   578  00FC0B  65                 	db	101	;'e'
   579  00FC0C  73                 	db	115	;'s'
   580  00FC0D  2E                 	db	46
   581  00FC0E  67                 	db	103	;'g'
   582  00FC0F  65                 	db	101	;'e'
   583  00FC10  72                 	db	114	;'r'
   584  00FC11  72                 	db	114	;'r'
   585  00FC12  65                 	db	101	;'e'
   586  00FC13  78                 	db	120	;'x'
   587  00FC14  2E                 	db	46
   588  00FC15  63                 	db	99	;'c'
   589  00FC16  6F                 	db	111	;'o'
   590  00FC17  6D                 	db	109	;'m'
   591  00FC18  2E                 	db	46
   592  00FC19  62                 	db	98	;'b'
   593  00FC1A  72                 	db	114	;'r'
   594  00FC1B  2C                 	db	44
   595  00FC1C  2F                 	db	47
   596  00FC1D  73                 	db	115	;'s'
   597  00FC1E  65                 	db	101	;'e'
   598  00FC1F  72                 	db	114	;'r'
   599  00FC20  76                 	db	118	;'v'
   600  00FC21  69                 	db	105	;'i'
   601  00FC22  63                 	db	99	;'c'
   602  00FC23  65                 	db	101	;'e'
   603  00FC24  2F                 	db	47
   604  00FC25  74                 	db	116	;'t'
   605  00FC26  61                 	db	97	;'a'
   606  00FC27  73                 	db	115	;'s'
   607  00FC28  6B                 	db	107	;'k'
   608  00FC29  2C                 	db	44
   609  00FC2A  38                 	db	56	;'8'
   610  00FC2B  30                 	db	48	;'0'
   611  00FC2C  2C                 	db	44
   612  00FC2D  2C                 	db	44
   613  00FC2E  2C                 	db	44
   614  00FC2F  2C                 	db	44
   615  00FC30  67                 	db	103	;'g'
   616  00FC31  65                 	db	101	;'e'
   617  00FC32  72                 	db	114	;'r'
   618  00FC33  72                 	db	114	;'r'
   619  00FC34  65                 	db	101	;'e'
   620  00FC35  78                 	db	120	;'x'
   621  00FC36  5F                 	db	95	;'_'
   622  00FC37  72                 	db	114	;'r'
   623  00FC38  65                 	db	101	;'e'
   624  00FC39  73                 	db	115	;'s'
   625  00FC3A  70                 	db	112	;'p'
   626  00FC3B  6F                 	db	111	;'o'
   627  00FC3C  6E                 	db	110	;'n'
   628  00FC3D  73                 	db	115	;'s'
   629  00FC3E  65                 	db	101	;'e'
   630  00FC3F  2E                 	db	46
   631  00FC40  6A                 	db	106	;'j'
   632  00FC41  73                 	db	115	;'s'
   633  00FC42  6F                 	db	111	;'o'
   634  00FC43  6E                 	db	110	;'n'
   635  00FC44  2C                 	db	44
   636  00FC45  67                 	db	103	;'g'
   637  00FC46  65                 	db	101	;'e'
   638  00FC47  72                 	db	114	;'r'
   639  00FC48  72                 	db	114	;'r'
   640  00FC49  65                 	db	101	;'e'
   641  00FC4A  78                 	db	120	;'x'
   642  00FC4B  2E                 	db	46
   643  00FC4C  6A                 	db	106	;'j'
   644  00FC4D  73                 	db	115	;'s'
   645  00FC4E  6F                 	db	111	;'o'
   646  00FC4F  6E                 	db	110	;'n'
   647  00FC50  0D                 	db	13
   648  00FC51  00                 	db	0
   649  00FC52                     STR_30:
   650  00FC52  41                 	db	65	;'A'
   651  00FC53  54                 	db	84	;'T'
   652  00FC54  2B                 	db	43
   653  00FC55  53                 	db	83	;'S'
   654  00FC56  2E                 	db	46
   655  00FC57  48                 	db	72	;'H'
   656  00FC58  54                 	db	84	;'T'
   657  00FC59  54                 	db	84	;'T'
   658  00FC5A  50                 	db	80	;'P'
   659  00FC5B  50                 	db	80	;'P'
   660  00FC5C  4F                 	db	79	;'O'
   661  00FC5D  53                 	db	83	;'S'
   662  00FC5E  54                 	db	84	;'T'
   663  00FC5F  3D                 	db	61	;'='
   664  00FC60  73                 	db	115	;'s'
   665  00FC61  65                 	db	101	;'e'
   666  00FC62  72                 	db	114	;'r'
   667  00FC63  76                 	db	118	;'v'
   668  00FC64  69                 	db	105	;'i'
   669  00FC65  63                 	db	99	;'c'
   670  00FC66  65                 	db	101	;'e'
   671  00FC67  73                 	db	115	;'s'
   672  00FC68  2E                 	db	46
   673  00FC69  67                 	db	103	;'g'
   674  00FC6A  65                 	db	101	;'e'
   675  00FC6B  72                 	db	114	;'r'
   676  00FC6C  72                 	db	114	;'r'
   677  00FC6D  65                 	db	101	;'e'
   678  00FC6E  78                 	db	120	;'x'
   679  00FC6F  2E                 	db	46
   680  00FC70  63                 	db	99	;'c'
   681  00FC71  6F                 	db	111	;'o'
   682  00FC72  6D                 	db	109	;'m'
   683  00FC73  2E                 	db	46
   684  00FC74  62                 	db	98	;'b'
   685  00FC75  72                 	db	114	;'r'
   686  00FC76  2C                 	db	44
   687  00FC77  2F                 	db	47
   688  00FC78  73                 	db	115	;'s'
   689  00FC79  65                 	db	101	;'e'
   690  00FC7A  72                 	db	114	;'r'
   691  00FC7B  76                 	db	118	;'v'
   692  00FC7C  69                 	db	105	;'i'
   693  00FC7D  63                 	db	99	;'c'
   694  00FC7E  65                 	db	101	;'e'
   695  00FC7F  2F                 	db	47
   696  00FC80  74                 	db	116	;'t'
   697  00FC81  61                 	db	97	;'a'
   698  00FC82  73                 	db	115	;'s'
   699  00FC83  6B                 	db	107	;'k'
   700  00FC84  2C                 	db	44
   701  00FC85  38                 	db	56	;'8'
   702  00FC86  30                 	db	48	;'0'
   703  00FC87  2C                 	db	44
   704  00FC88  2C                 	db	44
   705  00FC89  2C                 	db	44
   706  00FC8A  2C                 	db	44
   707  00FC8B  72                 	db	114	;'r'
   708  00FC8C  65                 	db	101	;'e'
   709  00FC8D  74                 	db	116	;'t'
   710  00FC8E  6F                 	db	111	;'o'
   711  00FC8F  72                 	db	114	;'r'
   712  00FC90  6E                 	db	110	;'n'
   713  00FC91  6F                 	db	111	;'o'
   714  00FC92  2E                 	db	46
   715  00FC93  6A                 	db	106	;'j'
   716  00FC94  73                 	db	115	;'s'
   717  00FC95  6F                 	db	111	;'o'
   718  00FC96  6E                 	db	110	;'n'
   719  00FC97  2C                 	db	44
   720  00FC98  67                 	db	103	;'g'
   721  00FC99  65                 	db	101	;'e'
   722  00FC9A  72                 	db	114	;'r'
   723  00FC9B  72                 	db	114	;'r'
   724  00FC9C  65                 	db	101	;'e'
   725  00FC9D  78                 	db	120	;'x'
   726  00FC9E  2E                 	db	46
   727  00FC9F  6A                 	db	106	;'j'
   728  00FCA0  73                 	db	115	;'s'
   729  00FCA1  6F                 	db	111	;'o'
   730  00FCA2  6E                 	db	110	;'n'
   731  00FCA3  0D                 	db	13
   732  00FCA4  0A                 	db	10
   733  00FCA5  00                 	db	0
   734  00FCA6  41                 	db	65	;'A'
   735  00FCA7  54                 	db	84	;'T'
   736  00FCA8  2B                 	db	43
   737  00FCA9  53                 	db	83	;'S'
   738  00FCAA  2E                 	db	46
   739  00FCAB  48                 	db	72	;'H'
   740  00FCAC  54                 	db	84	;'T'
   741  00FCAD  54                 	db	84	;'T'
   742  00FCAE  50                 	db	80	;'P'
   743  00FCAF  47                 	db	71	;'G'
   744  00FCB0  45                 	db	69	;'E'
   745  00FCB1  54                 	db	84	;'T'
   746  00FCB2  3D                 	db	61	;'='
   747  00FCB3  73                 	db	115	;'s'
   748  00FCB4  65                 	db	101	;'e'
   749  00FCB5  72                 	db	114	;'r'
   750  00FCB6  76                 	db	118	;'v'
   751  00FCB7  69                 	db	105	;'i'
   752  00FCB8  63                 	db	99	;'c'
   753  00FCB9  65                 	db	101	;'e'
   754  00FCBA  73                 	db	115	;'s'
   755  00FCBB  2E                 	db	46
   756  00FCBC  67                 	db	103	;'g'
   757  00FCBD  65                 	db	101	;'e'
   758  00FCBE  72                 	db	114	;'r'
   759  00FCBF  72                 	db	114	;'r'
   760  00FCC0  65                 	db	101	;'e'
   761  00FCC1  78                 	db	120	;'x'
   762  00FCC2  2E                 	db	46
   763  00FCC3  63                 	db	99	;'c'
   764  00FCC4  6F                 	db	111	;'o'
   765  00FCC5  6D                 	db	109	;'m'
   766  00FCC6  2E                 	db	46
   767  00FCC7  62                 	db	98	;'b'
   768  00FCC8  72                 	db	114	;'r'
   769  00FCC9  2C                 	db	44
   770  00FCCA  2F                 	db	47
   771  00FCCB  73                 	db	115	;'s'
   772  00FCCC  65                 	db	101	;'e'
   773  00FCCD  72                 	db	114	;'r'
   774  00FCCE  76                 	db	118	;'v'
   775  00FCCF  69                 	db	105	;'i'
   776  00FCD0  63                 	db	99	;'c'
   777  00FCD1  65                 	db	101	;'e'
   778  00FCD2  2F                 	db	47
   779  00FCD3  74                 	db	116	;'t'
   780  00FCD4  61                 	db	97	;'a'
   781  00FCD5  73                 	db	115	;'s'
   782  00FCD6  6B                 	db	107	;'k'
   783  00FCD7  2F                 	db	47
   784  00FCD8  31                 	db	49	;'1'
   785  00FCD9  31                 	db	49	;'1'
   786  00FCDA  3A                 	db	58	;':'
   787  00FCDB  32                 	db	50	;'2'
   788  00FCDC  32                 	db	50	;'2'
   789  00FCDD  3A                 	db	58	;':'
   790  00FCDE  33                 	db	51	;'3'
   791  00FCDF  33                 	db	51	;'3'
   792  00FCE0  3A                 	db	58	;':'
   793  00FCE1  34                 	db	52	;'4'
   794  00FCE2  34                 	db	52	;'4'
   795  00FCE3  3A                 	db	58	;':'
   796  00FCE4  35                 	db	53	;'5'
   797  00FCE5  35                 	db	53	;'5'
   798  00FCE6  3A                 	db	58	;':'
   799  00FCE7  36                 	db	54	;'6'
   800  00FCE8  36                 	db	54	;'6'
   801  00FCE9  0D                 	db	13
   802  00FCEA  0A                 	db	10
   803  00FCEB  00                 	db	0
   804  00FCEC                     STR_13:
   805  00FCEC  25                 	db	37
   806  00FCED  73                 	db	115	;'s'
   807  00FCEE  7B                 	db	123
   808  00FCEF  22                 	db	34
   809  00FCF0  66                 	db	102	;'f'
   810  00FCF1  72                 	db	114	;'r'
   811  00FCF2  61                 	db	97	;'a'
   812  00FCF3  6D                 	db	109	;'m'
   813  00FCF4  65                 	db	101	;'e'
   814  00FCF5  49                 	db	73	;'I'
   815  00FCF6  64                 	db	100	;'d'
   816  00FCF7  22                 	db	34
   817  00FCF8  3A                 	db	58	;':'
   818  00FCF9  22                 	db	34
   819  00FCFA  25                 	db	37
   820  00FCFB  73                 	db	115	;'s'
   821  00FCFC  22                 	db	34
   822  00FCFD  2C                 	db	44
   823  00FCFE  22                 	db	34
   824  00FCFF  76                 	db	118	;'v'
   825  00FD00  61                 	db	97	;'a'
   826  00FD01  6C                 	db	108	;'l'
   827  00FD02  75                 	db	117	;'u'
   828  00FD03  65                 	db	101	;'e'
   829  00FD04  22                 	db	34
   830  00FD05  3A                 	db	58	;':'
   831  00FD06  22                 	db	34
   832  00FD07  25                 	db	37
   833  00FD08  63                 	db	99	;'c'
   834  00FD09  25                 	db	37
   835  00FD0A  63                 	db	99	;'c'
   836  00FD0B  2C                 	db	44
   837  00FD0C  25                 	db	37
   838  00FD0D  63                 	db	99	;'c'
   839  00FD0E  25                 	db	37
   840  00FD0F  63                 	db	99	;'c'
   841  00FD10  2C                 	db	44
   842  00FD11  25                 	db	37
   843  00FD12  63                 	db	99	;'c'
   844  00FD13  25                 	db	37
   845  00FD14  63                 	db	99	;'c'
   846  00FD15  2C                 	db	44
   847  00FD16  25                 	db	37
   848  00FD17  63                 	db	99	;'c'
   849  00FD18  25                 	db	37
   850  00FD19  63                 	db	99	;'c'
   851  00FD1A  22                 	db	34
   852  00FD1B  2C                 	db	44
   853  00FD1C  22                 	db	34
   854  00FD1D  72                 	db	114	;'r'
   855  00FD1E  65                 	db	101	;'e'
   856  00FD1F  73                 	db	115	;'s'
   857  00FD20  75                 	db	117	;'u'
   858  00FD21  6C                 	db	108	;'l'
   859  00FD22  74                 	db	116	;'t'
   860  00FD23  22                 	db	34
   861  00FD24  3A                 	db	58	;':'
   862  00FD25  25                 	db	37
   863  00FD26  73                 	db	115	;'s'
   864  00FD27  7D                 	db	125
   865  00FD28  00                 	db	0
   866  00FD29                     STR_9:
   867  00FD29  7B                 	db	123
   868  00FD2A  22                 	db	34
   869  00FD2B  63                 	db	99	;'c'
   870  00FD2C  6F                 	db	111	;'o'
   871  00FD2D  64                 	db	100	;'d'
   872  00FD2E  65                 	db	101	;'e'
   873  00FD2F  22                 	db	34
   874  00FD30  3A                 	db	58	;':'
   875  00FD31  22                 	db	34
   876  00FD32  30                 	db	48	;'0'
   877  00FD33  30                 	db	48	;'0'
   878  00FD34  3A                 	db	58	;':'
   879  00FD35  38                 	db	56	;'8'
   880  00FD36  30                 	db	48	;'0'
   881  00FD37  3A                 	db	58	;':'
   882  00FD38  45                 	db	69	;'E'
   883  00FD39  31                 	db	49	;'1'
   884  00FD3A  3A                 	db	58	;':'
   885  00FD3B  42                 	db	66	;'B'
   886  00FD3C  46                 	db	70	;'F'
   887  00FD3D  3A                 	db	58	;':'
   888  00FD3E  45                 	db	69	;'E'
   889  00FD3F  33                 	db	51	;'3'
   890  00FD40  3A                 	db	58	;':'
   891  00FD41  43                 	db	67	;'C'
   892  00FD42  38                 	db	56	;'8'
   893  00FD43  22                 	db	34
   894  00FD44  2C                 	db	44
   895  00FD45  22                 	db	34
   896  00FD46  74                 	db	116	;'t'
   897  00FD47  61                 	db	97	;'a'
   898  00FD48  73                 	db	115	;'s'
   899  00FD49  6B                 	db	107	;'k'
   900  00FD4A  52                 	db	82	;'R'
   901  00FD4B  65                 	db	101	;'e'
   902  00FD4C  73                 	db	115	;'s'
   903  00FD4D  70                 	db	112	;'p'
   904  00FD4E  6F                 	db	111	;'o'
   905  00FD4F  6E                 	db	110	;'n'
   906  00FD50  73                 	db	115	;'s'
   907  00FD51  65                 	db	101	;'e'
   908  00FD52  46                 	db	70	;'F'
   909  00FD53  72                 	db	114	;'r'
   910  00FD54  61                 	db	97	;'a'
   911  00FD55  6D                 	db	109	;'m'
   912  00FD56  65                 	db	101	;'e'
   913  00FD57  73                 	db	115	;'s'
   914  00FD58  22                 	db	34
   915  00FD59  3A                 	db	58	;':'
   916  00FD5A  5B                 	db	91	;'['
   917  00FD5B  00                 	db	0
   918  00FD5C  43                 	db	67	;'C'
   919  00FD5D  6F                 	db	111	;'o'
   920  00FD5E  6E                 	db	110	;'n'
   921  00FD5F  74                 	db	116	;'t'
   922  00FD60  65                 	db	101	;'e'
   923  00FD61  6E                 	db	110	;'n'
   924  00FD62  74                 	db	116	;'t'
   925  00FD63  2D                 	db	45
   926  00FD64  54                 	db	84	;'T'
   927  00FD65  79                 	db	121	;'y'
   928  00FD66  70                 	db	112	;'p'
   929  00FD67  65                 	db	101	;'e'
   930  00FD68  3A                 	db	58	;':'
   931  00FD69  20                 	db	32
   932  00FD6A  61                 	db	97	;'a'
   933  00FD6B  70                 	db	112	;'p'
   934  00FD6C  70                 	db	112	;'p'
   935  00FD6D  6C                 	db	108	;'l'
   936  00FD6E  69                 	db	105	;'i'
   937  00FD6F  63                 	db	99	;'c'
   938  00FD70  61                 	db	97	;'a'
   939  00FD71  74                 	db	116	;'t'
   940  00FD72  69                 	db	105	;'i'
   941  00FD73  6F                 	db	111	;'o'
   942  00FD74  6E                 	db	110	;'n'
   943  00FD75  2F                 	db	47
   944  00FD76  6A                 	db	106	;'j'
   945  00FD77  73                 	db	115	;'s'
   946  00FD78  6F                 	db	111	;'o'
   947  00FD79  6E                 	db	110	;'n'
   948  00FD7A  2D                 	db	45
   949  00FD7B  70                 	db	112	;'p'
   950  00FD7C  61                 	db	97	;'a'
   951  00FD7D  74                 	db	116	;'t'
   952  00FD7E  63                 	db	99	;'c'
   953  00FD7F  68                 	db	104	;'h'
   954  00FD80  2B                 	db	43
   955  00FD81  6A                 	db	106	;'j'
   956  00FD82  73                 	db	115	;'s'
   957  00FD83  6F                 	db	111	;'o'
   958  00FD84  6E                 	db	110	;'n'
   959  00FD85  0D                 	db	13
   960  00FD86  0A                 	db	10
   961  00FD87  00                 	db	0
   962  00FD88  48                 	db	72	;'H'
   963  00FD89  6F                 	db	111	;'o'
   964  00FD8A  73                 	db	115	;'s'
   965  00FD8B  74                 	db	116	;'t'
   966  00FD8C  3A                 	db	58	;':'
   967  00FD8D  20                 	db	32
   968  00FD8E  73                 	db	115	;'s'
   969  00FD8F  65                 	db	101	;'e'
   970  00FD90  72                 	db	114	;'r'
   971  00FD91  76                 	db	118	;'v'
   972  00FD92  69                 	db	105	;'i'
   973  00FD93  63                 	db	99	;'c'
   974  00FD94  65                 	db	101	;'e'
   975  00FD95  73                 	db	115	;'s'
   976  00FD96  2E                 	db	46
   977  00FD97  67                 	db	103	;'g'
   978  00FD98  65                 	db	101	;'e'
   979  00FD99  72                 	db	114	;'r'
   980  00FD9A  72                 	db	114	;'r'
   981  00FD9B  65                 	db	101	;'e'
   982  00FD9C  78                 	db	120	;'x'
   983  00FD9D  2E                 	db	46
   984  00FD9E  63                 	db	99	;'c'
   985  00FD9F  6F                 	db	111	;'o'
   986  00FDA0  6D                 	db	109	;'m'
   987  00FDA1  2E                 	db	46
   988  00FDA2  62                 	db	98	;'b'
   989  00FDA3  72                 	db	114	;'r'
   990  00FDA4  0D                 	db	13
   991  00FDA5  0A                 	db	10
   992  00FDA6  00                 	db	0
   993  00FDA7                     STR_26:
   994  00FDA7  41                 	db	65	;'A'
   995  00FDA8  54                 	db	84	;'T'
   996  00FDA9  2B                 	db	43
   997  00FDAA  53                 	db	83	;'S'
   998  00FDAB  2E                 	db	46
   999  00FDAC  46                 	db	70	;'F'
  1000  00FDAD  53                 	db	83	;'S'
  1001  00FDAE  50                 	db	80	;'P'
  1002  00FDAF  3D                 	db	61	;'='
  1003  00FDB0  67                 	db	103	;'g'
  1004  00FDB1  65                 	db	101	;'e'
  1005  00FDB2  72                 	db	114	;'r'
  1006  00FDB3  72                 	db	114	;'r'
  1007  00FDB4  65                 	db	101	;'e'
  1008  00FDB5  78                 	db	120	;'x'
  1009  00FDB6  2E                 	db	46
  1010  00FDB7  6A                 	db	106	;'j'
  1011  00FDB8  73                 	db	115	;'s'
  1012  00FDB9  6F                 	db	111	;'o'
  1013  00FDBA  6E                 	db	110	;'n'
  1014  00FDBB  2C                 	db	44
  1015  00FDBC  30                 	db	48	;'0'
  1016  00FDBD  2C                 	db	44
  1017  00FDBE  31                 	db	49	;'1'
  1018  00FDBF  30                 	db	48	;'0'
  1019  00FDC0  30                 	db	48	;'0'
  1020  00FDC1  30                 	db	48	;'0'
  1021  00FDC2  30                 	db	48	;'0'
  1022  00FDC3  30                 	db	48	;'0'
  1023  00FDC4  0D                 	db	13
  1024  00FDC5  00                 	db	0
  1025  00FDC6  50                 	db	80	;'P'
  1026  00FDC7  4F                 	db	79	;'O'
  1027  00FDC8  53                 	db	83	;'S'
  1028  00FDC9  54                 	db	84	;'T'
  1029  00FDCA  20                 	db	32
  1030  00FDCB  2F                 	db	47
  1031  00FDCC  73                 	db	115	;'s'
  1032  00FDCD  65                 	db	101	;'e'
  1033  00FDCE  72                 	db	114	;'r'
  1034  00FDCF  76                 	db	118	;'v'
  1035  00FDD0  69                 	db	105	;'i'
  1036  00FDD1  63                 	db	99	;'c'
  1037  00FDD2  65                 	db	101	;'e'
  1038  00FDD3  2F                 	db	47
  1039  00FDD4  74                 	db	116	;'t'
  1040  00FDD5  61                 	db	97	;'a'
  1041  00FDD6  73                 	db	115	;'s'
  1042  00FDD7  6B                 	db	107	;'k'
  1043  00FDD8  20                 	db	32
  1044  00FDD9  48                 	db	72	;'H'
  1045  00FDDA  54                 	db	84	;'T'
  1046  00FDDB  54                 	db	84	;'T'
  1047  00FDDC  50                 	db	80	;'P'
  1048  00FDDD  2F                 	db	47
  1049  00FDDE  31                 	db	49	;'1'
  1050  00FDDF  2E                 	db	46
  1051  00FDE0  31                 	db	49	;'1'
  1052  00FDE1  0D                 	db	13
  1053  00FDE2  0A                 	db	10
  1054  00FDE3  00                 	db	0
  1055  00FDE4                     STR_72:
  1056  00FDE4  41                 	db	65	;'A'
  1057  00FDE5  54                 	db	84	;'T'
  1058  00FDE6  2B                 	db	43
  1059  00FDE7  53                 	db	83	;'S'
  1060  00FDE8  2E                 	db	46
  1061  00FDE9  47                 	db	71	;'G'
  1062  00FDEA  43                 	db	67	;'C'
  1063  00FDEB  46                 	db	70	;'F'
  1064  00FDEC  47                 	db	71	;'G'
  1065  00FDED  3D                 	db	61	;'='
  1066  00FDEE  6E                 	db	110	;'n'
  1067  00FDEF  76                 	db	118	;'v'
  1068  00FDF0  5F                 	db	95	;'_'
  1069  00FDF1  77                 	db	119	;'w'
  1070  00FDF2  69                 	db	105	;'i'
  1071  00FDF3  66                 	db	102	;'f'
  1072  00FDF4  69                 	db	105	;'i'
  1073  00FDF5  5F                 	db	95	;'_'
  1074  00FDF6  6D                 	db	109	;'m'
  1075  00FDF7  61                 	db	97	;'a'
  1076  00FDF8  63                 	db	99	;'c'
  1077  00FDF9  61                 	db	97	;'a'
  1078  00FDFA  64                 	db	100	;'d'
  1079  00FDFB  64                 	db	100	;'d'
  1080  00FDFC  72                 	db	114	;'r'
  1081  00FDFD  0D                 	db	13
  1082  00FDFE  0A                 	db	10
  1083  00FDFF  00                 	db	0
  1084  00FE00                     STR_43:
  1085  00FE00  0D                 	db	13
  1086  00FE01  0A                 	db	10
  1087  00FE02  3E                 	db	62	;'>'
  1088  00FE03  3E                 	db	62	;'>'
  1089  00FE04  3E                 	db	62	;'>'
  1090  00FE05  3E                 	db	62	;'>'
  1091  00FE06  3E                 	db	62	;'>'
  1092  00FE07  3E                 	db	62	;'>'
  1093  00FE08  20                 	db	32
  1094  00FE09  4E                 	db	78	;'N'
  1095  00FE0A  6F                 	db	111	;'o'
  1096  00FE0B  20                 	db	32
  1097  00FE0C  49                 	db	73	;'I'
  1098  00FE0D  6E                 	db	110	;'n'
  1099  00FE0E  73                 	db	115	;'s'
  1100  00FE0F  74                 	db	116	;'t'
  1101  00FE10  72                 	db	114	;'r'
  1102  00FE11  75                 	db	117	;'u'
  1103  00FE12  63                 	db	99	;'c'
  1104  00FE13  74                 	db	116	;'t'
  1105  00FE14  69                 	db	105	;'i'
  1106  00FE15  6F                 	db	111	;'o'
  1107  00FE16  6E                 	db	110	;'n'
  1108  00FE17  73                 	db	115	;'s'
  1109  00FE18  0D                 	db	13
  1110  00FE19  0A                 	db	10
  1111  00FE1A  00                 	db	0
  1112  00FE1B                     STR_44:
  1113  00FE1B  0D                 	db	13
  1114  00FE1C  0A                 	db	10
  1115  00FE1D  2D                 	db	45
  1116  00FE1E  2D                 	db	45
  1117  00FE1F  46                 	db	70	;'F'
  1118  00FE20  52                 	db	82	;'R'
  1119  00FE21  41                 	db	65	;'A'
  1120  00FE22  4D                 	db	77	;'M'
  1121  00FE23  45                 	db	69	;'E'
  1122  00FE24  53                 	db	83	;'S'
  1123  00FE25  20                 	db	32
  1124  00FE26  52                 	db	82	;'R'
  1125  00FE27  45                 	db	69	;'E'
  1126  00FE28  43                 	db	67	;'C'
  1127  00FE29  45                 	db	69	;'E'
  1128  00FE2A  42                 	db	66	;'B'
  1129  00FE2B  49                 	db	73	;'I'
  1130  00FE2C  44                 	db	68	;'D'
  1131  00FE2D  4F                 	db	79	;'O'
  1132  00FE2E  53                 	db	83	;'S'
  1133  00FE2F  2D                 	db	45
  1134  00FE30  2D                 	db	45
  1135  00FE31  0D                 	db	13
  1136  00FE32  0A                 	db	10
  1137  00FE33  00                 	db	0
  1138  00FE34                     STR_34:
  1139  00FE34  41                 	db	65	;'A'
  1140  00FE35  54                 	db	84	;'T'
  1141  00FE36  2B                 	db	43
  1142  00FE37  53                 	db	83	;'S'
  1143  00FE38  2E                 	db	46
  1144  00FE39  46                 	db	70	;'F'
  1145  00FE3A  53                 	db	83	;'S'
  1146  00FE3B  50                 	db	80	;'P'
  1147  00FE3C  3D                 	db	61	;'='
  1148  00FE3D  72                 	db	114	;'r'
  1149  00FE3E  65                 	db	101	;'e'
  1150  00FE3F  74                 	db	116	;'t'
  1151  00FE40  6F                 	db	111	;'o'
  1152  00FE41  72                 	db	114	;'r'
  1153  00FE42  6E                 	db	110	;'n'
  1154  00FE43  6F                 	db	111	;'o'
  1155  00FE44  2E                 	db	46
  1156  00FE45  6A                 	db	106	;'j'
  1157  00FE46  73                 	db	115	;'s'
  1158  00FE47  6F                 	db	111	;'o'
  1159  00FE48  6E                 	db	110	;'n'
  1160  00FE49  2C                 	db	44
  1161  00FE4A  30                 	db	48	;'0'
  1162  00FE4B  2C                 	db	44
  1163  00FE4C  00                 	db	0
  1164  00FE4D                     STR_90:
  1165  00FE4D  43                 	db	67	;'C'
  1166  00FE4E  6F                 	db	111	;'o'
  1167  00FE4F  6E                 	db	110	;'n'
  1168  00FE50  74                 	db	116	;'t'
  1169  00FE51  65                 	db	101	;'e'
  1170  00FE52  6E                 	db	110	;'n'
  1171  00FE53  74                 	db	116	;'t'
  1172  00FE54  2D                 	db	45
  1173  00FE55  4C                 	db	76	;'L'
  1174  00FE56  65                 	db	101	;'e'
  1175  00FE57  6E                 	db	110	;'n'
  1176  00FE58  67                 	db	103	;'g'
  1177  00FE59  74                 	db	116	;'t'
  1178  00FE5A  68                 	db	104	;'h'
  1179  00FE5B  3A                 	db	58	;':'
  1180  00FE5C  20                 	db	32
  1181  00FE5D  31                 	db	49	;'1'
  1182  00FE5E  33                 	db	51	;'3'
  1183  00FE5F  31                 	db	49	;'1'
  1184  00FE60  0D                 	db	13
  1185  00FE61  0A                 	db	10
  1186  00FE62  0D                 	db	13
  1187  00FE63  0A                 	db	10
  1188  00FE64  00                 	db	0
  1189  00FE65                     STR_18:
  1190  00FE65  49                 	db	73	;'I'
  1191  00FE66  6E                 	db	110	;'n'
  1192  00FE67  69                 	db	105	;'i'
  1193  00FE68  63                 	db	99	;'c'
  1194  00FE69  69                 	db	105	;'i'
  1195  00FE6A  61                 	db	97	;'a'
  1196  00FE6B  5F                 	db	95	;'_'
  1197  00FE6C  41                 	db	65	;'A'
  1198  00FE6D  72                 	db	114	;'r'
  1199  00FE6E  71                 	db	113	;'q'
  1200  00FE6F  75                 	db	117	;'u'
  1201  00FE70  69                 	db	105	;'i'
  1202  00FE71  76                 	db	118	;'v'
  1203  00FE72  6F                 	db	111	;'o'
  1204  00FE73  5F                 	db	95	;'_'
  1205  00FE74  47                 	db	71	;'G'
  1206  00FE75  65                 	db	101	;'e'
  1207  00FE76  72                 	db	114	;'r'
  1208  00FE77  72                 	db	114	;'r'
  1209  00FE78  65                 	db	101	;'e'
  1210  00FE79  78                 	db	120	;'x'
  1211  00FE7A  0D                 	db	13
  1212  00FE7B  0A                 	db	10
  1213  00FE7C  00                 	db	0
  1214  00FE7D                     STR_17:
  1215  00FE7D  41                 	db	65	;'A'
  1216  00FE7E  54                 	db	84	;'T'
  1217  00FE7F  2B                 	db	43
  1218  00FE80  53                 	db	83	;'S'
  1219  00FE81  2E                 	db	46
  1220  00FE82  46                 	db	70	;'F'
  1221  00FE83  53                 	db	83	;'S'
  1222  00FE84  44                 	db	68	;'D'
  1223  00FE85  3D                 	db	61	;'='
  1224  00FE86  67                 	db	103	;'g'
  1225  00FE87  65                 	db	101	;'e'
  1226  00FE88  72                 	db	114	;'r'
  1227  00FE89  72                 	db	114	;'r'
  1228  00FE8A  65                 	db	101	;'e'
  1229  00FE8B  78                 	db	120	;'x'
  1230  00FE8C  2E                 	db	46
  1231  00FE8D  6A                 	db	106	;'j'
  1232  00FE8E  73                 	db	115	;'s'
  1233  00FE8F  6F                 	db	111	;'o'
  1234  00FE90  6E                 	db	110	;'n'
  1235  00FE91  0D                 	db	13
  1236  00FE92  00                 	db	0
  1237  00FE93                     STR_71:
  1238  00FE93  0D                 	db	13
  1239  00FE94  0A                 	db	10
  1240  00FE95  57                 	db	87	;'W'
  1241  00FE96  49                 	db	73	;'I'
  1242  00FE97  46                 	db	70	;'F'
  1243  00FE98  49                 	db	73	;'I'
  1244  00FE99  20                 	db	32
  1245  00FE9A  4F                 	db	79	;'O'
  1246  00FE9B  4B                 	db	75	;'K'
  1247  00FE9C  20                 	db	32
  1248  00FE9D  2D                 	db	45
  1249  00FE9E  20                 	db	32
  1250  00FE9F  49                 	db	73	;'I'
  1251  00FEA0  50                 	db	80	;'P'
  1252  00FEA1  20                 	db	32
  1253  00FEA2  4F                 	db	79	;'O'
  1254  00FEA3  4B                 	db	75	;'K'
  1255  00FEA4  0D                 	db	13
  1256  00FEA5  0A                 	db	10
  1257  00FEA6  00                 	db	0
  1258  00FEA7  41                 	db	65	;'A'
  1259  00FEA8  54                 	db	84	;'T'
  1260  00FEA9  2B                 	db	43
  1261  00FEAA  53                 	db	83	;'S'
  1262  00FEAB  2E                 	db	46
  1263  00FEAC  53                 	db	83	;'S'
  1264  00FEAD  4F                 	db	79	;'O'
  1265  00FEAE  43                 	db	67	;'C'
  1266  00FEAF  4B                 	db	75	;'K'
  1267  00FEB0  57                 	db	87	;'W'
  1268  00FEB1  3D                 	db	61	;'='
  1269  00FEB2  30                 	db	48	;'0'
  1270  00FEB3  30                 	db	48	;'0'
  1271  00FEB4  2C                 	db	44
  1272  00FEB5  32                 	db	50	;'2'
  1273  00FEB6  35                 	db	53	;'5'
  1274  00FEB7  37                 	db	55	;'7'
  1275  00FEB8  0D                 	db	13
  1276  00FEB9  00                 	db	0
  1277  00FEBA                     STR_1:
  1278  00FEBA  0D                 	db	13
  1279  00FEBB  0A                 	db	10
  1280  00FEBC  0D                 	db	13
  1281  00FEBD  0A                 	db	10
  1282  00FEBE  0D                 	db	13
  1283  00FEBF  0A                 	db	10
  1284  00FEC0  50                 	db	80	;'P'
  1285  00FEC1  43                 	db	67	;'C'
  1286  00FEC2  4F                 	db	79	;'O'
  1287  00FEC3  4E                 	db	78	;'N'
  1288  00FEC4  30                 	db	48	;'0'
  1289  00FEC5  20                 	db	32
  1290  00FEC6  3E                 	db	62	;'>'
  1291  00FEC7  25                 	db	37
  1292  00FEC8  69                 	db	105	;'i'
  1293  00FEC9  0D                 	db	13
  1294  00FECA  0A                 	db	10
  1295  00FECB  00                 	db	0
  1296  00FECC                     STR_109:
  1297  00FECC  30                 	db	48	;'0'
  1298  00FECD  31                 	db	49	;'1'
  1299  00FECE  32                 	db	50	;'2'
  1300  00FECF  33                 	db	51	;'3'
  1301  00FED0  34                 	db	52	;'4'
  1302  00FED1  35                 	db	53	;'5'
  1303  00FED2  36                 	db	54	;'6'
  1304  00FED3  37                 	db	55	;'7'
  1305  00FED4  38                 	db	56	;'8'
  1306  00FED5  39                 	db	57	;'9'
  1307  00FED6  61                 	db	97	;'a'
  1308  00FED7  62                 	db	98	;'b'
  1309  00FED8  63                 	db	99	;'c'
  1310  00FED9  64                 	db	100	;'d'
  1311  00FEDA  65                 	db	101	;'e'
  1312  00FEDB  66                 	db	102	;'f'
  1313  00FEDC  00                 	db	0
  1314  00FEDD  0D                 	db	13
  1315  00FEDE  0A                 	db	10
  1316  00FEDF  45                 	db	69	;'E'
  1317  00FEE0  6E                 	db	110	;'n'
  1318  00FEE1  76                 	db	118	;'v'
  1319  00FEE2  69                 	db	105	;'i'
  1320  00FEE3  61                 	db	97	;'a'
  1321  00FEE4  6E                 	db	110	;'n'
  1322  00FEE5  64                 	db	100	;'d'
  1323  00FEE6  6F                 	db	111	;'o'
  1324  00FEE7  2D                 	db	45
  1325  00FEE8  2D                 	db	45
  1326  00FEE9  2D                 	db	45
  1327  00FEEA  3E                 	db	62	;'>'
  1328  00FEEB  0D                 	db	13
  1329  00FEEC  0A                 	db	10
  1330  00FEED  00                 	db	0
  1331  00FEEE                     STR_73:
  1332  00FEEE  6E                 	db	110	;'n'
  1333  00FEEF  76                 	db	118	;'v'
  1334  00FEF0  5F                 	db	95	;'_'
  1335  00FEF1  77                 	db	119	;'w'
  1336  00FEF2  69                 	db	105	;'i'
  1337  00FEF3  66                 	db	102	;'f'
  1338  00FEF4  69                 	db	105	;'i'
  1339  00FEF5  5F                 	db	95	;'_'
  1340  00FEF6  6D                 	db	109	;'m'
  1341  00FEF7  61                 	db	97	;'a'
  1342  00FEF8  63                 	db	99	;'c'
  1343  00FEF9  61                 	db	97	;'a'
  1344  00FEFA  64                 	db	100	;'d'
  1345  00FEFB  64                 	db	100	;'d'
  1346  00FEFC  72                 	db	114	;'r'
  1347  00FEFD  3D                 	db	61	;'='
  1348  00FEFE  00                 	db	0
  1349  00FEFF  41                 	db	65	;'A'
  1350  00FF00  54                 	db	84	;'T'
  1351  00FF01  2B                 	db	43
  1352  00FF02  53                 	db	83	;'S'
  1353  00FF03  2E                 	db	46
  1354  00FF04  53                 	db	83	;'S'
  1355  00FF05  4F                 	db	79	;'O'
  1356  00FF06  43                 	db	67	;'C'
  1357  00FF07  4B                 	db	75	;'K'
  1358  00FF08  51                 	db	81	;'Q'
  1359  00FF09  3D                 	db	61	;'='
  1360  00FF0A  30                 	db	48	;'0'
  1361  00FF0B  30                 	db	48	;'0'
  1362  00FF0C  0D                 	db	13
  1363  00FF0D  00                 	db	0
  1364  00FF0E                     STR_103:
  1365  00FF0E  41                 	db	65	;'A'
  1366  00FF0F  54                 	db	84	;'T'
  1367  00FF10  2B                 	db	43
  1368  00FF11  53                 	db	83	;'S'
  1369  00FF12  2E                 	db	46
  1370  00FF13  53                 	db	83	;'S'
  1371  00FF14  4F                 	db	79	;'O'
  1372  00FF15  43                 	db	67	;'C'
  1373  00FF16  4B                 	db	75	;'K'
  1374  00FF17  52                 	db	82	;'R'
  1375  00FF18  3D                 	db	61	;'='
  1376  00FF19  30                 	db	48	;'0'
  1377  00FF1A  30                 	db	48	;'0'
  1378  00FF1B  2C                 	db	44
  1379  00FF1C  00                 	db	0
  1380  00FF1D                     STR_107:
  1381  00FF1D  25                 	db	37
  1382  00FF1E  69                 	db	105	;'i'
  1383  00FF1F  20                 	db	32
  1384  00FF20  2D                 	db	45
  1385  00FF21  3E                 	db	62	;'>'
  1386  00FF22  20                 	db	32
  1387  00FF23  25                 	db	37
  1388  00FF24  69                 	db	105	;'i'
  1389  00FF25  20                 	db	32
  1390  00FF26  7C                 	db	124
  1391  00FF27  20                 	db	32
  1392  00FF28  0D                 	db	13
  1393  00FF29  0A                 	db	10
  1394  00FF2A  00                 	db	0
  1395  00FF2B                     STR_2:
  1396  00FF2B  50                 	db	80	;'P'
  1397  00FF2C  43                 	db	67	;'C'
  1398  00FF2D  4F                 	db	79	;'O'
  1399  00FF2E  4E                 	db	78	;'N'
  1400  00FF2F  30                 	db	48	;'0'
  1401  00FF30  31                 	db	49	;'1'
  1402  00FF31  20                 	db	32
  1403  00FF32  3E                 	db	62	;'>'
  1404  00FF33  25                 	db	37
  1405  00FF34  69                 	db	105	;'i'
  1406  00FF35  0D                 	db	13
  1407  00FF36  0A                 	db	10
  1408  00FF37  00                 	db	0
  1409  00FF38                     STR_8:
  1410  00FF38  67                 	db	103	;'g'
  1411  00FF39  65                 	db	101	;'e'
  1412  00FF3A  72                 	db	114	;'r'
  1413  00FF3B  72                 	db	114	;'r'
  1414  00FF3C  65                 	db	101	;'e'
  1415  00FF3D  78                 	db	120	;'x'
  1416  00FF3E  2E                 	db	46
  1417  00FF3F  6A                 	db	106	;'j'
  1418  00FF40  73                 	db	115	;'s'
  1419  00FF41  6F                 	db	111	;'o'
  1420  00FF42  6E                 	db	110	;'n'
  1421  00FF43  00                 	db	0
  1422  00FF44                     STR_69:
  1423  00FF44  0D                 	db	13
  1424  00FF45  0A                 	db	10
  1425  00FF46  0D                 	db	13
  1426  00FF47  0A                 	db	10
  1427  00FF48  3E                 	db	62	;'>'
  1428  00FF49  4D                 	db	77	;'M'
  1429  00FF4A  41                 	db	65	;'A'
  1430  00FF4B  43                 	db	67	;'C'
  1431  00FF4C  3A                 	db	58	;':'
  1432  00FF4D  20                 	db	32
  1433  00FF4E  00                 	db	0
  1434  00FF4F                     STR_48:
  1435  00FF4F  48                 	db	72	;'H'
  1436  00FF50  54                 	db	84	;'T'
  1437  00FF51  54                 	db	84	;'T'
  1438  00FF52  50                 	db	80	;'P'
  1439  00FF53  2F                 	db	47
  1440  00FF54  31                 	db	49	;'1'
  1441  00FF55  2E                 	db	46
  1442  00FF56  31                 	db	49	;'1'
  1443  00FF57  20                 	db	32
  1444  00FF58  00                 	db	0
  1445  00FF59  44                 	db	68	;'D'
  1446  00FF5A  41                 	db	65	;'A'
  1447  00FF5B  54                 	db	84	;'T'
  1448  00FF5C  41                 	db	65	;'A'
  1449  00FF5D  4C                 	db	76	;'L'
  1450  00FF5E  45                 	db	69	;'E'
  1451  00FF5F  4E                 	db	78	;'N'
  1452  00FF60  3A                 	db	58	;':'
  1453  00FF61  20                 	db	32
  1454  00FF62  00                 	db	0
  1455  00FF63                     STR_25:
  1456  00FF63  50                 	db	80	;'P'
  1457  00FF64  6F                 	db	111	;'o'
  1458  00FF65  73                 	db	115	;'s'
  1459  00FF66  74                 	db	116	;'t'
  1460  00FF67  2E                 	db	46
  1461  00FF68  2E                 	db	46
  1462  00FF69  2E                 	db	46
  1463  00FF6A  0D                 	db	13
  1464  00FF6B  0A                 	db	10
  1465  00FF6C  00                 	db	0
  1466  00FF6D                     STR_36:
  1467  00FF6D  52                 	db	82	;'R'
  1468  00FF6E  65                 	db	101	;'e'
  1469  00FF6F  61                 	db	97	;'a'
  1470  00FF70  64                 	db	100	;'d'
  1471  00FF71  20                 	db	32
  1472  00FF72  43                 	db	67	;'C'
  1473  00FF73  61                 	db	97	;'a'
  1474  00FF74  70                 	db	112	;'p'
  1475  00FF75  3A                 	db	58	;':'
  1476  00FF76  00                 	db	0
  1477  00FF77                     STR_6:
  1478  00FF77  41                 	db	65	;'A'
  1479  00FF78  54                 	db	84	;'T'
  1480  00FF79  2B                 	db	43
  1481  00FF7A  53                 	db	83	;'S'
  1482  00FF7B  2E                 	db	46
  1483  00FF7C  46                 	db	70	;'F'
  1484  00FF7D  53                 	db	83	;'S'
  1485  00FF7E  43                 	db	67	;'C'
  1486  00FF7F  3D                 	db	61	;'='
  1487  00FF80  00                 	db	0
  1488  00FF81                     STR_3:
  1489  00FF81  57                 	db	87	;'W'
  1490  00FF82  69                 	db	105	;'i'
  1491  00FF83  46                 	db	70	;'F'
  1492  00FF84  69                 	db	105	;'i'
  1493  00FF85  20                 	db	32
  1494  00FF86  55                 	db	85	;'U'
  1495  00FF87  70                 	db	112	;'p'
  1496  00FF88  3A                 	db	58	;':'
  1497  00FF89  30                 	db	48	;'0'
  1498  00FF8A  00                 	db	0
  1499  00FF8B                     STR_51:
  1500  00FF8B  6D                 	db	109	;'m'
  1501  00FF8C  65                 	db	101	;'e'
  1502  00FF8D  49                 	db	73	;'I'
  1503  00FF8E  64                 	db	100	;'d'
  1504  00FF8F  22                 	db	34
  1505  00FF90  3A                 	db	58	;':'
  1506  00FF91  22                 	db	34
  1507  00FF92  00                 	db	0
  1508  00FF93                     STR_108:
  1509  00FF93  28                 	db	40
  1510  00FF94  6E                 	db	110	;'n'
  1511  00FF95  75                 	db	117	;'u'
  1512  00FF96  6C                 	db	108	;'l'
  1513  00FF97  6C                 	db	108	;'l'
  1514  00FF98  29                 	db	41
  1515  00FF99  00                 	db	0
  1516  00FF9A                     STR_82:
  1517  00FF9A  5C                 	db	92	;'\'
  1518  00FF9B  30                 	db	48	;'0'
  1519  00FF9C  5C                 	db	92	;'\'
  1520  00FF9D  30                 	db	48	;'0'
  1521  00FF9E  5C                 	db	92	;'\'
  1522  00FF9F  30                 	db	48	;'0'
  1523  00FFA0  00                 	db	0
  1524  00FFA1                     STR_54:
  1525  00FFA1  72                 	db	114	;'r'
  1526  00FFA2  6B                 	db	107	;'k'
  1527  00FFA3  49                 	db	73	;'I'
  1528  00FFA4  64                 	db	100	;'d'
  1529  00FFA5  22                 	db	34
  1530  00FFA6  3A                 	db	58	;':'
  1531  00FFA7  00                 	db	0
  1532  00FFA8                     STR_60:
  1533  00FFA8  43                 	db	67	;'C'
  1534  00FFA9  6F                 	db	111	;'o'
  1535  00FFAA  64                 	db	100	;'d'
  1536  00FFAB  65                 	db	101	;'e'
  1537  00FFAC  22                 	db	34
  1538  00FFAD  3A                 	db	58	;':'
  1539  00FFAE  00                 	db	0
  1540  00FFAF                     STR_92:
  1541  00FFAF  2B                 	db	43
  1542  00FFB0  57                 	db	87	;'W'
  1543  00FFB1  49                 	db	73	;'I'
  1544  00FFB2  4E                 	db	78	;'N'
  1545  00FFB3  44                 	db	68	;'D'
  1546  00FFB4  3A                 	db	58	;':'
  1547  00FFB5  00                 	db	0
  1548  00FFB6                     STR_75:
  1549  00FFB6  45                 	db	69	;'E'
  1550  00FFB7  52                 	db	82	;'R'
  1551  00FFB8  52                 	db	82	;'R'
  1552  00FFB9  4F                 	db	79	;'O'
  1553  00FFBA  52                 	db	82	;'R'
  1554  00FFBB  3A                 	db	58	;':'
  1555  00FFBC  00                 	db	0
  1556  00FFBD                     STR_57:
  1557  00FFBD  65                 	db	101	;'e'
  1558  00FFBE  49                 	db	73	;'I'
  1559  00FFBF  64                 	db	100	;'d'
  1560  00FFC0  22                 	db	34
  1561  00FFC1  3A                 	db	58	;':'
  1562  00FFC2  00                 	db	0
  1563  00FFC3                     STR_63:
  1564  00FFC3  65                 	db	101	;'e'
  1565  00FFC4  73                 	db	115	;'s'
  1566  00FFC5  73                 	db	115	;'s'
  1567  00FFC6  22                 	db	34
  1568  00FFC7  3A                 	db	58	;':'
  1569  00FFC8  00                 	db	0
  1570  00FFC9                     STR_12:
  1571  00FFC9  66                 	db	102	;'f'
  1572  00FFCA  61                 	db	97	;'a'
  1573  00FFCB  6C                 	db	108	;'l'
  1574  00FFCC  73                 	db	115	;'s'
  1575  00FFCD  65                 	db	101	;'e'
  1576  00FFCE  00                 	db	0
  1577  00FFCF                     STR_10:
  1578  00FFCF  25                 	db	37
  1579  00FFD0  30                 	db	48	;'0'
  1580  00FFD1  38                 	db	56	;'8'
  1581  00FFD2  6C                 	db	108	;'l'
  1582  00FFD3  78                 	db	120	;'x'
  1583  00FFD4  00                 	db	0
  1584  00FFD5                     STR_7:
  1585  00FFD5  2C                 	db	44
  1586  00FFD6  25                 	db	37
  1587  00FFD7  69                 	db	105	;'i'
  1588  00FFD8  0D                 	db	13
  1589  00FFD9  00                 	db	0
  1590  00FFDA                     STR_11:
  1591  00FFDA  74                 	db	116	;'t'
  1592  00FFDB  72                 	db	114	;'r'
  1593  00FFDC  75                 	db	117	;'u'
  1594  00FFDD  65                 	db	101	;'e'
  1595  00FFDE  00                 	db	0
  1596  00FFDF                     STR_95:
  1597  00FFDF  3A                 	db	58	;':'
  1598  00FFE0  30                 	db	48	;'0'
  1599  00FFE1  3A                 	db	58	;':'
  1600  00FFE2  00                 	db	0
  1601  00FFE3                     STR_16:
  1602  00FFE3  5D                 	db	93	;']'
  1603  00FFE4  7D                 	db	125
  1604  00FFE5  0D                 	db	13
  1605  00FFE6  00                 	db	0
  1606  00FFE7                     STR_80:
  1607  00FFE7  4B                 	db	75	;'K'
  1608  00FFE8  0D                 	db	13
  1609  00FFE9  00                 	db	0
  1610  00FFEA                     STR_52:
  1611  00FFEA  22                 	db	34
  1612  00FFEB  2C                 	db	44
  1613  00FFEC  00                 	db	0
  1614  00FFED                     STR_76:
  1615  00FFED  25                 	db	37
  1616  00FFEE  73                 	db	115	;'s'
  1617  00FFEF  00                 	db	0
  1618  00FFF0                     STR_28:
  1619  00FFF0  4F                 	db	79	;'O'
  1620  00FFF1  4B                 	db	75	;'K'
  1621  00FFF2  00                 	db	0
  1622  00FFF3                     STR_19:
  1623  00FFF3  2D                 	db	45
  1624  00FFF4  53                 	db	83	;'S'
  1625  00FFF5  00                 	db	0
  1626  00FFF6                     STR_27:
  1627  00FFF6  41                 	db	65	;'A'
  1628  00FFF7  54                 	db	84	;'T'
  1629  00FFF8  00                 	db	0
  1630  00FFF9                     STR_98:
  1631  00FFF9  23                 	db	35
  1632  00FFFA  00                 	db	0
  1633  00FFFB                     STR_79:
  1634  00FFFB  41                 	db	65	;'A'
  1635  00FFFC  00                 	db	0
  1636  00FFFD                     STR_22:
  1637  00FFFD  2A                 	db	42
  1638  00FFFE  00                 	db	0
  1639  0000                     
  1640                           ; #config settings
  1641  00FFFF  00                 	db	0	; dummy byte at the end
  1642  0000                     
  1643                           	psect	nvBANK2
  1644  0002FE                     __pnvBANK2:
  1645                           	opt stack 0
  1646  0002FE                     _Postando:
  1647                           	opt stack 0
  1648  0002FE                     	ds	2
  1649  0000                     _PIE6bits	set	14742
  1650  0000                     _PIE3bits	set	14739
  1651  0000                     _BORCONbits	set	14800
  1652  0000                     _WDTCON0bits	set	14683
  1653  0000                     _U2RXIF	set	118066
  1654  0000                     _U1RXIF	set	118043
  1655  0000                     _ANSELAbits	set	14912
  1656  0000                     _ANSELEbits	set	14976
  1657  0000                     _PPSLOCK	set	15039
  1658  0000                     _ANSELBbits	set	14928
  1659  0000                     _U2RXPPS	set	15080
  1660  0000                     _RB1PPS	set	14857
  1661  0000                     _RC5PPS	set	14869
  1662  0000                     _ANSELCbits	set	14944
  1663  0000                     _U1RXPPS	set	15077
  1664  0000                     _RC0PPS	set	14864
  1665  0000                     _ANSELDbits	set	14960
  1666  0000                     _U2TXB	set	15826
  1667  0000                     _U2ERRIRbits	set	15841
  1668  0000                     _U1TXB	set	15850
  1669  0000                     _U1ERRIRbits	set	15865
  1670  0000                     _U2RXB	set	15824
  1671  0000                     _U1RXB	set	15848
  1672  0000                     _U2CON1bits	set	15835
  1673  0000                     _U2CON0bits	set	15834
  1674  0000                     _U2BRGL	set	15837
  1675  0000                     _U2BRGH	set	15838
  1676  0000                     _U1CON1bits	set	15859
  1677  0000                     _U1BRGL	set	15861
  1678  0000                     _U1BRGH	set	15862
  1679  0000                     _U1CON0bits	set	15858
  1680  0000                     _ADRESL	set	16111
  1681  0000                     _ADRESH	set	16112
  1682  0000                     _ADPCH	set	16113
  1683  0000                     _ADREFbits	set	16125
  1684  0000                     _ADCON0bits	set	16120
  1685  0000                     _ADCLKbits	set	16127
  1686  0000                     _ADACQH	set	16116
  1687  0000                     _ADACQL	set	16115
  1688  0000                     _ADPREL	set	16118
  1689  0000                     _ADPREH	set	16119
  1690  0000                     _ADCAP	set	16117
  1691  0000                     _FVRCONbits	set	16065
  1692  0000                     _LATAbits	set	16314
  1693  0000                     _TRISAbits	set	16322
  1694  0000                     _TRISEbits	set	16326
  1695  0000                     _TRISBbits	set	16323
  1696  0000                     _TRISCbits	set	16324
  1697  0000                     _PORTEbits	set	16334
  1698  0000                     _PORTAbits	set	16330
  1699  0000                     _LATEbits	set	16318
  1700  0000                     _PORTBbits	set	16331
  1701  0000                     _PCON1	set	16369
  1702  0000                     _PCON0	set	16368
  1703  0000                     _LATDbits	set	16317
  1704  0000                     _TRISDbits	set	16325
  1705  0000                     _LATFbits	set	16319
  1706  0000                     _TRISFbits	set	16327
  1707  0000                     _INTCON0bits	set	16338
  1708                           
  1709                           	psect	cinit
  1710  006008                     __pcinit:
  1711                           	opt stack 0
  1712  006008                     start_initialization:
  1713                           	opt stack 0
  1714  006008                     __initialization:
  1715                           	opt stack 0
  1716                           
  1717                           ; Initialize objects allocated to BANK3 (14 bytes)
  1718                           ; load TBLPTR registers with __pidataBANK3
  1719  006008  0ECC               	movlw	low __pidataBANK3
  1720  00600A  6EF6               	movwf	16374,c
  1721  00600C  0E8A               	movlw	high __pidataBANK3
  1722  00600E  6EF7               	movwf	16375,c
  1723  006010  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1724  006012  6EF8               	movwf	16376,c
  1725  006014  EE00  F3F2         	lfsr	0,__pdataBANK3
  1726  006018  EE10 F00E          	lfsr	1,14
  1727  00601C                     copy_data0:
  1728  00601C  0009               	tblrd		*+
  1729  00601E  006F FFD7 FFEE     	movff	16373,16366
  1730  006024  50E5               	movf	16357,w,c
  1731  006026  50E1               	movf	16353,w,c
  1732  006028  E1F9               	bnz	copy_data0
  1733                           
  1734                           ; Initialize objects allocated to BANK2 (9 bytes)
  1735                           ; load TBLPTR registers with __pidataBANK2
  1736  00602A  0EDA               	movlw	low __pidataBANK2
  1737  00602C  6EF6               	movwf	16374,c
  1738  00602E  0E8A               	movlw	high __pidataBANK2
  1739  006030  6EF7               	movwf	16375,c
  1740  006032  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1741  006034  6EF8               	movwf	16376,c
  1742  006036  EE00  F2F5         	lfsr	0,__pdataBANK2
  1743  00603A  EE10 F009          	lfsr	1,9
  1744  00603E                     copy_data1:
  1745  00603E  0009               	tblrd		*+
  1746  006040  006F FFD7 FFEE     	movff	16373,16366
  1747  006046  50E5               	movf	16357,w,c
  1748  006048  50E1               	movf	16353,w,c
  1749  00604A  E1F9               	bnz	copy_data1
  1750                           
  1751                           ; Initialize objects allocated to BANK1 (18 bytes)
  1752                           ; load TBLPTR registers with __pidataBANK1
  1753  00604C  0EBA               	movlw	low __pidataBANK1
  1754  00604E  6EF6               	movwf	16374,c
  1755  006050  0E8A               	movlw	high __pidataBANK1
  1756  006052  6EF7               	movwf	16375,c
  1757  006054  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1758  006056  6EF8               	movwf	16376,c
  1759  006058  EE00  F1CD         	lfsr	0,__pdataBANK1
  1760  00605C  EE10 F012          	lfsr	1,18
  1761  006060                     copy_data2:
  1762  006060  0009               	tblrd		*+
  1763  006062  006F FFD7 FFEE     	movff	16373,16366
  1764  006068  50E5               	movf	16357,w,c
  1765  00606A  50E1               	movf	16353,w,c
  1766  00606C  E1F9               	bnz	copy_data2
  1767                           
  1768                           ; Initialize objects allocated to BANK0 (22 bytes)
  1769                           ; load TBLPTR registers with __pidataBANK0
  1770  00606E  0EA4               	movlw	low __pidataBANK0
  1771  006070  6EF6               	movwf	16374,c
  1772  006072  0E8A               	movlw	high __pidataBANK0
  1773  006074  6EF7               	movwf	16375,c
  1774  006076  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1775  006078  6EF8               	movwf	16376,c
  1776  00607A  EE00  F0E8         	lfsr	0,__pdataBANK0
  1777  00607E  EE10 F016          	lfsr	1,22
  1778  006082                     copy_data3:
  1779  006082  0009               	tblrd		*+
  1780  006084  006F FFD7 FFEE     	movff	16373,16366
  1781  00608A  50E5               	movf	16357,w,c
  1782  00608C  50E1               	movf	16353,w,c
  1783  00608E  E1F9               	bnz	copy_data3
  1784                           
  1785                           ; Clear objects allocated to BIGRAM (1110 bytes)
  1786  006090  EE02  F296         	lfsr	0,__pbssBIGRAM
  1787  006094  EE11 F056          	lfsr	1,1110
  1788  006098                     clear_0:
  1789  006098  6AEE               	clrf	16366,c
  1790  00609A  50E5               	movf	16357,w,c
  1791  00609C  50E1               	movf	16353,w,c
  1792  00609E  E1FC               	bnz	clear_0
  1793  0060A0  50E2               	movf	16354,w,c
  1794  0060A2  E1FA               	bnz	clear_0
  1795                           
  1796                           ; Clear objects allocated to BANK10 (150 bytes)
  1797  0060A4  EE02  F200         	lfsr	0,__pbssBANK10
  1798  0060A8  0E96               	movlw	150
  1799  0060AA                     clear_1:
  1800  0060AA  6AEE               	clrf	16366,c
  1801  0060AC  06E8               	decf	16360,f,c
  1802  0060AE  E1FD               	bnz	clear_1
  1803                           
  1804                           ; Clear objects allocated to BANK9 (150 bytes)
  1805  0060B0  EE02  F100         	lfsr	0,__pbssBANK9
  1806  0060B4  0E96               	movlw	150
  1807  0060B6                     clear_2:
  1808  0060B6  6AEE               	clrf	16366,c
  1809  0060B8  06E8               	decf	16360,f,c
  1810  0060BA  E1FD               	bnz	clear_2
  1811                           
  1812                           ; Clear objects allocated to BANK8 (120 bytes)
  1813  0060BC  EE02  F000         	lfsr	0,__pbssBANK8
  1814  0060C0  0E78               	movlw	120
  1815  0060C2                     clear_3:
  1816  0060C2  6AEE               	clrf	16366,c
  1817  0060C4  06E8               	decf	16360,f,c
  1818  0060C6  E1FD               	bnz	clear_3
  1819                           
  1820                           ; Clear objects allocated to BANK7 (150 bytes)
  1821  0060C8  EE01  F300         	lfsr	0,__pbssBANK7
  1822  0060CC  0E96               	movlw	150
  1823  0060CE                     clear_4:
  1824  0060CE  6AEE               	clrf	16366,c
  1825  0060D0  06E8               	decf	16360,f,c
  1826  0060D2  E1FD               	bnz	clear_4
  1827                           
  1828                           ; Clear objects allocated to BANK6 (150 bytes)
  1829  0060D4  EE01  F200         	lfsr	0,__pbssBANK6
  1830  0060D8  0E96               	movlw	150
  1831  0060DA                     clear_5:
  1832  0060DA  6AEE               	clrf	16366,c
  1833  0060DC  06E8               	decf	16360,f,c
  1834  0060DE  E1FD               	bnz	clear_5
  1835                           
  1836                           ; Clear objects allocated to BANK5 (220 bytes)
  1837  0060E0  EE01  F100         	lfsr	0,__pbssBANK5
  1838  0060E4  0EDC               	movlw	220
  1839  0060E6                     clear_6:
  1840  0060E6  6AEE               	clrf	16366,c
  1841  0060E8  06E8               	decf	16360,f,c
  1842  0060EA  E1FD               	bnz	clear_6
  1843                           
  1844                           ; Clear objects allocated to BANK4 (240 bytes)
  1845  0060EC  EE01  F000         	lfsr	0,__pbssBANK4
  1846  0060F0  0EF0               	movlw	240
  1847  0060F2                     clear_7:
  1848  0060F2  6AEE               	clrf	16366,c
  1849  0060F4  06E8               	decf	16360,f,c
  1850  0060F6  E1FD               	bnz	clear_7
  1851                           
  1852                           ; Clear objects allocated to BANK3 (218 bytes)
  1853  0060F8  EE00  F300         	lfsr	0,__pbssBANK3
  1854  0060FC  0EDA               	movlw	218
  1855  0060FE                     clear_8:
  1856  0060FE  6AEE               	clrf	16366,c
  1857  006100  06E8               	decf	16360,f,c
  1858  006102  E1FD               	bnz	clear_8
  1859                           
  1860                           ; Clear objects allocated to BANK2 (97 bytes)
  1861  006104  EE00  F294         	lfsr	0,__pbssBANK2
  1862  006108  0E61               	movlw	97
  1863  00610A                     clear_9:
  1864  00610A  6AEE               	clrf	16366,c
  1865  00610C  06E8               	decf	16360,f,c
  1866  00610E  E1FD               	bnz	clear_9
  1867                           
  1868                           ; Clear objects allocated to BANK1 (14 bytes)
  1869  006110  EE00  F1DF         	lfsr	0,__pbssBANK1
  1870  006114  0E0E               	movlw	14
  1871  006116                     clear_10:
  1872  006116  6AEE               	clrf	16366,c
  1873  006118  06E8               	decf	16360,f,c
  1874  00611A  E1FD               	bnz	clear_10
  1875                           
  1876                           ; Clear objects allocated to BANK0 (32 bytes)
  1877  00611C  EE00  F0C8         	lfsr	0,__pbssBANK0
  1878  006120  0E20               	movlw	32
  1879  006122                     clear_11:
  1880  006122  6AEE               	clrf	16366,c
  1881  006124  06E8               	decf	16360,f,c
  1882  006126  E1FD               	bnz	clear_11
  1883                           
  1884                           ; Clear objects allocated to COMRAM (3 bytes)
  1885  006128  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1886  00612A  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1887  00612C  6A5A               	clrf	__pbssCOMRAM& (0+255),c
  1888                           
  1889                           ;
  1890                           ; Setup IVTBASE
  1891                           ;
  1892  00612E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1893  006130  6ED5               	movwf	213,c
  1894  006132  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1895  006134  6ED6               	movwf	214,c
  1896  006136  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1897  006138  6ED7               	movwf	215,c
  1898  00613A                     end_of_initialization:
  1899                           	opt stack 0
  1900  00613A                     __end_of__initialization:
  1901                           	opt stack 0
  1902  00613A  0100               	movlb	0
  1903  00613C  EF03  F022         	goto	_main	;jump to C main() function
  1904                           
  1905                           	psect	bssCOMRAM
  1906  00005A                     __pbssCOMRAM:
  1907                           	opt stack 0
  1908  00005A                     _index:
  1909                           	opt stack 0
  1910  00005A                     	ds	2
  1911  00005C                     _HighCRC:
  1912                           	opt stack 0
  1913  00005C                     	ds	1
  1914                           
  1915                           	psect	bssBANK0
  1916  0000C8                     __pbssBANK0:
  1917                           	opt stack 0
  1918  0000C8                     _sample_result:
  1919                           	opt stack 0
  1920  0000C8                     	ds	4
  1921  0000CC                     _m:
  1922                           	opt stack 0
  1923  0000CC                     	ds	3
  1924  0000CF                     _Max_Entrada:
  1925                           	opt stack 0
  1926  0000CF                     	ds	2
  1927  0000D1                     _Max_Saida:
  1928                           	opt stack 0
  1929  0000D1                     	ds	2
  1930  0000D3                     _b:
  1931                           	opt stack 0
  1932  0000D3                     	ds	2
  1933  0000D5                     _ponteiro:
  1934                           	opt stack 0
  1935  0000D5                     	ds	2
  1936  0000D7                     _valor:
  1937                           	opt stack 0
  1938  0000D7                     	ds	2
  1939  0000D9                     _ponteiroFrames:
  1940                           	opt stack 0
  1941  0000D9                     	ds	2
  1942  0000DB                     _Ponteiro_FIM:
  1943                           	opt stack 0
  1944  0000DB                     	ds	2
  1945  0000DD                     _Ponteiro_ERRO:
  1946                           	opt stack 0
  1947  0000DD                     	ds	2
  1948  0000DF                     _Aguarda_str_OK:
  1949                           	opt stack 0
  1950  0000DF                     	ds	2
  1951  0000E1                     _Aguarda_End_Ponteiro:
  1952                           	opt stack 0
  1953  0000E1                     	ds	2
  1954  0000E3                     _Aguarda_Ponteiro:
  1955                           	opt stack 0
  1956  0000E3                     	ds	2
  1957  0000E5                     _LowCRC:
  1958                           	opt stack 0
  1959  0000E5                     	ds	1
  1960  0000E6                     _strBuffer:
  1961                           	opt stack 0
  1962  0000E6                     	ds	2
  1963                           
  1964                           	psect	dataBANK0
  1965  0000E8                     __pdataBANK0:
  1966                           	opt stack 0
  1967  0000E8                     _Max_Entrada10:
  1968                           	opt stack 0
  1969  0000E8                     	ds	2
  1970  0000EA                     _Max_Saida9:
  1971                           	opt stack 0
  1972  0000EA                     	ds	2
  1973  0000EC                     _Max_Saida8:
  1974                           	opt stack 0
  1975  0000EC                     	ds	2
  1976  0000EE                     _Max_Saida7:
  1977                           	opt stack 0
  1978  0000EE                     	ds	2
  1979  0000F0                     _Max_Saida6:
  1980                           	opt stack 0
  1981  0000F0                     	ds	2
  1982  0000F2                     _Max_Saida5:
  1983                           	opt stack 0
  1984  0000F2                     	ds	2
  1985  0000F4                     _Max_Saida4:
  1986                           	opt stack 0
  1987  0000F4                     	ds	2
  1988  0000F6                     _Max_Saida3:
  1989                           	opt stack 0
  1990  0000F6                     	ds	2
  1991  0000F8                     _Max_Saida2:
  1992                           	opt stack 0
  1993  0000F8                     	ds	2
  1994  0000FA                     _Min_Entrada1:
  1995                           	opt stack 0
  1996  0000FA                     	ds	2
  1997  0000FC                     _Max_Saida1:
  1998                           	opt stack 0
  1999  0000FC                     	ds	2
  2000                           
  2001                           	psect	bssBANK1
  2002  0001DF                     __pbssBANK1:
  2003                           	opt stack 0
  2004  0001DF                     _valor_AD:
  2005                           	opt stack 0
  2006  0001DF                     	ds	2
  2007  0001E1                     _ponteiro_USB:
  2008                           	opt stack 0
  2009  0001E1                     	ds	2
  2010  0001E3                     _ponteiro_COMM:
  2011                           	opt stack 0
  2012  0001E3                     	ds	2
  2013  0001E5                     _ponteiro_escrita_USB:
  2014                           	opt stack 0
  2015  0001E5                     	ds	2
  2016  0001E7                     _ponteiro_escrita_COMM:
  2017                           	opt stack 0
  2018  0001E7                     	ds	2
  2019  0001E9                     _primeiro:
  2020                           	opt stack 0
  2021  0001E9                     	ds	2
  2022  0001EB                     _low:
  2023                           	opt stack 0
  2024  0001EB                     	ds	1
  2025  0001EC                     _high:
  2026                           	opt stack 0
  2027  0001EC                     	ds	1
  2028                           
  2029                           	psect	dataBANK1
  2030  0001CD                     __pdataBANK1:
  2031                           	opt stack 0
  2032  0001CD                     _Max_Entrada9:
  2033                           	opt stack 0
  2034  0001CD                     	ds	2
  2035  0001CF                     _Max_Entrada8:
  2036                           	opt stack 0
  2037  0001CF                     	ds	2
  2038  0001D1                     _Max_Entrada7:
  2039                           	opt stack 0
  2040  0001D1                     	ds	2
  2041  0001D3                     _Max_Entrada6:
  2042                           	opt stack 0
  2043  0001D3                     	ds	2
  2044  0001D5                     _Max_Entrada5:
  2045                           	opt stack 0
  2046  0001D5                     	ds	2
  2047  0001D7                     _Max_Entrada4:
  2048                           	opt stack 0
  2049  0001D7                     	ds	2
  2050  0001D9                     _Max_Entrada3:
  2051                           	opt stack 0
  2052  0001D9                     	ds	2
  2053  0001DB                     _Max_Entrada2:
  2054                           	opt stack 0
  2055  0001DB                     	ds	2
  2056  0001DD                     _Max_Entrada1:
  2057                           	opt stack 0
  2058  0001DD                     	ds	2
  2059                           
  2060                           	psect	bssBANK2
  2061  000294                     __pbssBANK2:
  2062                           	opt stack 0
  2063  000294                     _MEMORIA:
  2064                           	opt stack 0
  2065  000294                     	ds	40
  2066  0002BC                     _saida:
  2067                           	opt stack 0
  2068  0002BC                     	ds	4
  2069  0002C0                     _contaLed:
  2070                           	opt stack 0
  2071  0002C0                     	ds	4
  2072  0002C4                     _conta:
  2073                           	opt stack 0
  2074  0002C4                     	ds	4
  2075  0002C8                     _contaLoop:
  2076                           	opt stack 0
  2077  0002C8                     	ds	4
  2078  0002CC                     _offset:
  2079                           	opt stack 0
  2080  0002CC                     	ds	3
  2081  0002CF                     _SELECIONA:
  2082                           	opt stack 0
  2083  0002CF                     	ds	2
  2084  0002D1                     _mudou:
  2085                           	opt stack 0
  2086  0002D1                     	ds	2
  2087  0002D3                     _resultado_polinomio:
  2088                           	opt stack 0
  2089  0002D3                     	ds	2
  2090  0002D5                     _ponteiro_analog:
  2091                           	opt stack 0
  2092  0002D5                     	ds	2
  2093  0002D7                     _Min_Entrada:
  2094                           	opt stack 0
  2095  0002D7                     	ds	2
  2096  0002D9                     _Min_Saida:
  2097                           	opt stack 0
  2098  0002D9                     	ds	2
  2099  0002DB                     _Min_Saida1:
  2100                           	opt stack 0
  2101  0002DB                     	ds	2
  2102  0002DD                     _TimeOut_Threshold:
  2103                           	opt stack 0
  2104  0002DD                     	ds	2
  2105  0002DF                     _TimeoutCount:
  2106                           	opt stack 0
  2107  0002DF                     	ds	2
  2108  0002E1                     _endereco_dispositivo:
  2109                           	opt stack 0
  2110  0002E1                     	ds	2
  2111  0002E3                     _EstadoInterno:
  2112                           	opt stack 0
  2113  0002E3                     	ds	2
  2114  0002E5                     _RecebendoFrames:
  2115                           	opt stack 0
  2116  0002E5                     	ds	2
  2117  0002E7                     _iii:
  2118                           	opt stack 0
  2119  0002E7                     	ds	2
  2120  0002E9                     _tamFrames:
  2121                           	opt stack 0
  2122  0002E9                     	ds	2
  2123  0002EB                     _breakpoint_sw:
  2124                           	opt stack 0
  2125  0002EB                     	ds	2
  2126  0002ED                     _tempo:
  2127                           	opt stack 0
  2128  0002ED                     	ds	2
  2129  0002EF                     _recebeu_r_n:
  2130                           	opt stack 0
  2131  0002EF                     	ds	2
  2132  0002F1                     _Aguarda_Funcao:
  2133                           	opt stack 0
  2134  0002F1                     	ds	2
  2135  0002F3                     _AguardaFrames:
  2136                           	opt stack 0
  2137  0002F3                     	ds	2
  2138                           
  2139                           	psect	dataBANK2
  2140  0002F5                     __pdataBANK2:
  2141                           	opt stack 0
  2142  0002F5                     trataRespostaHTTP@F20030:
  2143                           	opt stack 0
  2144  0002F5                     	ds	4
  2145  0002F9                     verificaFimFrame@F19980:
  2146                           	opt stack 0
  2147  0002F9                     	ds	3
  2148  0002FC                     _Max_Saida10:
  2149                           	opt stack 0
  2150  0002FC                     	ds	2
  2151                           
  2152                           	psect	bssBANK3
  2153  000300                     __pbssBANK3:
  2154                           	opt stack 0
  2155  000300                     _Aguarda_Resposta:
  2156                           	opt stack 0
  2157  000300                     	ds	100
  2158  000364                     _Registros:
  2159                           	opt stack 0
  2160  000364                     	ds	40
  2161  00038C                     _text:
  2162                           	opt stack 0
  2163  00038C                     	ds	10
  2164  000396                     _Aguarda_end_frame:
  2165                           	opt stack 0
  2166  000396                     	ds	10
  2167  0003A0                     _Aguarda_error:
  2168                           	opt stack 0
  2169  0003A0                     	ds	10
  2170  0003AA                     _Aguarda_str:
  2171                           	opt stack 0
  2172  0003AA                     	ds	20
  2173  0003BE                     _MACAddress:
  2174                           	opt stack 0
  2175  0003BE                     	ds	18
  2176  0003D0                     _Aguarda_end:
  2177                           	opt stack 0
  2178  0003D0                     	ds	10
  2179                           
  2180                           	psect	dataBANK3
  2181  0003F2                     __pdataBANK3:
  2182                           	opt stack 0
  2183  0003F2                     verificaERRO@F19983:
  2184                           	opt stack 0
  2185  0003F2                     	ds	6
  2186  0003F8                     trataRespostaHTTP@F20034:
  2187                           	opt stack 0
  2188  0003F8                     	ds	4
  2189  0003FC                     trataRespostaHTTP@F20032:
  2190                           	opt stack 0
  2191  0003FC                     	ds	4
  2192                           
  2193                           	psect	bssBANK4
  2194  000400                     __pbssBANK4:
  2195                           	opt stack 0
  2196  000400                     _nodeId:
  2197                           	opt stack 0
  2198  000400                     	ds	60
  2199  00043C                     _networkId:
  2200                           	opt stack 0
  2201  00043C                     	ds	60
  2202  000478                     _result:
  2203                           	opt stack 0
  2204  000478                     	ds	60
  2205  0004B4                     _address:
  2206                           	opt stack 0
  2207  0004B4                     	ds	60
  2208                           
  2209                           	psect	bssBANK5
  2210  000500                     __pbssBANK5:
  2211                           	opt stack 0
  2212  000500                     _samples:
  2213                           	opt stack 0
  2214  000500                     	ds	100
  2215  000564                     _size:
  2216                           	opt stack 0
  2217  000564                     	ds	60
  2218  0005A0                     _functionCode:
  2219                           	opt stack 0
  2220  0005A0                     	ds	60
  2221                           
  2222                           	psect	bssBANK6
  2223  000600                     __pbssBANK6:
  2224                           	opt stack 0
  2225  000600                     _buffer_escrita_comm:
  2226                           	opt stack 0
  2227  000600                     	ds	150
  2228                           
  2229                           	psect	bssBANK7
  2230  000700                     __pbssBANK7:
  2231                           	opt stack 0
  2232  000700                     _buffer_escrita_USB:
  2233                           	opt stack 0
  2234  000700                     	ds	150
  2235                           
  2236                           	psect	bssBANK8
  2237  000800                     __pbssBANK8:
  2238                           	opt stack 0
  2239  000800                     _value:
  2240                           	opt stack 0
  2241  000800                     	ds	120
  2242                           
  2243                           	psect	bssBANK9
  2244  000900                     __pbssBANK9:
  2245                           	opt stack 0
  2246  000900                     _buffer_leitura_comm:
  2247                           	opt stack 0
  2248  000900                     	ds	150
  2249                           
  2250                           	psect	bssBANK10
  2251  000A00                     __pbssBANK10:
  2252                           	opt stack 0
  2253  000A00                     _buffer_leitura_USB:
  2254                           	opt stack 0
  2255  000A00                     	ds	150
  2256                           
  2257                           	psect	bssBIGRAM
  2258  000A96                     __pbssBIGRAM:
  2259                           	opt stack 0
  2260  000A96                     _frameId:
  2261                           	opt stack 0
  2262  000A96                     	ds	1110
  2263                           
  2264                           	psect	cstackBANK3
  2265  0003DA                     __pcstackBANK3:
  2266                           	opt stack 0
  2267  0003DA                     main@i2:
  2268                           	opt stack 0
  2269                           
  2270                           ; 4 bytes @ 0x0
  2271  0003DA                     	ds	4
  2272  0003DE                     main@motivo:
  2273                           	opt stack 0
  2274                           
  2275                           ; 20 bytes @ 0x4
  2276  0003DE                     	ds	20
  2277                           
  2278                           	psect	cstackBANK2
  2279  000200                     __pcstackBANK2:
  2280                           	opt stack 0
  2281  000200                     append_Arquivo_Json@linhaArquivo:
  2282                           	opt stack 0
  2283                           
  2284                           ; 120 bytes @ 0x0
  2285  000200                     	ds	120
  2286  000278                     append_Arquivo_Json@valorMem:
  2287                           	opt stack 0
  2288                           
  2289                           ; 4 bytes @ 0x78
  2290  000278                     	ds	4
  2291  00027C                     _append_Arquivo_Json$2788:
  2292                           	opt stack 0
  2293                           
  2294                           ; 2 bytes @ 0x7C
  2295  00027C                     	ds	2
  2296  00027E                     append_Arquivo_Json@primeiro:
  2297                           	opt stack 0
  2298                           
  2299                           ; 2 bytes @ 0x7E
  2300  00027E                     	ds	2
  2301  000280                     append_Arquivo_Json@virgula:
  2302                           	opt stack 0
  2303                           
  2304                           ; 2 bytes @ 0x80
  2305  000280                     	ds	2
  2306  000282                     append_Arquivo_Json@i:
  2307                           	opt stack 0
  2308                           
  2309                           ; 2 bytes @ 0x82
  2310  000282                     	ds	2
  2311  000284                     append_Arquivo_Json@valorMem_Char:
  2312                           	opt stack 0
  2313                           
  2314                           ; 10 bytes @ 0x84
  2315  000284                     	ds	10
  2316  00028E                     append_Arquivo_Json@resultado:
  2317                           	opt stack 0
  2318                           
  2319                           ; 6 bytes @ 0x8E
  2320  00028E                     	ds	6
  2321                           
  2322                           	psect	cstackBANK1
  2323  000100                     __pcstackBANK1:
  2324                           	opt stack 0
  2325  000100                     ??_Interrupt_WIFI_GSM:
  2326  000100                     i1cria_Arquivo@tamanho:
  2327                           	opt stack 0
  2328                           
  2329                           ; 15 bytes @ 0x0
  2330  000100                     	ds	5
  2331  000105                     ??_InicializaWifi:
  2332  000105                     ??_isdigit:
  2333  000105                     ?_TransmiteBuffer_COMM:
  2334                           	opt stack 0
  2335  000105                     ?_TransmiteBuffer_USB:
  2336                           	opt stack 0
  2337  000105                     ?_length:
  2338                           	opt stack 0
  2339  000105                     ?___awmod:
  2340                           	opt stack 0
  2341  000105                     ?___ftpack:
  2342                           	opt stack 0
  2343  000105                     ?__tdiv_to_l_:
  2344                           	opt stack 0
  2345  000105                     ?__div_to_l_:
  2346                           	opt stack 0
  2347  000105                     ?___aldiv:
  2348                           	opt stack 0
  2349  000105                     ?___lldiv:
  2350                           	opt stack 0
  2351  000105                     Buffer_Escrita_USB_Add_Char@dado:
  2352                           	opt stack 0
  2353  000105                     Buffer_Escrita_COMM_Add_Char@dado:
  2354                           	opt stack 0
  2355  000105                     length@dado:
  2356                           	opt stack 0
  2357  000105                     ___awmod@dividend:
  2358                           	opt stack 0
  2359  000105                     __div_to_l_@f1:
  2360                           	opt stack 0
  2361  000105                     ___ftpack@arg:
  2362                           	opt stack 0
  2363  000105                     __tdiv_to_l_@f1:
  2364                           	opt stack 0
  2365  000105                     ___aldiv@dividend:
  2366                           	opt stack 0
  2367  000105                     ___lldiv@dividend:
  2368                           	opt stack 0
  2369                           
  2370                           ; 4 bytes @ 0x5
  2371  000105                     	ds	1
  2372  000106                     _isdigit$2408:
  2373                           	opt stack 0
  2374                           
  2375                           ; 1 bytes @ 0x6
  2376  000106                     	ds	1
  2377  000107                     ??_length:
  2378  000107                     isdigit@c:
  2379                           	opt stack 0
  2380  000107                     Buffer_Escrita_USB_Add_String@dado:
  2381                           	opt stack 0
  2382  000107                     Buffer_Escrita_COMM_Add_String@dado:
  2383                           	opt stack 0
  2384  000107                     ___awmod@divisor:
  2385                           	opt stack 0
  2386                           
  2387                           ; 2 bytes @ 0x7
  2388  000107                     	ds	1
  2389  000108                     ___ftpack@exp:
  2390                           	opt stack 0
  2391  000108                     __div_to_l_@f2:
  2392                           	opt stack 0
  2393  000108                     __tdiv_to_l_@f2:
  2394                           	opt stack 0
  2395                           
  2396                           ; 3 bytes @ 0x8
  2397  000108                     	ds	1
  2398  000109                     ___awmod@counter:
  2399                           	opt stack 0
  2400  000109                     ___ftpack@sign:
  2401                           	opt stack 0
  2402  000109                     Buffer_Escrita_USB_Add_String@aguarda:
  2403                           	opt stack 0
  2404  000109                     Buffer_Escrita_COMM_Add_String@aguarda:
  2405                           	opt stack 0
  2406  000109                     length@i:
  2407                           	opt stack 0
  2408  000109                     ___aldiv@divisor:
  2409                           	opt stack 0
  2410  000109                     ___lldiv@divisor:
  2411                           	opt stack 0
  2412                           
  2413                           ; 4 bytes @ 0x9
  2414  000109                     	ds	1
  2415  00010A                     ??___ftpack:
  2416  00010A                     ___awmod@sign:
  2417                           	opt stack 0
  2418                           
  2419                           ; 1 bytes @ 0xA
  2420  00010A                     	ds	1
  2421  00010B                     ??_Buffer_Escrita_USB_Add_String:
  2422  00010B                     ??__tdiv_to_l_:
  2423  00010B                     ??_Buffer_Escrita_COMM_Add_String:
  2424  00010B                     ?___awdiv:
  2425                           	opt stack 0
  2426  00010B                     ___awdiv@dividend:
  2427                           	opt stack 0
  2428  00010B                     __div_to_l_@quot:
  2429                           	opt stack 0
  2430                           
  2431                           ; 4 bytes @ 0xB
  2432  00010B                     	ds	2
  2433  00010D                     ?___awtoft:
  2434                           	opt stack 0
  2435  00010D                     ___aldiv@counter:
  2436                           	opt stack 0
  2437  00010D                     Buffer_Escrita_USB_Add_String@i:
  2438                           	opt stack 0
  2439  00010D                     Buffer_Escrita_COMM_Add_String@i:
  2440                           	opt stack 0
  2441  00010D                     ___awdiv@divisor:
  2442                           	opt stack 0
  2443  00010D                     ___awtoft@c:
  2444                           	opt stack 0
  2445  00010D                     ___lldiv@quotient:
  2446                           	opt stack 0
  2447                           
  2448                           ; 4 bytes @ 0xD
  2449  00010D                     	ds	1
  2450  00010E                     ___aldiv@sign:
  2451                           	opt stack 0
  2452  00010E                     __tdiv_to_l_@quot:
  2453                           	opt stack 0
  2454                           
  2455                           ; 4 bytes @ 0xE
  2456  00010E                     	ds	1
  2457  00010F                     ___awdiv@counter:
  2458                           	opt stack 0
  2459  00010F                     __div_to_l_@cntr:
  2460                           	opt stack 0
  2461  00010F                     i1cria_Arquivo@tam:
  2462                           	opt stack 0
  2463  00010F                     ___aldiv@quotient:
  2464                           	opt stack 0
  2465                           
  2466                           ; 4 bytes @ 0xF
  2467  00010F                     	ds	1
  2468  000110                     ___awdiv@sign:
  2469                           	opt stack 0
  2470  000110                     ___awtoft@sign:
  2471                           	opt stack 0
  2472  000110                     __div_to_l_@exp1:
  2473                           	opt stack 0
  2474                           
  2475                           ; 1 bytes @ 0x10
  2476  000110                     	ds	1
  2477  000111                     ___lldiv@counter:
  2478                           	opt stack 0
  2479  000111                     ___awdiv@quotient:
  2480                           	opt stack 0
  2481  000111                     i1append_Arquivo_Json@linhaArquivo:
  2482                           	opt stack 0
  2483                           
  2484                           ; 120 bytes @ 0x11
  2485  000111                     	ds	1
  2486  000112                     ?___llmod:
  2487                           	opt stack 0
  2488  000112                     __tdiv_to_l_@cntr:
  2489                           	opt stack 0
  2490  000112                     ___llmod@dividend:
  2491                           	opt stack 0
  2492                           
  2493                           ; 4 bytes @ 0x12
  2494  000112                     	ds	1
  2495  000113                     ?___wmul:
  2496                           	opt stack 0
  2497  000113                     ?_Calcula_BaudRate:
  2498                           	opt stack 0
  2499  000113                     __tdiv_to_l_@exp1:
  2500                           	opt stack 0
  2501  000113                     ___wmul@multiplier:
  2502                           	opt stack 0
  2503  000113                     Calcula_BaudRate@BaudRate:
  2504                           	opt stack 0
  2505                           
  2506                           ; 4 bytes @ 0x13
  2507  000113                     	ds	2
  2508  000115                     ___wmul@multiplicand:
  2509                           	opt stack 0
  2510                           
  2511                           ; 2 bytes @ 0x15
  2512  000115                     	ds	1
  2513  000116                     ___llmod@divisor:
  2514                           	opt stack 0
  2515                           
  2516                           ; 4 bytes @ 0x16
  2517  000116                     	ds	1
  2518  000117                     ___wmul@product:
  2519                           	opt stack 0
  2520  000117                     Calcula_BaudRate@baud:
  2521                           	opt stack 0
  2522                           
  2523                           ; 4 bytes @ 0x17
  2524  000117                     	ds	2
  2525  000119                     ?___fttol:
  2526                           	opt stack 0
  2527  000119                     ___fttol@f1:
  2528                           	opt stack 0
  2529                           
  2530                           ; 3 bytes @ 0x19
  2531  000119                     	ds	1
  2532  00011A                     ___llmod@counter:
  2533                           	opt stack 0
  2534                           
  2535                           ; 1 bytes @ 0x1A
  2536  00011A                     	ds	1
  2537  00011B                     Abre_Porta_1@PORTA:
  2538                           	opt stack 0
  2539  00011B                     Abre_Porta_COMM@BaudRate:
  2540                           	opt stack 0
  2541                           
  2542                           ; 4 bytes @ 0x1B
  2543  00011B                     	ds	2
  2544  00011D                     ??___fttol:
  2545  00011D                     Abre_Porta_1@BaudRate:
  2546                           	opt stack 0
  2547                           
  2548                           ; 4 bytes @ 0x1D
  2549  00011D                     	ds	2
  2550  00011F                     Abre_Porta_COMM@baud:
  2551                           	opt stack 0
  2552                           
  2553                           ; 4 bytes @ 0x1F
  2554  00011F                     	ds	2
  2555  000121                     Abre_Porta_1@baud:
  2556                           	opt stack 0
  2557                           
  2558                           ; 4 bytes @ 0x21
  2559  000121                     	ds	1
  2560  000122                     ___fttol@sign1:
  2561                           	opt stack 0
  2562                           
  2563                           ; 1 bytes @ 0x22
  2564  000122                     	ds	1
  2565  000123                     ___fttol@lval:
  2566                           	opt stack 0
  2567                           
  2568                           ; 4 bytes @ 0x23
  2569  000123                     	ds	4
  2570  000127                     ___fttol@exp1:
  2571                           	opt stack 0
  2572                           
  2573                           ; 1 bytes @ 0x27
  2574  000127                     	ds	1
  2575  000128                     ?___lltoft:
  2576                           	opt stack 0
  2577  000128                     ___lltoft@c:
  2578                           	opt stack 0
  2579                           
  2580                           ; 4 bytes @ 0x28
  2581  000128                     	ds	4
  2582  00012C                     ??___lltoft:
  2583                           
  2584                           ; 1 bytes @ 0x2C
  2585  00012C                     	ds	4
  2586  000130                     ___lltoft@exp:
  2587                           	opt stack 0
  2588                           
  2589                           ; 1 bytes @ 0x30
  2590  000130                     	ds	1
  2591  000131                     ?___ftneg:
  2592                           	opt stack 0
  2593  000131                     ___ftneg@f1:
  2594                           	opt stack 0
  2595                           
  2596                           ; 3 bytes @ 0x31
  2597  000131                     	ds	3
  2598  000134                     ?___ftmul:
  2599                           	opt stack 0
  2600  000134                     ___ftmul@f1:
  2601                           	opt stack 0
  2602                           
  2603                           ; 3 bytes @ 0x34
  2604  000134                     	ds	3
  2605  000137                     ___ftmul@f2:
  2606                           	opt stack 0
  2607                           
  2608                           ; 3 bytes @ 0x37
  2609  000137                     	ds	3
  2610  00013A                     ??___ftmul:
  2611                           
  2612                           ; 1 bytes @ 0x3A
  2613  00013A                     	ds	3
  2614  00013D                     ___ftmul@exp:
  2615                           	opt stack 0
  2616                           
  2617                           ; 1 bytes @ 0x3D
  2618  00013D                     	ds	1
  2619  00013E                     ___ftmul@f3_as_product:
  2620                           	opt stack 0
  2621                           
  2622                           ; 3 bytes @ 0x3E
  2623  00013E                     	ds	3
  2624  000141                     ___ftmul@cntr:
  2625                           	opt stack 0
  2626                           
  2627                           ; 1 bytes @ 0x41
  2628  000141                     	ds	1
  2629  000142                     ___ftmul@sign:
  2630                           	opt stack 0
  2631                           
  2632                           ; 1 bytes @ 0x42
  2633  000142                     	ds	1
  2634  000143                     ?_fround:
  2635                           	opt stack 0
  2636  000143                     ?_scale:
  2637                           	opt stack 0
  2638  000143                     ?___altoft:
  2639                           	opt stack 0
  2640  000143                     ___altoft@c:
  2641                           	opt stack 0
  2642                           
  2643                           ; 4 bytes @ 0x43
  2644  000143                     	ds	3
  2645  000146                     _fround$2793:
  2646                           	opt stack 0
  2647  000146                     _scale$2794:
  2648                           	opt stack 0
  2649                           
  2650                           ; 3 bytes @ 0x46
  2651  000146                     	ds	1
  2652  000147                     ??___altoft:
  2653                           
  2654                           ; 1 bytes @ 0x47
  2655  000147                     	ds	2
  2656  000149                     scale@scl:
  2657                           	opt stack 0
  2658  000149                     _fround$2792:
  2659                           	opt stack 0
  2660                           
  2661                           ; 3 bytes @ 0x49
  2662  000149                     	ds	1
  2663  00014A                     ?___ftdiv:
  2664                           	opt stack 0
  2665  00014A                     ___ftdiv@f1:
  2666                           	opt stack 0
  2667                           
  2668                           ; 3 bytes @ 0x4A
  2669  00014A                     	ds	1
  2670  00014B                     ___altoft@exp:
  2671                           	opt stack 0
  2672                           
  2673                           ; 1 bytes @ 0x4B
  2674  00014B                     	ds	1
  2675  00014C                     fround@prec:
  2676                           	opt stack 0
  2677  00014C                     ___altoft@sign:
  2678                           	opt stack 0
  2679                           
  2680                           ; 1 bytes @ 0x4C
  2681  00014C                     	ds	1
  2682  00014D                     ?___ftadd:
  2683                           	opt stack 0
  2684  00014D                     ___ftadd@f1:
  2685                           	opt stack 0
  2686  00014D                     ___ftdiv@f2:
  2687                           	opt stack 0
  2688                           
  2689                           ; 3 bytes @ 0x4D
  2690  00014D                     	ds	3
  2691  000150                     ??___ftdiv:
  2692  000150                     ___ftadd@f2:
  2693                           	opt stack 0
  2694                           
  2695                           ; 3 bytes @ 0x50
  2696  000150                     	ds	3
  2697  000153                     ??___ftadd:
  2698  000153                     ___ftdiv@cntr:
  2699                           	opt stack 0
  2700                           
  2701                           ; 1 bytes @ 0x53
  2702  000153                     	ds	1
  2703  000154                     ___ftdiv@f3:
  2704                           	opt stack 0
  2705                           
  2706                           ; 3 bytes @ 0x54
  2707  000154                     	ds	2
  2708  000156                     ___ftadd@sign:
  2709                           	opt stack 0
  2710                           
  2711                           ; 1 bytes @ 0x56
  2712  000156                     	ds	1
  2713  000157                     ___ftadd@exp2:
  2714                           	opt stack 0
  2715  000157                     ___ftdiv@exp:
  2716                           	opt stack 0
  2717                           
  2718                           ; 1 bytes @ 0x57
  2719  000157                     	ds	1
  2720  000158                     ___ftadd@exp1:
  2721                           	opt stack 0
  2722  000158                     ___ftdiv@sign:
  2723                           	opt stack 0
  2724                           
  2725                           ; 1 bytes @ 0x58
  2726  000158                     	ds	1
  2727  000159                     ??_Calcula_Fator_m:
  2728  000159                     ??_Converte_Escala:
  2729  000159                     ?___ftsub:
  2730                           	opt stack 0
  2731  000159                     ___ftge@ff1:
  2732                           	opt stack 0
  2733  000159                     ___ftsub@f1:
  2734                           	opt stack 0
  2735                           
  2736                           ; 3 bytes @ 0x59
  2737  000159                     	ds	2
  2738  00015B                     Calcula_Fator_m@mX:
  2739                           	opt stack 0
  2740                           
  2741                           ; 3 bytes @ 0x5B
  2742  00015B                     	ds	1
  2743  00015C                     ___ftge@ff2:
  2744                           	opt stack 0
  2745  00015C                     ___ftsub@f2:
  2746                           	opt stack 0
  2747                           
  2748                           ; 3 bytes @ 0x5C
  2749  00015C                     	ds	2
  2750  00015E                     Calcula_Fator_m@mY:
  2751                           	opt stack 0
  2752                           
  2753                           ; 3 bytes @ 0x5E
  2754  00015E                     	ds	1
  2755  00015F                     ??___ftge:
  2756                           
  2757                           ; 1 bytes @ 0x5F
  2758  00015F                     	ds	2
  2759  000161                     ajusta_escala@valor:
  2760                           	opt stack 0
  2761                           
  2762                           ; 2 bytes @ 0x61
  2763  000161                     	ds	1
  2764  000162                     ?_sprintf:
  2765                           	opt stack 0
  2766  000162                     sprintf@sp:
  2767                           	opt stack 0
  2768                           
  2769                           ; 2 bytes @ 0x62
  2770  000162                     	ds	1
  2771  000163                     ??_ajusta_escala:
  2772                           
  2773                           ; 1 bytes @ 0x63
  2774  000163                     	ds	1
  2775  000164                     sprintf@f:
  2776                           	opt stack 0
  2777                           
  2778                           ; 2 bytes @ 0x64
  2779  000164                     	ds	24
  2780  00017C                     ??_sprintf:
  2781                           
  2782                           ; 1 bytes @ 0x7C
  2783  00017C                     	ds	6
  2784  000182                     _sprintf$2795:
  2785                           	opt stack 0
  2786                           
  2787                           ; 3 bytes @ 0x82
  2788  000182                     	ds	3
  2789  000185                     sprintf@idx:
  2790                           	opt stack 0
  2791                           
  2792                           ; 1 bytes @ 0x85
  2793  000185                     	ds	1
  2794  000186                     _sprintf$2173:
  2795                           	opt stack 0
  2796                           
  2797                           ; 2 bytes @ 0x86
  2798  000186                     	ds	2
  2799  000188                     _sprintf$2174:
  2800                           	opt stack 0
  2801                           
  2802                           ; 2 bytes @ 0x88
  2803  000188                     	ds	1
  2804  000189                     i1append_Arquivo_Json@resultado:
  2805                           	opt stack 0
  2806                           
  2807                           ; 6 bytes @ 0x89
  2808  000189                     	ds	1
  2809  00018A                     _sprintf$2177:
  2810                           	opt stack 0
  2811                           
  2812                           ; 2 bytes @ 0x8A
  2813  00018A                     	ds	2
  2814  00018C                     _sprintf$2178:
  2815                           	opt stack 0
  2816                           
  2817                           ; 2 bytes @ 0x8C
  2818  00018C                     	ds	2
  2819  00018E                     _sprintf$2179:
  2820                           	opt stack 0
  2821                           
  2822                           ; 2 bytes @ 0x8E
  2823  00018E                     	ds	1
  2824  00018F                     i1append_Arquivo_Json@valorMem_Char:
  2825                           	opt stack 0
  2826                           
  2827                           ; 10 bytes @ 0x8F
  2828  00018F                     	ds	1
  2829  000190                     _sprintf$2180:
  2830                           	opt stack 0
  2831                           
  2832                           ; 2 bytes @ 0x90
  2833  000190                     	ds	2
  2834  000192                     sprintf@temp:
  2835                           	opt stack 0
  2836                           
  2837                           ; 3 bytes @ 0x92
  2838  000192                     	ds	3
  2839  000195                     sprintf@cp:
  2840                           	opt stack 0
  2841                           
  2842                           ; 2 bytes @ 0x95
  2843  000195                     	ds	2
  2844  000197                     sprintf@len:
  2845                           	opt stack 0
  2846                           
  2847                           ; 2 bytes @ 0x97
  2848  000197                     	ds	2
  2849  000199                     sprintf@ap:
  2850                           	opt stack 0
  2851  000199                     i1append_Arquivo_Json@valorMem:
  2852                           	opt stack 0
  2853                           
  2854                           ; 4 bytes @ 0x99
  2855  000199                     	ds	2
  2856  00019B                     sprintf@tmpval:
  2857                           	opt stack 0
  2858                           
  2859                           ; 4 bytes @ 0x9B
  2860  00019B                     	ds	2
  2861  00019D                     i1append_Arquivo_Json@virgula:
  2862                           	opt stack 0
  2863                           
  2864                           ; 2 bytes @ 0x9D
  2865  00019D                     	ds	2
  2866  00019F                     sprintf@exp:
  2867                           	opt stack 0
  2868  00019F                     i1_append_Arquivo_Json$3040:
  2869                           	opt stack 0
  2870                           
  2871                           ; 2 bytes @ 0x9F
  2872  00019F                     	ds	2
  2873  0001A1                     sprintf@width:
  2874                           	opt stack 0
  2875  0001A1                     i1append_Arquivo_Json@primeiro:
  2876                           	opt stack 0
  2877                           
  2878                           ; 2 bytes @ 0xA1
  2879  0001A1                     	ds	2
  2880  0001A3                     i1append_Arquivo_Json@i:
  2881                           	opt stack 0
  2882  0001A3                     sprintf@val:
  2883                           	opt stack 0
  2884                           
  2885                           ; 4 bytes @ 0xA3
  2886  0001A3                     	ds	4
  2887  0001A7                     sprintf@fval:
  2888                           	opt stack 0
  2889                           
  2890                           ; 3 bytes @ 0xA7
  2891  0001A7                     	ds	3
  2892  0001AA                     sprintf@prec:
  2893                           	opt stack 0
  2894                           
  2895                           ; 2 bytes @ 0xAA
  2896  0001AA                     	ds	2
  2897  0001AC                     sprintf@c:
  2898                           	opt stack 0
  2899                           
  2900                           ; 1 bytes @ 0xAC
  2901  0001AC                     	ds	1
  2902  0001AD                     sprintf@flag:
  2903                           	opt stack 0
  2904                           
  2905                           ; 2 bytes @ 0xAD
  2906  0001AD                     	ds	2
  2907  0001AF                     ??_Verifica_Analogica:
  2908  0001AF                     cria_Arquivo@nome:
  2909                           	opt stack 0
  2910  0001AF                     Aguarda_dado@inicio:
  2911                           	opt stack 0
  2912                           
  2913                           ; 2 bytes @ 0xAF
  2914  0001AF                     	ds	2
  2915  0001B1                     cria_Arquivo@dado:
  2916                           	opt stack 0
  2917  0001B1                     Aguarda_dado@fim:
  2918                           	opt stack 0
  2919                           
  2920                           ; 2 bytes @ 0xB1
  2921  0001B1                     	ds	2
  2922  0001B3                     ??_cria_Arquivo:
  2923  0001B3                     Aguarda_dado@error:
  2924                           	opt stack 0
  2925  0001B3                     Verifica_Analogica@valoradstr:
  2926                           	opt stack 0
  2927                           
  2928                           ; 10 bytes @ 0xB3
  2929  0001B3                     	ds	1
  2930  0001B4                     cria_Arquivo@tam:
  2931                           	opt stack 0
  2932                           
  2933                           ; 2 bytes @ 0xB4
  2934  0001B4                     	ds	1
  2935  0001B5                     Aguarda_dado@ff:
  2936                           	opt stack 0
  2937                           
  2938                           ; 2 bytes @ 0xB5
  2939  0001B5                     	ds	1
  2940  0001B6                     cria_Arquivo@tamanho:
  2941                           	opt stack 0
  2942                           
  2943                           ; 15 bytes @ 0xB6
  2944  0001B6                     	ds	1
  2945  0001B7                     
  2946                           ; 1 bytes @ 0xB7
  2947  0001B7                     	ds	14
  2948  0001C5                     ??_append_Arquivo_Json:
  2949                           
  2950                           ; 1 bytes @ 0xC5
  2951  0001C5                     	ds	4
  2952  0001C9                     ??_inicia_Post:
  2953                           
  2954                           ; 1 bytes @ 0xC9
  2955  0001C9                     	ds	2
  2956  0001CB                     ??_main:
  2957                           
  2958                           ; 1 bytes @ 0xCB
  2959  0001CB                     	ds	2
  2960                           
  2961                           	psect	cstackBANK0
  2962  000060                     __pcstackBANK0:
  2963                           	opt stack 0
  2964  000060                     ?i1___ftsub:
  2965                           	opt stack 0
  2966  000060                     i1___ftge@ff1:
  2967                           	opt stack 0
  2968  000060                     i1___ftsub@f1:
  2969                           	opt stack 0
  2970                           
  2971                           ; 3 bytes @ 0x0
  2972  000060                     	ds	3
  2973  000063                     i1___ftge@ff2:
  2974                           	opt stack 0
  2975  000063                     i1___ftsub@f2:
  2976                           	opt stack 0
  2977                           
  2978                           ; 3 bytes @ 0x3
  2979  000063                     	ds	3
  2980  000066                     ??i1___ftge:
  2981                           
  2982                           ; 1 bytes @ 0x6
  2983  000066                     	ds	3
  2984  000069                     ?i1_sprintf:
  2985                           	opt stack 0
  2986  000069                     i1sprintf@sp:
  2987                           	opt stack 0
  2988                           
  2989                           ; 2 bytes @ 0x9
  2990  000069                     	ds	2
  2991  00006B                     i1sprintf@f:
  2992                           	opt stack 0
  2993                           
  2994                           ; 2 bytes @ 0xB
  2995  00006B                     	ds	24
  2996  000083                     ??i1_sprintf:
  2997                           
  2998                           ; 1 bytes @ 0x23
  2999  000083                     	ds	6
  3000  000089                     i1_sprintf$3044:
  3001                           	opt stack 0
  3002                           
  3003                           ; 3 bytes @ 0x29
  3004  000089                     	ds	3
  3005  00008C                     i1sprintf@idx:
  3006                           	opt stack 0
  3007                           
  3008                           ; 1 bytes @ 0x2C
  3009  00008C                     	ds	1
  3010  00008D                     i1_sprintf$2173:
  3011                           	opt stack 0
  3012                           
  3013                           ; 2 bytes @ 0x2D
  3014  00008D                     	ds	2
  3015  00008F                     i1_sprintf$2174:
  3016                           	opt stack 0
  3017                           
  3018                           ; 2 bytes @ 0x2F
  3019  00008F                     	ds	2
  3020  000091                     i1_sprintf$2177:
  3021                           	opt stack 0
  3022                           
  3023                           ; 2 bytes @ 0x31
  3024  000091                     	ds	2
  3025  000093                     i1_sprintf$2178:
  3026                           	opt stack 0
  3027                           
  3028                           ; 2 bytes @ 0x33
  3029  000093                     	ds	2
  3030  000095                     i1_sprintf$2179:
  3031                           	opt stack 0
  3032                           
  3033                           ; 2 bytes @ 0x35
  3034  000095                     	ds	2
  3035  000097                     i1_sprintf$2180:
  3036                           	opt stack 0
  3037                           
  3038                           ; 2 bytes @ 0x37
  3039  000097                     	ds	2
  3040  000099                     i1sprintf@temp:
  3041                           	opt stack 0
  3042                           
  3043                           ; 3 bytes @ 0x39
  3044  000099                     	ds	3
  3045  00009C                     i1sprintf@cp:
  3046                           	opt stack 0
  3047                           
  3048                           ; 2 bytes @ 0x3C
  3049  00009C                     	ds	2
  3050  00009E                     i1sprintf@len:
  3051                           	opt stack 0
  3052                           
  3053                           ; 2 bytes @ 0x3E
  3054  00009E                     	ds	2
  3055  0000A0                     i1sprintf@ap:
  3056                           	opt stack 0
  3057                           
  3058                           ; 2 bytes @ 0x40
  3059  0000A0                     	ds	2
  3060  0000A2                     i1sprintf@tmpval:
  3061                           	opt stack 0
  3062                           
  3063                           ; 4 bytes @ 0x42
  3064  0000A2                     	ds	4
  3065  0000A6                     i1sprintf@exp:
  3066                           	opt stack 0
  3067                           
  3068                           ; 2 bytes @ 0x46
  3069  0000A6                     	ds	2
  3070  0000A8                     i1sprintf@width:
  3071                           	opt stack 0
  3072                           
  3073                           ; 2 bytes @ 0x48
  3074  0000A8                     	ds	2
  3075  0000AA                     i1sprintf@val:
  3076                           	opt stack 0
  3077                           
  3078                           ; 4 bytes @ 0x4A
  3079  0000AA                     	ds	4
  3080  0000AE                     i1sprintf@fval:
  3081                           	opt stack 0
  3082                           
  3083                           ; 3 bytes @ 0x4E
  3084  0000AE                     	ds	3
  3085  0000B1                     i1sprintf@prec:
  3086                           	opt stack 0
  3087                           
  3088                           ; 2 bytes @ 0x51
  3089  0000B1                     	ds	2
  3090  0000B3                     i1sprintf@c:
  3091                           	opt stack 0
  3092                           
  3093                           ; 1 bytes @ 0x53
  3094  0000B3                     	ds	1
  3095  0000B4                     i1sprintf@flag:
  3096                           	opt stack 0
  3097                           
  3098                           ; 2 bytes @ 0x54
  3099  0000B4                     	ds	2
  3100  0000B6                     i1cria_Arquivo@nome:
  3101                           	opt stack 0
  3102  0000B6                     i1Aguarda_dado@inicio:
  3103                           	opt stack 0
  3104                           
  3105                           ; 2 bytes @ 0x56
  3106  0000B6                     	ds	2
  3107  0000B8                     i1cria_Arquivo@dado:
  3108                           	opt stack 0
  3109  0000B8                     i1Aguarda_dado@fim:
  3110                           	opt stack 0
  3111                           
  3112                           ; 2 bytes @ 0x58
  3113  0000B8                     	ds	2
  3114  0000BA                     ??i1_append_Arquivo_Json:
  3115  0000BA                     i1Aguarda_dado@error:
  3116                           	opt stack 0
  3117                           
  3118                           ; 2 bytes @ 0x5A
  3119  0000BA                     	ds	2
  3120  0000BC                     i1Aguarda_dado@ff:
  3121                           	opt stack 0
  3122                           
  3123                           ; 2 bytes @ 0x5C
  3124  0000BC                     	ds	2
  3125  0000BE                     ??_recebeFRAMEID:
  3126  0000BE                     ??i1_inicia_Post:
  3127  0000BE                     recebeNETWORKID@para:
  3128                           	opt stack 0
  3129                           
  3130                           ; 2 bytes @ 0x5E
  3131  0000BE                     	ds	2
  3132  0000C0                     recebeNETWORKID@i:
  3133                           	opt stack 0
  3134                           
  3135                           ; 2 bytes @ 0x60
  3136  0000C0                     	ds	4
  3137  0000C4                     ??_AguardaINT:
  3138                           
  3139                           ; 1 bytes @ 0x64
  3140  0000C4                     	ds	2
  3141  0000C6                     AguardaINT@dado:
  3142                           	opt stack 0
  3143                           
  3144                           ; 1 bytes @ 0x66
  3145  0000C6                     	ds	1
  3146  0000C7                     Interrupt_WIFI_GSM@lido:
  3147                           	opt stack 0
  3148                           
  3149                           ; 1 bytes @ 0x67
  3150  0000C7                     	ds	1
  3151                           
  3152                           	psect	cstackCOMRAM
  3153  000001                     __pcstackCOMRAM:
  3154                           	opt stack 0
  3155  000001                     
  3156                           ; 1 bytes @ 0x0
  3157  000001                     	ds	1
  3158  000002                     ??_Interrupt_USB_485:
  3159                           
  3160                           ; 1 bytes @ 0x1
  3161  000002                     	ds	1
  3162  000003                     Interrupt_USB_485@lido:
  3163                           	opt stack 0
  3164                           
  3165                           ; 1 bytes @ 0x2
  3166  000003                     	ds	1
  3167  000004                     ??i1_isdigit:
  3168  000004                     ?i1_TransmiteBuffer_USB:
  3169                           	opt stack 0
  3170  000004                     ?i1_TransmiteBuffer_COMM:
  3171                           	opt stack 0
  3172  000004                     ?i1_length:
  3173                           	opt stack 0
  3174  000004                     ?i1___awmod:
  3175                           	opt stack 0
  3176  000004                     ?i1___ftpack:
  3177                           	opt stack 0
  3178  000004                     ?i1__div_to_l_:
  3179                           	opt stack 0
  3180  000004                     ?i1__tdiv_to_l_:
  3181                           	opt stack 0
  3182  000004                     ?i1___lldiv:
  3183                           	opt stack 0
  3184  000004                     i1Buffer_Escrita_USB_Add_Char@dado:
  3185                           	opt stack 0
  3186  000004                     i1Buffer_Escrita_COMM_Add_Char@dado:
  3187                           	opt stack 0
  3188  000004                     limpa_Buffer_Escrita_USB@i:
  3189                           	opt stack 0
  3190  000004                     limpa_Buffer_Escrita_COMM@i:
  3191                           	opt stack 0
  3192  000004                     i1length@dado:
  3193                           	opt stack 0
  3194  000004                     i1___awmod@dividend:
  3195                           	opt stack 0
  3196  000004                     i1__div_to_l_@f1:
  3197                           	opt stack 0
  3198  000004                     i1___ftpack@arg:
  3199                           	opt stack 0
  3200  000004                     i1__tdiv_to_l_@f1:
  3201                           	opt stack 0
  3202  000004                     i1___lldiv@dividend:
  3203                           	opt stack 0
  3204                           
  3205                           ; 4 bytes @ 0x3
  3206  000004                     	ds	1
  3207  000005                     i1_isdigit$2408:
  3208                           	opt stack 0
  3209  000005                     verificaFimFrame@FIM:
  3210                           	opt stack 0
  3211  000005                     verificaERRO@ERRO:
  3212                           	opt stack 0
  3213                           
  3214                           ; 6 bytes @ 0x4
  3215  000005                     	ds	1
  3216  000006                     ??i1_length:
  3217  000006                     i1isdigit@c:
  3218                           	opt stack 0
  3219  000006                     i1Buffer_Escrita_USB_Add_String@dado:
  3220                           	opt stack 0
  3221  000006                     i1Buffer_Escrita_COMM_Add_String@dado:
  3222                           	opt stack 0
  3223  000006                     i1___awmod@divisor:
  3224                           	opt stack 0
  3225                           
  3226                           ; 2 bytes @ 0x5
  3227  000006                     	ds	1
  3228  000007                     i1___ftpack@exp:
  3229                           	opt stack 0
  3230  000007                     i1__div_to_l_@f2:
  3231                           	opt stack 0
  3232  000007                     i1__tdiv_to_l_@f2:
  3233                           	opt stack 0
  3234                           
  3235                           ; 3 bytes @ 0x6
  3236  000007                     	ds	1
  3237  000008                     verificaFimFrame@dado:
  3238                           	opt stack 0
  3239  000008                     i1___awmod@counter:
  3240                           	opt stack 0
  3241  000008                     i1___ftpack@sign:
  3242                           	opt stack 0
  3243  000008                     i1Buffer_Escrita_USB_Add_String@aguarda:
  3244                           	opt stack 0
  3245  000008                     i1Buffer_Escrita_COMM_Add_String@aguarda:
  3246                           	opt stack 0
  3247  000008                     i1length@i:
  3248                           	opt stack 0
  3249  000008                     i1___lldiv@divisor:
  3250                           	opt stack 0
  3251                           
  3252                           ; 4 bytes @ 0x7
  3253  000008                     	ds	1
  3254  000009                     ??i1___ftpack:
  3255  000009                     i1___awmod@sign:
  3256                           	opt stack 0
  3257                           
  3258                           ; 1 bytes @ 0x8
  3259  000009                     	ds	1
  3260  00000A                     ??i1_Buffer_Escrita_USB_Add_String:
  3261  00000A                     ??i1_Buffer_Escrita_COMM_Add_String:
  3262  00000A                     ??i1__tdiv_to_l_:
  3263  00000A                     ?i1___awdiv:
  3264                           	opt stack 0
  3265  00000A                     i1___awdiv@dividend:
  3266                           	opt stack 0
  3267  00000A                     i1__div_to_l_@quot:
  3268                           	opt stack 0
  3269                           
  3270                           ; 4 bytes @ 0x9
  3271  00000A                     	ds	1
  3272  00000B                     verificaERRO@dado:
  3273                           	opt stack 0
  3274                           
  3275                           ; 1 bytes @ 0xA
  3276  00000B                     	ds	1
  3277  00000C                     ?_Aguarda:
  3278                           	opt stack 0
  3279  00000C                     i1Buffer_Escrita_USB_Add_String@i:
  3280                           	opt stack 0
  3281  00000C                     i1Buffer_Escrita_COMM_Add_String@i:
  3282                           	opt stack 0
  3283  00000C                     i1___awdiv@divisor:
  3284                           	opt stack 0
  3285  00000C                     i1___lldiv@quotient:
  3286                           	opt stack 0
  3287                           
  3288                           ; 4 bytes @ 0xB
  3289  00000C                     	ds	1
  3290  00000D                     i1__tdiv_to_l_@quot:
  3291                           	opt stack 0
  3292                           
  3293                           ; 4 bytes @ 0xC
  3294  00000D                     	ds	1
  3295  00000E                     ??_Aguarda:
  3296  00000E                     i1___awdiv@counter:
  3297                           	opt stack 0
  3298  00000E                     i1__div_to_l_@cntr:
  3299                           	opt stack 0
  3300  00000E                     SETMACAddr@i:
  3301                           	opt stack 0
  3302                           
  3303                           ; 2 bytes @ 0xD
  3304  00000E                     	ds	1
  3305  00000F                     i1___awdiv@sign:
  3306                           	opt stack 0
  3307  00000F                     i1__div_to_l_@exp1:
  3308                           	opt stack 0
  3309                           
  3310                           ; 1 bytes @ 0xE
  3311  00000F                     	ds	1
  3312  000010                     Aguarda@dado:
  3313                           	opt stack 0
  3314  000010                     i1___lldiv@counter:
  3315                           	opt stack 0
  3316  000010                     i1___awdiv@quotient:
  3317                           	opt stack 0
  3318                           
  3319                           ; 2 bytes @ 0xF
  3320  000010                     	ds	1
  3321  000011                     ?i1___llmod:
  3322                           	opt stack 0
  3323  000011                     i1__tdiv_to_l_@cntr:
  3324                           	opt stack 0
  3325  000011                     i1___llmod@dividend:
  3326                           	opt stack 0
  3327                           
  3328                           ; 4 bytes @ 0x10
  3329  000011                     	ds	1
  3330  000012                     ?i1___wmul:
  3331                           	opt stack 0
  3332  000012                     i1__tdiv_to_l_@exp1:
  3333                           	opt stack 0
  3334  000012                     i1___wmul@multiplier:
  3335                           	opt stack 0
  3336                           
  3337                           ; 2 bytes @ 0x11
  3338  000012                     	ds	2
  3339  000014                     i1___wmul@multiplicand:
  3340                           	opt stack 0
  3341                           
  3342                           ; 2 bytes @ 0x13
  3343  000014                     	ds	1
  3344  000015                     i1___llmod@divisor:
  3345                           	opt stack 0
  3346                           
  3347                           ; 4 bytes @ 0x14
  3348  000015                     	ds	1
  3349  000016                     i1___wmul@product:
  3350                           	opt stack 0
  3351                           
  3352                           ; 2 bytes @ 0x15
  3353  000016                     	ds	2
  3354  000018                     ?i1___fttol:
  3355                           	opt stack 0
  3356  000018                     i1___fttol@f1:
  3357                           	opt stack 0
  3358                           
  3359                           ; 3 bytes @ 0x17
  3360  000018                     	ds	1
  3361  000019                     i1___llmod@counter:
  3362                           	opt stack 0
  3363                           
  3364                           ; 1 bytes @ 0x18
  3365  000019                     	ds	3
  3366  00001C                     ??i1___fttol:
  3367                           
  3368                           ; 1 bytes @ 0x1B
  3369  00001C                     	ds	5
  3370  000021                     i1___fttol@sign1:
  3371                           	opt stack 0
  3372                           
  3373                           ; 1 bytes @ 0x20
  3374  000021                     	ds	1
  3375  000022                     i1___fttol@lval:
  3376                           	opt stack 0
  3377                           
  3378                           ; 4 bytes @ 0x21
  3379  000022                     	ds	4
  3380  000026                     i1___fttol@exp1:
  3381                           	opt stack 0
  3382                           
  3383                           ; 1 bytes @ 0x25
  3384  000026                     	ds	1
  3385  000027                     ?i1___lltoft:
  3386                           	opt stack 0
  3387  000027                     i1___lltoft@c:
  3388                           	opt stack 0
  3389                           
  3390                           ; 4 bytes @ 0x26
  3391  000027                     	ds	4
  3392  00002B                     ??i1___lltoft:
  3393                           
  3394                           ; 1 bytes @ 0x2A
  3395  00002B                     	ds	4
  3396  00002F                     i1___lltoft@exp:
  3397                           	opt stack 0
  3398                           
  3399                           ; 1 bytes @ 0x2E
  3400  00002F                     	ds	1
  3401  000030                     ?i1___ftneg:
  3402                           	opt stack 0
  3403  000030                     i1___ftneg@f1:
  3404                           	opt stack 0
  3405                           
  3406                           ; 3 bytes @ 0x2F
  3407  000030                     	ds	3
  3408  000033                     ?i1___ftmul:
  3409                           	opt stack 0
  3410  000033                     i1___ftmul@f1:
  3411                           	opt stack 0
  3412                           
  3413                           ; 3 bytes @ 0x32
  3414  000033                     	ds	3
  3415  000036                     i1___ftmul@f2:
  3416                           	opt stack 0
  3417                           
  3418                           ; 3 bytes @ 0x35
  3419  000036                     	ds	3
  3420  000039                     ??i1___ftmul:
  3421                           
  3422                           ; 1 bytes @ 0x38
  3423  000039                     	ds	3
  3424  00003C                     i1___ftmul@exp:
  3425                           	opt stack 0
  3426                           
  3427                           ; 1 bytes @ 0x3B
  3428  00003C                     	ds	1
  3429  00003D                     i1___ftmul@f3_as_product:
  3430                           	opt stack 0
  3431                           
  3432                           ; 3 bytes @ 0x3C
  3433  00003D                     	ds	3
  3434  000040                     i1___ftmul@cntr:
  3435                           	opt stack 0
  3436                           
  3437                           ; 1 bytes @ 0x3F
  3438  000040                     	ds	1
  3439  000041                     i1___ftmul@sign:
  3440                           	opt stack 0
  3441                           
  3442                           ; 1 bytes @ 0x40
  3443  000041                     	ds	1
  3444  000042                     ?i1_fround:
  3445                           	opt stack 0
  3446  000042                     ?i1_scale:
  3447                           	opt stack 0
  3448                           
  3449                           ; 3 bytes @ 0x41
  3450  000042                     	ds	3
  3451  000045                     i1_fround$3042:
  3452                           	opt stack 0
  3453  000045                     i1_scale$3043:
  3454                           	opt stack 0
  3455                           
  3456                           ; 3 bytes @ 0x44
  3457  000045                     	ds	3
  3458  000048                     i1scale@scl:
  3459                           	opt stack 0
  3460  000048                     i1_fround$3041:
  3461                           	opt stack 0
  3462                           
  3463                           ; 3 bytes @ 0x47
  3464  000048                     	ds	1
  3465  000049                     ?i1___ftdiv:
  3466                           	opt stack 0
  3467  000049                     i1___ftdiv@f1:
  3468                           	opt stack 0
  3469                           
  3470                           ; 3 bytes @ 0x48
  3471  000049                     	ds	2
  3472  00004B                     i1fround@prec:
  3473                           	opt stack 0
  3474                           
  3475                           ; 1 bytes @ 0x4A
  3476  00004B                     	ds	1
  3477  00004C                     ?i1___ftadd:
  3478                           	opt stack 0
  3479  00004C                     i1___ftadd@f1:
  3480                           	opt stack 0
  3481  00004C                     i1___ftdiv@f2:
  3482                           	opt stack 0
  3483                           
  3484                           ; 3 bytes @ 0x4B
  3485  00004C                     	ds	3
  3486  00004F                     ??i1___ftdiv:
  3487  00004F                     i1___ftadd@f2:
  3488                           	opt stack 0
  3489                           
  3490                           ; 3 bytes @ 0x4E
  3491  00004F                     	ds	3
  3492  000052                     ??i1___ftadd:
  3493  000052                     i1___ftdiv@cntr:
  3494                           	opt stack 0
  3495                           
  3496                           ; 1 bytes @ 0x51
  3497  000052                     	ds	1
  3498  000053                     i1___ftdiv@f3:
  3499                           	opt stack 0
  3500                           
  3501                           ; 3 bytes @ 0x52
  3502  000053                     	ds	2
  3503  000055                     i1___ftadd@sign:
  3504                           	opt stack 0
  3505                           
  3506                           ; 1 bytes @ 0x54
  3507  000055                     	ds	1
  3508  000056                     i1___ftadd@exp2:
  3509                           	opt stack 0
  3510  000056                     i1___ftdiv@exp:
  3511                           	opt stack 0
  3512                           
  3513                           ; 1 bytes @ 0x55
  3514  000056                     	ds	1
  3515  000057                     i1___ftadd@exp1:
  3516                           	opt stack 0
  3517  000057                     i1___ftdiv@sign:
  3518                           	opt stack 0
  3519                           
  3520                           ; 1 bytes @ 0x56
  3521  000057                     	ds	1
  3522  000058                     ??_GETMACAddr:
  3523  000058                     ??_recebeNETWORKID:
  3524  000058                     ??_recebeNODEID:
  3525  000058                     ??_recebeFUNCTIONCODE:
  3526  000058                     ??_recebeADDRESS:
  3527  000058                     ??_recebeSIZE:
  3528  000058                     ??i1_cria_Arquivo:
  3529  000058                     recebeFRAMES@exit:
  3530                           	opt stack 0
  3531  000058                     SOCKET_RX@i:
  3532                           	opt stack 0
  3533                           
  3534                           ; 2 bytes @ 0x57
  3535  000058                     	ds	2
  3536                           
  3537 ;;
  3538 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3539 ;;
  3540 ;; *************** function _main *****************
  3541 ;; Defined at:
  3542 ;;		line 59 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Main.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  motivo         20    4[BANK3 ] unsigned char [20]
  3547 ;;  i2              4    0[BANK3 ] unsigned long 
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3558 ;;      Locals:         0       0       0       0      24       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3559 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3560 ;;      Totals:         0       0       2       0      24       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;Total ram usage:       26 bytes
  3562 ;; Hardware stack levels required when called:   17
  3563 ;; This function calls:
  3564 ;;		_Abre_Porta_1
  3565 ;;		_Abre_Porta_COMM
  3566 ;;		_Aguarda_dado
  3567 ;;		_Buffer_Escrita_USB_Add_String
  3568 ;;		_Calcula_Fator_m
  3569 ;;		_InicializaWifi
  3570 ;;		_TransmiteBuffer_COMM
  3571 ;;		_TransmiteBuffer_USB
  3572 ;;		_Verifica_Analogica
  3573 ;;		_inicia_Post
  3574 ;;		_sprintf
  3575 ;; This function is called by:
  3576 ;;		Startup code after reset
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text0
  3581  004406                     __ptext0:
  3582                           	opt stack 0
  3583  004406                     _main:
  3584                           	opt stack 14
  3585                           
  3586                           ;Main.c: 60: Postando =1;
  3587                           
  3588                           ;incstack = 0
  3589  004406  0E00               	movlw	0
  3590  004408  0102               	movlb	2	; () banked
  3591  00440A  6FFF               	movwf	(_Postando+1)& (0+255),b
  3592  00440C  0E01               	movlw	1
  3593  00440E  6FFE               	movwf	_Postando& (0+255),b
  3594                           
  3595                           ; BSR set to: 2
  3596                           ;Main.c: 61: WDTCON0bits.WDTPS = 0b01101;
  3597  004410  0139               	movlb	57	; () banked
  3598  004412  835B               	bsf	91,1,b	;volatile
  3599  004414  955B               	bcf	91,2,b	;volatile
  3600  004416  875B               	bsf	91,3,b	;volatile
  3601  004418  895B               	bsf	91,4,b	;volatile
  3602  00441A  9B5B               	bcf	91,5,b	;volatile
  3603                           
  3604                           ;Main.c: 62: unsigned long i2 = 0;
  3605  00441C  0E00               	movlw	0
  3606  00441E  0103               	movlb	3	; () banked
  3607  004420  6FDA               	movwf	main@i2& (0+255),b
  3608  004422  0E00               	movlw	0
  3609  004424  6FDB               	movwf	(main@i2+1)& (0+255),b
  3610  004426  0E00               	movlw	0
  3611  004428  6FDC               	movwf	(main@i2+2)& (0+255),b
  3612  00442A  0E00               	movlw	0
  3613  00442C  6FDD               	movwf	(main@i2+3)& (0+255),b
  3614                           
  3615                           ; BSR set to: 3
  3616                           ;Main.c: 63: INTCON0bits.GIE = 1;
  3617  00442E  013F               	movlb	63	; () banked
  3618  004430  8FD2               	bsf	210,7,b	;volatile
  3619                           
  3620                           ; BSR set to: 63
  3621                           ;Main.c: 64: INTCON0bits.IPEN = 1;
  3622  004432  8BD2               	bsf	210,5,b	;volatile
  3623                           
  3624                           ; BSR set to: 63
  3625                           ;Main.c: 67: Abre_Porta_1(0x100, 115200);
  3626  004434  0E01               	movlw	1
  3627  004436  0101               	movlb	1	; () banked
  3628  004438  6F1C               	movwf	(Abre_Porta_1@PORTA+1)& (0+255),b
  3629  00443A  0E00               	movlw	0
  3630  00443C  6F1B               	movwf	Abre_Porta_1@PORTA& (0+255),b
  3631  00443E  0E00               	movlw	0
  3632  004440  6F1D               	movwf	Abre_Porta_1@BaudRate& (0+255),b
  3633  004442  0EC2               	movlw	194
  3634  004444  6F1E               	movwf	(Abre_Porta_1@BaudRate+1)& (0+255),b
  3635  004446  0E01               	movlw	1
  3636  004448  6F1F               	movwf	(Abre_Porta_1@BaudRate+2)& (0+255),b
  3637  00444A  0E00               	movlw	0
  3638  00444C  6F20               	movwf	(Abre_Porta_1@BaudRate+3)& (0+255),b
  3639  00444E  EC5E  F036         	call	_Abre_Porta_1	;wreg free
  3640                           
  3641                           ;Main.c: 68: Abre_Porta_COMM(115200);
  3642  004452  0E00               	movlw	0
  3643  004454  0101               	movlb	1	; () banked
  3644  004456  6F1B               	movwf	Abre_Porta_COMM@BaudRate& (0+255),b
  3645  004458  0EC2               	movlw	194
  3646  00445A  6F1C               	movwf	(Abre_Porta_COMM@BaudRate+1)& (0+255),b
  3647  00445C  0E01               	movlw	1
  3648  00445E  6F1D               	movwf	(Abre_Porta_COMM@BaudRate+2)& (0+255),b
  3649  004460  0E00               	movlw	0
  3650  004462  6F1E               	movwf	(Abre_Porta_COMM@BaudRate+3)& (0+255),b
  3651  004464  ECED  F03A         	call	_Abre_Porta_COMM	;wreg free
  3652                           
  3653                           ;Main.c: 70: TRISFbits.TRISF7 = 0;
  3654  004468  013F               	movlb	63	; () banked
  3655  00446A  9FC7               	bcf	199,7,b	;volatile
  3656                           
  3657                           ; BSR set to: 63
  3658                           ;Main.c: 71: TRISFbits.TRISF5 = 0;
  3659  00446C  9BC7               	bcf	199,5,b	;volatile
  3660                           
  3661                           ; BSR set to: 63
  3662                           ;Main.c: 72: TRISFbits.TRISF6 = 0;
  3663  00446E  9DC7               	bcf	199,6,b	;volatile
  3664                           
  3665                           ; BSR set to: 63
  3666                           ;Main.c: 77: LATFbits.LATF7 = 0;
  3667  004470  9FBF               	bcf	191,7,b	;volatile
  3668                           
  3669                           ; BSR set to: 63
  3670                           ;Main.c: 78: LATFbits.LATF5 = 0;
  3671  004472  9BBF               	bcf	191,5,b	;volatile
  3672                           
  3673                           ; BSR set to: 63
  3674                           ;Main.c: 79: LATFbits.LATF6 = 0;
  3675  004474  9DBF               	bcf	191,6,b	;volatile
  3676                           
  3677                           ; BSR set to: 63
  3678                           ;Main.c: 81: _delay((unsigned long)((1000)*(40000000/4000.0)));
  3679  004476  0E33               	movlw	51
  3680  004478  0101               	movlb	1	; () banked
  3681  00447A  6FCC               	movwf	(??_main+1)& (0+255),b
  3682  00447C  0EBB               	movlw	187
  3683  00447E  6FCB               	movwf	??_main& (0+255),b
  3684  004480  0EDF               	movlw	223
  3685  004482                     u19567:
  3686  004482  2EE8               	decfsz	16360,f,c
  3687  004484  D7FE               	bra	u19567
  3688  004486  2FCB               	decfsz	??_main& (0+255),f,b
  3689  004488  D7FC               	bra	u19567
  3690  00448A  2FCC               	decfsz	(??_main+1)& (0+255),f,b
  3691  00448C  D7FA               	bra	u19567
  3692  00448E  D000               	nop2	
  3693                           
  3694                           ;Main.c: 85: FVRCONbits.ADFVR = 0b10;
  3695  004490  013E               	movlb	62	; () banked
  3696  004492  51C1               	movf	193,w,b	;volatile
  3697  004494  0BFC               	andlw	-4
  3698  004496  0902               	iorlw	2
  3699  004498  6FC1               	movwf	193,b	;volatile
  3700                           
  3701                           ; BSR set to: 62
  3702                           ;Main.c: 86: FVRCONbits.CDAFVR = 0b10;
  3703  00449A  51C1               	movf	193,w,b	;volatile
  3704  00449C  0BF3               	andlw	-13
  3705  00449E  0908               	iorlw	8
  3706  0044A0  6FC1               	movwf	193,b	;volatile
  3707                           
  3708                           ; BSR set to: 62
  3709                           ;Main.c: 87: FVRCONbits.EN = 1;
  3710  0044A2  8FC1               	bsf	193,7,b	;volatile
  3711                           
  3712                           ; BSR set to: 62
  3713                           ;Main.c: 89: ADCAP = 0b11111;
  3714  0044A4  0E1F               	movlw	31
  3715  0044A6  6FF5               	movwf	245,b	;volatile
  3716                           
  3717                           ; BSR set to: 62
  3718                           ;Main.c: 90: ADPREH = 0b11111;
  3719  0044A8  0E1F               	movlw	31
  3720  0044AA  6FF7               	movwf	247,b	;volatile
  3721                           
  3722                           ; BSR set to: 62
  3723                           ;Main.c: 91: ADPREL = 0b11111111;
  3724  0044AC  69F6               	setf	246,b	;volatile
  3725                           
  3726                           ; BSR set to: 62
  3727                           ;Main.c: 93: ADACQL = 0b11111111;
  3728  0044AE  69F3               	setf	243,b	;volatile
  3729                           
  3730                           ; BSR set to: 62
  3731                           ;Main.c: 94: ADACQH = 0b11111;
  3732  0044B0  0E1F               	movlw	31
  3733  0044B2  6FF4               	movwf	244,b	;volatile
  3734                           
  3735                           ; BSR set to: 62
  3736                           ;Main.c: 96: ADCLKbits.CS = 0b000011;
  3737  0044B4  81FF               	bsf	255,0,b	;volatile
  3738  0044B6  83FF               	bsf	255,1,b	;volatile
  3739  0044B8  95FF               	bcf	255,2,b	;volatile
  3740  0044BA  97FF               	bcf	255,3,b	;volatile
  3741  0044BC  99FF               	bcf	255,4,b	;volatile
  3742  0044BE  9BFF               	bcf	255,5,b	;volatile
  3743                           
  3744                           ; BSR set to: 62
  3745                           ;Main.c: 98: ADCON0bits.CS = 0;
  3746  0044C0  99F8               	bcf	248,4,b	;volatile
  3747                           
  3748                           ; BSR set to: 62
  3749                           ;Main.c: 99: ADCON0bits.FM = 1;
  3750  0044C2  51F8               	movf	248,w,b	;volatile
  3751  0044C4  0BF3               	andlw	-13
  3752  0044C6  0904               	iorlw	4
  3753  0044C8  6FF8               	movwf	248,b	;volatile
  3754                           
  3755                           ; BSR set to: 62
  3756                           ;Main.c: 100: ADREFbits.NREF = 1;
  3757  0044CA  51FD               	movf	253,w,b	;volatile
  3758  0044CC  0B0F               	andlw	-241
  3759  0044CE  0910               	iorlw	16
  3760  0044D0  6FFD               	movwf	253,b	;volatile
  3761                           
  3762                           ; BSR set to: 62
  3763                           ;Main.c: 101: ADREFbits.PREF = 0b10;
  3764  0044D2  51FD               	movf	253,w,b	;volatile
  3765  0044D4  0BF0               	andlw	-16
  3766  0044D6  0902               	iorlw	2
  3767  0044D8  6FFD               	movwf	253,b	;volatile
  3768                           
  3769                           ; BSR set to: 62
  3770                           ;Main.c: 102: ADPCH = 0b011111;
  3771  0044DA  0E1F               	movlw	31
  3772  0044DC  6FF1               	movwf	241,b	;volatile
  3773                           
  3774                           ; BSR set to: 62
  3775                           ;Main.c: 105: TRISDbits.TRISD7 = 1;
  3776  0044DE  013F               	movlb	63	; () banked
  3777  0044E0  8FC5               	bsf	197,7,b	;volatile
  3778                           
  3779                           ; BSR set to: 63
  3780                           ;Main.c: 106: ANSELDbits.ANSELD7 = 1;
  3781  0044E2  013A               	movlb	58	; () banked
  3782  0044E4  8F70               	bsf	112,7,b	;volatile
  3783                           
  3784                           ; BSR set to: 58
  3785                           ;Main.c: 107: ADCON0bits.ON = 1;
  3786  0044E6  013E               	movlb	62	; () banked
  3787  0044E8  8FF8               	bsf	248,7,b	;volatile
  3788                           
  3789                           ; BSR set to: 62
  3790                           ;Main.c: 109: TRISDbits.TRISD3 = 0;
  3791  0044EA  013F               	movlb	63	; () banked
  3792  0044EC  97C5               	bcf	197,3,b	;volatile
  3793                           
  3794                           ; BSR set to: 63
  3795                           ;Main.c: 110: TRISDbits.TRISD4 = 0;
  3796  0044EE  99C5               	bcf	197,4,b	;volatile
  3797                           
  3798                           ; BSR set to: 63
  3799                           ;Main.c: 113: LATDbits.LATD4 = 1;
  3800  0044F0  89BD               	bsf	189,4,b	;volatile
  3801                           
  3802                           ; BSR set to: 63
  3803                           ;Main.c: 115: Calcula_Fator_m();
  3804  0044F2  EC26  F039         	call	_Calcula_Fator_m	;wreg free
  3805                           
  3806                           ;Main.c: 118: char motivo [20];
  3807                           ;Main.c: 120: sprintf(motivo, "\r\n\r\n\r\nPCON0 >%i\r\n", PCON0);
  3808  0044F6  0EDE               	movlw	low main@motivo
  3809  0044F8  0101               	movlb	1	; () banked
  3810  0044FA  6F62               	movwf	sprintf@sp& (0+255),b
  3811  0044FC  0E03               	movlw	high main@motivo
  3812  0044FE  6F63               	movwf	(sprintf@sp+1)& (0+255),b
  3813  004500  0EBA               	movlw	low STR_1
  3814  004502  6F64               	movwf	sprintf@f& (0+255),b
  3815  004504  0EFE               	movlw	high STR_1
  3816  004506  6F65               	movwf	(sprintf@f+1)& (0+255),b
  3817  004508  006F FFC0  F166    	movff	16368,?_sprintf+4	;volatile
  3818  00450E  6B67               	clrf	(?_sprintf+5)& (0+255),b
  3819  004510  EC59  F000         	call	_sprintf	;wreg free
  3820                           
  3821                           ;Main.c: 121: Buffer_Escrita_USB_Add_String(motivo, 1);
  3822  004514  0EDE               	movlw	low main@motivo
  3823  004516  0101               	movlb	1	; () banked
  3824  004518  6F07               	movwf	Buffer_Escrita_USB_Add_String@dado& (0+255),b
  3825  00451A  0E03               	movlw	high main@motivo
  3826  00451C  6F08               	movwf	(Buffer_Escrita_USB_Add_String@dado+1)& (0+255),b
  3827  00451E  0E00               	movlw	0
  3828  004520  6F0A               	movwf	(Buffer_Escrita_USB_Add_String@aguarda+1)& (0+255),b
  3829  004522  0E01               	movlw	1
  3830  004524  6F09               	movwf	Buffer_Escrita_USB_Add_String@aguarda& (0+255),b
  3831  004526  EC9D  F037         	call	_Buffer_Escrita_USB_Add_String	;wreg free
  3832                           
  3833                           ;Main.c: 122: sprintf(motivo, "PCON01 >%i\r\n", PCON1);
  3834  00452A  0EDE               	movlw	low main@motivo
  3835  00452C  0101               	movlb	1	; () banked
  3836  00452E  6F62               	movwf	sprintf@sp& (0+255),b
  3837  004530  0E03               	movlw	high main@motivo
  3838  004532  6F63               	movwf	(sprintf@sp+1)& (0+255),b
  3839  004534  0E2B               	movlw	low STR_2
  3840  004536  6F64               	movwf	sprintf@f& (0+255),b
  3841  004538  0EFF               	movlw	high STR_2
  3842  00453A  6F65               	movwf	(sprintf@f+1)& (0+255),b
  3843  00453C  006F FFC4  F166    	movff	16369,?_sprintf+4	;volatile
  3844  004542  6B67               	clrf	(?_sprintf+5)& (0+255),b
  3845  004544  EC59  F000         	call	_sprintf	;wreg free
  3846                           
  3847                           ;Main.c: 123: Buffer_Escrita_USB_Add_String(motivo, 1);
  3848  004548  0EDE               	movlw	low main@motivo
  3849  00454A  0101               	movlb	1	; () banked
  3850  00454C  6F07               	movwf	Buffer_Escrita_USB_Add_String@dado& (0+255),b
  3851  00454E  0E03               	movlw	high main@motivo
  3852  004550  6F08               	movwf	(Buffer_Escrita_USB_Add_String@dado+1)& (0+255),b
  3853  004552  0E00               	movlw	0
  3854  004554  6F0A               	movwf	(Buffer_Escrita_USB_Add_String@aguarda+1)& (0+255),b
  3855  004556  0E01               	movlw	1
  3856  004558  6F09               	movwf	Buffer_Escrita_USB_Add_String@aguarda& (0+255),b
  3857  00455A  EC9D  F037         	call	_Buffer_Escrita_USB_Add_String	;wreg free
  3858                           
  3859                           ;Main.c: 125: BORCONbits.SBOREN = 0;
  3860  00455E  0139               	movlb	57	; () banked
  3861  004560  9FD0               	bcf	208,7,b	;volatile
  3862                           
  3863                           ; BSR set to: 57
  3864                           ;Main.c: 126: BORCONbits.BORRDY = 0;
  3865  004562  91D0               	bcf	208,0,b	;volatile
  3866                           
  3867                           ; BSR set to: 57
  3868                           ;Main.c: 128: MEMORIA[0] = 0;
  3869  004564  0E00               	movlw	0
  3870  004566  0102               	movlb	2	; () banked
  3871  004568  6F94               	movwf	_MEMORIA& (0+255),b
  3872  00456A  0E00               	movlw	0
  3873  00456C  6F95               	movwf	(_MEMORIA+1)& (0+255),b
  3874  00456E  0E00               	movlw	0
  3875  004570  6F96               	movwf	(_MEMORIA+2)& (0+255),b
  3876  004572  0E00               	movlw	0
  3877  004574  6F97               	movwf	(_MEMORIA+3)& (0+255),b
  3878                           
  3879                           ; BSR set to: 2
  3880                           ;Main.c: 129: MEMORIA[1] = 0;
  3881  004576  0E00               	movlw	0
  3882  004578  6F98               	movwf	(_MEMORIA+4)& (0+255),b
  3883  00457A  0E00               	movlw	0
  3884  00457C  6F99               	movwf	(_MEMORIA+5)& (0+255),b
  3885  00457E  0E00               	movlw	0
  3886  004580  6F9A               	movwf	(_MEMORIA+6)& (0+255),b
  3887  004582  0E00               	movlw	0
  3888  004584  6F9B               	movwf	(_MEMORIA+7)& (0+255),b
  3889                           
  3890                           ; BSR set to: 2
  3891                           ;Main.c: 130: MEMORIA[2] = 0;
  3892  004586  0E00               	movlw	0
  3893  004588  6F9C               	movwf	(_MEMORIA+8)& (0+255),b
  3894  00458A  0E00               	movlw	0
  3895  00458C  6F9D               	movwf	(_MEMORIA+9)& (0+255),b
  3896  00458E  0E00               	movlw	0
  3897  004590  6F9E               	movwf	(_MEMORIA+10)& (0+255),b
  3898  004592  0E00               	movlw	0
  3899  004594  6F9F               	movwf	(_MEMORIA+11)& (0+255),b
  3900                           
  3901                           ; BSR set to: 2
  3902                           ;Main.c: 131: MEMORIA[3] = 0;
  3903  004596  0E00               	movlw	0
  3904  004598  6FA0               	movwf	(_MEMORIA+12)& (0+255),b
  3905  00459A  0E00               	movlw	0
  3906  00459C  6FA1               	movwf	(_MEMORIA+13)& (0+255),b
  3907  00459E  0E00               	movlw	0
  3908  0045A0  6FA2               	movwf	(_MEMORIA+14)& (0+255),b
  3909  0045A2  0E00               	movlw	0
  3910  0045A4  6FA3               	movwf	(_MEMORIA+15)& (0+255),b
  3911                           
  3912                           ; BSR set to: 2
  3913                           ;Main.c: 132: MEMORIA[4] = 0;
  3914  0045A6  0E00               	movlw	0
  3915  0045A8  6FA4               	movwf	(_MEMORIA+16)& (0+255),b
  3916  0045AA  0E00               	movlw	0
  3917  0045AC  6FA5               	movwf	(_MEMORIA+17)& (0+255),b
  3918  0045AE  0E00               	movlw	0
  3919  0045B0  6FA6               	movwf	(_MEMORIA+18)& (0+255),b
  3920  0045B2  0E00               	movlw	0
  3921  0045B4  6FA7               	movwf	(_MEMORIA+19)& (0+255),b
  3922                           
  3923                           ; BSR set to: 2
  3924                           ;Main.c: 133: MEMORIA[5] = 0;
  3925  0045B6  0E00               	movlw	0
  3926  0045B8  6FA8               	movwf	(_MEMORIA+20)& (0+255),b
  3927  0045BA  0E00               	movlw	0
  3928  0045BC  6FA9               	movwf	(_MEMORIA+21)& (0+255),b
  3929  0045BE  0E00               	movlw	0
  3930  0045C0  6FAA               	movwf	(_MEMORIA+22)& (0+255),b
  3931  0045C2  0E00               	movlw	0
  3932  0045C4  6FAB               	movwf	(_MEMORIA+23)& (0+255),b
  3933                           
  3934                           ; BSR set to: 2
  3935                           ;Main.c: 134: MEMORIA[6] = 0;
  3936  0045C6  0E00               	movlw	0
  3937  0045C8  6FAC               	movwf	(_MEMORIA+24)& (0+255),b
  3938  0045CA  0E00               	movlw	0
  3939  0045CC  6FAD               	movwf	(_MEMORIA+25)& (0+255),b
  3940  0045CE  0E00               	movlw	0
  3941  0045D0  6FAE               	movwf	(_MEMORIA+26)& (0+255),b
  3942  0045D2  0E00               	movlw	0
  3943  0045D4  6FAF               	movwf	(_MEMORIA+27)& (0+255),b
  3944                           
  3945                           ; BSR set to: 2
  3946                           ;Main.c: 135: MEMORIA[7] = 0;
  3947  0045D6  0E00               	movlw	0
  3948  0045D8  6FB0               	movwf	(_MEMORIA+28)& (0+255),b
  3949  0045DA  0E00               	movlw	0
  3950  0045DC  6FB1               	movwf	(_MEMORIA+29)& (0+255),b
  3951  0045DE  0E00               	movlw	0
  3952  0045E0  6FB2               	movwf	(_MEMORIA+30)& (0+255),b
  3953  0045E2  0E00               	movlw	0
  3954  0045E4  6FB3               	movwf	(_MEMORIA+31)& (0+255),b
  3955                           
  3956                           ; BSR set to: 2
  3957                           ;Main.c: 136: MEMORIA[8] = 0;
  3958  0045E6  0E00               	movlw	0
  3959  0045E8  6FB4               	movwf	(_MEMORIA+32)& (0+255),b
  3960  0045EA  0E00               	movlw	0
  3961  0045EC  6FB5               	movwf	(_MEMORIA+33)& (0+255),b
  3962  0045EE  0E00               	movlw	0
  3963  0045F0  6FB6               	movwf	(_MEMORIA+34)& (0+255),b
  3964  0045F2  0E00               	movlw	0
  3965  0045F4  6FB7               	movwf	(_MEMORIA+35)& (0+255),b
  3966                           
  3967                           ; BSR set to: 2
  3968                           ;Main.c: 137: MEMORIA[9] = 0;
  3969  0045F6  0E00               	movlw	0
  3970  0045F8  6FB8               	movwf	(_MEMORIA+36)& (0+255),b
  3971  0045FA  0E00               	movlw	0
  3972  0045FC  6FB9               	movwf	(_MEMORIA+37)& (0+255),b
  3973  0045FE  0E00               	movlw	0
  3974  004600  6FBA               	movwf	(_MEMORIA+38)& (0+255),b
  3975  004602  0E00               	movlw	0
  3976  004604  6FBB               	movwf	(_MEMORIA+39)& (0+255),b
  3977                           
  3978                           ; BSR set to: 2
  3979                           ;Main.c: 139: InicializaWifi();
  3980  004606  EC5D  F044         	call	_InicializaWifi	;wreg free
  3981  00460A                     
  3982                           ;Main.c: 145: PORTBbits.RB2 = 0;
  3983  00460A  013F               	movlb	63	; () banked
  3984  00460C  95CB               	bcf	203,2,b	;volatile
  3985  00460E  0004               	clrwdt		;# 
  3986                           
  3987                           ;Main.c: 147: if (LATEbits.LATE2 == 1) {
  3988  004610  013F               	movlb	63	; () banked
  3989  004612  A5BE               	btfss	190,2,b	;volatile
  3990  004614  D00D               	goto	u19367
  3991                           
  3992                           ; BSR set to: 63
  3993                           ;Main.c: 148: LATFbits.LATF7 ^= 1;
  3994  004616  7FBF               	btg	191,7,b	;volatile
  3995                           
  3996                           ; BSR set to: 63
  3997                           ;Main.c: 149: LATFbits.LATF5 = PORTAbits.RA4;
  3998  004618  A9CA               	btfss	202,4,b	;volatile
  3999  00461A  D002               	bra	u19355
  4000  00461C  8BBF               	bsf	191,5,b	;volatile
  4001  00461E  D002               	bra	u19357
  4002  004620                     u19355:
  4003  004620  013F               	movlb	63	; () banked
  4004  004622  9BBF               	bcf	191,5,b	;volatile
  4005  004624                     u19357:
  4006                           
  4007                           ; BSR set to: 63
  4008                           ;Main.c: 150: LATFbits.LATF6 = PORTEbits.RE1;
  4009  004624  A3CE               	btfss	206,1,b	;volatile
  4010  004626  D002               	bra	u19365
  4011  004628  8DBF               	bsf	191,6,b	;volatile
  4012  00462A  D002               	bra	u19367
  4013  00462C                     u19365:
  4014  00462C  013F               	movlb	63	; () banked
  4015  00462E  9DBF               	bcf	191,6,b	;volatile
  4016  004630                     u19367:
  4017                           
  4018                           ; BSR set to: 63
  4019                           ;Main.c: 151: }
  4020                           ;Main.c: 154: if (PORTAbits.RA4 && primeiro == 0) primeiro = 1;
  4021                           
  4022                           ; BSR set to: 63
  4023  004630  A9CA               	btfss	202,4,b	;volatile
  4024  004632  D009               	goto	l129
  4025                           
  4026                           ; BSR set to: 63
  4027  004634  0101               	movlb	1	; () banked
  4028  004636  51E9               	movf	_primeiro& (0+255),w,b
  4029  004638  11EA               	iorwf	(_primeiro+1)& (0+255),w,b
  4030  00463A  A4D8               	btfss	16344,2,c
  4031  00463C  D004               	goto	l129
  4032                           
  4033                           ; BSR set to: 1
  4034  00463E  0E00               	movlw	0
  4035  004640  6FEA               	movwf	(_primeiro+1)& (0+255),b
  4036  004642  0E01               	movlw	1
  4037  004644  6FE9               	movwf	_primeiro& (0+255),b
  4038  004646                     l129:
  4039                           
  4040                           ;Main.c: 155: if (primeiro == 1 && PORTAbits.RA4 == 0) primeiro = 2;
  4041                           
  4042                           ; BSR set to: 1
  4043  004646  0101               	movlb	1	; () banked
  4044  004648  05E9               	decf	_primeiro& (0+255),w,b
  4045  00464A  11EA               	iorwf	(_primeiro+1)& (0+255),w,b
  4046  00464C  A4D8               	btfss	16344,2,c
  4047  00464E  D008               	goto	l130
  4048                           
  4049                           ; BSR set to: 1
  4050  004650  013F               	movlb	63	; () banked
  4051  004652  B9CA               	btfsc	202,4,b	;volatile
  4052  004654  D005               	goto	l130
  4053                           
  4054                           ; BSR set to: 63
  4055  004656  0E00               	movlw	0
  4056  004658  0101               	movlb	1	; () banked
  4057  00465A  6FEA               	movwf	(_primeiro+1)& (0+255),b
  4058  00465C  0E02               	movlw	2
  4059  00465E  6FE9               	movwf	_primeiro& (0+255),b
  4060  004660                     l130:
  4061                           
  4062                           ;Main.c: 156: if (primeiro == 2 && PORTEbits.RE1 == 0 && PORTAbits.RA4 == 0)primeiro = 3
      +                          ;
  4063                           
  4064                           ; BSR set to: 1
  4065  004660  0E02               	movlw	2
  4066  004662  0101               	movlb	1	; () banked
  4067  004664  19E9               	xorwf	_primeiro& (0+255),w,b
  4068  004666  11EA               	iorwf	(_primeiro+1)& (0+255),w,b
  4069  004668  A4D8               	btfss	16344,2,c
  4070  00466A  D009               	goto	l131
  4071                           
  4072                           ; BSR set to: 1
  4073  00466C  013F               	movlb	63	; () banked
  4074  00466E  A3CE               	btfss	206,1,b	;volatile
  4075                           
  4076                           ; BSR set to: 63
  4077  004670  B9CA               	btfsc	202,4,b	;volatile
  4078  004672  D005               	goto	l131
  4079                           
  4080                           ; BSR set to: 63
  4081  004674  0E00               	movlw	0
  4082  004676  0101               	movlb	1	; () banked
  4083  004678  6FEA               	movwf	(_primeiro+1)& (0+255),b
  4084  00467A  0E03               	movlw	3
  4085  00467C  6FE9               	movwf	_primeiro& (0+255),b
  4086  00467E                     l131:
  4087                           
  4088                           ;Main.c: 158: if (primeiro == 3 && PORTEbits.RE1 == 0) {
  4089                           
  4090                           ; BSR set to: 1
  4091  00467E  0E03               	movlw	3
  4092  004680  0101               	movlb	1	; () banked
  4093  004682  19E9               	xorwf	_primeiro& (0+255),w,b
  4094  004684  11EA               	iorwf	(_primeiro+1)& (0+255),w,b
  4095  004686  A4D8               	btfss	16344,2,c
  4096  004688  D01A               	goto	l132
  4097                           
  4098                           ; BSR set to: 1
  4099  00468A  013F               	movlb	63	; () banked
  4100  00468C  B3CE               	btfsc	206,1,b	;volatile
  4101  00468E  D017               	goto	l132
  4102                           
  4103                           ; BSR set to: 63
  4104                           ;Main.c: 159: primeiro = 5;
  4105  004690  0E00               	movlw	0
  4106  004692  0101               	movlb	1	; () banked
  4107  004694  6FEA               	movwf	(_primeiro+1)& (0+255),b
  4108  004696  0E05               	movlw	5
  4109  004698  6FE9               	movwf	_primeiro& (0+255),b
  4110                           
  4111                           ; BSR set to: 1
  4112                           ;Main.c: 160: Aguarda_dado("WiFi Up:0", "\r", "", GETMACAddr);
  4113  00469A  0E81               	movlw	low STR_3
  4114  00469C  6FAF               	movwf	Aguarda_dado@inicio& (0+255),b
  4115  00469E  0EFF               	movlw	high STR_3
  4116  0046A0  6FB0               	movwf	(Aguarda_dado@inicio+1)& (0+255),b
  4117  0046A2  0EC4               	movlw	low (STR_26+29)
  4118  0046A4  6FB1               	movwf	Aguarda_dado@fim& (0+255),b
  4119  0046A6  0EFD               	movlw	high (STR_26+29)
  4120  0046A8  6FB2               	movwf	(Aguarda_dado@fim+1)& (0+255),b
  4121  0046AA  0E64               	movlw	low (STR_90+23)
  4122  0046AC  6FB3               	movwf	Aguarda_dado@error& (0+255),b
  4123  0046AE  0EFE               	movlw	high (STR_90+23)
  4124  0046B0  6FB4               	movwf	(Aguarda_dado@error+1)& (0+255),b
  4125  0046B2  0E24               	movlw	low _GETMACAddr
  4126  0046B4  6FB5               	movwf	Aguarda_dado@ff& (0+255),b
  4127  0046B6  0E80               	movlw	high _GETMACAddr
  4128  0046B8  6FB6               	movwf	(Aguarda_dado@ff+1)& (0+255),b
  4129  0046BA  EC46  F040         	call	_Aguarda_dado	;wreg free
  4130  0046BE                     l132:
  4131                           
  4132                           ;Main.c: 161: }
  4133                           ;Main.c: 162: TransmiteBuffer_COMM();
  4134  0046BE  EC37  F041         	call	_TransmiteBuffer_COMM	;wreg free
  4135                           
  4136                           ;Main.c: 163: TransmiteBuffer_USB();
  4137  0046C2  EC65  F041         	call	_TransmiteBuffer_USB	;wreg free
  4138                           
  4139                           ;Main.c: 165: Verifica_Analogica();
  4140  0046C6  EC58  F02D         	call	_Verifica_Analogica	;wreg free
  4141                           
  4142                           ;Main.c: 172: if (contaLoop > 100000) {
  4143  0046CA  0102               	movlb	2	; () banked
  4144  0046CC  BFCB               	btfsc	(_contaLoop+3)& (0+255),7,b
  4145  0046CE  D016               	goto	l133
  4146  0046D0  51CB               	movf	(_contaLoop+3)& (0+255),w,b
  4147  0046D2  E108               	bnz	u19460
  4148  0046D4  0EA1               	movlw	161
  4149  0046D6  5DC8               	subwf	_contaLoop& (0+255),w,b
  4150  0046D8  0E86               	movlw	134
  4151  0046DA  59C9               	subwfb	(_contaLoop+1)& (0+255),w,b
  4152  0046DC  0E01               	movlw	1
  4153  0046DE  59CA               	subwfb	(_contaLoop+2)& (0+255),w,b
  4154  0046E0  A0D8               	btfss	16344,0,c
  4155  0046E2  D00C               	goto	l133
  4156  0046E4                     u19460:
  4157                           
  4158                           ; BSR set to: 2
  4159                           ;Main.c: 174: inicia_Post();
  4160  0046E4  EC8D  F03D         	call	_inicia_Post	;wreg free
  4161                           
  4162                           ;Main.c: 175: contaLoop = 0;
  4163  0046E8  0E00               	movlw	0
  4164  0046EA  0102               	movlb	2	; () banked
  4165  0046EC  6FC8               	movwf	_contaLoop& (0+255),b
  4166  0046EE  0E00               	movlw	0
  4167  0046F0  6FC9               	movwf	(_contaLoop+1)& (0+255),b
  4168  0046F2  0E00               	movlw	0
  4169  0046F4  6FCA               	movwf	(_contaLoop+2)& (0+255),b
  4170  0046F6  0E00               	movlw	0
  4171  0046F8  6FCB               	movwf	(_contaLoop+3)& (0+255),b
  4172                           
  4173                           ;Main.c: 176: } else {
  4174  0046FA  D00A               	goto	l135
  4175  0046FC                     l133:
  4176                           
  4177                           ; BSR set to: 2
  4178                           ;Main.c: 177: if (Postando == 0) contaLoop++;
  4179                           
  4180                           ; BSR set to: 2
  4181  0046FC  51FE               	movf	_Postando& (0+255),w,b
  4182  0046FE  11FF               	iorwf	(_Postando+1)& (0+255),w,b
  4183  004700  A4D8               	btfss	16344,2,c
  4184  004702  D006               	goto	l135
  4185                           
  4186                           ; BSR set to: 2
  4187  004704  0E01               	movlw	1
  4188  004706  27C8               	addwf	_contaLoop& (0+255),f,b
  4189  004708  0E00               	movlw	0
  4190  00470A  23C9               	addwfc	(_contaLoop+1)& (0+255),f,b
  4191  00470C  23CA               	addwfc	(_contaLoop+2)& (0+255),f,b
  4192  00470E  23CB               	addwfc	(_contaLoop+3)& (0+255),f,b
  4193  004710                     l135:
  4194                           
  4195                           ; BSR set to: 2
  4196                           ;Main.c: 178: }
  4197                           ;Main.c: 180: if (conta > 0x2fffff) {
  4198                           
  4199                           ; BSR set to: 2
  4200  004710  BFC7               	btfsc	(_conta+3)& (0+255),7,b
  4201  004712  D011               	goto	l136
  4202  004714  51C7               	movf	(_conta+3)& (0+255),w,b
  4203  004716  E104               	bnz	u19480
  4204  004718  0E30               	movlw	48
  4205  00471A  5DC6               	subwf	(_conta+2)& (0+255),w,b
  4206  00471C  A0D8               	btfss	16344,0,c
  4207  00471E  D00B               	goto	l136
  4208  004720                     u19480:
  4209                           
  4210                           ; BSR set to: 2
  4211  004720  00FF               	reset		;# 
  4212                           
  4213                           ;Main.c: 182: conta = 0;
  4214  004722  0E00               	movlw	0
  4215  004724  0102               	movlb	2	; () banked
  4216  004726  6FC4               	movwf	_conta& (0+255),b
  4217  004728  0E00               	movlw	0
  4218  00472A  6FC5               	movwf	(_conta+1)& (0+255),b
  4219  00472C  0E00               	movlw	0
  4220  00472E  6FC6               	movwf	(_conta+2)& (0+255),b
  4221  004730  0E00               	movlw	0
  4222  004732  6FC7               	movwf	(_conta+3)& (0+255),b
  4223                           
  4224                           ;Main.c: 183: } else {
  4225  004734  D006               	goto	l137
  4226  004736                     l136:
  4227                           
  4228                           ; BSR set to: 2
  4229                           ;Main.c: 184: conta++;
  4230                           
  4231                           ; BSR set to: 2
  4232  004736  0E01               	movlw	1
  4233  004738  27C4               	addwf	_conta& (0+255),f,b
  4234  00473A  0E00               	movlw	0
  4235  00473C  23C5               	addwfc	(_conta+1)& (0+255),f,b
  4236  00473E  23C6               	addwfc	(_conta+2)& (0+255),f,b
  4237  004740  23C7               	addwfc	(_conta+3)& (0+255),f,b
  4238  004742                     l137:
  4239                           
  4240                           ; BSR set to: 2
  4241                           ;Main.c: 185: }
  4242                           ;Main.c: 189: if (LATEbits.LATE2 == 0) {
  4243                           
  4244                           ; BSR set to: 2
  4245  004742  013F               	movlb	63	; () banked
  4246  004744  B5BE               	btfsc	190,2,b	;volatile
  4247  004746  D761               	goto	l127
  4248                           
  4249                           ; BSR set to: 63
  4250                           ;Main.c: 191: LATFbits.LATF7 = 0;
  4251  004748  9FBF               	bcf	191,7,b	;volatile
  4252                           
  4253                           ;Main.c: 192: LATFbits.LATF5 = 0;
  4254  00474A  9BBF               	bcf	191,5,b	;volatile
  4255                           
  4256                           ;Main.c: 193: LATFbits.LATF6 = 0;
  4257  00474C  9DBF               	bcf	191,6,b	;volatile
  4258                           
  4259                           ; BSR set to: 63
  4260                           ;Main.c: 195: conta = 0;
  4261  00474E  0E00               	movlw	0
  4262  004750  0102               	movlb	2	; () banked
  4263  004752  6FC4               	movwf	_conta& (0+255),b
  4264  004754  0E00               	movlw	0
  4265  004756  6FC5               	movwf	(_conta+1)& (0+255),b
  4266  004758  0E00               	movlw	0
  4267  00475A  6FC6               	movwf	(_conta+2)& (0+255),b
  4268  00475C  0E00               	movlw	0
  4269  00475E  6FC7               	movwf	(_conta+3)& (0+255),b
  4270                           
  4271                           ; BSR set to: 2
  4272                           ;Main.c: 197: if (contaLed > 0x33333) {
  4273  004760  BFC3               	btfsc	(_contaLed+3)& (0+255),7,b
  4274  004762  D025               	goto	l139
  4275  004764  51C3               	movf	(_contaLed+3)& (0+255),w,b
  4276  004766  E108               	bnz	u19500
  4277  004768  0E34               	movlw	52
  4278  00476A  5DC0               	subwf	_contaLed& (0+255),w,b
  4279  00476C  0E33               	movlw	51
  4280  00476E  59C1               	subwfb	(_contaLed+1)& (0+255),w,b
  4281  004770  0E03               	movlw	3
  4282  004772  59C2               	subwfb	(_contaLed+2)& (0+255),w,b
  4283  004774  A0D8               	btfss	16344,0,c
  4284  004776  D01B               	goto	l139
  4285  004778                     u19500:
  4286                           
  4287                           ; BSR set to: 2
  4288                           ;Main.c: 198: LATFbits.LATF7 = 1;
  4289  004778  013F               	movlb	63	; () banked
  4290  00477A  8FBF               	bsf	191,7,b	;volatile
  4291                           
  4292                           ; BSR set to: 63
  4293                           ;Main.c: 199: _delay((unsigned long)((200)*(40000000/4000.0)));
  4294  00477C  0E0B               	movlw	11
  4295  00477E  0101               	movlb	1	; () banked
  4296  004780  6FCC               	movwf	(??_main+1)& (0+255),b
  4297  004782  0E26               	movlw	38
  4298  004784  6FCB               	movwf	??_main& (0+255),b
  4299  004786  0E5D               	movlw	93
  4300  004788                     u19577:
  4301  004788  2EE8               	decfsz	16360,f,c
  4302  00478A  D7FE               	bra	u19577
  4303  00478C  2FCB               	decfsz	??_main& (0+255),f,b
  4304  00478E  D7FC               	bra	u19577
  4305  004790  2FCC               	decfsz	(??_main+1)& (0+255),f,b
  4306  004792  D7FA               	bra	u19577
  4307  004794  D000               	nop2	
  4308                           
  4309                           ;Main.c: 200: LATFbits.LATF7 = 0;
  4310  004796  013F               	movlb	63	; () banked
  4311  004798  9FBF               	bcf	191,7,b	;volatile
  4312                           
  4313                           ; BSR set to: 63
  4314                           ;Main.c: 201: contaLed = 0;
  4315  00479A  0E00               	movlw	0
  4316  00479C  0102               	movlb	2	; () banked
  4317  00479E  6FC0               	movwf	_contaLed& (0+255),b
  4318  0047A0  0E00               	movlw	0
  4319  0047A2  6FC1               	movwf	(_contaLed+1)& (0+255),b
  4320  0047A4  0E00               	movlw	0
  4321  0047A6  6FC2               	movwf	(_contaLed+2)& (0+255),b
  4322  0047A8  0E00               	movlw	0
  4323  0047AA  6FC3               	movwf	(_contaLed+3)& (0+255),b
  4324                           
  4325                           ;Main.c: 202: } else {
  4326  0047AC  D72E               	goto	l127
  4327  0047AE                     l139:
  4328                           
  4329                           ; BSR set to: 2
  4330                           ;Main.c: 203: contaLed++;
  4331                           
  4332                           ; BSR set to: 2
  4333  0047AE  0E01               	movlw	1
  4334  0047B0  27C0               	addwf	_contaLed& (0+255),f,b
  4335  0047B2  0E00               	movlw	0
  4336  0047B4  23C1               	addwfc	(_contaLed+1)& (0+255),f,b
  4337  0047B6  23C2               	addwfc	(_contaLed+2)& (0+255),f,b
  4338  0047B8  23C3               	addwfc	(_contaLed+3)& (0+255),f,b
  4339                           
  4340                           ; BSR set to: 2
  4341                           ;Main.c: 204: }
  4342                           ;Main.c: 205: }
  4343                           ;Main.c: 207: } while (1);
  4344                           
  4345                           ; BSR set to: 2
  4346  0047BA  D727               	goto	l127
  4347  0047BC                     __end_of_main:
  4348                           	opt stack 0
  4349                           
  4350 ;; *************** function _inicia_Post *****************
  4351 ;; Defined at:
  4352 ;;		line 102 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;		None
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      void 
  4359 ;; Registers used:
  4360 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4368 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4369 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4370 ;;Total ram usage:        2 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; Hardware stack levels required when called:   16
  4373 ;; This function calls:
  4374 ;;		_Aguarda_dado
  4375 ;;		_Buffer_Escrita_COMM_Add_String
  4376 ;;		_Buffer_Escrita_USB_Add_String
  4377 ;;		_append_Arquivo_Json
  4378 ;; This function is called by:
  4379 ;;		_main
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text1
  4384  007B1A                     __ptext1:
  4385                           	opt stack 0
  4386  007B1A                     _inicia_Post:
  4387                           	opt stack 14
  4388                           
  4389                           ;Wifi.c: 103: Postando = 1;
  4390                           
  4391                           ; BSR set to: 2
  4392                           ;incstack = 0
  4393  007B1A  0E00               	movlw	0
  4394  007B1C  0102               	movlb	2	; () banked
  4395  007B1E  6FFF               	movwf	(_Postando+1)& (0+255),b
  4396  007B20  0E01               	movlw	1
  4397  007B22  6FFE               	movwf	_Postando& (0+255),b
  4398                           
  4399                           ; BSR set to: 2
  4400                           ;Wifi.c: 104: LATEbits.LATE2 = 1;
  4401  007B24  013F               	movlb	63	; () banked
  4402  007B26  85BE               	bsf	190,2,b	;volatile
  4403                           
  4404                           ; BSR set to: 63
  4405                           ;Wifi.c: 105: Buffer_Escrita_COMM_Add_String("AT+S.FSD=gerrex.json\r", 1);
  4406  007B28  0E7D               	movlw	low STR_17
  4407  007B2A  0101               	movlb	1	; () banked
  4408  007B2C  6F07               	movwf	Buffer_Escrita_COMM_Add_String@dado& (0+255),b
  4409  007B2E  0EFE               	movlw	high STR_17
  4410  007B30  6F08               	movwf	(Buffer_Escrita_COMM_Add_String@dado+1)& (0+255),b
  4411  007B32  0E00               	movlw	0
  4412  007B34  6F0A               	movwf	(Buffer_Escrita_COMM_Add_String@aguarda+1)& (0+255),b
  4413  007B36  0E01               	movlw	1
  4414  007B38  6F09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda& (0+255),b
  4415  007B3A  EC36  F037         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
  4416                           
  4417                           ;Wifi.c: 106: _delay((unsigned long)((500)*(40000000/4000.0)));
  4418  007B3E  0E1A               	movlw	26
  4419  007B40  0101               	movlb	1	; () banked
  4420  007B42  6FCA               	movwf	(??_inicia_Post+1)& (0+255),b
  4421  007B44  0E5E               	movlw	94
  4422  007B46  6FC9               	movwf	??_inicia_Post& (0+255),b
  4423  007B48  0E6E               	movlw	110
  4424  007B4A                     u19587:
  4425  007B4A  2EE8               	decfsz	16360,f,c
  4426  007B4C  D7FE               	bra	u19587
  4427  007B4E  2FC9               	decfsz	??_inicia_Post& (0+255),f,b
  4428  007B50  D7FC               	bra	u19587
  4429  007B52  2FCA               	decfsz	(??_inicia_Post+1)& (0+255),f,b
  4430  007B54  D7FA               	bra	u19587
  4431  007B56  F000               	nop	
  4432                           
  4433                           ;Wifi.c: 107: Buffer_Escrita_USB_Add_String("Inicia_Arquivo_Gerrex\r\n", 1);
  4434  007B58  0E65               	movlw	low STR_18
  4435  007B5A  0101               	movlb	1	; () banked
  4436  007B5C  6F07               	movwf	Buffer_Escrita_USB_Add_String@dado& (0+255),b
  4437  007B5E  0EFE               	movlw	high STR_18
  4438  007B60  6F08               	movwf	(Buffer_Escrita_USB_Add_String@dado+1)& (0+255),b
  4439  007B62  0E00               	movlw	0
  4440  007B64  6F0A               	movwf	(Buffer_Escrita_USB_Add_String@aguarda+1)& (0+255),b
  4441  007B66  0E01               	movlw	1
  4442  007B68  6F09               	movwf	Buffer_Escrita_USB_Add_String@aguarda& (0+255),b
  4443  007B6A  EC9D  F037         	call	_Buffer_Escrita_USB_Add_String	;wreg free
  4444                           
  4445                           ;Wifi.c: 108: append_Arquivo_Json();
  4446  007B6E  EC44  F028         	call	_append_Arquivo_Json	;wreg free
  4447                           
  4448                           ;Wifi.c: 109: Aguarda_dado("-S", "\r", "", Post);
  4449  007B72  0EF3               	movlw	low STR_19
  4450  007B74  0101               	movlb	1	; () banked
  4451  007B76  6FAF               	movwf	Aguarda_dado@inicio& (0+255),b
  4452  007B78  0EFF               	movlw	high STR_19
  4453  007B7A  6FB0               	movwf	(Aguarda_dado@inicio+1)& (0+255),b
  4454  007B7C  0EC4               	movlw	low (STR_26+29)
  4455  007B7E  6FB1               	movwf	Aguarda_dado@fim& (0+255),b
  4456  007B80  0EFD               	movlw	high (STR_26+29)
  4457  007B82  6FB2               	movwf	(Aguarda_dado@fim+1)& (0+255),b
  4458  007B84  0E64               	movlw	low (STR_90+23)
  4459  007B86  6FB3               	movwf	Aguarda_dado@error& (0+255),b
  4460  007B88  0EFE               	movlw	high (STR_90+23)
  4461  007B8A  6FB4               	movwf	(Aguarda_dado@error+1)& (0+255),b
  4462  007B8C  0E86               	movlw	low _Post
  4463  007B8E  6FB5               	movwf	Aguarda_dado@ff& (0+255),b
  4464  007B90  0E7D               	movlw	high _Post
  4465  007B92  6FB6               	movwf	(Aguarda_dado@ff+1)& (0+255),b
  4466  007B94  EC46  F040         	call	_Aguarda_dado	;wreg free
  4467  007B98  0012               	return		;funcret
  4468  007B9A                     __end_of_inicia_Post:
  4469                           	opt stack 0
  4470                           
  4471 ;; *************** function _append_Arquivo_Json *****************
  4472 ;; Defined at:
  4473 ;;		line 49 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;		None
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;  valorMem_Cha   10  132[BANK2 ] unsigned char [10]
  4478 ;;  resultado       6  142[BANK2 ] unsigned char [6]
  4479 ;;  valorMem        4  120[BANK2 ] long 
  4480 ;;  linhaArquivo  120    0[BANK2 ] unsigned char [120]
  4481 ;;  i               2  130[BANK2 ] int 
  4482 ;;  virgula         2  128[BANK2 ] unsigned char [2]
  4483 ;;  primeiro        2  126[BANK2 ] int 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1    wreg      void 
  4486 ;; Registers used:
  4487 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4494 ;;      Locals:         0       0       0     148       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;      Totals:         0       0       4     148       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;Total ram usage:      152 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:   15
  4500 ;; This function calls:
  4501 ;;		___wmul
  4502 ;;		_cria_Arquivo
  4503 ;;		_sprintf
  4504 ;; This function is called by:
  4505 ;;		_inicia_Post
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text2
  4510  005088                     __ptext2:
  4511                           	opt stack 0
  4512  005088                     _append_Arquivo_Json:
  4513                           	opt stack 14
  4514                           
  4515                           ;Wifi.c: 50: int i = 0;
  4516                           
  4517                           ;incstack = 0
  4518  005088  0E00               	movlw	0
  4519  00508A  0102               	movlb	2	; () banked
  4520  00508C  6F83               	movwf	(append_Arquivo_Json@i+1)& (0+255),b
  4521  00508E  0E00               	movlw	0
  4522  005090  6F82               	movwf	append_Arquivo_Json@i& (0+255),b
  4523                           
  4524                           ;Wifi.c: 51: int primeiro = 0;
  4525  005092  0E00               	movlw	0
  4526  005094  6F7F               	movwf	(append_Arquivo_Json@primeiro+1)& (0+255),b
  4527  005096  0E00               	movlw	0
  4528  005098  6F7E               	movwf	append_Arquivo_Json@primeiro& (0+255),b
  4529                           
  4530                           ; BSR set to: 2
  4531                           ;Wifi.c: 52: char virgula[2];
  4532                           ;Wifi.c: 53: char linhaArquivo [120];
  4533                           ;Wifi.c: 55: cria_Arquivo("gerrex.json", "{\"code\":\"00:80:E1:BF:E3:C8\",\"taskResponse
      +                          Frames\":[");
  4534  00509A  0E38               	movlw	low STR_8
  4535  00509C  0101               	movlb	1	; () banked
  4536  00509E  6FAF               	movwf	cria_Arquivo@nome& (0+255),b
  4537  0050A0  0EFF               	movlw	high STR_8
  4538  0050A2  6FB0               	movwf	(cria_Arquivo@nome+1)& (0+255),b
  4539  0050A4  0E29               	movlw	low STR_9
  4540  0050A6  6FB1               	movwf	cria_Arquivo@dado& (0+255),b
  4541  0050A8  0EFD               	movlw	high STR_9
  4542  0050AA  6FB2               	movwf	(cria_Arquivo@dado+1)& (0+255),b
  4543  0050AC  ECC8  F038         	call	_cria_Arquivo	;wreg free
  4544                           
  4545                           ;Wifi.c: 59: MEMORIA[2] = 0;
  4546  0050B0  0E00               	movlw	0
  4547  0050B2  0102               	movlb	2	; () banked
  4548  0050B4  6F9C               	movwf	(_MEMORIA+8)& (0+255),b
  4549  0050B6  0E00               	movlw	0
  4550  0050B8  6F9D               	movwf	(_MEMORIA+9)& (0+255),b
  4551  0050BA  0E00               	movlw	0
  4552  0050BC  6F9E               	movwf	(_MEMORIA+10)& (0+255),b
  4553  0050BE  0E00               	movlw	0
  4554  0050C0  6F9F               	movwf	(_MEMORIA+11)& (0+255),b
  4555                           
  4556                           ; BSR set to: 2
  4557                           ;Wifi.c: 60: MEMORIA[3] = 0;
  4558  0050C2  0E00               	movlw	0
  4559  0050C4  6FA0               	movwf	(_MEMORIA+12)& (0+255),b
  4560  0050C6  0E00               	movlw	0
  4561  0050C8  6FA1               	movwf	(_MEMORIA+13)& (0+255),b
  4562  0050CA  0E00               	movlw	0
  4563  0050CC  6FA2               	movwf	(_MEMORIA+14)& (0+255),b
  4564  0050CE  0E00               	movlw	0
  4565  0050D0  6FA3               	movwf	(_MEMORIA+15)& (0+255),b
  4566                           
  4567                           ; BSR set to: 2
  4568                           ;Wifi.c: 61: MEMORIA[4] = 0;
  4569  0050D2  0E00               	movlw	0
  4570  0050D4  6FA4               	movwf	(_MEMORIA+16)& (0+255),b
  4571  0050D6  0E00               	movlw	0
  4572  0050D8  6FA5               	movwf	(_MEMORIA+17)& (0+255),b
  4573  0050DA  0E00               	movlw	0
  4574  0050DC  6FA6               	movwf	(_MEMORIA+18)& (0+255),b
  4575  0050DE  0E00               	movlw	0
  4576  0050E0  6FA7               	movwf	(_MEMORIA+19)& (0+255),b
  4577                           
  4578                           ; BSR set to: 2
  4579                           ;Wifi.c: 62: MEMORIA[5] = 0;
  4580  0050E2  0E00               	movlw	0
  4581  0050E4  6FA8               	movwf	(_MEMORIA+20)& (0+255),b
  4582  0050E6  0E00               	movlw	0
  4583  0050E8  6FA9               	movwf	(_MEMORIA+21)& (0+255),b
  4584  0050EA  0E00               	movlw	0
  4585  0050EC  6FAA               	movwf	(_MEMORIA+22)& (0+255),b
  4586  0050EE  0E00               	movlw	0
  4587  0050F0  6FAB               	movwf	(_MEMORIA+23)& (0+255),b
  4588                           
  4589                           ; BSR set to: 2
  4590                           ;Wifi.c: 63: MEMORIA[6] = 0;
  4591  0050F2  0E00               	movlw	0
  4592  0050F4  6FAC               	movwf	(_MEMORIA+24)& (0+255),b
  4593  0050F6  0E00               	movlw	0
  4594  0050F8  6FAD               	movwf	(_MEMORIA+25)& (0+255),b
  4595  0050FA  0E00               	movlw	0
  4596  0050FC  6FAE               	movwf	(_MEMORIA+26)& (0+255),b
  4597  0050FE  0E00               	movlw	0
  4598  005100  6FAF               	movwf	(_MEMORIA+27)& (0+255),b
  4599                           
  4600                           ; BSR set to: 2
  4601                           ;Wifi.c: 67: for (i = 0; i < tamFrames; i++) {
  4602  005102  0E00               	movlw	0
  4603  005104  6F83               	movwf	(append_Arquivo_Json@i+1)& (0+255),b
  4604  005106  0E00               	movlw	0
  4605  005108  6F82               	movwf	append_Arquivo_Json@i& (0+255),b
  4606  00510A  D0E7               	goto	l432
  4607  00510C                     
  4608                           ;Wifi.c: 68: char resultado [6];
  4609                           ;Wifi.c: 70: long valorMem = MEMORIA[address[i] - 0x30];
  4610                           
  4611                           ; BSR set to: 2
  4612  00510C  0E40               	movlw	64
  4613  00510E  0101               	movlb	1	; () banked
  4614  005110  6FC5               	movwf	??_append_Arquivo_Json& (0+255),b
  4615  005112  0EFF               	movlw	255
  4616  005114  6FC6               	movwf	(??_append_Arquivo_Json+1)& (0+255),b
  4617  005116  90D8               	bcf	16344,0,c
  4618  005118  0102               	movlb	2	; () banked
  4619  00511A  3582               	rlcf	append_Arquivo_Json@i& (0+255),w,b
  4620  00511C  6ED9               	movwf	16345,c
  4621  00511E  3583               	rlcf	(append_Arquivo_Json@i+1)& (0+255),w,b
  4622  005120  6EDA               	movwf	16346,c
  4623  005122  0EB4               	movlw	low _address
  4624  005124  26D9               	addwf	16345,f,c
  4625  005126  0E04               	movlw	high _address
  4626  005128  22DA               	addwfc	16346,f,c
  4627  00512A  006F FF78  F1C7    	movff	16350,??_append_Arquivo_Json+2
  4628  005130  006F FF74  F1C8    	movff	16349,??_append_Arquivo_Json+3
  4629  005136  0101               	movlb	1	; () banked
  4630  005138  90D8               	bcf	16344,0,c
  4631  00513A  37C7               	rlcf	(??_append_Arquivo_Json+2)& (0+255),f,b
  4632  00513C  37C8               	rlcf	(??_append_Arquivo_Json+3)& (0+255),f,b
  4633  00513E  90D8               	bcf	16344,0,c
  4634  005140  37C7               	rlcf	(??_append_Arquivo_Json+2)& (0+255),f,b
  4635  005142  37C8               	rlcf	(??_append_Arquivo_Json+3)& (0+255),f,b
  4636  005144  51C5               	movf	??_append_Arquivo_Json& (0+255),w,b
  4637  005146  27C7               	addwf	(??_append_Arquivo_Json+2)& (0+255),f,b
  4638  005148  51C6               	movf	(??_append_Arquivo_Json+1)& (0+255),w,b
  4639  00514A  23C8               	addwfc	(??_append_Arquivo_Json+3)& (0+255),f,b
  4640  00514C  0E94               	movlw	low _MEMORIA
  4641  00514E  25C7               	addwf	(??_append_Arquivo_Json+2)& (0+255),w,b
  4642  005150  6ED9               	movwf	16345,c
  4643  005152  0E02               	movlw	high _MEMORIA
  4644  005154  21C8               	addwfc	(??_append_Arquivo_Json+3)& (0+255),w,b
  4645  005156  6EDA               	movwf	16346,c
  4646  005158  006F FF78  F278    	movff	16350,append_Arquivo_Json@valorMem
  4647  00515E  006F FF78  F279    	movff	16350,append_Arquivo_Json@valorMem+1
  4648  005164  006F FF78  F27A    	movff	16350,append_Arquivo_Json@valorMem+2
  4649  00516A  006F FF78  F27B    	movff	16350,append_Arquivo_Json@valorMem+3
  4650                           
  4651                           ; BSR set to: 1
  4652                           ;Wifi.c: 71: char valorMem_Char[10];
  4653                           ;Wifi.c: 73: sprintf(valorMem_Char,"%08lx",valorMem);
  4654  005170  0E84               	movlw	low append_Arquivo_Json@valorMem_Char
  4655  005172  6F62               	movwf	sprintf@sp& (0+255),b
  4656  005174  0E02               	movlw	high append_Arquivo_Json@valorMem_Char
  4657  005176  6F63               	movwf	(sprintf@sp+1)& (0+255),b
  4658  005178  0ECF               	movlw	low STR_10
  4659  00517A  6F64               	movwf	sprintf@f& (0+255),b
  4660  00517C  0EFF               	movlw	high STR_10
  4661  00517E  6F65               	movwf	(sprintf@f+1)& (0+255),b
  4662  005180  0060  F9E0  F166   	movff	append_Arquivo_Json@valorMem,?_sprintf+4
  4663  005186  0060  F9E4  F167   	movff	append_Arquivo_Json@valorMem+1,?_sprintf+5
  4664  00518C  0060  F9E8  F168   	movff	append_Arquivo_Json@valorMem+2,?_sprintf+6
  4665  005192  0060  F9EC  F169   	movff	append_Arquivo_Json@valorMem+3,?_sprintf+7
  4666  005198  EC59  F000         	call	_sprintf	;wreg free
  4667                           
  4668                           ;Wifi.c: 74: result[i] = 1;
  4669  00519C  90D8               	bcf	16344,0,c
  4670  00519E  0102               	movlb	2	; () banked
  4671  0051A0  3582               	rlcf	append_Arquivo_Json@i& (0+255),w,b
  4672  0051A2  6ED9               	movwf	16345,c
  4673  0051A4  3583               	rlcf	(append_Arquivo_Json@i+1)& (0+255),w,b
  4674  0051A6  6EDA               	movwf	16346,c
  4675  0051A8  0E78               	movlw	low _result
  4676  0051AA  26D9               	addwf	16345,f,c
  4677  0051AC  0E04               	movlw	high _result
  4678  0051AE  22DA               	addwfc	16346,f,c
  4679  0051B0  0E01               	movlw	1
  4680  0051B2  6EDE               	movwf	16350,c
  4681  0051B4  0E00               	movlw	0
  4682  0051B6  6EDD               	movwf	16349,c
  4683                           
  4684                           ; BSR set to: 2
  4685                           ;Wifi.c: 76: if (primeiro == 0) {
  4686  0051B8  517E               	movf	append_Arquivo_Json@primeiro& (0+255),w,b
  4687  0051BA  117F               	iorwf	(append_Arquivo_Json@primeiro+1)& (0+255),w,b
  4688  0051BC  A4D8               	btfss	16344,2,c
  4689  0051BE  D007               	goto	l434
  4690                           
  4691                           ; BSR set to: 2
  4692                           ;Wifi.c: 77: virgula[0] = 0x00;
  4693  0051C0  0E00               	movlw	0
  4694  0051C2  6F80               	movwf	append_Arquivo_Json@virgula& (0+255),b
  4695                           
  4696                           ;Wifi.c: 78: primeiro = 1;
  4697  0051C4  0E00               	movlw	0
  4698  0051C6  6F7F               	movwf	(append_Arquivo_Json@primeiro+1)& (0+255),b
  4699  0051C8  0E01               	movlw	1
  4700  0051CA  6F7E               	movwf	append_Arquivo_Json@primeiro& (0+255),b
  4701                           
  4702                           ;Wifi.c: 79: }
  4703  0051CC  D004               	goto	l435
  4704  0051CE                     l434:
  4705                           
  4706                           ; BSR set to: 2
  4707                           ;Wifi.c: 80: else {
  4708                           ;Wifi.c: 81: virgula[0] = ',';
  4709                           
  4710                           ; BSR set to: 2
  4711  0051CE  0E2C               	movlw	44
  4712  0051D0  6F80               	movwf	append_Arquivo_Json@virgula& (0+255),b
  4713                           
  4714                           ;Wifi.c: 82: virgula[1] = 0x00;
  4715  0051D2  0E00               	movlw	0
  4716  0051D4  6F81               	movwf	(append_Arquivo_Json@virgula+1)& (0+255),b
  4717  0051D6                     l435:
  4718                           
  4719                           ; BSR set to: 2
  4720                           ;Wifi.c: 83: }
  4721                           ;Wifi.c: 84: if (result[i] == 1) sprintf(resultado, "true");
  4722                           
  4723                           ; BSR set to: 2
  4724  0051D6  90D8               	bcf	16344,0,c
  4725  0051D8  3582               	rlcf	append_Arquivo_Json@i& (0+255),w,b
  4726  0051DA  6ED9               	movwf	16345,c
  4727  0051DC  3583               	rlcf	(append_Arquivo_Json@i+1)& (0+255),w,b
  4728  0051DE  6EDA               	movwf	16346,c
  4729  0051E0  0E78               	movlw	low _result
  4730  0051E2  26D9               	addwf	16345,f,c
  4731  0051E4  0E04               	movlw	high _result
  4732  0051E6  22DA               	addwfc	16346,f,c
  4733  0051E8  04DE               	decf	16350,w,c
  4734  0051EA  10DE               	iorwf	16350,w,c
  4735  0051EC  A4D8               	btfss	16344,2,c
  4736  0051EE  D00C               	goto	l436
  4737                           
  4738                           ; BSR set to: 2
  4739  0051F0  0E8E               	movlw	low append_Arquivo_Json@resultado
  4740  0051F2  0101               	movlb	1	; () banked
  4741  0051F4  6F62               	movwf	sprintf@sp& (0+255),b
  4742  0051F6  0E02               	movlw	high append_Arquivo_Json@resultado
  4743  0051F8  6F63               	movwf	(sprintf@sp+1)& (0+255),b
  4744  0051FA  0EDA               	movlw	low STR_11
  4745  0051FC  6F64               	movwf	sprintf@f& (0+255),b
  4746  0051FE  0EFF               	movlw	high STR_11
  4747  005200  6F65               	movwf	(sprintf@f+1)& (0+255),b
  4748  005202  EC59  F000         	call	_sprintf	;wreg free
  4749  005206  D00B               	goto	l437
  4750  005208                     l436:
  4751                           
  4752                           ;Wifi.c: 85: else sprintf(resultado, "false");
  4753  005208  0E8E               	movlw	low append_Arquivo_Json@resultado
  4754  00520A  0101               	movlb	1	; () banked
  4755  00520C  6F62               	movwf	sprintf@sp& (0+255),b
  4756  00520E  0E02               	movlw	high append_Arquivo_Json@resultado
  4757  005210  6F63               	movwf	(sprintf@sp+1)& (0+255),b
  4758  005212  0EC9               	movlw	low STR_12
  4759  005214  6F64               	movwf	sprintf@f& (0+255),b
  4760  005216  0EFF               	movlw	high STR_12
  4761  005218  6F65               	movwf	(sprintf@f+1)& (0+255),b
  4762  00521A  EC59  F000         	call	_sprintf	;wreg free
  4763  00521E                     l437:
  4764                           
  4765                           ;Wifi.c: 86: sprintf(linhaArquivo, "%s{\"frameId\":\"%s\",\"value\":\"%c%c,%c%c,%c%c,%c%
      +                          c\",\"result\":%s}", virgula, frameId[i], valorMem_Char[0], valorMem_Char[1], valorMem_C
      +                          har[2],valorMem_Char[3], valorMem_Char[4],valorMem_Char[5],valorMem_Char[6],valorMem_Ch
  4766  00521E  0060  FA08  F113   	movff	append_Arquivo_Json@i,___wmul@multiplier
  4767  005224  0060  FA0C  F114   	movff	append_Arquivo_Json@i+1,___wmul@multiplier+1
  4768  00522A  0E00               	movlw	0
  4769  00522C  0101               	movlb	1	; () banked
  4770  00522E  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4771  005230  0E25               	movlw	37
  4772  005232  6F15               	movwf	___wmul@multiplicand& (0+255),b
  4773  005234  ECA8  F044         	call	___wmul	;wreg free
  4774  005238  0E96               	movlw	low _frameId
  4775  00523A  0101               	movlb	1	; () banked
  4776  00523C  2513               	addwf	?___wmul& (0+255),w,b
  4777  00523E  0102               	movlb	2	; () banked
  4778  005240  6F7C               	movwf	_append_Arquivo_Json$2788& (0+255),b
  4779  005242  0E0A               	movlw	high _frameId
  4780  005244  0101               	movlb	1	; () banked
  4781  005246  2114               	addwfc	(?___wmul+1)& (0+255),w,b
  4782  005248  0102               	movlb	2	; () banked
  4783  00524A  6F7D               	movwf	(_append_Arquivo_Json$2788+1)& (0+255),b
  4784                           
  4785                           ; BSR set to: 2
  4786                           ;Wifi.c: 86: sprintf(linhaArquivo, "%s{\"frameId\":\"%s\",\"value\":\"%c%c,%c%c,%c%c,%c%
      +                          c\",\"result\":%s}", virgula, frameId[i], valorMem_Char[0], valorMem_Char[1], valorMem_C
      +                          har[2],valorMem_Char[3], valorMem_Char[4],valorMem_Char[5],valorMem_Char[6],valorMem_Ch
  4787  00524C  0E00               	movlw	low append_Arquivo_Json@linhaArquivo
  4788  00524E  0101               	movlb	1	; () banked
  4789  005250  6F62               	movwf	sprintf@sp& (0+255),b
  4790  005252  0E02               	movlw	high append_Arquivo_Json@linhaArquivo
  4791  005254  6F63               	movwf	(sprintf@sp+1)& (0+255),b
  4792  005256  0EEC               	movlw	low STR_13
  4793  005258  6F64               	movwf	sprintf@f& (0+255),b
  4794  00525A  0EFC               	movlw	high STR_13
  4795  00525C  6F65               	movwf	(sprintf@f+1)& (0+255),b
  4796  00525E  0E80               	movlw	low append_Arquivo_Json@virgula
  4797  005260  6F66               	movwf	(?_sprintf+4)& (0+255),b
  4798  005262  0E02               	movlw	high append_Arquivo_Json@virgula
  4799  005264  6F67               	movwf	(?_sprintf+5)& (0+255),b
  4800  005266  0060  F9F0  F168   	movff	_append_Arquivo_Json$2788,?_sprintf+6
  4801  00526C  0060  F9F4  F169   	movff	_append_Arquivo_Json$2788+1,?_sprintf+7
  4802  005272  0060  FA10  F16A   	movff	append_Arquivo_Json@valorMem_Char,?_sprintf+8
  4803  005278  6B6B               	clrf	(?_sprintf+9)& (0+255),b
  4804  00527A  0060  FA14  F16C   	movff	append_Arquivo_Json@valorMem_Char+1,?_sprintf+10
  4805  005280  6B6D               	clrf	(?_sprintf+11)& (0+255),b
  4806  005282  0060  FA18  F16E   	movff	append_Arquivo_Json@valorMem_Char+2,?_sprintf+12
  4807  005288  6B6F               	clrf	(?_sprintf+13)& (0+255),b
  4808  00528A  0060  FA1C  F170   	movff	append_Arquivo_Json@valorMem_Char+3,?_sprintf+14
  4809  005290  6B71               	clrf	(?_sprintf+15)& (0+255),b
  4810  005292  0060  FA20  F172   	movff	append_Arquivo_Json@valorMem_Char+4,?_sprintf+16
  4811  005298  6B73               	clrf	(?_sprintf+17)& (0+255),b
  4812  00529A  0060  FA24  F174   	movff	append_Arquivo_Json@valorMem_Char+5,?_sprintf+18
  4813  0052A0  6B75               	clrf	(?_sprintf+19)& (0+255),b
  4814  0052A2  0060  FA28  F176   	movff	append_Arquivo_Json@valorMem_Char+6,?_sprintf+20
  4815  0052A8  6B77               	clrf	(?_sprintf+21)& (0+255),b
  4816  0052AA  0060  FA2C  F178   	movff	append_Arquivo_Json@valorMem_Char+7,?_sprintf+22
  4817  0052B0  6B79               	clrf	(?_sprintf+23)& (0+255),b
  4818  0052B2  0E8E               	movlw	low append_Arquivo_Json@resultado
  4819  0052B4  6F7A               	movwf	(?_sprintf+24)& (0+255),b
  4820  0052B6  0E02               	movlw	high append_Arquivo_Json@resultado
  4821  0052B8  6F7B               	movwf	(?_sprintf+25)& (0+255),b
  4822  0052BA  EC59  F000         	call	_sprintf	;wreg free
  4823                           
  4824                           ;Wifi.c: 89: cria_Arquivo("gerrex.json", linhaArquivo);
  4825  0052BE  0E38               	movlw	low STR_8
  4826  0052C0  0101               	movlb	1	; () banked
  4827  0052C2  6FAF               	movwf	cria_Arquivo@nome& (0+255),b
  4828  0052C4  0EFF               	movlw	high STR_8
  4829  0052C6  6FB0               	movwf	(cria_Arquivo@nome+1)& (0+255),b
  4830  0052C8  0E00               	movlw	low append_Arquivo_Json@linhaArquivo
  4831  0052CA  6FB1               	movwf	cria_Arquivo@dado& (0+255),b
  4832  0052CC  0E02               	movlw	high append_Arquivo_Json@linhaArquivo
  4833  0052CE  6FB2               	movwf	(cria_Arquivo@dado+1)& (0+255),b
  4834  0052D0  ECC8  F038         	call	_cria_Arquivo	;wreg free
  4835  0052D4  0102               	movlb	2	; () banked
  4836  0052D6  4B82               	infsnz	append_Arquivo_Json@i& (0+255),f,b
  4837  0052D8  2B83               	incf	(append_Arquivo_Json@i+1)& (0+255),f,b
  4838  0052DA                     l432:
  4839                           
  4840                           ; BSR set to: 2
  4841                           
  4842                           ; BSR set to: 2
  4843  0052DA  51E9               	movf	_tamFrames& (0+255),w,b
  4844  0052DC  5D82               	subwf	append_Arquivo_Json@i& (0+255),w,b
  4845  0052DE  5183               	movf	(append_Arquivo_Json@i+1)& (0+255),w,b
  4846  0052E0  0A80               	xorlw	128
  4847  0052E2  0101               	movlb	1	; () banked
  4848  0052E4  6FC5               	movwf	??_append_Arquivo_Json& (0+255),b
  4849  0052E6  0102               	movlb	2	; () banked
  4850  0052E8  51EA               	movf	(_tamFrames+1)& (0+255),w,b
  4851  0052EA  0A80               	xorlw	128
  4852  0052EC  0101               	movlb	1	; () banked
  4853  0052EE  59C5               	subwfb	??_append_Arquivo_Json& (0+255),w,b
  4854  0052F0  A0D8               	btfss	16344,0,c
  4855  0052F2  D70C               	goto	l433
  4856                           
  4857                           ; BSR set to: 1
  4858                           ;Wifi.c: 97: }
  4859                           ;Wifi.c: 98: cria_Arquivo("gerrex.json", "]}\r");
  4860                           
  4861                           ; BSR set to: 1
  4862  0052F4  0E38               	movlw	low STR_8
  4863  0052F6  6FAF               	movwf	cria_Arquivo@nome& (0+255),b
  4864  0052F8  0EFF               	movlw	high STR_8
  4865  0052FA  6FB0               	movwf	(cria_Arquivo@nome+1)& (0+255),b
  4866  0052FC  0EE3               	movlw	low STR_16
  4867  0052FE  6FB1               	movwf	cria_Arquivo@dado& (0+255),b
  4868  005300  0EFF               	movlw	high STR_16
  4869  005302  6FB2               	movwf	(cria_Arquivo@dado+1)& (0+255),b
  4870  005304  ECC8  F038         	call	_cria_Arquivo	;wreg free
  4871  005308  0012               	return		;funcret
  4872  00530A                     __end_of_append_Arquivo_Json:
  4873                           	opt stack 0
  4874                           
  4875 ;; *************** function _cria_Arquivo *****************
  4876 ;; Defined at:
  4877 ;;		line 36 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  nome            2  175[BANK1 ] PTR unsigned char 
  4880 ;;		 -> STR_15(12), STR_14(12), STR_8(12), 
  4881 ;;  dado            2  177[BANK1 ] PTR unsigned char 
  4882 ;;		 -> STR_16(4), append_Arquivo_Json@linhaArquivo(120), STR_9(51), 
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;  tamanho        15  182[BANK1 ] unsigned char [15]
  4885 ;;  tam             2  180[BANK1 ] int 
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  1    wreg      void 
  4888 ;; Registers used:
  4889 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4895 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4896 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4897 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4898 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;Total ram usage:       22 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; Hardware stack levels required when called:   14
  4902 ;; This function calls:
  4903 ;;		_Buffer_Escrita_COMM_Add_String
  4904 ;;		_length
  4905 ;;		_sprintf
  4906 ;; This function is called by:
  4907 ;;		_append_Arquivo_Json
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           	psect	text3
  4912  007190                     __ptext3:
  4913                           	opt stack 0
  4914  007190                     _cria_Arquivo:
  4915                           	opt stack 14
  4916                           
  4917                           ;Wifi.c: 37: unsigned char tamanho [15];
  4918                           ;Wifi.c: 38: int tam = 0;
  4919                           
  4920                           ;incstack = 0
  4921  007190  0E00               	movlw	0
  4922  007192  0101               	movlb	1	; () banked
  4923  007194  6FB5               	movwf	(cria_Arquivo@tam+1)& (0+255),b
  4924  007196  0E00               	movlw	0
  4925  007198  6FB4               	movwf	cria_Arquivo@tam& (0+255),b
  4926                           
  4927                           ; BSR set to: 1
  4928                           ;Wifi.c: 39: _delay((unsigned long)((10)*(40000000/4000.0)));
  4929  00719A  0E82               	movlw	130
  4930  00719C  0101               	movlb	1	; () banked
  4931  00719E  6FB3               	movwf	??_cria_Arquivo& (0+255),b
  4932  0071A0  0EDD               	movlw	221
  4933  0071A2                     u19597:
  4934  0071A2  2EE8               	decfsz	16360,f,c
  4935  0071A4  D7FE               	bra	u19597
  4936  0071A6  2FB3               	decfsz	??_cria_Arquivo& (0+255),f,b
  4937  0071A8  D7FC               	bra	u19597
  4938  0071AA  D000               	nop2	
  4939                           
  4940                           ;Wifi.c: 40: Buffer_Escrita_COMM_Add_String("AT+S.FSC=", 1);
  4941  0071AC  0E77               	movlw	low STR_6
  4942  0071AE  0101               	movlb	1	; () banked
  4943  0071B0  6F07               	movwf	Buffer_Escrita_COMM_Add_String@dado& (0+255),b
  4944  0071B2  0EFF               	movlw	high STR_6
  4945  0071B4  6F08               	movwf	(Buffer_Escrita_COMM_Add_String@dado+1)& (0+255),b
  4946  0071B6  0E00               	movlw	0
  4947  0071B8  6F0A               	movwf	(Buffer_Escrita_COMM_Add_String@aguarda+1)& (0+255),b
  4948  0071BA  0E01               	movlw	1
  4949  0071BC  6F09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda& (0+255),b
  4950  0071BE  EC36  F037         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
  4951                           
  4952                           ;Wifi.c: 41: Buffer_Escrita_COMM_Add_String(nome, 1);
  4953  0071C2  0060  F6BC  F107   	movff	cria_Arquivo@nome,Buffer_Escrita_COMM_Add_String@dado
  4954  0071C8  0060  F6C0  F108   	movff	cria_Arquivo@nome+1,Buffer_Escrita_COMM_Add_String@dado+1
  4955  0071CE  0E00               	movlw	0
  4956  0071D0  0101               	movlb	1	; () banked
  4957  0071D2  6F0A               	movwf	(Buffer_Escrita_COMM_Add_String@aguarda+1)& (0+255),b
  4958  0071D4  0E01               	movlw	1
  4959  0071D6  6F09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda& (0+255),b
  4960  0071D8  EC36  F037         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
  4961                           
  4962                           ;Wifi.c: 42: tam = length(dado);
  4963  0071DC  0060  F6C4  F105   	movff	cria_Arquivo@dado,length@dado
  4964  0071E2  0060  F6C8  F106   	movff	cria_Arquivo@dado+1,length@dado+1
  4965  0071E8  EC09  F041         	call	_length	;wreg free
  4966  0071EC  0060  F414  F1B4   	movff	?_length,cria_Arquivo@tam
  4967  0071F2  0060  F418  F1B5   	movff	?_length+1,cria_Arquivo@tam+1
  4968                           
  4969                           ;Wifi.c: 43: sprintf(tamanho, ",%i\r", tam);
  4970  0071F8  0EB6               	movlw	low cria_Arquivo@tamanho
  4971  0071FA  0101               	movlb	1	; () banked
  4972  0071FC  6F62               	movwf	sprintf@sp& (0+255),b
  4973  0071FE  0E01               	movlw	high cria_Arquivo@tamanho
  4974  007200  6F63               	movwf	(sprintf@sp+1)& (0+255),b
  4975  007202  0ED5               	movlw	low STR_7
  4976  007204  6F64               	movwf	sprintf@f& (0+255),b
  4977  007206  0EFF               	movlw	high STR_7
  4978  007208  6F65               	movwf	(sprintf@f+1)& (0+255),b
  4979  00720A  0060  F6D0  F166   	movff	cria_Arquivo@tam,?_sprintf+4
  4980  007210  0060  F6D4  F167   	movff	cria_Arquivo@tam+1,?_sprintf+5
  4981  007216  EC59  F000         	call	_sprintf	;wreg free
  4982                           
  4983                           ;Wifi.c: 44: Buffer_Escrita_COMM_Add_String(tamanho, 1);
  4984  00721A  0EB6               	movlw	low cria_Arquivo@tamanho
  4985  00721C  0101               	movlb	1	; () banked
  4986  00721E  6F07               	movwf	Buffer_Escrita_COMM_Add_String@dado& (0+255),b
  4987  007220  0E01               	movlw	high cria_Arquivo@tamanho
  4988  007222  6F08               	movwf	(Buffer_Escrita_COMM_Add_String@dado+1)& (0+255),b
  4989  007224  0E00               	movlw	0
  4990  007226  6F0A               	movwf	(Buffer_Escrita_COMM_Add_String@aguarda+1)& (0+255),b
  4991  007228  0E01               	movlw	1
  4992  00722A  6F09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda& (0+255),b
  4993  00722C  EC36  F037         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
  4994                           
  4995                           ;Wifi.c: 45: Buffer_Escrita_COMM_Add_String(dado, 1);
  4996  007230  0060  F6C4  F107   	movff	cria_Arquivo@dado,Buffer_Escrita_COMM_Add_String@dado
  4997  007236  0060  F6C8  F108   	movff	cria_Arquivo@dado+1,Buffer_Escrita_COMM_Add_String@dado+1
  4998  00723C  0E00               	movlw	0
  4999  00723E  0101               	movlb	1	; () banked
  5000  007240  6F0A               	movwf	(Buffer_Escrita_COMM_Add_String@aguarda+1)& (0+255),b
  5001  007242  0E01               	movlw	1
  5002  007244  6F09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda& (0+255),b
  5003  007246  EC36  F037         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
  5004  00724A  0012               	return		;funcret
  5005  00724C                     __end_of_cria_Arquivo:
  5006                           	opt stack 0
  5007                           
  5008 ;; *************** function _length *****************
  5009 ;; Defined at:
  5010 ;;		line 143 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  dado            2    5[BANK1 ] PTR unsigned char 
  5013 ;;		 -> STR_16(4), append_Arquivo_Json@linhaArquivo(120), STR_9(51), 
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;  i               2    9[BANK1 ] int 
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  2    5[BANK1 ] int 
  5018 ;; Registers used:
  5019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5025 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5027 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;Total ram usage:        6 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; Hardware stack levels required when called:   10
  5032 ;; This function calls:
  5033 ;;		Nothing
  5034 ;; This function is called by:
  5035 ;;		_cria_Arquivo
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text4
  5040  008212                     __ptext4:
  5041                           	opt stack 0
  5042  008212                     _length:
  5043                           	opt stack 17
  5044                           
  5045                           ;Wifi.c: 144: int i = 0;
  5046                           
  5047                           ;incstack = 0
  5048  008212  0E00               	movlw	0
  5049  008214  0101               	movlb	1	; () banked
  5050  008216  6F0A               	movwf	(length@i+1)& (0+255),b
  5051  008218  0E00               	movlw	0
  5052  00821A  6F09               	movwf	length@i& (0+255),b
  5053                           
  5054                           ;Wifi.c: 145: while (dado[i] != 0x00)i++;
  5055  00821C  D003               	goto	l454
  5056  00821E                     
  5057                           ; BSR set to: 1
  5058  00821E  0101               	movlb	1	; () banked
  5059  008220  4B09               	infsnz	length@i& (0+255),f,b
  5060  008222  2B0A               	incf	(length@i+1)& (0+255),f,b
  5061  008224                     l454:
  5062                           
  5063                           ; BSR set to: 1
  5064                           
  5065                           ; BSR set to: 1
  5066  008224  5109               	movf	length@i& (0+255),w,b
  5067  008226  2505               	addwf	length@dado& (0+255),w,b
  5068  008228  6F07               	movwf	??_length& (0+255),b
  5069  00822A  510A               	movf	(length@i+1)& (0+255),w,b
  5070  00822C  2106               	addwfc	(length@dado+1)& (0+255),w,b
  5071  00822E  6F08               	movwf	(??_length+1)& (0+255),b
  5072  008230  0060  F41F  FFF6   	movff	??_length,16374
  5073  008236  0060  F423  FFF7   	movff	??_length+1,16375
  5074  00823C  0E00               	movlw	low (__mediumconst shr (0+16))
  5075  00823E  6EF8               	movwf	16376,c
  5076  008240  0E0F               	movlw	(high __ramtop+-1)
  5077  008242  64F7               	cpfsgt	16375,c
  5078  008244  D003               	bra	u18487
  5079  008246  0008               	tblrd		*
  5080  008248  50F5               	movf	16373,w,c
  5081  00824A  D007               	bra	u18480
  5082  00824C                     u18487:
  5083  00824C  006F FFDB FFE9     	movff	16374,16361
  5084  008252  006F FFDF FFEA     	movff	16375,16362
  5085  008258  50EF               	movf	16367,w,c
  5086  00825A                     u18480:
  5087  00825A  0900               	iorlw	0
  5088  00825C  A4D8               	btfss	16344,2,c
  5089  00825E  D7DF               	goto	l455
  5090                           
  5091                           ;Wifi.c: 146: return i;
  5092  008260  0060  F424  F105   	movff	length@i,?_length
  5093  008266  0060  F428  F106   	movff	length@i+1,?_length+1
  5094  00826C  0012               	return		;funcret
  5095  00826E                     __end_of_length:
  5096                           	opt stack 0
  5097                           
  5098 ;; *************** function _Buffer_Escrita_COMM_Add_String *****************
  5099 ;; Defined at:
  5100 ;;		line 217 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;  dado            2    7[BANK1 ] PTR unsigned char 
  5103 ;;		 -> STR_103(15), STR_99(15), STR_91(136), STR_90(24), 
  5104 ;;		 -> STR_89(44), STR_88(31), STR_87(30), STR_86(19), 
  5105 ;;		 -> STR_78(91), STR_72(28), STR_39(70), STR_35(8), 
  5106 ;;		 -> STR_34(25), STR_30(84), STR_26(31), STR_17(22), 
  5107 ;;		 -> STR_16(4), STR_15(12), STR_14(12), append_Arquivo_Json@linhaArquivo(120), 
  5108 ;;		 -> STR_9(51), STR_8(12), cria_Arquivo@tamanho(15), STR_6(10), 
  5109 ;;  aguarda         2    9[BANK1 ] short 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;  i               2   13[BANK1 ] int 
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  2    7[BANK1 ] short 
  5114 ;; Registers used:
  5115 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5121 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5122 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5123 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5124 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5125 ;;Total ram usage:        8 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:   11
  5128 ;; This function calls:
  5129 ;;		_Buffer_Escrita_COMM_Add_Char
  5130 ;;		_TransmiteBuffer_COMM
  5131 ;; This function is called by:
  5132 ;;		_cria_Arquivo
  5133 ;;		_inicia_Post
  5134 ;;		_GETTask
  5135 ;;		_Envia_Post_Content
  5136 ;;		_SOCKET_QUERY
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           	psect	text5
  5141  006E6C                     __ptext5:
  5142                           	opt stack 0
  5143  006E6C                     _Buffer_Escrita_COMM_Add_String:
  5144                           	opt stack 16
  5145                           
  5146                           ;Serial.c: 218: int i = 0;
  5147                           
  5148                           ;incstack = 0
  5149  006E6C  0E00               	movlw	0
  5150  006E6E  0101               	movlb	1	; () banked
  5151  006E70  6F0E               	movwf	(Buffer_Escrita_COMM_Add_String@i+1)& (0+255),b
  5152  006E72  0E00               	movlw	0
  5153  006E74  6F0D               	movwf	Buffer_Escrita_COMM_Add_String@i& (0+255),b
  5154                           
  5155                           ;Serial.c: 220: ponteiro_COMM = 0;
  5156  006E76  0E00               	movlw	0
  5157  006E78  6FE4               	movwf	(_ponteiro_COMM+1)& (0+255),b
  5158  006E7A  0E00               	movlw	0
  5159  006E7C  6FE3               	movwf	_ponteiro_COMM& (0+255),b
  5160                           
  5161                           ;Serial.c: 221: ponteiro_escrita_COMM = 0;
  5162  006E7E  0E00               	movlw	0
  5163  006E80  6FE8               	movwf	(_ponteiro_escrita_COMM+1)& (0+255),b
  5164  006E82  0E00               	movlw	0
  5165  006E84  6FE7               	movwf	_ponteiro_escrita_COMM& (0+255),b
  5166                           
  5167                           ;Serial.c: 222: buffer_escrita_comm[0] = 0x00;
  5168  006E86  0E00               	movlw	0
  5169  006E88  0106               	movlb	6	; () banked
  5170  006E8A  6F00               	movwf	_buffer_escrita_comm& (0+255),b
  5171                           
  5172                           ;Serial.c: 224: while (dado[i] != 0x00) {
  5173  006E8C  D029               	goto	l306
  5174  006E8E                     
  5175                           ;Serial.c: 225: if (i >= 150) return;
  5176                           
  5177                           ; BSR set to: 6
  5178  006E8E  0101               	movlb	1	; () banked
  5179  006E90  BF0E               	btfsc	(Buffer_Escrita_COMM_Add_String@i+1)& (0+255),7,b
  5180  006E92  D006               	goto	l308
  5181  006E94  510E               	movf	(Buffer_Escrita_COMM_Add_String@i+1)& (0+255),w,b
  5182  006E96  E150               	bnz	l309
  5183  006E98  0E96               	movlw	150
  5184  006E9A  5D0D               	subwf	Buffer_Escrita_COMM_Add_String@i& (0+255),w,b
  5185  006E9C  B0D8               	btfsc	16344,0,c
  5186  006E9E  0012               	return	
  5187  006EA0                     l308:
  5188                           
  5189                           ; BSR set to: 1
  5190                           ;Serial.c: 226: Buffer_Escrita_COMM_Add_Char(dado[i]);
  5191                           
  5192                           ; BSR set to: 1
  5193  006EA0  510D               	movf	Buffer_Escrita_COMM_Add_String@i& (0+255),w,b
  5194  006EA2  2507               	addwf	Buffer_Escrita_COMM_Add_String@dado& (0+255),w,b
  5195  006EA4  6F0B               	movwf	??_Buffer_Escrita_COMM_Add_String& (0+255),b
  5196  006EA6  510E               	movf	(Buffer_Escrita_COMM_Add_String@i+1)& (0+255),w,b
  5197  006EA8  2108               	addwfc	(Buffer_Escrita_COMM_Add_String@dado+1)& (0+255),w,b
  5198  006EAA  6F0C               	movwf	(??_Buffer_Escrita_COMM_Add_String+1)& (0+255),b
  5199  006EAC  0060  F42F  FFF6   	movff	??_Buffer_Escrita_COMM_Add_String,16374
  5200  006EB2  0060  F433  FFF7   	movff	??_Buffer_Escrita_COMM_Add_String+1,16375
  5201  006EB8  0E00               	movlw	low (__mediumconst shr (0+16))
  5202  006EBA  6EF8               	movwf	16376,c
  5203  006EBC  0E0F               	movlw	(high __ramtop+-1)
  5204  006EBE  64F7               	cpfsgt	16375,c
  5205  006EC0  D003               	bra	u18437
  5206  006EC2  0008               	tblrd		*
  5207  006EC4  50F5               	movf	16373,w,c
  5208  006EC6  D007               	bra	u18430
  5209  006EC8                     u18437:
  5210  006EC8  006F FFDB FFE9     	movff	16374,16361
  5211  006ECE  006F FFDF FFEA     	movff	16375,16362
  5212  006ED4  50EF               	movf	16367,w,c
  5213  006ED6                     u18430:
  5214  006ED6  EC29  F044         	call	_Buffer_Escrita_COMM_Add_Char
  5215                           
  5216                           ;Serial.c: 227: i++;
  5217  006EDA  0101               	movlb	1	; () banked
  5218  006EDC  4B0D               	infsnz	Buffer_Escrita_COMM_Add_String@i& (0+255),f,b
  5219  006EDE  2B0E               	incf	(Buffer_Escrita_COMM_Add_String@i+1)& (0+255),f,b
  5220  006EE0                     l306:
  5221                           
  5222                           ; BSR set to: 1
  5223  006EE0  0101               	movlb	1	; () banked
  5224  006EE2  510D               	movf	Buffer_Escrita_COMM_Add_String@i& (0+255),w,b
  5225  006EE4  2507               	addwf	Buffer_Escrita_COMM_Add_String@dado& (0+255),w,b
  5226  006EE6  6F0B               	movwf	??_Buffer_Escrita_COMM_Add_String& (0+255),b
  5227  006EE8  510E               	movf	(Buffer_Escrita_COMM_Add_String@i+1)& (0+255),w,b
  5228  006EEA  2108               	addwfc	(Buffer_Escrita_COMM_Add_String@dado+1)& (0+255),w,b
  5229  006EEC  6F0C               	movwf	(??_Buffer_Escrita_COMM_Add_String+1)& (0+255),b
  5230  006EEE  0060  F42F  FFF6   	movff	??_Buffer_Escrita_COMM_Add_String,16374
  5231  006EF4  0060  F433  FFF7   	movff	??_Buffer_Escrita_COMM_Add_String+1,16375
  5232  006EFA  0E00               	movlw	low (__mediumconst shr (0+16))
  5233  006EFC  6EF8               	movwf	16376,c
  5234  006EFE  0E0F               	movlw	(high __ramtop+-1)
  5235  006F00  64F7               	cpfsgt	16375,c
  5236  006F02  D003               	bra	u18447
  5237  006F04  0008               	tblrd		*
  5238  006F06  50F5               	movf	16373,w,c
  5239  006F08  D007               	bra	u18440
  5240  006F0A                     u18447:
  5241  006F0A  006F FFDB FFE9     	movff	16374,16361
  5242  006F10  006F FFDF FFEA     	movff	16375,16362
  5243  006F16  50EF               	movf	16367,w,c
  5244  006F18                     u18440:
  5245  006F18  0900               	iorlw	0
  5246  006F1A  A4D8               	btfss	16344,2,c
  5247  006F1C  D7B8               	goto	l307
  5248                           
  5249                           ;Serial.c: 228: }
  5250                           ;Serial.c: 229: if (aguarda){
  5251  006F1E  0101               	movlb	1	; () banked
  5252  006F20  5109               	movf	Buffer_Escrita_COMM_Add_String@aguarda& (0+255),w,b
  5253  006F22  110A               	iorwf	(Buffer_Escrita_COMM_Add_String@aguarda+1)& (0+255),w,b
  5254  006F24  B4D8               	btfsc	16344,2,c
  5255  006F26  0012               	return	
  5256  006F28                     u18460:
  5257                           
  5258                           ; BSR set to: 1
  5259                           
  5260                           ; BSR set to: 1
  5261                           
  5262                           ; BSR set to: 1
  5263                           
  5264                           ; BSR set to: 1
  5265                           ;Serial.c: 230: while (TransmiteBuffer_COMM() == 0);
  5266  006F28  EC37  F041         	call	_TransmiteBuffer_COMM	;wreg free
  5267  006F2C  0101               	movlb	1	; () banked
  5268  006F2E  5105               	movf	?_TransmiteBuffer_COMM& (0+255),w,b
  5269  006F30  1106               	iorwf	(?_TransmiteBuffer_COMM+1)& (0+255),w,b
  5270  006F32  A4D8               	btfss	16344,2,c
  5271  006F34  0012               	return	
  5272  006F36  D7F8               	goto	u18460
  5273  006F38                     l309:
  5274                           
  5275                           ; BSR set to: 1
  5276  006F38  0012               	return		;funcret
  5277  006F3A                     __end_of_Buffer_Escrita_COMM_Add_String:
  5278                           	opt stack 0
  5279                           
  5280 ;; *************** function _TransmiteBuffer_COMM *****************
  5281 ;; Defined at:
  5282 ;;		line 167 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;		None
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  2    5[BANK1 ] int 
  5289 ;; Registers used:
  5290 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5296 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;Total ram usage:        2 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; Hardware stack levels required when called:   10
  5303 ;; This function calls:
  5304 ;;		Nothing
  5305 ;; This function is called by:
  5306 ;;		_main
  5307 ;;		_Buffer_Escrita_COMM_Add_String
  5308 ;; This function uses a non-reentrant model
  5309 ;;
  5310                           
  5311                           	psect	text6
  5312  00826E                     __ptext6:
  5313                           	opt stack 0
  5314  00826E                     _TransmiteBuffer_COMM:
  5315                           	opt stack 16
  5316                           
  5317                           ;Serial.c: 168: if (U2ERRIRbits.TXMTIF == 0) return 0;
  5318                           
  5319                           ; BSR set to: 1
  5320                           ;incstack = 0
  5321  00826E  013D               	movlb	61	; () banked
  5322  008270  BFE1               	btfsc	225,7,b	;volatile
  5323  008272  D006               	goto	l276
  5324                           
  5325                           ; BSR set to: 61
  5326  008274  0E00               	movlw	0
  5327  008276  0101               	movlb	1	; () banked
  5328  008278  6F06               	movwf	(?_TransmiteBuffer_COMM+1)& (0+255),b
  5329  00827A  0E00               	movlw	0
  5330  00827C  6F05               	movwf	?_TransmiteBuffer_COMM& (0+255),b
  5331                           
  5332                           ; BSR set to: 1
  5333  00827E  0012               	return	
  5334  008280                     l276:
  5335                           
  5336                           ;Serial.c: 169: if (ponteiro_escrita_COMM < ponteiro_COMM) {
  5337                           
  5338                           ; BSR set to: 1
  5339  008280  0101               	movlb	1	; () banked
  5340  008282  51E3               	movf	_ponteiro_COMM& (0+255),w,b
  5341  008284  5DE7               	subwf	_ponteiro_escrita_COMM& (0+255),w,b
  5342  008286  51E4               	movf	(_ponteiro_COMM+1)& (0+255),w,b
  5343  008288  59E8               	subwfb	(_ponteiro_escrita_COMM+1)& (0+255),w,b
  5344  00828A  B0D8               	btfsc	16344,0,c
  5345  00828C  D011               	goto	l278
  5346                           
  5347                           ; BSR set to: 1
  5348                           ;Serial.c: 170: U2TXB = buffer_escrita_comm[ponteiro_escrita_COMM];
  5349  00828E  0E00               	movlw	low _buffer_escrita_comm
  5350  008290  25E7               	addwf	_ponteiro_escrita_COMM& (0+255),w,b
  5351  008292  6ED9               	movwf	16345,c
  5352  008294  0E06               	movlw	high _buffer_escrita_comm
  5353  008296  21E8               	addwfc	(_ponteiro_escrita_COMM+1)& (0+255),w,b
  5354  008298  6EDA               	movwf	16346,c
  5355  00829A  50DF               	movf	16351,w,c
  5356  00829C  013D               	movlb	61	; () banked
  5357  00829E  6FD2               	movwf	210,b	;volatile
  5358                           
  5359                           ; BSR set to: 61
  5360                           ;Serial.c: 171: ponteiro_escrita_COMM++;
  5361  0082A0  0101               	movlb	1	; () banked
  5362  0082A2  4BE7               	infsnz	_ponteiro_escrita_COMM& (0+255),f,b
  5363  0082A4  2BE8               	incf	(_ponteiro_escrita_COMM+1)& (0+255),f,b
  5364                           
  5365                           ; BSR set to: 1
  5366                           ;Serial.c: 172: return 0;
  5367  0082A6  0E00               	movlw	0
  5368  0082A8  6F06               	movwf	(?_TransmiteBuffer_COMM+1)& (0+255),b
  5369  0082AA  0E00               	movlw	0
  5370  0082AC  6F05               	movwf	?_TransmiteBuffer_COMM& (0+255),b
  5371                           
  5372                           ; BSR set to: 1
  5373                           ;Serial.c: 173: } else {
  5374                           
  5375                           ; BSR set to: 1
  5376  0082AE  0012               	return	
  5377  0082B0                     l278:
  5378                           
  5379                           ; BSR set to: 1
  5380                           ;Serial.c: 174: ponteiro_COMM = 0;
  5381                           
  5382                           ; BSR set to: 1
  5383  0082B0  0E00               	movlw	0
  5384  0082B2  6FE4               	movwf	(_ponteiro_COMM+1)& (0+255),b
  5385  0082B4  0E00               	movlw	0
  5386  0082B6  6FE3               	movwf	_ponteiro_COMM& (0+255),b
  5387                           
  5388                           ;Serial.c: 175: ponteiro_escrita_COMM = 0;
  5389  0082B8  0E00               	movlw	0
  5390  0082BA  6FE8               	movwf	(_ponteiro_escrita_COMM+1)& (0+255),b
  5391  0082BC  0E00               	movlw	0
  5392  0082BE  6FE7               	movwf	_ponteiro_escrita_COMM& (0+255),b
  5393                           
  5394                           ;Serial.c: 176: return 1;
  5395  0082C0  0E00               	movlw	0
  5396  0082C2  6F06               	movwf	(?_TransmiteBuffer_COMM+1)& (0+255),b
  5397  0082C4  0E01               	movlw	1
  5398  0082C6  6F05               	movwf	?_TransmiteBuffer_COMM& (0+255),b
  5399                           
  5400                           ; BSR set to: 1
  5401  0082C8  0012               	return	
  5402  0082CA                     __end_of_TransmiteBuffer_COMM:
  5403                           	opt stack 0
  5404                           
  5405 ;; *************** function _Buffer_Escrita_COMM_Add_Char *****************
  5406 ;; Defined at:
  5407 ;;		line 211 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;  dado            1    wreg     unsigned char 
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;  dado            1    5[BANK1 ] unsigned char 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  2    6[None  ] short 
  5414 ;; Registers used:
  5415 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5425 ;;Total ram usage:        1 bytes
  5426 ;; Hardware stack levels used:    1
  5427 ;; Hardware stack levels required when called:   10
  5428 ;; This function calls:
  5429 ;;		Nothing
  5430 ;; This function is called by:
  5431 ;;		_Buffer_Escrita_COMM_Add_String
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           	psect	text7
  5436  008852                     __ptext7:
  5437                           	opt stack 0
  5438  008852                     _Buffer_Escrita_COMM_Add_Char:
  5439                           	opt stack 16
  5440                           
  5441                           ; BSR set to: 1
  5442                           ;incstack = 0
  5443                           ;Buffer_Escrita_COMM_Add_Char@dado stored from wreg
  5444  008852  0101               	movlb	1	; () banked
  5445  008854  6F05               	movwf	Buffer_Escrita_COMM_Add_Char@dado& (0+255),b
  5446                           
  5447                           ;Serial.c: 212: buffer_escrita_comm[ponteiro_COMM] = dado;
  5448  008856  0E00               	movlw	low _buffer_escrita_comm
  5449  008858  0101               	movlb	1	; () banked
  5450  00885A  25E3               	addwf	_ponteiro_COMM& (0+255),w,b
  5451  00885C  6ED9               	movwf	16345,c
  5452  00885E  0E06               	movlw	high _buffer_escrita_comm
  5453  008860  21E4               	addwfc	(_ponteiro_COMM+1)& (0+255),w,b
  5454  008862  6EDA               	movwf	16346,c
  5455  008864  0060  F417  FFDF   	movff	Buffer_Escrita_COMM_Add_Char@dado,16351
  5456                           
  5457                           ; BSR set to: 1
  5458                           ;Serial.c: 213: if (ponteiro_COMM >= 150) ponteiro_COMM = 0;
  5459  00886A  51E4               	movf	(_ponteiro_COMM+1)& (0+255),w,b
  5460  00886C  E104               	bnz	u16370
  5461  00886E  0E96               	movlw	150
  5462  008870  5DE3               	subwf	_ponteiro_COMM& (0+255),w,b
  5463  008872  A0D8               	btfss	16344,0,c
  5464  008874  D005               	goto	l301
  5465  008876                     u16370:
  5466                           
  5467                           ; BSR set to: 1
  5468  008876  0E00               	movlw	0
  5469  008878  6FE4               	movwf	(_ponteiro_COMM+1)& (0+255),b
  5470  00887A  0E00               	movlw	0
  5471  00887C  6FE3               	movwf	_ponteiro_COMM& (0+255),b
  5472  00887E  0012               	return	
  5473  008880                     l301:
  5474                           
  5475                           ; BSR set to: 1
  5476                           ;Serial.c: 214: else ponteiro_COMM++;
  5477                           
  5478                           ; BSR set to: 1
  5479  008880  4BE3               	infsnz	_ponteiro_COMM& (0+255),f,b
  5480  008882  2BE4               	incf	(_ponteiro_COMM+1)& (0+255),f,b
  5481  008884  0012               	return	
  5482  008886                     __end_of_Buffer_Escrita_COMM_Add_Char:
  5483                           	opt stack 0
  5484                           
  5485 ;; *************** function _Aguarda_dado *****************
  5486 ;; Defined at:
  5487 ;;		line 217 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;  inicio          2  175[BANK1 ] PTR unsigned char 
  5490 ;;		 -> STR_104(7), STR_100(10), STR_95(4), STR_92(7), 
  5491 ;;		 -> STR_82(7), STR_79(2), STR_73(17), STR_66(3), 
  5492 ;;		 -> STR_63(6), STR_60(7), STR_57(6), STR_54(7), 
  5493 ;;		 -> STR_51(8), STR_48(10), STR_45(2), STR_40(2), 
  5494 ;;		 -> STR_36(10), STR_31(3), STR_27(3), STR_22(2), 
  5495 ;;		 -> STR_19(3), STR_3(10), 
  5496 ;;  fim             2  177[BANK1 ] PTR unsigned char 
  5497 ;;		 -> STR_105(2), STR_101(3), STR_96(2), STR_93(2), 
  5498 ;;		 -> STR_83(7), STR_80(3), STR_74(2), STR_67(2), 
  5499 ;;		 -> STR_64(3), STR_61(2), STR_58(2), STR_55(2), 
  5500 ;;		 -> STR_52(3), STR_49(2), STR_46(2), STR_41(2), 
  5501 ;;		 -> STR_37(2), STR_32(3), STR_28(3), STR_23(2), 
  5502 ;;		 -> STR_20(2), STR_4(2), 
  5503 ;;  error           2  179[BANK1 ] PTR unsigned char 
  5504 ;;		 -> STR_106(1), STR_102(1), STR_97(1), STR_94(1), 
  5505 ;;		 -> STR_84(7), STR_81(1), STR_75(7), STR_68(1), 
  5506 ;;		 -> STR_65(1), STR_62(1), STR_59(1), STR_56(1), 
  5507 ;;		 -> STR_53(1), STR_50(1), STR_47(1), STR_42(1), 
  5508 ;;		 -> STR_38(1), STR_33(1), STR_29(1), STR_24(1), 
  5509 ;;		 -> STR_21(1), STR_5(1), 
  5510 ;;  ff              2  181[BANK1 ] PTR FTN()PTR void 
  5511 ;;		 -> SOCKET_RX(1), WIND(1), TASK_POST(1), SETMACAddr(1), 
  5512 ;;		 -> Absolute function(3), recebeSIZE(1), recebeADDRESS(1), recebeFUNCTIONCODE(1), 
  5513 ;;		 -> recebeNODEID(1), recebeNETWORKID(1), recebeFRAMEID(1), recebeFRAMES(1), 
  5514 ;;		 -> recebe(1), Post2(1), nada(1), Post(1), 
  5515 ;;		 -> GETMACAddr(1), 
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;		None
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  1    wreg      void 
  5520 ;; Registers used:
  5521 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5527 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5530 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5531 ;;Total ram usage:        8 bytes
  5532 ;; Hardware stack levels used:    1
  5533 ;; Hardware stack levels required when called:   14
  5534 ;; This function calls:
  5535 ;;		_sprintf
  5536 ;; This function is called by:
  5537 ;;		_main
  5538 ;;		_inicia_Post
  5539 ;;		_testaRespostaHTTP
  5540 ;;		_Envia_Post_Content
  5541 ;;		_SOCKET_QUERY
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           	psect	text8
  5546  00808C                     __ptext8:
  5547                           	opt stack 0
  5548  00808C                     _Aguarda_dado:
  5549                           	opt stack 15
  5550                           
  5551                           ;GERREX.c: 218: PORTBbits.RB2 = 1;
  5552                           
  5553                           ; BSR set to: 1
  5554                           ;incstack = 0
  5555  00808C  013F               	movlb	63	; () banked
  5556  00808E  85CB               	bsf	203,2,b	;volatile
  5557                           
  5558                           ; BSR set to: 63
  5559                           ;GERREX.c: 219: Aguarda_Ponteiro = 0;
  5560  008090  0E00               	movlw	0
  5561  008092  0100               	movlb	0	; () banked
  5562  008094  6FE4               	movwf	(_Aguarda_Ponteiro+1)& (0+255),b
  5563  008096  0E00               	movlw	0
  5564  008098  6FE3               	movwf	_Aguarda_Ponteiro& (0+255),b
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;GERREX.c: 220: sprintf(Aguarda_str, "%s", inicio);
  5568  00809A  0EAA               	movlw	low _Aguarda_str
  5569  00809C  0101               	movlb	1	; () banked
  5570  00809E  6F62               	movwf	sprintf@sp& (0+255),b
  5571  0080A0  0E03               	movlw	high _Aguarda_str
  5572  0080A2  6F63               	movwf	(sprintf@sp+1)& (0+255),b
  5573  0080A4  0EED               	movlw	low STR_76
  5574  0080A6  6F64               	movwf	sprintf@f& (0+255),b
  5575  0080A8  0EFF               	movlw	high STR_76
  5576  0080AA  6F65               	movwf	(sprintf@f+1)& (0+255),b
  5577  0080AC  0060  F6BC  F166   	movff	Aguarda_dado@inicio,?_sprintf+4
  5578  0080B2  0060  F6C0  F167   	movff	Aguarda_dado@inicio+1,?_sprintf+5
  5579  0080B8  EC59  F000         	call	_sprintf	;wreg free
  5580                           
  5581                           ;GERREX.c: 221: sprintf(Aguarda_end, "%s", fim);
  5582  0080BC  0ED0               	movlw	low _Aguarda_end
  5583  0080BE  0101               	movlb	1	; () banked
  5584  0080C0  6F62               	movwf	sprintf@sp& (0+255),b
  5585  0080C2  0E03               	movlw	high _Aguarda_end
  5586  0080C4  6F63               	movwf	(sprintf@sp+1)& (0+255),b
  5587  0080C6  0EED               	movlw	low STR_76
  5588  0080C8  6F64               	movwf	sprintf@f& (0+255),b
  5589  0080CA  0EFF               	movlw	high STR_76
  5590  0080CC  6F65               	movwf	(sprintf@f+1)& (0+255),b
  5591  0080CE  0060  F6C4  F166   	movff	Aguarda_dado@fim,?_sprintf+4
  5592  0080D4  0060  F6C8  F167   	movff	Aguarda_dado@fim+1,?_sprintf+5
  5593  0080DA  EC59  F000         	call	_sprintf	;wreg free
  5594                           
  5595                           ;GERREX.c: 222: Aguarda_Funcao = ff;
  5596  0080DE  0060  F6D4  F2F1   	movff	Aguarda_dado@ff,_Aguarda_Funcao
  5597  0080E4  0060  F6D8  F2F2   	movff	Aguarda_dado@ff+1,_Aguarda_Funcao+1
  5598                           
  5599                           ;GERREX.c: 223: PORTBbits.RB2 = 0;
  5600  0080EA  013F               	movlb	63	; () banked
  5601  0080EC  95CB               	bcf	203,2,b	;volatile
  5602                           
  5603                           ; BSR set to: 63
  5604  0080EE  0012               	return		;funcret
  5605  0080F0                     __end_of_Aguarda_dado:
  5606                           	opt stack 0
  5607                           
  5608 ;; *************** function _Verifica_Analogica *****************
  5609 ;; Defined at:
  5610 ;;		line 71 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Conversor_Escalas.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;		None
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  valoradstr     10  179[BANK1 ] unsigned char [10]
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      void 
  5617 ;; Registers used:
  5618 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5626 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5628 ;;Total ram usage:       14 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:   14
  5631 ;; This function calls:
  5632 ;;		_Buffer_Escrita_USB_Add_String
  5633 ;;		_Converte_Escala
  5634 ;;		___lldiv
  5635 ;;		_ajusta_escala
  5636 ;;		_sprintf
  5637 ;; This function is called by:
  5638 ;;		_main
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text9
  5643  005AB0                     __ptext9:
  5644                           	opt stack 0
  5645  005AB0                     _Verifica_Analogica:
  5646                           	opt stack 16
  5647                           
  5648                           ;Conversor_Escalas.c: 72: char valoradstr [10];
  5649                           ;Conversor_Escalas.c: 74: if (ADCON0bits.GO == 0) {
  5650                           
  5651                           ; BSR set to: 63
  5652                           ;incstack = 0
  5653  005AB0  013E               	movlb	62	; () banked
  5654  005AB2  B1F8               	btfsc	248,0,b	;volatile
  5655  005AB4  0012               	return	
  5656                           
  5657                           ; BSR set to: 62
  5658                           ;Conversor_Escalas.c: 75: high = ADRESH;
  5659  005AB6  006F FBC0  F1EC    	movff	16112,_high	;volatile
  5660                           
  5661                           ;Conversor_Escalas.c: 76: low = ADRESL;
  5662  005ABC  006F FBBC  F1EB    	movff	16111,_low	;volatile
  5663                           
  5664                           ; BSR set to: 62
  5665                           ;Conversor_Escalas.c: 77: valor_AD = (int) (high * 0x100) + low;
  5666  005AC2  0101               	movlb	1	; () banked
  5667  005AC4  51EC               	movf	_high& (0+255),w,b
  5668  005AC6  6FB0               	movwf	(??_Verifica_Analogica+1)& (0+255),b
  5669  005AC8  6BAF               	clrf	??_Verifica_Analogica& (0+255),b
  5670  005ACA  51EB               	movf	_low& (0+255),w,b
  5671  005ACC  25AF               	addwf	??_Verifica_Analogica& (0+255),w,b
  5672  005ACE  6FDF               	movwf	_valor_AD& (0+255),b
  5673  005AD0  0E00               	movlw	0
  5674  005AD2  21B0               	addwfc	(??_Verifica_Analogica+1)& (0+255),w,b
  5675  005AD4  6FE0               	movwf	(_valor_AD+1)& (0+255),b
  5676                           
  5677                           ;Conversor_Escalas.c: 79: sample_result = sample_result + valor_AD;
  5678  005AD6  0060  F77C  F1AF   	movff	_valor_AD,??_Verifica_Analogica
  5679  005ADC  0060  F780  F1B0   	movff	_valor_AD+1,??_Verifica_Analogica+1
  5680  005AE2  0E00               	movlw	0
  5681  005AE4  BFB0               	btfsc	(??_Verifica_Analogica+1)& (0+255),7,b
  5682  005AE6  0EFF               	movlw	255
  5683  005AE8  6FB1               	movwf	(??_Verifica_Analogica+2)& (0+255),b
  5684  005AEA  6FB2               	movwf	(??_Verifica_Analogica+3)& (0+255),b
  5685  005AEC  0100               	movlb	0	; () banked
  5686  005AEE  51C8               	movf	_sample_result& (0+255),w,b
  5687  005AF0  0101               	movlb	1	; () banked
  5688  005AF2  25AF               	addwf	??_Verifica_Analogica& (0+255),w,b
  5689  005AF4  0100               	movlb	0	; () banked
  5690  005AF6  6FC8               	movwf	_sample_result& (0+255),b
  5691  005AF8  51C9               	movf	(_sample_result+1)& (0+255),w,b
  5692  005AFA  0101               	movlb	1	; () banked
  5693  005AFC  21B0               	addwfc	(??_Verifica_Analogica+1)& (0+255),w,b
  5694  005AFE  0100               	movlb	0	; () banked
  5695  005B00  6FC9               	movwf	(_sample_result+1)& (0+255),b
  5696  005B02  51CA               	movf	(_sample_result+2)& (0+255),w,b
  5697  005B04  0101               	movlb	1	; () banked
  5698  005B06  21B1               	addwfc	(??_Verifica_Analogica+2)& (0+255),w,b
  5699  005B08  0100               	movlb	0	; () banked
  5700  005B0A  6FCA               	movwf	(_sample_result+2)& (0+255),b
  5701  005B0C  51CB               	movf	(_sample_result+3)& (0+255),w,b
  5702  005B0E  0101               	movlb	1	; () banked
  5703  005B10  21B2               	addwfc	(??_Verifica_Analogica+3)& (0+255),w,b
  5704  005B12  0100               	movlb	0	; () banked
  5705  005B14  6FCB               	movwf	(_sample_result+3)& (0+255),b
  5706                           
  5707                           ;Conversor_Escalas.c: 81: if (ponteiro_analog >= 5) {
  5708  005B16  0102               	movlb	2	; () banked
  5709  005B18  BFD6               	btfsc	(_ponteiro_analog+1)& (0+255),7,b
  5710  005B1A  D084               	goto	l899
  5711  005B1C  51D6               	movf	(_ponteiro_analog+1)& (0+255),w,b
  5712  005B1E  E104               	bnz	u19300
  5713  005B20  0E05               	movlw	5
  5714  005B22  5DD5               	subwf	_ponteiro_analog& (0+255),w,b
  5715  005B24  A0D8               	btfss	16344,0,c
  5716  005B26  D07E               	goto	l899
  5717  005B28                     u19300:
  5718                           
  5719                           ; BSR set to: 2
  5720                           ;Conversor_Escalas.c: 82: ponteiro_analog = 0;
  5721  005B28  0E00               	movlw	0
  5722  005B2A  6FD6               	movwf	(_ponteiro_analog+1)& (0+255),b
  5723  005B2C  0E00               	movlw	0
  5724  005B2E  6FD5               	movwf	_ponteiro_analog& (0+255),b
  5725                           
  5726                           ; BSR set to: 2
  5727                           ;Conversor_Escalas.c: 83: sample_result = sample_result / 5;
  5728  005B30  0060  F320  F105   	movff	_sample_result,___lldiv@dividend
  5729  005B36  0060  F324  F106   	movff	_sample_result+1,___lldiv@dividend+1
  5730  005B3C  0060  F328  F107   	movff	_sample_result+2,___lldiv@dividend+2
  5731  005B42  0060  F32C  F108   	movff	_sample_result+3,___lldiv@dividend+3
  5732  005B48  0E05               	movlw	5
  5733  005B4A  0101               	movlb	1	; () banked
  5734  005B4C  6F09               	movwf	___lldiv@divisor& (0+255),b
  5735  005B4E  0E00               	movlw	0
  5736  005B50  6F0A               	movwf	(___lldiv@divisor+1)& (0+255),b
  5737  005B52  0E00               	movlw	0
  5738  005B54  6F0B               	movwf	(___lldiv@divisor+2)& (0+255),b
  5739  005B56  0E00               	movlw	0
  5740  005B58  6F0C               	movwf	(___lldiv@divisor+3)& (0+255),b
  5741  005B5A  EC34  F03C         	call	___lldiv	;wreg free
  5742  005B5E  0060  F414  F0C8   	movff	?___lldiv,_sample_result
  5743  005B64  0060  F418  F0C9   	movff	?___lldiv+1,_sample_result+1
  5744  005B6A  0060  F41C  F0CA   	movff	?___lldiv+2,_sample_result+2
  5745  005B70  0060  F420  F0CB   	movff	?___lldiv+3,_sample_result+3
  5746                           
  5747                           ;Conversor_Escalas.c: 84: valor_AD = (int) sample_result;
  5748  005B76  C0C8  F1DF         	movff	_sample_result,_valor_AD
  5749  005B7A  C0C9  F1E0         	movff	_sample_result+1,_valor_AD+1
  5750                           
  5751                           ;Conversor_Escalas.c: 88: ajusta_escala(valor_AD);
  5752  005B7E  0060  F77C  F161   	movff	_valor_AD,ajusta_escala@valor
  5753  005B84  0060  F780  F162   	movff	_valor_AD+1,ajusta_escala@valor+1
  5754  005B8A  ECD3  F026         	call	_ajusta_escala	;wreg free
  5755                           
  5756                           ;Conversor_Escalas.c: 91: Converte_Escala();
  5757  005B8E  EC18  F02E         	call	_Converte_Escala	;wreg free
  5758                           
  5759                           ;Conversor_Escalas.c: 93: sprintf(valoradstr, "%i -> %i | \r\n", valor_AD, (int) saida, 
      +                          m);
  5760  005B92  0EB3               	movlw	low Verifica_Analogica@valoradstr
  5761  005B94  0101               	movlb	1	; () banked
  5762  005B96  6F62               	movwf	sprintf@sp& (0+255),b
  5763  005B98  0E01               	movlw	high Verifica_Analogica@valoradstr
  5764  005B9A  6F63               	movwf	(sprintf@sp+1)& (0+255),b
  5765  005B9C  0E1D               	movlw	low STR_107
  5766  005B9E  6F64               	movwf	sprintf@f& (0+255),b
  5767  005BA0  0EFF               	movlw	high STR_107
  5768  005BA2  6F65               	movwf	(sprintf@f+1)& (0+255),b
  5769  005BA4  0060  F77C  F166   	movff	_valor_AD,?_sprintf+4
  5770  005BAA  0060  F780  F167   	movff	_valor_AD+1,?_sprintf+5
  5771  005BB0  0060  FAF0  F168   	movff	_saida,?_sprintf+6
  5772  005BB6  0060  FAF4  F169   	movff	_saida+1,?_sprintf+7
  5773  005BBC  0060  F330  F16A   	movff	_m,?_sprintf+8
  5774  005BC2  0060  F334  F16B   	movff	_m+1,?_sprintf+9
  5775  005BC8  0060  F338  F16C   	movff	_m+2,?_sprintf+10
  5776  005BCE  EC59  F000         	call	_sprintf	;wreg free
  5777                           
  5778                           ;Conversor_Escalas.c: 95: Buffer_Escrita_USB_Add_String(valoradstr, 0);
  5779  005BD2  0EB3               	movlw	low Verifica_Analogica@valoradstr
  5780  005BD4  0101               	movlb	1	; () banked
  5781  005BD6  6F07               	movwf	Buffer_Escrita_USB_Add_String@dado& (0+255),b
  5782  005BD8  0E01               	movlw	high Verifica_Analogica@valoradstr
  5783  005BDA  6F08               	movwf	(Buffer_Escrita_USB_Add_String@dado+1)& (0+255),b
  5784  005BDC  0E00               	movlw	0
  5785  005BDE  6F0A               	movwf	(Buffer_Escrita_USB_Add_String@aguarda+1)& (0+255),b
  5786  005BE0  0E00               	movlw	0
  5787  005BE2  6F09               	movwf	Buffer_Escrita_USB_Add_String@aguarda& (0+255),b
  5788  005BE4  EC9D  F037         	call	_Buffer_Escrita_USB_Add_String	;wreg free
  5789                           
  5790                           ;Conversor_Escalas.c: 97: MEMORIA[LATDbits.LATD3] = (long) saida;
  5791  005BE8  013F               	movlb	63	; () banked
  5792  005BEA  A7BD               	btfss	189,3,b	;volatile
  5793  005BEC  D004               	goto	u19310
  5794  005BEE  0101               	movlb	1	; () banked
  5795  005BF0  6BAF               	clrf	??_Verifica_Analogica& (0+255),b
  5796  005BF2  2BAF               	incf	??_Verifica_Analogica& (0+255),f,b
  5797  005BF4  D002               	goto	u19318
  5798  005BF6                     u19310:
  5799  005BF6  0101               	movlb	1	; () banked
  5800  005BF8  6BAF               	clrf	??_Verifica_Analogica& (0+255),b
  5801  005BFA                     u19318:
  5802  005BFA  51AF               	movf	??_Verifica_Analogica& (0+255),w,b
  5803  005BFC  0D04               	mullw	4
  5804  005BFE  0E94               	movlw	low _MEMORIA
  5805  005C00  24F3               	addwf	16371,w,c
  5806  005C02  6ED9               	movwf	16345,c
  5807  005C04  0E02               	movlw	high _MEMORIA
  5808  005C06  20F4               	addwfc	16372,w,c
  5809  005C08  6EDA               	movwf	16346,c
  5810  005C0A  0060  FAF3  FFDE   	movff	_saida,16350
  5811  005C10  0060  FAF7  FFDE   	movff	_saida+1,16350
  5812  005C16  0060  FAFB  FFDE   	movff	_saida+2,16350
  5813  005C1C  0060  FAFF  FFDE   	movff	_saida+3,16350
  5814                           
  5815                           ;Conversor_Escalas.c: 99: } else {
  5816  005C22  D003               	goto	l900
  5817  005C24                     l899:
  5818                           
  5819                           ;Conversor_Escalas.c: 100: ponteiro_analog++;
  5820                           
  5821                           ; BSR set to: 1
  5822  005C24  0102               	movlb	2	; () banked
  5823  005C26  4BD5               	infsnz	_ponteiro_analog& (0+255),f,b
  5824  005C28  2BD6               	incf	(_ponteiro_analog+1)& (0+255),f,b
  5825  005C2A                     l900:
  5826                           
  5827                           ;Conversor_Escalas.c: 101: }
  5828                           ;Conversor_Escalas.c: 102: ADCON0bits.GO = 1;
  5829                           
  5830                           ; BSR set to: 2
  5831  005C2A  013E               	movlb	62	; () banked
  5832  005C2C  81F8               	bsf	248,0,b	;volatile
  5833  005C2E  0012               	return	
  5834  005C30                     __end_of_Verifica_Analogica:
  5835                           	opt stack 0
  5836                           
  5837 ;; *************** function _sprintf *****************
  5838 ;; Defined at:
  5839 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  5840 ;; Parameters:    Size  Location     Type
  5841 ;;  sp              2   98[BANK1 ] PTR unsigned char 
  5842 ;;		 -> Verifica_Analogica@valoradstr(10), append_Arquivo_Json@linhaArquivo(120), append_Arquivo_Json@resultado(6), appe
      +nd_Arquivo_Json@valorMem_Char(10), 
  5843 ;;		 -> cria_Arquivo@tamanho(15), Aguarda_end(10), Aguarda_str(20), main@motivo(20), 
  5844 ;;  f               2  100[BANK1 ] PTR const unsigned char 
  5845 ;;		 -> STR_107(14), STR_77(3), STR_76(3), STR_13(61), 
  5846 ;;		 -> STR_12(6), STR_11(5), STR_10(6), STR_7(5), 
  5847 ;;		 -> STR_2(13), STR_1(18), 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;  idx             1  133[BANK1 ] unsigned char 
  5850 ;;  temp            3  146[BANK1 ] unsigned char 
  5851 ;;  val             4  163[BANK1 ] unsigned long 
  5852 ;;  tmpval          4  155[BANK1 ] struct .
  5853 ;;  fval            3  167[BANK1 ] struct .
  5854 ;;  flag            2  173[BANK1 ] unsigned short 
  5855 ;;  prec            2  170[BANK1 ] int 
  5856 ;;  width           2  161[BANK1 ] int 
  5857 ;;  exp             2  159[BANK1 ] int 
  5858 ;;  ap              2  153[BANK1 ] PTR void [1]
  5859 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  5860 ;;  len             2  151[BANK1 ] unsigned int 
  5861 ;;  cp              2  149[BANK1 ] PTR const unsigned char 
  5862 ;;		 -> STR_108(7), sprintf@c(1), STR_105(2), STR_104(7), 
  5863 ;;		 -> STR_101(3), STR_100(10), STR_96(2), STR_95(4), 
  5864 ;;		 -> STR_93(2), STR_92(7), STR_83(7), STR_82(7), 
  5865 ;;		 -> STR_80(3), STR_79(2), STR_74(2), STR_73(17), 
  5866 ;;		 -> STR_67(2), STR_66(3), STR_64(3), STR_63(6), 
  5867 ;;		 -> STR_61(2), STR_60(7), STR_58(2), STR_57(6), 
  5868 ;;		 -> STR_55(2), STR_54(7), STR_52(3), STR_51(8), 
  5869 ;;		 -> STR_49(2), STR_48(10), STR_46(2), STR_45(2), 
  5870 ;;		 -> STR_41(2), STR_40(2), STR_37(2), STR_36(10), 
  5871 ;;		 -> STR_32(3), STR_31(3), STR_28(3), STR_27(3), 
  5872 ;;		 -> STR_23(2), STR_22(2), STR_20(2), STR_19(3), 
  5873 ;;		 -> frameId(1110), append_Arquivo_Json@resultado(6), append_Arquivo_Json@virgula(2), STR_4(2), 
  5874 ;;		 -> STR_3(10), 
  5875 ;;  c               1  172[BANK1 ] char 
  5876 ;;  d               1    0        unsigned char 
  5877 ;; Return value:  Size  Location     Type
  5878 ;;                  2   98[BANK1 ] int 
  5879 ;; Registers used:
  5880 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5881 ;; Tracked objects:
  5882 ;;		On entry : 0/0
  5883 ;;		On exit  : 0/0
  5884 ;;		Unchanged: 0/0
  5885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5886 ;;      Params:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5887 ;;      Locals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;      Totals:         0       0      77       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;Total ram usage:       77 bytes
  5891 ;; Hardware stack levels used:    1
  5892 ;; Hardware stack levels required when called:   13
  5893 ;; This function calls:
  5894 ;;		___awdiv
  5895 ;;		___awmod
  5896 ;;		___ftadd
  5897 ;;		___ftdiv
  5898 ;;		___ftge
  5899 ;;		___ftmul
  5900 ;;		___ftneg
  5901 ;;		___ftsub
  5902 ;;		___fttol
  5903 ;;		___lldiv
  5904 ;;		___llmod
  5905 ;;		___lltoft
  5906 ;;		___wmul
  5907 ;;		__div_to_l_
  5908 ;;		__tdiv_to_l_
  5909 ;;		_fround
  5910 ;;		_isdigit
  5911 ;;		_scale
  5912 ;; This function is called by:
  5913 ;;		_main
  5914 ;;		_cria_Arquivo
  5915 ;;		_append_Arquivo_Json
  5916 ;;		_Aguarda_dado
  5917 ;;		_Verifica_Analogica
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           	psect	text10
  5922  0000B2                     __ptext10:
  5923                           	opt stack 0
  5924  0000B2                     _sprintf:
  5925                           	opt stack 17
  5926                           
  5927                           ;doprnt.c: 494: va_list ap;
  5928                           ;doprnt.c: 499: signed char c;
  5929                           ;doprnt.c: 501: int width;
  5930                           ;doprnt.c: 504: int prec;
  5931                           ;doprnt.c: 508: unsigned short flag;
  5932                           ;doprnt.c: 515: char d;
  5933                           ;doprnt.c: 516: double fval;
  5934                           ;doprnt.c: 517: int exp;
  5935                           ;doprnt.c: 523: union {
  5936                           ;doprnt.c: 524: unsigned long vd;
  5937                           ;doprnt.c: 525: double integ;
  5938                           ;doprnt.c: 526: } tmpval;
  5939                           ;doprnt.c: 528: unsigned long val;
  5940                           ;doprnt.c: 529: unsigned len;
  5941                           ;doprnt.c: 530: const char * cp;
  5942                           ;doprnt.c: 533: *ap = __va_start();
  5943                           
  5944                           ; BSR set to: 62
  5945                           ;incstack = 0
  5946  0000B2  0E66               	movlw	low (?_sprintf+4)
  5947  0000B4  0101               	movlb	1	; () banked
  5948  0000B6  6F99               	movwf	sprintf@ap& (0+255),b
  5949  0000B8  0E01               	movlw	high (?_sprintf+4)
  5950  0000BA  6F9A               	movwf	(sprintf@ap+1)& (0+255),b
  5951                           
  5952                           ;doprnt.c: 536: while(c = *f++) {
  5953  0000BC  EF9B  F00E         	goto	u18400
  5954  0000C0                     
  5955                           ; BSR set to: 1
  5956                           ;doprnt.c: 538: if(c != '%')
  5957                           
  5958                           ; BSR set to: 1
  5959  0000C0  0E25               	movlw	37
  5960  0000C2  19AC               	xorwf	sprintf@c& (0+255),w,b
  5961  0000C4  B4D8               	btfsc	16344,2,c
  5962  0000C6  D00D               	goto	l964
  5963                           
  5964                           ; BSR set to: 1
  5965                           ;doprnt.c: 540: {
  5966                           ;doprnt.c: 541: ((*sp++ = (c)));
  5967  0000C8  0060  F58B  FFD9   	movff	sprintf@sp,16345
  5968  0000CE  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  5969  0000D4  0060  F6B3  FFDF   	movff	sprintf@c,16351
  5970                           
  5971                           ; BSR set to: 1
  5972  0000DA  4B62               	infsnz	sprintf@sp& (0+255),f,b
  5973  0000DC  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  5974                           
  5975                           ;doprnt.c: 542: continue;
  5976  0000DE  EF9B  F00E         	goto	u18400
  5977  0000E2                     l964:
  5978                           
  5979                           ; BSR set to: 1
  5980                           ;doprnt.c: 543: }
  5981                           ;doprnt.c: 546: width = 0;
  5982                           
  5983                           ; BSR set to: 1
  5984  0000E2  0E00               	movlw	0
  5985  0000E4  6FA2               	movwf	(sprintf@width+1)& (0+255),b
  5986  0000E6  0E00               	movlw	0
  5987  0000E8  6FA1               	movwf	sprintf@width& (0+255),b
  5988                           
  5989                           ;doprnt.c: 548: flag = 0;
  5990  0000EA  0E00               	movlw	0
  5991  0000EC  6FAE               	movwf	(sprintf@flag+1)& (0+255),b
  5992  0000EE  0E00               	movlw	0
  5993  0000F0  6FAD               	movwf	sprintf@flag& (0+255),b
  5994                           
  5995                           ; BSR set to: 1
  5996                           ;doprnt.c: 551: switch(*f) {
  5997                           
  5998                           ;doprnt.c: 550: for(;;) {
  5999  0000F2  D010               	goto	l966
  6000  0000F4                     
  6001                           ;doprnt.c: 554: flag |= 0x08;
  6002                           
  6003                           ; BSR set to: 1
  6004  0000F4  0101               	movlb	1	; () banked
  6005  0000F6  87AD               	bsf	sprintf@flag& (0+255),3,b
  6006  0000F8  D00B               	goto	L4
  6007  0000FA                     
  6008                           ;doprnt.c: 561: flag |= 0x01;
  6009                           
  6010                           ; BSR set to: 1
  6011  0000FA  0101               	movlb	1	; () banked
  6012  0000FC  81AD               	bsf	sprintf@flag& (0+255),0,b
  6013  0000FE  D008               	goto	L4
  6014  000100                     
  6015                           ;doprnt.c: 568: flag |= 0x02;
  6016                           
  6017                           ; BSR set to: 1
  6018  000100  0101               	movlb	1	; () banked
  6019  000102  83AD               	bsf	sprintf@flag& (0+255),1,b
  6020  000104  D005               	goto	L4
  6021  000106                     
  6022                           ;doprnt.c: 574: flag |= 0x800;
  6023                           
  6024                           ; BSR set to: 1
  6025  000106  0101               	movlb	1	; () banked
  6026  000108  87AE               	bsf	(sprintf@flag+1)& (0+255),3,b
  6027  00010A  D002               	goto	L4
  6028  00010C                     
  6029                           ;doprnt.c: 580: flag |= 0x04;
  6030                           
  6031                           ; BSR set to: 1
  6032  00010C  0101               	movlb	1	; () banked
  6033  00010E  85AD               	bsf	sprintf@flag& (0+255),2,b
  6034  000110                     L4:
  6035                           
  6036                           ;doprnt.c: 581: f++;
  6037  000110  4B64               	infsnz	sprintf@f& (0+255),f,b
  6038  000112  2B65               	incf	(sprintf@f+1)& (0+255),f,b
  6039  000114                     l966:
  6040                           
  6041                           ; BSR set to: 1
  6042  000114  0060  F593  FFF6   	movff	sprintf@f,16374
  6043  00011A  0060  F597  FFF7   	movff	sprintf@f+1,16375
  6044  000120                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6045  000120  6AF8               	clrf	16376,c
  6046  000122                     	endif
  6047  000122                     	if	0	;tblptru may be non-zero
  6048  000122                     	endif
  6049  000122  0008               	tblrd		*
  6050  000124  50F5               	movf	16373,w,c
  6051                           
  6052                           ; Switch size 1, requested type "space"
  6053                           ; Number of cases is 5, Range of values is 32 to 48
  6054                           ; switch strategies available:
  6055                           ; Name         Instructions Cycles
  6056                           ; simple_byte           16     9 (average)
  6057                           ;	Chosen strategy is simple_byte
  6058  000126  0A20               	xorlw	32	; case 32
  6059  000128  B4D8               	btfsc	16344,2,c
  6060  00012A  D7E7               	goto	l969
  6061  00012C  0A03               	xorlw	3	; case 35
  6062  00012E  B4D8               	btfsc	16344,2,c
  6063  000130  D7EA               	goto	l971
  6064  000132  0A08               	xorlw	8	; case 43
  6065  000134  B4D8               	btfsc	16344,2,c
  6066  000136  D7E4               	goto	l970
  6067  000138  0A06               	xorlw	6	; case 45
  6068  00013A  B4D8               	btfsc	16344,2,c
  6069  00013C  D7DB               	goto	l967
  6070  00013E  0A1D               	xorlw	29	; case 48
  6071  000140  B4D8               	btfsc	16344,2,c
  6072  000142  D7E4               	goto	l972
  6073                           
  6074                           ;doprnt.c: 589: if(flag & 0x02)
  6075                           
  6076                           ;doprnt.c: 586: }
  6077                           
  6078                           ;doprnt.c: 585: break;
  6079  000144  0101               	movlb	1	; () banked
  6080  000146  B3AD               	btfsc	sprintf@flag& (0+255),1,b
  6081                           
  6082                           ; BSR set to: 1
  6083                           ;doprnt.c: 590: flag &= ~0x01;
  6084  000148  91AD               	bcf	sprintf@flag& (0+255),0,b
  6085                           
  6086                           ; BSR set to: 1
  6087                           ;doprnt.c: 593: if(flag & 0x08)
  6088                           
  6089                           ; BSR set to: 1
  6090  00014A  B7AD               	btfsc	sprintf@flag& (0+255),3,b
  6091                           
  6092                           ; BSR set to: 1
  6093                           ;doprnt.c: 594: flag &= ~0x04;
  6094  00014C  95AD               	bcf	sprintf@flag& (0+255),2,b
  6095                           
  6096                           ; BSR set to: 1
  6097                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6098                           
  6099                           ; BSR set to: 1
  6100  00014E  0060  F593  FFF6   	movff	sprintf@f,16374
  6101  000154  0060  F597  FFF7   	movff	sprintf@f+1,16375
  6102  00015A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6103  00015A  6AF8               	clrf	16376,c
  6104  00015C                     	endif
  6105  00015C                     	if	0	;tblptru may be non-zero
  6106  00015C                     	endif
  6107  00015C  0008               	tblrd		*
  6108  00015E  50F5               	movf	16373,w,c
  6109  000160  EC18  F045         	call	_isdigit
  6110  000164  A0D8               	btfss	16344,0,c
  6111  000166  D03F               	goto	u16970
  6112                           
  6113                           ;doprnt.c: 598: width = 0;
  6114  000168  0E00               	movlw	0
  6115  00016A  0101               	movlb	1	; () banked
  6116  00016C  6FA2               	movwf	(sprintf@width+1)& (0+255),b
  6117  00016E  0E00               	movlw	0
  6118  000170  6FA1               	movwf	sprintf@width& (0+255),b
  6119  000172                     
  6120                           ;doprnt.c: 600: width *= 10;
  6121                           
  6122                           ; BSR set to: 1
  6123  000172  0060  F684  F113   	movff	sprintf@width,___wmul@multiplier
  6124  000178  0060  F688  F114   	movff	sprintf@width+1,___wmul@multiplier+1
  6125  00017E  0E00               	movlw	0
  6126  000180  0101               	movlb	1	; () banked
  6127  000182  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6128  000184  0E0A               	movlw	10
  6129  000186  6F15               	movwf	___wmul@multiplicand& (0+255),b
  6130  000188  ECA8  F044         	call	___wmul	;wreg free
  6131  00018C  0060  F44C  F1A1   	movff	?___wmul,sprintf@width
  6132  000192  0060  F450  F1A2   	movff	?___wmul+1,sprintf@width+1
  6133                           
  6134                           ;doprnt.c: 601: width += *f++ - '0';
  6135  000198  0ED0               	movlw	208
  6136  00019A  0101               	movlb	1	; () banked
  6137  00019C  6F7C               	movwf	??_sprintf& (0+255),b
  6138  00019E  0EFF               	movlw	255
  6139  0001A0  6F7D               	movwf	(??_sprintf+1)& (0+255),b
  6140  0001A2  0060  F593  FFF6   	movff	sprintf@f,16374
  6141  0001A8  0060  F597  FFF7   	movff	sprintf@f+1,16375
  6142  0001AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6143  0001AE  6AF8               	clrf	16376,c
  6144  0001B0                     	endif
  6145  0001B0                     	if	0	;tblptru may be non-zero
  6146  0001B0                     	endif
  6147  0001B0  0008               	tblrd		*
  6148  0001B2  50F5               	movf	16373,w,c
  6149  0001B4  6F7E               	movwf	(??_sprintf+2)& (0+255),b
  6150  0001B6  6B7F               	clrf	(??_sprintf+3)& (0+255),b
  6151  0001B8  517C               	movf	??_sprintf& (0+255),w,b
  6152  0001BA  277E               	addwf	(??_sprintf+2)& (0+255),f,b
  6153  0001BC  517D               	movf	(??_sprintf+1)& (0+255),w,b
  6154  0001BE  237F               	addwfc	(??_sprintf+3)& (0+255),f,b
  6155  0001C0  517E               	movf	(??_sprintf+2)& (0+255),w,b
  6156  0001C2  27A1               	addwf	sprintf@width& (0+255),f,b
  6157  0001C4  517F               	movf	(??_sprintf+3)& (0+255),w,b
  6158  0001C6  23A2               	addwfc	(sprintf@width+1)& (0+255),f,b
  6159                           
  6160                           ; BSR set to: 1
  6161  0001C8  4B64               	infsnz	sprintf@f& (0+255),f,b
  6162  0001CA  2B65               	incf	(sprintf@f+1)& (0+255),f,b
  6163                           
  6164                           ; BSR set to: 1
  6165                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6166  0001CC  0060  F593  FFF6   	movff	sprintf@f,16374
  6167  0001D2  0060  F597  FFF7   	movff	sprintf@f+1,16375
  6168  0001D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6169  0001D8  6AF8               	clrf	16376,c
  6170  0001DA                     	endif
  6171  0001DA                     	if	0	;tblptru may be non-zero
  6172  0001DA                     	endif
  6173  0001DA  0008               	tblrd		*
  6174  0001DC  50F5               	movf	16373,w,c
  6175  0001DE  EC18  F045         	call	_isdigit
  6176  0001E2  B0D8               	btfsc	16344,0,c
  6177  0001E4  D7C6               	goto	l978
  6178  0001E6                     u16970:
  6179                           
  6180                           ;doprnt.c: 608: }
  6181                           ;doprnt.c: 611: if(*f == '.') {
  6182  0001E6  0060  F593  FFF6   	movff	sprintf@f,16374
  6183  0001EC  0060  F597  FFF7   	movff	sprintf@f+1,16375
  6184  0001F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6185  0001F2  6AF8               	clrf	16376,c
  6186  0001F4                     	endif
  6187  0001F4                     	if	0	;tblptru may be non-zero
  6188  0001F4                     	endif
  6189  0001F4  0008               	tblrd		*
  6190  0001F6  50F5               	movf	16373,w,c
  6191  0001F8  0A2E               	xorlw	46
  6192  0001FA  A4D8               	btfss	16344,2,c
  6193  0001FC  D039               	goto	l980
  6194                           
  6195                           ;doprnt.c: 612: flag |= 0x4000;
  6196  0001FE  0101               	movlb	1	; () banked
  6197  000200  8DAE               	bsf	(sprintf@flag+1)& (0+255),6,b
  6198                           
  6199                           ;doprnt.c: 613: f++;
  6200  000202  4B64               	infsnz	sprintf@f& (0+255),f,b
  6201  000204  2B65               	incf	(sprintf@f+1)& (0+255),f,b
  6202                           
  6203                           ; BSR set to: 1
  6204                           ;doprnt.c: 620: {
  6205                           ;doprnt.c: 621: prec = 0;
  6206  000206  0E00               	movlw	0
  6207  000208  6FAB               	movwf	(sprintf@prec+1)& (0+255),b
  6208  00020A  0E00               	movlw	0
  6209  00020C  6FAA               	movwf	sprintf@prec& (0+255),b
  6210                           
  6211                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6212  00020E  D022               	goto	l981
  6213  000210                     
  6214                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6215                           
  6216                           ; BSR set to: 1
  6217  000210  0060  F6A8  F113   	movff	sprintf@prec,___wmul@multiplier
  6218  000216  0060  F6AC  F114   	movff	sprintf@prec+1,___wmul@multiplier+1
  6219  00021C  0E00               	movlw	0
  6220  00021E  0101               	movlb	1	; () banked
  6221  000220  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6222  000222  0E0A               	movlw	10
  6223  000224  6F15               	movwf	___wmul@multiplicand& (0+255),b
  6224  000226  ECA8  F044         	call	___wmul	;wreg free
  6225  00022A  0060  F593  FFF6   	movff	sprintf@f,16374
  6226  000230  0060  F597  FFF7   	movff	sprintf@f+1,16375
  6227  000236                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6228  000236  6AF8               	clrf	16376,c
  6229  000238                     	endif
  6230  000238                     	if	0	;tblptru may be non-zero
  6231  000238                     	endif
  6232  000238  0008               	tblrd		*
  6233  00023A  50F5               	movf	16373,w,c
  6234  00023C  0101               	movlb	1	; () banked
  6235  00023E  2713               	addwf	?___wmul& (0+255),f,b
  6236  000240  0E00               	movlw	0
  6237  000242  2314               	addwfc	(?___wmul+1)& (0+255),f,b
  6238  000244  0ED0               	movlw	208
  6239  000246  2513               	addwf	?___wmul& (0+255),w,b
  6240  000248  6FAA               	movwf	sprintf@prec& (0+255),b
  6241  00024A  0EFF               	movlw	255
  6242  00024C  2114               	addwfc	(?___wmul+1)& (0+255),w,b
  6243  00024E  6FAB               	movwf	(sprintf@prec+1)& (0+255),b
  6244                           
  6245                           ; BSR set to: 1
  6246  000250  4B64               	infsnz	sprintf@f& (0+255),f,b
  6247  000252  2B65               	incf	(sprintf@f+1)& (0+255),f,b
  6248  000254                     l981:
  6249                           
  6250                           ; BSR set to: 1
  6251                           
  6252                           ; BSR set to: 1
  6253  000254  0060  F593  FFF6   	movff	sprintf@f,16374
  6254  00025A  0060  F597  FFF7   	movff	sprintf@f+1,16375
  6255  000260                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6256  000260  6AF8               	clrf	16376,c
  6257  000262                     	endif
  6258  000262                     	if	0	;tblptru may be non-zero
  6259  000262                     	endif
  6260  000262  0008               	tblrd		*
  6261  000264  50F5               	movf	16373,w,c
  6262  000266  EC18  F045         	call	_isdigit
  6263  00026A  A0D8               	btfss	16344,0,c
  6264  00026C  D0DE               	goto	l986
  6265  00026E  D7D0               	goto	l982
  6266  000270                     l980:
  6267                           
  6268                           ;doprnt.c: 626: prec = 0;
  6269  000270  0E00               	movlw	0
  6270  000272  0101               	movlb	1	; () banked
  6271  000274  6FAB               	movwf	(sprintf@prec+1)& (0+255),b
  6272  000276  0E00               	movlw	0
  6273  000278  6FAA               	movwf	sprintf@prec& (0+255),b
  6274                           
  6275                           ; BSR set to: 1
  6276                           ;doprnt.c: 628: flag |= 0x1000;
  6277  00027A  89AE               	bsf	(sprintf@flag+1)& (0+255),4,b
  6278                           
  6279                           ; BSR set to: 1
  6280                           ;doprnt.c: 635: switch(c = *f++) {
  6281                           
  6282                           ;doprnt.c: 630: }
  6283                           ;doprnt.c: 633: loop:
  6284                           
  6285                           ; BSR set to: 1
  6286  00027C  D0D6               	goto	l986
  6287  00027E                     
  6288                           ; BSR set to: 1
  6289                           ;doprnt.c: 643: flag |= 0x10;
  6290                           
  6291                           ; BSR set to: 1
  6292  00027E  89AD               	bsf	sprintf@flag& (0+255),4,b
  6293                           
  6294                           ;doprnt.c: 644: goto loop;
  6295  000280  D0D4               	goto	l986
  6296  000282                     
  6297                           ; BSR set to: 1
  6298                           ;doprnt.c: 663: flag |= 0x400;
  6299                           
  6300                           ; BSR set to: 1
  6301  000282  85AE               	bsf	(sprintf@flag+1)& (0+255),2,b
  6302                           
  6303                           ;doprnt.c: 664: break;
  6304  000284  D107               	goto	l991
  6305  000286                     
  6306                           ; BSR set to: 1
  6307                           ;doprnt.c: 670: flag |= 0x20;
  6308                           
  6309                           ; BSR set to: 1
  6310  000286  8BAD               	bsf	sprintf@flag& (0+255),5,b
  6311  000288                     l993:
  6312                           
  6313                           ; BSR set to: 1
  6314                           ;doprnt.c: 673: flag |= 0x100;
  6315  000288  81AE               	bsf	(sprintf@flag+1)& (0+255),0,b
  6316                           
  6317                           ;doprnt.c: 674: break;
  6318  00028A  D104               	goto	l991
  6319  00028C                     
  6320                           ; BSR set to: 1
  6321                           ;doprnt.c: 680: flag |= 0x20;
  6322                           
  6323                           ; BSR set to: 1
  6324  00028C  8BAD               	bsf	sprintf@flag& (0+255),5,b
  6325  00028E                     l995:
  6326                           
  6327                           ; BSR set to: 1
  6328                           ;doprnt.c: 683: flag |= 0x200;
  6329  00028E  83AE               	bsf	(sprintf@flag+1)& (0+255),1,b
  6330                           
  6331                           ; BSR set to: 1
  6332                           ;doprnt.c: 698: case 'i':
  6333                           ;doprnt.c: 699: break;
  6334                           
  6335                           ; BSR set to: 1
  6336                           
  6337                           ;doprnt.c: 697: case 'd':
  6338                           
  6339                           ;doprnt.c: 684: break;
  6340  000290  D101               	goto	l991
  6341  000292                     
  6342                           ; BSR set to: 1
  6343                           ;doprnt.c: 721: flag |= 0x80;
  6344                           
  6345                           ; BSR set to: 1
  6346  000292  8FAD               	bsf	sprintf@flag& (0+255),7,b
  6347                           
  6348                           ;doprnt.c: 723: break;
  6349  000294  D0FF               	goto	l991
  6350  000296                     
  6351                           ; BSR set to: 1
  6352                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  6353                           
  6354                           ; BSR set to: 1
  6355  000296  0060  F667  FFD9   	movff	sprintf@ap,16345
  6356  00029C  0060  F66B  FFDA   	movff	sprintf@ap+1,16346
  6357  0002A2  006F FF78  F195    	movff	16350,sprintf@cp
  6358  0002A8  006F FF74  F196    	movff	16349,sprintf@cp+1
  6359                           
  6360                           ; BSR set to: 1
  6361  0002AE  0E02               	movlw	2
  6362  0002B0  2799               	addwf	sprintf@ap& (0+255),f,b
  6363  0002B2  0E00               	movlw	0
  6364  0002B4  239A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6365                           
  6366                           ; BSR set to: 1
  6367                           ;doprnt.c: 740: if(!cp)
  6368  0002B6  5195               	movf	sprintf@cp& (0+255),w,b
  6369  0002B8  1196               	iorwf	(sprintf@cp+1)& (0+255),w,b
  6370  0002BA  A4D8               	btfss	16344,2,c
  6371  0002BC  D004               	goto	l1000
  6372                           
  6373                           ; BSR set to: 1
  6374                           ;doprnt.c: 741: cp = "(null)";
  6375  0002BE  0E93               	movlw	low STR_108
  6376  0002C0  6F95               	movwf	sprintf@cp& (0+255),b
  6377  0002C2  0EFF               	movlw	high STR_108
  6378  0002C4  6F96               	movwf	(sprintf@cp+1)& (0+255),b
  6379  0002C6                     l1000:
  6380                           
  6381                           ; BSR set to: 1
  6382                           ;doprnt.c: 745: len = 0;
  6383                           
  6384                           ; BSR set to: 1
  6385  0002C6  0E00               	movlw	0
  6386  0002C8  6F98               	movwf	(sprintf@len+1)& (0+255),b
  6387  0002CA  0E00               	movlw	0
  6388  0002CC  6F97               	movwf	sprintf@len& (0+255),b
  6389                           
  6390                           ;doprnt.c: 746: while(cp[len])
  6391  0002CE  D003               	goto	l1001
  6392  0002D0                     
  6393                           ;doprnt.c: 747: len++;
  6394                           
  6395                           ; BSR set to: 1
  6396  0002D0  0101               	movlb	1	; () banked
  6397  0002D2  4B97               	infsnz	sprintf@len& (0+255),f,b
  6398  0002D4  2B98               	incf	(sprintf@len+1)& (0+255),f,b
  6399  0002D6                     l1001:
  6400                           
  6401                           ; BSR set to: 1
  6402                           
  6403                           ; BSR set to: 1
  6404  0002D6  5197               	movf	sprintf@len& (0+255),w,b
  6405  0002D8  2595               	addwf	sprintf@cp& (0+255),w,b
  6406  0002DA  6F7C               	movwf	??_sprintf& (0+255),b
  6407  0002DC  5198               	movf	(sprintf@len+1)& (0+255),w,b
  6408  0002DE  2196               	addwfc	(sprintf@cp+1)& (0+255),w,b
  6409  0002E0  6F7D               	movwf	(??_sprintf+1)& (0+255),b
  6410  0002E2  0060  F5F3  FFF6   	movff	??_sprintf,16374
  6411  0002E8  0060  F5F7  FFF7   	movff	??_sprintf+1,16375
  6412  0002EE  0E00               	movlw	low (__mediumconst shr (0+16))
  6413  0002F0  6EF8               	movwf	16376,c
  6414  0002F2  0E0F               	movlw	(high __ramtop+-1)
  6415  0002F4  64F7               	cpfsgt	16375,c
  6416  0002F6  D003               	bra	u17017
  6417  0002F8  0008               	tblrd		*
  6418  0002FA  50F5               	movf	16373,w,c
  6419  0002FC  D007               	bra	u17010
  6420  0002FE                     u17017:
  6421  0002FE  006F FFDB FFE9     	movff	16374,16361
  6422  000304  006F FFDF FFEA     	movff	16375,16362
  6423  00030A  50EF               	movf	16367,w,c
  6424  00030C                     u17010:
  6425  00030C  0900               	iorlw	0
  6426  00030E  A4D8               	btfss	16344,2,c
  6427  000310  D7DF               	goto	l1002
  6428  000312                     u17020:
  6429                           
  6430                           ;doprnt.c: 753: if(prec && prec < len)
  6431                           
  6432                           ;doprnt.c: 750: dostring:
  6433  000312  0101               	movlb	1	; () banked
  6434  000314  51AA               	movf	sprintf@prec& (0+255),w,b
  6435  000316  11AB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6436  000318  B4D8               	btfsc	16344,2,c
  6437  00031A  D00C               	goto	l1005
  6438                           
  6439                           ; BSR set to: 1
  6440  00031C  5197               	movf	sprintf@len& (0+255),w,b
  6441  00031E  5DAA               	subwf	sprintf@prec& (0+255),w,b
  6442  000320  5198               	movf	(sprintf@len+1)& (0+255),w,b
  6443  000322  59AB               	subwfb	(sprintf@prec+1)& (0+255),w,b
  6444  000324  B0D8               	btfsc	16344,0,c
  6445  000326  D006               	goto	l1005
  6446                           
  6447                           ; BSR set to: 1
  6448                           ;doprnt.c: 754: len = prec;
  6449  000328  0060  F6A8  F197   	movff	sprintf@prec,sprintf@len
  6450  00032E  0060  F6AC  F198   	movff	sprintf@prec+1,sprintf@len+1
  6451  000334                     l1005:
  6452                           
  6453                           ; BSR set to: 1
  6454                           ;doprnt.c: 757: if(width > len)
  6455                           
  6456                           ; BSR set to: 1
  6457  000334  51A1               	movf	sprintf@width& (0+255),w,b
  6458  000336  5D97               	subwf	sprintf@len& (0+255),w,b
  6459  000338  51A2               	movf	(sprintf@width+1)& (0+255),w,b
  6460  00033A  5998               	subwfb	(sprintf@len+1)& (0+255),w,b
  6461  00033C  B0D8               	btfsc	16344,0,c
  6462  00033E  D005               	goto	l1006
  6463                           
  6464                           ; BSR set to: 1
  6465                           ;doprnt.c: 758: width -= len;
  6466  000340  5197               	movf	sprintf@len& (0+255),w,b
  6467  000342  5FA1               	subwf	sprintf@width& (0+255),f,b
  6468  000344  5198               	movf	(sprintf@len+1)& (0+255),w,b
  6469  000346  5BA2               	subwfb	(sprintf@width+1)& (0+255),f,b
  6470  000348  D004               	goto	l1007
  6471  00034A                     l1006:
  6472                           
  6473                           ; BSR set to: 1
  6474                           ;doprnt.c: 759: else
  6475                           ;doprnt.c: 760: width = 0;
  6476                           
  6477                           ; BSR set to: 1
  6478  00034A  0E00               	movlw	0
  6479  00034C  6FA2               	movwf	(sprintf@width+1)& (0+255),b
  6480  00034E  0E00               	movlw	0
  6481  000350  6FA1               	movwf	sprintf@width& (0+255),b
  6482  000352                     l1007:
  6483                           
  6484                           ; BSR set to: 1
  6485                           ;doprnt.c: 762: if(!(flag & 0x08))
  6486                           
  6487                           ; BSR set to: 1
  6488  000352  A7AD               	btfss	sprintf@flag& (0+255),3,b
  6489  000354  D00B               	goto	l1009
  6490  000356  D034               	goto	l1012
  6491  000358                     l12686:
  6492                           
  6493                           ; BSR set to: 1
  6494                           ;doprnt.c: 765: ((*sp++ = (' ')));
  6495  000358  0060  F58B  FFD9   	movff	sprintf@sp,16345
  6496  00035E  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  6497  000364  0E20               	movlw	32
  6498  000366  6EDF               	movwf	16351,c
  6499                           
  6500                           ; BSR set to: 1
  6501  000368  4B62               	infsnz	sprintf@sp& (0+255),f,b
  6502  00036A  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  6503  00036C                     l1009:
  6504                           
  6505                           ; BSR set to: 1
  6506                           
  6507                           ; BSR set to: 1
  6508  00036C  07A1               	decf	sprintf@width& (0+255),f,b
  6509  00036E  A0D8               	btfss	16344,0,c
  6510  000370  07A2               	decf	(sprintf@width+1)& (0+255),f,b
  6511  000372  29A1               	incf	sprintf@width& (0+255),w,b
  6512  000374  E1F1               	bnz	l12686
  6513  000376  29A2               	incf	(sprintf@width+1)& (0+255),w,b
  6514  000378  B4D8               	btfsc	16344,2,c
  6515  00037A  D022               	goto	l1012
  6516  00037C  D7ED               	goto	l1010
  6517  00037E                     l12692:
  6518                           
  6519                           ; BSR set to: 1
  6520                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  6521  00037E  0060  F657  FFF6   	movff	sprintf@cp,16374
  6522  000384  0060  F65B  FFF7   	movff	sprintf@cp+1,16375
  6523  00038A  0E00               	movlw	low (__mediumconst shr (0+16))
  6524  00038C  6EF8               	movwf	16376,c
  6525  00038E  0060  F58B  FFD9   	movff	sprintf@sp,16345
  6526  000394  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  6527  00039A  0E0F               	movlw	(high __ramtop+-1)
  6528  00039C  64F7               	cpfsgt	16375,c
  6529  00039E  D003               	bra	u17087
  6530  0003A0  0008               	tblrd		*
  6531  0003A2  50F5               	movf	16373,w,c
  6532  0003A4  D007               	bra	u17080
  6533  0003A6                     u17087:
  6534  0003A6  006F FFDB FFE9     	movff	16374,16361
  6535  0003AC  006F FFDF FFEA     	movff	16375,16362
  6536  0003B2  50EF               	movf	16367,w,c
  6537  0003B4                     u17080:
  6538  0003B4  6EDF               	movwf	16351,c
  6539  0003B6  0101               	movlb	1	; () banked
  6540  0003B8  4B95               	infsnz	sprintf@cp& (0+255),f,b
  6541  0003BA  2B96               	incf	(sprintf@cp+1)& (0+255),f,b
  6542                           
  6543                           ; BSR set to: 1
  6544  0003BC  4B62               	infsnz	sprintf@sp& (0+255),f,b
  6545  0003BE  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  6546  0003C0                     l1012:
  6547                           
  6548                           ; BSR set to: 1
  6549                           
  6550                           ; BSR set to: 1
  6551  0003C0  0797               	decf	sprintf@len& (0+255),f,b
  6552  0003C2  A0D8               	btfss	16344,0,c
  6553  0003C4  0798               	decf	(sprintf@len+1)& (0+255),f,b
  6554  0003C6  2997               	incf	sprintf@len& (0+255),w,b
  6555  0003C8  E1DA               	bnz	l12692
  6556  0003CA  2998               	incf	(sprintf@len+1)& (0+255),w,b
  6557  0003CC  A4D8               	btfss	16344,2,c
  6558  0003CE  D7D7               	goto	l1013
  6559                           
  6560                           ; BSR set to: 1
  6561                           ;doprnt.c: 770: if(flag & 0x08)
  6562  0003D0  B7AD               	btfsc	sprintf@flag& (0+255),3,b
  6563  0003D2  D00C               	goto	l1016
  6564  0003D4  EF9B  F00E         	goto	u18400
  6565  0003D8                     l12702:
  6566                           
  6567                           ; BSR set to: 1
  6568                           ;doprnt.c: 772: ((*sp++ = (' ')));
  6569  0003D8  0060  F58B  FFD9   	movff	sprintf@sp,16345
  6570  0003DE  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  6571  0003E4  0E20               	movlw	32
  6572  0003E6  6EDF               	movwf	16351,c
  6573                           
  6574                           ; BSR set to: 1
  6575  0003E8  4B62               	infsnz	sprintf@sp& (0+255),f,b
  6576  0003EA  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  6577  0003EC                     l1016:
  6578                           
  6579                           ; BSR set to: 1
  6580                           
  6581                           ; BSR set to: 1
  6582  0003EC  07A1               	decf	sprintf@width& (0+255),f,b
  6583  0003EE  A0D8               	btfss	16344,0,c
  6584  0003F0  07A2               	decf	(sprintf@width+1)& (0+255),f,b
  6585  0003F2  29A1               	incf	sprintf@width& (0+255),w,b
  6586  0003F4  E1F1               	bnz	l12702
  6587  0003F6  29A2               	incf	(sprintf@width+1)& (0+255),w,b
  6588  0003F8  B4D8               	btfsc	16344,2,c
  6589  0003FA  EF9B  F00E         	goto	u18400
  6590  0003FE  D7EC               	goto	l1017
  6591  000400                     
  6592                           ; BSR set to: 1
  6593                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  6594                           
  6595                           ; BSR set to: 1
  6596  000400  0060  F667  FFD9   	movff	sprintf@ap,16345
  6597  000406  0060  F66B  FFDA   	movff	sprintf@ap+1,16346
  6598  00040C  50DF               	movf	16351,w,c
  6599  00040E  6FAC               	movwf	sprintf@c& (0+255),b
  6600                           
  6601                           ; BSR set to: 1
  6602  000410  0E02               	movlw	2
  6603  000412  2799               	addwf	sprintf@ap& (0+255),f,b
  6604  000414  0E00               	movlw	0
  6605  000416  239A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6606  000418                     
  6607                           ; BSR set to: 1
  6608                           ;doprnt.c: 805: cp = (char *)&c;
  6609                           
  6610                           ; BSR set to: 1
  6611  000418  0EAC               	movlw	low sprintf@c
  6612  00041A  6F95               	movwf	sprintf@cp& (0+255),b
  6613  00041C  0E01               	movlw	high sprintf@c
  6614  00041E  6F96               	movwf	(sprintf@cp+1)& (0+255),b
  6615                           
  6616                           ; BSR set to: 1
  6617                           ;doprnt.c: 806: len = 1;
  6618  000420  0E00               	movlw	0
  6619  000422  6F98               	movwf	(sprintf@len+1)& (0+255),b
  6620  000424  0E01               	movlw	1
  6621  000426  6F97               	movwf	sprintf@len& (0+255),b
  6622                           
  6623                           ;doprnt.c: 807: goto dostring;
  6624  000428  D774               	goto	u17020
  6625  00042A                     l986:
  6626                           
  6627                           ; BSR set to: 1
  6628  00042A  0060  F593  FFF6   	movff	sprintf@f,16374
  6629  000430  0060  F597  FFF7   	movff	sprintf@f+1,16375
  6630  000436  0101               	movlb	1	; () banked
  6631  000438  4B64               	infsnz	sprintf@f& (0+255),f,b
  6632  00043A  2B65               	incf	(sprintf@f+1)& (0+255),f,b
  6633  00043C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6634  00043C  6AF8               	clrf	16376,c
  6635  00043E                     	endif
  6636  00043E                     	if	0	;tblptru may be non-zero
  6637  00043E                     	endif
  6638  00043E  0008               	tblrd		*
  6639  000440  006F FFD4  F1AC    	movff	16373,sprintf@c
  6640  000446  51AC               	movf	sprintf@c& (0+255),w,b
  6641                           
  6642                           ; Switch size 1, requested type "space"
  6643                           ; Number of cases is 12, Range of values is 0 to 120
  6644                           ; switch strategies available:
  6645                           ; Name         Instructions Cycles
  6646                           ; simple_byte           37    19 (average)
  6647                           ;	Chosen strategy is simple_byte
  6648  000448  0A00               	xorlw	0	; case 0
  6649  00044A  B4D8               	btfsc	16344,2,c
  6650  00044C  EFAC  F00E         	goto	u18410
  6651  000450  0A45               	xorlw	69	; case 69
  6652  000452  B4D8               	btfsc	16344,2,c
  6653  000454  D718               	goto	l992
  6654  000456  0A02               	xorlw	2	; case 71
  6655  000458  B4D8               	btfsc	16344,2,c
  6656  00045A  D718               	goto	l994
  6657  00045C  0A24               	xorlw	36	; case 99
  6658  00045E  B4D8               	btfsc	16344,2,c
  6659  000460  D7CF               	goto	l1019
  6660  000462  0A07               	xorlw	7	; case 100
  6661  000464  B4D8               	btfsc	16344,2,c
  6662  000466  D016               	goto	l991
  6663  000468  0A01               	xorlw	1	; case 101
  6664  00046A  B4D8               	btfsc	16344,2,c
  6665  00046C  D70D               	goto	l993
  6666  00046E  0A03               	xorlw	3	; case 102
  6667  000470  B4D8               	btfsc	16344,2,c
  6668  000472  D707               	goto	l990
  6669  000474  0A01               	xorlw	1	; case 103
  6670  000476  B4D8               	btfsc	16344,2,c
  6671  000478  D70A               	goto	l995
  6672  00047A  0A0E               	xorlw	14	; case 105
  6673  00047C  B4D8               	btfsc	16344,2,c
  6674  00047E  D00A               	goto	l991
  6675  000480  0A05               	xorlw	5	; case 108
  6676  000482  B4D8               	btfsc	16344,2,c
  6677  000484  D6FC               	goto	l989
  6678  000486  0A1F               	xorlw	31	; case 115
  6679  000488  B4D8               	btfsc	16344,2,c
  6680  00048A  D705               	goto	l999
  6681  00048C  0A0B               	xorlw	11	; case 120
  6682  00048E  B4D8               	btfsc	16344,2,c
  6683  000490  D700               	goto	l998
  6684  000492  D7C2               	goto	l1020
  6685  000494                     l991:
  6686                           
  6687                           ; BSR set to: 1
  6688                           ;doprnt.c: 825: if(flag & (0x700)) {
  6689                           
  6690                           ; BSR set to: 1
  6691  000494  0E07               	movlw	7
  6692  000496  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
  6693  000498  B4D8               	btfsc	16344,2,c
  6694  00049A  EFD4  F00B         	goto	l1021
  6695                           
  6696                           ; BSR set to: 1
  6697                           ;doprnt.c: 827: if(flag & 0x1000)
  6698  00049E  A9AE               	btfss	(sprintf@flag+1)& (0+255),4,b
  6699  0004A0  D004               	goto	l1022
  6700                           
  6701                           ; BSR set to: 1
  6702                           ;doprnt.c: 829: prec = 6;
  6703  0004A2  0E00               	movlw	0
  6704  0004A4  6FAB               	movwf	(sprintf@prec+1)& (0+255),b
  6705  0004A6  0E06               	movlw	6
  6706  0004A8  6FAA               	movwf	sprintf@prec& (0+255),b
  6707  0004AA                     l1022:
  6708                           
  6709                           ; BSR set to: 1
  6710                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6711                           
  6712                           ; BSR set to: 1
  6713  0004AA  0060  F667  FFD9   	movff	sprintf@ap,16345
  6714  0004B0  0060  F66B  FFDA   	movff	sprintf@ap+1,16346
  6715  0004B6  006F FF78  F1A7    	movff	16350,sprintf@fval
  6716  0004BC  006F FF78  F1A8    	movff	16350,sprintf@fval+1
  6717  0004C2  006F FF74  F1A9    	movff	16349,sprintf@fval+2
  6718                           
  6719                           ; BSR set to: 1
  6720  0004C8  0E03               	movlw	3
  6721  0004CA  2799               	addwf	sprintf@ap& (0+255),f,b
  6722  0004CC  0E00               	movlw	0
  6723  0004CE  239A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6724                           
  6725                           ; BSR set to: 1
  6726                           ;doprnt.c: 831: if(fval < 0.0) {
  6727  0004D0  AFA9               	btfss	(sprintf@fval+2)& (0+255),7,b
  6728  0004D2  D017               	goto	l1023
  6729                           
  6730                           ; BSR set to: 1
  6731                           ;doprnt.c: 832: fval = -fval;
  6732  0004D4  0060  F69C  F131   	movff	sprintf@fval,___ftneg@f1
  6733  0004DA  0060  F6A0  F132   	movff	sprintf@fval+1,___ftneg@f1+1
  6734  0004E0  0060  F6A4  F133   	movff	sprintf@fval+2,___ftneg@f1+2
  6735  0004E6  ECD7  F044         	call	___ftneg	;wreg free
  6736  0004EA  0060  F4C4  F1A7   	movff	?___ftneg,sprintf@fval
  6737  0004F0  0060  F4C8  F1A8   	movff	?___ftneg+1,sprintf@fval+1
  6738  0004F6  0060  F4CC  F1A9   	movff	?___ftneg+2,sprintf@fval+2
  6739                           
  6740                           ;doprnt.c: 833: flag |= 0x03;
  6741  0004FC  0E03               	movlw	3
  6742  0004FE  0101               	movlb	1	; () banked
  6743  000500  13AD               	iorwf	sprintf@flag& (0+255),f,b
  6744  000502                     l1023:
  6745                           
  6746                           ; BSR set to: 1
  6747                           ;doprnt.c: 834: }
  6748                           ;doprnt.c: 835: exp = 0;
  6749                           
  6750                           ; BSR set to: 1
  6751  000502  0E00               	movlw	0
  6752  000504  6FA0               	movwf	(sprintf@exp+1)& (0+255),b
  6753  000506  0E00               	movlw	0
  6754  000508  6F9F               	movwf	sprintf@exp& (0+255),b
  6755                           
  6756                           ; BSR set to: 1
  6757                           ;doprnt.c: 836: if( fval!=0) {
  6758  00050A  51A7               	movf	sprintf@fval& (0+255),w,b
  6759  00050C  11A8               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6760  00050E  11A9               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6761  000510  B4D8               	btfsc	16344,2,c
  6762  000512  D0A6               	goto	l1028
  6763                           
  6764                           ; BSR set to: 1
  6765                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  6766  000514  0E82               	movlw	130
  6767  000516  6F7C               	movwf	??_sprintf& (0+255),b
  6768  000518  0EFF               	movlw	255
  6769  00051A  6F7D               	movwf	(??_sprintf+1)& (0+255),b
  6770  00051C  0060  F69C  F17E   	movff	sprintf@fval,??_sprintf+2
  6771  000522  0060  F6A0  F17F   	movff	sprintf@fval+1,??_sprintf+3
  6772  000528  0060  F6A4  F180   	movff	sprintf@fval+2,??_sprintf+4
  6773  00052E  0060  F6A8  F181   	movff	sprintf@fval+3,??_sprintf+5
  6774  000534  0E10               	movlw	16
  6775  000536  D005               	goto	u17160
  6776  000538                     u17165:
  6777  000538  90D8               	bcf	16344,0,c
  6778  00053A  3381               	rrcf	(??_sprintf+5)& (0+255),f,b
  6779  00053C  3380               	rrcf	(??_sprintf+4)& (0+255),f,b
  6780  00053E  337F               	rrcf	(??_sprintf+3)& (0+255),f,b
  6781  000540  337E               	rrcf	(??_sprintf+2)& (0+255),f,b
  6782  000542                     u17160:
  6783  000542  2EE8               	decfsz	16360,f,c
  6784  000544  D7F9               	goto	u17165
  6785  000546  517E               	movf	(??_sprintf+2)& (0+255),w,b
  6786  000548  257C               	addwf	??_sprintf& (0+255),w,b
  6787  00054A  6F9F               	movwf	sprintf@exp& (0+255),b
  6788  00054C  0E00               	movlw	0
  6789  00054E  217D               	addwfc	(??_sprintf+1)& (0+255),w,b
  6790  000550  6FA0               	movwf	(sprintf@exp+1)& (0+255),b
  6791                           
  6792                           ; BSR set to: 1
  6793                           ;doprnt.c: 838: exp--;
  6794  000552  079F               	decf	sprintf@exp& (0+255),f,b
  6795  000554  A0D8               	btfss	16344,0,c
  6796  000556  07A0               	decf	(sprintf@exp+1)& (0+255),f,b
  6797                           
  6798                           ; BSR set to: 1
  6799                           ;doprnt.c: 839: exp *= 3;
  6800  000558  0060  F67C  F113   	movff	sprintf@exp,___wmul@multiplier
  6801  00055E  0060  F680  F114   	movff	sprintf@exp+1,___wmul@multiplier+1
  6802  000564  0E00               	movlw	0
  6803  000566  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6804  000568  0E03               	movlw	3
  6805  00056A  6F15               	movwf	___wmul@multiplicand& (0+255),b
  6806  00056C  ECA8  F044         	call	___wmul	;wreg free
  6807  000570  0060  F44C  F19F   	movff	?___wmul,sprintf@exp
  6808  000576  0060  F450  F1A0   	movff	?___wmul+1,sprintf@exp+1
  6809                           
  6810                           ;doprnt.c: 840: exp /= 10;
  6811  00057C  0060  F67C  F10B   	movff	sprintf@exp,___awdiv@dividend
  6812  000582  0060  F680  F10C   	movff	sprintf@exp+1,___awdiv@dividend+1
  6813  000588  0E00               	movlw	0
  6814  00058A  0101               	movlb	1	; () banked
  6815  00058C  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
  6816  00058E  0E0A               	movlw	10
  6817  000590  6F0D               	movwf	___awdiv@divisor& (0+255),b
  6818  000592  EC7A  F03C         	call	___awdiv	;wreg free
  6819  000596  0060  F42C  F19F   	movff	?___awdiv,sprintf@exp
  6820  00059C  0060  F430  F1A0   	movff	?___awdiv+1,sprintf@exp+1
  6821                           
  6822                           ;doprnt.c: 841: if(exp < 0)
  6823  0005A2  0101               	movlb	1	; () banked
  6824  0005A4  AFA0               	btfss	(sprintf@exp+1)& (0+255),7,b
  6825  0005A6  D003               	goto	l1025
  6826                           
  6827                           ; BSR set to: 1
  6828                           ;doprnt.c: 842: exp--;
  6829  0005A8  079F               	decf	sprintf@exp& (0+255),f,b
  6830  0005AA  A0D8               	btfss	16344,0,c
  6831  0005AC  07A0               	decf	(sprintf@exp+1)& (0+255),f,b
  6832  0005AE                     l1025:
  6833                           
  6834                           ; BSR set to: 1
  6835                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6836                           
  6837                           ; BSR set to: 1
  6838  0005AE  519F               	movf	sprintf@exp& (0+255),w,b
  6839  0005B0  0800               	sublw	0
  6840  0005B2  EC0B  F01D         	call	_scale
  6841  0005B6  0060  F50C  F19B   	movff	?_scale,sprintf@tmpval
  6842  0005BC  0060  F510  F19C   	movff	?_scale+1,sprintf@tmpval+1
  6843  0005C2  0060  F514  F19D   	movff	?_scale+2,sprintf@tmpval+2
  6844                           
  6845                           ;doprnt.c: 847: tmpval.integ *= fval;
  6846  0005C8  0060  F66C  F134   	movff	sprintf@tmpval,___ftmul@f1
  6847  0005CE  0060  F670  F135   	movff	sprintf@tmpval+1,___ftmul@f1+1
  6848  0005D4  0060  F674  F136   	movff	sprintf@tmpval+2,___ftmul@f1+2
  6849  0005DA  0060  F69C  F137   	movff	sprintf@fval,___ftmul@f2
  6850  0005E0  0060  F6A0  F138   	movff	sprintf@fval+1,___ftmul@f2+1
  6851  0005E6  0060  F6A4  F139   	movff	sprintf@fval+2,___ftmul@f2+2
  6852  0005EC  EC5A  F032         	call	___ftmul	;wreg free
  6853  0005F0  0060  F4D0  F19B   	movff	?___ftmul,sprintf@tmpval
  6854  0005F6  0060  F4D4  F19C   	movff	?___ftmul+1,sprintf@tmpval+1
  6855  0005FC  0060  F4D8  F19D   	movff	?___ftmul+2,sprintf@tmpval+2
  6856                           
  6857                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6858  000602  0060  F66C  F159   	movff	sprintf@tmpval,___ftge@ff1
  6859  000608  0060  F670  F15A   	movff	sprintf@tmpval+1,___ftge@ff1+1
  6860  00060E  0060  F674  F15B   	movff	sprintf@tmpval+2,___ftge@ff1+2
  6861  000614  0E00               	movlw	0
  6862  000616  0101               	movlb	1	; () banked
  6863  000618  6F5C               	movwf	___ftge@ff2& (0+255),b
  6864  00061A  0E80               	movlw	128
  6865  00061C  6F5D               	movwf	(___ftge@ff2+1)& (0+255),b
  6866  00061E  0E3F               	movlw	63
  6867  000620  6F5E               	movwf	(___ftge@ff2+2)& (0+255),b
  6868  000622  EC96  F03B         	call	___ftge	;wreg free
  6869  000626  0101               	movlb	1	; () banked
  6870  000628  B0D8               	btfsc	16344,0,c
  6871  00062A  D004               	goto	l1026
  6872                           
  6873                           ; BSR set to: 1
  6874                           ;doprnt.c: 849: exp--;
  6875  00062C  079F               	decf	sprintf@exp& (0+255),f,b
  6876  00062E  A0D8               	btfss	16344,0,c
  6877  000630  07A0               	decf	(sprintf@exp+1)& (0+255),f,b
  6878  000632  D016               	goto	l1028
  6879  000634                     l1026:
  6880                           
  6881                           ; BSR set to: 1
  6882                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6883                           
  6884                           ; BSR set to: 1
  6885  000634  0060  F66C  F159   	movff	sprintf@tmpval,___ftge@ff1
  6886  00063A  0060  F670  F15A   	movff	sprintf@tmpval+1,___ftge@ff1+1
  6887  000640  0060  F674  F15B   	movff	sprintf@tmpval+2,___ftge@ff1+2
  6888  000646  0E00               	movlw	0
  6889  000648  6F5C               	movwf	___ftge@ff2& (0+255),b
  6890  00064A  0E20               	movlw	32
  6891  00064C  6F5D               	movwf	(___ftge@ff2+1)& (0+255),b
  6892  00064E  0E41               	movlw	65
  6893  000650  6F5E               	movwf	(___ftge@ff2+2)& (0+255),b
  6894  000652  EC96  F03B         	call	___ftge	;wreg free
  6895  000656  0101               	movlb	1	; () banked
  6896  000658  A0D8               	btfss	16344,0,c
  6897  00065A  D002               	goto	l1028
  6898                           
  6899                           ; BSR set to: 1
  6900                           ;doprnt.c: 851: exp++;
  6901  00065C  4B9F               	infsnz	sprintf@exp& (0+255),f,b
  6902  00065E  2BA0               	incf	(sprintf@exp+1)& (0+255),f,b
  6903  000660                     l1028:
  6904                           
  6905                           ; BSR set to: 1
  6906                           ;doprnt.c: 852: }
  6907                           ;doprnt.c: 854: if(exp <= 0)
  6908                           
  6909                           ; BSR set to: 1
  6910                           
  6911                           ; BSR set to: 1
  6912                           
  6913                           ; BSR set to: 1
  6914  000660  BFA0               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6915  000662  D005               	goto	u17200
  6916  000664  51A0               	movf	(sprintf@exp+1)& (0+255),w,b
  6917  000666  E106               	bnz	l1029
  6918  000668  059F               	decf	sprintf@exp& (0+255),w,b
  6919  00066A  B0D8               	btfsc	16344,0,c
  6920  00066C  D003               	goto	l1029
  6921  00066E                     u17200:
  6922                           
  6923                           ; BSR set to: 1
  6924                           ;doprnt.c: 855: c = 1;
  6925  00066E  0E01               	movlw	1
  6926  000670  6FAC               	movwf	sprintf@c& (0+255),b
  6927  000672  D003               	goto	l1030
  6928  000674                     l1029:
  6929                           
  6930                           ; BSR set to: 1
  6931                           ;doprnt.c: 856: else
  6932                           ;doprnt.c: 857: c = exp;
  6933  000674  0060  F67C  F1AC   	movff	sprintf@exp,sprintf@c
  6934  00067A                     l1030:
  6935                           
  6936                           ; BSR set to: 1
  6937                           ;doprnt.c: 858: if(
  6938                           ;doprnt.c: 860: flag & 0x100
  6939                           ;doprnt.c: 862: ||
  6940                           ;doprnt.c: 866: flag & 0x200 && (exp < -4 || exp >= (int)prec)
  6941                           ;doprnt.c: 868: ) {
  6942  00067A  B1AE               	btfsc	(sprintf@flag+1)& (0+255),0,b
  6943  00067C  D016               	goto	u17240
  6944                           
  6945                           ; BSR set to: 1
  6946  00067E  A3AE               	btfss	(sprintf@flag+1)& (0+255),1,b
  6947  000680  EF65  F007         	goto	l1031
  6948                           
  6949                           ; BSR set to: 1
  6950  000684  AFA0               	btfss	(sprintf@exp+1)& (0+255),7,b
  6951  000686  D006               	goto	u17230
  6952  000688  0EFC               	movlw	252
  6953  00068A  5D9F               	subwf	sprintf@exp& (0+255),w,b
  6954  00068C  0EFF               	movlw	255
  6955  00068E  59A0               	subwfb	(sprintf@exp+1)& (0+255),w,b
  6956  000690  A0D8               	btfss	16344,0,c
  6957  000692  D00B               	goto	u17240
  6958  000694                     u17230:
  6959                           
  6960                           ; BSR set to: 1
  6961  000694  51AA               	movf	sprintf@prec& (0+255),w,b
  6962  000696  5D9F               	subwf	sprintf@exp& (0+255),w,b
  6963  000698  51A0               	movf	(sprintf@exp+1)& (0+255),w,b
  6964  00069A  0A80               	xorlw	128
  6965  00069C  6F7C               	movwf	??_sprintf& (0+255),b
  6966  00069E  51AB               	movf	(sprintf@prec+1)& (0+255),w,b
  6967  0006A0  0A80               	xorlw	128
  6968  0006A2  597C               	subwfb	??_sprintf& (0+255),w,b
  6969  0006A4  A0D8               	btfss	16344,0,c
  6970  0006A6  EF65  F007         	goto	l1031
  6971  0006AA                     u17240:
  6972                           
  6973                           ; BSR set to: 1
  6974                           ;doprnt.c: 870: if(prec && flag & 0x200)
  6975                           
  6976                           ; BSR set to: 1
  6977                           
  6978                           ; BSR set to: 1
  6979  0006AA  51AA               	movf	sprintf@prec& (0+255),w,b
  6980  0006AC  11AB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6981  0006AE  A4D8               	btfss	16344,2,c
  6982                           
  6983                           ; BSR set to: 1
  6984  0006B0  A3AE               	btfss	(sprintf@flag+1)& (0+255),1,b
  6985  0006B2  D003               	goto	l1036
  6986                           
  6987                           ; BSR set to: 1
  6988                           ;doprnt.c: 871: prec--;
  6989  0006B4  07AA               	decf	sprintf@prec& (0+255),f,b
  6990  0006B6  A0D8               	btfss	16344,0,c
  6991  0006B8  07AB               	decf	(sprintf@prec+1)& (0+255),f,b
  6992  0006BA                     l1036:
  6993                           
  6994                           ; BSR set to: 1
  6995                           ;doprnt.c: 873: if((unsigned)prec > (sizeof dpowers/sizeof dpowers[0]) - 2)
  6996                           
  6997                           ; BSR set to: 1
  6998  0006BA  51AB               	movf	(sprintf@prec+1)& (0+255),w,b
  6999  0006BC  E104               	bnz	u17270
  7000  0006BE  0E09               	movlw	9
  7001  0006C0  5DAA               	subwf	sprintf@prec& (0+255),w,b
  7002  0006C2  A0D8               	btfss	16344,0,c
  7003  0006C4  D003               	goto	l1037
  7004  0006C6                     u17270:
  7005                           
  7006                           ; BSR set to: 1
  7007                           ;doprnt.c: 874: c = (sizeof dpowers/sizeof dpowers[0]) - 2;
  7008  0006C6  0E08               	movlw	8
  7009  0006C8  6FAC               	movwf	sprintf@c& (0+255),b
  7010  0006CA  D003               	goto	l1038
  7011  0006CC                     l1037:
  7012                           
  7013                           ; BSR set to: 1
  7014                           ;doprnt.c: 875: else
  7015                           ;doprnt.c: 876: c = prec;
  7016  0006CC  0060  F6A8  F1AC   	movff	sprintf@prec,sprintf@c
  7017  0006D2                     l1038:
  7018                           
  7019                           ; BSR set to: 1
  7020                           ;doprnt.c: 877: if( fval!=0) {
  7021                           
  7022                           ; BSR set to: 1
  7023  0006D2  51A7               	movf	sprintf@fval& (0+255),w,b
  7024  0006D4  11A8               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7025  0006D6  11A9               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7026  0006D8  B4D8               	btfsc	16344,2,c
  7027  0006DA  D11E               	goto	l1043
  7028                           
  7029                           ; BSR set to: 1
  7030                           ;doprnt.c: 878: fval /= scale(exp-c);
  7031  0006DC  0060  F69C  F14A   	movff	sprintf@fval,___ftdiv@f1
  7032  0006E2  0060  F6A0  F14B   	movff	sprintf@fval+1,___ftdiv@f1+1
  7033  0006E8  0060  F6A4  F14C   	movff	sprintf@fval+2,___ftdiv@f1+2
  7034  0006EE  51AC               	movf	sprintf@c& (0+255),w,b
  7035  0006F0  0800               	sublw	0
  7036  0006F2  259F               	addwf	sprintf@exp& (0+255),w,b
  7037  0006F4  EC0B  F01D         	call	_scale
  7038  0006F8  0060  F50C  F14D   	movff	?_scale,___ftdiv@f2
  7039  0006FE  0060  F510  F14E   	movff	?_scale+1,___ftdiv@f2+1
  7040  000704  0060  F514  F14F   	movff	?_scale+2,___ftdiv@f2+2
  7041  00070A  ECED  F034         	call	___ftdiv	;wreg free
  7042  00070E  0060  F528  F1A7   	movff	?___ftdiv,sprintf@fval
  7043  000714  0060  F52C  F1A8   	movff	?___ftdiv+1,sprintf@fval+1
  7044  00071A  0060  F530  F1A9   	movff	?___ftdiv+2,sprintf@fval+2
  7045                           
  7046                           ;doprnt.c: 893: if(fval - (double)(unsigned long)fval >= 0.5)
  7047  000720  0060  F69C  F150   	movff	sprintf@fval,___ftadd@f2
  7048  000726  0060  F6A0  F151   	movff	sprintf@fval+1,___ftadd@f2+1
  7049  00072C  0060  F6A4  F152   	movff	sprintf@fval+2,___ftadd@f2+2
  7050  000732  0060  F69C  F119   	movff	sprintf@fval,___fttol@f1
  7051  000738  0060  F6A0  F11A   	movff	sprintf@fval+1,___fttol@f1+1
  7052  00073E  0060  F6A4  F11B   	movff	sprintf@fval+2,___fttol@f1+2
  7053  000744  EC65  F033         	call	___fttol	;wreg free
  7054  000748  0060  F464  F128   	movff	?___fttol,___lltoft@c
  7055  00074E  0060  F468  F129   	movff	?___fttol+1,___lltoft@c+1
  7056  000754  0060  F46C  F12A   	movff	?___fttol+2,___lltoft@c+2
  7057  00075A  0060  F470  F12B   	movff	?___fttol+3,___lltoft@c+3
  7058  000760  ECA7  F03F         	call	___lltoft	;wreg free
  7059  000764  0060  F4A0  F131   	movff	?___lltoft,___ftneg@f1
  7060  00076A  0060  F4A4  F132   	movff	?___lltoft+1,___ftneg@f1+1
  7061  000770  0060  F4A8  F133   	movff	?___lltoft+2,___ftneg@f1+2
  7062  000776  ECD7  F044         	call	___ftneg	;wreg free
  7063  00077A  0060  F4C4  F14D   	movff	?___ftneg,___ftadd@f1
  7064  000780  0060  F4C8  F14E   	movff	?___ftneg+1,___ftadd@f1+1
  7065  000786  0060  F4CC  F14F   	movff	?___ftneg+2,___ftadd@f1+2
  7066  00078C  ECC5  F02A         	call	___ftadd	;wreg free
  7067  000790  0060  F534  F159   	movff	?___ftadd,___ftge@ff1
  7068  000796  0060  F538  F15A   	movff	?___ftadd+1,___ftge@ff1+1
  7069  00079C  0060  F53C  F15B   	movff	?___ftadd+2,___ftge@ff1+2
  7070  0007A2  0E00               	movlw	0
  7071  0007A4  0101               	movlb	1	; () banked
  7072  0007A6  6F5C               	movwf	___ftge@ff2& (0+255),b
  7073  0007A8  0E00               	movlw	0
  7074  0007AA  6F5D               	movwf	(___ftge@ff2+1)& (0+255),b
  7075  0007AC  0E3F               	movlw	63
  7076  0007AE  6F5E               	movwf	(___ftge@ff2+2)& (0+255),b
  7077  0007B0  EC96  F03B         	call	___ftge	;wreg free
  7078  0007B4  0101               	movlb	1	; () banked
  7079  0007B6  A0D8               	btfss	16344,0,c
  7080  0007B8  D01A               	goto	l1040
  7081                           
  7082                           ; BSR set to: 1
  7083                           ;doprnt.c: 894: fval += 0.5;
  7084  0007BA  0060  F69C  F14D   	movff	sprintf@fval,___ftadd@f1
  7085  0007C0  0060  F6A0  F14E   	movff	sprintf@fval+1,___ftadd@f1+1
  7086  0007C6  0060  F6A4  F14F   	movff	sprintf@fval+2,___ftadd@f1+2
  7087  0007CC  0E00               	movlw	0
  7088  0007CE  6F50               	movwf	___ftadd@f2& (0+255),b
  7089  0007D0  0E00               	movlw	0
  7090  0007D2  6F51               	movwf	(___ftadd@f2+1)& (0+255),b
  7091  0007D4  0E3F               	movlw	63
  7092  0007D6  6F52               	movwf	(___ftadd@f2+2)& (0+255),b
  7093  0007D8  ECC5  F02A         	call	___ftadd	;wreg free
  7094  0007DC  0060  F534  F1A7   	movff	?___ftadd,sprintf@fval
  7095  0007E2  0060  F538  F1A8   	movff	?___ftadd+1,sprintf@fval+1
  7096  0007E8  0060  F53C  F1A9   	movff	?___ftadd+2,sprintf@fval+2
  7097  0007EE                     l1040:
  7098                           
  7099                           ;doprnt.c: 895: if((unsigned long)fval >= dpowers[c+1]) {
  7100  0007EE  0060  F6B0  F17C   	movff	sprintf@c,??_sprintf
  7101  0007F4  0101               	movlb	1	; () banked
  7102  0007F6  6B7D               	clrf	(??_sprintf+1)& (0+255),b
  7103  0007F8  BF7C               	btfsc	??_sprintf& (0+255),7,b
  7104  0007FA  077D               	decf	(??_sprintf+1)& (0+255),f,b
  7105  0007FC  90D8               	bcf	16344,0,c
  7106  0007FE  377C               	rlcf	??_sprintf& (0+255),f,b
  7107  000800  377D               	rlcf	(??_sprintf+1)& (0+255),f,b
  7108  000802  90D8               	bcf	16344,0,c
  7109  000804  377C               	rlcf	??_sprintf& (0+255),f,b
  7110  000806  377D               	rlcf	(??_sprintf+1)& (0+255),f,b
  7111  000808  0E04               	movlw	4
  7112  00080A  277C               	addwf	??_sprintf& (0+255),f,b
  7113  00080C  0E00               	movlw	0
  7114  00080E  237D               	addwfc	(??_sprintf+1)& (0+255),f,b
  7115  000810  0ED9               	movlw	low _dpowers
  7116  000812  257C               	addwf	??_sprintf& (0+255),w,b
  7117  000814  6EF6               	movwf	16374,c
  7118  000816  0EFA               	movlw	high _dpowers
  7119  000818  217D               	addwfc	(??_sprintf+1)& (0+255),w,b
  7120  00081A  6EF7               	movwf	16375,c
  7121  00081C                     	if	1	;There are 3 active tblptr bytes
  7122  00081C  6AF8               	clrf	16376,c
  7123  00081E  0E00               	movlw	low (__mediumconst shr (0+16))
  7124  000820  22F8               	addwfc	16376,f,c
  7125  000822                     	endif
  7126  000822  0060  F69C  F119   	movff	sprintf@fval,___fttol@f1
  7127  000828  0060  F6A0  F11A   	movff	sprintf@fval+1,___fttol@f1+1
  7128  00082E  0060  F6A4  F11B   	movff	sprintf@fval+2,___fttol@f1+2
  7129  000834  EC65  F033         	call	___fttol	;wreg free
  7130  000838  0009               	tblrd		*+
  7131  00083A  50F5               	movf	16373,w,c
  7132  00083C  0101               	movlb	1	; () banked
  7133  00083E  5D19               	subwf	?___fttol& (0+255),w,b
  7134  000840  0009               	tblrd		*+
  7135  000842  50F5               	movf	16373,w,c
  7136  000844  591A               	subwfb	(?___fttol+1)& (0+255),w,b
  7137  000846  0009               	tblrd		*+
  7138  000848  50F5               	movf	16373,w,c
  7139  00084A  591B               	subwfb	(?___fttol+2)& (0+255),w,b
  7140  00084C  0009               	tblrd		*+
  7141  00084E  50F5               	movf	16373,w,c
  7142  000850  591C               	subwfb	(?___fttol+3)& (0+255),w,b
  7143  000852  A0D8               	btfss	16344,0,c
  7144  000854  D01E               	goto	l1041
  7145                           
  7146                           ; BSR set to: 1
  7147                           ;doprnt.c: 896: fval *= 1e-1;
  7148  000856  0060  F69C  F134   	movff	sprintf@fval,___ftmul@f1
  7149  00085C  0060  F6A0  F135   	movff	sprintf@fval+1,___ftmul@f1+1
  7150  000862  0060  F6A4  F136   	movff	sprintf@fval+2,___ftmul@f1+2
  7151  000868  0ECD               	movlw	205
  7152  00086A  6F37               	movwf	___ftmul@f2& (0+255),b
  7153  00086C  0ECC               	movlw	204
  7154  00086E  6F38               	movwf	(___ftmul@f2+1)& (0+255),b
  7155  000870  0E3D               	movlw	61
  7156  000872  6F39               	movwf	(___ftmul@f2+2)& (0+255),b
  7157  000874  EC5A  F032         	call	___ftmul	;wreg free
  7158  000878  0060  F4D0  F1A7   	movff	?___ftmul,sprintf@fval
  7159  00087E  0060  F4D4  F1A8   	movff	?___ftmul+1,sprintf@fval+1
  7160  000884  0060  F4D8  F1A9   	movff	?___ftmul+2,sprintf@fval+2
  7161                           
  7162                           ;doprnt.c: 897: exp++;
  7163  00088A  0101               	movlb	1	; () banked
  7164  00088C  4B9F               	infsnz	sprintf@exp& (0+255),f,b
  7165  00088E  2BA0               	incf	(sprintf@exp+1)& (0+255),f,b
  7166                           
  7167                           ;doprnt.c: 898: } else if((unsigned long)fval < dpowers[c]) {
  7168  000890  D043               	goto	l1043
  7169  000892                     l1041:
  7170                           
  7171                           ; BSR set to: 1
  7172                           
  7173                           ; BSR set to: 1
  7174  000892  51AC               	movf	sprintf@c& (0+255),w,b
  7175  000894  0D04               	mullw	4
  7176  000896  0ED9               	movlw	low _dpowers
  7177  000898  24F3               	addwf	16371,w,c
  7178  00089A  6EF6               	movwf	16374,c
  7179  00089C  0EFA               	movlw	high _dpowers
  7180  00089E  20F4               	addwfc	16372,w,c
  7181  0008A0  6EF7               	movwf	16375,c
  7182  0008A2                     	if	1	;There are 3 active tblptr bytes
  7183  0008A2  6AF8               	clrf	16376,c
  7184  0008A4  0E00               	movlw	low (__mediumconst shr (0+16))
  7185  0008A6  22F8               	addwfc	16376,f,c
  7186  0008A8                     	endif
  7187  0008A8  0060  F69C  F119   	movff	sprintf@fval,___fttol@f1
  7188  0008AE  0060  F6A0  F11A   	movff	sprintf@fval+1,___fttol@f1+1
  7189  0008B4  0060  F6A4  F11B   	movff	sprintf@fval+2,___fttol@f1+2
  7190  0008BA  EC65  F033         	call	___fttol	;wreg free
  7191  0008BE  0009               	tblrd		*+
  7192  0008C0  50F5               	movf	16373,w,c
  7193  0008C2  0101               	movlb	1	; () banked
  7194  0008C4  5D19               	subwf	?___fttol& (0+255),w,b
  7195  0008C6  0009               	tblrd		*+
  7196  0008C8  50F5               	movf	16373,w,c
  7197  0008CA  591A               	subwfb	(?___fttol+1)& (0+255),w,b
  7198  0008CC  0009               	tblrd		*+
  7199  0008CE  50F5               	movf	16373,w,c
  7200  0008D0  591B               	subwfb	(?___fttol+2)& (0+255),w,b
  7201  0008D2  0009               	tblrd		*+
  7202  0008D4  50F5               	movf	16373,w,c
  7203  0008D6  591C               	subwfb	(?___fttol+3)& (0+255),w,b
  7204  0008D8  B0D8               	btfsc	16344,0,c
  7205  0008DA  D01E               	goto	l1043
  7206                           
  7207                           ; BSR set to: 1
  7208                           ;doprnt.c: 899: fval *= 10.0;
  7209  0008DC  0060  F69C  F134   	movff	sprintf@fval,___ftmul@f1
  7210  0008E2  0060  F6A0  F135   	movff	sprintf@fval+1,___ftmul@f1+1
  7211  0008E8  0060  F6A4  F136   	movff	sprintf@fval+2,___ftmul@f1+2
  7212  0008EE  0E00               	movlw	0
  7213  0008F0  6F37               	movwf	___ftmul@f2& (0+255),b
  7214  0008F2  0E20               	movlw	32
  7215  0008F4  6F38               	movwf	(___ftmul@f2+1)& (0+255),b
  7216  0008F6  0E41               	movlw	65
  7217  0008F8  6F39               	movwf	(___ftmul@f2+2)& (0+255),b
  7218  0008FA  EC5A  F032         	call	___ftmul	;wreg free
  7219  0008FE  0060  F4D0  F1A7   	movff	?___ftmul,sprintf@fval
  7220  000904  0060  F4D4  F1A8   	movff	?___ftmul+1,sprintf@fval+1
  7221  00090A  0060  F4D8  F1A9   	movff	?___ftmul+2,sprintf@fval+2
  7222                           
  7223                           ;doprnt.c: 900: exp--;
  7224  000910  0101               	movlb	1	; () banked
  7225  000912  079F               	decf	sprintf@exp& (0+255),f,b
  7226  000914  A0D8               	btfss	16344,0,c
  7227  000916  07A0               	decf	(sprintf@exp+1)& (0+255),f,b
  7228  000918                     l1043:
  7229                           
  7230                           ; BSR set to: 1
  7231                           ;doprnt.c: 901: }
  7232                           ;doprnt.c: 903: }
  7233                           ;doprnt.c: 905: if(flag & 0x200 && !(flag & 0x800)) {
  7234                           
  7235                           ; BSR set to: 1
  7236                           
  7237                           ; BSR set to: 1
  7238                           
  7239                           ; BSR set to: 1
  7240  000918  B3AE               	btfsc	(sprintf@flag+1)& (0+255),1,b
  7241                           
  7242                           ; BSR set to: 1
  7243  00091A  B7AE               	btfsc	(sprintf@flag+1)& (0+255),3,b
  7244  00091C  D09E               	goto	l1051
  7245                           
  7246                           ; BSR set to: 1
  7247                           ;doprnt.c: 906: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])))
  7248  00091E  BFAB               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7249  000920  D00A               	goto	l1045
  7250  000922  51AB               	movf	(sprintf@prec+1)& (0+255),w,b
  7251  000924  E104               	bnz	u17340
  7252  000926  0E0B               	movlw	11
  7253  000928  5DAA               	subwf	sprintf@prec& (0+255),w,b
  7254  00092A  A0D8               	btfss	16344,0,c
  7255  00092C  D004               	goto	l1045
  7256  00092E                     u17340:
  7257                           
  7258                           ; BSR set to: 1
  7259                           ;doprnt.c: 907: prec = (sizeof dpowers/sizeof dpowers[0]);
  7260  00092E  0E00               	movlw	0
  7261  000930  6FAB               	movwf	(sprintf@prec+1)& (0+255),b
  7262  000932  0E0A               	movlw	10
  7263  000934  6FAA               	movwf	sprintf@prec& (0+255),b
  7264  000936                     l1045:
  7265                           
  7266                           ; BSR set to: 1
  7267                           ;doprnt.c: 915: val = (unsigned long)fval;
  7268                           
  7269                           ; BSR set to: 1
  7270  000936  0060  F69C  F119   	movff	sprintf@fval,___fttol@f1
  7271  00093C  0060  F6A0  F11A   	movff	sprintf@fval+1,___fttol@f1+1
  7272  000942  0060  F6A4  F11B   	movff	sprintf@fval+2,___fttol@f1+2
  7273  000948  EC65  F033         	call	___fttol	;wreg free
  7274  00094C  0060  F464  F1A3   	movff	?___fttol,sprintf@val
  7275  000952  0060  F468  F1A4   	movff	?___fttol+1,sprintf@val+1
  7276  000958  0060  F46C  F1A5   	movff	?___fttol+2,sprintf@val+2
  7277  00095E  0060  F470  F1A6   	movff	?___fttol+3,sprintf@val+3
  7278                           
  7279                           ;doprnt.c: 916: while(val && val % 10 == 0) {
  7280  000964  D026               	goto	l1046
  7281  000966                     
  7282                           ;doprnt.c: 917: prec--;
  7283  000966  0101               	movlb	1	; () banked
  7284  000968  07AA               	decf	sprintf@prec& (0+255),f,b
  7285  00096A  A0D8               	btfss	16344,0,c
  7286  00096C  07AB               	decf	(sprintf@prec+1)& (0+255),f,b
  7287                           
  7288                           ; BSR set to: 1
  7289                           ;doprnt.c: 918: val /= 10;
  7290  00096E  0060  F68C  F105   	movff	sprintf@val,___lldiv@dividend
  7291  000974  0060  F690  F106   	movff	sprintf@val+1,___lldiv@dividend+1
  7292  00097A  0060  F694  F107   	movff	sprintf@val+2,___lldiv@dividend+2
  7293  000980  0060  F698  F108   	movff	sprintf@val+3,___lldiv@dividend+3
  7294  000986  0E0A               	movlw	10
  7295  000988  6F09               	movwf	___lldiv@divisor& (0+255),b
  7296  00098A  0E00               	movlw	0
  7297  00098C  6F0A               	movwf	(___lldiv@divisor+1)& (0+255),b
  7298  00098E  0E00               	movlw	0
  7299  000990  6F0B               	movwf	(___lldiv@divisor+2)& (0+255),b
  7300  000992  0E00               	movlw	0
  7301  000994  6F0C               	movwf	(___lldiv@divisor+3)& (0+255),b
  7302  000996  EC34  F03C         	call	___lldiv	;wreg free
  7303  00099A  0060  F414  F1A3   	movff	?___lldiv,sprintf@val
  7304  0009A0  0060  F418  F1A4   	movff	?___lldiv+1,sprintf@val+1
  7305  0009A6  0060  F41C  F1A5   	movff	?___lldiv+2,sprintf@val+2
  7306  0009AC  0060  F420  F1A6   	movff	?___lldiv+3,sprintf@val+3
  7307  0009B2                     l1046:
  7308  0009B2  0101               	movlb	1	; () banked
  7309  0009B4  51A3               	movf	sprintf@val& (0+255),w,b
  7310  0009B6  11A4               	iorwf	(sprintf@val+1)& (0+255),w,b
  7311  0009B8  11A5               	iorwf	(sprintf@val+2)& (0+255),w,b
  7312  0009BA  11A6               	iorwf	(sprintf@val+3)& (0+255),w,b
  7313  0009BC  B4D8               	btfsc	16344,2,c
  7314  0009BE  D01D               	goto	u17360
  7315                           
  7316                           ; BSR set to: 1
  7317  0009C0  0060  F68C  F112   	movff	sprintf@val,___llmod@dividend
  7318  0009C6  0060  F690  F113   	movff	sprintf@val+1,___llmod@dividend+1
  7319  0009CC  0060  F694  F114   	movff	sprintf@val+2,___llmod@dividend+2
  7320  0009D2  0060  F698  F115   	movff	sprintf@val+3,___llmod@dividend+3
  7321  0009D8  0E0A               	movlw	10
  7322  0009DA  6F16               	movwf	___llmod@divisor& (0+255),b
  7323  0009DC  0E00               	movlw	0
  7324  0009DE  6F17               	movwf	(___llmod@divisor+1)& (0+255),b
  7325  0009E0  0E00               	movlw	0
  7326  0009E2  6F18               	movwf	(___llmod@divisor+2)& (0+255),b
  7327  0009E4  0E00               	movlw	0
  7328  0009E6  6F19               	movwf	(___llmod@divisor+3)& (0+255),b
  7329  0009E8  EC38  F03F         	call	___llmod	;wreg free
  7330  0009EC  0101               	movlb	1	; () banked
  7331  0009EE  5112               	movf	?___llmod& (0+255),w,b
  7332  0009F0  1113               	iorwf	(?___llmod+1)& (0+255),w,b
  7333  0009F2  1114               	iorwf	(?___llmod+2)& (0+255),w,b
  7334  0009F4  1115               	iorwf	(?___llmod+3)& (0+255),w,b
  7335  0009F6  B4D8               	btfsc	16344,2,c
  7336  0009F8  D7B6               	goto	l1047
  7337  0009FA                     u17360:
  7338                           
  7339                           ; BSR set to: 1
  7340                           ;doprnt.c: 919: }
  7341                           ;doprnt.c: 921: if(prec < c) {
  7342                           
  7343                           ; BSR set to: 1
  7344                           
  7345                           ; BSR set to: 1
  7346  0009FA  51AB               	movf	(sprintf@prec+1)& (0+255),w,b
  7347  0009FC  0A80               	xorlw	128
  7348  0009FE  6F7C               	movwf	??_sprintf& (0+255),b
  7349  000A00  51AC               	movf	sprintf@c& (0+255),w,b
  7350  000A02  5DAA               	subwf	sprintf@prec& (0+255),w,b
  7351  000A04  0E80               	movlw	128
  7352  000A06  BFAC               	btfsc	sprintf@c& (0+255),7,b
  7353  000A08  0E7F               	movlw	127
  7354  000A0A  597C               	subwfb	??_sprintf& (0+255),w,b
  7355  000A0C  B0D8               	btfsc	16344,0,c
  7356  000A0E  D025               	goto	l1051
  7357                           
  7358                           ; BSR set to: 1
  7359                           ;doprnt.c: 922: fval /= scale(c-prec);
  7360  000A10  0060  F69C  F14A   	movff	sprintf@fval,___ftdiv@f1
  7361  000A16  0060  F6A0  F14B   	movff	sprintf@fval+1,___ftdiv@f1+1
  7362  000A1C  0060  F6A4  F14C   	movff	sprintf@fval+2,___ftdiv@f1+2
  7363  000A22  51AA               	movf	sprintf@prec& (0+255),w,b
  7364  000A24  0800               	sublw	0
  7365  000A26  25AC               	addwf	sprintf@c& (0+255),w,b
  7366  000A28  EC0B  F01D         	call	_scale
  7367  000A2C  0060  F50C  F14D   	movff	?_scale,___ftdiv@f2
  7368  000A32  0060  F510  F14E   	movff	?_scale+1,___ftdiv@f2+1
  7369  000A38  0060  F514  F14F   	movff	?_scale+2,___ftdiv@f2+2
  7370  000A3E  ECED  F034         	call	___ftdiv	;wreg free
  7371  000A42  0060  F528  F1A7   	movff	?___ftdiv,sprintf@fval
  7372  000A48  0060  F52C  F1A8   	movff	?___ftdiv+1,sprintf@fval+1
  7373  000A4E  0060  F530  F1A9   	movff	?___ftdiv+2,sprintf@fval+2
  7374                           
  7375                           ;doprnt.c: 923: c = prec;
  7376  000A54  0060  F6A8  F1AC   	movff	sprintf@prec,sprintf@c
  7377  000A5A                     l1051:
  7378                           
  7379                           ;doprnt.c: 924: }
  7380                           ;doprnt.c: 926: }
  7381                           ;doprnt.c: 929: width -= prec + 5;
  7382  000A5A  0E05               	movlw	5
  7383  000A5C  0101               	movlb	1	; () banked
  7384  000A5E  25AA               	addwf	sprintf@prec& (0+255),w,b
  7385  000A60  6F7C               	movwf	??_sprintf& (0+255),b
  7386  000A62  0E00               	movlw	0
  7387  000A64  21AB               	addwfc	(sprintf@prec+1)& (0+255),w,b
  7388  000A66  6F7D               	movwf	(??_sprintf+1)& (0+255),b
  7389  000A68  517C               	movf	??_sprintf& (0+255),w,b
  7390  000A6A  5FA1               	subwf	sprintf@width& (0+255),f,b
  7391  000A6C  517D               	movf	(??_sprintf+1)& (0+255),w,b
  7392  000A6E  5BA2               	subwfb	(sprintf@width+1)& (0+255),f,b
  7393                           
  7394                           ; BSR set to: 1
  7395                           ;doprnt.c: 931: if(prec || flag & 0x800)
  7396  000A70  51AA               	movf	sprintf@prec& (0+255),w,b
  7397  000A72  11AB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7398  000A74  A4D8               	btfss	16344,2,c
  7399  000A76  D002               	goto	u17390
  7400                           
  7401                           ; BSR set to: 1
  7402  000A78  A7AE               	btfss	(sprintf@flag+1)& (0+255),3,b
  7403  000A7A  D003               	goto	l1052
  7404  000A7C                     u17390:
  7405                           
  7406                           ; BSR set to: 1
  7407                           ;doprnt.c: 932: width--;
  7408                           
  7409                           ; BSR set to: 1
  7410  000A7C  07A1               	decf	sprintf@width& (0+255),f,b
  7411  000A7E  A0D8               	btfss	16344,0,c
  7412  000A80  07A2               	decf	(sprintf@width+1)& (0+255),f,b
  7413  000A82                     l1052:
  7414                           
  7415                           ; BSR set to: 1
  7416                           ;doprnt.c: 934: if(flag & 0x03)
  7417                           
  7418                           ; BSR set to: 1
  7419  000A82  0E03               	movlw	3
  7420  000A84  15AD               	andwf	sprintf@flag& (0+255),w,b
  7421  000A86  6F7C               	movwf	??_sprintf& (0+255),b
  7422  000A88  0E00               	movlw	0
  7423  000A8A  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
  7424  000A8C  6F7D               	movwf	(??_sprintf+1)& (0+255),b
  7425  000A8E  517C               	movf	??_sprintf& (0+255),w,b
  7426  000A90  117D               	iorwf	(??_sprintf+1)& (0+255),w,b
  7427  000A92  B4D8               	btfsc	16344,2,c
  7428  000A94  D003               	goto	l1055
  7429                           
  7430                           ; BSR set to: 1
  7431                           ;doprnt.c: 935: width--;
  7432  000A96  07A1               	decf	sprintf@width& (0+255),f,b
  7433  000A98  A0D8               	btfss	16344,0,c
  7434  000A9A  07A2               	decf	(sprintf@width+1)& (0+255),f,b
  7435  000A9C                     l1055:
  7436                           
  7437                           ; BSR set to: 1
  7438                           ;doprnt.c: 946: if(flag & 0x04) {
  7439                           
  7440                           ; BSR set to: 1
  7441  000A9C  A5AD               	btfss	sprintf@flag& (0+255),2,b
  7442  000A9E  D038               	goto	l1056
  7443                           
  7444                           ; BSR set to: 1
  7445                           ;doprnt.c: 948: if(flag & 0x02)
  7446  000AA0  A3AD               	btfss	sprintf@flag& (0+255),1,b
  7447  000AA2  D014               	goto	l1057
  7448                           
  7449                           ; BSR set to: 1
  7450                           ;doprnt.c: 949: ((*sp++ = (flag & 0x01 ? '-' : '+')));
  7451  000AA4  B1AD               	btfsc	sprintf@flag& (0+255),0,b
  7452  000AA6  D004               	goto	l1059
  7453                           
  7454                           ; BSR set to: 1
  7455  000AA8  0E00               	movlw	0
  7456  000AAA  6F87               	movwf	(_sprintf$2173+1)& (0+255),b
  7457  000AAC  0E2B               	movlw	43
  7458  000AAE  D003               	goto	L5
  7459  000AB0                     l1059:
  7460                           
  7461                           ; BSR set to: 1
  7462                           
  7463                           ; BSR set to: 1
  7464  000AB0  0E00               	movlw	0
  7465  000AB2  6F87               	movwf	(_sprintf$2173+1)& (0+255),b
  7466  000AB4  0E2D               	movlw	45
  7467  000AB6                     L5:
  7468  000AB6  6F86               	movwf	_sprintf$2173& (0+255),b
  7469                           
  7470                           ; BSR set to: 1
  7471                           
  7472                           ; BSR set to: 1
  7473  000AB8  0060  F58B  FFD9   	movff	sprintf@sp,16345
  7474  000ABE  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  7475  000AC4  0060  F61B  FFDF   	movff	_sprintf$2173,16351
  7476  000ACA  D00A               	goto	l12856
  7477  000ACC                     l1057:
  7478                           
  7479                           ; BSR set to: 1
  7480                           ;doprnt.c: 950: else if(flag & 0x01)
  7481  000ACC  A1AD               	btfss	sprintf@flag& (0+255),0,b
  7482  000ACE  D018               	goto	l1064
  7483                           
  7484                           ; BSR set to: 1
  7485                           ;doprnt.c: 951: ((*sp++ = (' ')));
  7486  000AD0  0060  F58B  FFD9   	movff	sprintf@sp,16345
  7487  000AD6  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  7488  000ADC  0E20               	movlw	32
  7489  000ADE  6EDF               	movwf	16351,c
  7490  000AE0                     l12856:
  7491                           
  7492                           ; BSR set to: 1
  7493  000AE0  4B62               	infsnz	sprintf@sp& (0+255),f,b
  7494  000AE2  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  7495                           
  7496                           ; BSR set to: 1
  7497                           ;doprnt.c: 953: while(width > 0) {
  7498                           
  7499                           ; BSR set to: 1
  7500  000AE4  D00D               	goto	l1064
  7501  000AE6                     l12858:
  7502                           
  7503                           ; BSR set to: 1
  7504                           ;doprnt.c: 954: ((*sp++ = ('0')));
  7505  000AE6  0060  F58B  FFD9   	movff	sprintf@sp,16345
  7506  000AEC  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  7507  000AF2  0E30               	movlw	48
  7508  000AF4  6EDF               	movwf	16351,c
  7509                           
  7510                           ; BSR set to: 1
  7511  000AF6  4B62               	infsnz	sprintf@sp& (0+255),f,b
  7512  000AF8  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  7513                           
  7514                           ; BSR set to: 1
  7515                           ;doprnt.c: 955: width--;
  7516  000AFA  07A1               	decf	sprintf@width& (0+255),f,b
  7517  000AFC  A0D8               	btfss	16344,0,c
  7518  000AFE  07A2               	decf	(sprintf@width+1)& (0+255),f,b
  7519  000B00                     l1064:
  7520                           
  7521                           ; BSR set to: 1
  7522                           
  7523                           ; BSR set to: 1
  7524  000B00  BFA2               	btfsc	(sprintf@width+1)& (0+255),7,b
  7525  000B02  D03F               	goto	l1078
  7526  000B04  51A2               	movf	(sprintf@width+1)& (0+255),w,b
  7527  000B06  E1EF               	bnz	l12858
  7528  000B08  05A1               	decf	sprintf@width& (0+255),w,b
  7529  000B0A  A0D8               	btfss	16344,0,c
  7530  000B0C  D03A               	goto	l1078
  7531  000B0E  D7EB               	goto	l1065
  7532  000B10                     l1056:
  7533                           
  7534                           ; BSR set to: 1
  7535                           ;doprnt.c: 959: {
  7536                           ;doprnt.c: 962: if(!(flag & 0x08))
  7537  000B10  A7AD               	btfss	sprintf@flag& (0+255),3,b
  7538  000B12  D00E               	goto	l1069
  7539  000B14  D014               	goto	u17470
  7540  000B16                     l12868:
  7541                           
  7542                           ; BSR set to: 1
  7543                           ;doprnt.c: 965: ((*sp++ = (' ')));
  7544  000B16  0060  F58B  FFD9   	movff	sprintf@sp,16345
  7545  000B1C  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  7546  000B22  0E20               	movlw	32
  7547  000B24  6EDF               	movwf	16351,c
  7548                           
  7549                           ; BSR set to: 1
  7550  000B26  4B62               	infsnz	sprintf@sp& (0+255),f,b
  7551  000B28  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  7552                           
  7553                           ; BSR set to: 1
  7554                           ;doprnt.c: 966: width--;
  7555  000B2A  07A1               	decf	sprintf@width& (0+255),f,b
  7556  000B2C  A0D8               	btfss	16344,0,c
  7557  000B2E  07A2               	decf	(sprintf@width+1)& (0+255),f,b
  7558  000B30                     l1069:
  7559                           
  7560                           ; BSR set to: 1
  7561                           
  7562                           ; BSR set to: 1
  7563  000B30  BFA2               	btfsc	(sprintf@width+1)& (0+255),7,b
  7564  000B32  D005               	goto	u17470
  7565  000B34  51A2               	movf	(sprintf@width+1)& (0+255),w,b
  7566  000B36  E1EF               	bnz	l12868
  7567  000B38  05A1               	decf	sprintf@width& (0+255),w,b
  7568  000B3A  B0D8               	btfsc	16344,0,c
  7569  000B3C  D7EC               	goto	l1070
  7570  000B3E                     u17470:
  7571                           
  7572                           ; BSR set to: 1
  7573                           ;doprnt.c: 967: }
  7574                           ;doprnt.c: 970: if(flag & 0x02)
  7575                           
  7576                           ; BSR set to: 1
  7577  000B3E  A3AD               	btfss	sprintf@flag& (0+255),1,b
  7578  000B40  D014               	goto	l1072
  7579                           
  7580                           ; BSR set to: 1
  7581                           ;doprnt.c: 971: ((*sp++ = (flag & 0x01 ? '-' : '+')));
  7582  000B42  B1AD               	btfsc	sprintf@flag& (0+255),0,b
  7583  000B44  D004               	goto	l1074
  7584                           
  7585                           ; BSR set to: 1
  7586  000B46  0E00               	movlw	0
  7587  000B48  6F89               	movwf	(_sprintf$2174+1)& (0+255),b
  7588  000B4A  0E2B               	movlw	43
  7589  000B4C  D003               	goto	L6
  7590  000B4E                     l1074:
  7591                           
  7592                           ; BSR set to: 1
  7593                           
  7594                           ; BSR set to: 1
  7595  000B4E  0E00               	movlw	0
  7596  000B50  6F89               	movwf	(_sprintf$2174+1)& (0+255),b
  7597  000B52  0E2D               	movlw	45
  7598  000B54                     L6:
  7599  000B54  6F88               	movwf	_sprintf$2174& (0+255),b
  7600                           
  7601                           ; BSR set to: 1
  7602                           
  7603                           ; BSR set to: 1
  7604  000B56  0060  F58B  FFD9   	movff	sprintf@sp,16345
  7605  000B5C  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  7606  000B62  0060  F623  FFDF   	movff	_sprintf$2174,16351
  7607  000B68  D00A               	goto	l12888
  7608  000B6A                     l1072:
  7609                           
  7610                           ; BSR set to: 1
  7611                           ;doprnt.c: 977: else if(flag & 0x01)
  7612  000B6A  A1AD               	btfss	sprintf@flag& (0+255),0,b
  7613  000B6C  D00A               	goto	l1078
  7614                           
  7615                           ; BSR set to: 1
  7616                           ;doprnt.c: 978: ((*sp++ = (' ')));
  7617  000B6E  0060  F58B  FFD9   	movff	sprintf@sp,16345
  7618  000B74  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  7619  000B7A  0E20               	movlw	32
  7620  000B7C  6EDF               	movwf	16351,c
  7621  000B7E                     l12888:
  7622                           
  7623                           ; BSR set to: 1
  7624  000B7E  4B62               	infsnz	sprintf@sp& (0+255),f,b
  7625  000B80  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  7626  000B82                     l1078:
  7627                           
  7628                           ; BSR set to: 1
  7629                           ;doprnt.c: 980: }
  7630                           ;doprnt.c: 985: val = (unsigned long)fval;
  7631                           
  7632                           ; BSR set to: 1
  7633                           
  7634                           ; BSR set to: 1
  7635                           
  7636                           ; BSR set to: 1
  7637  000B82  0060  F69C  F119   	movff	sprintf@fval,___fttol@f1
  7638  000B88  0060  F6A0  F11A   	movff	sprintf@fval+1,___fttol@f1+1
  7639  000B8E  0060  F6A4  F11B   	movff	sprintf@fval+2,___fttol@f1+2
  7640  000B94  EC65  F033         	call	___fttol	;wreg free
  7641  000B98  0060  F464  F1A3   	movff	?___fttol,sprintf@val
  7642  000B9E  0060  F468  F1A4   	movff	?___fttol+1,sprintf@val+1
  7643  000BA4  0060  F46C  F1A5   	movff	?___fttol+2,sprintf@val+2
  7644  000BAA  0060  F470  F1A6   	movff	?___fttol+3,sprintf@val+3
  7645                           
  7646                           ;doprnt.c: 986: ((*sp++ = (val/dpowers[c] + '0')));
  7647  000BB0  0060  F68C  F105   	movff	sprintf@val,___lldiv@dividend
  7648  000BB6  0060  F690  F106   	movff	sprintf@val+1,___lldiv@dividend+1
  7649  000BBC  0060  F694  F107   	movff	sprintf@val+2,___lldiv@dividend+2
  7650  000BC2  0060  F698  F108   	movff	sprintf@val+3,___lldiv@dividend+3
  7651  000BC8  0101               	movlb	1	; () banked
  7652  000BCA  51AC               	movf	sprintf@c& (0+255),w,b
  7653  000BCC  0D04               	mullw	4
  7654  000BCE  0ED9               	movlw	low _dpowers
  7655  000BD0  24F3               	addwf	16371,w,c
  7656  000BD2  6EF6               	movwf	16374,c
  7657  000BD4  0EFA               	movlw	high _dpowers
  7658  000BD6  20F4               	addwfc	16372,w,c
  7659  000BD8  6EF7               	movwf	16375,c
  7660  000BDA                     	if	1	;There are 3 active tblptr bytes
  7661  000BDA  6AF8               	clrf	16376,c
  7662  000BDC  0E00               	movlw	low (__mediumconst shr (0+16))
  7663  000BDE  22F8               	addwfc	16376,f,c
  7664  000BE0                     	endif
  7665  000BE0  0009               	tblrd		*+
  7666  000BE2  006F FFD4  F109    	movff	16373,___lldiv@divisor
  7667  000BE8  0009               	tblrd		*+
  7668  000BEA  006F FFD4  F10A    	movff	16373,___lldiv@divisor+1
  7669  000BF0  0009               	tblrd		*+
  7670  000BF2  006F FFD4  F10B    	movff	16373,___lldiv@divisor+2
  7671  000BF8  000A               	tblrd		*-
  7672  000BFA  006F FFD4  F10C    	movff	16373,___lldiv@divisor+3
  7673  000C00  EC34  F03C         	call	___lldiv	;wreg free
  7674  000C04  0101               	movlb	1	; () banked
  7675  000C06  5105               	movf	?___lldiv& (0+255),w,b
  7676  000C08  0F30               	addlw	48
  7677  000C0A  0060  F58B  FFD9   	movff	sprintf@sp,16345
  7678  000C10  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  7679  000C16  6EDF               	movwf	16351,c
  7680                           
  7681                           ; BSR set to: 1
  7682  000C18  4B62               	infsnz	sprintf@sp& (0+255),f,b
  7683  000C1A  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  7684                           
  7685                           ; BSR set to: 1
  7686                           ;doprnt.c: 987: val %= dpowers[c];
  7687  000C1C  0060  F68C  F112   	movff	sprintf@val,___llmod@dividend
  7688  000C22  0060  F690  F113   	movff	sprintf@val+1,___llmod@dividend+1
  7689  000C28  0060  F694  F114   	movff	sprintf@val+2,___llmod@dividend+2
  7690  000C2E  0060  F698  F115   	movff	sprintf@val+3,___llmod@dividend+3
  7691  000C34  51AC               	movf	sprintf@c& (0+255),w,b
  7692  000C36  0D04               	mullw	4
  7693  000C38  0ED9               	movlw	low _dpowers
  7694  000C3A  24F3               	addwf	16371,w,c
  7695  000C3C  6EF6               	movwf	16374,c
  7696  000C3E  0EFA               	movlw	high _dpowers
  7697  000C40  20F4               	addwfc	16372,w,c
  7698  000C42  6EF7               	movwf	16375,c
  7699  000C44                     	if	1	;There are 3 active tblptr bytes
  7700  000C44  6AF8               	clrf	16376,c
  7701  000C46  0E00               	movlw	low (__mediumconst shr (0+16))
  7702  000C48  22F8               	addwfc	16376,f,c
  7703  000C4A                     	endif
  7704  000C4A  0009               	tblrd		*+
  7705  000C4C  006F FFD4  F116    	movff	16373,___llmod@divisor
  7706  000C52  0009               	tblrd		*+
  7707  000C54  006F FFD4  F117    	movff	16373,___llmod@divisor+1
  7708  000C5A  0009               	tblrd		*+
  7709  000C5C  006F FFD4  F118    	movff	16373,___llmod@divisor+2
  7710  000C62  000A               	tblrd		*-
  7711  000C64  006F FFD4  F119    	movff	16373,___llmod@divisor+3
  7712  000C6A  EC38  F03F         	call	___llmod	;wreg free
  7713  000C6E  0060  F448  F1A3   	movff	?___llmod,sprintf@val
  7714  000C74  0060  F44C  F1A4   	movff	?___llmod+1,sprintf@val+1
  7715  000C7A  0060  F450  F1A5   	movff	?___llmod+2,sprintf@val+2
  7716  000C80  0060  F454  F1A6   	movff	?___llmod+3,sprintf@val+3
  7717                           
  7718                           ;doprnt.c: 990: if(prec || flag & 0x800)
  7719  000C86  0101               	movlb	1	; () banked
  7720  000C88  51AA               	movf	sprintf@prec& (0+255),w,b
  7721  000C8A  11AB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7722  000C8C  A4D8               	btfss	16344,2,c
  7723  000C8E  D002               	goto	u17520
  7724                           
  7725                           ; BSR set to: 1
  7726  000C90  A7AE               	btfss	(sprintf@flag+1)& (0+255),3,b
  7727  000C92  D0A2               	goto	u17560
  7728  000C94                     u17520:
  7729                           
  7730                           ; BSR set to: 1
  7731                           ;doprnt.c: 994: {
  7732                           ;doprnt.c: 995: ((*sp++ = ('.')));
  7733                           
  7734                           ; BSR set to: 1
  7735  000C94  0060  F58B  FFD9   	movff	sprintf@sp,16345
  7736  000C9A  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  7737  000CA0  0E2E               	movlw	46
  7738  000CA2  6EDF               	movwf	16351,c
  7739                           
  7740                           ; BSR set to: 1
  7741  000CA4  4B62               	infsnz	sprintf@sp& (0+255),f,b
  7742  000CA6  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  7743                           
  7744                           ; BSR set to: 1
  7745                           ;doprnt.c: 996: prec -= c;
  7746  000CA8  51AC               	movf	sprintf@c& (0+255),w,b
  7747  000CAA  5FAA               	subwf	sprintf@prec& (0+255),f,b
  7748  000CAC  0E00               	movlw	0
  7749  000CAE  BFAC               	btfsc	sprintf@c& (0+255),7,b
  7750  000CB0  0EFF               	movlw	255
  7751  000CB2  5BAB               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7752                           
  7753                           ;doprnt.c: 997: while(c--) {
  7754  000CB4  D07A               	goto	l1082
  7755  000CB6                     l1083:
  7756                           
  7757                           ; BSR set to: 1
  7758                           ;doprnt.c: 1002: if(flag & 0x200 && val == 0) {
  7759  000CB6  A3AE               	btfss	(sprintf@flag+1)& (0+255),1,b
  7760  000CB8  D00E               	goto	l1084
  7761                           
  7762                           ; BSR set to: 1
  7763  000CBA  51A3               	movf	sprintf@val& (0+255),w,b
  7764  000CBC  11A4               	iorwf	(sprintf@val+1)& (0+255),w,b
  7765  000CBE  11A5               	iorwf	(sprintf@val+2)& (0+255),w,b
  7766  000CC0  11A6               	iorwf	(sprintf@val+3)& (0+255),w,b
  7767  000CC2  A4D8               	btfss	16344,2,c
  7768  000CC4  D008               	goto	l1084
  7769                           
  7770                           ; BSR set to: 1
  7771                           ;doprnt.c: 1003: prec = c = 0;
  7772  000CC6  0E00               	movlw	0
  7773  000CC8  6FAC               	movwf	sprintf@c& (0+255),b
  7774  000CCA  51AC               	movf	sprintf@c& (0+255),w,b
  7775  000CCC  6FAA               	movwf	sprintf@prec& (0+255),b
  7776  000CCE  6BAB               	clrf	(sprintf@prec+1)& (0+255),b
  7777  000CD0  BFAA               	btfsc	sprintf@prec& (0+255),7,b
  7778  000CD2  07AB               	decf	(sprintf@prec+1)& (0+255),f,b
  7779                           
  7780                           ;doprnt.c: 1004: break;
  7781  000CD4  D07D               	goto	l1086
  7782  000CD6                     l1084:
  7783                           
  7784                           ; BSR set to: 1
  7785                           ;doprnt.c: 1005: }
  7786                           ;doprnt.c: 1007: ((*sp++ = ('0' + (val/dpowers[c]))));
  7787                           
  7788                           ; BSR set to: 1
  7789  000CD6  0060  F68C  F105   	movff	sprintf@val,___lldiv@dividend
  7790  000CDC  0060  F690  F106   	movff	sprintf@val+1,___lldiv@dividend+1
  7791  000CE2  0060  F694  F107   	movff	sprintf@val+2,___lldiv@dividend+2
  7792  000CE8  0060  F698  F108   	movff	sprintf@val+3,___lldiv@dividend+3
  7793  000CEE  51AC               	movf	sprintf@c& (0+255),w,b
  7794  000CF0  0D04               	mullw	4
  7795  000CF2  0ED9               	movlw	low _dpowers
  7796  000CF4  24F3               	addwf	16371,w,c
  7797  000CF6  6EF6               	movwf	16374,c
  7798  000CF8  0EFA               	movlw	high _dpowers
  7799  000CFA  20F4               	addwfc	16372,w,c
  7800  000CFC  6EF7               	movwf	16375,c
  7801  000CFE                     	if	1	;There are 3 active tblptr bytes
  7802  000CFE  6AF8               	clrf	16376,c
  7803  000D00  0E00               	movlw	low (__mediumconst shr (0+16))
  7804  000D02  22F8               	addwfc	16376,f,c
  7805  000D04                     	endif
  7806  000D04  0009               	tblrd		*+
  7807  000D06  006F FFD4  F109    	movff	16373,___lldiv@divisor
  7808  000D0C  0009               	tblrd		*+
  7809  000D0E  006F FFD4  F10A    	movff	16373,___lldiv@divisor+1
  7810  000D14  0009               	tblrd		*+
  7811  000D16  006F FFD4  F10B    	movff	16373,___lldiv@divisor+2
  7812  000D1C  000A               	tblrd		*-
  7813  000D1E  006F FFD4  F10C    	movff	16373,___lldiv@divisor+3
  7814  000D24  EC34  F03C         	call	___lldiv	;wreg free
  7815  000D28  0101               	movlb	1	; () banked
  7816  000D2A  5105               	movf	?___lldiv& (0+255),w,b
  7817  000D2C  0F30               	addlw	48
  7818  000D2E  0060  F58B  FFD9   	movff	sprintf@sp,16345
  7819  000D34  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  7820  000D3A  6EDF               	movwf	16351,c
  7821                           
  7822                           ; BSR set to: 1
  7823  000D3C  4B62               	infsnz	sprintf@sp& (0+255),f,b
  7824  000D3E  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  7825                           
  7826                           ; BSR set to: 1
  7827                           ;doprnt.c: 1008: val %= dpowers[c];
  7828  000D40  0060  F68C  F112   	movff	sprintf@val,___llmod@dividend
  7829  000D46  0060  F690  F113   	movff	sprintf@val+1,___llmod@dividend+1
  7830  000D4C  0060  F694  F114   	movff	sprintf@val+2,___llmod@dividend+2
  7831  000D52  0060  F698  F115   	movff	sprintf@val+3,___llmod@dividend+3
  7832  000D58  51AC               	movf	sprintf@c& (0+255),w,b
  7833  000D5A  0D04               	mullw	4
  7834  000D5C  0ED9               	movlw	low _dpowers
  7835  000D5E  24F3               	addwf	16371,w,c
  7836  000D60  6EF6               	movwf	16374,c
  7837  000D62  0EFA               	movlw	high _dpowers
  7838  000D64  20F4               	addwfc	16372,w,c
  7839  000D66  6EF7               	movwf	16375,c
  7840  000D68                     	if	1	;There are 3 active tblptr bytes
  7841  000D68  6AF8               	clrf	16376,c
  7842  000D6A  0E00               	movlw	low (__mediumconst shr (0+16))
  7843  000D6C  22F8               	addwfc	16376,f,c
  7844  000D6E                     	endif
  7845  000D6E  0009               	tblrd		*+
  7846  000D70  006F FFD4  F116    	movff	16373,___llmod@divisor
  7847  000D76  0009               	tblrd		*+
  7848  000D78  006F FFD4  F117    	movff	16373,___llmod@divisor+1
  7849  000D7E  0009               	tblrd		*+
  7850  000D80  006F FFD4  F118    	movff	16373,___llmod@divisor+2
  7851  000D86  000A               	tblrd		*-
  7852  000D88  006F FFD4  F119    	movff	16373,___llmod@divisor+3
  7853  000D8E  EC38  F03F         	call	___llmod	;wreg free
  7854  000D92  0060  F448  F1A3   	movff	?___llmod,sprintf@val
  7855  000D98  0060  F44C  F1A4   	movff	?___llmod+1,sprintf@val+1
  7856  000D9E  0060  F450  F1A5   	movff	?___llmod+2,sprintf@val+2
  7857  000DA4  0060  F454  F1A6   	movff	?___llmod+3,sprintf@val+3
  7858  000DAA                     l1082:
  7859  000DAA  0101               	movlb	1	; () banked
  7860  000DAC  07AC               	decf	sprintf@c& (0+255),f,b
  7861  000DAE  29AC               	incf	sprintf@c& (0+255),w,b
  7862  000DB0  B4D8               	btfsc	16344,2,c
  7863  000DB2  D00E               	goto	l1086
  7864  000DB4  D780               	goto	l1083
  7865  000DB6                     
  7866                           ; BSR set to: 1
  7867                           ;doprnt.c: 1012: ((*sp++ = ('0')));
  7868                           
  7869                           ; BSR set to: 1
  7870  000DB6  0060  F58B  FFD9   	movff	sprintf@sp,16345
  7871  000DBC  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  7872  000DC2  0E30               	movlw	48
  7873  000DC4  6EDF               	movwf	16351,c
  7874                           
  7875                           ; BSR set to: 1
  7876  000DC6  4B62               	infsnz	sprintf@sp& (0+255),f,b
  7877  000DC8  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  7878                           
  7879                           ; BSR set to: 1
  7880                           ;doprnt.c: 1013: prec--;
  7881  000DCA  07AA               	decf	sprintf@prec& (0+255),f,b
  7882  000DCC  A0D8               	btfss	16344,0,c
  7883  000DCE  07AB               	decf	(sprintf@prec+1)& (0+255),f,b
  7884  000DD0                     l1086:
  7885                           
  7886                           ; BSR set to: 1
  7887                           
  7888                           ; BSR set to: 1
  7889  000DD0  51AA               	movf	sprintf@prec& (0+255),w,b
  7890  000DD2  11AB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7891  000DD4  A4D8               	btfss	16344,2,c
  7892  000DD6  D7EF               	goto	l1087
  7893  000DD8                     u17560:
  7894                           
  7895                           ; BSR set to: 1
  7896                           ;doprnt.c: 1014: }
  7897                           ;doprnt.c: 1015: }
  7898                           ;doprnt.c: 1017: if(flag & 0x20)
  7899                           
  7900                           ; BSR set to: 1
  7901  000DD8  ABAD               	btfss	sprintf@flag& (0+255),5,b
  7902  000DDA  D008               	goto	l1089
  7903                           
  7904                           ; BSR set to: 1
  7905                           ;doprnt.c: 1018: ((*sp++ = ('E')));
  7906  000DDC  0060  F58B  FFD9   	movff	sprintf@sp,16345
  7907  000DE2  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  7908  000DE8  0E45               	movlw	69
  7909  000DEA  D007               	goto	L7
  7910  000DEC                     l1089:
  7911                           
  7912                           ; BSR set to: 1
  7913                           ;doprnt.c: 1019: else
  7914                           ;doprnt.c: 1021: ((*sp++ = ('e')));
  7915                           
  7916                           ; BSR set to: 1
  7917  000DEC  0060  F58B  FFD9   	movff	sprintf@sp,16345
  7918  000DF2  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  7919  000DF8  0E65               	movlw	101
  7920  000DFA                     L7:
  7921  000DFA  6EDF               	movwf	16351,c
  7922                           
  7923                           ; BSR set to: 1
  7924  000DFC  4B62               	infsnz	sprintf@sp& (0+255),f,b
  7925  000DFE  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  7926                           
  7927                           ; BSR set to: 1
  7928                           ;doprnt.c: 1022: if(exp < 0) {
  7929                           
  7930                           ; BSR set to: 1
  7931  000E00  AFA0               	btfss	(sprintf@exp+1)& (0+255),7,b
  7932  000E02  D00C               	goto	l1091
  7933                           
  7934                           ; BSR set to: 1
  7935                           ;doprnt.c: 1023: exp = -exp;
  7936  000E04  6D9F               	negf	sprintf@exp& (0+255),b
  7937  000E06  1FA0               	comf	(sprintf@exp+1)& (0+255),f,b
  7938  000E08  B0D8               	btfsc	16344,0,c
  7939  000E0A  2BA0               	incf	(sprintf@exp+1)& (0+255),f,b
  7940                           
  7941                           ; BSR set to: 1
  7942                           ;doprnt.c: 1024: ((*sp++ = ('-')));
  7943  000E0C  0060  F58B  FFD9   	movff	sprintf@sp,16345
  7944  000E12  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  7945  000E18  0E2D               	movlw	45
  7946  000E1A  D007               	goto	L8
  7947  000E1C                     l1091:
  7948                           
  7949                           ; BSR set to: 1
  7950                           ;doprnt.c: 1026: ((*sp++ = ('+')));
  7951                           
  7952                           ; BSR set to: 1
  7953  000E1C  0060  F58B  FFD9   	movff	sprintf@sp,16345
  7954  000E22  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  7955  000E28  0E2B               	movlw	43
  7956  000E2A                     L8:
  7957  000E2A  6EDF               	movwf	16351,c
  7958                           
  7959                           ; BSR set to: 1
  7960  000E2C  4B62               	infsnz	sprintf@sp& (0+255),f,b
  7961  000E2E  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  7962                           
  7963                           ; BSR set to: 1
  7964                           ;doprnt.c: 1039: ((*sp++ = (exp / 10 + '0')));
  7965                           
  7966                           ; BSR set to: 1
  7967  000E30  0060  F67C  F10B   	movff	sprintf@exp,___awdiv@dividend
  7968  000E36  0060  F680  F10C   	movff	sprintf@exp+1,___awdiv@dividend+1
  7969  000E3C  0E00               	movlw	0
  7970  000E3E  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
  7971  000E40  0E0A               	movlw	10
  7972  000E42  6F0D               	movwf	___awdiv@divisor& (0+255),b
  7973  000E44  EC7A  F03C         	call	___awdiv	;wreg free
  7974  000E48  0101               	movlb	1	; () banked
  7975  000E4A  510B               	movf	?___awdiv& (0+255),w,b
  7976  000E4C  0F30               	addlw	48
  7977  000E4E  0060  F58B  FFD9   	movff	sprintf@sp,16345
  7978  000E54  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  7979  000E5A  6EDF               	movwf	16351,c
  7980                           
  7981                           ; BSR set to: 1
  7982  000E5C  4B62               	infsnz	sprintf@sp& (0+255),f,b
  7983  000E5E  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  7984                           
  7985                           ; BSR set to: 1
  7986                           ;doprnt.c: 1040: ((*sp++ = (exp % 10 + '0')));
  7987  000E60  0060  F67C  F105   	movff	sprintf@exp,___awmod@dividend
  7988  000E66  0060  F680  F106   	movff	sprintf@exp+1,___awmod@dividend+1
  7989  000E6C  0E00               	movlw	0
  7990  000E6E  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
  7991  000E70  0E0A               	movlw	10
  7992  000E72  6F07               	movwf	___awmod@divisor& (0+255),b
  7993  000E74  EC88  F03E         	call	___awmod	;wreg free
  7994  000E78  0101               	movlb	1	; () banked
  7995  000E7A  5105               	movf	?___awmod& (0+255),w,b
  7996  000E7C  0F30               	addlw	48
  7997  000E7E  0060  F58B  FFD9   	movff	sprintf@sp,16345
  7998  000E84  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  7999  000E8A  6EDF               	movwf	16351,c
  8000                           
  8001                           ; BSR set to: 1
  8002  000E8C  4B62               	infsnz	sprintf@sp& (0+255),f,b
  8003  000E8E  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  8004                           
  8005                           ; BSR set to: 1
  8006                           ;doprnt.c: 1042: if((flag & 0x08) && width > 0)
  8007  000E90  B7AD               	btfsc	sprintf@flag& (0+255),3,b
  8008                           
  8009                           ; BSR set to: 1
  8010  000E92  BFA2               	btfsc	(sprintf@width+1)& (0+255),7,b
  8011  000E94  EF9B  F00E         	goto	u18400
  8012  000E98  51A2               	movf	(sprintf@width+1)& (0+255),w,b
  8013  000E9A  E104               	bnz	l12960
  8014  000E9C  05A1               	decf	sprintf@width& (0+255),w,b
  8015  000E9E  A0D8               	btfss	16344,0,c
  8016  000EA0  EF9B  F00E         	goto	u18400
  8017  000EA4                     u17600:
  8018  000EA4                     l12960:
  8019                           
  8020                           ; BSR set to: 1
  8021                           ;doprnt.c: 1044: ((*sp++ = (' ')));
  8022  000EA4  0060  F58B  FFD9   	movff	sprintf@sp,16345
  8023  000EAA  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  8024  000EB0  0E20               	movlw	32
  8025  000EB2  6EDF               	movwf	16351,c
  8026                           
  8027                           ; BSR set to: 1
  8028  000EB4  4B62               	infsnz	sprintf@sp& (0+255),f,b
  8029  000EB6  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  8030                           
  8031                           ; BSR set to: 1
  8032                           ;doprnt.c: 1045: while(--width);
  8033  000EB8  07A1               	decf	sprintf@width& (0+255),f,b
  8034  000EBA  A0D8               	btfss	16344,0,c
  8035  000EBC  07A2               	decf	(sprintf@width+1)& (0+255),f,b
  8036  000EBE  51A1               	movf	sprintf@width& (0+255),w,b
  8037  000EC0  11A2               	iorwf	(sprintf@width+1)& (0+255),w,b
  8038  000EC2  B4D8               	btfsc	16344,2,c
  8039  000EC4  EF9B  F00E         	goto	u18400
  8040  000EC8  D7ED               	goto	u17600
  8041  000ECA                     l1031:
  8042                           
  8043                           ; BSR set to: 1
  8044                           ;doprnt.c: 1048: }
  8045                           ;doprnt.c: 1087: if(flag & 0x200) {
  8046  000ECA  A3AE               	btfss	(sprintf@flag+1)& (0+255),1,b
  8047  000ECC  D12C               	goto	l1096
  8048                           
  8049                           ; BSR set to: 1
  8050                           ;doprnt.c: 1088: if(exp < 0)
  8051  000ECE  AFA0               	btfss	(sprintf@exp+1)& (0+255),7,b
  8052  000ED0  D00A               	goto	l1097
  8053                           
  8054                           ; BSR set to: 1
  8055                           ;doprnt.c: 1089: prec -= (exp+1);
  8056  000ED2  0E01               	movlw	1
  8057  000ED4  259F               	addwf	sprintf@exp& (0+255),w,b
  8058  000ED6  6F7C               	movwf	??_sprintf& (0+255),b
  8059  000ED8  0E00               	movlw	0
  8060  000EDA  21A0               	addwfc	(sprintf@exp+1)& (0+255),w,b
  8061  000EDC  6F7D               	movwf	(??_sprintf+1)& (0+255),b
  8062  000EDE  517C               	movf	??_sprintf& (0+255),w,b
  8063  000EE0  5FAA               	subwf	sprintf@prec& (0+255),f,b
  8064  000EE2  517D               	movf	(??_sprintf+1)& (0+255),w,b
  8065  000EE4  5BAB               	subwfb	(sprintf@prec+1)& (0+255),f,b
  8066  000EE6                     l1097:
  8067                           
  8068                           ; BSR set to: 1
  8069                           ;doprnt.c: 1091: val = (unsigned long)fval;
  8070                           
  8071                           ; BSR set to: 1
  8072  000EE6  0060  F69C  F119   	movff	sprintf@fval,___fttol@f1
  8073  000EEC  0060  F6A0  F11A   	movff	sprintf@fval+1,___fttol@f1+1
  8074  000EF2  0060  F6A4  F11B   	movff	sprintf@fval+2,___fttol@f1+2
  8075  000EF8  EC65  F033         	call	___fttol	;wreg free
  8076  000EFC  0060  F464  F1A3   	movff	?___fttol,sprintf@val
  8077  000F02  0060  F468  F1A4   	movff	?___fttol+1,sprintf@val+1
  8078  000F08  0060  F46C  F1A5   	movff	?___fttol+2,sprintf@val+2
  8079  000F0E  0060  F470  F1A6   	movff	?___fttol+3,sprintf@val+3
  8080                           
  8081                           ;doprnt.c: 1092: for(c = 0 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8082  000F14  0E00               	movlw	0
  8083  000F16  0101               	movlb	1	; () banked
  8084  000F18  6FAC               	movwf	sprintf@c& (0+255),b
  8085  000F1A                     l12974:
  8086                           
  8087                           ; BSR set to: 1
  8088  000F1A  0E0A               	movlw	10
  8089  000F1C  19AC               	xorwf	sprintf@c& (0+255),w,b
  8090  000F1E  B4D8               	btfsc	16344,2,c
  8091  000F20  D01B               	goto	u17660
  8092                           
  8093                           ; BSR set to: 1
  8094                           ;doprnt.c: 1093: if(val < dpowers[c])
  8095                           
  8096                           ; BSR set to: 1
  8097                           
  8098                           ; BSR set to: 1
  8099  000F22  51AC               	movf	sprintf@c& (0+255),w,b
  8100  000F24  0D04               	mullw	4
  8101  000F26  0ED9               	movlw	low _dpowers
  8102  000F28  24F3               	addwf	16371,w,c
  8103  000F2A  6EF6               	movwf	16374,c
  8104  000F2C  0EFA               	movlw	high _dpowers
  8105  000F2E  20F4               	addwfc	16372,w,c
  8106  000F30  6EF7               	movwf	16375,c
  8107  000F32                     	if	1	;There are 3 active tblptr bytes
  8108  000F32  6AF8               	clrf	16376,c
  8109  000F34  0E00               	movlw	low (__mediumconst shr (0+16))
  8110  000F36  22F8               	addwfc	16376,f,c
  8111  000F38                     	endif
  8112  000F38  0009               	tblrd		*+
  8113  000F3A  50F5               	movf	16373,w,c
  8114  000F3C  5DA3               	subwf	sprintf@val& (0+255),w,b
  8115  000F3E  0009               	tblrd		*+
  8116  000F40  50F5               	movf	16373,w,c
  8117  000F42  59A4               	subwfb	(sprintf@val+1)& (0+255),w,b
  8118  000F44  0009               	tblrd		*+
  8119  000F46  50F5               	movf	16373,w,c
  8120  000F48  59A5               	subwfb	(sprintf@val+2)& (0+255),w,b
  8121  000F4A  0009               	tblrd		*+
  8122  000F4C  50F5               	movf	16373,w,c
  8123  000F4E  59A6               	subwfb	(sprintf@val+3)& (0+255),w,b
  8124  000F50  A0D8               	btfss	16344,0,c
  8125  000F52  D002               	goto	u17660
  8126                           
  8127                           ; BSR set to: 1
  8128                           
  8129                           ; BSR set to: 1
  8130                           
  8131                           ; BSR set to: 1
  8132                           ;doprnt.c: 1094: break;
  8133  000F54  2BAC               	incf	sprintf@c& (0+255),f,b
  8134  000F56  D7E1               	goto	l12974
  8135  000F58                     u17660:
  8136                           
  8137                           ; BSR set to: 1
  8138                           ;doprnt.c: 1095: prec -= c;
  8139                           
  8140                           ; BSR set to: 1
  8141  000F58  51AC               	movf	sprintf@c& (0+255),w,b
  8142  000F5A  5FAA               	subwf	sprintf@prec& (0+255),f,b
  8143  000F5C  0E00               	movlw	0
  8144  000F5E  BFAC               	btfsc	sprintf@c& (0+255),7,b
  8145  000F60  0EFF               	movlw	255
  8146  000F62  5BAB               	subwfb	(sprintf@prec+1)& (0+255),f,b
  8147                           
  8148                           ;doprnt.c: 1096: if(prec <= 12)
  8149  000F64  BFAB               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8150  000F66  D006               	goto	u17670
  8151  000F68  51AB               	movf	(sprintf@prec+1)& (0+255),w,b
  8152  000F6A  E124               	bnz	l1101
  8153  000F6C  0E0D               	movlw	13
  8154  000F6E  5DAA               	subwf	sprintf@prec& (0+255),w,b
  8155  000F70  B0D8               	btfsc	16344,0,c
  8156  000F72  D020               	goto	l1101
  8157  000F74                     u17670:
  8158                           
  8159                           ; BSR set to: 1
  8160                           ;doprnt.c: 1097: fval += fround(prec);
  8161  000F74  0060  F69C  F14D   	movff	sprintf@fval,___ftadd@f1
  8162  000F7A  0060  F6A0  F14E   	movff	sprintf@fval+1,___ftadd@f1+1
  8163  000F80  0060  F6A4  F14F   	movff	sprintf@fval+2,___ftadd@f1+2
  8164  000F86  51AA               	movf	sprintf@prec& (0+255),w,b
  8165  000F88  ECDE  F023         	call	_fround
  8166  000F8C  0060  F50C  F150   	movff	?_fround,___ftadd@f2
  8167  000F92  0060  F510  F151   	movff	?_fround+1,___ftadd@f2+1
  8168  000F98  0060  F514  F152   	movff	?_fround+2,___ftadd@f2+2
  8169  000F9E  ECC5  F02A         	call	___ftadd	;wreg free
  8170  000FA2  0060  F534  F1A7   	movff	?___ftadd,sprintf@fval
  8171  000FA8  0060  F538  F1A8   	movff	?___ftadd+1,sprintf@fval+1
  8172  000FAE  0060  F53C  F1A9   	movff	?___ftadd+2,sprintf@fval+2
  8173  000FB4                     l1101:
  8174                           
  8175                           ;doprnt.c: 1100: {
  8176                           ;doprnt.c: 1101: double temp;
  8177                           ;doprnt.c: 1102: temp = scale(prec);
  8178  000FB4  0101               	movlb	1	; () banked
  8179  000FB6  51AA               	movf	sprintf@prec& (0+255),w,b
  8180  000FB8  EC0B  F01D         	call	_scale
  8181  000FBC  0060  F50C  F192   	movff	?_scale,sprintf@temp
  8182  000FC2  0060  F510  F193   	movff	?_scale+1,sprintf@temp+1
  8183  000FC8  0060  F514  F194   	movff	?_scale+2,sprintf@temp+2
  8184                           
  8185                           ;doprnt.c: 1103: temp *= fval - (double)val;
  8186  000FCE  0060  F648  F134   	movff	sprintf@temp,___ftmul@f1
  8187  000FD4  0060  F64C  F135   	movff	sprintf@temp+1,___ftmul@f1+1
  8188  000FDA  0060  F650  F136   	movff	sprintf@temp+2,___ftmul@f1+2
  8189  000FE0  0060  F69C  F150   	movff	sprintf@fval,___ftadd@f2
  8190  000FE6  0060  F6A0  F151   	movff	sprintf@fval+1,___ftadd@f2+1
  8191  000FEC  0060  F6A4  F152   	movff	sprintf@fval+2,___ftadd@f2+2
  8192  000FF2  0060  F68C  F128   	movff	sprintf@val,___lltoft@c
  8193  000FF8  0060  F690  F129   	movff	sprintf@val+1,___lltoft@c+1
  8194  000FFE  0060  F694  F12A   	movff	sprintf@val+2,___lltoft@c+2
  8195  001004  0060  F698  F12B   	movff	sprintf@val+3,___lltoft@c+3
  8196  00100A  ECA7  F03F         	call	___lltoft	;wreg free
  8197  00100E  0060  F4A0  F131   	movff	?___lltoft,___ftneg@f1
  8198  001014  0060  F4A4  F132   	movff	?___lltoft+1,___ftneg@f1+1
  8199  00101A  0060  F4A8  F133   	movff	?___lltoft+2,___ftneg@f1+2
  8200  001020  ECD7  F044         	call	___ftneg	;wreg free
  8201  001024  0060  F4C4  F14D   	movff	?___ftneg,___ftadd@f1
  8202  00102A  0060  F4C8  F14E   	movff	?___ftneg+1,___ftadd@f1+1
  8203  001030  0060  F4CC  F14F   	movff	?___ftneg+2,___ftadd@f1+2
  8204  001036  ECC5  F02A         	call	___ftadd	;wreg free
  8205  00103A  0060  F534  F137   	movff	?___ftadd,___ftmul@f2
  8206  001040  0060  F538  F138   	movff	?___ftadd+1,___ftmul@f2+1
  8207  001046  0060  F53C  F139   	movff	?___ftadd+2,___ftmul@f2+2
  8208  00104C  EC5A  F032         	call	___ftmul	;wreg free
  8209  001050  0060  F4D0  F192   	movff	?___ftmul,sprintf@temp
  8210  001056  0060  F4D4  F193   	movff	?___ftmul+1,sprintf@temp+1
  8211  00105C  0060  F4D8  F194   	movff	?___ftmul+2,sprintf@temp+2
  8212                           
  8213                           ;doprnt.c: 1104: val = (unsigned long)temp;
  8214  001062  0060  F648  F119   	movff	sprintf@temp,___fttol@f1
  8215  001068  0060  F64C  F11A   	movff	sprintf@temp+1,___fttol@f1+1
  8216  00106E  0060  F650  F11B   	movff	sprintf@temp+2,___fttol@f1+2
  8217  001074  EC65  F033         	call	___fttol	;wreg free
  8218  001078  0060  F464  F1A3   	movff	?___fttol,sprintf@val
  8219  00107E  0060  F468  F1A4   	movff	?___fttol+1,sprintf@val+1
  8220  001084  0060  F46C  F1A5   	movff	?___fttol+2,sprintf@val+2
  8221  00108A  0060  F470  F1A6   	movff	?___fttol+3,sprintf@val+3
  8222                           
  8223                           ;doprnt.c: 1105: }
  8224                           ;doprnt.c: 1106: while(prec && val % 10 == 0) {
  8225  001090  D027               	goto	l1102
  8226  001092                     
  8227                           ;doprnt.c: 1107: val /= 10;
  8228  001092  0060  F68C  F105   	movff	sprintf@val,___lldiv@dividend
  8229  001098  0060  F690  F106   	movff	sprintf@val+1,___lldiv@dividend+1
  8230  00109E  0060  F694  F107   	movff	sprintf@val+2,___lldiv@dividend+2
  8231  0010A4  0060  F698  F108   	movff	sprintf@val+3,___lldiv@dividend+3
  8232  0010AA  0E0A               	movlw	10
  8233  0010AC  0101               	movlb	1	; () banked
  8234  0010AE  6F09               	movwf	___lldiv@divisor& (0+255),b
  8235  0010B0  0E00               	movlw	0
  8236  0010B2  6F0A               	movwf	(___lldiv@divisor+1)& (0+255),b
  8237  0010B4  0E00               	movlw	0
  8238  0010B6  6F0B               	movwf	(___lldiv@divisor+2)& (0+255),b
  8239  0010B8  0E00               	movlw	0
  8240  0010BA  6F0C               	movwf	(___lldiv@divisor+3)& (0+255),b
  8241  0010BC  EC34  F03C         	call	___lldiv	;wreg free
  8242  0010C0  0060  F414  F1A3   	movff	?___lldiv,sprintf@val
  8243  0010C6  0060  F418  F1A4   	movff	?___lldiv+1,sprintf@val+1
  8244  0010CC  0060  F41C  F1A5   	movff	?___lldiv+2,sprintf@val+2
  8245  0010D2  0060  F420  F1A6   	movff	?___lldiv+3,sprintf@val+3
  8246                           
  8247                           ;doprnt.c: 1108: prec--;
  8248  0010D8  0101               	movlb	1	; () banked
  8249  0010DA  07AA               	decf	sprintf@prec& (0+255),f,b
  8250  0010DC  A0D8               	btfss	16344,0,c
  8251  0010DE  07AB               	decf	(sprintf@prec+1)& (0+255),f,b
  8252  0010E0                     l1102:
  8253                           
  8254                           ; BSR set to: 1
  8255  0010E0  0101               	movlb	1	; () banked
  8256  0010E2  51AA               	movf	sprintf@prec& (0+255),w,b
  8257  0010E4  11AB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8258  0010E6  B4D8               	btfsc	16344,2,c
  8259  0010E8  D046               	goto	l1108
  8260                           
  8261                           ; BSR set to: 1
  8262  0010EA  0060  F68C  F112   	movff	sprintf@val,___llmod@dividend
  8263  0010F0  0060  F690  F113   	movff	sprintf@val+1,___llmod@dividend+1
  8264  0010F6  0060  F694  F114   	movff	sprintf@val+2,___llmod@dividend+2
  8265  0010FC  0060  F698  F115   	movff	sprintf@val+3,___llmod@dividend+3
  8266  001102  0E0A               	movlw	10
  8267  001104  6F16               	movwf	___llmod@divisor& (0+255),b
  8268  001106  0E00               	movlw	0
  8269  001108  6F17               	movwf	(___llmod@divisor+1)& (0+255),b
  8270  00110A  0E00               	movlw	0
  8271  00110C  6F18               	movwf	(___llmod@divisor+2)& (0+255),b
  8272  00110E  0E00               	movlw	0
  8273  001110  6F19               	movwf	(___llmod@divisor+3)& (0+255),b
  8274  001112  EC38  F03F         	call	___llmod	;wreg free
  8275  001116  0101               	movlb	1	; () banked
  8276  001118  5112               	movf	?___llmod& (0+255),w,b
  8277  00111A  1113               	iorwf	(?___llmod+1)& (0+255),w,b
  8278  00111C  1114               	iorwf	(?___llmod+2)& (0+255),w,b
  8279  00111E  1115               	iorwf	(?___llmod+3)& (0+255),w,b
  8280  001120  A4D8               	btfss	16344,2,c
  8281  001122  D029               	goto	l1108
  8282  001124  D7B6               	goto	l1103
  8283  001126                     l1096:
  8284                           
  8285                           ; BSR set to: 1
  8286                           ;doprnt.c: 1112: if(prec <= 12)
  8287                           
  8288                           ; BSR set to: 1
  8289  001126  BFAB               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8290  001128  D006               	goto	u17700
  8291  00112A  51AB               	movf	(sprintf@prec+1)& (0+255),w,b
  8292  00112C  E124               	bnz	l13006
  8293  00112E  0E0D               	movlw	13
  8294  001130  5DAA               	subwf	sprintf@prec& (0+255),w,b
  8295  001132  B0D8               	btfsc	16344,0,c
  8296  001134  D020               	goto	l1108
  8297  001136                     u17700:
  8298                           
  8299                           ; BSR set to: 1
  8300                           ;doprnt.c: 1113: fval += fround(prec);
  8301  001136  0060  F69C  F14D   	movff	sprintf@fval,___ftadd@f1
  8302  00113C  0060  F6A0  F14E   	movff	sprintf@fval+1,___ftadd@f1+1
  8303  001142  0060  F6A4  F14F   	movff	sprintf@fval+2,___ftadd@f1+2
  8304  001148  51AA               	movf	sprintf@prec& (0+255),w,b
  8305  00114A  ECDE  F023         	call	_fround
  8306  00114E  0060  F50C  F150   	movff	?_fround,___ftadd@f2
  8307  001154  0060  F510  F151   	movff	?_fround+1,___ftadd@f2+1
  8308  00115A  0060  F514  F152   	movff	?_fround+2,___ftadd@f2+2
  8309  001160  ECC5  F02A         	call	___ftadd	;wreg free
  8310  001164  0060  F534  F1A7   	movff	?___ftadd,sprintf@fval
  8311  00116A  0060  F538  F1A8   	movff	?___ftadd+1,sprintf@fval+1
  8312  001170  0060  F53C  F1A9   	movff	?___ftadd+2,sprintf@fval+2
  8313  001176                     l1108:
  8314  001176                     l13006:
  8315                           
  8316                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  8317  001176  0101               	movlb	1	; () banked
  8318  001178  BFA0               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8319  00117A  D006               	goto	u17710
  8320  00117C  51A0               	movf	(sprintf@exp+1)& (0+255),w,b
  8321  00117E  E122               	bnz	l13014
  8322  001180  0E0A               	movlw	10
  8323  001182  5D9F               	subwf	sprintf@exp& (0+255),w,b
  8324  001184  B0D8               	btfsc	16344,0,c
  8325  001186  D01E               	goto	u17740
  8326  001188                     u17710:
  8327                           
  8328                           ; BSR set to: 1
  8329  001188  51A7               	movf	sprintf@fval& (0+255),w,b
  8330  00118A  11A8               	iorwf	(sprintf@fval+1)& (0+255),w,b
  8331  00118C  11A9               	iorwf	(sprintf@fval+2)& (0+255),w,b
  8332  00118E  B4D8               	btfsc	16344,2,c
  8333  001190  D067               	goto	l1109
  8334                           
  8335                           ; BSR set to: 1
  8336  001192  0060  F69C  F119   	movff	sprintf@fval,___fttol@f1
  8337  001198  0060  F6A0  F11A   	movff	sprintf@fval+1,___fttol@f1+1
  8338  00119E  0060  F6A4  F11B   	movff	sprintf@fval+2,___fttol@f1+2
  8339  0011A4  EC65  F033         	call	___fttol	;wreg free
  8340  0011A8  0101               	movlb	1	; () banked
  8341  0011AA  5119               	movf	?___fttol& (0+255),w,b
  8342  0011AC  111A               	iorwf	(?___fttol+1)& (0+255),w,b
  8343  0011AE  111B               	iorwf	(?___fttol+2)& (0+255),w,b
  8344  0011B0  111C               	iorwf	(?___fttol+3)& (0+255),w,b
  8345  0011B2  B4D8               	btfsc	16344,2,c
  8346                           
  8347                           ; BSR set to: 1
  8348  0011B4  BFA0               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8349  0011B6  D054               	goto	l1109
  8350  0011B8  51A0               	movf	(sprintf@exp+1)& (0+255),w,b
  8351  0011BA  E104               	bnz	l13014
  8352  0011BC  0E02               	movlw	2
  8353  0011BE  5D9F               	subwf	sprintf@exp& (0+255),w,b
  8354  0011C0  A0D8               	btfss	16344,0,c
  8355  0011C2  D04E               	goto	l1109
  8356  0011C4                     u17740:
  8357  0011C4                     l13014:
  8358                           
  8359                           ; BSR set to: 1
  8360                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  8361  0011C4  0060  F66C  F159   	movff	sprintf@tmpval,___ftge@ff1
  8362  0011CA  0060  F670  F15A   	movff	sprintf@tmpval+1,___ftge@ff1+1
  8363  0011D0  0060  F674  F15B   	movff	sprintf@tmpval+2,___ftge@ff1+2
  8364  0011D6  0E70               	movlw	112
  8365  0011D8  6F5C               	movwf	___ftge@ff2& (0+255),b
  8366  0011DA  0E89               	movlw	137
  8367  0011DC  6F5D               	movwf	(___ftge@ff2+1)& (0+255),b
  8368  0011DE  0E40               	movlw	64
  8369  0011E0  6F5E               	movwf	(___ftge@ff2+2)& (0+255),b
  8370  0011E2  EC96  F03B         	call	___ftge	;wreg free
  8371  0011E6  0101               	movlb	1	; () banked
  8372  0011E8  B0D8               	btfsc	16344,0,c
  8373  0011EA  D002               	goto	l1112
  8374                           
  8375                           ; BSR set to: 1
  8376                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  8377  0011EC  0EF7               	movlw	247
  8378  0011EE  D001               	goto	L9
  8379  0011F0                     l1112:
  8380                           
  8381                           ; BSR set to: 1
  8382                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  8383                           
  8384                           ; BSR set to: 1
  8385  0011F0  0EF8               	movlw	248
  8386  0011F2                     L9:
  8387  0011F2  279F               	addwf	sprintf@exp& (0+255),f,b
  8388  0011F4  0EFF               	movlw	255
  8389  0011F6  23A0               	addwfc	(sprintf@exp+1)& (0+255),f,b
  8390                           
  8391                           ; BSR set to: 1
  8392                           ;doprnt.c: 1124: }
  8393                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  8394                           
  8395                           ; BSR set to: 1
  8396  0011F8  519F               	movf	sprintf@exp& (0+255),w,b
  8397  0011FA  EC0B  F01D         	call	_scale
  8398  0011FE  0060  F50C  F19B   	movff	?_scale,sprintf@tmpval
  8399  001204  0060  F510  F19C   	movff	?_scale+1,sprintf@tmpval+1
  8400  00120A  0060  F514  F19D   	movff	?_scale+2,sprintf@tmpval+2
  8401                           
  8402                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  8403  001210  0060  F69C  F105   	movff	sprintf@fval,__tdiv_to_l_@f1
  8404  001216  0060  F6A0  F106   	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  8405  00121C  0060  F6A4  F107   	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  8406  001222  0060  F66C  F108   	movff	sprintf@tmpval,__tdiv_to_l_@f2
  8407  001228  0060  F670  F109   	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  8408  00122E  0060  F674  F10A   	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  8409  001234  ECC5  F02E         	call	__tdiv_to_l_	;wreg free
  8410  001238  0060  F414  F1A3   	movff	?__tdiv_to_l_,sprintf@val
  8411  00123E  0060  F418  F1A4   	movff	?__tdiv_to_l_+1,sprintf@val+1
  8412  001244  0060  F41C  F1A5   	movff	?__tdiv_to_l_+2,sprintf@val+2
  8413  00124A  0060  F420  F1A6   	movff	?__tdiv_to_l_+3,sprintf@val+3
  8414                           
  8415                           ;doprnt.c: 1129: fval = 0.0;
  8416  001250  0E00               	movlw	0
  8417  001252  0101               	movlb	1	; () banked
  8418  001254  6FA7               	movwf	sprintf@fval& (0+255),b
  8419  001256  0E00               	movlw	0
  8420  001258  6FA8               	movwf	(sprintf@fval+1)& (0+255),b
  8421  00125A  0E00               	movlw	0
  8422  00125C  6FA9               	movwf	(sprintf@fval+2)& (0+255),b
  8423                           
  8424                           ;doprnt.c: 1130: } else {
  8425  00125E  D047               	goto	l1118
  8426  001260                     l1109:
  8427                           
  8428                           ; BSR set to: 1
  8429                           ;doprnt.c: 1131: val = (unsigned long)fval;
  8430                           
  8431                           ; BSR set to: 1
  8432  001260  0060  F69C  F119   	movff	sprintf@fval,___fttol@f1
  8433  001266  0060  F6A0  F11A   	movff	sprintf@fval+1,___fttol@f1+1
  8434  00126C  0060  F6A4  F11B   	movff	sprintf@fval+2,___fttol@f1+2
  8435  001272  EC65  F033         	call	___fttol	;wreg free
  8436  001276  0060  F464  F1A3   	movff	?___fttol,sprintf@val
  8437  00127C  0060  F468  F1A4   	movff	?___fttol+1,sprintf@val+1
  8438  001282  0060  F46C  F1A5   	movff	?___fttol+2,sprintf@val+2
  8439  001288  0060  F470  F1A6   	movff	?___fttol+3,sprintf@val+3
  8440                           
  8441                           ;doprnt.c: 1132: fval -= (double)val;
  8442  00128E  0060  F69C  F159   	movff	sprintf@fval,___ftsub@f1
  8443  001294  0060  F6A0  F15A   	movff	sprintf@fval+1,___ftsub@f1+1
  8444  00129A  0060  F6A4  F15B   	movff	sprintf@fval+2,___ftsub@f1+2
  8445  0012A0  0060  F68C  F128   	movff	sprintf@val,___lltoft@c
  8446  0012A6  0060  F690  F129   	movff	sprintf@val+1,___lltoft@c+1
  8447  0012AC  0060  F694  F12A   	movff	sprintf@val+2,___lltoft@c+2
  8448  0012B2  0060  F698  F12B   	movff	sprintf@val+3,___lltoft@c+3
  8449  0012B8  ECA7  F03F         	call	___lltoft	;wreg free
  8450  0012BC  0060  F4A0  F15C   	movff	?___lltoft,___ftsub@f2
  8451  0012C2  0060  F4A4  F15D   	movff	?___lltoft+1,___ftsub@f2+1
  8452  0012C8  0060  F4A8  F15E   	movff	?___lltoft+2,___ftsub@f2+2
  8453  0012CE  EC19  F042         	call	___ftsub	;wreg free
  8454  0012D2  0060  F564  F1A7   	movff	?___ftsub,sprintf@fval
  8455  0012D8  0060  F568  F1A8   	movff	?___ftsub+1,sprintf@fval+1
  8456  0012DE  0060  F56C  F1A9   	movff	?___ftsub+2,sprintf@fval+2
  8457                           
  8458                           ;doprnt.c: 1133: exp = 0;
  8459  0012E4  0E00               	movlw	0
  8460  0012E6  0101               	movlb	1	; () banked
  8461  0012E8  6FA0               	movwf	(sprintf@exp+1)& (0+255),b
  8462  0012EA  0E00               	movlw	0
  8463  0012EC  6F9F               	movwf	sprintf@exp& (0+255),b
  8464  0012EE                     l1118:
  8465                           
  8466                           ; BSR set to: 1
  8467                           ;doprnt.c: 1134: }
  8468                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8469                           
  8470                           ; BSR set to: 1
  8471  0012EE  0E01               	movlw	1
  8472  0012F0  6FAC               	movwf	sprintf@c& (0+255),b
  8473  0012F2                     l13034:
  8474                           
  8475                           ; BSR set to: 1
  8476  0012F2  0E0A               	movlw	10
  8477  0012F4  19AC               	xorwf	sprintf@c& (0+255),w,b
  8478  0012F6  B4D8               	btfsc	16344,2,c
  8479  0012F8  D01B               	goto	u17780
  8480                           
  8481                           ; BSR set to: 1
  8482                           ;doprnt.c: 1137: if(val < dpowers[c])
  8483                           
  8484                           ; BSR set to: 1
  8485                           
  8486                           ; BSR set to: 1
  8487  0012FA  51AC               	movf	sprintf@c& (0+255),w,b
  8488  0012FC  0D04               	mullw	4
  8489  0012FE  0ED9               	movlw	low _dpowers
  8490  001300  24F3               	addwf	16371,w,c
  8491  001302  6EF6               	movwf	16374,c
  8492  001304  0EFA               	movlw	high _dpowers
  8493  001306  20F4               	addwfc	16372,w,c
  8494  001308  6EF7               	movwf	16375,c
  8495  00130A                     	if	1	;There are 3 active tblptr bytes
  8496  00130A  6AF8               	clrf	16376,c
  8497  00130C  0E00               	movlw	low (__mediumconst shr (0+16))
  8498  00130E  22F8               	addwfc	16376,f,c
  8499  001310                     	endif
  8500  001310  0009               	tblrd		*+
  8501  001312  50F5               	movf	16373,w,c
  8502  001314  5DA3               	subwf	sprintf@val& (0+255),w,b
  8503  001316  0009               	tblrd		*+
  8504  001318  50F5               	movf	16373,w,c
  8505  00131A  59A4               	subwfb	(sprintf@val+1)& (0+255),w,b
  8506  00131C  0009               	tblrd		*+
  8507  00131E  50F5               	movf	16373,w,c
  8508  001320  59A5               	subwfb	(sprintf@val+2)& (0+255),w,b
  8509  001322  0009               	tblrd		*+
  8510  001324  50F5               	movf	16373,w,c
  8511  001326  59A6               	subwfb	(sprintf@val+3)& (0+255),w,b
  8512  001328  A0D8               	btfss	16344,0,c
  8513  00132A  D002               	goto	u17780
  8514                           
  8515                           ; BSR set to: 1
  8516                           
  8517                           ; BSR set to: 1
  8518                           
  8519                           ; BSR set to: 1
  8520                           ;doprnt.c: 1138: break;
  8521  00132C  2BAC               	incf	sprintf@c& (0+255),f,b
  8522  00132E  D7E1               	goto	l13034
  8523  001330                     u17780:
  8524                           
  8525                           ; BSR set to: 1
  8526                           ;doprnt.c: 1142: width -= prec + c + exp;
  8527                           
  8528                           ; BSR set to: 1
  8529  001330  0060  F6B0  F17C   	movff	sprintf@c,??_sprintf
  8530  001336  6B7D               	clrf	(??_sprintf+1)& (0+255),b
  8531  001338  BF7C               	btfsc	??_sprintf& (0+255),7,b
  8532  00133A  077D               	decf	(??_sprintf+1)& (0+255),f,b
  8533  00133C  51AA               	movf	sprintf@prec& (0+255),w,b
  8534  00133E  277C               	addwf	??_sprintf& (0+255),f,b
  8535  001340  51AB               	movf	(sprintf@prec+1)& (0+255),w,b
  8536  001342  237D               	addwfc	(??_sprintf+1)& (0+255),f,b
  8537  001344  519F               	movf	sprintf@exp& (0+255),w,b
  8538  001346  277C               	addwf	??_sprintf& (0+255),f,b
  8539  001348  51A0               	movf	(sprintf@exp+1)& (0+255),w,b
  8540  00134A  237D               	addwfc	(??_sprintf+1)& (0+255),f,b
  8541  00134C  517C               	movf	??_sprintf& (0+255),w,b
  8542  00134E  5FA1               	subwf	sprintf@width& (0+255),f,b
  8543  001350  517D               	movf	(??_sprintf+1)& (0+255),w,b
  8544  001352  5BA2               	subwfb	(sprintf@width+1)& (0+255),f,b
  8545                           
  8546                           ; BSR set to: 1
  8547                           ;doprnt.c: 1143: if(
  8548                           ;doprnt.c: 1145: flag & 0x800 ||
  8549                           ;doprnt.c: 1147: prec)
  8550  001354  B7AE               	btfsc	(sprintf@flag+1)& (0+255),3,b
  8551  001356  D004               	goto	u17800
  8552                           
  8553                           ; BSR set to: 1
  8554  001358  51AA               	movf	sprintf@prec& (0+255),w,b
  8555  00135A  11AB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8556  00135C  B4D8               	btfsc	16344,2,c
  8557  00135E  D003               	goto	l1122
  8558  001360                     u17800:
  8559                           
  8560                           ; BSR set to: 1
  8561                           ;doprnt.c: 1148: width--;
  8562                           
  8563                           ; BSR set to: 1
  8564  001360  07A1               	decf	sprintf@width& (0+255),f,b
  8565  001362  A0D8               	btfss	16344,0,c
  8566  001364  07A2               	decf	(sprintf@width+1)& (0+255),f,b
  8567  001366                     l1122:
  8568                           
  8569                           ; BSR set to: 1
  8570                           ;doprnt.c: 1149: if(flag & 0x03)
  8571                           
  8572                           ; BSR set to: 1
  8573  001366  0E03               	movlw	3
  8574  001368  15AD               	andwf	sprintf@flag& (0+255),w,b
  8575  00136A  6F7C               	movwf	??_sprintf& (0+255),b
  8576  00136C  0E00               	movlw	0
  8577  00136E  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
  8578  001370  6F7D               	movwf	(??_sprintf+1)& (0+255),b
  8579  001372  517C               	movf	??_sprintf& (0+255),w,b
  8580  001374  117D               	iorwf	(??_sprintf+1)& (0+255),w,b
  8581  001376  B4D8               	btfsc	16344,2,c
  8582  001378  D003               	goto	l1125
  8583                           
  8584                           ; BSR set to: 1
  8585                           ;doprnt.c: 1150: width--;
  8586  00137A  07A1               	decf	sprintf@width& (0+255),f,b
  8587  00137C  A0D8               	btfss	16344,0,c
  8588  00137E  07A2               	decf	(sprintf@width+1)& (0+255),f,b
  8589  001380                     l1125:
  8590                           
  8591                           ; BSR set to: 1
  8592                           ;doprnt.c: 1153: if(flag & 0x04) {
  8593                           
  8594                           ; BSR set to: 1
  8595  001380  A5AD               	btfss	sprintf@flag& (0+255),2,b
  8596  001382  D038               	goto	l1126
  8597                           
  8598                           ; BSR set to: 1
  8599                           ;doprnt.c: 1155: if(flag & 0x02)
  8600  001384  A3AD               	btfss	sprintf@flag& (0+255),1,b
  8601  001386  D014               	goto	l1127
  8602                           
  8603                           ; BSR set to: 1
  8604                           ;doprnt.c: 1159: ((*sp++ = (flag & 0x01 ? '-' : '+')));
  8605  001388  B1AD               	btfsc	sprintf@flag& (0+255),0,b
  8606  00138A  D004               	goto	l1129
  8607                           
  8608                           ; BSR set to: 1
  8609  00138C  0E00               	movlw	0
  8610  00138E  6F8B               	movwf	(_sprintf$2177+1)& (0+255),b
  8611  001390  0E2B               	movlw	43
  8612  001392  D003               	goto	L10
  8613  001394                     l1129:
  8614                           
  8615                           ; BSR set to: 1
  8616                           
  8617                           ; BSR set to: 1
  8618  001394  0E00               	movlw	0
  8619  001396  6F8B               	movwf	(_sprintf$2177+1)& (0+255),b
  8620  001398  0E2D               	movlw	45
  8621  00139A                     L10:
  8622  00139A  6F8A               	movwf	_sprintf$2177& (0+255),b
  8623                           
  8624                           ; BSR set to: 1
  8625                           
  8626                           ; BSR set to: 1
  8627  00139C  0060  F58B  FFD9   	movff	sprintf@sp,16345
  8628  0013A2  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  8629  0013A8  0060  F62B  FFDF   	movff	_sprintf$2177,16351
  8630  0013AE  D00A               	goto	l13074
  8631  0013B0                     l1127:
  8632                           
  8633                           ; BSR set to: 1
  8634                           ;doprnt.c: 1161: else
  8635                           ;doprnt.c: 1164: if(flag & 0x01)
  8636  0013B0  A1AD               	btfss	sprintf@flag& (0+255),0,b
  8637  0013B2  D018               	goto	l1134
  8638                           
  8639                           ; BSR set to: 1
  8640                           ;doprnt.c: 1165: ((*sp++ = (' ')));
  8641  0013B4  0060  F58B  FFD9   	movff	sprintf@sp,16345
  8642  0013BA  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  8643  0013C0  0E20               	movlw	32
  8644  0013C2  6EDF               	movwf	16351,c
  8645  0013C4                     l13074:
  8646                           
  8647                           ; BSR set to: 1
  8648  0013C4  4B62               	infsnz	sprintf@sp& (0+255),f,b
  8649  0013C6  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  8650                           
  8651                           ; BSR set to: 1
  8652                           ;doprnt.c: 1168: while(width > 0) {
  8653                           
  8654                           ; BSR set to: 1
  8655  0013C8  D00D               	goto	l1134
  8656  0013CA                     l13076:
  8657                           
  8658                           ; BSR set to: 1
  8659                           ;doprnt.c: 1169: ((*sp++ = ('0')));
  8660  0013CA  0060  F58B  FFD9   	movff	sprintf@sp,16345
  8661  0013D0  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  8662  0013D6  0E30               	movlw	48
  8663  0013D8  6EDF               	movwf	16351,c
  8664                           
  8665                           ; BSR set to: 1
  8666  0013DA  4B62               	infsnz	sprintf@sp& (0+255),f,b
  8667  0013DC  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  8668                           
  8669                           ; BSR set to: 1
  8670                           ;doprnt.c: 1170: width--;
  8671  0013DE  07A1               	decf	sprintf@width& (0+255),f,b
  8672  0013E0  A0D8               	btfss	16344,0,c
  8673  0013E2  07A2               	decf	(sprintf@width+1)& (0+255),f,b
  8674  0013E4                     l1134:
  8675                           
  8676                           ; BSR set to: 1
  8677                           
  8678                           ; BSR set to: 1
  8679  0013E4  BFA2               	btfsc	(sprintf@width+1)& (0+255),7,b
  8680  0013E6  D0A1               	goto	l1149
  8681  0013E8  51A2               	movf	(sprintf@width+1)& (0+255),w,b
  8682  0013EA  E1EF               	bnz	l13076
  8683  0013EC  05A1               	decf	sprintf@width& (0+255),w,b
  8684  0013EE  A0D8               	btfss	16344,0,c
  8685  0013F0  D09C               	goto	l1149
  8686  0013F2  D7EB               	goto	l1135
  8687  0013F4                     l1126:
  8688                           
  8689                           ; BSR set to: 1
  8690                           ;doprnt.c: 1175: {
  8691                           ;doprnt.c: 1177: if(!(flag & 0x08))
  8692  0013F4  A7AD               	btfss	sprintf@flag& (0+255),3,b
  8693  0013F6  D00E               	goto	l1139
  8694  0013F8  D014               	goto	u17880
  8695  0013FA                     l13086:
  8696                           
  8697                           ; BSR set to: 1
  8698                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  8699  0013FA  0060  F58B  FFD9   	movff	sprintf@sp,16345
  8700  001400  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  8701  001406  0E20               	movlw	32
  8702  001408  6EDF               	movwf	16351,c
  8703                           
  8704                           ; BSR set to: 1
  8705  00140A  4B62               	infsnz	sprintf@sp& (0+255),f,b
  8706  00140C  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  8707                           
  8708                           ; BSR set to: 1
  8709                           ;doprnt.c: 1182: width--;
  8710  00140E  07A1               	decf	sprintf@width& (0+255),f,b
  8711  001410  A0D8               	btfss	16344,0,c
  8712  001412  07A2               	decf	(sprintf@width+1)& (0+255),f,b
  8713  001414                     l1139:
  8714                           
  8715                           ; BSR set to: 1
  8716                           
  8717                           ; BSR set to: 1
  8718  001414  BFA2               	btfsc	(sprintf@width+1)& (0+255),7,b
  8719  001416  D005               	goto	u17880
  8720  001418  51A2               	movf	(sprintf@width+1)& (0+255),w,b
  8721  00141A  E1EF               	bnz	l13086
  8722  00141C  05A1               	decf	sprintf@width& (0+255),w,b
  8723  00141E  B0D8               	btfsc	16344,0,c
  8724  001420  D7EC               	goto	l1140
  8725  001422                     u17880:
  8726                           
  8727                           ; BSR set to: 1
  8728                           ;doprnt.c: 1183: }
  8729                           ;doprnt.c: 1186: if(flag & 0x02)
  8730                           
  8731                           ; BSR set to: 1
  8732  001422  A3AD               	btfss	sprintf@flag& (0+255),1,b
  8733  001424  D014               	goto	l1142
  8734                           
  8735                           ; BSR set to: 1
  8736                           ;doprnt.c: 1190: ((*sp++ = (flag & 0x01 ? '-' : '+')));
  8737  001426  B1AD               	btfsc	sprintf@flag& (0+255),0,b
  8738  001428  D004               	goto	l1144
  8739                           
  8740                           ; BSR set to: 1
  8741  00142A  0E00               	movlw	0
  8742  00142C  6F8D               	movwf	(_sprintf$2178+1)& (0+255),b
  8743  00142E  0E2B               	movlw	43
  8744  001430  D003               	goto	L11
  8745  001432                     l1144:
  8746                           
  8747                           ; BSR set to: 1
  8748                           
  8749                           ; BSR set to: 1
  8750  001432  0E00               	movlw	0
  8751  001434  6F8D               	movwf	(_sprintf$2178+1)& (0+255),b
  8752  001436  0E2D               	movlw	45
  8753  001438                     L11:
  8754  001438  6F8C               	movwf	_sprintf$2178& (0+255),b
  8755                           
  8756                           ; BSR set to: 1
  8757                           
  8758                           ; BSR set to: 1
  8759  00143A  0060  F58B  FFD9   	movff	sprintf@sp,16345
  8760  001440  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  8761  001446  0060  F633  FFDF   	movff	_sprintf$2178,16351
  8762  00144C  D06C               	goto	L37
  8763  00144E                     l1142:
  8764                           
  8765                           ; BSR set to: 1
  8766                           ;doprnt.c: 1192: else if(flag & 0x01)
  8767  00144E  A1AD               	btfss	sprintf@flag& (0+255),0,b
  8768  001450  D06C               	goto	l1149
  8769                           
  8770                           ; BSR set to: 1
  8771                           ;doprnt.c: 1193: ((*sp++ = (' ')));
  8772  001452  0060  F58B  FFD9   	movff	sprintf@sp,16345
  8773  001458  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  8774  00145E  0E20               	movlw	32
  8775  001460  D061               	goto	L12
  8776  001462                     
  8777                           ; BSR set to: 1
  8778                           ;doprnt.c: 1200: {
  8779                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  8780                           
  8781                           ; BSR set to: 1
  8782  001462  0060  F68C  F105   	movff	sprintf@val,___lldiv@dividend
  8783  001468  0060  F690  F106   	movff	sprintf@val+1,___lldiv@dividend+1
  8784  00146E  0060  F694  F107   	movff	sprintf@val+2,___lldiv@dividend+2
  8785  001474  0060  F698  F108   	movff	sprintf@val+3,___lldiv@dividend+3
  8786  00147A  51AC               	movf	sprintf@c& (0+255),w,b
  8787  00147C  0D04               	mullw	4
  8788  00147E  0ED9               	movlw	low _dpowers
  8789  001480  24F3               	addwf	16371,w,c
  8790  001482  6EF6               	movwf	16374,c
  8791  001484  0EFA               	movlw	high _dpowers
  8792  001486  20F4               	addwfc	16372,w,c
  8793  001488  6EF7               	movwf	16375,c
  8794  00148A                     	if	1	;There are 3 active tblptr bytes
  8795  00148A  6AF8               	clrf	16376,c
  8796  00148C  0E00               	movlw	low (__mediumconst shr (0+16))
  8797  00148E  22F8               	addwfc	16376,f,c
  8798  001490                     	endif
  8799  001490  0009               	tblrd		*+
  8800  001492  006F FFD4  F109    	movff	16373,___lldiv@divisor
  8801  001498  0009               	tblrd		*+
  8802  00149A  006F FFD4  F10A    	movff	16373,___lldiv@divisor+1
  8803  0014A0  0009               	tblrd		*+
  8804  0014A2  006F FFD4  F10B    	movff	16373,___lldiv@divisor+2
  8805  0014A8  000A               	tblrd		*-
  8806  0014AA  006F FFD4  F10C    	movff	16373,___lldiv@divisor+3
  8807  0014B0  EC34  F03C         	call	___lldiv	;wreg free
  8808  0014B4  0060  F414  F19B   	movff	?___lldiv,sprintf@tmpval
  8809  0014BA  0060  F418  F19C   	movff	?___lldiv+1,sprintf@tmpval+1
  8810  0014C0  0060  F41C  F19D   	movff	?___lldiv+2,sprintf@tmpval+2
  8811  0014C6  0060  F420  F19E   	movff	?___lldiv+3,sprintf@tmpval+3
  8812                           
  8813                           ;doprnt.c: 1202: tmpval.vd %= 10;
  8814  0014CC  0060  F66C  F112   	movff	sprintf@tmpval,___llmod@dividend
  8815  0014D2  0060  F670  F113   	movff	sprintf@tmpval+1,___llmod@dividend+1
  8816  0014D8  0060  F674  F114   	movff	sprintf@tmpval+2,___llmod@dividend+2
  8817  0014DE  0060  F678  F115   	movff	sprintf@tmpval+3,___llmod@dividend+3
  8818  0014E4  0E0A               	movlw	10
  8819  0014E6  0101               	movlb	1	; () banked
  8820  0014E8  6F16               	movwf	___llmod@divisor& (0+255),b
  8821  0014EA  0E00               	movlw	0
  8822  0014EC  6F17               	movwf	(___llmod@divisor+1)& (0+255),b
  8823  0014EE  0E00               	movlw	0
  8824  0014F0  6F18               	movwf	(___llmod@divisor+2)& (0+255),b
  8825  0014F2  0E00               	movlw	0
  8826  0014F4  6F19               	movwf	(___llmod@divisor+3)& (0+255),b
  8827  0014F6  EC38  F03F         	call	___llmod	;wreg free
  8828  0014FA  0060  F448  F19B   	movff	?___llmod,sprintf@tmpval
  8829  001500  0060  F44C  F19C   	movff	?___llmod+1,sprintf@tmpval+1
  8830  001506  0060  F450  F19D   	movff	?___llmod+2,sprintf@tmpval+2
  8831  00150C  0060  F454  F19E   	movff	?___llmod+3,sprintf@tmpval+3
  8832                           
  8833                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  8834  001512  0101               	movlb	1	; () banked
  8835  001514  519B               	movf	sprintf@tmpval& (0+255),w,b
  8836  001516  0F30               	addlw	48
  8837  001518  0060  F58B  FFD9   	movff	sprintf@sp,16345
  8838  00151E  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  8839  001524                     L12:
  8840  001524  6EDF               	movwf	16351,c
  8841  001526                     L37:
  8842                           
  8843                           ; BSR set to: 1
  8844  001526  4B62               	infsnz	sprintf@sp& (0+255),f,b
  8845  001528  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  8846  00152A                     l1149:
  8847                           
  8848                           ; BSR set to: 1
  8849                           
  8850                           ; BSR set to: 1
  8851  00152A  07AC               	decf	sprintf@c& (0+255),f,b
  8852  00152C  29AC               	incf	sprintf@c& (0+255),w,b
  8853  00152E  B4D8               	btfsc	16344,2,c
  8854  001530  D00E               	goto	l1152
  8855  001532  D797               	goto	l1150
  8856  001534                     l13118:
  8857                           
  8858                           ; BSR set to: 1
  8859                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  8860  001534  0060  F58B  FFD9   	movff	sprintf@sp,16345
  8861  00153A  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  8862  001540  0E30               	movlw	48
  8863  001542  6EDF               	movwf	16351,c
  8864                           
  8865                           ; BSR set to: 1
  8866  001544  4B62               	infsnz	sprintf@sp& (0+255),f,b
  8867  001546  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  8868                           
  8869                           ; BSR set to: 1
  8870                           ;doprnt.c: 1209: exp--;
  8871  001548  079F               	decf	sprintf@exp& (0+255),f,b
  8872  00154A  A0D8               	btfss	16344,0,c
  8873  00154C  07A0               	decf	(sprintf@exp+1)& (0+255),f,b
  8874  00154E                     l1152:
  8875                           
  8876                           ; BSR set to: 1
  8877                           
  8878                           ; BSR set to: 1
  8879  00154E  BFA0               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8880  001550  D005               	goto	u17930
  8881  001552  51A0               	movf	(sprintf@exp+1)& (0+255),w,b
  8882  001554  E1EF               	bnz	l13118
  8883  001556  059F               	decf	sprintf@exp& (0+255),w,b
  8884  001558  B0D8               	btfsc	16344,0,c
  8885  00155A  D7EC               	goto	l1153
  8886  00155C                     u17930:
  8887                           
  8888                           ; BSR set to: 1
  8889                           ;doprnt.c: 1210: }
  8890                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  8891                           
  8892                           ; BSR set to: 1
  8893  00155C  BFAB               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8894  00155E  D009               	goto	l1155
  8895  001560  51AB               	movf	(sprintf@prec+1)& (0+255),w,b
  8896  001562  E104               	bnz	u17940
  8897  001564  0E09               	movlw	9
  8898  001566  5DAA               	subwf	sprintf@prec& (0+255),w,b
  8899  001568  A0D8               	btfss	16344,0,c
  8900  00156A  D003               	goto	l1155
  8901  00156C                     u17940:
  8902                           
  8903                           ; BSR set to: 1
  8904                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  8905  00156C  0E08               	movlw	8
  8906  00156E  6FAC               	movwf	sprintf@c& (0+255),b
  8907  001570  D003               	goto	l1156
  8908  001572                     l1155:
  8909                           
  8910                           ; BSR set to: 1
  8911                           ;doprnt.c: 1213: else
  8912                           ;doprnt.c: 1214: c = prec;
  8913  001572  0060  F6A8  F1AC   	movff	sprintf@prec,sprintf@c
  8914  001578                     l1156:
  8915                           
  8916                           ; BSR set to: 1
  8917                           ;doprnt.c: 1215: prec -= c;
  8918                           
  8919                           ; BSR set to: 1
  8920  001578  51AC               	movf	sprintf@c& (0+255),w,b
  8921  00157A  5FAA               	subwf	sprintf@prec& (0+255),f,b
  8922  00157C  0E00               	movlw	0
  8923  00157E  BFAC               	btfsc	sprintf@c& (0+255),7,b
  8924  001580  0EFF               	movlw	255
  8925  001582  5BAB               	subwfb	(sprintf@prec+1)& (0+255),f,b
  8926                           
  8927                           ; BSR set to: 1
  8928                           ;doprnt.c: 1217: if(c || flag & 0x800)
  8929  001584  51AC               	movf	sprintf@c& (0+255),w,b
  8930  001586  A4D8               	btfss	16344,2,c
  8931  001588  D002               	goto	u17960
  8932                           
  8933                           ; BSR set to: 1
  8934  00158A  A7AE               	btfss	(sprintf@flag+1)& (0+255),3,b
  8935  00158C  D00A               	goto	l1157
  8936  00158E                     u17960:
  8937                           
  8938                           ; BSR set to: 1
  8939                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  8940                           
  8941                           ; BSR set to: 1
  8942  00158E  0060  F58B  FFD9   	movff	sprintf@sp,16345
  8943  001594  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  8944  00159A  0E2E               	movlw	46
  8945  00159C  6EDF               	movwf	16351,c
  8946                           
  8947                           ; BSR set to: 1
  8948  00159E  4B62               	infsnz	sprintf@sp& (0+255),f,b
  8949  0015A0  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  8950  0015A2                     l1157:
  8951                           
  8952                           ; BSR set to: 1
  8953                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8954                           
  8955                           ; BSR set to: 1
  8956  0015A2  51AC               	movf	sprintf@c& (0+255),w,b
  8957  0015A4  EC0B  F01D         	call	_scale
  8958  0015A8  0060  F50C  F182   	movff	?_scale,_sprintf$2795
  8959  0015AE  0060  F510  F183   	movff	?_scale+1,_sprintf$2795+1
  8960  0015B4  0060  F514  F184   	movff	?_scale+2,_sprintf$2795+2
  8961                           
  8962                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8963  0015BA  0060  F69C  F137   	movff	sprintf@fval,___ftmul@f2
  8964  0015C0  0060  F6A0  F138   	movff	sprintf@fval+1,___ftmul@f2+1
  8965  0015C6  0060  F6A4  F139   	movff	sprintf@fval+2,___ftmul@f2+2
  8966  0015CC  0060  F608  F134   	movff	_sprintf$2795,___ftmul@f1
  8967  0015D2  0060  F60C  F135   	movff	_sprintf$2795+1,___ftmul@f1+1
  8968  0015D8  0060  F610  F136   	movff	_sprintf$2795+2,___ftmul@f1+2
  8969  0015DE  EC5A  F032         	call	___ftmul	;wreg free
  8970  0015E2  0060  F4D0  F119   	movff	?___ftmul,___fttol@f1
  8971  0015E8  0060  F4D4  F11A   	movff	?___ftmul+1,___fttol@f1+1
  8972  0015EE  0060  F4D8  F11B   	movff	?___ftmul+2,___fttol@f1+2
  8973  0015F4  EC65  F033         	call	___fttol	;wreg free
  8974  0015F8  0060  F464  F1A3   	movff	?___fttol,sprintf@val
  8975  0015FE  0060  F468  F1A4   	movff	?___fttol+1,sprintf@val+1
  8976  001604  0060  F46C  F1A5   	movff	?___fttol+2,sprintf@val+2
  8977  00160A  0060  F470  F1A6   	movff	?___fttol+3,sprintf@val+3
  8978                           
  8979                           ;doprnt.c: 1228: while(c--) {
  8980  001610  D09A               	goto	l1160
  8981  001612                     
  8982                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  8983  001612  0060  F68C  F105   	movff	sprintf@val,___lldiv@dividend
  8984  001618  0060  F690  F106   	movff	sprintf@val+1,___lldiv@dividend+1
  8985  00161E  0060  F694  F107   	movff	sprintf@val+2,___lldiv@dividend+2
  8986  001624  0060  F698  F108   	movff	sprintf@val+3,___lldiv@dividend+3
  8987  00162A  0101               	movlb	1	; () banked
  8988  00162C  51AC               	movf	sprintf@c& (0+255),w,b
  8989  00162E  0D04               	mullw	4
  8990  001630  0ED9               	movlw	low _dpowers
  8991  001632  24F3               	addwf	16371,w,c
  8992  001634  6EF6               	movwf	16374,c
  8993  001636  0EFA               	movlw	high _dpowers
  8994  001638  20F4               	addwfc	16372,w,c
  8995  00163A  6EF7               	movwf	16375,c
  8996  00163C                     	if	1	;There are 3 active tblptr bytes
  8997  00163C  6AF8               	clrf	16376,c
  8998  00163E  0E00               	movlw	low (__mediumconst shr (0+16))
  8999  001640  22F8               	addwfc	16376,f,c
  9000  001642                     	endif
  9001  001642  0009               	tblrd		*+
  9002  001644  006F FFD4  F109    	movff	16373,___lldiv@divisor
  9003  00164A  0009               	tblrd		*+
  9004  00164C  006F FFD4  F10A    	movff	16373,___lldiv@divisor+1
  9005  001652  0009               	tblrd		*+
  9006  001654  006F FFD4  F10B    	movff	16373,___lldiv@divisor+2
  9007  00165A  000A               	tblrd		*-
  9008  00165C  006F FFD4  F10C    	movff	16373,___lldiv@divisor+3
  9009  001662  EC34  F03C         	call	___lldiv	;wreg free
  9010  001666  0060  F414  F19B   	movff	?___lldiv,sprintf@tmpval
  9011  00166C  0060  F418  F19C   	movff	?___lldiv+1,sprintf@tmpval+1
  9012  001672  0060  F41C  F19D   	movff	?___lldiv+2,sprintf@tmpval+2
  9013  001678  0060  F420  F19E   	movff	?___lldiv+3,sprintf@tmpval+3
  9014                           
  9015                           ;doprnt.c: 1230: tmpval.vd %= 10;
  9016  00167E  0060  F66C  F112   	movff	sprintf@tmpval,___llmod@dividend
  9017  001684  0060  F670  F113   	movff	sprintf@tmpval+1,___llmod@dividend+1
  9018  00168A  0060  F674  F114   	movff	sprintf@tmpval+2,___llmod@dividend+2
  9019  001690  0060  F678  F115   	movff	sprintf@tmpval+3,___llmod@dividend+3
  9020  001696  0E0A               	movlw	10
  9021  001698  0101               	movlb	1	; () banked
  9022  00169A  6F16               	movwf	___llmod@divisor& (0+255),b
  9023  00169C  0E00               	movlw	0
  9024  00169E  6F17               	movwf	(___llmod@divisor+1)& (0+255),b
  9025  0016A0  0E00               	movlw	0
  9026  0016A2  6F18               	movwf	(___llmod@divisor+2)& (0+255),b
  9027  0016A4  0E00               	movlw	0
  9028  0016A6  6F19               	movwf	(___llmod@divisor+3)& (0+255),b
  9029  0016A8  EC38  F03F         	call	___llmod	;wreg free
  9030  0016AC  0060  F448  F19B   	movff	?___llmod,sprintf@tmpval
  9031  0016B2  0060  F44C  F19C   	movff	?___llmod+1,sprintf@tmpval+1
  9032  0016B8  0060  F450  F19D   	movff	?___llmod+2,sprintf@tmpval+2
  9033  0016BE  0060  F454  F19E   	movff	?___llmod+3,sprintf@tmpval+3
  9034                           
  9035                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  9036  0016C4  0101               	movlb	1	; () banked
  9037  0016C6  519B               	movf	sprintf@tmpval& (0+255),w,b
  9038  0016C8  0F30               	addlw	48
  9039  0016CA  0060  F58B  FFD9   	movff	sprintf@sp,16345
  9040  0016D0  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  9041  0016D6  6EDF               	movwf	16351,c
  9042                           
  9043                           ; BSR set to: 1
  9044  0016D8  4B62               	infsnz	sprintf@sp& (0+255),f,b
  9045  0016DA  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  9046                           
  9047                           ; BSR set to: 1
  9048                           ;doprnt.c: 1232: val %= dpowers[c];
  9049  0016DC  0060  F68C  F112   	movff	sprintf@val,___llmod@dividend
  9050  0016E2  0060  F690  F113   	movff	sprintf@val+1,___llmod@dividend+1
  9051  0016E8  0060  F694  F114   	movff	sprintf@val+2,___llmod@dividend+2
  9052  0016EE  0060  F698  F115   	movff	sprintf@val+3,___llmod@dividend+3
  9053  0016F4  51AC               	movf	sprintf@c& (0+255),w,b
  9054  0016F6  0D04               	mullw	4
  9055  0016F8  0ED9               	movlw	low _dpowers
  9056  0016FA  24F3               	addwf	16371,w,c
  9057  0016FC  6EF6               	movwf	16374,c
  9058  0016FE  0EFA               	movlw	high _dpowers
  9059  001700  20F4               	addwfc	16372,w,c
  9060  001702  6EF7               	movwf	16375,c
  9061  001704                     	if	1	;There are 3 active tblptr bytes
  9062  001704  6AF8               	clrf	16376,c
  9063  001706  0E00               	movlw	low (__mediumconst shr (0+16))
  9064  001708  22F8               	addwfc	16376,f,c
  9065  00170A                     	endif
  9066  00170A  0009               	tblrd		*+
  9067  00170C  006F FFD4  F116    	movff	16373,___llmod@divisor
  9068  001712  0009               	tblrd		*+
  9069  001714  006F FFD4  F117    	movff	16373,___llmod@divisor+1
  9070  00171A  0009               	tblrd		*+
  9071  00171C  006F FFD4  F118    	movff	16373,___llmod@divisor+2
  9072  001722  000A               	tblrd		*-
  9073  001724  006F FFD4  F119    	movff	16373,___llmod@divisor+3
  9074  00172A  EC38  F03F         	call	___llmod	;wreg free
  9075  00172E  0060  F448  F1A3   	movff	?___llmod,sprintf@val
  9076  001734  0060  F44C  F1A4   	movff	?___llmod+1,sprintf@val+1
  9077  00173A  0060  F450  F1A5   	movff	?___llmod+2,sprintf@val+2
  9078  001740  0060  F454  F1A6   	movff	?___llmod+3,sprintf@val+3
  9079  001746                     l1160:
  9080  001746  0101               	movlb	1	; () banked
  9081  001748  07AC               	decf	sprintf@c& (0+255),f,b
  9082  00174A  29AC               	incf	sprintf@c& (0+255),w,b
  9083  00174C  B4D8               	btfsc	16344,2,c
  9084  00174E  D00E               	goto	l1163
  9085  001750  D760               	goto	l1161
  9086  001752                     
  9087                           ; BSR set to: 1
  9088                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  9089                           
  9090                           ; BSR set to: 1
  9091  001752  0060  F58B  FFD9   	movff	sprintf@sp,16345
  9092  001758  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  9093  00175E  0E30               	movlw	48
  9094  001760  6EDF               	movwf	16351,c
  9095                           
  9096                           ; BSR set to: 1
  9097  001762  4B62               	infsnz	sprintf@sp& (0+255),f,b
  9098  001764  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  9099                           
  9100                           ; BSR set to: 1
  9101                           ;doprnt.c: 1237: prec--;
  9102  001766  07AA               	decf	sprintf@prec& (0+255),f,b
  9103  001768  A0D8               	btfss	16344,0,c
  9104  00176A  07AB               	decf	(sprintf@prec+1)& (0+255),f,b
  9105  00176C                     l1163:
  9106                           
  9107                           ; BSR set to: 1
  9108                           
  9109                           ; BSR set to: 1
  9110  00176C  51AA               	movf	sprintf@prec& (0+255),w,b
  9111  00176E  11AB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  9112  001770  A4D8               	btfss	16344,2,c
  9113  001772  D7EF               	goto	l1164
  9114                           
  9115                           ; BSR set to: 1
  9116                           ;doprnt.c: 1238: }
  9117                           ;doprnt.c: 1240: if((flag & 0x08) && width > 0)
  9118  001774  B7AD               	btfsc	sprintf@flag& (0+255),3,b
  9119                           
  9120                           ; BSR set to: 1
  9121  001776  BFA2               	btfsc	(sprintf@width+1)& (0+255),7,b
  9122  001778  D2DE               	goto	u18400
  9123  00177A  51A2               	movf	(sprintf@width+1)& (0+255),w,b
  9124  00177C  E103               	bnz	l13166
  9125  00177E  05A1               	decf	sprintf@width& (0+255),w,b
  9126  001780  A0D8               	btfss	16344,0,c
  9127  001782  D2D9               	goto	u18400
  9128  001784                     u18000:
  9129  001784                     l13166:
  9130                           
  9131                           ; BSR set to: 1
  9132                           ;doprnt.c: 1242: ((*sp++ = (' ')));
  9133  001784  0060  F58B  FFD9   	movff	sprintf@sp,16345
  9134  00178A  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  9135  001790  0E20               	movlw	32
  9136  001792  6EDF               	movwf	16351,c
  9137                           
  9138                           ; BSR set to: 1
  9139  001794  4B62               	infsnz	sprintf@sp& (0+255),f,b
  9140  001796  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  9141                           
  9142                           ; BSR set to: 1
  9143                           ;doprnt.c: 1243: while(--width);
  9144  001798  07A1               	decf	sprintf@width& (0+255),f,b
  9145  00179A  A0D8               	btfss	16344,0,c
  9146  00179C  07A2               	decf	(sprintf@width+1)& (0+255),f,b
  9147  00179E  51A1               	movf	sprintf@width& (0+255),w,b
  9148  0017A0  11A2               	iorwf	(sprintf@width+1)& (0+255),w,b
  9149  0017A2  B4D8               	btfsc	16344,2,c
  9150  0017A4  D2C8               	goto	u18400
  9151  0017A6  D7EE               	goto	u18000
  9152  0017A8                     l1021:
  9153                           
  9154                           ; BSR set to: 1
  9155                           ;doprnt.c: 1246: }
  9156                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  9157  0017A8  BFAD               	btfsc	sprintf@flag& (0+255),7,b
  9158  0017AA  D038               	goto	l1169
  9159                           
  9160                           ; BSR set to: 1
  9161                           ;doprnt.c: 1253: {
  9162                           ;doprnt.c: 1255: if(flag & 0x10)
  9163  0017AC  A9AD               	btfss	sprintf@flag& (0+255),4,b
  9164  0017AE  D014               	goto	l1170
  9165                           
  9166                           ; BSR set to: 1
  9167                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  9168  0017B0  0060  F667  FFD9   	movff	sprintf@ap,16345
  9169  0017B6  0060  F66B  FFDA   	movff	sprintf@ap+1,16346
  9170  0017BC  006F FF78  F1A3    	movff	16350,sprintf@val
  9171  0017C2  006F FF78  F1A4    	movff	16350,sprintf@val+1
  9172  0017C8  006F FF78  F1A5    	movff	16350,sprintf@val+2
  9173  0017CE  006F FF78  F1A6    	movff	16350,sprintf@val+3
  9174                           
  9175                           ; BSR set to: 1
  9176  0017D4  0E04               	movlw	4
  9177  0017D6  D012               	goto	L13
  9178  0017D8                     l1170:
  9179                           
  9180                           ; BSR set to: 1
  9181                           ;doprnt.c: 1257: else
  9182                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  9183                           
  9184                           ; BSR set to: 1
  9185  0017D8  0060  F667  FFD9   	movff	sprintf@ap,16345
  9186  0017DE  0060  F66B  FFDA   	movff	sprintf@ap+1,16346
  9187  0017E4  006F FF78  F1A3    	movff	16350,sprintf@val
  9188  0017EA  006F FF74  F1A4    	movff	16349,sprintf@val+1
  9189  0017F0  0E00               	movlw	0
  9190  0017F2  BFA4               	btfsc	(sprintf@val+1)& (0+255),7,b
  9191  0017F4  0EFF               	movlw	-1
  9192  0017F6  6FA5               	movwf	(sprintf@val+2)& (0+255),b
  9193  0017F8  6FA6               	movwf	(sprintf@val+3)& (0+255),b
  9194                           
  9195                           ; BSR set to: 1
  9196  0017FA  0E02               	movlw	2
  9197  0017FC                     L13:
  9198  0017FC  2799               	addwf	sprintf@ap& (0+255),f,b
  9199  0017FE  0E00               	movlw	0
  9200  001800  239A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  9201                           
  9202                           ; BSR set to: 1
  9203                           ;doprnt.c: 1261: if((long)val < 0) {
  9204                           
  9205                           ; BSR set to: 1
  9206  001802  AFA6               	btfss	(sprintf@val+3)& (0+255),7,b
  9207  001804  D039               	goto	l1175
  9208                           
  9209                           ; BSR set to: 1
  9210                           ;doprnt.c: 1262: flag |= 0x03;
  9211  001806  0E03               	movlw	3
  9212  001808  13AD               	iorwf	sprintf@flag& (0+255),f,b
  9213                           
  9214                           ; BSR set to: 1
  9215                           ;doprnt.c: 1263: val = -val;
  9216  00180A  1FA6               	comf	(sprintf@val+3)& (0+255),f,b
  9217  00180C  1FA5               	comf	(sprintf@val+2)& (0+255),f,b
  9218  00180E  1FA4               	comf	(sprintf@val+1)& (0+255),f,b
  9219  001810  6DA3               	negf	sprintf@val& (0+255),b
  9220  001812  0E00               	movlw	0
  9221  001814  23A4               	addwfc	(sprintf@val+1)& (0+255),f,b
  9222  001816  23A5               	addwfc	(sprintf@val+2)& (0+255),f,b
  9223  001818  23A6               	addwfc	(sprintf@val+3)& (0+255),f,b
  9224                           
  9225                           ; BSR set to: 1
  9226                           ;doprnt.c: 1264: }
  9227                           ;doprnt.c: 1266: }
  9228  00181A  D02E               	goto	l1175
  9229  00181C                     l1169:
  9230                           
  9231                           ; BSR set to: 1
  9232                           ;doprnt.c: 1268: else
  9233                           ;doprnt.c: 1273: {
  9234                           ;doprnt.c: 1281: if(flag & 0x10)
  9235  00181C  A9AD               	btfss	sprintf@flag& (0+255),4,b
  9236  00181E  D014               	goto	l1174
  9237                           
  9238                           ; BSR set to: 1
  9239                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  9240  001820  0060  F667  FFD9   	movff	sprintf@ap,16345
  9241  001826  0060  F66B  FFDA   	movff	sprintf@ap+1,16346
  9242  00182C  006F FF78  F1A3    	movff	16350,sprintf@val
  9243  001832  006F FF78  F1A4    	movff	16350,sprintf@val+1
  9244  001838  006F FF78  F1A5    	movff	16350,sprintf@val+2
  9245  00183E  006F FF78  F1A6    	movff	16350,sprintf@val+3
  9246                           
  9247                           ; BSR set to: 1
  9248  001844  0E04               	movlw	4
  9249  001846  D015               	goto	L14
  9250  001848                     l1174:
  9251                           
  9252                           ; BSR set to: 1
  9253                           ;doprnt.c: 1283: else
  9254                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  9255                           
  9256                           ; BSR set to: 1
  9257  001848  0060  F667  FFD9   	movff	sprintf@ap,16345
  9258  00184E  0060  F66B  FFDA   	movff	sprintf@ap+1,16346
  9259  001854  006F FF78  F17C    	movff	16350,??_sprintf
  9260  00185A  006F FF74  F17D    	movff	16349,??_sprintf+1
  9261  001860  0060  F5F0  F1A3   	movff	??_sprintf,sprintf@val
  9262  001866  0060  F5F4  F1A4   	movff	??_sprintf+1,sprintf@val+1
  9263  00186C  6BA5               	clrf	(sprintf@val+2)& (0+255),b
  9264  00186E  6BA6               	clrf	(sprintf@val+3)& (0+255),b
  9265                           
  9266                           ; BSR set to: 1
  9267  001870  0E02               	movlw	2
  9268  001872                     L14:
  9269  001872  2799               	addwf	sprintf@ap& (0+255),f,b
  9270  001874  0E00               	movlw	0
  9271  001876  239A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  9272  001878                     l1175:
  9273                           
  9274                           ; BSR set to: 1
  9275                           ;doprnt.c: 1287: }
  9276                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  9277                           
  9278                           ; BSR set to: 1
  9279                           
  9280                           ; BSR set to: 1
  9281  001878  51AA               	movf	sprintf@prec& (0+255),w,b
  9282  00187A  11AB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  9283  00187C  A4D8               	btfss	16344,2,c
  9284  00187E  D04B               	goto	l1177
  9285                           
  9286                           ; BSR set to: 1
  9287  001880  51A3               	movf	sprintf@val& (0+255),w,b
  9288  001882  11A4               	iorwf	(sprintf@val+1)& (0+255),w,b
  9289  001884  11A5               	iorwf	(sprintf@val+2)& (0+255),w,b
  9290  001886  11A6               	iorwf	(sprintf@val+3)& (0+255),w,b
  9291  001888  A4D8               	btfss	16344,2,c
  9292  00188A  D045               	goto	l1177
  9293                           
  9294                           ; BSR set to: 1
  9295                           ;doprnt.c: 1291: prec++;
  9296  00188C  4BAA               	infsnz	sprintf@prec& (0+255),f,b
  9297  00188E  2BAB               	incf	(sprintf@prec+1)& (0+255),f,b
  9298                           
  9299                           ; BSR set to: 1
  9300                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  9301  001890  D042               	goto	l1177
  9302  001892                     
  9303                           ; BSR set to: 1
  9304                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9305                           
  9306                           ; BSR set to: 1
  9307  001892  0E01               	movlw	1
  9308  001894  6FAC               	movwf	sprintf@c& (0+255),b
  9309  001896                     l13204:
  9310                           
  9311                           ; BSR set to: 1
  9312  001896  0E0A               	movlw	10
  9313  001898  19AC               	xorwf	sprintf@c& (0+255),w,b
  9314  00189A  B4D8               	btfsc	16344,2,c
  9315  00189C  D044               	goto	l1182
  9316                           
  9317                           ; BSR set to: 1
  9318                           ;doprnt.c: 1306: if(val < dpowers[c])
  9319                           
  9320                           ; BSR set to: 1
  9321                           
  9322                           ; BSR set to: 1
  9323  00189E  51AC               	movf	sprintf@c& (0+255),w,b
  9324  0018A0  0D04               	mullw	4
  9325  0018A2  0ED9               	movlw	low _dpowers
  9326  0018A4  24F3               	addwf	16371,w,c
  9327  0018A6  6EF6               	movwf	16374,c
  9328  0018A8  0EFA               	movlw	high _dpowers
  9329  0018AA  20F4               	addwfc	16372,w,c
  9330  0018AC  6EF7               	movwf	16375,c
  9331  0018AE                     	if	1	;There are 3 active tblptr bytes
  9332  0018AE  6AF8               	clrf	16376,c
  9333  0018B0  0E00               	movlw	low (__mediumconst shr (0+16))
  9334  0018B2  22F8               	addwfc	16376,f,c
  9335  0018B4                     	endif
  9336  0018B4  0009               	tblrd		*+
  9337  0018B6  50F5               	movf	16373,w,c
  9338  0018B8  5DA3               	subwf	sprintf@val& (0+255),w,b
  9339  0018BA  0009               	tblrd		*+
  9340  0018BC  50F5               	movf	16373,w,c
  9341  0018BE  59A4               	subwfb	(sprintf@val+1)& (0+255),w,b
  9342  0018C0  0009               	tblrd		*+
  9343  0018C2  50F5               	movf	16373,w,c
  9344  0018C4  59A5               	subwfb	(sprintf@val+2)& (0+255),w,b
  9345  0018C6  0009               	tblrd		*+
  9346  0018C8  50F5               	movf	16373,w,c
  9347  0018CA  59A6               	subwfb	(sprintf@val+3)& (0+255),w,b
  9348  0018CC  A0D8               	btfss	16344,0,c
  9349  0018CE  D02B               	goto	l1182
  9350                           
  9351                           ; BSR set to: 1
  9352                           
  9353                           ; BSR set to: 1
  9354                           
  9355                           ; BSR set to: 1
  9356                           ;doprnt.c: 1307: break;
  9357  0018D0  2BAC               	incf	sprintf@c& (0+255),f,b
  9358  0018D2  D7E1               	goto	l13204
  9359  0018D4                     
  9360                           ; BSR set to: 1
  9361                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  9362                           
  9363                           ; BSR set to: 1
  9364  0018D4  0E01               	movlw	1
  9365  0018D6  6FAC               	movwf	sprintf@c& (0+255),b
  9366  0018D8                     l13218:
  9367                           
  9368                           ; BSR set to: 1
  9369  0018D8  0E08               	movlw	8
  9370  0018DA  19AC               	xorwf	sprintf@c& (0+255),w,b
  9371  0018DC  B4D8               	btfsc	16344,2,c
  9372  0018DE  D023               	goto	l1182
  9373                           
  9374                           ; BSR set to: 1
  9375                           ;doprnt.c: 1317: if(val < hexpowers[c])
  9376                           
  9377                           ; BSR set to: 1
  9378                           
  9379                           ; BSR set to: 1
  9380  0018E0  51AC               	movf	sprintf@c& (0+255),w,b
  9381  0018E2  0D04               	mullw	4
  9382  0018E4  0E4F               	movlw	low _hexpowers
  9383  0018E6  24F3               	addwf	16371,w,c
  9384  0018E8  6EF6               	movwf	16374,c
  9385  0018EA  0EFB               	movlw	high _hexpowers
  9386  0018EC  20F4               	addwfc	16372,w,c
  9387  0018EE  6EF7               	movwf	16375,c
  9388  0018F0                     	if	1	;There are 3 active tblptr bytes
  9389  0018F0  6AF8               	clrf	16376,c
  9390  0018F2  0E00               	movlw	low (__mediumconst shr (0+16))
  9391  0018F4  22F8               	addwfc	16376,f,c
  9392  0018F6                     	endif
  9393  0018F6  0009               	tblrd		*+
  9394  0018F8  50F5               	movf	16373,w,c
  9395  0018FA  5DA3               	subwf	sprintf@val& (0+255),w,b
  9396  0018FC  0009               	tblrd		*+
  9397  0018FE  50F5               	movf	16373,w,c
  9398  001900  59A4               	subwfb	(sprintf@val+1)& (0+255),w,b
  9399  001902  0009               	tblrd		*+
  9400  001904  50F5               	movf	16373,w,c
  9401  001906  59A5               	subwfb	(sprintf@val+2)& (0+255),w,b
  9402  001908  0009               	tblrd		*+
  9403  00190A  50F5               	movf	16373,w,c
  9404  00190C  59A6               	subwfb	(sprintf@val+3)& (0+255),w,b
  9405  00190E  A0D8               	btfss	16344,0,c
  9406  001910  D00A               	goto	l1182
  9407                           
  9408                           ; BSR set to: 1
  9409                           
  9410                           ; BSR set to: 1
  9411                           
  9412                           ; BSR set to: 1
  9413                           ;doprnt.c: 1318: break;
  9414  001912  2BAC               	incf	sprintf@c& (0+255),f,b
  9415  001914  D7E1               	goto	l13218
  9416  001916                     l1177:
  9417                           
  9418                           ; BSR set to: 1
  9419                           
  9420                           ; BSR set to: 1
  9421  001916  51AD               	movf	sprintf@flag& (0+255),w,b
  9422  001918  0B80               	andlw	128
  9423                           
  9424                           ; Switch size 1, requested type "space"
  9425                           ; Number of cases is 2, Range of values is 0 to 128
  9426                           ; switch strategies available:
  9427                           ; Name         Instructions Cycles
  9428                           ; simple_byte            7     4 (average)
  9429                           ;	Chosen strategy is simple_byte
  9430  00191A  0A00               	xorlw	0	; case 0
  9431  00191C  B4D8               	btfsc	16344,2,c
  9432  00191E  D7B9               	goto	l1178
  9433  001920  0A80               	xorlw	128	; case 128
  9434  001922  B4D8               	btfsc	16344,2,c
  9435  001924  D7D7               	goto	l1183
  9436  001926                     l1182:
  9437                           
  9438                           ; BSR set to: 1
  9439                           ;doprnt.c: 1339: if(c < prec)
  9440                           
  9441                           ; BSR set to: 1
  9442  001926  0E80               	movlw	128
  9443  001928  BFAC               	btfsc	sprintf@c& (0+255),7,b
  9444  00192A  0E7F               	movlw	127
  9445  00192C  6F7C               	movwf	??_sprintf& (0+255),b
  9446  00192E  51AA               	movf	sprintf@prec& (0+255),w,b
  9447  001930  5DAC               	subwf	sprintf@c& (0+255),w,b
  9448  001932  51AB               	movf	(sprintf@prec+1)& (0+255),w,b
  9449  001934  0A80               	xorlw	128
  9450  001936  597C               	subwfb	??_sprintf& (0+255),w,b
  9451  001938  B0D8               	btfsc	16344,0,c
  9452  00193A  D004               	goto	l1187
  9453                           
  9454                           ; BSR set to: 1
  9455                           ;doprnt.c: 1340: c = prec;
  9456  00193C  0060  F6A8  F1AC   	movff	sprintf@prec,sprintf@c
  9457  001942  D010               	goto	l1189
  9458  001944                     l1187:
  9459                           
  9460                           ; BSR set to: 1
  9461                           ;doprnt.c: 1341: else if(prec < c)
  9462                           
  9463                           ; BSR set to: 1
  9464  001944  51AB               	movf	(sprintf@prec+1)& (0+255),w,b
  9465  001946  0A80               	xorlw	128
  9466  001948  6F7C               	movwf	??_sprintf& (0+255),b
  9467  00194A  51AC               	movf	sprintf@c& (0+255),w,b
  9468  00194C  5DAA               	subwf	sprintf@prec& (0+255),w,b
  9469  00194E  0E80               	movlw	128
  9470  001950  BFAC               	btfsc	sprintf@c& (0+255),7,b
  9471  001952  0E7F               	movlw	127
  9472  001954  597C               	subwfb	??_sprintf& (0+255),w,b
  9473  001956  B0D8               	btfsc	16344,0,c
  9474  001958  D005               	goto	l1189
  9475                           
  9476                           ; BSR set to: 1
  9477                           ;doprnt.c: 1342: prec = c;
  9478  00195A  51AC               	movf	sprintf@c& (0+255),w,b
  9479  00195C  6FAA               	movwf	sprintf@prec& (0+255),b
  9480  00195E  6BAB               	clrf	(sprintf@prec+1)& (0+255),b
  9481  001960  BFAA               	btfsc	sprintf@prec& (0+255),7,b
  9482  001962  07AB               	decf	(sprintf@prec+1)& (0+255),f,b
  9483  001964                     l1189:
  9484                           
  9485                           ; BSR set to: 1
  9486                           ;doprnt.c: 1345: if(width && flag & 0x03)
  9487                           
  9488                           ; BSR set to: 1
  9489                           
  9490                           ; BSR set to: 1
  9491  001964  51A1               	movf	sprintf@width& (0+255),w,b
  9492  001966  11A2               	iorwf	(sprintf@width+1)& (0+255),w,b
  9493  001968  B4D8               	btfsc	16344,2,c
  9494  00196A  D00D               	goto	l1190
  9495                           
  9496                           ; BSR set to: 1
  9497  00196C  0E03               	movlw	3
  9498  00196E  15AD               	andwf	sprintf@flag& (0+255),w,b
  9499  001970  6F7C               	movwf	??_sprintf& (0+255),b
  9500  001972  0E00               	movlw	0
  9501  001974  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
  9502  001976  6F7D               	movwf	(??_sprintf+1)& (0+255),b
  9503  001978  517C               	movf	??_sprintf& (0+255),w,b
  9504  00197A  117D               	iorwf	(??_sprintf+1)& (0+255),w,b
  9505  00197C  B4D8               	btfsc	16344,2,c
  9506  00197E  D003               	goto	l1190
  9507                           
  9508                           ; BSR set to: 1
  9509                           ;doprnt.c: 1346: width--;
  9510  001980  07A1               	decf	sprintf@width& (0+255),f,b
  9511  001982  A0D8               	btfss	16344,0,c
  9512  001984  07A2               	decf	(sprintf@width+1)& (0+255),f,b
  9513  001986                     l1190:
  9514                           
  9515                           ; BSR set to: 1
  9516                           ;doprnt.c: 1348: if(flag & 0x4000) {
  9517                           
  9518                           ; BSR set to: 1
  9519  001986  ADAE               	btfss	(sprintf@flag+1)& (0+255),6,b
  9520  001988  D013               	goto	l1193
  9521                           
  9522                           ; BSR set to: 1
  9523                           ;doprnt.c: 1349: if(width > prec)
  9524  00198A  51A1               	movf	sprintf@width& (0+255),w,b
  9525  00198C  5DAA               	subwf	sprintf@prec& (0+255),w,b
  9526  00198E  51AB               	movf	(sprintf@prec+1)& (0+255),w,b
  9527  001990  0A80               	xorlw	128
  9528  001992  6F7C               	movwf	??_sprintf& (0+255),b
  9529  001994  51A2               	movf	(sprintf@width+1)& (0+255),w,b
  9530  001996  0A80               	xorlw	128
  9531  001998  597C               	subwfb	??_sprintf& (0+255),w,b
  9532  00199A  B0D8               	btfsc	16344,0,c
  9533  00199C  D005               	goto	l1192
  9534                           
  9535                           ; BSR set to: 1
  9536                           ;doprnt.c: 1350: width -= prec;
  9537  00199E  51AA               	movf	sprintf@prec& (0+255),w,b
  9538  0019A0  5FA1               	subwf	sprintf@width& (0+255),f,b
  9539  0019A2  51AB               	movf	(sprintf@prec+1)& (0+255),w,b
  9540  0019A4  5BA2               	subwfb	(sprintf@width+1)& (0+255),f,b
  9541  0019A6  D004               	goto	l1193
  9542  0019A8                     l1192:
  9543                           
  9544                           ; BSR set to: 1
  9545                           ;doprnt.c: 1351: else
  9546                           ;doprnt.c: 1352: width = 0;
  9547                           
  9548                           ; BSR set to: 1
  9549  0019A8  0E00               	movlw	0
  9550  0019AA  6FA2               	movwf	(sprintf@width+1)& (0+255),b
  9551  0019AC  0E00               	movlw	0
  9552  0019AE  6FA1               	movwf	sprintf@width& (0+255),b
  9553  0019B0                     l1193:
  9554                           
  9555                           ; BSR set to: 1
  9556                           ;doprnt.c: 1353: }
  9557                           ;doprnt.c: 1368: if((flag & (0x80|0x800)) == (0x80|0x800)) {
  9558                           
  9559                           ; BSR set to: 1
  9560                           
  9561                           ; BSR set to: 1
  9562  0019B0  0E80               	movlw	128
  9563  0019B2  6F7C               	movwf	??_sprintf& (0+255),b
  9564  0019B4  0E08               	movlw	8
  9565  0019B6  6F7D               	movwf	(??_sprintf+1)& (0+255),b
  9566  0019B8  0060  F6B4  F17E   	movff	sprintf@flag,??_sprintf+2
  9567  0019BE  0060  F6B8  F17F   	movff	sprintf@flag+1,??_sprintf+3
  9568  0019C4  517C               	movf	??_sprintf& (0+255),w,b
  9569  0019C6  177E               	andwf	(??_sprintf+2)& (0+255),f,b
  9570  0019C8  517D               	movf	(??_sprintf+1)& (0+255),w,b
  9571  0019CA  177F               	andwf	(??_sprintf+3)& (0+255),f,b
  9572  0019CC  0E80               	movlw	128
  9573  0019CE  197E               	xorwf	(??_sprintf+2)& (0+255),w,b
  9574  0019D0  E115               	bnz	l13264
  9575  0019D2  0E08               	movlw	8
  9576  0019D4  197F               	xorwf	(??_sprintf+3)& (0+255),w,b
  9577  0019D6  A4D8               	btfss	16344,2,c
  9578  0019D8  D011               	goto	l1196
  9579                           
  9580                           ; BSR set to: 1
  9581                           ;doprnt.c: 1372: if(width > 2)
  9582  0019DA  BFA2               	btfsc	(sprintf@width+1)& (0+255),7,b
  9583  0019DC  D00B               	goto	l1195
  9584  0019DE  51A2               	movf	(sprintf@width+1)& (0+255),w,b
  9585  0019E0  E104               	bnz	u18210
  9586  0019E2  0E03               	movlw	3
  9587  0019E4  5DA1               	subwf	sprintf@width& (0+255),w,b
  9588  0019E6  A0D8               	btfss	16344,0,c
  9589  0019E8  D005               	goto	l1195
  9590  0019EA                     u18210:
  9591                           
  9592                           ; BSR set to: 1
  9593                           ;doprnt.c: 1373: width -= 2;
  9594  0019EA  0EFE               	movlw	254
  9595  0019EC  27A1               	addwf	sprintf@width& (0+255),f,b
  9596  0019EE  0EFF               	movlw	255
  9597  0019F0  23A2               	addwfc	(sprintf@width+1)& (0+255),f,b
  9598  0019F2  D004               	goto	l1196
  9599  0019F4                     l1195:
  9600                           
  9601                           ; BSR set to: 1
  9602                           ;doprnt.c: 1374: else
  9603                           ;doprnt.c: 1375: width = 0;
  9604                           
  9605                           ; BSR set to: 1
  9606  0019F4  0E00               	movlw	0
  9607  0019F6  6FA2               	movwf	(sprintf@width+1)& (0+255),b
  9608  0019F8  0E00               	movlw	0
  9609  0019FA  6FA1               	movwf	sprintf@width& (0+255),b
  9610  0019FC                     l1196:
  9611  0019FC                     l13264:
  9612                           
  9613                           ; BSR set to: 1
  9614                           ;doprnt.c: 1376: }
  9615                           ;doprnt.c: 1381: if(width > c)
  9616  0019FC  0E80               	movlw	128
  9617  0019FE  BFAC               	btfsc	sprintf@c& (0+255),7,b
  9618  001A00  0E7F               	movlw	127
  9619  001A02  6F7C               	movwf	??_sprintf& (0+255),b
  9620  001A04  51A1               	movf	sprintf@width& (0+255),w,b
  9621  001A06  5DAC               	subwf	sprintf@c& (0+255),w,b
  9622  001A08  51A2               	movf	(sprintf@width+1)& (0+255),w,b
  9623  001A0A  0A80               	xorlw	128
  9624  001A0C  597C               	subwfb	??_sprintf& (0+255),w,b
  9625  001A0E  B0D8               	btfsc	16344,0,c
  9626  001A10  D007               	goto	l1197
  9627                           
  9628                           ; BSR set to: 1
  9629                           ;doprnt.c: 1382: width -= c;
  9630  001A12  51AC               	movf	sprintf@c& (0+255),w,b
  9631  001A14  5FA1               	subwf	sprintf@width& (0+255),f,b
  9632  001A16  0E00               	movlw	0
  9633  001A18  BFAC               	btfsc	sprintf@c& (0+255),7,b
  9634  001A1A  0EFF               	movlw	255
  9635  001A1C  5BA2               	subwfb	(sprintf@width+1)& (0+255),f,b
  9636  001A1E  D004               	goto	l1198
  9637  001A20                     l1197:
  9638                           
  9639                           ; BSR set to: 1
  9640                           ;doprnt.c: 1383: else
  9641                           ;doprnt.c: 1384: width = 0;
  9642                           
  9643                           ; BSR set to: 1
  9644  001A20  0E00               	movlw	0
  9645  001A22  6FA2               	movwf	(sprintf@width+1)& (0+255),b
  9646  001A24  0E00               	movlw	0
  9647  001A26  6FA1               	movwf	sprintf@width& (0+255),b
  9648  001A28                     l1198:
  9649                           
  9650                           ; BSR set to: 1
  9651                           ;doprnt.c: 1387: if(flag & 0x04) {
  9652                           
  9653                           ; BSR set to: 1
  9654  001A28  A5AD               	btfss	sprintf@flag& (0+255),2,b
  9655  001A2A  D05B               	goto	l1199
  9656                           
  9657                           ; BSR set to: 1
  9658                           ;doprnt.c: 1389: if(flag & 0x02)
  9659  001A2C  A3AD               	btfss	sprintf@flag& (0+255),1,b
  9660  001A2E  D014               	goto	l1200
  9661                           
  9662                           ; BSR set to: 1
  9663                           ;doprnt.c: 1390: ((*sp++ = (flag & 0x01 ? '-' : '+')));
  9664  001A30  B1AD               	btfsc	sprintf@flag& (0+255),0,b
  9665  001A32  D004               	goto	l1202
  9666                           
  9667                           ; BSR set to: 1
  9668  001A34  0E00               	movlw	0
  9669  001A36  6F8F               	movwf	(_sprintf$2179+1)& (0+255),b
  9670  001A38  0E2B               	movlw	43
  9671  001A3A  D003               	goto	L15
  9672  001A3C                     l1202:
  9673                           
  9674                           ; BSR set to: 1
  9675                           
  9676                           ; BSR set to: 1
  9677  001A3C  0E00               	movlw	0
  9678  001A3E  6F8F               	movwf	(_sprintf$2179+1)& (0+255),b
  9679  001A40  0E2D               	movlw	45
  9680  001A42                     L15:
  9681  001A42  6F8E               	movwf	_sprintf$2179& (0+255),b
  9682                           
  9683                           ; BSR set to: 1
  9684                           
  9685                           ; BSR set to: 1
  9686  001A44  0060  F58B  FFD9   	movff	sprintf@sp,16345
  9687  001A4A  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  9688  001A50  0060  F63B  FFDF   	movff	_sprintf$2179,16351
  9689  001A56  D031               	goto	L18
  9690  001A58                     l1200:
  9691                           
  9692                           ; BSR set to: 1
  9693                           ;doprnt.c: 1396: else
  9694                           ;doprnt.c: 1399: if(flag & 0x01)
  9695  001A58  A1AD               	btfss	sprintf@flag& (0+255),0,b
  9696  001A5A  D008               	goto	l1206
  9697                           
  9698                           ; BSR set to: 1
  9699                           ;doprnt.c: 1400: ((*sp++ = (' ')));
  9700  001A5C  0060  F58B  FFD9   	movff	sprintf@sp,16345
  9701  001A62  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  9702  001A68  0E20               	movlw	32
  9703  001A6A  D026               	goto	L16
  9704  001A6C                     l1206:
  9705                           
  9706                           ; BSR set to: 1
  9707                           ;doprnt.c: 1403: else if((flag & (0x80|0x800)) == (0x80|0x800)) {
  9708                           
  9709                           ; BSR set to: 1
  9710  001A6C  0E80               	movlw	128
  9711  001A6E  6F7C               	movwf	??_sprintf& (0+255),b
  9712  001A70  0E08               	movlw	8
  9713  001A72  6F7D               	movwf	(??_sprintf+1)& (0+255),b
  9714  001A74  0060  F6B4  F17E   	movff	sprintf@flag,??_sprintf+2
  9715  001A7A  0060  F6B8  F17F   	movff	sprintf@flag+1,??_sprintf+3
  9716  001A80  517C               	movf	??_sprintf& (0+255),w,b
  9717  001A82  177E               	andwf	(??_sprintf+2)& (0+255),f,b
  9718  001A84  517D               	movf	(??_sprintf+1)& (0+255),w,b
  9719  001A86  177F               	andwf	(??_sprintf+3)& (0+255),f,b
  9720  001A88  0E80               	movlw	128
  9721  001A8A  197E               	xorwf	(??_sprintf+2)& (0+255),w,b
  9722  001A8C  E118               	bnz	l13296
  9723  001A8E  0E08               	movlw	8
  9724  001A90  197F               	xorwf	(??_sprintf+3)& (0+255),w,b
  9725  001A92  A4D8               	btfss	16344,2,c
  9726  001A94  D014               	goto	l1208
  9727                           
  9728                           ; BSR set to: 1
  9729                           ;doprnt.c: 1404: ((*sp++ = ('0')));
  9730  001A96  0060  F58B  FFD9   	movff	sprintf@sp,16345
  9731  001A9C  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  9732  001AA2  0E30               	movlw	48
  9733  001AA4  6EDF               	movwf	16351,c
  9734                           
  9735                           ; BSR set to: 1
  9736  001AA6  4B62               	infsnz	sprintf@sp& (0+255),f,b
  9737  001AA8  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  9738                           
  9739                           ; BSR set to: 1
  9740                           ;doprnt.c: 1410: ((*sp++ = ('x')));
  9741  001AAA  0060  F58B  FFD9   	movff	sprintf@sp,16345
  9742  001AB0  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  9743  001AB6  0E78               	movlw	120
  9744  001AB8                     L16:
  9745  001AB8  6EDF               	movwf	16351,c
  9746  001ABA                     L18:
  9747  001ABA  4B62               	infsnz	sprintf@sp& (0+255),f,b
  9748  001ABC  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  9749  001ABE                     l1208:
  9750  001ABE                     l13296:
  9751                           
  9752                           ; BSR set to: 1
  9753                           ;doprnt.c: 1412: }
  9754                           ;doprnt.c: 1415: if(width)
  9755  001ABE  51A1               	movf	sprintf@width& (0+255),w,b
  9756  001AC0  11A2               	iorwf	(sprintf@width+1)& (0+255),w,b
  9757  001AC2  B4D8               	btfsc	16344,2,c
  9758  001AC4  D117               	goto	l1224
  9759                           
  9760                           ; BSR set to: 1
  9761                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  9762                           
  9763                           ; BSR set to: 1
  9764                           
  9765                           ;doprnt.c: 1416: do
  9766  001AC6  0060  F58B  FFD9   	movff	sprintf@sp,16345
  9767  001ACC  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  9768  001AD2  0E30               	movlw	48
  9769  001AD4  6EDF               	movwf	16351,c
  9770                           
  9771                           ; BSR set to: 1
  9772  001AD6  4B62               	infsnz	sprintf@sp& (0+255),f,b
  9773  001AD8  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  9774                           
  9775                           ; BSR set to: 1
  9776                           ;doprnt.c: 1418: while(--width);
  9777  001ADA  07A1               	decf	sprintf@width& (0+255),f,b
  9778  001ADC  A0D8               	btfss	16344,0,c
  9779  001ADE  07A2               	decf	(sprintf@width+1)& (0+255),f,b
  9780  001AE0  D7EE               	goto	l1208
  9781  001AE2                     l1199:
  9782                           
  9783                           ; BSR set to: 1
  9784                           ;doprnt.c: 1422: {
  9785                           ;doprnt.c: 1424: if(width
  9786                           ;doprnt.c: 1426: && !(flag & 0x08)
  9787                           ;doprnt.c: 1428: )
  9788                           
  9789                           ; BSR set to: 1
  9790  001AE2  51A1               	movf	sprintf@width& (0+255),w,b
  9791  001AE4  11A2               	iorwf	(sprintf@width+1)& (0+255),w,b
  9792  001AE6  A4D8               	btfss	16344,2,c
  9793                           
  9794                           ; BSR set to: 1
  9795  001AE8  B7AD               	btfsc	sprintf@flag& (0+255),3,b
  9796  001AEA  D011               	goto	u18320
  9797  001AEC                     u18310:
  9798                           
  9799                           ; BSR set to: 1
  9800                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  9801                           
  9802                           ; BSR set to: 1
  9803                           
  9804                           ;doprnt.c: 1429: do
  9805  001AEC  0060  F58B  FFD9   	movff	sprintf@sp,16345
  9806  001AF2  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  9807  001AF8  0E20               	movlw	32
  9808  001AFA  6EDF               	movwf	16351,c
  9809                           
  9810                           ; BSR set to: 1
  9811  001AFC  4B62               	infsnz	sprintf@sp& (0+255),f,b
  9812  001AFE  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  9813                           
  9814                           ; BSR set to: 1
  9815                           ;doprnt.c: 1431: while(--width);
  9816  001B00  07A1               	decf	sprintf@width& (0+255),f,b
  9817  001B02  A0D8               	btfss	16344,0,c
  9818  001B04  07A2               	decf	(sprintf@width+1)& (0+255),f,b
  9819  001B06  51A1               	movf	sprintf@width& (0+255),w,b
  9820  001B08  11A2               	iorwf	(sprintf@width+1)& (0+255),w,b
  9821  001B0A  A4D8               	btfss	16344,2,c
  9822  001B0C  D7EF               	goto	u18310
  9823  001B0E                     u18320:
  9824                           
  9825                           ; BSR set to: 1
  9826                           ;doprnt.c: 1434: if(flag & 0x02)
  9827                           
  9828                           ; BSR set to: 1
  9829  001B0E  A3AD               	btfss	sprintf@flag& (0+255),1,b
  9830  001B10  D014               	goto	l1216
  9831                           
  9832                           ; BSR set to: 1
  9833                           ;doprnt.c: 1435: ((*sp++ = (flag & 0x01 ? '-' : '+')));
  9834  001B12  B1AD               	btfsc	sprintf@flag& (0+255),0,b
  9835  001B14  D004               	goto	l1218
  9836                           
  9837                           ; BSR set to: 1
  9838  001B16  0E00               	movlw	0
  9839  001B18  6F91               	movwf	(_sprintf$2180+1)& (0+255),b
  9840  001B1A  0E2B               	movlw	43
  9841  001B1C  D003               	goto	L17
  9842  001B1E                     l1218:
  9843                           
  9844                           ; BSR set to: 1
  9845                           
  9846                           ; BSR set to: 1
  9847  001B1E  0E00               	movlw	0
  9848  001B20  6F91               	movwf	(_sprintf$2180+1)& (0+255),b
  9849  001B22  0E2D               	movlw	45
  9850  001B24                     L17:
  9851  001B24  6F90               	movwf	_sprintf$2180& (0+255),b
  9852                           
  9853                           ; BSR set to: 1
  9854                           
  9855                           ; BSR set to: 1
  9856  001B26  0060  F58B  FFD9   	movff	sprintf@sp,16345
  9857  001B2C  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  9858  001B32  0060  F643  FFDF   	movff	_sprintf$2180,16351
  9859  001B38  D00A               	goto	l13326
  9860  001B3A                     l1216:
  9861                           
  9862                           ; BSR set to: 1
  9863                           ;doprnt.c: 1443: else if(flag & 0x01)
  9864  001B3A  A1AD               	btfss	sprintf@flag& (0+255),0,b
  9865  001B3C  D00A               	goto	l1222
  9866                           
  9867                           ; BSR set to: 1
  9868                           ;doprnt.c: 1444: ((*sp++ = (' ')));
  9869  001B3E  0060  F58B  FFD9   	movff	sprintf@sp,16345
  9870  001B44  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  9871  001B4A  0E20               	movlw	32
  9872  001B4C  6EDF               	movwf	16351,c
  9873  001B4E                     l13326:
  9874                           
  9875                           ; BSR set to: 1
  9876  001B4E  4B62               	infsnz	sprintf@sp& (0+255),f,b
  9877  001B50  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  9878  001B52                     l1222:
  9879                           
  9880                           ; BSR set to: 1
  9881                           ;doprnt.c: 1454: if((flag & (0x80|0x800)) == (0x80|0x800)) {
  9882                           
  9883                           ; BSR set to: 1
  9884                           
  9885                           ; BSR set to: 1
  9886  001B52  0E80               	movlw	128
  9887  001B54  6F7C               	movwf	??_sprintf& (0+255),b
  9888  001B56  0E08               	movlw	8
  9889  001B58  6F7D               	movwf	(??_sprintf+1)& (0+255),b
  9890  001B5A  0060  F6B4  F17E   	movff	sprintf@flag,??_sprintf+2
  9891  001B60  0060  F6B8  F17F   	movff	sprintf@flag+1,??_sprintf+3
  9892  001B66  517C               	movf	??_sprintf& (0+255),w,b
  9893  001B68  177E               	andwf	(??_sprintf+2)& (0+255),f,b
  9894  001B6A  517D               	movf	(??_sprintf+1)& (0+255),w,b
  9895  001B6C  177F               	andwf	(??_sprintf+3)& (0+255),f,b
  9896  001B6E  0E80               	movlw	128
  9897  001B70  197E               	xorwf	(??_sprintf+2)& (0+255),w,b
  9898  001B72  E103               	bnz	u18361
  9899  001B74  0E08               	movlw	8
  9900  001B76  197F               	xorwf	(??_sprintf+3)& (0+255),w,b
  9901  001B78  A4D8               	btfss	16344,2,c
  9902  001B7A                     u18361:
  9903  001B7A  D0BC               	goto	l1224
  9904                           
  9905                           ; BSR set to: 1
  9906                           ;doprnt.c: 1458: ((*sp++ = ('0')));
  9907  001B7C  0060  F58B  FFD9   	movff	sprintf@sp,16345
  9908  001B82  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  9909  001B88  0E30               	movlw	48
  9910  001B8A  6EDF               	movwf	16351,c
  9911                           
  9912                           ; BSR set to: 1
  9913  001B8C  4B62               	infsnz	sprintf@sp& (0+255),f,b
  9914  001B8E  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  9915                           
  9916                           ; BSR set to: 1
  9917                           ;doprnt.c: 1464: ((*sp++ = ('x')));
  9918  001B90  0060  F58B  FFD9   	movff	sprintf@sp,16345
  9919  001B96  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
  9920  001B9C  0E78               	movlw	120
  9921  001B9E  6EDF               	movwf	16351,c
  9922  001BA0  D0A7               	goto	l13348
  9923  001BA2                     
  9924                           ; BSR set to: 1
  9925                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  9926                           
  9927                           ; BSR set to: 1
  9928  001BA2  0060  F6A8  F17C   	movff	sprintf@prec,??_sprintf
  9929  001BA8  0060  F6AC  F17D   	movff	sprintf@prec+1,??_sprintf+1
  9930  001BAE  90D8               	bcf	16344,0,c
  9931  001BB0  377C               	rlcf	??_sprintf& (0+255),f,b
  9932  001BB2  377D               	rlcf	(??_sprintf+1)& (0+255),f,b
  9933  001BB4  90D8               	bcf	16344,0,c
  9934  001BB6  377C               	rlcf	??_sprintf& (0+255),f,b
  9935  001BB8  377D               	rlcf	(??_sprintf+1)& (0+255),f,b
  9936  001BBA  0ED9               	movlw	low _dpowers
  9937  001BBC  257C               	addwf	??_sprintf& (0+255),w,b
  9938  001BBE  6EF6               	movwf	16374,c
  9939  001BC0  0EFA               	movlw	high _dpowers
  9940  001BC2  217D               	addwfc	(??_sprintf+1)& (0+255),w,b
  9941  001BC4  6EF7               	movwf	16375,c
  9942  001BC6                     	if	1	;There are 3 active tblptr bytes
  9943  001BC6  6AF8               	clrf	16376,c
  9944  001BC8  0E00               	movlw	low (__mediumconst shr (0+16))
  9945  001BCA  22F8               	addwfc	16376,f,c
  9946  001BCC                     	endif
  9947  001BCC  0009               	tblrd		*+
  9948  001BCE  006F FFD4  F109    	movff	16373,___lldiv@divisor
  9949  001BD4  0009               	tblrd		*+
  9950  001BD6  006F FFD4  F10A    	movff	16373,___lldiv@divisor+1
  9951  001BDC  0009               	tblrd		*+
  9952  001BDE  006F FFD4  F10B    	movff	16373,___lldiv@divisor+2
  9953  001BE4  000A               	tblrd		*-
  9954  001BE6  006F FFD4  F10C    	movff	16373,___lldiv@divisor+3
  9955  001BEC  0060  F68C  F105   	movff	sprintf@val,___lldiv@dividend
  9956  001BF2  0060  F690  F106   	movff	sprintf@val+1,___lldiv@dividend+1
  9957  001BF8  0060  F694  F107   	movff	sprintf@val+2,___lldiv@dividend+2
  9958  001BFE  0060  F698  F108   	movff	sprintf@val+3,___lldiv@dividend+3
  9959  001C04  EC34  F03C         	call	___lldiv	;wreg free
  9960  001C08  0060  F414  F112   	movff	?___lldiv,___llmod@dividend
  9961  001C0E  0060  F418  F113   	movff	?___lldiv+1,___llmod@dividend+1
  9962  001C14  0060  F41C  F114   	movff	?___lldiv+2,___llmod@dividend+2
  9963  001C1A  0060  F420  F115   	movff	?___lldiv+3,___llmod@dividend+3
  9964  001C20  0E0A               	movlw	10
  9965  001C22  0101               	movlb	1	; () banked
  9966  001C24  6F16               	movwf	___llmod@divisor& (0+255),b
  9967  001C26  0E00               	movlw	0
  9968  001C28  6F17               	movwf	(___llmod@divisor+1)& (0+255),b
  9969  001C2A  0E00               	movlw	0
  9970  001C2C  6F18               	movwf	(___llmod@divisor+2)& (0+255),b
  9971  001C2E  0E00               	movlw	0
  9972  001C30  6F19               	movwf	(___llmod@divisor+3)& (0+255),b
  9973  001C32  EC38  F03F         	call	___llmod	;wreg free
  9974  001C36  0101               	movlb	1	; () banked
  9975  001C38  5112               	movf	?___llmod& (0+255),w,b
  9976  001C3A  0F30               	addlw	48
  9977  001C3C  6FAC               	movwf	sprintf@c& (0+255),b
  9978                           
  9979                           ;doprnt.c: 1491: break;
  9980  001C3E  D04F               	goto	l1228
  9981  001C40                     
  9982                           ; BSR set to: 1
  9983                           ;doprnt.c: 1499: {
  9984                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  9985                           
  9986                           ; BSR set to: 1
  9987  001C40  0060  F68C  F105   	movff	sprintf@val,___lldiv@dividend
  9988  001C46  0060  F690  F106   	movff	sprintf@val+1,___lldiv@dividend+1
  9989  001C4C  0060  F694  F107   	movff	sprintf@val+2,___lldiv@dividend+2
  9990  001C52  0060  F698  F108   	movff	sprintf@val+3,___lldiv@dividend+3
  9991  001C58  0060  F6A8  F17C   	movff	sprintf@prec,??_sprintf
  9992  001C5E  0060  F6AC  F17D   	movff	sprintf@prec+1,??_sprintf+1
  9993  001C64  90D8               	bcf	16344,0,c
  9994  001C66  377C               	rlcf	??_sprintf& (0+255),f,b
  9995  001C68  377D               	rlcf	(??_sprintf+1)& (0+255),f,b
  9996  001C6A  90D8               	bcf	16344,0,c
  9997  001C6C  377C               	rlcf	??_sprintf& (0+255),f,b
  9998  001C6E  377D               	rlcf	(??_sprintf+1)& (0+255),f,b
  9999  001C70  0E4F               	movlw	low _hexpowers
 10000  001C72  257C               	addwf	??_sprintf& (0+255),w,b
 10001  001C74  6EF6               	movwf	16374,c
 10002  001C76  0EFB               	movlw	high _hexpowers
 10003  001C78  217D               	addwfc	(??_sprintf+1)& (0+255),w,b
 10004  001C7A  6EF7               	movwf	16375,c
 10005  001C7C                     	if	1	;There are 3 active tblptr bytes
 10006  001C7C  6AF8               	clrf	16376,c
 10007  001C7E  0E00               	movlw	low (__mediumconst shr (0+16))
 10008  001C80  22F8               	addwfc	16376,f,c
 10009  001C82                     	endif
 10010  001C82  0009               	tblrd		*+
 10011  001C84  006F FFD4  F109    	movff	16373,___lldiv@divisor
 10012  001C8A  0009               	tblrd		*+
 10013  001C8C  006F FFD4  F10A    	movff	16373,___lldiv@divisor+1
 10014  001C92  0009               	tblrd		*+
 10015  001C94  006F FFD4  F10B    	movff	16373,___lldiv@divisor+2
 10016  001C9A  000A               	tblrd		*-
 10017  001C9C  006F FFD4  F10C    	movff	16373,___lldiv@divisor+3
 10018  001CA2  EC34  F03C         	call	___lldiv	;wreg free
 10019  001CA6  0101               	movlb	1	; () banked
 10020  001CA8  5105               	movf	?___lldiv& (0+255),w,b
 10021  001CAA  0B0F               	andlw	15
 10022  001CAC  6F85               	movwf	sprintf@idx& (0+255),b
 10023                           
 10024                           ; BSR set to: 1
 10025                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 10026  001CAE  5185               	movf	sprintf@idx& (0+255),w,b
 10027  001CB0  0D01               	mullw	1
 10028  001CB2  0ECC               	movlw	low STR_109
 10029  001CB4  24F3               	addwf	16371,w,c
 10030  001CB6  6EF6               	movwf	16374,c
 10031  001CB8  0EFE               	movlw	high STR_109
 10032  001CBA  20F4               	addwfc	16372,w,c
 10033  001CBC  6EF7               	movwf	16375,c
 10034  001CBE                     	if	1	;There are 3 active tblptr bytes
 10035  001CBE  6AF8               	clrf	16376,c
 10036  001CC0  0E00               	movlw	low (__mediumconst shr (0+16))
 10037  001CC2  22F8               	addwfc	16376,f,c
 10038  001CC4                     	endif
 10039  001CC4  0008               	tblrd		*
 10040  001CC6  006F FFD4  F1AC    	movff	16373,sprintf@c
 10041                           
 10042                           ; BSR set to: 1
 10043                           ;doprnt.c: 1523: }
 10044                           
 10045                           ;doprnt.c: 1508: }
 10046                           ;doprnt.c: 1510: break;
 10047  001CCC  D008               	goto	l1228
 10048  001CCE                     l13344:
 10049                           
 10050                           ; BSR set to: 1
 10051  001CCE  51AD               	movf	sprintf@flag& (0+255),w,b
 10052  001CD0  0B80               	andlw	128
 10053                           
 10054                           ; Switch size 1, requested type "space"
 10055                           ; Number of cases is 2, Range of values is 0 to 128
 10056                           ; switch strategies available:
 10057                           ; Name         Instructions Cycles
 10058                           ; simple_byte            7     4 (average)
 10059                           ;	Chosen strategy is simple_byte
 10060  001CD2  0A00               	xorlw	0	; case 0
 10061  001CD4  B4D8               	btfsc	16344,2,c
 10062  001CD6  D765               	goto	l1227
 10063  001CD8  0A80               	xorlw	128	; case 128
 10064  001CDA  B4D8               	btfsc	16344,2,c
 10065  001CDC  D7B1               	goto	l1229
 10066  001CDE                     l1228:
 10067                           
 10068                           ; BSR set to: 1
 10069                           ;doprnt.c: 1524: ((*sp++ = (c)));
 10070                           
 10071                           ; BSR set to: 1
 10072  001CDE  0060  F58B  FFD9   	movff	sprintf@sp,16345
 10073  001CE4  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
 10074  001CEA  0060  F6B3  FFDF   	movff	sprintf@c,16351
 10075  001CF0                     l13348:
 10076                           
 10077                           ; BSR set to: 1
 10078  001CF0  4B62               	infsnz	sprintf@sp& (0+255),f,b
 10079  001CF2  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
 10080  001CF4                     l1224:
 10081                           
 10082                           ; BSR set to: 1
 10083                           
 10084                           ; BSR set to: 1
 10085  001CF4  07AA               	decf	sprintf@prec& (0+255),f,b
 10086  001CF6  A0D8               	btfss	16344,0,c
 10087  001CF8  07AB               	decf	(sprintf@prec+1)& (0+255),f,b
 10088  001CFA  29AA               	incf	sprintf@prec& (0+255),w,b
 10089  001CFC  E1E8               	bnz	l13344
 10090  001CFE  29AB               	incf	(sprintf@prec+1)& (0+255),w,b
 10091  001D00  A4D8               	btfss	16344,2,c
 10092  001D02  D7E5               	goto	l1226
 10093                           
 10094                           ; BSR set to: 1
 10095                           ;doprnt.c: 1525: }
 10096                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 10097  001D04  B7AD               	btfsc	sprintf@flag& (0+255),3,b
 10098                           
 10099                           ; BSR set to: 1
 10100  001D06  BFA2               	btfsc	(sprintf@width+1)& (0+255),7,b
 10101  001D08  D016               	goto	u18400
 10102  001D0A  51A2               	movf	(sprintf@width+1)& (0+255),w,b
 10103  001D0C  E103               	bnz	l13354
 10104  001D0E  05A1               	decf	sprintf@width& (0+255),w,b
 10105  001D10  A0D8               	btfss	16344,0,c
 10106  001D12  D011               	goto	u18400
 10107  001D14                     u18390:
 10108  001D14                     l13354:
 10109                           
 10110                           ; BSR set to: 1
 10111                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 10112  001D14  0060  F58B  FFD9   	movff	sprintf@sp,16345
 10113  001D1A  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
 10114  001D20  0E20               	movlw	32
 10115  001D22  6EDF               	movwf	16351,c
 10116                           
 10117                           ; BSR set to: 1
 10118  001D24  4B62               	infsnz	sprintf@sp& (0+255),f,b
 10119  001D26  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
 10120                           
 10121                           ; BSR set to: 1
 10122                           ;doprnt.c: 1531: while(--width);
 10123  001D28  07A1               	decf	sprintf@width& (0+255),f,b
 10124  001D2A  A0D8               	btfss	16344,0,c
 10125  001D2C  07A2               	decf	(sprintf@width+1)& (0+255),f,b
 10126  001D2E  51A1               	movf	sprintf@width& (0+255),w,b
 10127  001D30  11A2               	iorwf	(sprintf@width+1)& (0+255),w,b
 10128  001D32  A4D8               	btfss	16344,2,c
 10129  001D34  D7EF               	goto	u18390
 10130  001D36                     u18400:
 10131                           
 10132                           ; BSR set to: 1
 10133                           
 10134                           ; BSR set to: 1
 10135                           
 10136                           ; BSR set to: 1
 10137                           
 10138                           ; BSR set to: 1
 10139  001D36  0060  F593  FFF6   	movff	sprintf@f,16374
 10140  001D3C  0060  F597  FFF7   	movff	sprintf@f+1,16375
 10141  001D42  4B64               	infsnz	sprintf@f& (0+255),f,b
 10142  001D44  2B65               	incf	(sprintf@f+1)& (0+255),f,b
 10143  001D46                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10144  001D46  6AF8               	clrf	16376,c
 10145  001D48                     	endif
 10146  001D48                     	if	0	;tblptru may be non-zero
 10147  001D48                     	endif
 10148  001D48  0008               	tblrd		*
 10149  001D4A  006F FFD4  F1AC    	movff	16373,sprintf@c
 10150  001D50  51AC               	movf	sprintf@c& (0+255),w,b
 10151  001D52  A4D8               	btfss	16344,2,c
 10152  001D54  EF60  F000         	goto	l963
 10153  001D58                     u18410:
 10154                           
 10155                           ; BSR set to: 1
 10156                           ;doprnt.c: 1538: *sp = 0;
 10157                           
 10158                           ; BSR set to: 1
 10159                           
 10160                           ;doprnt.c: 1533: }
 10161                           ;doprnt.c: 1535: alldone:
 10162                           
 10163                           ; BSR set to: 1
 10164  001D58  0060  F58B  FFD9   	movff	sprintf@sp,16345
 10165  001D5E  0060  F58F  FFDA   	movff	sprintf@sp+1,16346
 10166  001D64  0E00               	movlw	0
 10167  001D66  6EDF               	movwf	16351,c
 10168  001D68  0012               	return	
 10169  001D6A                     __end_of_sprintf:
 10170                           	opt stack 0
 10171                           
 10172 ;; *************** function _scale *****************
 10173 ;; Defined at:
 10174 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;  scl             1    wreg     char 
 10177 ;; Auto vars:     Size  Location     Type
 10178 ;;  scl             1   73[BANK1 ] char 
 10179 ;; Return value:  Size  Location     Type
 10180 ;;                  3   67[BANK1 ] char 
 10181 ;; Registers used:
 10182 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10183 ;; Tracked objects:
 10184 ;;		On entry : 0/0
 10185 ;;		On exit  : 0/0
 10186 ;;		Unchanged: 0/0
 10187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10188 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10189 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10191 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10192 ;;Total ram usage:        7 bytes
 10193 ;; Hardware stack levels used:    1
 10194 ;; Hardware stack levels required when called:   12
 10195 ;; This function calls:
 10196 ;;		___awdiv
 10197 ;;		___awmod
 10198 ;;		___ftmul
 10199 ;;		___wmul
 10200 ;; This function is called by:
 10201 ;;		_sprintf
 10202 ;; This function uses a non-reentrant model
 10203 ;;
 10204                           
 10205                           	psect	text11
 10206  003A16                     __ptext11:
 10207                           	opt stack 0
 10208  003A16                     _scale:
 10209                           	opt stack 17
 10210                           
 10211                           ; BSR set to: 1
 10212                           ;incstack = 0
 10213                           ;scale@scl stored from wreg
 10214  003A16  0101               	movlb	1	; () banked
 10215  003A18  6F49               	movwf	scale@scl& (0+255),b
 10216                           
 10217                           ;doprnt.c: 428: if(scl < 0) {
 10218  003A1A  0101               	movlb	1	; () banked
 10219  003A1C  AF49               	btfss	scale@scl& (0+255),7,b
 10220  003A1E  D142               	goto	l952
 10221                           
 10222                           ; BSR set to: 1
 10223                           ;doprnt.c: 429: scl = -scl;
 10224  003A20  6D49               	negf	scale@scl& (0+255),b
 10225                           
 10226                           ;doprnt.c: 430: if(scl>=110)
 10227  003A22  5149               	movf	scale@scl& (0+255),w,b
 10228  003A24  0A80               	xorlw	128
 10229  003A26  0F12               	addlw	-238
 10230  003A28  A0D8               	btfss	16344,0,c
 10231  003A2A  D0B6               	goto	l953
 10232                           
 10233                           ; BSR set to: 1
 10234                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10235  003A2C  0E00               	movlw	0
 10236  003A2E  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10237  003A30  0E03               	movlw	3
 10238  003A32  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10239  003A34  0E00               	movlw	0
 10240  003A36  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
 10241  003A38  0E0A               	movlw	10
 10242  003A3A  6F0D               	movwf	___awdiv@divisor& (0+255),b
 10243  003A3C  0E00               	movlw	0
 10244  003A3E  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
 10245  003A40  0E64               	movlw	100
 10246  003A42  6F07               	movwf	___awmod@divisor& (0+255),b
 10247  003A44  5149               	movf	scale@scl& (0+255),w,b
 10248  003A46  6F05               	movwf	___awmod@dividend& (0+255),b
 10249  003A48  6B06               	clrf	(___awmod@dividend+1)& (0+255),b
 10250  003A4A  BF05               	btfsc	___awmod@dividend& (0+255),7,b
 10251  003A4C  0706               	decf	(___awmod@dividend+1)& (0+255),f,b
 10252  003A4E  EC88  F03E         	call	___awmod	;wreg free
 10253  003A52  0060  F414  F10B   	movff	?___awmod,___awdiv@dividend
 10254  003A58  0060  F418  F10C   	movff	?___awmod+1,___awdiv@dividend+1
 10255  003A5E  EC7A  F03C         	call	___awdiv	;wreg free
 10256  003A62  0E09               	movlw	9
 10257  003A64  0101               	movlb	1	; () banked
 10258  003A66  250B               	addwf	?___awdiv& (0+255),w,b
 10259  003A68  6F13               	movwf	___wmul@multiplier& (0+255),b
 10260  003A6A  0E00               	movlw	0
 10261  003A6C  210C               	addwfc	(?___awdiv+1)& (0+255),w,b
 10262  003A6E  6F14               	movwf	(___wmul@multiplier+1)& (0+255),b
 10263  003A70  ECA8  F044         	call	___wmul	;wreg free
 10264  003A74  0E28               	movlw	low __npowers_
 10265  003A76  0101               	movlb	1	; () banked
 10266  003A78  2513               	addwf	?___wmul& (0+255),w,b
 10267  003A7A  6EF6               	movwf	16374,c
 10268  003A7C  0EFB               	movlw	high __npowers_
 10269  003A7E  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10270  003A80  6EF7               	movwf	16375,c
 10271  003A82                     	if	1	;There are 3 active tblptr bytes
 10272  003A82  6AF8               	clrf	16376,c
 10273  003A84  0E00               	movlw	low (__mediumconst shr (0+16))
 10274  003A86  22F8               	addwfc	16376,f,c
 10275  003A88                     	endif
 10276  003A88  0009               	tblrd		*+
 10277  003A8A  006F FFD4  F137    	movff	16373,___ftmul@f2
 10278  003A90  0009               	tblrd		*+
 10279  003A92  006F FFD4  F138    	movff	16373,___ftmul@f2+1
 10280  003A98  000A               	tblrd		*-
 10281  003A9A  006F FFD4  F139    	movff	16373,___ftmul@f2+2
 10282  003AA0  0E00               	movlw	0
 10283  003AA2  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
 10284  003AA4  0E64               	movlw	100
 10285  003AA6  6F0D               	movwf	___awdiv@divisor& (0+255),b
 10286  003AA8  5149               	movf	scale@scl& (0+255),w,b
 10287  003AAA  6F0B               	movwf	___awdiv@dividend& (0+255),b
 10288  003AAC  6B0C               	clrf	(___awdiv@dividend+1)& (0+255),b
 10289  003AAE  BF0B               	btfsc	___awdiv@dividend& (0+255),7,b
 10290  003AB0  070C               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10291  003AB2  EC7A  F03C         	call	___awdiv	;wreg free
 10292  003AB6  0E12               	movlw	18
 10293  003AB8  0101               	movlb	1	; () banked
 10294  003ABA  250B               	addwf	?___awdiv& (0+255),w,b
 10295  003ABC  6F13               	movwf	___wmul@multiplier& (0+255),b
 10296  003ABE  0E00               	movlw	0
 10297  003AC0  210C               	addwfc	(?___awdiv+1)& (0+255),w,b
 10298  003AC2  6F14               	movwf	(___wmul@multiplier+1)& (0+255),b
 10299  003AC4  0E00               	movlw	0
 10300  003AC6  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10301  003AC8  0E03               	movlw	3
 10302  003ACA  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10303  003ACC  ECA8  F044         	call	___wmul	;wreg free
 10304  003AD0  0E28               	movlw	low __npowers_
 10305  003AD2  0101               	movlb	1	; () banked
 10306  003AD4  2513               	addwf	?___wmul& (0+255),w,b
 10307  003AD6  6EF6               	movwf	16374,c
 10308  003AD8  0EFB               	movlw	high __npowers_
 10309  003ADA  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10310  003ADC  6EF7               	movwf	16375,c
 10311  003ADE                     	if	1	;There are 3 active tblptr bytes
 10312  003ADE  6AF8               	clrf	16376,c
 10313  003AE0  0E00               	movlw	low (__mediumconst shr (0+16))
 10314  003AE2  22F8               	addwfc	16376,f,c
 10315  003AE4                     	endif
 10316  003AE4  0009               	tblrd		*+
 10317  003AE6  006F FFD4  F134    	movff	16373,___ftmul@f1
 10318  003AEC  0009               	tblrd		*+
 10319  003AEE  006F FFD4  F135    	movff	16373,___ftmul@f1+1
 10320  003AF4  000A               	tblrd		*-
 10321  003AF6  006F FFD4  F136    	movff	16373,___ftmul@f1+2
 10322  003AFC  EC5A  F032         	call	___ftmul	;wreg free
 10323  003B00  0060  F4D0  F146   	movff	?___ftmul,_scale$2794
 10324  003B06  0060  F4D4  F147   	movff	?___ftmul+1,_scale$2794+1
 10325  003B0C  0060  F4D8  F148   	movff	?___ftmul+2,_scale$2794+2
 10326                           
 10327                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10328  003B12  0060  F518  F134   	movff	_scale$2794,___ftmul@f1
 10329  003B18  0060  F51C  F135   	movff	_scale$2794+1,___ftmul@f1+1
 10330  003B1E  0060  F520  F136   	movff	_scale$2794+2,___ftmul@f1+2
 10331  003B24  0E00               	movlw	0
 10332  003B26  0101               	movlb	1	; () banked
 10333  003B28  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10334  003B2A  0E03               	movlw	3
 10335  003B2C  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10336  003B2E  0E00               	movlw	0
 10337  003B30  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
 10338  003B32  0E0A               	movlw	10
 10339  003B34  6F07               	movwf	___awmod@divisor& (0+255),b
 10340  003B36  5149               	movf	scale@scl& (0+255),w,b
 10341  003B38  6F05               	movwf	___awmod@dividend& (0+255),b
 10342  003B3A  6B06               	clrf	(___awmod@dividend+1)& (0+255),b
 10343  003B3C  BF05               	btfsc	___awmod@dividend& (0+255),7,b
 10344  003B3E  0706               	decf	(___awmod@dividend+1)& (0+255),f,b
 10345  003B40  EC88  F03E         	call	___awmod	;wreg free
 10346  003B44  0060  F414  F113   	movff	?___awmod,___wmul@multiplier
 10347  003B4A  0060  F418  F114   	movff	?___awmod+1,___wmul@multiplier+1
 10348  003B50  ECA8  F044         	call	___wmul	;wreg free
 10349  003B54  0E28               	movlw	low __npowers_
 10350  003B56  0101               	movlb	1	; () banked
 10351  003B58  2513               	addwf	?___wmul& (0+255),w,b
 10352  003B5A  6EF6               	movwf	16374,c
 10353  003B5C  0EFB               	movlw	high __npowers_
 10354  003B5E  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10355  003B60  6EF7               	movwf	16375,c
 10356  003B62                     	if	1	;There are 3 active tblptr bytes
 10357  003B62  6AF8               	clrf	16376,c
 10358  003B64  0E00               	movlw	low (__mediumconst shr (0+16))
 10359  003B66  22F8               	addwfc	16376,f,c
 10360  003B68                     	endif
 10361  003B68  0009               	tblrd		*+
 10362  003B6A  006F FFD4  F137    	movff	16373,___ftmul@f2
 10363  003B70  0009               	tblrd		*+
 10364  003B72  006F FFD4  F138    	movff	16373,___ftmul@f2+1
 10365  003B78  000A               	tblrd		*-
 10366  003B7A  006F FFD4  F139    	movff	16373,___ftmul@f2+2
 10367  003B80  EC5A  F032         	call	___ftmul	;wreg free
 10368  003B84  0060  F4D0  F143   	movff	?___ftmul,?_scale
 10369  003B8A  0060  F4D4  F144   	movff	?___ftmul+1,?_scale+1
 10370  003B90  0060  F4D8  F145   	movff	?___ftmul+2,?_scale+2
 10371  003B96  0012               	return	
 10372  003B98                     l953:
 10373                           
 10374                           ;doprnt.c: 432: else if(scl > 10)
 10375  003B98  0101               	movlb	1	; () banked
 10376  003B9A  5149               	movf	scale@scl& (0+255),w,b
 10377  003B9C  0A80               	xorlw	128
 10378  003B9E  0F75               	addlw	-139
 10379  003BA0  A0D8               	btfss	16344,0,c
 10380  003BA2  D067               	goto	l956
 10381                           
 10382                           ; BSR set to: 1
 10383                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 10384  003BA4  0E00               	movlw	0
 10385  003BA6  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
 10386  003BA8  0E0A               	movlw	10
 10387  003BAA  6F0D               	movwf	___awdiv@divisor& (0+255),b
 10388  003BAC  5149               	movf	scale@scl& (0+255),w,b
 10389  003BAE  6F0B               	movwf	___awdiv@dividend& (0+255),b
 10390  003BB0  6B0C               	clrf	(___awdiv@dividend+1)& (0+255),b
 10391  003BB2  BF0B               	btfsc	___awdiv@dividend& (0+255),7,b
 10392  003BB4  070C               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10393  003BB6  EC7A  F03C         	call	___awdiv	;wreg free
 10394  003BBA  0E09               	movlw	9
 10395  003BBC  0101               	movlb	1	; () banked
 10396  003BBE  250B               	addwf	?___awdiv& (0+255),w,b
 10397  003BC0  6F13               	movwf	___wmul@multiplier& (0+255),b
 10398  003BC2  0E00               	movlw	0
 10399  003BC4  210C               	addwfc	(?___awdiv+1)& (0+255),w,b
 10400  003BC6  6F14               	movwf	(___wmul@multiplier+1)& (0+255),b
 10401  003BC8  0E00               	movlw	0
 10402  003BCA  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10403  003BCC  0E03               	movlw	3
 10404  003BCE  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10405  003BD0  ECA8  F044         	call	___wmul	;wreg free
 10406  003BD4  0E28               	movlw	low __npowers_
 10407  003BD6  0101               	movlb	1	; () banked
 10408  003BD8  2513               	addwf	?___wmul& (0+255),w,b
 10409  003BDA  6EF6               	movwf	16374,c
 10410  003BDC  0EFB               	movlw	high __npowers_
 10411  003BDE  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10412  003BE0  6EF7               	movwf	16375,c
 10413  003BE2                     	if	1	;There are 3 active tblptr bytes
 10414  003BE2  6AF8               	clrf	16376,c
 10415  003BE4  0E00               	movlw	low (__mediumconst shr (0+16))
 10416  003BE6  22F8               	addwfc	16376,f,c
 10417  003BE8                     	endif
 10418  003BE8  0009               	tblrd		*+
 10419  003BEA  006F FFD4  F134    	movff	16373,___ftmul@f1
 10420  003BF0  0009               	tblrd		*+
 10421  003BF2  006F FFD4  F135    	movff	16373,___ftmul@f1+1
 10422  003BF8  000A               	tblrd		*-
 10423  003BFA  006F FFD4  F136    	movff	16373,___ftmul@f1+2
 10424  003C00  0E00               	movlw	0
 10425  003C02  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10426  003C04  0E03               	movlw	3
 10427  003C06  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10428  003C08  0E00               	movlw	0
 10429  003C0A  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
 10430  003C0C  0E0A               	movlw	10
 10431  003C0E  6F07               	movwf	___awmod@divisor& (0+255),b
 10432  003C10  5149               	movf	scale@scl& (0+255),w,b
 10433  003C12  6F05               	movwf	___awmod@dividend& (0+255),b
 10434  003C14  6B06               	clrf	(___awmod@dividend+1)& (0+255),b
 10435  003C16  BF05               	btfsc	___awmod@dividend& (0+255),7,b
 10436  003C18  0706               	decf	(___awmod@dividend+1)& (0+255),f,b
 10437  003C1A  EC88  F03E         	call	___awmod	;wreg free
 10438  003C1E  0060  F414  F113   	movff	?___awmod,___wmul@multiplier
 10439  003C24  0060  F418  F114   	movff	?___awmod+1,___wmul@multiplier+1
 10440  003C2A  ECA8  F044         	call	___wmul	;wreg free
 10441  003C2E  0E28               	movlw	low __npowers_
 10442  003C30  0101               	movlb	1	; () banked
 10443  003C32  2513               	addwf	?___wmul& (0+255),w,b
 10444  003C34  6EF6               	movwf	16374,c
 10445  003C36  0EFB               	movlw	high __npowers_
 10446  003C38  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10447  003C3A  6EF7               	movwf	16375,c
 10448  003C3C                     	if	1	;There are 3 active tblptr bytes
 10449  003C3C  6AF8               	clrf	16376,c
 10450  003C3E  0E00               	movlw	low (__mediumconst shr (0+16))
 10451  003C40  22F8               	addwfc	16376,f,c
 10452  003C42                     	endif
 10453  003C42  0009               	tblrd		*+
 10454  003C44  006F FFD4  F137    	movff	16373,___ftmul@f2
 10455  003C4A  0009               	tblrd		*+
 10456  003C4C  006F FFD4  F138    	movff	16373,___ftmul@f2+1
 10457  003C52  000A               	tblrd		*-
 10458  003C54  006F FFD4  F139    	movff	16373,___ftmul@f2+2
 10459  003C5A  EC5A  F032         	call	___ftmul	;wreg free
 10460  003C5E  0060  F4D0  F143   	movff	?___ftmul,?_scale
 10461  003C64  0060  F4D4  F144   	movff	?___ftmul+1,?_scale+1
 10462  003C6A  0060  F4D8  F145   	movff	?___ftmul+2,?_scale+2
 10463  003C70  0012               	return	
 10464  003C72                     l956:
 10465                           
 10466                           ;doprnt.c: 434: return _npowers_[scl];
 10467  003C72  0101               	movlb	1	; () banked
 10468  003C74  5149               	movf	scale@scl& (0+255),w,b
 10469  003C76  0D03               	mullw	3
 10470  003C78  0E28               	movlw	low __npowers_
 10471  003C7A  24F3               	addwf	16371,w,c
 10472  003C7C  6EF6               	movwf	16374,c
 10473  003C7E  0EFB               	movlw	high __npowers_
 10474  003C80  20F4               	addwfc	16372,w,c
 10475  003C82  6EF7               	movwf	16375,c
 10476  003C84                     	if	1	;There are 3 active tblptr bytes
 10477  003C84  6AF8               	clrf	16376,c
 10478  003C86  0E00               	movlw	low (__mediumconst shr (0+16))
 10479  003C88  22F8               	addwfc	16376,f,c
 10480  003C8A                     	endif
 10481  003C8A  0009               	tblrd		*+
 10482  003C8C  006F FFD4  F143    	movff	16373,?_scale
 10483  003C92  0009               	tblrd		*+
 10484  003C94  006F FFD4  F144    	movff	16373,?_scale+1
 10485  003C9A  000A               	tblrd		*-
 10486  003C9C  006F FFD4  F145    	movff	16373,?_scale+2
 10487                           
 10488                           ; BSR set to: 1
 10489  003CA2  0012               	return	
 10490  003CA4                     l952:
 10491                           
 10492                           ; BSR set to: 1
 10493                           ;doprnt.c: 435: }
 10494                           ;doprnt.c: 436: if(scl>=110)
 10495                           
 10496                           ; BSR set to: 1
 10497  003CA4  5149               	movf	scale@scl& (0+255),w,b
 10498  003CA6  0A80               	xorlw	128
 10499  003CA8  0F12               	addlw	-238
 10500  003CAA  A0D8               	btfss	16344,0,c
 10501  003CAC  D0B6               	goto	l957
 10502                           
 10503                           ; BSR set to: 1
 10504                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10505  003CAE  0E00               	movlw	0
 10506  003CB0  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10507  003CB2  0E03               	movlw	3
 10508  003CB4  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10509  003CB6  0E00               	movlw	0
 10510  003CB8  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
 10511  003CBA  0E0A               	movlw	10
 10512  003CBC  6F0D               	movwf	___awdiv@divisor& (0+255),b
 10513  003CBE  0E00               	movlw	0
 10514  003CC0  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
 10515  003CC2  0E64               	movlw	100
 10516  003CC4  6F07               	movwf	___awmod@divisor& (0+255),b
 10517  003CC6  5149               	movf	scale@scl& (0+255),w,b
 10518  003CC8  6F05               	movwf	___awmod@dividend& (0+255),b
 10519  003CCA  6B06               	clrf	(___awmod@dividend+1)& (0+255),b
 10520  003CCC  BF05               	btfsc	___awmod@dividend& (0+255),7,b
 10521  003CCE  0706               	decf	(___awmod@dividend+1)& (0+255),f,b
 10522  003CD0  EC88  F03E         	call	___awmod	;wreg free
 10523  003CD4  0060  F414  F10B   	movff	?___awmod,___awdiv@dividend
 10524  003CDA  0060  F418  F10C   	movff	?___awmod+1,___awdiv@dividend+1
 10525  003CE0  EC7A  F03C         	call	___awdiv	;wreg free
 10526  003CE4  0E09               	movlw	9
 10527  003CE6  0101               	movlb	1	; () banked
 10528  003CE8  250B               	addwf	?___awdiv& (0+255),w,b
 10529  003CEA  6F13               	movwf	___wmul@multiplier& (0+255),b
 10530  003CEC  0E00               	movlw	0
 10531  003CEE  210C               	addwfc	(?___awdiv+1)& (0+255),w,b
 10532  003CF0  6F14               	movwf	(___wmul@multiplier+1)& (0+255),b
 10533  003CF2  ECA8  F044         	call	___wmul	;wreg free
 10534  003CF6  0E01               	movlw	low __powers_
 10535  003CF8  0101               	movlb	1	; () banked
 10536  003CFA  2513               	addwf	?___wmul& (0+255),w,b
 10537  003CFC  6EF6               	movwf	16374,c
 10538  003CFE  0EFB               	movlw	high __powers_
 10539  003D00  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10540  003D02  6EF7               	movwf	16375,c
 10541  003D04                     	if	1	;There are 3 active tblptr bytes
 10542  003D04  6AF8               	clrf	16376,c
 10543  003D06  0E00               	movlw	low (__mediumconst shr (0+16))
 10544  003D08  22F8               	addwfc	16376,f,c
 10545  003D0A                     	endif
 10546  003D0A  0009               	tblrd		*+
 10547  003D0C  006F FFD4  F137    	movff	16373,___ftmul@f2
 10548  003D12  0009               	tblrd		*+
 10549  003D14  006F FFD4  F138    	movff	16373,___ftmul@f2+1
 10550  003D1A  000A               	tblrd		*-
 10551  003D1C  006F FFD4  F139    	movff	16373,___ftmul@f2+2
 10552  003D22  0E00               	movlw	0
 10553  003D24  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
 10554  003D26  0E64               	movlw	100
 10555  003D28  6F0D               	movwf	___awdiv@divisor& (0+255),b
 10556  003D2A  5149               	movf	scale@scl& (0+255),w,b
 10557  003D2C  6F0B               	movwf	___awdiv@dividend& (0+255),b
 10558  003D2E  6B0C               	clrf	(___awdiv@dividend+1)& (0+255),b
 10559  003D30  BF0B               	btfsc	___awdiv@dividend& (0+255),7,b
 10560  003D32  070C               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10561  003D34  EC7A  F03C         	call	___awdiv	;wreg free
 10562  003D38  0E12               	movlw	18
 10563  003D3A  0101               	movlb	1	; () banked
 10564  003D3C  250B               	addwf	?___awdiv& (0+255),w,b
 10565  003D3E  6F13               	movwf	___wmul@multiplier& (0+255),b
 10566  003D40  0E00               	movlw	0
 10567  003D42  210C               	addwfc	(?___awdiv+1)& (0+255),w,b
 10568  003D44  6F14               	movwf	(___wmul@multiplier+1)& (0+255),b
 10569  003D46  0E00               	movlw	0
 10570  003D48  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10571  003D4A  0E03               	movlw	3
 10572  003D4C  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10573  003D4E  ECA8  F044         	call	___wmul	;wreg free
 10574  003D52  0E01               	movlw	low __powers_
 10575  003D54  0101               	movlb	1	; () banked
 10576  003D56  2513               	addwf	?___wmul& (0+255),w,b
 10577  003D58  6EF6               	movwf	16374,c
 10578  003D5A  0EFB               	movlw	high __powers_
 10579  003D5C  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10580  003D5E  6EF7               	movwf	16375,c
 10581  003D60                     	if	1	;There are 3 active tblptr bytes
 10582  003D60  6AF8               	clrf	16376,c
 10583  003D62  0E00               	movlw	low (__mediumconst shr (0+16))
 10584  003D64  22F8               	addwfc	16376,f,c
 10585  003D66                     	endif
 10586  003D66  0009               	tblrd		*+
 10587  003D68  006F FFD4  F134    	movff	16373,___ftmul@f1
 10588  003D6E  0009               	tblrd		*+
 10589  003D70  006F FFD4  F135    	movff	16373,___ftmul@f1+1
 10590  003D76  000A               	tblrd		*-
 10591  003D78  006F FFD4  F136    	movff	16373,___ftmul@f1+2
 10592  003D7E  EC5A  F032         	call	___ftmul	;wreg free
 10593  003D82  0060  F4D0  F146   	movff	?___ftmul,_scale$2794
 10594  003D88  0060  F4D4  F147   	movff	?___ftmul+1,_scale$2794+1
 10595  003D8E  0060  F4D8  F148   	movff	?___ftmul+2,_scale$2794+2
 10596                           
 10597                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10598  003D94  0060  F518  F134   	movff	_scale$2794,___ftmul@f1
 10599  003D9A  0060  F51C  F135   	movff	_scale$2794+1,___ftmul@f1+1
 10600  003DA0  0060  F520  F136   	movff	_scale$2794+2,___ftmul@f1+2
 10601  003DA6  0E00               	movlw	0
 10602  003DA8  0101               	movlb	1	; () banked
 10603  003DAA  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10604  003DAC  0E03               	movlw	3
 10605  003DAE  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10606  003DB0  0E00               	movlw	0
 10607  003DB2  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
 10608  003DB4  0E0A               	movlw	10
 10609  003DB6  6F07               	movwf	___awmod@divisor& (0+255),b
 10610  003DB8  5149               	movf	scale@scl& (0+255),w,b
 10611  003DBA  6F05               	movwf	___awmod@dividend& (0+255),b
 10612  003DBC  6B06               	clrf	(___awmod@dividend+1)& (0+255),b
 10613  003DBE  BF05               	btfsc	___awmod@dividend& (0+255),7,b
 10614  003DC0  0706               	decf	(___awmod@dividend+1)& (0+255),f,b
 10615  003DC2  EC88  F03E         	call	___awmod	;wreg free
 10616  003DC6  0060  F414  F113   	movff	?___awmod,___wmul@multiplier
 10617  003DCC  0060  F418  F114   	movff	?___awmod+1,___wmul@multiplier+1
 10618  003DD2  ECA8  F044         	call	___wmul	;wreg free
 10619  003DD6  0E01               	movlw	low __powers_
 10620  003DD8  0101               	movlb	1	; () banked
 10621  003DDA  2513               	addwf	?___wmul& (0+255),w,b
 10622  003DDC  6EF6               	movwf	16374,c
 10623  003DDE  0EFB               	movlw	high __powers_
 10624  003DE0  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10625  003DE2  6EF7               	movwf	16375,c
 10626  003DE4                     	if	1	;There are 3 active tblptr bytes
 10627  003DE4  6AF8               	clrf	16376,c
 10628  003DE6  0E00               	movlw	low (__mediumconst shr (0+16))
 10629  003DE8  22F8               	addwfc	16376,f,c
 10630  003DEA                     	endif
 10631  003DEA  0009               	tblrd		*+
 10632  003DEC  006F FFD4  F137    	movff	16373,___ftmul@f2
 10633  003DF2  0009               	tblrd		*+
 10634  003DF4  006F FFD4  F138    	movff	16373,___ftmul@f2+1
 10635  003DFA  000A               	tblrd		*-
 10636  003DFC  006F FFD4  F139    	movff	16373,___ftmul@f2+2
 10637  003E02  EC5A  F032         	call	___ftmul	;wreg free
 10638  003E06  0060  F4D0  F143   	movff	?___ftmul,?_scale
 10639  003E0C  0060  F4D4  F144   	movff	?___ftmul+1,?_scale+1
 10640  003E12  0060  F4D8  F145   	movff	?___ftmul+2,?_scale+2
 10641  003E18  0012               	return	
 10642  003E1A                     l957:
 10643                           
 10644                           ;doprnt.c: 438: else if(scl > 10)
 10645  003E1A  0101               	movlb	1	; () banked
 10646  003E1C  5149               	movf	scale@scl& (0+255),w,b
 10647  003E1E  0A80               	xorlw	128
 10648  003E20  0F75               	addlw	-139
 10649  003E22  A0D8               	btfss	16344,0,c
 10650  003E24  D067               	goto	l959
 10651                           
 10652                           ; BSR set to: 1
 10653                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 10654  003E26  0E00               	movlw	0
 10655  003E28  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
 10656  003E2A  0E0A               	movlw	10
 10657  003E2C  6F0D               	movwf	___awdiv@divisor& (0+255),b
 10658  003E2E  5149               	movf	scale@scl& (0+255),w,b
 10659  003E30  6F0B               	movwf	___awdiv@dividend& (0+255),b
 10660  003E32  6B0C               	clrf	(___awdiv@dividend+1)& (0+255),b
 10661  003E34  BF0B               	btfsc	___awdiv@dividend& (0+255),7,b
 10662  003E36  070C               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10663  003E38  EC7A  F03C         	call	___awdiv	;wreg free
 10664  003E3C  0E09               	movlw	9
 10665  003E3E  0101               	movlb	1	; () banked
 10666  003E40  250B               	addwf	?___awdiv& (0+255),w,b
 10667  003E42  6F13               	movwf	___wmul@multiplier& (0+255),b
 10668  003E44  0E00               	movlw	0
 10669  003E46  210C               	addwfc	(?___awdiv+1)& (0+255),w,b
 10670  003E48  6F14               	movwf	(___wmul@multiplier+1)& (0+255),b
 10671  003E4A  0E00               	movlw	0
 10672  003E4C  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10673  003E4E  0E03               	movlw	3
 10674  003E50  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10675  003E52  ECA8  F044         	call	___wmul	;wreg free
 10676  003E56  0E01               	movlw	low __powers_
 10677  003E58  0101               	movlb	1	; () banked
 10678  003E5A  2513               	addwf	?___wmul& (0+255),w,b
 10679  003E5C  6EF6               	movwf	16374,c
 10680  003E5E  0EFB               	movlw	high __powers_
 10681  003E60  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10682  003E62  6EF7               	movwf	16375,c
 10683  003E64                     	if	1	;There are 3 active tblptr bytes
 10684  003E64  6AF8               	clrf	16376,c
 10685  003E66  0E00               	movlw	low (__mediumconst shr (0+16))
 10686  003E68  22F8               	addwfc	16376,f,c
 10687  003E6A                     	endif
 10688  003E6A  0009               	tblrd		*+
 10689  003E6C  006F FFD4  F134    	movff	16373,___ftmul@f1
 10690  003E72  0009               	tblrd		*+
 10691  003E74  006F FFD4  F135    	movff	16373,___ftmul@f1+1
 10692  003E7A  000A               	tblrd		*-
 10693  003E7C  006F FFD4  F136    	movff	16373,___ftmul@f1+2
 10694  003E82  0E00               	movlw	0
 10695  003E84  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10696  003E86  0E03               	movlw	3
 10697  003E88  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10698  003E8A  0E00               	movlw	0
 10699  003E8C  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
 10700  003E8E  0E0A               	movlw	10
 10701  003E90  6F07               	movwf	___awmod@divisor& (0+255),b
 10702  003E92  5149               	movf	scale@scl& (0+255),w,b
 10703  003E94  6F05               	movwf	___awmod@dividend& (0+255),b
 10704  003E96  6B06               	clrf	(___awmod@dividend+1)& (0+255),b
 10705  003E98  BF05               	btfsc	___awmod@dividend& (0+255),7,b
 10706  003E9A  0706               	decf	(___awmod@dividend+1)& (0+255),f,b
 10707  003E9C  EC88  F03E         	call	___awmod	;wreg free
 10708  003EA0  0060  F414  F113   	movff	?___awmod,___wmul@multiplier
 10709  003EA6  0060  F418  F114   	movff	?___awmod+1,___wmul@multiplier+1
 10710  003EAC  ECA8  F044         	call	___wmul	;wreg free
 10711  003EB0  0E01               	movlw	low __powers_
 10712  003EB2  0101               	movlb	1	; () banked
 10713  003EB4  2513               	addwf	?___wmul& (0+255),w,b
 10714  003EB6  6EF6               	movwf	16374,c
 10715  003EB8  0EFB               	movlw	high __powers_
 10716  003EBA  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10717  003EBC  6EF7               	movwf	16375,c
 10718  003EBE                     	if	1	;There are 3 active tblptr bytes
 10719  003EBE  6AF8               	clrf	16376,c
 10720  003EC0  0E00               	movlw	low (__mediumconst shr (0+16))
 10721  003EC2  22F8               	addwfc	16376,f,c
 10722  003EC4                     	endif
 10723  003EC4  0009               	tblrd		*+
 10724  003EC6  006F FFD4  F137    	movff	16373,___ftmul@f2
 10725  003ECC  0009               	tblrd		*+
 10726  003ECE  006F FFD4  F138    	movff	16373,___ftmul@f2+1
 10727  003ED4  000A               	tblrd		*-
 10728  003ED6  006F FFD4  F139    	movff	16373,___ftmul@f2+2
 10729  003EDC  EC5A  F032         	call	___ftmul	;wreg free
 10730  003EE0  0060  F4D0  F143   	movff	?___ftmul,?_scale
 10731  003EE6  0060  F4D4  F144   	movff	?___ftmul+1,?_scale+1
 10732  003EEC  0060  F4D8  F145   	movff	?___ftmul+2,?_scale+2
 10733  003EF2  0012               	return	
 10734  003EF4                     l959:
 10735                           
 10736                           ;doprnt.c: 440: return _powers_[scl];
 10737  003EF4  0101               	movlb	1	; () banked
 10738  003EF6  5149               	movf	scale@scl& (0+255),w,b
 10739  003EF8  0D03               	mullw	3
 10740  003EFA  0E01               	movlw	low __powers_
 10741  003EFC  24F3               	addwf	16371,w,c
 10742  003EFE  6EF6               	movwf	16374,c
 10743  003F00  0EFB               	movlw	high __powers_
 10744  003F02  20F4               	addwfc	16372,w,c
 10745  003F04  6EF7               	movwf	16375,c
 10746  003F06                     	if	1	;There are 3 active tblptr bytes
 10747  003F06  6AF8               	clrf	16376,c
 10748  003F08  0E00               	movlw	low (__mediumconst shr (0+16))
 10749  003F0A  22F8               	addwfc	16376,f,c
 10750  003F0C                     	endif
 10751  003F0C  0009               	tblrd		*+
 10752  003F0E  006F FFD4  F143    	movff	16373,?_scale
 10753  003F14  0009               	tblrd		*+
 10754  003F16  006F FFD4  F144    	movff	16373,?_scale+1
 10755  003F1C  000A               	tblrd		*-
 10756  003F1E  006F FFD4  F145    	movff	16373,?_scale+2
 10757  003F24  0012               	return	
 10758  003F26                     __end_of_scale:
 10759                           	opt stack 0
 10760                           
 10761 ;; *************** function _isdigit *****************
 10762 ;; Defined at:
 10763 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 10764 ;; Parameters:    Size  Location     Type
 10765 ;;  c               1    wreg     unsigned char 
 10766 ;; Auto vars:     Size  Location     Type
 10767 ;;  c               1    7[BANK1 ] unsigned char 
 10768 ;; Return value:  Size  Location     Type
 10769 ;;		None               void
 10770 ;; Registers used:
 10771 ;;		wreg, status,2, status,0
 10772 ;; Tracked objects:
 10773 ;;		On entry : 0/0
 10774 ;;		On exit  : 0/0
 10775 ;;		Unchanged: 0/0
 10776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10778 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10779 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10780 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10781 ;;Total ram usage:        3 bytes
 10782 ;; Hardware stack levels used:    1
 10783 ;; Hardware stack levels required when called:   10
 10784 ;; This function calls:
 10785 ;;		Nothing
 10786 ;; This function is called by:
 10787 ;;		_sprintf
 10788 ;; This function uses a non-reentrant model
 10789 ;;
 10790                           
 10791                           	psect	text12
 10792  008A30                     __ptext12:
 10793                           	opt stack 0
 10794  008A30                     _isdigit:
 10795                           	opt stack 19
 10796                           
 10797                           ;incstack = 0
 10798                           ;isdigit@c stored from wreg
 10799  008A30  0101               	movlb	1	; () banked
 10800  008A32  6F07               	movwf	isdigit@c& (0+255),b
 10801  008A34  0E00               	movlw	0
 10802  008A36  0101               	movlb	1	; () banked
 10803  008A38  6F06               	movwf	_isdigit$2408& (0+255),b
 10804                           
 10805                           ; BSR set to: 1
 10806  008A3A  0E3A               	movlw	58
 10807  008A3C  6107               	cpfslt	isdigit@c& (0+255),b
 10808  008A3E  D005               	goto	l1599
 10809                           
 10810                           ; BSR set to: 1
 10811  008A40  0E2F               	movlw	47
 10812  008A42  6507               	cpfsgt	isdigit@c& (0+255),b
 10813  008A44  D002               	goto	l1599
 10814                           
 10815                           ; BSR set to: 1
 10816  008A46  0E01               	movlw	1
 10817  008A48  6F06               	movwf	_isdigit$2408& (0+255),b
 10818  008A4A                     l1599:
 10819                           
 10820                           ; BSR set to: 1
 10821                           
 10822                           ; BSR set to: 1
 10823  008A4A  0060  F418  F105   	movff	_isdigit$2408,??_isdigit
 10824  008A50  3105               	rrcf	??_isdigit& (0+255),w,b
 10825  008A52  0012               	return	
 10826  008A54                     __end_of_isdigit:
 10827                           	opt stack 0
 10828                           
 10829 ;; *************** function _fround *****************
 10830 ;; Defined at:
 10831 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 10832 ;; Parameters:    Size  Location     Type
 10833 ;;  prec            1    wreg     unsigned char 
 10834 ;; Auto vars:     Size  Location     Type
 10835 ;;  prec            1   76[BANK1 ] unsigned char 
 10836 ;; Return value:  Size  Location     Type
 10837 ;;                  3   67[BANK1 ] unsigned char 
 10838 ;; Registers used:
 10839 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10840 ;; Tracked objects:
 10841 ;;		On entry : 0/0
 10842 ;;		On exit  : 0/0
 10843 ;;		Unchanged: 0/0
 10844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10845 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10846 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10848 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10849 ;;Total ram usage:       10 bytes
 10850 ;; Hardware stack levels used:    1
 10851 ;; Hardware stack levels required when called:   12
 10852 ;; This function calls:
 10853 ;;		___awdiv
 10854 ;;		___awmod
 10855 ;;		___ftmul
 10856 ;;		___wmul
 10857 ;; This function is called by:
 10858 ;;		_sprintf
 10859 ;; This function uses a non-reentrant model
 10860 ;;
 10861                           
 10862                           	psect	text13
 10863  0047BC                     __ptext13:
 10864                           	opt stack 0
 10865  0047BC                     _fround:
 10866                           	opt stack 17
 10867                           
 10868                           ; BSR set to: 1
 10869                           ;incstack = 0
 10870                           ;fround@prec stored from wreg
 10871  0047BC  0101               	movlb	1	; () banked
 10872  0047BE  6F4C               	movwf	fround@prec& (0+255),b
 10873                           
 10874                           ;doprnt.c: 413: if(prec>=110)
 10875  0047C0  0E6D               	movlw	109
 10876  0047C2  0101               	movlb	1	; () banked
 10877  0047C4  654C               	cpfsgt	fround@prec& (0+255),b
 10878  0047C6  D0CE               	goto	l946
 10879                           
 10880                           ; BSR set to: 1
 10881                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10882  0047C8  0E00               	movlw	0
 10883  0047CA  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10884  0047CC  0E03               	movlw	3
 10885  0047CE  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10886  0047D0  0E00               	movlw	0
 10887  0047D2  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
 10888  0047D4  0E0A               	movlw	10
 10889  0047D6  6F0D               	movwf	___awdiv@divisor& (0+255),b
 10890  0047D8  0E00               	movlw	0
 10891  0047DA  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
 10892  0047DC  0E64               	movlw	100
 10893  0047DE  6F07               	movwf	___awmod@divisor& (0+255),b
 10894  0047E0  0060  F530  F105   	movff	fround@prec,___awmod@dividend
 10895  0047E6  6B06               	clrf	(___awmod@dividend+1)& (0+255),b
 10896  0047E8  EC88  F03E         	call	___awmod	;wreg free
 10897  0047EC  0060  F414  F10B   	movff	?___awmod,___awdiv@dividend
 10898  0047F2  0060  F418  F10C   	movff	?___awmod+1,___awdiv@dividend+1
 10899  0047F8  EC7A  F03C         	call	___awdiv	;wreg free
 10900  0047FC  0E09               	movlw	9
 10901  0047FE  0101               	movlb	1	; () banked
 10902  004800  250B               	addwf	?___awdiv& (0+255),w,b
 10903  004802  6F13               	movwf	___wmul@multiplier& (0+255),b
 10904  004804  0E00               	movlw	0
 10905  004806  210C               	addwfc	(?___awdiv+1)& (0+255),w,b
 10906  004808  6F14               	movwf	(___wmul@multiplier+1)& (0+255),b
 10907  00480A  ECA8  F044         	call	___wmul	;wreg free
 10908  00480E  0E28               	movlw	low __npowers_
 10909  004810  0101               	movlb	1	; () banked
 10910  004812  2513               	addwf	?___wmul& (0+255),w,b
 10911  004814  6EF6               	movwf	16374,c
 10912  004816  0EFB               	movlw	high __npowers_
 10913  004818  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10914  00481A  6EF7               	movwf	16375,c
 10915  00481C                     	if	1	;There are 3 active tblptr bytes
 10916  00481C  6AF8               	clrf	16376,c
 10917  00481E  0E00               	movlw	low (__mediumconst shr (0+16))
 10918  004820  22F8               	addwfc	16376,f,c
 10919  004822                     	endif
 10920  004822  0009               	tblrd		*+
 10921  004824  006F FFD4  F137    	movff	16373,___ftmul@f2
 10922  00482A  0009               	tblrd		*+
 10923  00482C  006F FFD4  F138    	movff	16373,___ftmul@f2+1
 10924  004832  000A               	tblrd		*-
 10925  004834  006F FFD4  F139    	movff	16373,___ftmul@f2+2
 10926  00483A  0E00               	movlw	0
 10927  00483C  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
 10928  00483E  0E64               	movlw	100
 10929  004840  6F0D               	movwf	___awdiv@divisor& (0+255),b
 10930  004842  0060  F530  F10B   	movff	fround@prec,___awdiv@dividend
 10931  004848  6B0C               	clrf	(___awdiv@dividend+1)& (0+255),b
 10932  00484A  EC7A  F03C         	call	___awdiv	;wreg free
 10933  00484E  0E12               	movlw	18
 10934  004850  0101               	movlb	1	; () banked
 10935  004852  250B               	addwf	?___awdiv& (0+255),w,b
 10936  004854  6F13               	movwf	___wmul@multiplier& (0+255),b
 10937  004856  0E00               	movlw	0
 10938  004858  210C               	addwfc	(?___awdiv+1)& (0+255),w,b
 10939  00485A  6F14               	movwf	(___wmul@multiplier+1)& (0+255),b
 10940  00485C  0E00               	movlw	0
 10941  00485E  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10942  004860  0E03               	movlw	3
 10943  004862  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10944  004864  ECA8  F044         	call	___wmul	;wreg free
 10945  004868  0E28               	movlw	low __npowers_
 10946  00486A  0101               	movlb	1	; () banked
 10947  00486C  2513               	addwf	?___wmul& (0+255),w,b
 10948  00486E  6EF6               	movwf	16374,c
 10949  004870  0EFB               	movlw	high __npowers_
 10950  004872  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10951  004874  6EF7               	movwf	16375,c
 10952  004876                     	if	1	;There are 3 active tblptr bytes
 10953  004876  6AF8               	clrf	16376,c
 10954  004878  0E00               	movlw	low (__mediumconst shr (0+16))
 10955  00487A  22F8               	addwfc	16376,f,c
 10956  00487C                     	endif
 10957  00487C  0009               	tblrd		*+
 10958  00487E  006F FFD4  F134    	movff	16373,___ftmul@f1
 10959  004884  0009               	tblrd		*+
 10960  004886  006F FFD4  F135    	movff	16373,___ftmul@f1+1
 10961  00488C  000A               	tblrd		*-
 10962  00488E  006F FFD4  F136    	movff	16373,___ftmul@f1+2
 10963  004894  EC5A  F032         	call	___ftmul	;wreg free
 10964  004898  0060  F4D0  F149   	movff	?___ftmul,_fround$2792
 10965  00489E  0060  F4D4  F14A   	movff	?___ftmul+1,_fround$2792+1
 10966  0048A4  0060  F4D8  F14B   	movff	?___ftmul+2,_fround$2792+2
 10967                           
 10968                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10969  0048AA  0E00               	movlw	0
 10970  0048AC  0101               	movlb	1	; () banked
 10971  0048AE  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10972  0048B0  0E03               	movlw	3
 10973  0048B2  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10974  0048B4  0E00               	movlw	0
 10975  0048B6  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
 10976  0048B8  0E0A               	movlw	10
 10977  0048BA  6F07               	movwf	___awmod@divisor& (0+255),b
 10978  0048BC  0060  F530  F105   	movff	fround@prec,___awmod@dividend
 10979  0048C2  6B06               	clrf	(___awmod@dividend+1)& (0+255),b
 10980  0048C4  EC88  F03E         	call	___awmod	;wreg free
 10981  0048C8  0060  F414  F113   	movff	?___awmod,___wmul@multiplier
 10982  0048CE  0060  F418  F114   	movff	?___awmod+1,___wmul@multiplier+1
 10983  0048D4  ECA8  F044         	call	___wmul	;wreg free
 10984  0048D8  0E28               	movlw	low __npowers_
 10985  0048DA  0101               	movlb	1	; () banked
 10986  0048DC  2513               	addwf	?___wmul& (0+255),w,b
 10987  0048DE  6EF6               	movwf	16374,c
 10988  0048E0  0EFB               	movlw	high __npowers_
 10989  0048E2  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10990  0048E4  6EF7               	movwf	16375,c
 10991  0048E6                     	if	1	;There are 3 active tblptr bytes
 10992  0048E6  6AF8               	clrf	16376,c
 10993  0048E8  0E00               	movlw	low (__mediumconst shr (0+16))
 10994  0048EA  22F8               	addwfc	16376,f,c
 10995  0048EC                     	endif
 10996  0048EC  0009               	tblrd		*+
 10997  0048EE  006F FFD4  F137    	movff	16373,___ftmul@f2
 10998  0048F4  0009               	tblrd		*+
 10999  0048F6  006F FFD4  F138    	movff	16373,___ftmul@f2+1
 11000  0048FC  000A               	tblrd		*-
 11001  0048FE  006F FFD4  F139    	movff	16373,___ftmul@f2+2
 11002  004904  0060  F524  F134   	movff	_fround$2792,___ftmul@f1
 11003  00490A  0060  F528  F135   	movff	_fround$2792+1,___ftmul@f1+1
 11004  004910  0060  F52C  F136   	movff	_fround$2792+2,___ftmul@f1+2
 11005  004916  EC5A  F032         	call	___ftmul	;wreg free
 11006  00491A  0060  F4D0  F146   	movff	?___ftmul,_fround$2793
 11007  004920  0060  F4D4  F147   	movff	?___ftmul+1,_fround$2793+1
 11008  004926  0060  F4D8  F148   	movff	?___ftmul+2,_fround$2793+2
 11009                           
 11010                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11011  00492C  0060  F518  F134   	movff	_fround$2793,___ftmul@f1
 11012  004932  0060  F51C  F135   	movff	_fround$2793+1,___ftmul@f1+1
 11013  004938  0060  F520  F136   	movff	_fround$2793+2,___ftmul@f1+2
 11014  00493E  0E00               	movlw	0
 11015  004940  0101               	movlb	1	; () banked
 11016  004942  6F37               	movwf	___ftmul@f2& (0+255),b
 11017  004944  0E00               	movlw	0
 11018  004946  6F38               	movwf	(___ftmul@f2+1)& (0+255),b
 11019  004948  0E3F               	movlw	63
 11020  00494A  6F39               	movwf	(___ftmul@f2+2)& (0+255),b
 11021  00494C  EC5A  F032         	call	___ftmul	;wreg free
 11022  004950  0060  F4D0  F143   	movff	?___ftmul,?_fround
 11023  004956  0060  F4D4  F144   	movff	?___ftmul+1,?_fround+1
 11024  00495C  0060  F4D8  F145   	movff	?___ftmul+2,?_fround+2
 11025  004962  0012               	return	
 11026  004964                     l946:
 11027                           
 11028                           ;doprnt.c: 415: else if(prec > 10)
 11029  004964  0E0A               	movlw	10
 11030  004966  0101               	movlb	1	; () banked
 11031  004968  654C               	cpfsgt	fround@prec& (0+255),b
 11032  00496A  D080               	goto	l949
 11033                           
 11034                           ; BSR set to: 1
 11035                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11036  00496C  0E00               	movlw	0
 11037  00496E  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11038  004970  0E03               	movlw	3
 11039  004972  6F15               	movwf	___wmul@multiplicand& (0+255),b
 11040  004974  0E00               	movlw	0
 11041  004976  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
 11042  004978  0E0A               	movlw	10
 11043  00497A  6F07               	movwf	___awmod@divisor& (0+255),b
 11044  00497C  0060  F530  F105   	movff	fround@prec,___awmod@dividend
 11045  004982  6B06               	clrf	(___awmod@dividend+1)& (0+255),b
 11046  004984  EC88  F03E         	call	___awmod	;wreg free
 11047  004988  0060  F414  F113   	movff	?___awmod,___wmul@multiplier
 11048  00498E  0060  F418  F114   	movff	?___awmod+1,___wmul@multiplier+1
 11049  004994  ECA8  F044         	call	___wmul	;wreg free
 11050  004998  0E28               	movlw	low __npowers_
 11051  00499A  0101               	movlb	1	; () banked
 11052  00499C  2513               	addwf	?___wmul& (0+255),w,b
 11053  00499E  6EF6               	movwf	16374,c
 11054  0049A0  0EFB               	movlw	high __npowers_
 11055  0049A2  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 11056  0049A4  6EF7               	movwf	16375,c
 11057  0049A6                     	if	1	;There are 3 active tblptr bytes
 11058  0049A6  6AF8               	clrf	16376,c
 11059  0049A8  0E00               	movlw	low (__mediumconst shr (0+16))
 11060  0049AA  22F8               	addwfc	16376,f,c
 11061  0049AC                     	endif
 11062  0049AC  0009               	tblrd		*+
 11063  0049AE  006F FFD4  F137    	movff	16373,___ftmul@f2
 11064  0049B4  0009               	tblrd		*+
 11065  0049B6  006F FFD4  F138    	movff	16373,___ftmul@f2+1
 11066  0049BC  000A               	tblrd		*-
 11067  0049BE  006F FFD4  F139    	movff	16373,___ftmul@f2+2
 11068  0049C4  0E00               	movlw	0
 11069  0049C6  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
 11070  0049C8  0E0A               	movlw	10
 11071  0049CA  6F0D               	movwf	___awdiv@divisor& (0+255),b
 11072  0049CC  0060  F530  F10B   	movff	fround@prec,___awdiv@dividend
 11073  0049D2  6B0C               	clrf	(___awdiv@dividend+1)& (0+255),b
 11074  0049D4  EC7A  F03C         	call	___awdiv	;wreg free
 11075  0049D8  0E09               	movlw	9
 11076  0049DA  0101               	movlb	1	; () banked
 11077  0049DC  250B               	addwf	?___awdiv& (0+255),w,b
 11078  0049DE  6F13               	movwf	___wmul@multiplier& (0+255),b
 11079  0049E0  0E00               	movlw	0
 11080  0049E2  210C               	addwfc	(?___awdiv+1)& (0+255),w,b
 11081  0049E4  6F14               	movwf	(___wmul@multiplier+1)& (0+255),b
 11082  0049E6  0E00               	movlw	0
 11083  0049E8  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11084  0049EA  0E03               	movlw	3
 11085  0049EC  6F15               	movwf	___wmul@multiplicand& (0+255),b
 11086  0049EE  ECA8  F044         	call	___wmul	;wreg free
 11087  0049F2  0E28               	movlw	low __npowers_
 11088  0049F4  0101               	movlb	1	; () banked
 11089  0049F6  2513               	addwf	?___wmul& (0+255),w,b
 11090  0049F8  6EF6               	movwf	16374,c
 11091  0049FA  0EFB               	movlw	high __npowers_
 11092  0049FC  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 11093  0049FE  6EF7               	movwf	16375,c
 11094  004A00                     	if	1	;There are 3 active tblptr bytes
 11095  004A00  6AF8               	clrf	16376,c
 11096  004A02  0E00               	movlw	low (__mediumconst shr (0+16))
 11097  004A04  22F8               	addwfc	16376,f,c
 11098  004A06                     	endif
 11099  004A06  0009               	tblrd		*+
 11100  004A08  006F FFD4  F134    	movff	16373,___ftmul@f1
 11101  004A0E  0009               	tblrd		*+
 11102  004A10  006F FFD4  F135    	movff	16373,___ftmul@f1+1
 11103  004A16  000A               	tblrd		*-
 11104  004A18  006F FFD4  F136    	movff	16373,___ftmul@f1+2
 11105  004A1E  EC5A  F032         	call	___ftmul	;wreg free
 11106  004A22  0060  F4D0  F149   	movff	?___ftmul,_fround$2792
 11107  004A28  0060  F4D4  F14A   	movff	?___ftmul+1,_fround$2792+1
 11108  004A2E  0060  F4D8  F14B   	movff	?___ftmul+2,_fround$2792+2
 11109                           
 11110                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11111  004A34  0060  F524  F134   	movff	_fround$2792,___ftmul@f1
 11112  004A3A  0060  F528  F135   	movff	_fround$2792+1,___ftmul@f1+1
 11113  004A40  0060  F52C  F136   	movff	_fround$2792+2,___ftmul@f1+2
 11114  004A46  0E00               	movlw	0
 11115  004A48  0101               	movlb	1	; () banked
 11116  004A4A  6F37               	movwf	___ftmul@f2& (0+255),b
 11117  004A4C  0E00               	movlw	0
 11118  004A4E  6F38               	movwf	(___ftmul@f2+1)& (0+255),b
 11119  004A50  0E3F               	movlw	63
 11120  004A52  6F39               	movwf	(___ftmul@f2+2)& (0+255),b
 11121  004A54  EC5A  F032         	call	___ftmul	;wreg free
 11122  004A58  0060  F4D0  F143   	movff	?___ftmul,?_fround
 11123  004A5E  0060  F4D4  F144   	movff	?___ftmul+1,?_fround+1
 11124  004A64  0060  F4D8  F145   	movff	?___ftmul+2,?_fround+2
 11125  004A6A  0012               	return	
 11126  004A6C                     l949:
 11127                           
 11128                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 11129  004A6C  0101               	movlb	1	; () banked
 11130  004A6E  514C               	movf	fround@prec& (0+255),w,b
 11131  004A70  0D03               	mullw	3
 11132  004A72  0E28               	movlw	low __npowers_
 11133  004A74  24F3               	addwf	16371,w,c
 11134  004A76  6EF6               	movwf	16374,c
 11135  004A78  0EFB               	movlw	high __npowers_
 11136  004A7A  20F4               	addwfc	16372,w,c
 11137  004A7C  6EF7               	movwf	16375,c
 11138  004A7E                     	if	1	;There are 3 active tblptr bytes
 11139  004A7E  6AF8               	clrf	16376,c
 11140  004A80  0E00               	movlw	low (__mediumconst shr (0+16))
 11141  004A82  22F8               	addwfc	16376,f,c
 11142  004A84                     	endif
 11143  004A84  0009               	tblrd		*+
 11144  004A86  006F FFD4  F134    	movff	16373,___ftmul@f1
 11145  004A8C  0009               	tblrd		*+
 11146  004A8E  006F FFD4  F135    	movff	16373,___ftmul@f1+1
 11147  004A94  000A               	tblrd		*-
 11148  004A96  006F FFD4  F136    	movff	16373,___ftmul@f1+2
 11149  004A9C  0E00               	movlw	0
 11150  004A9E  6F37               	movwf	___ftmul@f2& (0+255),b
 11151  004AA0  0E00               	movlw	0
 11152  004AA2  6F38               	movwf	(___ftmul@f2+1)& (0+255),b
 11153  004AA4  0E3F               	movlw	63
 11154  004AA6  6F39               	movwf	(___ftmul@f2+2)& (0+255),b
 11155  004AA8  EC5A  F032         	call	___ftmul	;wreg free
 11156  004AAC  0060  F4D0  F143   	movff	?___ftmul,?_fround
 11157  004AB2  0060  F4D4  F144   	movff	?___ftmul+1,?_fround+1
 11158  004AB8  0060  F4D8  F145   	movff	?___ftmul+2,?_fround+2
 11159  004ABE  0012               	return	
 11160  004AC0                     __end_of_fround:
 11161                           	opt stack 0
 11162                           
 11163 ;; *************** function ___wmul *****************
 11164 ;; Defined at:
 11165 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 11166 ;; Parameters:    Size  Location     Type
 11167 ;;  multiplier      2   19[BANK1 ] unsigned int 
 11168 ;;  multiplicand    2   21[BANK1 ] unsigned int 
 11169 ;; Auto vars:     Size  Location     Type
 11170 ;;  product         2   23[BANK1 ] unsigned int 
 11171 ;; Return value:  Size  Location     Type
 11172 ;;                  2   19[BANK1 ] unsigned int 
 11173 ;; Registers used:
 11174 ;;		wreg, status,2, status,0, prodl, prodh
 11175 ;; Tracked objects:
 11176 ;;		On entry : 0/0
 11177 ;;		On exit  : 0/0
 11178 ;;		Unchanged: 0/0
 11179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11180 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11181 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11183 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11184 ;;Total ram usage:        6 bytes
 11185 ;; Hardware stack levels used:    1
 11186 ;; Hardware stack levels required when called:   10
 11187 ;; This function calls:
 11188 ;;		Nothing
 11189 ;; This function is called by:
 11190 ;;		_append_Arquivo_Json
 11191 ;;		_fround
 11192 ;;		_scale
 11193 ;;		_sprintf
 11194 ;;		_polinomio
 11195 ;; This function uses a non-reentrant model
 11196 ;;
 11197                           
 11198                           	psect	text14
 11199  008950                     __ptext14:
 11200                           	opt stack 0
 11201  008950                     ___wmul:
 11202                           	opt stack 18
 11203                           
 11204                           ;incstack = 0
 11205  008950  0101               	movlb	1	; () banked
 11206  008952  5113               	movf	___wmul@multiplier& (0+255),w,b
 11207  008954  0315               	mulwf	___wmul@multiplicand& (0+255),b
 11208  008956  006F FFCC  F117    	movff	16371,___wmul@product
 11209  00895C  006F FFD0  F118    	movff	16372,___wmul@product+1
 11210  008962  5113               	movf	___wmul@multiplier& (0+255),w,b
 11211  008964  0316               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11212  008966  50F3               	movf	16371,w,c
 11213  008968  2718               	addwf	(___wmul@product+1)& (0+255),f,b
 11214  00896A  5114               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11215  00896C  0315               	mulwf	___wmul@multiplicand& (0+255),b
 11216  00896E  50F3               	movf	16371,w,c
 11217  008970  2718               	addwf	(___wmul@product+1)& (0+255),f,b
 11218                           
 11219                           ; BSR set to: 1
 11220  008972  0060  F45C  F113   	movff	___wmul@product,?___wmul
 11221  008978  0060  F460  F114   	movff	___wmul@product+1,?___wmul+1
 11222  00897E  0012               	return	
 11223  008980                     __end_of___wmul:
 11224                           	opt stack 0
 11225                           
 11226 ;; *************** function ___awmod *****************
 11227 ;; Defined at:
 11228 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 11229 ;; Parameters:    Size  Location     Type
 11230 ;;  dividend        2    5[BANK1 ] int 
 11231 ;;  divisor         2    7[BANK1 ] int 
 11232 ;; Auto vars:     Size  Location     Type
 11233 ;;  sign            1   10[BANK1 ] unsigned char 
 11234 ;;  counter         1    9[BANK1 ] unsigned char 
 11235 ;; Return value:  Size  Location     Type
 11236 ;;                  2    5[BANK1 ] int 
 11237 ;; Registers used:
 11238 ;;		wreg, status,2, status,0
 11239 ;; Tracked objects:
 11240 ;;		On entry : 0/0
 11241 ;;		On exit  : 0/0
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11244 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11245 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11247 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11248 ;;Total ram usage:        6 bytes
 11249 ;; Hardware stack levels used:    1
 11250 ;; Hardware stack levels required when called:   10
 11251 ;; This function calls:
 11252 ;;		Nothing
 11253 ;; This function is called by:
 11254 ;;		_fround
 11255 ;;		_scale
 11256 ;;		_sprintf
 11257 ;; This function uses a non-reentrant model
 11258 ;;
 11259                           
 11260                           	psect	text15
 11261  007D10                     __ptext15:
 11262                           	opt stack 0
 11263  007D10                     ___awmod:
 11264                           	opt stack 18
 11265                           
 11266                           ; BSR set to: 1
 11267                           ;incstack = 0
 11268  007D10  0E00               	movlw	0
 11269  007D12  0101               	movlb	1	; () banked
 11270  007D14  6F0A               	movwf	___awmod@sign& (0+255),b
 11271                           
 11272                           ; BSR set to: 1
 11273  007D16  AF06               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11274  007D18  D006               	goto	l1416
 11275                           
 11276                           ; BSR set to: 1
 11277  007D1A  6D05               	negf	___awmod@dividend& (0+255),b
 11278  007D1C  1F06               	comf	(___awmod@dividend+1)& (0+255),f,b
 11279  007D1E  B0D8               	btfsc	16344,0,c
 11280  007D20  2B06               	incf	(___awmod@dividend+1)& (0+255),f,b
 11281                           
 11282                           ; BSR set to: 1
 11283  007D22  0E01               	movlw	1
 11284  007D24  6F0A               	movwf	___awmod@sign& (0+255),b
 11285  007D26                     l1416:
 11286                           
 11287                           ; BSR set to: 1
 11288                           
 11289                           ; BSR set to: 1
 11290  007D26  AF08               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11291  007D28  D004               	goto	l1417
 11292                           
 11293                           ; BSR set to: 1
 11294  007D2A  6D07               	negf	___awmod@divisor& (0+255),b
 11295  007D2C  1F08               	comf	(___awmod@divisor+1)& (0+255),f,b
 11296  007D2E  B0D8               	btfsc	16344,0,c
 11297  007D30  2B08               	incf	(___awmod@divisor+1)& (0+255),f,b
 11298  007D32                     l1417:
 11299                           
 11300                           ; BSR set to: 1
 11301                           
 11302                           ; BSR set to: 1
 11303  007D32  5107               	movf	___awmod@divisor& (0+255),w,b
 11304  007D34  1108               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11305  007D36  B4D8               	btfsc	16344,2,c
 11306  007D38  D018               	goto	l1424
 11307                           
 11308                           ; BSR set to: 1
 11309  007D3A  0E01               	movlw	1
 11310  007D3C  6F09               	movwf	___awmod@counter& (0+255),b
 11311  007D3E  D004               	goto	l1419
 11312  007D40                     
 11313                           ; BSR set to: 1
 11314                           
 11315                           ; BSR set to: 1
 11316  007D40  90D8               	bcf	16344,0,c
 11317  007D42  3707               	rlcf	___awmod@divisor& (0+255),f,b
 11318  007D44  3708               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11319  007D46  2B09               	incf	___awmod@counter& (0+255),f,b
 11320  007D48                     l1419:
 11321                           
 11322                           ; BSR set to: 1
 11323                           
 11324                           ; BSR set to: 1
 11325  007D48  AF08               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11326  007D4A  D7FA               	goto	l1420
 11327  007D4C                     u14770:
 11328                           
 11329                           ; BSR set to: 1
 11330                           
 11331                           ; BSR set to: 1
 11332                           
 11333                           ; BSR set to: 1
 11334  007D4C  5107               	movf	___awmod@divisor& (0+255),w,b
 11335  007D4E  5D05               	subwf	___awmod@dividend& (0+255),w,b
 11336  007D50  5108               	movf	(___awmod@divisor+1)& (0+255),w,b
 11337  007D52  5906               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11338  007D54  A0D8               	btfss	16344,0,c
 11339  007D56  D004               	goto	l1423
 11340                           
 11341                           ; BSR set to: 1
 11342  007D58  5107               	movf	___awmod@divisor& (0+255),w,b
 11343  007D5A  5F05               	subwf	___awmod@dividend& (0+255),f,b
 11344  007D5C  5108               	movf	(___awmod@divisor+1)& (0+255),w,b
 11345  007D5E  5B06               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11346  007D60                     l1423:
 11347                           
 11348                           ; BSR set to: 1
 11349                           
 11350                           ; BSR set to: 1
 11351  007D60  90D8               	bcf	16344,0,c
 11352  007D62  3308               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11353  007D64  3307               	rrcf	___awmod@divisor& (0+255),f,b
 11354                           
 11355                           ; BSR set to: 1
 11356  007D66  2F09               	decfsz	___awmod@counter& (0+255),f,b
 11357  007D68  D7F1               	goto	u14770
 11358  007D6A                     l1424:
 11359                           
 11360                           ; BSR set to: 1
 11361                           
 11362                           ; BSR set to: 1
 11363                           
 11364                           ; BSR set to: 1
 11365  007D6A  510A               	movf	___awmod@sign& (0+255),w,b
 11366  007D6C  B4D8               	btfsc	16344,2,c
 11367  007D6E  D004               	goto	l1425
 11368                           
 11369                           ; BSR set to: 1
 11370  007D70  6D05               	negf	___awmod@dividend& (0+255),b
 11371  007D72  1F06               	comf	(___awmod@dividend+1)& (0+255),f,b
 11372  007D74  B0D8               	btfsc	16344,0,c
 11373  007D76  2B06               	incf	(___awmod@dividend+1)& (0+255),f,b
 11374  007D78                     l1425:
 11375                           
 11376                           ; BSR set to: 1
 11377                           
 11378                           ; BSR set to: 1
 11379  007D78  0060  F414  F105   	movff	___awmod@dividend,?___awmod
 11380  007D7E  0060  F418  F106   	movff	___awmod@dividend+1,?___awmod+1
 11381  007D84  0012               	return	
 11382  007D86                     __end_of___awmod:
 11383                           	opt stack 0
 11384                           
 11385 ;; *************** function ___awdiv *****************
 11386 ;; Defined at:
 11387 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 11388 ;; Parameters:    Size  Location     Type
 11389 ;;  dividend        2   11[BANK1 ] int 
 11390 ;;  divisor         2   13[BANK1 ] int 
 11391 ;; Auto vars:     Size  Location     Type
 11392 ;;  quotient        2   17[BANK1 ] int 
 11393 ;;  sign            1   16[BANK1 ] unsigned char 
 11394 ;;  counter         1   15[BANK1 ] unsigned char 
 11395 ;; Return value:  Size  Location     Type
 11396 ;;                  2   11[BANK1 ] int 
 11397 ;; Registers used:
 11398 ;;		wreg, status,2, status,0
 11399 ;; Tracked objects:
 11400 ;;		On entry : 0/0
 11401 ;;		On exit  : 0/0
 11402 ;;		Unchanged: 0/0
 11403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11404 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11405 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11407 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11408 ;;Total ram usage:        8 bytes
 11409 ;; Hardware stack levels used:    1
 11410 ;; Hardware stack levels required when called:   10
 11411 ;; This function calls:
 11412 ;;		Nothing
 11413 ;; This function is called by:
 11414 ;;		_fround
 11415 ;;		_scale
 11416 ;;		_sprintf
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           
 11420                           	psect	text16
 11421  0078F4                     __ptext16:
 11422                           	opt stack 0
 11423  0078F4                     ___awdiv:
 11424                           	opt stack 18
 11425                           
 11426                           ; BSR set to: 1
 11427                           ;incstack = 0
 11428  0078F4  0E00               	movlw	0
 11429  0078F6  0101               	movlb	1	; () banked
 11430  0078F8  6F10               	movwf	___awdiv@sign& (0+255),b
 11431                           
 11432                           ; BSR set to: 1
 11433  0078FA  AF0E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11434  0078FC  D006               	goto	l1403
 11435                           
 11436                           ; BSR set to: 1
 11437  0078FE  6D0D               	negf	___awdiv@divisor& (0+255),b
 11438  007900  1F0E               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11439  007902  B0D8               	btfsc	16344,0,c
 11440  007904  2B0E               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11441                           
 11442                           ; BSR set to: 1
 11443  007906  0E01               	movlw	1
 11444  007908  6F10               	movwf	___awdiv@sign& (0+255),b
 11445  00790A                     l1403:
 11446                           
 11447                           ; BSR set to: 1
 11448                           
 11449                           ; BSR set to: 1
 11450  00790A  AF0C               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11451  00790C  D006               	goto	l1404
 11452                           
 11453                           ; BSR set to: 1
 11454  00790E  6D0B               	negf	___awdiv@dividend& (0+255),b
 11455  007910  1F0C               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11456  007912  B0D8               	btfsc	16344,0,c
 11457  007914  2B0C               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11458                           
 11459                           ; BSR set to: 1
 11460  007916  0E01               	movlw	1
 11461  007918  1B10               	xorwf	___awdiv@sign& (0+255),f,b
 11462  00791A                     l1404:
 11463                           
 11464                           ; BSR set to: 1
 11465                           
 11466                           ; BSR set to: 1
 11467  00791A  0E00               	movlw	0
 11468  00791C  6F12               	movwf	(___awdiv@quotient+1)& (0+255),b
 11469  00791E  0E00               	movlw	0
 11470  007920  6F11               	movwf	___awdiv@quotient& (0+255),b
 11471                           
 11472                           ; BSR set to: 1
 11473  007922  510D               	movf	___awdiv@divisor& (0+255),w,b
 11474  007924  110E               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11475  007926  B4D8               	btfsc	16344,2,c
 11476  007928  D01C               	goto	l1411
 11477                           
 11478                           ; BSR set to: 1
 11479  00792A  0E01               	movlw	1
 11480  00792C  6F0F               	movwf	___awdiv@counter& (0+255),b
 11481  00792E  D004               	goto	l1406
 11482  007930                     
 11483                           ; BSR set to: 1
 11484                           
 11485                           ; BSR set to: 1
 11486  007930  90D8               	bcf	16344,0,c
 11487  007932  370D               	rlcf	___awdiv@divisor& (0+255),f,b
 11488  007934  370E               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 11489  007936  2B0F               	incf	___awdiv@counter& (0+255),f,b
 11490  007938                     l1406:
 11491                           
 11492                           ; BSR set to: 1
 11493                           
 11494                           ; BSR set to: 1
 11495  007938  AF0E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11496  00793A  D7FA               	goto	l1407
 11497  00793C                     u14710:
 11498                           
 11499                           ; BSR set to: 1
 11500                           
 11501                           ; BSR set to: 1
 11502                           
 11503                           ; BSR set to: 1
 11504  00793C  90D8               	bcf	16344,0,c
 11505  00793E  3711               	rlcf	___awdiv@quotient& (0+255),f,b
 11506  007940  3712               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 11507                           
 11508                           ; BSR set to: 1
 11509  007942  510D               	movf	___awdiv@divisor& (0+255),w,b
 11510  007944  5D0B               	subwf	___awdiv@dividend& (0+255),w,b
 11511  007946  510E               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11512  007948  590C               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 11513  00794A  A0D8               	btfss	16344,0,c
 11514  00794C  D005               	goto	l1410
 11515                           
 11516                           ; BSR set to: 1
 11517  00794E  510D               	movf	___awdiv@divisor& (0+255),w,b
 11518  007950  5F0B               	subwf	___awdiv@dividend& (0+255),f,b
 11519  007952  510E               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11520  007954  5B0C               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 11521                           
 11522                           ; BSR set to: 1
 11523  007956  8111               	bsf	___awdiv@quotient& (0+255),0,b
 11524  007958                     l1410:
 11525                           
 11526                           ; BSR set to: 1
 11527                           
 11528                           ; BSR set to: 1
 11529  007958  90D8               	bcf	16344,0,c
 11530  00795A  330E               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11531  00795C  330D               	rrcf	___awdiv@divisor& (0+255),f,b
 11532                           
 11533                           ; BSR set to: 1
 11534  00795E  2F0F               	decfsz	___awdiv@counter& (0+255),f,b
 11535  007960  D7ED               	goto	u14710
 11536  007962                     l1411:
 11537                           
 11538                           ; BSR set to: 1
 11539                           
 11540                           ; BSR set to: 1
 11541                           
 11542                           ; BSR set to: 1
 11543  007962  5110               	movf	___awdiv@sign& (0+255),w,b
 11544  007964  B4D8               	btfsc	16344,2,c
 11545  007966  D004               	goto	l1412
 11546                           
 11547                           ; BSR set to: 1
 11548  007968  6D11               	negf	___awdiv@quotient& (0+255),b
 11549  00796A  1F12               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11550  00796C  B0D8               	btfsc	16344,0,c
 11551  00796E  2B12               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11552  007970                     l1412:
 11553                           
 11554                           ; BSR set to: 1
 11555                           
 11556                           ; BSR set to: 1
 11557  007970  0060  F444  F10B   	movff	___awdiv@quotient,?___awdiv
 11558  007976  0060  F448  F10C   	movff	___awdiv@quotient+1,?___awdiv+1
 11559  00797C  0012               	return	
 11560  00797E                     __end_of___awdiv:
 11561                           	opt stack 0
 11562                           
 11563 ;; *************** function __tdiv_to_l_ *****************
 11564 ;; Defined at:
 11565 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 11566 ;; Parameters:    Size  Location     Type
 11567 ;;  f1              3    5[BANK1 ] float 
 11568 ;;  f2              3    8[BANK1 ] float 
 11569 ;; Auto vars:     Size  Location     Type
 11570 ;;  quot            4   14[BANK1 ] unsigned long 
 11571 ;;  exp1            1   19[BANK1 ] unsigned char 
 11572 ;;  cntr            1   18[BANK1 ] unsigned char 
 11573 ;; Return value:  Size  Location     Type
 11574 ;;                  4    5[BANK1 ] unsigned long 
 11575 ;; Registers used:
 11576 ;;		wreg, status,2, status,0
 11577 ;; Tracked objects:
 11578 ;;		On entry : 0/0
 11579 ;;		On exit  : 0/0
 11580 ;;		Unchanged: 0/0
 11581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11582 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11583 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11584 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11585 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11586 ;;Total ram usage:       15 bytes
 11587 ;; Hardware stack levels used:    1
 11588 ;; Hardware stack levels required when called:   10
 11589 ;; This function calls:
 11590 ;;		Nothing
 11591 ;; This function is called by:
 11592 ;;		_sprintf
 11593 ;; This function uses a non-reentrant model
 11594 ;;
 11595                           
 11596                           	psect	text17
 11597  005D8A                     __ptext17:
 11598                           	opt stack 0
 11599  005D8A                     __tdiv_to_l_:
 11600                           	opt stack 19
 11601                           
 11602                           ; BSR set to: 1
 11603                           ;incstack = 0
 11604  005D8A  0060  F41C  F10B   	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 11605  005D90  0101               	movlb	1	; () banked
 11606  005D92  6B0C               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 11607  005D94  6B0D               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 11608  005D96  3506               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 11609  005D98  370B               	rlcf	??__tdiv_to_l_& (0+255),f,b
 11610  005D9A  E301               	bnc	u16491
 11611  005D9C  810C               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 11612  005D9E                     u16491:
 11613  005D9E  510B               	movf	??__tdiv_to_l_& (0+255),w,b
 11614  005DA0  6F13               	movwf	__tdiv_to_l_@exp1& (0+255),b
 11615  005DA2  5113               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11616  005DA4  A4D8               	btfss	16344,2,c
 11617  005DA6  D009               	goto	l1539
 11618                           
 11619                           ; BSR set to: 1
 11620  005DA8  0E00               	movlw	0
 11621  005DAA  6F05               	movwf	?__tdiv_to_l_& (0+255),b
 11622  005DAC  0E00               	movlw	0
 11623  005DAE  6F06               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11624  005DB0  0E00               	movlw	0
 11625  005DB2  6F07               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11626  005DB4  0E00               	movlw	0
 11627  005DB6  6F08               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11628                           
 11629                           ; BSR set to: 1
 11630  005DB8  0012               	return	
 11631  005DBA                     l1539:
 11632                           
 11633                           ; BSR set to: 1
 11634                           
 11635                           ; BSR set to: 1
 11636  005DBA  0060  F428  F10B   	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 11637  005DC0  6B0C               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 11638  005DC2  6B0D               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 11639  005DC4  3509               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11640  005DC6  370B               	rlcf	??__tdiv_to_l_& (0+255),f,b
 11641  005DC8  E301               	bnc	u16511
 11642  005DCA  810C               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 11643  005DCC                     u16511:
 11644  005DCC  510B               	movf	??__tdiv_to_l_& (0+255),w,b
 11645  005DCE  6F12               	movwf	__tdiv_to_l_@cntr& (0+255),b
 11646  005DD0  5112               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 11647  005DD2  A4D8               	btfss	16344,2,c
 11648  005DD4  D009               	goto	l1541
 11649                           
 11650                           ; BSR set to: 1
 11651  005DD6  0E00               	movlw	0
 11652  005DD8  6F05               	movwf	?__tdiv_to_l_& (0+255),b
 11653  005DDA  0E00               	movlw	0
 11654  005DDC  6F06               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11655  005DDE  0E00               	movlw	0
 11656  005DE0  6F07               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11657  005DE2  0E00               	movlw	0
 11658  005DE4  6F08               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11659                           
 11660                           ; BSR set to: 1
 11661  005DE6  0012               	return	
 11662  005DE8                     l1541:
 11663                           
 11664                           ; BSR set to: 1
 11665                           
 11666                           ; BSR set to: 1
 11667  005DE8  8F06               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 11668                           
 11669                           ; BSR set to: 1
 11670  005DEA  0EFF               	movlw	255
 11671  005DEC  1705               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 11672  005DEE  0EFF               	movlw	255
 11673  005DF0  1706               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11674  005DF2  0E00               	movlw	0
 11675  005DF4  1707               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11676  005DF6  8F09               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 11677                           
 11678                           ; BSR set to: 1
 11679  005DF8  0EFF               	movlw	255
 11680  005DFA  1708               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 11681  005DFC  0EFF               	movlw	255
 11682  005DFE  1709               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 11683  005E00  0E00               	movlw	0
 11684  005E02  170A               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 11685                           
 11686                           ; BSR set to: 1
 11687  005E04  0E00               	movlw	0
 11688  005E06  6F0E               	movwf	__tdiv_to_l_@quot& (0+255),b
 11689  005E08  0E00               	movlw	0
 11690  005E0A  6F0F               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 11691  005E0C  0E00               	movlw	0
 11692  005E0E  6F10               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 11693  005E10  0E00               	movlw	0
 11694  005E12  6F11               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 11695                           
 11696                           ; BSR set to: 1
 11697  005E14  0E7F               	movlw	127
 11698  005E16  5F13               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 11699                           
 11700                           ; BSR set to: 1
 11701  005E18  5112               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 11702  005E1A  0F98               	addlw	152
 11703  005E1C  5F13               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 11704                           
 11705                           ; BSR set to: 1
 11706  005E1E  0E18               	movlw	24
 11707  005E20  6F12               	movwf	__tdiv_to_l_@cntr& (0+255),b
 11708  005E22                     l1542:
 11709                           
 11710                           ; BSR set to: 1
 11711  005E22  90D8               	bcf	16344,0,c
 11712  005E24  370E               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11713  005E26  370F               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11714  005E28  3710               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11715  005E2A  3711               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11716                           
 11717                           ; BSR set to: 1
 11718  005E2C  5108               	movf	__tdiv_to_l_@f2& (0+255),w,b
 11719  005E2E  5D05               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 11720  005E30  5109               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11721  005E32  5906               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 11722  005E34  510A               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 11723  005E36  5907               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 11724  005E38  A0D8               	btfss	16344,0,c
 11725  005E3A  D007               	goto	l1543
 11726                           
 11727                           ; BSR set to: 1
 11728  005E3C  5108               	movf	__tdiv_to_l_@f2& (0+255),w,b
 11729  005E3E  5F05               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 11730  005E40  5109               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11731  005E42  5B06               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11732  005E44  510A               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 11733  005E46  5B07               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11734                           
 11735                           ; BSR set to: 1
 11736  005E48  810E               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 11737  005E4A                     l1543:
 11738                           
 11739                           ; BSR set to: 1
 11740  005E4A  90D8               	bcf	16344,0,c
 11741  005E4C  3705               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 11742  005E4E  3706               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11743  005E50  3707               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11744                           
 11745                           ; BSR set to: 1
 11746  005E52  2F12               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 11747  005E54  D7E6               	goto	l1542
 11748                           
 11749                           ; BSR set to: 1
 11750                           
 11751                           ; BSR set to: 1
 11752  005E56  AF13               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 11753  005E58  D016               	goto	l1545
 11754                           
 11755                           ; BSR set to: 1
 11756  005E5A  5113               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11757  005E5C  0A80               	xorlw	128
 11758  005E5E  0F97               	addlw	151
 11759  005E60  B0D8               	btfsc	16344,0,c
 11760  005E62  D009               	goto	l1546
 11761                           
 11762                           ; BSR set to: 1
 11763  005E64  0E00               	movlw	0
 11764  005E66  6F05               	movwf	?__tdiv_to_l_& (0+255),b
 11765  005E68  0E00               	movlw	0
 11766  005E6A  6F06               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11767  005E6C  0E00               	movlw	0
 11768  005E6E  6F07               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11769  005E70  0E00               	movlw	0
 11770  005E72  6F08               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11771                           
 11772                           ; BSR set to: 1
 11773  005E74  0012               	return	
 11774  005E76                     l1546:
 11775                           
 11776                           ; BSR set to: 1
 11777                           
 11778                           ; BSR set to: 1
 11779                           
 11780                           ; BSR set to: 1
 11781  005E76  90D8               	bcf	16344,0,c
 11782  005E78  3311               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11783  005E7A  3310               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11784  005E7C  330F               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11785  005E7E  330E               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 11786                           
 11787                           ; BSR set to: 1
 11788  005E80  3F13               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 11789  005E82  D7F9               	goto	l1546
 11790                           
 11791                           ; BSR set to: 1
 11792  005E84  D015               	goto	u16570
 11793  005E86                     l1545:
 11794                           
 11795                           ; BSR set to: 1
 11796                           
 11797                           ; BSR set to: 1
 11798  005E86  0E17               	movlw	23
 11799  005E88  6513               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 11800  005E8A  D00F               	goto	l1551
 11801                           
 11802                           ; BSR set to: 1
 11803  005E8C  0E00               	movlw	0
 11804  005E8E  6F05               	movwf	?__tdiv_to_l_& (0+255),b
 11805  005E90  0E00               	movlw	0
 11806  005E92  6F06               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11807  005E94  0E00               	movlw	0
 11808  005E96  6F07               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11809  005E98  0E00               	movlw	0
 11810  005E9A  6F08               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11811                           
 11812                           ; BSR set to: 1
 11813  005E9C  0012               	return	
 11814  005E9E                     
 11815                           ; BSR set to: 1
 11816                           
 11817                           ; BSR set to: 1
 11818  005E9E  90D8               	bcf	16344,0,c
 11819  005EA0  370E               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11820  005EA2  370F               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11821  005EA4  3710               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11822  005EA6  3711               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11823  005EA8  0713               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 11824  005EAA                     l1551:
 11825                           
 11826                           ; BSR set to: 1
 11827                           
 11828                           ; BSR set to: 1
 11829  005EAA  5113               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11830  005EAC  A4D8               	btfss	16344,2,c
 11831  005EAE  D7F7               	goto	l1552
 11832  005EB0                     u16570:
 11833                           
 11834                           ; BSR set to: 1
 11835                           
 11836                           ; BSR set to: 1
 11837  005EB0  0060  F438  F105   	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 11838  005EB6  0060  F43C  F106   	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 11839  005EBC  0060  F440  F107   	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 11840  005EC2  0060  F444  F108   	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 11841                           
 11842                           ; BSR set to: 1
 11843  005EC8  0012               	return		;funcret
 11844  005ECA                     __end_of__tdiv_to_l_:
 11845                           	opt stack 0
 11846                           
 11847 ;; *************** function __div_to_l_ *****************
 11848 ;; Defined at:
 11849 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 11850 ;; Parameters:    Size  Location     Type
 11851 ;;  f1              3    5[BANK1 ] unsigned long 
 11852 ;;  f2              3    8[BANK1 ] unsigned long 
 11853 ;; Auto vars:     Size  Location     Type
 11854 ;;  quot            4   11[BANK1 ] unsigned long 
 11855 ;;  exp1            1   16[BANK1 ] unsigned char 
 11856 ;;  cntr            1   15[BANK1 ] unsigned char 
 11857 ;; Return value:  Size  Location     Type
 11858 ;;                  4    5[BANK1 ] unsigned long 
 11859 ;; Registers used:
 11860 ;;		wreg, status,2, status,0
 11861 ;; Tracked objects:
 11862 ;;		On entry : 0/0
 11863 ;;		On exit  : 0/0
 11864 ;;		Unchanged: 0/0
 11865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11866 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11867 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11869 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11870 ;;Total ram usage:       12 bytes
 11871 ;; Hardware stack levels used:    1
 11872 ;; Hardware stack levels required when called:   10
 11873 ;; This function calls:
 11874 ;;		Nothing
 11875 ;; This function is called by:
 11876 ;;		_sprintf
 11877 ;; This function uses a non-reentrant model
 11878 ;;
 11879                           
 11880                           	psect	text18
 11881  006140                     __ptext18:
 11882                           	opt stack 0
 11883  006140                     __div_to_l_:
 11884                           	opt stack 19
 11885                           
 11886                           ; BSR set to: 1
 11887                           ;incstack = 0
 11888  006140  0101               	movlb	1	; () banked
 11889  006142  3507               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 11890  006144  3508               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 11891  006146  6F10               	movwf	__div_to_l_@exp1& (0+255),b
 11892  006148  5110               	movf	__div_to_l_@exp1& (0+255),w,b
 11893  00614A  A4D8               	btfss	16344,2,c
 11894  00614C  D009               	goto	l1435
 11895                           
 11896                           ; BSR set to: 1
 11897  00614E  0E00               	movlw	0
 11898  006150  6F05               	movwf	?__div_to_l_& (0+255),b
 11899  006152  0E00               	movlw	0
 11900  006154  6F06               	movwf	(?__div_to_l_+1)& (0+255),b
 11901  006156  0E00               	movlw	0
 11902  006158  6F07               	movwf	(?__div_to_l_+2)& (0+255),b
 11903  00615A  0E00               	movlw	0
 11904  00615C  6F08               	movwf	(?__div_to_l_+3)& (0+255),b
 11905                           
 11906                           ; BSR set to: 1
 11907  00615E  0012               	return	
 11908  006160                     l1435:
 11909                           
 11910                           ; BSR set to: 1
 11911                           
 11912                           ; BSR set to: 1
 11913  006160  350A               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 11914  006162  350B               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 11915  006164  6F0F               	movwf	__div_to_l_@cntr& (0+255),b
 11916  006166  510F               	movf	__div_to_l_@cntr& (0+255),w,b
 11917  006168  A4D8               	btfss	16344,2,c
 11918  00616A  D009               	goto	l1437
 11919                           
 11920                           ; BSR set to: 1
 11921  00616C  0E00               	movlw	0
 11922  00616E  6F05               	movwf	?__div_to_l_& (0+255),b
 11923  006170  0E00               	movlw	0
 11924  006172  6F06               	movwf	(?__div_to_l_+1)& (0+255),b
 11925  006174  0E00               	movlw	0
 11926  006176  6F07               	movwf	(?__div_to_l_+2)& (0+255),b
 11927  006178  0E00               	movlw	0
 11928  00617A  6F08               	movwf	(?__div_to_l_+3)& (0+255),b
 11929                           
 11930                           ; BSR set to: 1
 11931  00617C  0012               	return	
 11932  00617E                     l1437:
 11933                           
 11934                           ; BSR set to: 1
 11935                           
 11936                           ; BSR set to: 1
 11937  00617E  8F07               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 11938                           
 11939                           ; BSR set to: 1
 11940  006180  0EFF               	movlw	255
 11941  006182  1705               	andwf	__div_to_l_@f1& (0+255),f,b
 11942  006184  0EFF               	movlw	255
 11943  006186  1706               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 11944  006188  0EFF               	movlw	255
 11945  00618A  1707               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 11946  00618C  0E00               	movlw	0
 11947  00618E  1708               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 11948                           
 11949                           ; BSR set to: 1
 11950  006190  8F0A               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 11951  006192  0EFF               	movlw	255
 11952  006194  1708               	andwf	__div_to_l_@f2& (0+255),f,b
 11953  006196  0EFF               	movlw	255
 11954  006198  1709               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 11955  00619A  0EFF               	movlw	255
 11956  00619C  170A               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 11957  00619E  0E00               	movlw	0
 11958  0061A0  170B               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 11959                           
 11960                           ; BSR set to: 1
 11961  0061A2  0E00               	movlw	0
 11962  0061A4  6F0B               	movwf	__div_to_l_@quot& (0+255),b
 11963  0061A6  0E00               	movlw	0
 11964  0061A8  6F0C               	movwf	(__div_to_l_@quot+1)& (0+255),b
 11965  0061AA  0E00               	movlw	0
 11966  0061AC  6F0D               	movwf	(__div_to_l_@quot+2)& (0+255),b
 11967  0061AE  0E00               	movlw	0
 11968  0061B0  6F0E               	movwf	(__div_to_l_@quot+3)& (0+255),b
 11969                           
 11970                           ; BSR set to: 1
 11971  0061B2  0E7F               	movlw	127
 11972  0061B4  5F10               	subwf	__div_to_l_@exp1& (0+255),f,b
 11973                           
 11974                           ; BSR set to: 1
 11975  0061B6  510F               	movf	__div_to_l_@cntr& (0+255),w,b
 11976  0061B8  0FA0               	addlw	160
 11977  0061BA  5F10               	subwf	__div_to_l_@exp1& (0+255),f,b
 11978                           
 11979                           ; BSR set to: 1
 11980  0061BC  0E20               	movlw	32
 11981  0061BE  6F0F               	movwf	__div_to_l_@cntr& (0+255),b
 11982  0061C0                     
 11983                           ; BSR set to: 1
 11984                           
 11985                           ; BSR set to: 1
 11986  0061C0  90D8               	bcf	16344,0,c
 11987  0061C2  370B               	rlcf	__div_to_l_@quot& (0+255),f,b
 11988  0061C4  370C               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11989  0061C6  370D               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11990  0061C8  370E               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11991                           
 11992                           ; BSR set to: 1
 11993  0061CA  5108               	movf	__div_to_l_@f2& (0+255),w,b
 11994  0061CC  5D05               	subwf	__div_to_l_@f1& (0+255),w,b
 11995  0061CE  5109               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11996  0061D0  5906               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 11997  0061D2  510A               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11998  0061D4  5907               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 11999  0061D6  510B               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 12000  0061D8  5908               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 12001  0061DA  A0D8               	btfss	16344,0,c
 12002  0061DC  D009               	goto	l1439
 12003                           
 12004                           ; BSR set to: 1
 12005  0061DE  5108               	movf	__div_to_l_@f2& (0+255),w,b
 12006  0061E0  5F05               	subwf	__div_to_l_@f1& (0+255),f,b
 12007  0061E2  5109               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 12008  0061E4  5B06               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 12009  0061E6  510A               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 12010  0061E8  5B07               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 12011  0061EA  510B               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 12012  0061EC  5B08               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 12013                           
 12014                           ; BSR set to: 1
 12015  0061EE  810B               	bsf	__div_to_l_@quot& (0+255),0,b
 12016  0061F0                     l1439:
 12017                           
 12018                           ; BSR set to: 1
 12019                           
 12020                           ; BSR set to: 1
 12021  0061F0  90D8               	bcf	16344,0,c
 12022  0061F2  3705               	rlcf	__div_to_l_@f1& (0+255),f,b
 12023  0061F4  3706               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 12024  0061F6  3707               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 12025  0061F8  3708               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 12026                           
 12027                           ; BSR set to: 1
 12028  0061FA  2F0F               	decfsz	__div_to_l_@cntr& (0+255),f,b
 12029  0061FC  D7E1               	goto	l1438
 12030                           
 12031                           ; BSR set to: 1
 12032                           
 12033                           ; BSR set to: 1
 12034  0061FE  AF10               	btfss	__div_to_l_@exp1& (0+255),7,b
 12035  006200  D016               	goto	l1441
 12036                           
 12037                           ; BSR set to: 1
 12038  006202  5110               	movf	__div_to_l_@exp1& (0+255),w,b
 12039  006204  0A80               	xorlw	128
 12040  006206  0F9F               	addlw	159
 12041  006208  B0D8               	btfsc	16344,0,c
 12042  00620A  D009               	goto	l1442
 12043                           
 12044                           ; BSR set to: 1
 12045  00620C  0E00               	movlw	0
 12046  00620E  6F05               	movwf	?__div_to_l_& (0+255),b
 12047  006210  0E00               	movlw	0
 12048  006212  6F06               	movwf	(?__div_to_l_+1)& (0+255),b
 12049  006214  0E00               	movlw	0
 12050  006216  6F07               	movwf	(?__div_to_l_+2)& (0+255),b
 12051  006218  0E00               	movlw	0
 12052  00621A  6F08               	movwf	(?__div_to_l_+3)& (0+255),b
 12053                           
 12054                           ; BSR set to: 1
 12055  00621C  0012               	return	
 12056  00621E                     l1442:
 12057                           
 12058                           ; BSR set to: 1
 12059                           
 12060                           ; BSR set to: 1
 12061                           
 12062                           ; BSR set to: 1
 12063  00621E  90D8               	bcf	16344,0,c
 12064  006220  330E               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 12065  006222  330D               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 12066  006224  330C               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 12067  006226  330B               	rrcf	__div_to_l_@quot& (0+255),f,b
 12068                           
 12069                           ; BSR set to: 1
 12070  006228  3F10               	incfsz	__div_to_l_@exp1& (0+255),f,b
 12071  00622A  D7F9               	goto	l1442
 12072                           
 12073                           ; BSR set to: 1
 12074  00622C  D015               	goto	u16640
 12075  00622E                     l1441:
 12076                           
 12077                           ; BSR set to: 1
 12078                           
 12079                           ; BSR set to: 1
 12080  00622E  0E1F               	movlw	31
 12081  006230  6510               	cpfsgt	__div_to_l_@exp1& (0+255),b
 12082  006232  D00F               	goto	l1447
 12083                           
 12084                           ; BSR set to: 1
 12085  006234  0E00               	movlw	0
 12086  006236  6F05               	movwf	?__div_to_l_& (0+255),b
 12087  006238  0E00               	movlw	0
 12088  00623A  6F06               	movwf	(?__div_to_l_+1)& (0+255),b
 12089  00623C  0E00               	movlw	0
 12090  00623E  6F07               	movwf	(?__div_to_l_+2)& (0+255),b
 12091  006240  0E00               	movlw	0
 12092  006242  6F08               	movwf	(?__div_to_l_+3)& (0+255),b
 12093                           
 12094                           ; BSR set to: 1
 12095  006244  0012               	return	
 12096  006246                     
 12097                           ; BSR set to: 1
 12098                           
 12099                           ; BSR set to: 1
 12100  006246  90D8               	bcf	16344,0,c
 12101  006248  370B               	rlcf	__div_to_l_@quot& (0+255),f,b
 12102  00624A  370C               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 12103  00624C  370D               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 12104  00624E  370E               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 12105  006250  0710               	decf	__div_to_l_@exp1& (0+255),f,b
 12106  006252                     l1447:
 12107                           
 12108                           ; BSR set to: 1
 12109                           
 12110                           ; BSR set to: 1
 12111  006252  5110               	movf	__div_to_l_@exp1& (0+255),w,b
 12112  006254  A4D8               	btfss	16344,2,c
 12113  006256  D7F7               	goto	l1448
 12114  006258                     u16640:
 12115                           
 12116                           ; BSR set to: 1
 12117                           
 12118                           ; BSR set to: 1
 12119  006258  0060  F42C  F105   	movff	__div_to_l_@quot,?__div_to_l_
 12120  00625E  0060  F430  F106   	movff	__div_to_l_@quot+1,?__div_to_l_+1
 12121  006264  0060  F434  F107   	movff	__div_to_l_@quot+2,?__div_to_l_+2
 12122  00626A  0060  F438  F108   	movff	__div_to_l_@quot+3,?__div_to_l_+3
 12123                           
 12124                           ; BSR set to: 1
 12125  006270  0012               	return		;funcret
 12126  006272                     __end_of__div_to_l_:
 12127                           	opt stack 0
 12128                           
 12129 ;; *************** function ___lltoft *****************
 12130 ;; Defined at:
 12131 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 12132 ;; Parameters:    Size  Location     Type
 12133 ;;  c               4   40[BANK1 ] unsigned long 
 12134 ;; Auto vars:     Size  Location     Type
 12135 ;;  exp             1   48[BANK1 ] unsigned char 
 12136 ;; Return value:  Size  Location     Type
 12137 ;;                  3   40[BANK1 ] float 
 12138 ;; Registers used:
 12139 ;;		wreg, status,2, status,0, cstack
 12140 ;; Tracked objects:
 12141 ;;		On entry : 0/0
 12142 ;;		On exit  : 0/0
 12143 ;;		Unchanged: 0/0
 12144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12145 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12146 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12147 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12148 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12149 ;;Total ram usage:        9 bytes
 12150 ;; Hardware stack levels used:    1
 12151 ;; Hardware stack levels required when called:   11
 12152 ;; This function calls:
 12153 ;;		___ftpack
 12154 ;; This function is called by:
 12155 ;;		_sprintf
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           	psect	text19
 12160  007F4E                     __ptext19:
 12161                           	opt stack 0
 12162  007F4E                     ___lltoft:
 12163                           	opt stack 18
 12164                           
 12165                           ; BSR set to: 1
 12166                           ;incstack = 0
 12167  007F4E  0E8E               	movlw	142
 12168  007F50  0101               	movlb	1	; () banked
 12169  007F52  6F30               	movwf	___lltoft@exp& (0+255),b
 12170  007F54  D006               	goto	l1646
 12171  007F56                     
 12172                           ; BSR set to: 1
 12173                           
 12174                           ; BSR set to: 1
 12175  007F56  90D8               	bcf	16344,0,c
 12176  007F58  332B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 12177  007F5A  332A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 12178  007F5C  3329               	rrcf	(___lltoft@c+1)& (0+255),f,b
 12179  007F5E  3328               	rrcf	___lltoft@c& (0+255),f,b
 12180  007F60  2B30               	incf	___lltoft@exp& (0+255),f,b
 12181  007F62                     l1646:
 12182                           
 12183                           ; BSR set to: 1
 12184                           
 12185                           ; BSR set to: 1
 12186  007F62  0E00               	movlw	0
 12187  007F64  1528               	andwf	___lltoft@c& (0+255),w,b
 12188  007F66  6F2C               	movwf	??___lltoft& (0+255),b
 12189  007F68  0E00               	movlw	0
 12190  007F6A  1529               	andwf	(___lltoft@c+1)& (0+255),w,b
 12191  007F6C  6F2D               	movwf	(??___lltoft+1)& (0+255),b
 12192  007F6E  0E00               	movlw	0
 12193  007F70  152A               	andwf	(___lltoft@c+2)& (0+255),w,b
 12194  007F72  6F2E               	movwf	(??___lltoft+2)& (0+255),b
 12195  007F74  0EFF               	movlw	255
 12196  007F76  152B               	andwf	(___lltoft@c+3)& (0+255),w,b
 12197  007F78  6F2F               	movwf	(??___lltoft+3)& (0+255),b
 12198  007F7A  512C               	movf	??___lltoft& (0+255),w,b
 12199  007F7C  112D               	iorwf	(??___lltoft+1)& (0+255),w,b
 12200  007F7E  112E               	iorwf	(??___lltoft+2)& (0+255),w,b
 12201  007F80  112F               	iorwf	(??___lltoft+3)& (0+255),w,b
 12202  007F82  A4D8               	btfss	16344,2,c
 12203  007F84  D7E8               	goto	l1647
 12204                           
 12205                           ; BSR set to: 1
 12206                           
 12207                           ; BSR set to: 1
 12208  007F86  0060  F4A0  F105   	movff	___lltoft@c,___ftpack@arg
 12209  007F8C  0060  F4A4  F106   	movff	___lltoft@c+1,___ftpack@arg+1
 12210  007F92  0060  F4A8  F107   	movff	___lltoft@c+2,___ftpack@arg+2
 12211  007F98  0060  F4C0  F108   	movff	___lltoft@exp,___ftpack@exp
 12212  007F9E  0E00               	movlw	0
 12213  007FA0  6F09               	movwf	___ftpack@sign& (0+255),b
 12214  007FA2  ECE0  F039         	call	___ftpack	;wreg free
 12215  007FA6  0060  F414  F128   	movff	?___ftpack,?___lltoft
 12216  007FAC  0060  F418  F129   	movff	?___ftpack+1,?___lltoft+1
 12217  007FB2  0060  F41C  F12A   	movff	?___ftpack+2,?___lltoft+2
 12218  007FB8  0012               	return	
 12219  007FBA                     __end_of___lltoft:
 12220                           	opt stack 0
 12221                           
 12222 ;; *************** function ___llmod *****************
 12223 ;; Defined at:
 12224 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 12225 ;; Parameters:    Size  Location     Type
 12226 ;;  dividend        4   18[BANK1 ] unsigned long 
 12227 ;;  divisor         4   22[BANK1 ] unsigned long 
 12228 ;; Auto vars:     Size  Location     Type
 12229 ;;  counter         1   26[BANK1 ] unsigned char 
 12230 ;; Return value:  Size  Location     Type
 12231 ;;                  4   18[BANK1 ] unsigned long 
 12232 ;; Registers used:
 12233 ;;		wreg, status,2, status,0
 12234 ;; Tracked objects:
 12235 ;;		On entry : 0/0
 12236 ;;		On exit  : 0/0
 12237 ;;		Unchanged: 0/0
 12238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12239 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12240 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12242 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12243 ;;Total ram usage:        9 bytes
 12244 ;; Hardware stack levels used:    1
 12245 ;; Hardware stack levels required when called:   10
 12246 ;; This function calls:
 12247 ;;		Nothing
 12248 ;; This function is called by:
 12249 ;;		_sprintf
 12250 ;; This function uses a non-reentrant model
 12251 ;;
 12252                           
 12253                           	psect	text20
 12254  007E70                     __ptext20:
 12255                           	opt stack 0
 12256  007E70                     ___llmod:
 12257                           	opt stack 19
 12258                           
 12259                           ;incstack = 0
 12260  007E70  0101               	movlb	1	; () banked
 12261  007E72  5116               	movf	___llmod@divisor& (0+255),w,b
 12262  007E74  1117               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 12263  007E76  1118               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 12264  007E78  1119               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 12265  007E7A  B4D8               	btfsc	16344,2,c
 12266  007E7C  D024               	goto	l1640
 12267                           
 12268                           ; BSR set to: 1
 12269  007E7E  0E01               	movlw	1
 12270  007E80  6F1A               	movwf	___llmod@counter& (0+255),b
 12271  007E82  D006               	goto	l1635
 12272  007E84                     
 12273                           ; BSR set to: 1
 12274                           
 12275                           ; BSR set to: 1
 12276  007E84  90D8               	bcf	16344,0,c
 12277  007E86  3716               	rlcf	___llmod@divisor& (0+255),f,b
 12278  007E88  3717               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 12279  007E8A  3718               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 12280  007E8C  3719               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 12281  007E8E  2B1A               	incf	___llmod@counter& (0+255),f,b
 12282  007E90                     l1635:
 12283                           
 12284                           ; BSR set to: 1
 12285                           
 12286                           ; BSR set to: 1
 12287  007E90  AF19               	btfss	(___llmod@divisor+3)& (0+255),7,b
 12288  007E92  D7F8               	goto	l1636
 12289  007E94                     u16870:
 12290                           
 12291                           ; BSR set to: 1
 12292                           
 12293                           ; BSR set to: 1
 12294                           
 12295                           ; BSR set to: 1
 12296  007E94  5116               	movf	___llmod@divisor& (0+255),w,b
 12297  007E96  5D12               	subwf	___llmod@dividend& (0+255),w,b
 12298  007E98  5117               	movf	(___llmod@divisor+1)& (0+255),w,b
 12299  007E9A  5913               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 12300  007E9C  5118               	movf	(___llmod@divisor+2)& (0+255),w,b
 12301  007E9E  5914               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 12302  007EA0  5119               	movf	(___llmod@divisor+3)& (0+255),w,b
 12303  007EA2  5915               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 12304  007EA4  A0D8               	btfss	16344,0,c
 12305  007EA6  D008               	goto	l1639
 12306                           
 12307                           ; BSR set to: 1
 12308  007EA8  5116               	movf	___llmod@divisor& (0+255),w,b
 12309  007EAA  5F12               	subwf	___llmod@dividend& (0+255),f,b
 12310  007EAC  5117               	movf	(___llmod@divisor+1)& (0+255),w,b
 12311  007EAE  5B13               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 12312  007EB0  5118               	movf	(___llmod@divisor+2)& (0+255),w,b
 12313  007EB2  5B14               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 12314  007EB4  5119               	movf	(___llmod@divisor+3)& (0+255),w,b
 12315  007EB6  5B15               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 12316  007EB8                     l1639:
 12317                           
 12318                           ; BSR set to: 1
 12319                           
 12320                           ; BSR set to: 1
 12321  007EB8  90D8               	bcf	16344,0,c
 12322  007EBA  3319               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 12323  007EBC  3318               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 12324  007EBE  3317               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 12325  007EC0  3316               	rrcf	___llmod@divisor& (0+255),f,b
 12326                           
 12327                           ; BSR set to: 1
 12328  007EC2  2F1A               	decfsz	___llmod@counter& (0+255),f,b
 12329  007EC4  D7E7               	goto	u16870
 12330  007EC6                     l1640:
 12331                           
 12332                           ; BSR set to: 1
 12333                           
 12334                           ; BSR set to: 1
 12335  007EC6  0060  F448  F112   	movff	___llmod@dividend,?___llmod
 12336  007ECC  0060  F44C  F113   	movff	___llmod@dividend+1,?___llmod+1
 12337  007ED2  0060  F450  F114   	movff	___llmod@dividend+2,?___llmod+2
 12338  007ED8  0060  F454  F115   	movff	___llmod@dividend+3,?___llmod+3
 12339                           
 12340                           ; BSR set to: 1
 12341  007EDE  0012               	return		;funcret
 12342  007EE0                     __end_of___llmod:
 12343                           	opt stack 0
 12344                           
 12345 ;; *************** function ___lldiv *****************
 12346 ;; Defined at:
 12347 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 12348 ;; Parameters:    Size  Location     Type
 12349 ;;  dividend        4    5[BANK1 ] unsigned long 
 12350 ;;  divisor         4    9[BANK1 ] unsigned long 
 12351 ;; Auto vars:     Size  Location     Type
 12352 ;;  quotient        4   13[BANK1 ] unsigned long 
 12353 ;;  counter         1   17[BANK1 ] unsigned char 
 12354 ;; Return value:  Size  Location     Type
 12355 ;;                  4    5[BANK1 ] unsigned long 
 12356 ;; Registers used:
 12357 ;;		wreg, status,2, status,0
 12358 ;; Tracked objects:
 12359 ;;		On entry : 0/0
 12360 ;;		On exit  : 0/0
 12361 ;;		Unchanged: 0/0
 12362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12363 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12364 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12366 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12367 ;;Total ram usage:       13 bytes
 12368 ;; Hardware stack levels used:    1
 12369 ;; Hardware stack levels required when called:   10
 12370 ;; This function calls:
 12371 ;;		Nothing
 12372 ;; This function is called by:
 12373 ;;		_Verifica_Analogica
 12374 ;;		_sprintf
 12375 ;; This function uses a non-reentrant model
 12376 ;;
 12377                           
 12378                           	psect	text21
 12379  007868                     __ptext21:
 12380                           	opt stack 0
 12381  007868                     ___lldiv:
 12382                           	opt stack 19
 12383                           
 12384                           ; BSR set to: 1
 12385                           ;incstack = 0
 12386  007868  0E00               	movlw	0
 12387  00786A  0101               	movlb	1	; () banked
 12388  00786C  6F0D               	movwf	___lldiv@quotient& (0+255),b
 12389  00786E  0E00               	movlw	0
 12390  007870  6F0E               	movwf	(___lldiv@quotient+1)& (0+255),b
 12391  007872  0E00               	movlw	0
 12392  007874  6F0F               	movwf	(___lldiv@quotient+2)& (0+255),b
 12393  007876  0E00               	movlw	0
 12394  007878  6F10               	movwf	(___lldiv@quotient+3)& (0+255),b
 12395                           
 12396                           ; BSR set to: 1
 12397  00787A  5109               	movf	___lldiv@divisor& (0+255),w,b
 12398  00787C  110A               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12399  00787E  110B               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12400  007880  110C               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12401  007882  B4D8               	btfsc	16344,2,c
 12402  007884  D02A               	goto	l1630
 12403                           
 12404                           ; BSR set to: 1
 12405  007886  0E01               	movlw	1
 12406  007888  6F11               	movwf	___lldiv@counter& (0+255),b
 12407  00788A  D006               	goto	l1625
 12408  00788C                     
 12409                           ; BSR set to: 1
 12410                           
 12411                           ; BSR set to: 1
 12412  00788C  90D8               	bcf	16344,0,c
 12413  00788E  3709               	rlcf	___lldiv@divisor& (0+255),f,b
 12414  007890  370A               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12415  007892  370B               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12416  007894  370C               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12417  007896  2B11               	incf	___lldiv@counter& (0+255),f,b
 12418  007898                     l1625:
 12419                           
 12420                           ; BSR set to: 1
 12421                           
 12422                           ; BSR set to: 1
 12423  007898  AF0C               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12424  00789A  D7F8               	goto	l1626
 12425  00789C                     u16840:
 12426                           
 12427                           ; BSR set to: 1
 12428                           
 12429                           ; BSR set to: 1
 12430                           
 12431                           ; BSR set to: 1
 12432  00789C  90D8               	bcf	16344,0,c
 12433  00789E  370D               	rlcf	___lldiv@quotient& (0+255),f,b
 12434  0078A0  370E               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12435  0078A2  370F               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12436  0078A4  3710               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12437                           
 12438                           ; BSR set to: 1
 12439  0078A6  5109               	movf	___lldiv@divisor& (0+255),w,b
 12440  0078A8  5D05               	subwf	___lldiv@dividend& (0+255),w,b
 12441  0078AA  510A               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12442  0078AC  5906               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12443  0078AE  510B               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12444  0078B0  5907               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12445  0078B2  510C               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12446  0078B4  5908               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12447  0078B6  A0D8               	btfss	16344,0,c
 12448  0078B8  D009               	goto	l1629
 12449                           
 12450                           ; BSR set to: 1
 12451  0078BA  5109               	movf	___lldiv@divisor& (0+255),w,b
 12452  0078BC  5F05               	subwf	___lldiv@dividend& (0+255),f,b
 12453  0078BE  510A               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12454  0078C0  5B06               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12455  0078C2  510B               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12456  0078C4  5B07               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12457  0078C6  510C               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12458  0078C8  5B08               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12459                           
 12460                           ; BSR set to: 1
 12461  0078CA  810D               	bsf	___lldiv@quotient& (0+255),0,b
 12462  0078CC                     l1629:
 12463                           
 12464                           ; BSR set to: 1
 12465                           
 12466                           ; BSR set to: 1
 12467  0078CC  90D8               	bcf	16344,0,c
 12468  0078CE  330C               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12469  0078D0  330B               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12470  0078D2  330A               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12471  0078D4  3309               	rrcf	___lldiv@divisor& (0+255),f,b
 12472                           
 12473                           ; BSR set to: 1
 12474  0078D6  2F11               	decfsz	___lldiv@counter& (0+255),f,b
 12475  0078D8  D7E1               	goto	u16840
 12476  0078DA                     l1630:
 12477                           
 12478                           ; BSR set to: 1
 12479                           
 12480                           ; BSR set to: 1
 12481  0078DA  0060  F434  F105   	movff	___lldiv@quotient,?___lldiv
 12482  0078E0  0060  F438  F106   	movff	___lldiv@quotient+1,?___lldiv+1
 12483  0078E6  0060  F43C  F107   	movff	___lldiv@quotient+2,?___lldiv+2
 12484  0078EC  0060  F440  F108   	movff	___lldiv@quotient+3,?___lldiv+3
 12485                           
 12486                           ; BSR set to: 1
 12487  0078F2  0012               	return		;funcret
 12488  0078F4                     __end_of___lldiv:
 12489                           	opt stack 0
 12490                           
 12491 ;; *************** function ___ftsub *****************
 12492 ;; Defined at:
 12493 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 12494 ;; Parameters:    Size  Location     Type
 12495 ;;  f1              3   89[BANK1 ] float 
 12496 ;;  f2              3   92[BANK1 ] float 
 12497 ;; Auto vars:     Size  Location     Type
 12498 ;;		None
 12499 ;; Return value:  Size  Location     Type
 12500 ;;                  3   89[BANK1 ] float 
 12501 ;; Registers used:
 12502 ;;		wreg, status,2, status,0, cstack
 12503 ;; Tracked objects:
 12504 ;;		On entry : 0/0
 12505 ;;		On exit  : 0/0
 12506 ;;		Unchanged: 0/0
 12507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12508 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12511 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12512 ;;Total ram usage:        6 bytes
 12513 ;; Hardware stack levels used:    1
 12514 ;; Hardware stack levels required when called:   12
 12515 ;; This function calls:
 12516 ;;		___ftadd
 12517 ;; This function is called by:
 12518 ;;		_sprintf
 12519 ;; This function uses a non-reentrant model
 12520 ;;
 12521                           
 12522                           	psect	text22
 12523  008432                     __ptext22:
 12524                           	opt stack 0
 12525  008432                     ___ftsub:
 12526                           	opt stack 17
 12527                           
 12528                           ; BSR set to: 1
 12529                           ;incstack = 0
 12530  008432  0101               	movlb	1	; () banked
 12531  008434  515C               	movf	___ftsub@f2& (0+255),w,b
 12532  008436  115D               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 12533  008438  115E               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 12534  00843A  B4D8               	btfsc	16344,2,c
 12535  00843C  D006               	goto	l1580
 12536                           
 12537                           ; BSR set to: 1
 12538  00843E  0E00               	movlw	0
 12539  008440  1B5C               	xorwf	___ftsub@f2& (0+255),f,b
 12540  008442  0E00               	movlw	0
 12541  008444  1B5D               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 12542  008446  0E80               	movlw	128
 12543  008448  1B5E               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 12544  00844A                     l1580:
 12545                           
 12546                           ; BSR set to: 1
 12547                           
 12548                           ; BSR set to: 1
 12549  00844A  0060  F564  F14D   	movff	___ftsub@f1,___ftadd@f1
 12550  008450  0060  F568  F14E   	movff	___ftsub@f1+1,___ftadd@f1+1
 12551  008456  0060  F56C  F14F   	movff	___ftsub@f1+2,___ftadd@f1+2
 12552  00845C  0060  F570  F150   	movff	___ftsub@f2,___ftadd@f2
 12553  008462  0060  F574  F151   	movff	___ftsub@f2+1,___ftadd@f2+1
 12554  008468  0060  F578  F152   	movff	___ftsub@f2+2,___ftadd@f2+2
 12555  00846E  ECC5  F02A         	call	___ftadd	;wreg free
 12556  008472  0060  F534  F159   	movff	?___ftadd,?___ftsub
 12557  008478  0060  F538  F15A   	movff	?___ftadd+1,?___ftsub+1
 12558  00847E  0060  F53C  F15B   	movff	?___ftadd+2,?___ftsub+2
 12559  008484  0012               	return	
 12560  008486                     __end_of___ftsub:
 12561                           	opt stack 0
 12562                           
 12563 ;; *************** function ___ftneg *****************
 12564 ;; Defined at:
 12565 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 12566 ;; Parameters:    Size  Location     Type
 12567 ;;  f1              3   49[BANK1 ] float 
 12568 ;; Auto vars:     Size  Location     Type
 12569 ;;		None
 12570 ;; Return value:  Size  Location     Type
 12571 ;;                  3   49[BANK1 ] float 
 12572 ;; Registers used:
 12573 ;;		wreg, status,2, status,0
 12574 ;; Tracked objects:
 12575 ;;		On entry : 0/0
 12576 ;;		On exit  : 0/0
 12577 ;;		Unchanged: 0/0
 12578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12579 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12582 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12583 ;;Total ram usage:        3 bytes
 12584 ;; Hardware stack levels used:    1
 12585 ;; Hardware stack levels required when called:   10
 12586 ;; This function calls:
 12587 ;;		Nothing
 12588 ;; This function is called by:
 12589 ;;		_sprintf
 12590 ;;		_polinomio
 12591 ;; This function uses a non-reentrant model
 12592 ;;
 12593                           
 12594                           	psect	text23
 12595  0089AE                     __ptext23:
 12596                           	opt stack 0
 12597  0089AE                     ___ftneg:
 12598                           	opt stack 19
 12599                           
 12600                           ;incstack = 0
 12601  0089AE  0101               	movlb	1	; () banked
 12602  0089B0  5131               	movf	___ftneg@f1& (0+255),w,b
 12603  0089B2  1132               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 12604  0089B4  1133               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 12605  0089B6  B4D8               	btfsc	16344,2,c
 12606  0089B8  D006               	goto	l1574
 12607                           
 12608                           ; BSR set to: 1
 12609  0089BA  0E00               	movlw	0
 12610  0089BC  1B31               	xorwf	___ftneg@f1& (0+255),f,b
 12611  0089BE  0E00               	movlw	0
 12612  0089C0  1B32               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 12613  0089C2  0E80               	movlw	128
 12614  0089C4  1B33               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 12615  0089C6                     l1574:
 12616                           
 12617                           ; BSR set to: 1
 12618  0089C6  0060  F4C4  F131   	movff	___ftneg@f1,?___ftneg
 12619  0089CC  0060  F4C8  F132   	movff	___ftneg@f1+1,?___ftneg+1
 12620  0089D2  0060  F4CC  F133   	movff	___ftneg@f1+2,?___ftneg+2
 12621                           
 12622                           ; BSR set to: 1
 12623  0089D8  0012               	return		;funcret
 12624  0089DA                     __end_of___ftneg:
 12625                           	opt stack 0
 12626                           
 12627 ;; *************** function ___ftge *****************
 12628 ;; Defined at:
 12629 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 12630 ;; Parameters:    Size  Location     Type
 12631 ;;  ff1             3   89[BANK1 ] float 
 12632 ;;  ff2             3   92[BANK1 ] float 
 12633 ;; Auto vars:     Size  Location     Type
 12634 ;;		None
 12635 ;; Return value:  Size  Location     Type
 12636 ;;		None               void
 12637 ;; Registers used:
 12638 ;;		wreg, status,2, status,0
 12639 ;; Tracked objects:
 12640 ;;		On entry : 0/0
 12641 ;;		On exit  : 0/0
 12642 ;;		Unchanged: 0/0
 12643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12644 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12646 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12647 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12648 ;;Total ram usage:        9 bytes
 12649 ;; Hardware stack levels used:    1
 12650 ;; Hardware stack levels required when called:   10
 12651 ;; This function calls:
 12652 ;;		Nothing
 12653 ;; This function is called by:
 12654 ;;		_sprintf
 12655 ;; This function uses a non-reentrant model
 12656 ;;
 12657                           
 12658                           	psect	text24
 12659  00772C                     __ptext24:
 12660                           	opt stack 0
 12661  00772C                     ___ftge:
 12662                           	opt stack 19
 12663                           
 12664                           ; BSR set to: 1
 12665                           ;incstack = 0
 12666  00772C  0101               	movlb	1	; () banked
 12667  00772E  AF5B               	btfss	(___ftge@ff1+2)& (0+255),7,b
 12668  007730  D019               	goto	l1556
 12669                           
 12670                           ; BSR set to: 1
 12671  007732  0060  F564  F15F   	movff	___ftge@ff1,??___ftge
 12672  007738  0060  F568  F160   	movff	___ftge@ff1+1,??___ftge+1
 12673  00773E  0060  F56C  F161   	movff	___ftge@ff1+2,??___ftge+2
 12674  007744  1F5F               	comf	??___ftge& (0+255),f,b
 12675  007746  1F60               	comf	(??___ftge+1)& (0+255),f,b
 12676  007748  1F61               	comf	(??___ftge+2)& (0+255),f,b
 12677  00774A  2B5F               	incf	??___ftge& (0+255),f,b
 12678  00774C  0E00               	movlw	0
 12679  00774E  2360               	addwfc	(??___ftge+1)& (0+255),f,b
 12680  007750  2361               	addwfc	(??___ftge+2)& (0+255),f,b
 12681  007752  0E00               	movlw	0
 12682  007754  255F               	addwf	??___ftge& (0+255),w,b
 12683  007756  6F59               	movwf	___ftge@ff1& (0+255),b
 12684  007758  0E00               	movlw	0
 12685  00775A  2160               	addwfc	(??___ftge+1)& (0+255),w,b
 12686  00775C  6F5A               	movwf	(___ftge@ff1+1)& (0+255),b
 12687  00775E  0E80               	movlw	128
 12688  007760  2161               	addwfc	(??___ftge+2)& (0+255),w,b
 12689  007762  6F5B               	movwf	(___ftge@ff1+2)& (0+255),b
 12690  007764                     l1556:
 12691                           
 12692                           ; BSR set to: 1
 12693                           
 12694                           ; BSR set to: 1
 12695  007764  AF5E               	btfss	(___ftge@ff2+2)& (0+255),7,b
 12696  007766  D019               	goto	l1557
 12697                           
 12698                           ; BSR set to: 1
 12699  007768  0060  F570  F15F   	movff	___ftge@ff2,??___ftge
 12700  00776E  0060  F574  F160   	movff	___ftge@ff2+1,??___ftge+1
 12701  007774  0060  F578  F161   	movff	___ftge@ff2+2,??___ftge+2
 12702  00777A  1F5F               	comf	??___ftge& (0+255),f,b
 12703  00777C  1F60               	comf	(??___ftge+1)& (0+255),f,b
 12704  00777E  1F61               	comf	(??___ftge+2)& (0+255),f,b
 12705  007780  2B5F               	incf	??___ftge& (0+255),f,b
 12706  007782  0E00               	movlw	0
 12707  007784  2360               	addwfc	(??___ftge+1)& (0+255),f,b
 12708  007786  2361               	addwfc	(??___ftge+2)& (0+255),f,b
 12709  007788  0E00               	movlw	0
 12710  00778A  255F               	addwf	??___ftge& (0+255),w,b
 12711  00778C  6F5C               	movwf	___ftge@ff2& (0+255),b
 12712  00778E  0E00               	movlw	0
 12713  007790  2160               	addwfc	(??___ftge+1)& (0+255),w,b
 12714  007792  6F5D               	movwf	(___ftge@ff2+1)& (0+255),b
 12715  007794  0E80               	movlw	128
 12716  007796  2161               	addwfc	(??___ftge+2)& (0+255),w,b
 12717  007798  6F5E               	movwf	(___ftge@ff2+2)& (0+255),b
 12718  00779A                     l1557:
 12719                           
 12720                           ; BSR set to: 1
 12721                           
 12722                           ; BSR set to: 1
 12723  00779A  0E00               	movlw	0
 12724  00779C  1B59               	xorwf	___ftge@ff1& (0+255),f,b
 12725  00779E  0E00               	movlw	0
 12726  0077A0  1B5A               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 12727  0077A2  0E80               	movlw	128
 12728  0077A4  1B5B               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 12729                           
 12730                           ; BSR set to: 1
 12731  0077A6  0E00               	movlw	0
 12732  0077A8  1B5C               	xorwf	___ftge@ff2& (0+255),f,b
 12733  0077AA  0E00               	movlw	0
 12734  0077AC  1B5D               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 12735  0077AE  0E80               	movlw	128
 12736  0077B0  1B5E               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 12737  0077B2  515C               	movf	___ftge@ff2& (0+255),w,b
 12738  0077B4  5D59               	subwf	___ftge@ff1& (0+255),w,b
 12739  0077B6  515D               	movf	(___ftge@ff2+1)& (0+255),w,b
 12740  0077B8  595A               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 12741  0077BA  515E               	movf	(___ftge@ff2+2)& (0+255),w,b
 12742  0077BC  595B               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 12743  0077BE  B0D8               	btfsc	16344,0,c
 12744  0077C0  D002               	goto	l10480
 12745                           
 12746                           ; BSR set to: 1
 12747  0077C2  90D8               	bcf	16344,0,c
 12748  0077C4  0012               	return	
 12749  0077C6                     l10480:
 12750                           
 12751                           ; BSR set to: 1
 12752                           
 12753                           ; BSR set to: 1
 12754  0077C6  80D8               	bsf	16344,0,c
 12755                           
 12756                           ; BSR set to: 1
 12757  0077C8  0012               	return	
 12758  0077CA                     __end_of___ftge:
 12759                           	opt stack 0
 12760                           
 12761 ;; *************** function _ajusta_escala *****************
 12762 ;; Defined at:
 12763 ;;		line 106 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Conversor_Escalas.c"
 12764 ;; Parameters:    Size  Location     Type
 12765 ;;  valor           2   97[BANK1 ] int 
 12766 ;; Auto vars:     Size  Location     Type
 12767 ;;		None
 12768 ;; Return value:  Size  Location     Type
 12769 ;;                  1    wreg      void 
 12770 ;; Registers used:
 12771 ;;		wreg, status,2, status,0, cstack
 12772 ;; Tracked objects:
 12773 ;;		On entry : 0/0
 12774 ;;		On exit  : 0/0
 12775 ;;		Unchanged: 0/0
 12776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12777 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12779 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12780 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12781 ;;Total ram usage:        3 bytes
 12782 ;; Hardware stack levels used:    1
 12783 ;; Hardware stack levels required when called:   13
 12784 ;; This function calls:
 12785 ;;		_Calcula_Fator_m
 12786 ;; This function is called by:
 12787 ;;		_Verifica_Analogica
 12788 ;; This function uses a non-reentrant model
 12789 ;;
 12790                           
 12791                           	psect	text25
 12792  004DA6                     __ptext25:
 12793                           	opt stack 0
 12794  004DA6                     _ajusta_escala:
 12795                           	opt stack 16
 12796                           
 12797                           ;Conversor_Escalas.c: 107: if (valor >= Min_Entrada1 && valor <= Max_Entrada1) {
 12798                           
 12799                           ; BSR set to: 1
 12800                           ;incstack = 0
 12801  004DA6  0100               	movlb	0	; () banked
 12802  004DA8  51FA               	movf	_Min_Entrada1& (0+255),w,b
 12803  004DAA  0101               	movlb	1	; () banked
 12804  004DAC  5D61               	subwf	ajusta_escala@valor& (0+255),w,b
 12805  004DAE  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 12806  004DB0  0A80               	xorlw	128
 12807  004DB2  6F63               	movwf	??_ajusta_escala& (0+255),b
 12808  004DB4  0100               	movlb	0	; () banked
 12809  004DB6  51FB               	movf	(_Min_Entrada1+1)& (0+255),w,b
 12810  004DB8  0A80               	xorlw	128
 12811  004DBA  0101               	movlb	1	; () banked
 12812  004DBC  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 12813  004DBE  A0D8               	btfss	16344,0,c
 12814  004DC0  D01A               	goto	l904
 12815                           
 12816                           ; BSR set to: 1
 12817  004DC2  5161               	movf	ajusta_escala@valor& (0+255),w,b
 12818  004DC4  5DDD               	subwf	_Max_Entrada1& (0+255),w,b
 12819  004DC6  51DE               	movf	(_Max_Entrada1+1)& (0+255),w,b
 12820  004DC8  0A80               	xorlw	128
 12821  004DCA  6F63               	movwf	??_ajusta_escala& (0+255),b
 12822  004DCC  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 12823  004DCE  0A80               	xorlw	128
 12824  004DD0  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 12825  004DD2  A0D8               	btfss	16344,0,c
 12826  004DD4  D010               	goto	l904
 12827                           
 12828                           ; BSR set to: 1
 12829                           ;Conversor_Escalas.c: 108: Max_Saida = Max_Saida1;
 12830  004DD6  C0FC  F0D1         	movff	_Max_Saida1,_Max_Saida
 12831  004DDA  C0FD  F0D2         	movff	_Max_Saida1+1,_Max_Saida+1
 12832                           
 12833                           ;Conversor_Escalas.c: 109: Min_Saida = Min_Saida1;
 12834  004DDE  C2DB  F2D9         	movff	_Min_Saida1,_Min_Saida
 12835  004DE2  C2DC  F2DA         	movff	_Min_Saida1+1,_Min_Saida+1
 12836                           
 12837                           ;Conversor_Escalas.c: 110: Max_Entrada = Max_Entrada1;
 12838  004DE6  C1DD  F0CF         	movff	_Max_Entrada1,_Max_Entrada
 12839  004DEA  C1DE  F0D0         	movff	_Max_Entrada1+1,_Max_Entrada+1
 12840                           
 12841                           ;Conversor_Escalas.c: 111: Min_Entrada = Min_Entrada1;
 12842  004DEE  C0FA  F2D7         	movff	_Min_Entrada1,_Min_Entrada
 12843  004DF2  C0FB  F2D8         	movff	_Min_Entrada1+1,_Min_Entrada+1
 12844  004DF6                     l904:
 12845                           
 12846                           ; BSR set to: 1
 12847                           ;Conversor_Escalas.c: 112: }
 12848                           ;Conversor_Escalas.c: 115: if (valor > Max_Entrada1 && valor <= Max_Entrada2) {
 12849                           
 12850                           ; BSR set to: 1
 12851  004DF6  5161               	movf	ajusta_escala@valor& (0+255),w,b
 12852  004DF8  5DDD               	subwf	_Max_Entrada1& (0+255),w,b
 12853  004DFA  51DE               	movf	(_Max_Entrada1+1)& (0+255),w,b
 12854  004DFC  0A80               	xorlw	128
 12855  004DFE  6F63               	movwf	??_ajusta_escala& (0+255),b
 12856  004E00  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 12857  004E02  0A80               	xorlw	128
 12858  004E04  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 12859  004E06  B0D8               	btfsc	16344,0,c
 12860  004E08  D01A               	goto	l905
 12861                           
 12862                           ; BSR set to: 1
 12863  004E0A  5161               	movf	ajusta_escala@valor& (0+255),w,b
 12864  004E0C  5DDB               	subwf	_Max_Entrada2& (0+255),w,b
 12865  004E0E  51DC               	movf	(_Max_Entrada2+1)& (0+255),w,b
 12866  004E10  0A80               	xorlw	128
 12867  004E12  6F63               	movwf	??_ajusta_escala& (0+255),b
 12868  004E14  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 12869  004E16  0A80               	xorlw	128
 12870  004E18  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 12871  004E1A  A0D8               	btfss	16344,0,c
 12872  004E1C  D010               	goto	l905
 12873                           
 12874                           ; BSR set to: 1
 12875                           ;Conversor_Escalas.c: 116: Max_Saida = Max_Saida2;
 12876  004E1E  C0F8  F0D1         	movff	_Max_Saida2,_Max_Saida
 12877  004E22  C0F9  F0D2         	movff	_Max_Saida2+1,_Max_Saida+1
 12878                           
 12879                           ;Conversor_Escalas.c: 117: Min_Saida = Max_Saida1;
 12880  004E26  C0FC  F2D9         	movff	_Max_Saida1,_Min_Saida
 12881  004E2A  C0FD  F2DA         	movff	_Max_Saida1+1,_Min_Saida+1
 12882                           
 12883                           ;Conversor_Escalas.c: 118: Max_Entrada = Max_Entrada2;
 12884  004E2E  C1DB  F0CF         	movff	_Max_Entrada2,_Max_Entrada
 12885  004E32  C1DC  F0D0         	movff	_Max_Entrada2+1,_Max_Entrada+1
 12886                           
 12887                           ;Conversor_Escalas.c: 119: Min_Entrada = Max_Entrada1;
 12888  004E36  C1DD  F2D7         	movff	_Max_Entrada1,_Min_Entrada
 12889  004E3A  C1DE  F2D8         	movff	_Max_Entrada1+1,_Min_Entrada+1
 12890  004E3E                     l905:
 12891                           
 12892                           ; BSR set to: 1
 12893                           ;Conversor_Escalas.c: 120: }
 12894                           ;Conversor_Escalas.c: 122: if (valor > Max_Entrada2 && valor <= Max_Entrada3) {
 12895                           
 12896                           ; BSR set to: 1
 12897  004E3E  5161               	movf	ajusta_escala@valor& (0+255),w,b
 12898  004E40  5DDB               	subwf	_Max_Entrada2& (0+255),w,b
 12899  004E42  51DC               	movf	(_Max_Entrada2+1)& (0+255),w,b
 12900  004E44  0A80               	xorlw	128
 12901  004E46  6F63               	movwf	??_ajusta_escala& (0+255),b
 12902  004E48  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 12903  004E4A  0A80               	xorlw	128
 12904  004E4C  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 12905  004E4E  B0D8               	btfsc	16344,0,c
 12906  004E50  D01A               	goto	l906
 12907                           
 12908                           ; BSR set to: 1
 12909  004E52  5161               	movf	ajusta_escala@valor& (0+255),w,b
 12910  004E54  5DD9               	subwf	_Max_Entrada3& (0+255),w,b
 12911  004E56  51DA               	movf	(_Max_Entrada3+1)& (0+255),w,b
 12912  004E58  0A80               	xorlw	128
 12913  004E5A  6F63               	movwf	??_ajusta_escala& (0+255),b
 12914  004E5C  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 12915  004E5E  0A80               	xorlw	128
 12916  004E60  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 12917  004E62  A0D8               	btfss	16344,0,c
 12918  004E64  D010               	goto	l906
 12919                           
 12920                           ; BSR set to: 1
 12921                           ;Conversor_Escalas.c: 123: Max_Saida = Max_Saida3;
 12922  004E66  C0F6  F0D1         	movff	_Max_Saida3,_Max_Saida
 12923  004E6A  C0F7  F0D2         	movff	_Max_Saida3+1,_Max_Saida+1
 12924                           
 12925                           ;Conversor_Escalas.c: 124: Min_Saida = Max_Saida2;
 12926  004E6E  C0F8  F2D9         	movff	_Max_Saida2,_Min_Saida
 12927  004E72  C0F9  F2DA         	movff	_Max_Saida2+1,_Min_Saida+1
 12928                           
 12929                           ;Conversor_Escalas.c: 125: Max_Entrada = Max_Entrada3;
 12930  004E76  C1D9  F0CF         	movff	_Max_Entrada3,_Max_Entrada
 12931  004E7A  C1DA  F0D0         	movff	_Max_Entrada3+1,_Max_Entrada+1
 12932                           
 12933                           ;Conversor_Escalas.c: 126: Min_Entrada = Max_Entrada2;
 12934  004E7E  C1DB  F2D7         	movff	_Max_Entrada2,_Min_Entrada
 12935  004E82  C1DC  F2D8         	movff	_Max_Entrada2+1,_Min_Entrada+1
 12936  004E86                     l906:
 12937                           
 12938                           ; BSR set to: 1
 12939                           ;Conversor_Escalas.c: 127: }
 12940                           ;Conversor_Escalas.c: 129: if (valor > Max_Entrada3 && valor <= Max_Entrada4) {
 12941                           
 12942                           ; BSR set to: 1
 12943  004E86  5161               	movf	ajusta_escala@valor& (0+255),w,b
 12944  004E88  5DD9               	subwf	_Max_Entrada3& (0+255),w,b
 12945  004E8A  51DA               	movf	(_Max_Entrada3+1)& (0+255),w,b
 12946  004E8C  0A80               	xorlw	128
 12947  004E8E  6F63               	movwf	??_ajusta_escala& (0+255),b
 12948  004E90  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 12949  004E92  0A80               	xorlw	128
 12950  004E94  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 12951  004E96  B0D8               	btfsc	16344,0,c
 12952  004E98  D01A               	goto	l907
 12953                           
 12954                           ; BSR set to: 1
 12955  004E9A  5161               	movf	ajusta_escala@valor& (0+255),w,b
 12956  004E9C  5DD7               	subwf	_Max_Entrada4& (0+255),w,b
 12957  004E9E  51D8               	movf	(_Max_Entrada4+1)& (0+255),w,b
 12958  004EA0  0A80               	xorlw	128
 12959  004EA2  6F63               	movwf	??_ajusta_escala& (0+255),b
 12960  004EA4  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 12961  004EA6  0A80               	xorlw	128
 12962  004EA8  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 12963  004EAA  A0D8               	btfss	16344,0,c
 12964  004EAC  D010               	goto	l907
 12965                           
 12966                           ; BSR set to: 1
 12967                           ;Conversor_Escalas.c: 130: Max_Saida = Max_Saida4;
 12968  004EAE  C0F4  F0D1         	movff	_Max_Saida4,_Max_Saida
 12969  004EB2  C0F5  F0D2         	movff	_Max_Saida4+1,_Max_Saida+1
 12970                           
 12971                           ;Conversor_Escalas.c: 131: Min_Saida = Max_Saida3;
 12972  004EB6  C0F6  F2D9         	movff	_Max_Saida3,_Min_Saida
 12973  004EBA  C0F7  F2DA         	movff	_Max_Saida3+1,_Min_Saida+1
 12974                           
 12975                           ;Conversor_Escalas.c: 132: Max_Entrada = Max_Entrada4;
 12976  004EBE  C1D7  F0CF         	movff	_Max_Entrada4,_Max_Entrada
 12977  004EC2  C1D8  F0D0         	movff	_Max_Entrada4+1,_Max_Entrada+1
 12978                           
 12979                           ;Conversor_Escalas.c: 133: Min_Entrada = Max_Entrada3;
 12980  004EC6  C1D9  F2D7         	movff	_Max_Entrada3,_Min_Entrada
 12981  004ECA  C1DA  F2D8         	movff	_Max_Entrada3+1,_Min_Entrada+1
 12982  004ECE                     l907:
 12983                           
 12984                           ; BSR set to: 1
 12985                           ;Conversor_Escalas.c: 134: }
 12986                           ;Conversor_Escalas.c: 136: if (valor > Max_Entrada4 && valor <= Max_Entrada5) {
 12987                           
 12988                           ; BSR set to: 1
 12989  004ECE  5161               	movf	ajusta_escala@valor& (0+255),w,b
 12990  004ED0  5DD7               	subwf	_Max_Entrada4& (0+255),w,b
 12991  004ED2  51D8               	movf	(_Max_Entrada4+1)& (0+255),w,b
 12992  004ED4  0A80               	xorlw	128
 12993  004ED6  6F63               	movwf	??_ajusta_escala& (0+255),b
 12994  004ED8  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 12995  004EDA  0A80               	xorlw	128
 12996  004EDC  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 12997  004EDE  B0D8               	btfsc	16344,0,c
 12998  004EE0  D01A               	goto	l908
 12999                           
 13000                           ; BSR set to: 1
 13001  004EE2  5161               	movf	ajusta_escala@valor& (0+255),w,b
 13002  004EE4  5DD5               	subwf	_Max_Entrada5& (0+255),w,b
 13003  004EE6  51D6               	movf	(_Max_Entrada5+1)& (0+255),w,b
 13004  004EE8  0A80               	xorlw	128
 13005  004EEA  6F63               	movwf	??_ajusta_escala& (0+255),b
 13006  004EEC  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 13007  004EEE  0A80               	xorlw	128
 13008  004EF0  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 13009  004EF2  A0D8               	btfss	16344,0,c
 13010  004EF4  D010               	goto	l908
 13011                           
 13012                           ; BSR set to: 1
 13013                           ;Conversor_Escalas.c: 137: Max_Saida = Max_Saida5;
 13014  004EF6  C0F2  F0D1         	movff	_Max_Saida5,_Max_Saida
 13015  004EFA  C0F3  F0D2         	movff	_Max_Saida5+1,_Max_Saida+1
 13016                           
 13017                           ;Conversor_Escalas.c: 138: Min_Saida = Max_Saida4;
 13018  004EFE  C0F4  F2D9         	movff	_Max_Saida4,_Min_Saida
 13019  004F02  C0F5  F2DA         	movff	_Max_Saida4+1,_Min_Saida+1
 13020                           
 13021                           ;Conversor_Escalas.c: 139: Max_Entrada = Max_Entrada5;
 13022  004F06  C1D5  F0CF         	movff	_Max_Entrada5,_Max_Entrada
 13023  004F0A  C1D6  F0D0         	movff	_Max_Entrada5+1,_Max_Entrada+1
 13024                           
 13025                           ;Conversor_Escalas.c: 140: Min_Entrada = Max_Entrada4;
 13026  004F0E  C1D7  F2D7         	movff	_Max_Entrada4,_Min_Entrada
 13027  004F12  C1D8  F2D8         	movff	_Max_Entrada4+1,_Min_Entrada+1
 13028  004F16                     l908:
 13029                           
 13030                           ; BSR set to: 1
 13031                           ;Conversor_Escalas.c: 141: }
 13032                           ;Conversor_Escalas.c: 142: if (valor > Max_Entrada5 && valor <= Max_Entrada6) {
 13033                           
 13034                           ; BSR set to: 1
 13035  004F16  5161               	movf	ajusta_escala@valor& (0+255),w,b
 13036  004F18  5DD5               	subwf	_Max_Entrada5& (0+255),w,b
 13037  004F1A  51D6               	movf	(_Max_Entrada5+1)& (0+255),w,b
 13038  004F1C  0A80               	xorlw	128
 13039  004F1E  6F63               	movwf	??_ajusta_escala& (0+255),b
 13040  004F20  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 13041  004F22  0A80               	xorlw	128
 13042  004F24  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 13043  004F26  B0D8               	btfsc	16344,0,c
 13044  004F28  D01A               	goto	l909
 13045                           
 13046                           ; BSR set to: 1
 13047  004F2A  5161               	movf	ajusta_escala@valor& (0+255),w,b
 13048  004F2C  5DD3               	subwf	_Max_Entrada6& (0+255),w,b
 13049  004F2E  51D4               	movf	(_Max_Entrada6+1)& (0+255),w,b
 13050  004F30  0A80               	xorlw	128
 13051  004F32  6F63               	movwf	??_ajusta_escala& (0+255),b
 13052  004F34  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 13053  004F36  0A80               	xorlw	128
 13054  004F38  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 13055  004F3A  A0D8               	btfss	16344,0,c
 13056  004F3C  D010               	goto	l909
 13057                           
 13058                           ; BSR set to: 1
 13059                           ;Conversor_Escalas.c: 143: Max_Saida = Max_Saida6;
 13060  004F3E  C0F0  F0D1         	movff	_Max_Saida6,_Max_Saida
 13061  004F42  C0F1  F0D2         	movff	_Max_Saida6+1,_Max_Saida+1
 13062                           
 13063                           ;Conversor_Escalas.c: 144: Min_Saida = Max_Saida5;
 13064  004F46  C0F2  F2D9         	movff	_Max_Saida5,_Min_Saida
 13065  004F4A  C0F3  F2DA         	movff	_Max_Saida5+1,_Min_Saida+1
 13066                           
 13067                           ;Conversor_Escalas.c: 145: Max_Entrada = Max_Entrada6;
 13068  004F4E  C1D3  F0CF         	movff	_Max_Entrada6,_Max_Entrada
 13069  004F52  C1D4  F0D0         	movff	_Max_Entrada6+1,_Max_Entrada+1
 13070                           
 13071                           ;Conversor_Escalas.c: 146: Min_Entrada = Max_Entrada5;
 13072  004F56  C1D5  F2D7         	movff	_Max_Entrada5,_Min_Entrada
 13073  004F5A  C1D6  F2D8         	movff	_Max_Entrada5+1,_Min_Entrada+1
 13074  004F5E                     l909:
 13075                           
 13076                           ; BSR set to: 1
 13077                           ;Conversor_Escalas.c: 147: }
 13078                           ;Conversor_Escalas.c: 148: if (valor > Max_Entrada6 && valor <= Max_Entrada7) {
 13079                           
 13080                           ; BSR set to: 1
 13081  004F5E  5161               	movf	ajusta_escala@valor& (0+255),w,b
 13082  004F60  5DD3               	subwf	_Max_Entrada6& (0+255),w,b
 13083  004F62  51D4               	movf	(_Max_Entrada6+1)& (0+255),w,b
 13084  004F64  0A80               	xorlw	128
 13085  004F66  6F63               	movwf	??_ajusta_escala& (0+255),b
 13086  004F68  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 13087  004F6A  0A80               	xorlw	128
 13088  004F6C  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 13089  004F6E  B0D8               	btfsc	16344,0,c
 13090  004F70  D01A               	goto	l910
 13091                           
 13092                           ; BSR set to: 1
 13093  004F72  5161               	movf	ajusta_escala@valor& (0+255),w,b
 13094  004F74  5DD1               	subwf	_Max_Entrada7& (0+255),w,b
 13095  004F76  51D2               	movf	(_Max_Entrada7+1)& (0+255),w,b
 13096  004F78  0A80               	xorlw	128
 13097  004F7A  6F63               	movwf	??_ajusta_escala& (0+255),b
 13098  004F7C  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 13099  004F7E  0A80               	xorlw	128
 13100  004F80  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 13101  004F82  A0D8               	btfss	16344,0,c
 13102  004F84  D010               	goto	l910
 13103                           
 13104                           ; BSR set to: 1
 13105                           ;Conversor_Escalas.c: 149: Max_Saida = Max_Saida7;
 13106  004F86  C0EE  F0D1         	movff	_Max_Saida7,_Max_Saida
 13107  004F8A  C0EF  F0D2         	movff	_Max_Saida7+1,_Max_Saida+1
 13108                           
 13109                           ;Conversor_Escalas.c: 150: Min_Saida = Max_Saida6;
 13110  004F8E  C0F0  F2D9         	movff	_Max_Saida6,_Min_Saida
 13111  004F92  C0F1  F2DA         	movff	_Max_Saida6+1,_Min_Saida+1
 13112                           
 13113                           ;Conversor_Escalas.c: 151: Max_Entrada = Max_Entrada7;
 13114  004F96  C1D1  F0CF         	movff	_Max_Entrada7,_Max_Entrada
 13115  004F9A  C1D2  F0D0         	movff	_Max_Entrada7+1,_Max_Entrada+1
 13116                           
 13117                           ;Conversor_Escalas.c: 152: Min_Entrada = Max_Entrada6;
 13118  004F9E  C1D3  F2D7         	movff	_Max_Entrada6,_Min_Entrada
 13119  004FA2  C1D4  F2D8         	movff	_Max_Entrada6+1,_Min_Entrada+1
 13120  004FA6                     l910:
 13121                           
 13122                           ; BSR set to: 1
 13123                           ;Conversor_Escalas.c: 153: }
 13124                           ;Conversor_Escalas.c: 155: if (valor > Max_Entrada7 && valor <= Max_Entrada8) {
 13125                           
 13126                           ; BSR set to: 1
 13127  004FA6  5161               	movf	ajusta_escala@valor& (0+255),w,b
 13128  004FA8  5DD1               	subwf	_Max_Entrada7& (0+255),w,b
 13129  004FAA  51D2               	movf	(_Max_Entrada7+1)& (0+255),w,b
 13130  004FAC  0A80               	xorlw	128
 13131  004FAE  6F63               	movwf	??_ajusta_escala& (0+255),b
 13132  004FB0  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 13133  004FB2  0A80               	xorlw	128
 13134  004FB4  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 13135  004FB6  B0D8               	btfsc	16344,0,c
 13136  004FB8  D01A               	goto	l911
 13137                           
 13138                           ; BSR set to: 1
 13139  004FBA  5161               	movf	ajusta_escala@valor& (0+255),w,b
 13140  004FBC  5DCF               	subwf	_Max_Entrada8& (0+255),w,b
 13141  004FBE  51D0               	movf	(_Max_Entrada8+1)& (0+255),w,b
 13142  004FC0  0A80               	xorlw	128
 13143  004FC2  6F63               	movwf	??_ajusta_escala& (0+255),b
 13144  004FC4  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 13145  004FC6  0A80               	xorlw	128
 13146  004FC8  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 13147  004FCA  A0D8               	btfss	16344,0,c
 13148  004FCC  D010               	goto	l911
 13149                           
 13150                           ; BSR set to: 1
 13151                           ;Conversor_Escalas.c: 156: Max_Saida = Max_Saida8;
 13152  004FCE  C0EC  F0D1         	movff	_Max_Saida8,_Max_Saida
 13153  004FD2  C0ED  F0D2         	movff	_Max_Saida8+1,_Max_Saida+1
 13154                           
 13155                           ;Conversor_Escalas.c: 157: Min_Saida = Max_Saida7;
 13156  004FD6  C0EE  F2D9         	movff	_Max_Saida7,_Min_Saida
 13157  004FDA  C0EF  F2DA         	movff	_Max_Saida7+1,_Min_Saida+1
 13158                           
 13159                           ;Conversor_Escalas.c: 158: Max_Entrada = Max_Entrada8;
 13160  004FDE  C1CF  F0CF         	movff	_Max_Entrada8,_Max_Entrada
 13161  004FE2  C1D0  F0D0         	movff	_Max_Entrada8+1,_Max_Entrada+1
 13162                           
 13163                           ;Conversor_Escalas.c: 159: Min_Entrada = Max_Entrada7;
 13164  004FE6  C1D1  F2D7         	movff	_Max_Entrada7,_Min_Entrada
 13165  004FEA  C1D2  F2D8         	movff	_Max_Entrada7+1,_Min_Entrada+1
 13166  004FEE                     l911:
 13167                           
 13168                           ; BSR set to: 1
 13169                           ;Conversor_Escalas.c: 160: }
 13170                           ;Conversor_Escalas.c: 162: if (valor > Max_Entrada8 && valor <= Max_Entrada9) {
 13171                           
 13172                           ; BSR set to: 1
 13173  004FEE  5161               	movf	ajusta_escala@valor& (0+255),w,b
 13174  004FF0  5DCF               	subwf	_Max_Entrada8& (0+255),w,b
 13175  004FF2  51D0               	movf	(_Max_Entrada8+1)& (0+255),w,b
 13176  004FF4  0A80               	xorlw	128
 13177  004FF6  6F63               	movwf	??_ajusta_escala& (0+255),b
 13178  004FF8  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 13179  004FFA  0A80               	xorlw	128
 13180  004FFC  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 13181  004FFE  B0D8               	btfsc	16344,0,c
 13182  005000  D01A               	goto	l912
 13183                           
 13184                           ; BSR set to: 1
 13185  005002  5161               	movf	ajusta_escala@valor& (0+255),w,b
 13186  005004  5DCD               	subwf	_Max_Entrada9& (0+255),w,b
 13187  005006  51CE               	movf	(_Max_Entrada9+1)& (0+255),w,b
 13188  005008  0A80               	xorlw	128
 13189  00500A  6F63               	movwf	??_ajusta_escala& (0+255),b
 13190  00500C  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 13191  00500E  0A80               	xorlw	128
 13192  005010  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 13193  005012  A0D8               	btfss	16344,0,c
 13194  005014  D010               	goto	l912
 13195                           
 13196                           ; BSR set to: 1
 13197                           ;Conversor_Escalas.c: 163: Max_Saida = Max_Saida9;
 13198  005016  C0EA  F0D1         	movff	_Max_Saida9,_Max_Saida
 13199  00501A  C0EB  F0D2         	movff	_Max_Saida9+1,_Max_Saida+1
 13200                           
 13201                           ;Conversor_Escalas.c: 164: Min_Saida = Max_Saida8;
 13202  00501E  C0EC  F2D9         	movff	_Max_Saida8,_Min_Saida
 13203  005022  C0ED  F2DA         	movff	_Max_Saida8+1,_Min_Saida+1
 13204                           
 13205                           ;Conversor_Escalas.c: 165: Max_Entrada = Max_Entrada9;
 13206  005026  C1CD  F0CF         	movff	_Max_Entrada9,_Max_Entrada
 13207  00502A  C1CE  F0D0         	movff	_Max_Entrada9+1,_Max_Entrada+1
 13208                           
 13209                           ;Conversor_Escalas.c: 166: Min_Entrada = Max_Entrada8;
 13210  00502E  C1CF  F2D7         	movff	_Max_Entrada8,_Min_Entrada
 13211  005032  C1D0  F2D8         	movff	_Max_Entrada8+1,_Min_Entrada+1
 13212  005036                     l912:
 13213                           
 13214                           ; BSR set to: 1
 13215                           ;Conversor_Escalas.c: 167: }
 13216                           ;Conversor_Escalas.c: 169: if (valor > Max_Entrada9 && valor <= Max_Entrada10) {
 13217                           
 13218                           ; BSR set to: 1
 13219  005036  5161               	movf	ajusta_escala@valor& (0+255),w,b
 13220  005038  5DCD               	subwf	_Max_Entrada9& (0+255),w,b
 13221  00503A  51CE               	movf	(_Max_Entrada9+1)& (0+255),w,b
 13222  00503C  0A80               	xorlw	128
 13223  00503E  6F63               	movwf	??_ajusta_escala& (0+255),b
 13224  005040  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 13225  005042  0A80               	xorlw	128
 13226  005044  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 13227  005046  B0D8               	btfsc	16344,0,c
 13228  005048  D01C               	goto	l913
 13229                           
 13230                           ; BSR set to: 1
 13231  00504A  5161               	movf	ajusta_escala@valor& (0+255),w,b
 13232  00504C  0100               	movlb	0	; () banked
 13233  00504E  5DE8               	subwf	_Max_Entrada10& (0+255),w,b
 13234  005050  51E9               	movf	(_Max_Entrada10+1)& (0+255),w,b
 13235  005052  0A80               	xorlw	128
 13236  005054  0101               	movlb	1	; () banked
 13237  005056  6F63               	movwf	??_ajusta_escala& (0+255),b
 13238  005058  5162               	movf	(ajusta_escala@valor+1)& (0+255),w,b
 13239  00505A  0A80               	xorlw	128
 13240  00505C  5963               	subwfb	??_ajusta_escala& (0+255),w,b
 13241  00505E  A0D8               	btfss	16344,0,c
 13242  005060  D010               	goto	l913
 13243                           
 13244                           ; BSR set to: 1
 13245                           ;Conversor_Escalas.c: 170: Max_Saida = Max_Saida10;
 13246  005062  C2FC  F0D1         	movff	_Max_Saida10,_Max_Saida
 13247  005066  C2FD  F0D2         	movff	_Max_Saida10+1,_Max_Saida+1
 13248                           
 13249                           ;Conversor_Escalas.c: 171: Min_Saida = Max_Saida9;
 13250  00506A  C0EA  F2D9         	movff	_Max_Saida9,_Min_Saida
 13251  00506E  C0EB  F2DA         	movff	_Max_Saida9+1,_Min_Saida+1
 13252                           
 13253                           ;Conversor_Escalas.c: 172: Max_Entrada = Max_Entrada10;
 13254  005072  C0E8  F0CF         	movff	_Max_Entrada10,_Max_Entrada
 13255  005076  C0E9  F0D0         	movff	_Max_Entrada10+1,_Max_Entrada+1
 13256                           
 13257                           ;Conversor_Escalas.c: 173: Min_Entrada = Max_Entrada9;
 13258  00507A  C1CD  F2D7         	movff	_Max_Entrada9,_Min_Entrada
 13259  00507E  C1CE  F2D8         	movff	_Max_Entrada9+1,_Min_Entrada+1
 13260  005082                     l913:
 13261                           
 13262                           ; BSR set to: 1
 13263                           ;Conversor_Escalas.c: 174: }
 13264                           ;Conversor_Escalas.c: 178: Calcula_Fator_m();
 13265                           
 13266                           ; BSR set to: 1
 13267  005082  EC26  F039         	call	_Calcula_Fator_m	;wreg free
 13268  005086  0012               	return		;funcret
 13269  005088                     __end_of_ajusta_escala:
 13270                           	opt stack 0
 13271                           
 13272 ;; *************** function _Calcula_Fator_m *****************
 13273 ;; Defined at:
 13274 ;;		line 207 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Conversor_Escalas.c"
 13275 ;; Parameters:    Size  Location     Type
 13276 ;;		None
 13277 ;; Auto vars:     Size  Location     Type
 13278 ;;  mY              3   94[BANK1 ] float 
 13279 ;;  mX              3   91[BANK1 ] float 
 13280 ;; Return value:  Size  Location     Type
 13281 ;;                  1    wreg      void 
 13282 ;; Registers used:
 13283 ;;		wreg, status,2, status,0, cstack
 13284 ;; Tracked objects:
 13285 ;;		On entry : 0/0
 13286 ;;		On exit  : 0/0
 13287 ;;		Unchanged: 0/0
 13288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13290 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13291 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13292 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13293 ;;Total ram usage:        8 bytes
 13294 ;; Hardware stack levels used:    1
 13295 ;; Hardware stack levels required when called:   12
 13296 ;; This function calls:
 13297 ;;		___awtoft
 13298 ;;		___ftdiv
 13299 ;; This function is called by:
 13300 ;;		_main
 13301 ;;		_ajusta_escala
 13302 ;; This function uses a non-reentrant model
 13303 ;;
 13304                           
 13305                           	psect	text26
 13306  00724C                     __ptext26:
 13307                           	opt stack 0
 13308  00724C                     _Calcula_Fator_m:
 13309                           	opt stack 16
 13310                           
 13311                           ;Conversor_Escalas.c: 208: float mX;
 13312                           ;Conversor_Escalas.c: 209: float mY;
 13313                           ;Conversor_Escalas.c: 213: mY = Max_Saida - Min_Saida;
 13314                           
 13315                           ;incstack = 0
 13316  00724C  0060  FB64  F159   	movff	_Min_Saida,??_Calcula_Fator_m
 13317  007252  0060  FB68  F15A   	movff	_Min_Saida+1,??_Calcula_Fator_m+1
 13318  007258  0101               	movlb	1	; () banked
 13319  00725A  1F59               	comf	??_Calcula_Fator_m& (0+255),f,b
 13320  00725C  1F5A               	comf	(??_Calcula_Fator_m+1)& (0+255),f,b
 13321  00725E  4B59               	infsnz	??_Calcula_Fator_m& (0+255),f,b
 13322  007260  2B5A               	incf	(??_Calcula_Fator_m+1)& (0+255),f,b
 13323  007262  0100               	movlb	0	; () banked
 13324  007264  51D1               	movf	_Max_Saida& (0+255),w,b
 13325  007266  0101               	movlb	1	; () banked
 13326  007268  2559               	addwf	??_Calcula_Fator_m& (0+255),w,b
 13327  00726A  6F0D               	movwf	___awtoft@c& (0+255),b
 13328  00726C  0100               	movlb	0	; () banked
 13329  00726E  51D2               	movf	(_Max_Saida+1)& (0+255),w,b
 13330  007270  0101               	movlb	1	; () banked
 13331  007272  215A               	addwfc	(??_Calcula_Fator_m+1)& (0+255),w,b
 13332  007274  6F0E               	movwf	(___awtoft@c+1)& (0+255),b
 13333  007276  EC86  F043         	call	___awtoft	;wreg free
 13334  00727A  0060  F434  F15E   	movff	?___awtoft,Calcula_Fator_m@mY
 13335  007280  0060  F438  F15F   	movff	?___awtoft+1,Calcula_Fator_m@mY+1
 13336  007286  0060  F43C  F160   	movff	?___awtoft+2,Calcula_Fator_m@mY+2
 13337                           
 13338                           ;Conversor_Escalas.c: 214: mX = Max_Entrada - Min_Entrada;
 13339  00728C  0060  FB5C  F159   	movff	_Min_Entrada,??_Calcula_Fator_m
 13340  007292  0060  FB60  F15A   	movff	_Min_Entrada+1,??_Calcula_Fator_m+1
 13341  007298  0101               	movlb	1	; () banked
 13342  00729A  1F59               	comf	??_Calcula_Fator_m& (0+255),f,b
 13343  00729C  1F5A               	comf	(??_Calcula_Fator_m+1)& (0+255),f,b
 13344  00729E  4B59               	infsnz	??_Calcula_Fator_m& (0+255),f,b
 13345  0072A0  2B5A               	incf	(??_Calcula_Fator_m+1)& (0+255),f,b
 13346  0072A2  0100               	movlb	0	; () banked
 13347  0072A4  51CF               	movf	_Max_Entrada& (0+255),w,b
 13348  0072A6  0101               	movlb	1	; () banked
 13349  0072A8  2559               	addwf	??_Calcula_Fator_m& (0+255),w,b
 13350  0072AA  6F0D               	movwf	___awtoft@c& (0+255),b
 13351  0072AC  0100               	movlb	0	; () banked
 13352  0072AE  51D0               	movf	(_Max_Entrada+1)& (0+255),w,b
 13353  0072B0  0101               	movlb	1	; () banked
 13354  0072B2  215A               	addwfc	(??_Calcula_Fator_m+1)& (0+255),w,b
 13355  0072B4  6F0E               	movwf	(___awtoft@c+1)& (0+255),b
 13356  0072B6  EC86  F043         	call	___awtoft	;wreg free
 13357  0072BA  0060  F434  F15B   	movff	?___awtoft,Calcula_Fator_m@mX
 13358  0072C0  0060  F438  F15C   	movff	?___awtoft+1,Calcula_Fator_m@mX+1
 13359  0072C6  0060  F43C  F15D   	movff	?___awtoft+2,Calcula_Fator_m@mX+2
 13360                           
 13361                           ;Conversor_Escalas.c: 215: m = mY / mX;
 13362  0072CC  0060  F578  F14A   	movff	Calcula_Fator_m@mY,___ftdiv@f1
 13363  0072D2  0060  F57C  F14B   	movff	Calcula_Fator_m@mY+1,___ftdiv@f1+1
 13364  0072D8  0060  F580  F14C   	movff	Calcula_Fator_m@mY+2,___ftdiv@f1+2
 13365  0072DE  0060  F56C  F14D   	movff	Calcula_Fator_m@mX,___ftdiv@f2
 13366  0072E4  0060  F570  F14E   	movff	Calcula_Fator_m@mX+1,___ftdiv@f2+1
 13367  0072EA  0060  F574  F14F   	movff	Calcula_Fator_m@mX+2,___ftdiv@f2+2
 13368  0072F0  ECED  F034         	call	___ftdiv	;wreg free
 13369  0072F4  0060  F528  F0CC   	movff	?___ftdiv,_m
 13370  0072FA  0060  F52C  F0CD   	movff	?___ftdiv+1,_m+1
 13371  007300  0060  F530  F0CE   	movff	?___ftdiv+2,_m+2
 13372  007306  0012               	return		;funcret
 13373  007308                     __end_of_Calcula_Fator_m:
 13374                           	opt stack 0
 13375                           
 13376 ;; *************** function ___ftdiv *****************
 13377 ;; Defined at:
 13378 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 13379 ;; Parameters:    Size  Location     Type
 13380 ;;  f1              3   74[BANK1 ] float 
 13381 ;;  f2              3   77[BANK1 ] float 
 13382 ;; Auto vars:     Size  Location     Type
 13383 ;;  f3              3   84[BANK1 ] float 
 13384 ;;  sign            1   88[BANK1 ] unsigned char 
 13385 ;;  exp             1   87[BANK1 ] unsigned char 
 13386 ;;  cntr            1   83[BANK1 ] unsigned char 
 13387 ;; Return value:  Size  Location     Type
 13388 ;;                  3   74[BANK1 ] float 
 13389 ;; Registers used:
 13390 ;;		wreg, status,2, status,0, cstack
 13391 ;; Tracked objects:
 13392 ;;		On entry : 0/0
 13393 ;;		On exit  : 0/0
 13394 ;;		Unchanged: 0/0
 13395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13396 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13397 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13398 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13399 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13400 ;;Total ram usage:       15 bytes
 13401 ;; Hardware stack levels used:    1
 13402 ;; Hardware stack levels required when called:   11
 13403 ;; This function calls:
 13404 ;;		___ftpack
 13405 ;; This function is called by:
 13406 ;;		_Calcula_Fator_m
 13407 ;;		_sprintf
 13408 ;;		_polinomio
 13409 ;; This function uses a non-reentrant model
 13410 ;;
 13411                           
 13412                           	psect	text27
 13413  0069DA                     __ptext27:
 13414                           	opt stack 0
 13415  0069DA                     ___ftdiv:
 13416                           	opt stack 18
 13417                           
 13418                           ;incstack = 0
 13419  0069DA  0060  F530  F150   	movff	___ftdiv@f1+2,??___ftdiv
 13420  0069E0  0101               	movlb	1	; () banked
 13421  0069E2  6B51               	clrf	(??___ftdiv+1)& (0+255),b
 13422  0069E4  6B52               	clrf	(??___ftdiv+2)& (0+255),b
 13423  0069E6  354B               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 13424  0069E8  3750               	rlcf	??___ftdiv& (0+255),f,b
 13425  0069EA  E301               	bnc	u16651
 13426  0069EC  8151               	bsf	(??___ftdiv+1)& (0+255),0,b
 13427  0069EE                     u16651:
 13428  0069EE  5150               	movf	??___ftdiv& (0+255),w,b
 13429  0069F0  6F57               	movwf	___ftdiv@exp& (0+255),b
 13430  0069F2  5157               	movf	___ftdiv@exp& (0+255),w,b
 13431  0069F4  A4D8               	btfss	16344,2,c
 13432  0069F6  D007               	goto	l1531
 13433                           
 13434                           ; BSR set to: 1
 13435  0069F8  0E00               	movlw	0
 13436  0069FA  6F4A               	movwf	?___ftdiv& (0+255),b
 13437  0069FC  0E00               	movlw	0
 13438  0069FE  6F4B               	movwf	(?___ftdiv+1)& (0+255),b
 13439  006A00  0E00               	movlw	0
 13440  006A02  6F4C               	movwf	(?___ftdiv+2)& (0+255),b
 13441                           
 13442                           ; BSR set to: 1
 13443  006A04  0012               	return	
 13444  006A06                     l1531:
 13445                           
 13446                           ; BSR set to: 1
 13447                           
 13448                           ; BSR set to: 1
 13449  006A06  0060  F53C  F150   	movff	___ftdiv@f2+2,??___ftdiv
 13450  006A0C  6B51               	clrf	(??___ftdiv+1)& (0+255),b
 13451  006A0E  6B52               	clrf	(??___ftdiv+2)& (0+255),b
 13452  006A10  354E               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 13453  006A12  3750               	rlcf	??___ftdiv& (0+255),f,b
 13454  006A14  E301               	bnc	u16671
 13455  006A16  8151               	bsf	(??___ftdiv+1)& (0+255),0,b
 13456  006A18                     u16671:
 13457  006A18  5150               	movf	??___ftdiv& (0+255),w,b
 13458  006A1A  6F58               	movwf	___ftdiv@sign& (0+255),b
 13459  006A1C  5158               	movf	___ftdiv@sign& (0+255),w,b
 13460  006A1E  A4D8               	btfss	16344,2,c
 13461  006A20  D007               	goto	l1533
 13462                           
 13463                           ; BSR set to: 1
 13464  006A22  0E00               	movlw	0
 13465  006A24  6F4A               	movwf	?___ftdiv& (0+255),b
 13466  006A26  0E00               	movlw	0
 13467  006A28  6F4B               	movwf	(?___ftdiv+1)& (0+255),b
 13468  006A2A  0E00               	movlw	0
 13469  006A2C  6F4C               	movwf	(?___ftdiv+2)& (0+255),b
 13470                           
 13471                           ; BSR set to: 1
 13472  006A2E  0012               	return	
 13473  006A30                     l1533:
 13474                           
 13475                           ; BSR set to: 1
 13476                           
 13477                           ; BSR set to: 1
 13478  006A30  0E00               	movlw	0
 13479  006A32  6F54               	movwf	___ftdiv@f3& (0+255),b
 13480  006A34  0E00               	movlw	0
 13481  006A36  6F55               	movwf	(___ftdiv@f3+1)& (0+255),b
 13482  006A38  0E00               	movlw	0
 13483  006A3A  6F56               	movwf	(___ftdiv@f3+2)& (0+255),b
 13484                           
 13485                           ; BSR set to: 1
 13486  006A3C  5158               	movf	___ftdiv@sign& (0+255),w,b
 13487  006A3E  0F89               	addlw	137
 13488  006A40  5F57               	subwf	___ftdiv@exp& (0+255),f,b
 13489                           
 13490                           ; BSR set to: 1
 13491  006A42  0060  F530  F158   	movff	___ftdiv@f1+2,___ftdiv@sign
 13492                           
 13493                           ; BSR set to: 1
 13494  006A48  514F               	movf	(___ftdiv@f2+2)& (0+255),w,b
 13495  006A4A  1B58               	xorwf	___ftdiv@sign& (0+255),f,b
 13496                           
 13497                           ; BSR set to: 1
 13498  006A4C  0E80               	movlw	128
 13499  006A4E  1758               	andwf	___ftdiv@sign& (0+255),f,b
 13500                           
 13501                           ; BSR set to: 1
 13502  006A50  8F4B               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 13503                           
 13504                           ; BSR set to: 1
 13505  006A52  0EFF               	movlw	255
 13506  006A54  174A               	andwf	___ftdiv@f1& (0+255),f,b
 13507  006A56  0EFF               	movlw	255
 13508  006A58  174B               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 13509  006A5A  0E00               	movlw	0
 13510  006A5C  174C               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 13511                           
 13512                           ; BSR set to: 1
 13513  006A5E  8F4E               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 13514                           
 13515                           ; BSR set to: 1
 13516  006A60  0EFF               	movlw	255
 13517  006A62  174D               	andwf	___ftdiv@f2& (0+255),f,b
 13518  006A64  0EFF               	movlw	255
 13519  006A66  174E               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 13520  006A68  0E00               	movlw	0
 13521  006A6A  174F               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 13522                           
 13523                           ; BSR set to: 1
 13524  006A6C  0E18               	movlw	24
 13525  006A6E  6F53               	movwf	___ftdiv@cntr& (0+255),b
 13526  006A70                     
 13527                           ; BSR set to: 1
 13528                           
 13529                           ; BSR set to: 1
 13530  006A70  90D8               	bcf	16344,0,c
 13531  006A72  3754               	rlcf	___ftdiv@f3& (0+255),f,b
 13532  006A74  3755               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 13533  006A76  3756               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 13534                           
 13535                           ; BSR set to: 1
 13536  006A78  514D               	movf	___ftdiv@f2& (0+255),w,b
 13537  006A7A  5D4A               	subwf	___ftdiv@f1& (0+255),w,b
 13538  006A7C  514E               	movf	(___ftdiv@f2+1)& (0+255),w,b
 13539  006A7E  594B               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 13540  006A80  514F               	movf	(___ftdiv@f2+2)& (0+255),w,b
 13541  006A82  594C               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 13542  006A84  A0D8               	btfss	16344,0,c
 13543  006A86  D007               	goto	l1535
 13544                           
 13545                           ; BSR set to: 1
 13546  006A88  514D               	movf	___ftdiv@f2& (0+255),w,b
 13547  006A8A  5F4A               	subwf	___ftdiv@f1& (0+255),f,b
 13548  006A8C  514E               	movf	(___ftdiv@f2+1)& (0+255),w,b
 13549  006A8E  5B4B               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 13550  006A90  514F               	movf	(___ftdiv@f2+2)& (0+255),w,b
 13551  006A92  5B4C               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 13552                           
 13553                           ; BSR set to: 1
 13554  006A94  8154               	bsf	___ftdiv@f3& (0+255),0,b
 13555  006A96                     l1535:
 13556                           
 13557                           ; BSR set to: 1
 13558  006A96  90D8               	bcf	16344,0,c
 13559  006A98  374A               	rlcf	___ftdiv@f1& (0+255),f,b
 13560  006A9A  374B               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 13561  006A9C  374C               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 13562                           
 13563                           ; BSR set to: 1
 13564  006A9E  2F53               	decfsz	___ftdiv@cntr& (0+255),f,b
 13565  006AA0  D7E7               	goto	l1534
 13566                           
 13567                           ; BSR set to: 1
 13568                           
 13569                           ; BSR set to: 1
 13570  006AA2  0060  F550  F105   	movff	___ftdiv@f3,___ftpack@arg
 13571  006AA8  0060  F554  F106   	movff	___ftdiv@f3+1,___ftpack@arg+1
 13572  006AAE  0060  F558  F107   	movff	___ftdiv@f3+2,___ftpack@arg+2
 13573  006AB4  0060  F55C  F108   	movff	___ftdiv@exp,___ftpack@exp
 13574  006ABA  0060  F560  F109   	movff	___ftdiv@sign,___ftpack@sign
 13575  006AC0  ECE0  F039         	call	___ftpack	;wreg free
 13576  006AC4  0060  F414  F14A   	movff	?___ftpack,?___ftdiv
 13577  006ACA  0060  F418  F14B   	movff	?___ftpack+1,?___ftdiv+1
 13578  006AD0  0060  F41C  F14C   	movff	?___ftpack+2,?___ftdiv+2
 13579  006AD6  0012               	return	
 13580  006AD8                     __end_of___ftdiv:
 13581                           	opt stack 0
 13582                           
 13583 ;; *************** function _Converte_Escala *****************
 13584 ;; Defined at:
 13585 ;;		line 181 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Conversor_Escalas.c"
 13586 ;; Parameters:    Size  Location     Type
 13587 ;;		None
 13588 ;; Auto vars:     Size  Location     Type
 13589 ;;		None
 13590 ;; Return value:  Size  Location     Type
 13591 ;;                  1    wreg      void 
 13592 ;; Registers used:
 13593 ;;		wreg, status,2, status,0, cstack
 13594 ;; Tracked objects:
 13595 ;;		On entry : 0/0
 13596 ;;		On exit  : 0/0
 13597 ;;		Unchanged: 0/0
 13598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13601 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13602 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13603 ;;Total ram usage:        4 bytes
 13604 ;; Hardware stack levels used:    1
 13605 ;; Hardware stack levels required when called:   12
 13606 ;; This function calls:
 13607 ;;		___altoft
 13608 ;;		___awtoft
 13609 ;;		___ftadd
 13610 ;;		___ftmul
 13611 ;;		___fttol
 13612 ;; This function is called by:
 13613 ;;		_Verifica_Analogica
 13614 ;; This function uses a non-reentrant model
 13615 ;;
 13616                           
 13617                           	psect	text28
 13618  005C30                     __ptext28:
 13619                           	opt stack 0
 13620  005C30                     _Converte_Escala:
 13621                           	opt stack 17
 13622                           
 13623                           ;Conversor_Escalas.c: 187: offset = (float) ((long) Max_Saida - (long) (m * Max_Entrada)
      +                          );
 13624                           
 13625                           ;incstack = 0
 13626  005C30  0060  F330  F137   	movff	_m,___ftmul@f2
 13627  005C36  0060  F334  F138   	movff	_m+1,___ftmul@f2+1
 13628  005C3C  0060  F338  F139   	movff	_m+2,___ftmul@f2+2
 13629  005C42  0060  F33C  F10D   	movff	_Max_Entrada,___awtoft@c
 13630  005C48  0060  F340  F10E   	movff	_Max_Entrada+1,___awtoft@c+1
 13631  005C4E  EC86  F043         	call	___awtoft	;wreg free
 13632  005C52  0060  F434  F134   	movff	?___awtoft,___ftmul@f1
 13633  005C58  0060  F438  F135   	movff	?___awtoft+1,___ftmul@f1+1
 13634  005C5E  0060  F43C  F136   	movff	?___awtoft+2,___ftmul@f1+2
 13635  005C64  EC5A  F032         	call	___ftmul	;wreg free
 13636  005C68  0060  F4D0  F119   	movff	?___ftmul,___fttol@f1
 13637  005C6E  0060  F4D4  F11A   	movff	?___ftmul+1,___fttol@f1+1
 13638  005C74  0060  F4D8  F11B   	movff	?___ftmul+2,___fttol@f1+2
 13639  005C7A  EC65  F033         	call	___fttol	;wreg free
 13640  005C7E  0101               	movlb	1	; () banked
 13641  005C80  1F19               	comf	?___fttol& (0+255),f,b
 13642  005C82  1F1A               	comf	(?___fttol+1)& (0+255),f,b
 13643  005C84  1F1B               	comf	(?___fttol+2)& (0+255),f,b
 13644  005C86  1F1C               	comf	(?___fttol+3)& (0+255),f,b
 13645  005C88  2B19               	incf	?___fttol& (0+255),f,b
 13646  005C8A  0E00               	movlw	0
 13647  005C8C  231A               	addwfc	(?___fttol+1)& (0+255),f,b
 13648  005C8E  231B               	addwfc	(?___fttol+2)& (0+255),f,b
 13649  005C90  231C               	addwfc	(?___fttol+3)& (0+255),f,b
 13650  005C92  0060  F344  F159   	movff	_Max_Saida,??_Converte_Escala
 13651  005C98  0060  F348  F15A   	movff	_Max_Saida+1,??_Converte_Escala+1
 13652  005C9E  0E00               	movlw	0
 13653  005CA0  BF5A               	btfsc	(??_Converte_Escala+1)& (0+255),7,b
 13654  005CA2  0EFF               	movlw	255
 13655  005CA4  6F5B               	movwf	(??_Converte_Escala+2)& (0+255),b
 13656  005CA6  6F5C               	movwf	(??_Converte_Escala+3)& (0+255),b
 13657  005CA8  5119               	movf	?___fttol& (0+255),w,b
 13658  005CAA  2559               	addwf	??_Converte_Escala& (0+255),w,b
 13659  005CAC  6F43               	movwf	___altoft@c& (0+255),b
 13660  005CAE  511A               	movf	(?___fttol+1)& (0+255),w,b
 13661  005CB0  215A               	addwfc	(??_Converte_Escala+1)& (0+255),w,b
 13662  005CB2  6F44               	movwf	(___altoft@c+1)& (0+255),b
 13663  005CB4  511B               	movf	(?___fttol+2)& (0+255),w,b
 13664  005CB6  215B               	addwfc	(??_Converte_Escala+2)& (0+255),w,b
 13665  005CB8  6F45               	movwf	(___altoft@c+2)& (0+255),b
 13666  005CBA  511C               	movf	(?___fttol+3)& (0+255),w,b
 13667  005CBC  215C               	addwfc	(??_Converte_Escala+3)& (0+255),w,b
 13668  005CBE  6F46               	movwf	(___altoft@c+3)& (0+255),b
 13669  005CC0  ECBF  F03C         	call	___altoft	;wreg free
 13670  005CC4  0060  F50C  F2CC   	movff	?___altoft,_offset
 13671  005CCA  0060  F510  F2CD   	movff	?___altoft+1,_offset+1
 13672  005CD0  0060  F514  F2CE   	movff	?___altoft+2,_offset+2
 13673                           
 13674                           ;Conversor_Escalas.c: 189: saida = (unsigned long) (((float) valor_AD * (float) m) + off
      +                          set);
 13675  005CD6  0060  FB30  F150   	movff	_offset,___ftadd@f2
 13676  005CDC  0060  FB34  F151   	movff	_offset+1,___ftadd@f2+1
 13677  005CE2  0060  FB38  F152   	movff	_offset+2,___ftadd@f2+2
 13678  005CE8  0060  F330  F137   	movff	_m,___ftmul@f2
 13679  005CEE  0060  F334  F138   	movff	_m+1,___ftmul@f2+1
 13680  005CF4  0060  F338  F139   	movff	_m+2,___ftmul@f2+2
 13681  005CFA  0060  F77C  F10D   	movff	_valor_AD,___awtoft@c
 13682  005D00  0060  F780  F10E   	movff	_valor_AD+1,___awtoft@c+1
 13683  005D06  EC86  F043         	call	___awtoft	;wreg free
 13684  005D0A  0060  F434  F134   	movff	?___awtoft,___ftmul@f1
 13685  005D10  0060  F438  F135   	movff	?___awtoft+1,___ftmul@f1+1
 13686  005D16  0060  F43C  F136   	movff	?___awtoft+2,___ftmul@f1+2
 13687  005D1C  EC5A  F032         	call	___ftmul	;wreg free
 13688  005D20  0060  F4D0  F14D   	movff	?___ftmul,___ftadd@f1
 13689  005D26  0060  F4D4  F14E   	movff	?___ftmul+1,___ftadd@f1+1
 13690  005D2C  0060  F4D8  F14F   	movff	?___ftmul+2,___ftadd@f1+2
 13691  005D32  ECC5  F02A         	call	___ftadd	;wreg free
 13692  005D36  0060  F534  F119   	movff	?___ftadd,___fttol@f1
 13693  005D3C  0060  F538  F11A   	movff	?___ftadd+1,___fttol@f1+1
 13694  005D42  0060  F53C  F11B   	movff	?___ftadd+2,___fttol@f1+2
 13695  005D48  EC65  F033         	call	___fttol	;wreg free
 13696  005D4C  0060  F464  F2BC   	movff	?___fttol,_saida
 13697  005D52  0060  F468  F2BD   	movff	?___fttol+1,_saida+1
 13698  005D58  0060  F46C  F2BE   	movff	?___fttol+2,_saida+2
 13699  005D5E  0060  F470  F2BF   	movff	?___fttol+3,_saida+3
 13700                           
 13701                           ;Conversor_Escalas.c: 194: }
 13702                           ;Conversor_Escalas.c: 202: if (saida > 1000) {
 13703                           
 13704                           ; BSR set to: 2
 13705                           
 13706                           ;Conversor_Escalas.c: 193: saida = 0;
 13707                           
 13708                           ;Conversor_Escalas.c: 192: if (saida < 0) {
 13709  005D64  0102               	movlb	2	; () banked
 13710  005D66  51BF               	movf	(_saida+3)& (0+255),w,b
 13711  005D68  11BE               	iorwf	(_saida+2)& (0+255),w,b
 13712  005D6A  E106               	bnz	u19190
 13713  005D6C  0EE9               	movlw	233
 13714  005D6E  5DBC               	subwf	_saida& (0+255),w,b
 13715  005D70  0E03               	movlw	3
 13716  005D72  59BD               	subwfb	(_saida+1)& (0+255),w,b
 13717  005D74  A0D8               	btfss	16344,0,c
 13718  005D76  0012               	return	
 13719  005D78                     u19190:
 13720                           
 13721                           ; BSR set to: 2
 13722                           ;Conversor_Escalas.c: 203: saida = 1000;
 13723  005D78  0EE8               	movlw	232
 13724  005D7A  6FBC               	movwf	_saida& (0+255),b
 13725  005D7C  0E03               	movlw	3
 13726  005D7E  6FBD               	movwf	(_saida+1)& (0+255),b
 13727  005D80  0E00               	movlw	0
 13728  005D82  6FBE               	movwf	(_saida+2)& (0+255),b
 13729  005D84  0E00               	movlw	0
 13730  005D86  6FBF               	movwf	(_saida+3)& (0+255),b
 13731  005D88  0012               	return	
 13732  005D8A                     __end_of_Converte_Escala:
 13733                           	opt stack 0
 13734                           
 13735 ;; *************** function ___fttol *****************
 13736 ;; Defined at:
 13737 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 13738 ;; Parameters:    Size  Location     Type
 13739 ;;  f1              3   25[BANK1 ] float 
 13740 ;; Auto vars:     Size  Location     Type
 13741 ;;  lval            4   35[BANK1 ] unsigned long 
 13742 ;;  exp1            1   39[BANK1 ] unsigned char 
 13743 ;;  sign1           1   34[BANK1 ] unsigned char 
 13744 ;; Return value:  Size  Location     Type
 13745 ;;                  4   25[BANK1 ] long 
 13746 ;; Registers used:
 13747 ;;		wreg, status,2, status,0
 13748 ;; Tracked objects:
 13749 ;;		On entry : 0/0
 13750 ;;		On exit  : 0/0
 13751 ;;		Unchanged: 0/0
 13752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13753 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13754 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13755 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13756 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13757 ;;Total ram usage:       15 bytes
 13758 ;; Hardware stack levels used:    1
 13759 ;; Hardware stack levels required when called:   10
 13760 ;; This function calls:
 13761 ;;		Nothing
 13762 ;; This function is called by:
 13763 ;;		_Converte_Escala
 13764 ;;		_sprintf
 13765 ;;		_polinomio
 13766 ;; This function uses a non-reentrant model
 13767 ;;
 13768                           
 13769                           	psect	text29
 13770  0066CA                     __ptext29:
 13771                           	opt stack 0
 13772  0066CA                     ___fttol:
 13773                           	opt stack 19
 13774                           
 13775                           ; BSR set to: 2
 13776                           ;incstack = 0
 13777  0066CA  0060  F46C  F11D   	movff	___fttol@f1+2,??___fttol
 13778  0066D0  0101               	movlb	1	; () banked
 13779  0066D2  6B1E               	clrf	(??___fttol+1)& (0+255),b
 13780  0066D4  6B1F               	clrf	(??___fttol+2)& (0+255),b
 13781  0066D6  351A               	rlcf	(___fttol@f1+1)& (0+255),w,b
 13782  0066D8  371D               	rlcf	??___fttol& (0+255),f,b
 13783  0066DA  E301               	bnc	u16751
 13784  0066DC  811E               	bsf	(??___fttol+1)& (0+255),0,b
 13785  0066DE                     u16751:
 13786  0066DE  511D               	movf	??___fttol& (0+255),w,b
 13787  0066E0  6F27               	movwf	___fttol@exp1& (0+255),b
 13788  0066E2  5127               	movf	___fttol@exp1& (0+255),w,b
 13789  0066E4  A4D8               	btfss	16344,2,c
 13790  0066E6  D009               	goto	l1584
 13791                           
 13792                           ; BSR set to: 1
 13793  0066E8  0E00               	movlw	0
 13794  0066EA  6F19               	movwf	?___fttol& (0+255),b
 13795  0066EC  0E00               	movlw	0
 13796  0066EE  6F1A               	movwf	(?___fttol+1)& (0+255),b
 13797  0066F0  0E00               	movlw	0
 13798  0066F2  6F1B               	movwf	(?___fttol+2)& (0+255),b
 13799  0066F4  0E00               	movlw	0
 13800  0066F6  6F1C               	movwf	(?___fttol+3)& (0+255),b
 13801                           
 13802                           ; BSR set to: 1
 13803  0066F8  0012               	return	
 13804  0066FA                     l1584:
 13805                           
 13806                           ; BSR set to: 1
 13807                           
 13808                           ; BSR set to: 1
 13809  0066FA  0E17               	movlw	23
 13810  0066FC  6F1D               	movwf	??___fttol& (0+255),b
 13811  0066FE  0060  F464  F11E   	movff	___fttol@f1,??___fttol+1
 13812  006704  0060  F468  F11F   	movff	___fttol@f1+1,??___fttol+2
 13813  00670A  0060  F46C  F120   	movff	___fttol@f1+2,??___fttol+3
 13814  006710  291D               	incf	??___fttol& (0+255),w,b
 13815  006712  6F21               	movwf	(??___fttol+4)& (0+255),b
 13816  006714  D004               	goto	u16770
 13817  006716                     u16775:
 13818  006716  90D8               	bcf	16344,0,c
 13819  006718  3320               	rrcf	(??___fttol+3)& (0+255),f,b
 13820  00671A  331F               	rrcf	(??___fttol+2)& (0+255),f,b
 13821  00671C  331E               	rrcf	(??___fttol+1)& (0+255),f,b
 13822  00671E                     u16770:
 13823  00671E  2F21               	decfsz	(??___fttol+4)& (0+255),f,b
 13824  006720  D7FA               	goto	u16775
 13825  006722  0101               	movlb	1	; () banked
 13826  006724  511E               	movf	(??___fttol+1)& (0+255),w,b
 13827  006726  6F22               	movwf	___fttol@sign1& (0+255),b
 13828                           
 13829                           ; BSR set to: 1
 13830  006728  8F1A               	bsf	(___fttol@f1+1)& (0+255),7,b
 13831                           
 13832                           ; BSR set to: 1
 13833  00672A  0EFF               	movlw	255
 13834  00672C  1719               	andwf	___fttol@f1& (0+255),f,b
 13835  00672E  0EFF               	movlw	255
 13836  006730  171A               	andwf	(___fttol@f1+1)& (0+255),f,b
 13837  006732  0E00               	movlw	0
 13838  006734  171B               	andwf	(___fttol@f1+2)& (0+255),f,b
 13839                           
 13840                           ; BSR set to: 1
 13841  006736  5119               	movf	___fttol@f1& (0+255),w,b
 13842  006738  6F23               	movwf	___fttol@lval& (0+255),b
 13843  00673A  511A               	movf	(___fttol@f1+1)& (0+255),w,b
 13844  00673C  6F24               	movwf	(___fttol@lval+1)& (0+255),b
 13845  00673E  511B               	movf	(___fttol@f1+2)& (0+255),w,b
 13846  006740  6F25               	movwf	(___fttol@lval+2)& (0+255),b
 13847  006742  6B26               	clrf	(___fttol@lval+3)& (0+255),b
 13848                           
 13849                           ; BSR set to: 1
 13850  006744  0E8E               	movlw	142
 13851  006746  5F27               	subwf	___fttol@exp1& (0+255),f,b
 13852                           
 13853                           ; BSR set to: 1
 13854  006748  AF27               	btfss	___fttol@exp1& (0+255),7,b
 13855  00674A  D016               	goto	l1586
 13856                           
 13857                           ; BSR set to: 1
 13858  00674C  5127               	movf	___fttol@exp1& (0+255),w,b
 13859  00674E  0A80               	xorlw	128
 13860  006750  0F8F               	addlw	143
 13861  006752  B0D8               	btfsc	16344,0,c
 13862  006754  D009               	goto	l1587
 13863                           
 13864                           ; BSR set to: 1
 13865  006756  0E00               	movlw	0
 13866  006758  6F19               	movwf	?___fttol& (0+255),b
 13867  00675A  0E00               	movlw	0
 13868  00675C  6F1A               	movwf	(?___fttol+1)& (0+255),b
 13869  00675E  0E00               	movlw	0
 13870  006760  6F1B               	movwf	(?___fttol+2)& (0+255),b
 13871  006762  0E00               	movlw	0
 13872  006764  6F1C               	movwf	(?___fttol+3)& (0+255),b
 13873                           
 13874                           ; BSR set to: 1
 13875  006766  0012               	return	
 13876  006768                     l1587:
 13877                           
 13878                           ; BSR set to: 1
 13879                           
 13880                           ; BSR set to: 1
 13881                           
 13882                           ; BSR set to: 1
 13883  006768  90D8               	bcf	16344,0,c
 13884  00676A  3326               	rrcf	(___fttol@lval+3)& (0+255),f,b
 13885  00676C  3325               	rrcf	(___fttol@lval+2)& (0+255),f,b
 13886  00676E  3324               	rrcf	(___fttol@lval+1)& (0+255),f,b
 13887  006770  3323               	rrcf	___fttol@lval& (0+255),f,b
 13888                           
 13889                           ; BSR set to: 1
 13890  006772  3F27               	incfsz	___fttol@exp1& (0+255),f,b
 13891  006774  D7F9               	goto	l1587
 13892                           
 13893                           ; BSR set to: 1
 13894  006776  D015               	goto	u16810
 13895  006778                     l1586:
 13896                           
 13897                           ; BSR set to: 1
 13898                           
 13899                           ; BSR set to: 1
 13900  006778  0E17               	movlw	23
 13901  00677A  6527               	cpfsgt	___fttol@exp1& (0+255),b
 13902  00677C  D00F               	goto	l1592
 13903                           
 13904                           ; BSR set to: 1
 13905  00677E  0E00               	movlw	0
 13906  006780  6F19               	movwf	?___fttol& (0+255),b
 13907  006782  0E00               	movlw	0
 13908  006784  6F1A               	movwf	(?___fttol+1)& (0+255),b
 13909  006786  0E00               	movlw	0
 13910  006788  6F1B               	movwf	(?___fttol+2)& (0+255),b
 13911  00678A  0E00               	movlw	0
 13912  00678C  6F1C               	movwf	(?___fttol+3)& (0+255),b
 13913                           
 13914                           ; BSR set to: 1
 13915  00678E  0012               	return	
 13916  006790                     
 13917                           ; BSR set to: 1
 13918                           
 13919                           ; BSR set to: 1
 13920  006790  90D8               	bcf	16344,0,c
 13921  006792  3723               	rlcf	___fttol@lval& (0+255),f,b
 13922  006794  3724               	rlcf	(___fttol@lval+1)& (0+255),f,b
 13923  006796  3725               	rlcf	(___fttol@lval+2)& (0+255),f,b
 13924  006798  3726               	rlcf	(___fttol@lval+3)& (0+255),f,b
 13925  00679A  0727               	decf	___fttol@exp1& (0+255),f,b
 13926  00679C                     l1592:
 13927                           
 13928                           ; BSR set to: 1
 13929                           
 13930                           ; BSR set to: 1
 13931  00679C  5127               	movf	___fttol@exp1& (0+255),w,b
 13932  00679E  A4D8               	btfss	16344,2,c
 13933  0067A0  D7F7               	goto	l1593
 13934  0067A2                     u16810:
 13935                           
 13936                           ; BSR set to: 1
 13937                           
 13938                           ; BSR set to: 1
 13939                           
 13940                           ; BSR set to: 1
 13941  0067A2  5122               	movf	___fttol@sign1& (0+255),w,b
 13942  0067A4  B4D8               	btfsc	16344,2,c
 13943  0067A6  D008               	goto	l1595
 13944                           
 13945                           ; BSR set to: 1
 13946  0067A8  1F26               	comf	(___fttol@lval+3)& (0+255),f,b
 13947  0067AA  1F25               	comf	(___fttol@lval+2)& (0+255),f,b
 13948  0067AC  1F24               	comf	(___fttol@lval+1)& (0+255),f,b
 13949  0067AE  6D23               	negf	___fttol@lval& (0+255),b
 13950  0067B0  0E00               	movlw	0
 13951  0067B2  2324               	addwfc	(___fttol@lval+1)& (0+255),f,b
 13952  0067B4  2325               	addwfc	(___fttol@lval+2)& (0+255),f,b
 13953  0067B6  2326               	addwfc	(___fttol@lval+3)& (0+255),f,b
 13954  0067B8                     l1595:
 13955                           
 13956                           ; BSR set to: 1
 13957                           
 13958                           ; BSR set to: 1
 13959  0067B8  0060  F48C  F119   	movff	___fttol@lval,?___fttol
 13960  0067BE  0060  F490  F11A   	movff	___fttol@lval+1,?___fttol+1
 13961  0067C4  0060  F494  F11B   	movff	___fttol@lval+2,?___fttol+2
 13962  0067CA  0060  F498  F11C   	movff	___fttol@lval+3,?___fttol+3
 13963  0067D0  0012               	return	
 13964  0067D2                     __end_of___fttol:
 13965                           	opt stack 0
 13966                           
 13967 ;; *************** function ___ftmul *****************
 13968 ;; Defined at:
 13969 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 13970 ;; Parameters:    Size  Location     Type
 13971 ;;  f1              3   52[BANK1 ] float 
 13972 ;;  f2              3   55[BANK1 ] float 
 13973 ;; Auto vars:     Size  Location     Type
 13974 ;;  f3_as_produc    3   62[BANK1 ] unsigned um
 13975 ;;  sign            1   66[BANK1 ] unsigned char 
 13976 ;;  cntr            1   65[BANK1 ] unsigned char 
 13977 ;;  exp             1   61[BANK1 ] unsigned char 
 13978 ;; Return value:  Size  Location     Type
 13979 ;;                  3   52[BANK1 ] float 
 13980 ;; Registers used:
 13981 ;;		wreg, status,2, status,0, cstack
 13982 ;; Tracked objects:
 13983 ;;		On entry : 0/0
 13984 ;;		On exit  : 0/0
 13985 ;;		Unchanged: 0/0
 13986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13987 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13988 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13989 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13990 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13991 ;;Total ram usage:       15 bytes
 13992 ;; Hardware stack levels used:    1
 13993 ;; Hardware stack levels required when called:   11
 13994 ;; This function calls:
 13995 ;;		___ftpack
 13996 ;; This function is called by:
 13997 ;;		_Converte_Escala
 13998 ;;		_fround
 13999 ;;		_scale
 14000 ;;		_sprintf
 14001 ;;		_polinomio
 14002 ;; This function uses a non-reentrant model
 14003 ;;
 14004                           
 14005                           	psect	text30
 14006  0064B4                     __ptext30:
 14007                           	opt stack 0
 14008  0064B4                     ___ftmul:
 14009                           	opt stack 17
 14010                           
 14011                           ; BSR set to: 1
 14012                           ;incstack = 0
 14013  0064B4  0060  F4D8  F13A   	movff	___ftmul@f1+2,??___ftmul
 14014  0064BA  0101               	movlb	1	; () banked
 14015  0064BC  6B3B               	clrf	(??___ftmul+1)& (0+255),b
 14016  0064BE  6B3C               	clrf	(??___ftmul+2)& (0+255),b
 14017  0064C0  3535               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 14018  0064C2  373A               	rlcf	??___ftmul& (0+255),f,b
 14019  0064C4  E301               	bnc	u14621
 14020  0064C6  813B               	bsf	(??___ftmul+1)& (0+255),0,b
 14021  0064C8                     u14621:
 14022  0064C8  513A               	movf	??___ftmul& (0+255),w,b
 14023  0064CA  6F3D               	movwf	___ftmul@exp& (0+255),b
 14024  0064CC  513D               	movf	___ftmul@exp& (0+255),w,b
 14025  0064CE  A4D8               	btfss	16344,2,c
 14026  0064D0  D007               	goto	l1563
 14027                           
 14028                           ; BSR set to: 1
 14029  0064D2  0E00               	movlw	0
 14030  0064D4  6F34               	movwf	?___ftmul& (0+255),b
 14031  0064D6  0E00               	movlw	0
 14032  0064D8  6F35               	movwf	(?___ftmul+1)& (0+255),b
 14033  0064DA  0E00               	movlw	0
 14034  0064DC  6F36               	movwf	(?___ftmul+2)& (0+255),b
 14035                           
 14036                           ; BSR set to: 1
 14037  0064DE  0012               	return	
 14038  0064E0                     l1563:
 14039                           
 14040                           ; BSR set to: 1
 14041                           
 14042                           ; BSR set to: 1
 14043  0064E0  0060  F4E4  F13A   	movff	___ftmul@f2+2,??___ftmul
 14044  0064E6  6B3B               	clrf	(??___ftmul+1)& (0+255),b
 14045  0064E8  6B3C               	clrf	(??___ftmul+2)& (0+255),b
 14046  0064EA  3538               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 14047  0064EC  373A               	rlcf	??___ftmul& (0+255),f,b
 14048  0064EE  E301               	bnc	u14641
 14049  0064F0  813B               	bsf	(??___ftmul+1)& (0+255),0,b
 14050  0064F2                     u14641:
 14051  0064F2  513A               	movf	??___ftmul& (0+255),w,b
 14052  0064F4  6F42               	movwf	___ftmul@sign& (0+255),b
 14053  0064F6  5142               	movf	___ftmul@sign& (0+255),w,b
 14054  0064F8  A4D8               	btfss	16344,2,c
 14055  0064FA  D007               	goto	l1565
 14056                           
 14057                           ; BSR set to: 1
 14058  0064FC  0E00               	movlw	0
 14059  0064FE  6F34               	movwf	?___ftmul& (0+255),b
 14060  006500  0E00               	movlw	0
 14061  006502  6F35               	movwf	(?___ftmul+1)& (0+255),b
 14062  006504  0E00               	movlw	0
 14063  006506  6F36               	movwf	(?___ftmul+2)& (0+255),b
 14064                           
 14065                           ; BSR set to: 1
 14066  006508  0012               	return	
 14067  00650A                     l1565:
 14068                           
 14069                           ; BSR set to: 1
 14070                           
 14071                           ; BSR set to: 1
 14072  00650A  5142               	movf	___ftmul@sign& (0+255),w,b
 14073  00650C  0F7B               	addlw	123
 14074  00650E  273D               	addwf	___ftmul@exp& (0+255),f,b
 14075                           
 14076                           ; BSR set to: 1
 14077  006510  0060  F4D8  F142   	movff	___ftmul@f1+2,___ftmul@sign
 14078  006516  5139               	movf	(___ftmul@f2+2)& (0+255),w,b
 14079  006518  1B42               	xorwf	___ftmul@sign& (0+255),f,b
 14080  00651A  0E80               	movlw	128
 14081  00651C  1742               	andwf	___ftmul@sign& (0+255),f,b
 14082                           
 14083                           ; BSR set to: 1
 14084  00651E  8F35               	bsf	(___ftmul@f1+1)& (0+255),7,b
 14085                           
 14086                           ; BSR set to: 1
 14087  006520  8F38               	bsf	(___ftmul@f2+1)& (0+255),7,b
 14088                           
 14089                           ; BSR set to: 1
 14090  006522  0EFF               	movlw	255
 14091  006524  1737               	andwf	___ftmul@f2& (0+255),f,b
 14092  006526  0EFF               	movlw	255
 14093  006528  1738               	andwf	(___ftmul@f2+1)& (0+255),f,b
 14094  00652A  0E00               	movlw	0
 14095  00652C  1739               	andwf	(___ftmul@f2+2)& (0+255),f,b
 14096                           
 14097                           ; BSR set to: 1
 14098  00652E  0E00               	movlw	0
 14099  006530  6F3E               	movwf	___ftmul@f3_as_product& (0+255),b
 14100  006532  0E00               	movlw	0
 14101  006534  6F3F               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 14102  006536  0E00               	movlw	0
 14103  006538  6F40               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 14104                           
 14105                           ; BSR set to: 1
 14106  00653A  0E07               	movlw	7
 14107  00653C  6F41               	movwf	___ftmul@cntr& (0+255),b
 14108  00653E                     
 14109                           ; BSR set to: 1
 14110                           
 14111                           ; BSR set to: 1
 14112  00653E  A134               	btfss	___ftmul@f1& (0+255),0,b
 14113  006540  D006               	goto	l1567
 14114                           
 14115                           ; BSR set to: 1
 14116  006542  5137               	movf	___ftmul@f2& (0+255),w,b
 14117  006544  273E               	addwf	___ftmul@f3_as_product& (0+255),f,b
 14118  006546  5138               	movf	(___ftmul@f2+1)& (0+255),w,b
 14119  006548  233F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 14120  00654A  5139               	movf	(___ftmul@f2+2)& (0+255),w,b
 14121  00654C  2340               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 14122  00654E                     l1567:
 14123                           
 14124                           ; BSR set to: 1
 14125                           
 14126                           ; BSR set to: 1
 14127  00654E  90D8               	bcf	16344,0,c
 14128  006550  3336               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 14129  006552  3335               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 14130  006554  3334               	rrcf	___ftmul@f1& (0+255),f,b
 14131  006556  90D8               	bcf	16344,0,c
 14132  006558  3737               	rlcf	___ftmul@f2& (0+255),f,b
 14133  00655A  3738               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 14134  00655C  3739               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 14135                           
 14136                           ; BSR set to: 1
 14137  00655E  2F41               	decfsz	___ftmul@cntr& (0+255),f,b
 14138  006560  D7EE               	goto	l1566
 14139                           
 14140                           ; BSR set to: 1
 14141                           
 14142                           ; BSR set to: 1
 14143  006562  0E09               	movlw	9
 14144  006564  6F41               	movwf	___ftmul@cntr& (0+255),b
 14145  006566                     
 14146                           ; BSR set to: 1
 14147                           
 14148                           ; BSR set to: 1
 14149  006566  A134               	btfss	___ftmul@f1& (0+255),0,b
 14150  006568  D006               	goto	l1570
 14151                           
 14152                           ; BSR set to: 1
 14153  00656A  5137               	movf	___ftmul@f2& (0+255),w,b
 14154  00656C  273E               	addwf	___ftmul@f3_as_product& (0+255),f,b
 14155  00656E  5138               	movf	(___ftmul@f2+1)& (0+255),w,b
 14156  006570  233F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 14157  006572  5139               	movf	(___ftmul@f2+2)& (0+255),w,b
 14158  006574  2340               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 14159  006576                     l1570:
 14160                           
 14161                           ; BSR set to: 1
 14162                           
 14163                           ; BSR set to: 1
 14164  006576  90D8               	bcf	16344,0,c
 14165  006578  3336               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 14166  00657A  3335               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 14167  00657C  3334               	rrcf	___ftmul@f1& (0+255),f,b
 14168  00657E  90D8               	bcf	16344,0,c
 14169  006580  3340               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 14170  006582  333F               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 14171  006584  333E               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 14172                           
 14173                           ; BSR set to: 1
 14174  006586  2F41               	decfsz	___ftmul@cntr& (0+255),f,b
 14175  006588  D7EE               	goto	l1569
 14176                           
 14177                           ; BSR set to: 1
 14178                           
 14179                           ; BSR set to: 1
 14180  00658A  0060  F4F8  F105   	movff	___ftmul@f3_as_product,___ftpack@arg
 14181  006590  0060  F4FC  F106   	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 14182  006596  0060  F500  F107   	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 14183  00659C  0060  F4F4  F108   	movff	___ftmul@exp,___ftpack@exp
 14184  0065A2  0060  F508  F109   	movff	___ftmul@sign,___ftpack@sign
 14185  0065A8  ECE0  F039         	call	___ftpack	;wreg free
 14186  0065AC  0060  F414  F134   	movff	?___ftpack,?___ftmul
 14187  0065B2  0060  F418  F135   	movff	?___ftpack+1,?___ftmul+1
 14188  0065B8  0060  F41C  F136   	movff	?___ftpack+2,?___ftmul+2
 14189  0065BE  0012               	return	
 14190  0065C0                     __end_of___ftmul:
 14191                           	opt stack 0
 14192                           
 14193 ;; *************** function ___ftadd *****************
 14194 ;; Defined at:
 14195 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 14196 ;; Parameters:    Size  Location     Type
 14197 ;;  f1              3   77[BANK1 ] float 
 14198 ;;  f2              3   80[BANK1 ] float 
 14199 ;; Auto vars:     Size  Location     Type
 14200 ;;  exp1            1   88[BANK1 ] unsigned char 
 14201 ;;  exp2            1   87[BANK1 ] unsigned char 
 14202 ;;  sign            1   86[BANK1 ] unsigned char 
 14203 ;; Return value:  Size  Location     Type
 14204 ;;                  3   77[BANK1 ] float 
 14205 ;; Registers used:
 14206 ;;		wreg, status,2, status,0, cstack
 14207 ;; Tracked objects:
 14208 ;;		On entry : 0/0
 14209 ;;		On exit  : 0/0
 14210 ;;		Unchanged: 0/0
 14211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14212 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14213 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14214 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14215 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14216 ;;Total ram usage:       12 bytes
 14217 ;; Hardware stack levels used:    1
 14218 ;; Hardware stack levels required when called:   11
 14219 ;; This function calls:
 14220 ;;		___ftpack
 14221 ;; This function is called by:
 14222 ;;		_Converte_Escala
 14223 ;;		_sprintf
 14224 ;;		___ftsub
 14225 ;;		_polinomio
 14226 ;; This function uses a non-reentrant model
 14227 ;;
 14228                           
 14229                           	psect	text31
 14230  00558A                     __ptext31:
 14231                           	opt stack 0
 14232  00558A                     ___ftadd:
 14233                           	opt stack 17
 14234                           
 14235                           ;incstack = 0
 14236  00558A  0060  F53C  F153   	movff	___ftadd@f1+2,??___ftadd
 14237  005590  0101               	movlb	1	; () banked
 14238  005592  6B54               	clrf	(??___ftadd+1)& (0+255),b
 14239  005594  6B55               	clrf	(??___ftadd+2)& (0+255),b
 14240  005596  354E               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 14241  005598  3753               	rlcf	??___ftadd& (0+255),f,b
 14242  00559A  E301               	bnc	u14411
 14243  00559C  8154               	bsf	(??___ftadd+1)& (0+255),0,b
 14244  00559E                     u14411:
 14245  00559E  5153               	movf	??___ftadd& (0+255),w,b
 14246  0055A0  6F58               	movwf	___ftadd@exp1& (0+255),b
 14247  0055A2  0060  F548  F153   	movff	___ftadd@f2+2,??___ftadd
 14248  0055A8  6B54               	clrf	(??___ftadd+1)& (0+255),b
 14249  0055AA  6B55               	clrf	(??___ftadd+2)& (0+255),b
 14250  0055AC  3551               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 14251  0055AE  3753               	rlcf	??___ftadd& (0+255),f,b
 14252  0055B0  E301               	bnc	u14421
 14253  0055B2  8154               	bsf	(??___ftadd+1)& (0+255),0,b
 14254  0055B4                     u14421:
 14255  0055B4  5153               	movf	??___ftadd& (0+255),w,b
 14256  0055B6  6F57               	movwf	___ftadd@exp2& (0+255),b
 14257                           
 14258                           ; BSR set to: 1
 14259  0055B8  5158               	movf	___ftadd@exp1& (0+255),w,b
 14260  0055BA  B4D8               	btfsc	16344,2,c
 14261  0055BC  D00B               	goto	u14450
 14262                           
 14263                           ; BSR set to: 1
 14264  0055BE  5157               	movf	___ftadd@exp2& (0+255),w,b
 14265  0055C0  5D58               	subwf	___ftadd@exp1& (0+255),w,b
 14266  0055C2  B0D8               	btfsc	16344,0,c
 14267  0055C4  D011               	goto	l1498
 14268                           
 14269                           ; BSR set to: 1
 14270  0055C6  5158               	movf	___ftadd@exp1& (0+255),w,b
 14271  0055C8  0800               	sublw	0
 14272  0055CA  2557               	addwf	___ftadd@exp2& (0+255),w,b
 14273  0055CC  6F53               	movwf	??___ftadd& (0+255),b
 14274  0055CE  0E18               	movlw	24
 14275  0055D0  6553               	cpfsgt	??___ftadd& (0+255),b
 14276  0055D2  D00A               	goto	l1498
 14277  0055D4                     u14450:
 14278                           
 14279                           ; BSR set to: 1
 14280  0055D4  0060  F540  F14D   	movff	___ftadd@f2,?___ftadd
 14281  0055DA  0060  F544  F14E   	movff	___ftadd@f2+1,?___ftadd+1
 14282  0055E0  0060  F548  F14F   	movff	___ftadd@f2+2,?___ftadd+2
 14283  0055E6  0012               	return	
 14284  0055E8                     l1498:
 14285                           
 14286                           ; BSR set to: 1
 14287                           
 14288                           ; BSR set to: 1
 14289  0055E8  5157               	movf	___ftadd@exp2& (0+255),w,b
 14290  0055EA  B4D8               	btfsc	16344,2,c
 14291  0055EC  D00B               	goto	u14480
 14292                           
 14293                           ; BSR set to: 1
 14294  0055EE  5158               	movf	___ftadd@exp1& (0+255),w,b
 14295  0055F0  5D57               	subwf	___ftadd@exp2& (0+255),w,b
 14296  0055F2  B0D8               	btfsc	16344,0,c
 14297  0055F4  D011               	goto	l1502
 14298                           
 14299                           ; BSR set to: 1
 14300  0055F6  5157               	movf	___ftadd@exp2& (0+255),w,b
 14301  0055F8  0800               	sublw	0
 14302  0055FA  2558               	addwf	___ftadd@exp1& (0+255),w,b
 14303  0055FC  6F53               	movwf	??___ftadd& (0+255),b
 14304  0055FE  0E18               	movlw	24
 14305  005600  6553               	cpfsgt	??___ftadd& (0+255),b
 14306  005602  D00A               	goto	l1502
 14307  005604                     u14480:
 14308                           
 14309                           ; BSR set to: 1
 14310  005604  0060  F534  F14D   	movff	___ftadd@f1,?___ftadd
 14311  00560A  0060  F538  F14E   	movff	___ftadd@f1+1,?___ftadd+1
 14312  005610  0060  F53C  F14F   	movff	___ftadd@f1+2,?___ftadd+2
 14313  005616  0012               	return	
 14314  005618                     l1502:
 14315                           
 14316                           ; BSR set to: 1
 14317                           
 14318                           ; BSR set to: 1
 14319  005618  0E06               	movlw	6
 14320  00561A  6F56               	movwf	___ftadd@sign& (0+255),b
 14321                           
 14322                           ; BSR set to: 1
 14323  00561C  BF4F               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 14324                           
 14325                           ; BSR set to: 1
 14326  00561E  8F56               	bsf	___ftadd@sign& (0+255),7,b
 14327                           
 14328                           ; BSR set to: 1
 14329                           
 14330                           ; BSR set to: 1
 14331  005620  BF52               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 14332                           
 14333                           ; BSR set to: 1
 14334  005622  8D56               	bsf	___ftadd@sign& (0+255),6,b
 14335                           
 14336                           ; BSR set to: 1
 14337  005624  8F4E               	bsf	(___ftadd@f1+1)& (0+255),7,b
 14338                           
 14339                           ; BSR set to: 1
 14340  005626  0EFF               	movlw	255
 14341  005628  174D               	andwf	___ftadd@f1& (0+255),f,b
 14342  00562A  0EFF               	movlw	255
 14343  00562C  174E               	andwf	(___ftadd@f1+1)& (0+255),f,b
 14344  00562E  0E00               	movlw	0
 14345  005630  174F               	andwf	(___ftadd@f1+2)& (0+255),f,b
 14346  005632  8F51               	bsf	(___ftadd@f2+1)& (0+255),7,b
 14347                           
 14348                           ; BSR set to: 1
 14349  005634  0EFF               	movlw	255
 14350  005636  1750               	andwf	___ftadd@f2& (0+255),f,b
 14351  005638  0EFF               	movlw	255
 14352  00563A  1751               	andwf	(___ftadd@f2+1)& (0+255),f,b
 14353  00563C  0E00               	movlw	0
 14354  00563E  1752               	andwf	(___ftadd@f2+2)& (0+255),f,b
 14355                           
 14356                           ; BSR set to: 1
 14357  005640  5157               	movf	___ftadd@exp2& (0+255),w,b
 14358  005642  5D58               	subwf	___ftadd@exp1& (0+255),w,b
 14359  005644  B0D8               	btfsc	16344,0,c
 14360  005646  D01C               	goto	l1507
 14361  005648                     u14510:
 14362                           
 14363                           ; BSR set to: 1
 14364                           
 14365                           ; BSR set to: 1
 14366  005648  90D8               	bcf	16344,0,c
 14367  00564A  3750               	rlcf	___ftadd@f2& (0+255),f,b
 14368  00564C  3751               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 14369  00564E  3752               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 14370  005650  0757               	decf	___ftadd@exp2& (0+255),f,b
 14371                           
 14372                           ; BSR set to: 1
 14373  005652  5158               	movf	___ftadd@exp1& (0+255),w,b
 14374  005654  1957               	xorwf	___ftadd@exp2& (0+255),w,b
 14375  005656  B4D8               	btfsc	16344,2,c
 14376  005658  D00E               	goto	l1512
 14377                           
 14378                           ; BSR set to: 1
 14379  00565A  0756               	decf	___ftadd@sign& (0+255),f,b
 14380  00565C  0060  F558  F153   	movff	___ftadd@sign,??___ftadd
 14381  005662  0E07               	movlw	7
 14382  005664  1753               	andwf	??___ftadd& (0+255),f,b
 14383  005666  B4D8               	btfsc	16344,2,c
 14384  005668  D006               	goto	l1512
 14385  00566A  D7EE               	goto	u14510
 14386  00566C                     
 14387                           ; BSR set to: 1
 14388                           
 14389                           ; BSR set to: 1
 14390  00566C  90D8               	bcf	16344,0,c
 14391  00566E  334F               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 14392  005670  334E               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 14393  005672  334D               	rrcf	___ftadd@f1& (0+255),f,b
 14394  005674  2B58               	incf	___ftadd@exp1& (0+255),f,b
 14395  005676                     l1512:
 14396                           
 14397                           ; BSR set to: 1
 14398                           
 14399                           ; BSR set to: 1
 14400  005676  5157               	movf	___ftadd@exp2& (0+255),w,b
 14401  005678  1958               	xorwf	___ftadd@exp1& (0+255),w,b
 14402  00567A  B4D8               	btfsc	16344,2,c
 14403  00567C  D020               	goto	u14580
 14404  00567E  D7F6               	goto	l1513
 14405  005680                     l1507:
 14406                           
 14407                           ; BSR set to: 1
 14408                           
 14409                           ; BSR set to: 1
 14410  005680  5158               	movf	___ftadd@exp1& (0+255),w,b
 14411  005682  5D57               	subwf	___ftadd@exp2& (0+255),w,b
 14412  005684  B0D8               	btfsc	16344,0,c
 14413  005686  D01B               	goto	u14580
 14414  005688                     u14550:
 14415                           
 14416                           ; BSR set to: 1
 14417                           
 14418                           ; BSR set to: 1
 14419  005688  90D8               	bcf	16344,0,c
 14420  00568A  374D               	rlcf	___ftadd@f1& (0+255),f,b
 14421  00568C  374E               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 14422  00568E  374F               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 14423  005690  0758               	decf	___ftadd@exp1& (0+255),f,b
 14424                           
 14425                           ; BSR set to: 1
 14426  005692  5158               	movf	___ftadd@exp1& (0+255),w,b
 14427  005694  1957               	xorwf	___ftadd@exp2& (0+255),w,b
 14428  005696  B4D8               	btfsc	16344,2,c
 14429  005698  D00E               	goto	l1521
 14430                           
 14431                           ; BSR set to: 1
 14432  00569A  0756               	decf	___ftadd@sign& (0+255),f,b
 14433  00569C  0060  F558  F153   	movff	___ftadd@sign,??___ftadd
 14434  0056A2  0E07               	movlw	7
 14435  0056A4  1753               	andwf	??___ftadd& (0+255),f,b
 14436  0056A6  B4D8               	btfsc	16344,2,c
 14437  0056A8  D006               	goto	l1521
 14438  0056AA  D7EE               	goto	u14550
 14439  0056AC                     
 14440                           ; BSR set to: 1
 14441                           
 14442                           ; BSR set to: 1
 14443  0056AC  90D8               	bcf	16344,0,c
 14444  0056AE  3352               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 14445  0056B0  3351               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 14446  0056B2  3350               	rrcf	___ftadd@f2& (0+255),f,b
 14447  0056B4  2B57               	incf	___ftadd@exp2& (0+255),f,b
 14448  0056B6                     l1521:
 14449                           
 14450                           ; BSR set to: 1
 14451                           
 14452                           ; BSR set to: 1
 14453  0056B6  5157               	movf	___ftadd@exp2& (0+255),w,b
 14454  0056B8  1958               	xorwf	___ftadd@exp1& (0+255),w,b
 14455  0056BA  A4D8               	btfss	16344,2,c
 14456  0056BC  D7F7               	goto	l1522
 14457  0056BE                     u14580:
 14458                           
 14459                           ; BSR set to: 1
 14460                           
 14461                           ; BSR set to: 1
 14462                           
 14463                           ; BSR set to: 1
 14464  0056BE  AF56               	btfss	___ftadd@sign& (0+255),7,b
 14465  0056C0  D00C               	goto	l1524
 14466                           
 14467                           ; BSR set to: 1
 14468  0056C2  0EFF               	movlw	255
 14469  0056C4  1B4D               	xorwf	___ftadd@f1& (0+255),f,b
 14470  0056C6  0EFF               	movlw	255
 14471  0056C8  1B4E               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 14472  0056CA  0EFF               	movlw	255
 14473  0056CC  1B4F               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 14474  0056CE  0E01               	movlw	1
 14475  0056D0  274D               	addwf	___ftadd@f1& (0+255),f,b
 14476  0056D2  0E00               	movlw	0
 14477  0056D4  234E               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 14478  0056D6  0E00               	movlw	0
 14479  0056D8  234F               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 14480  0056DA                     l1524:
 14481                           
 14482                           ; BSR set to: 1
 14483  0056DA  AD56               	btfss	___ftadd@sign& (0+255),6,b
 14484  0056DC  D00C               	goto	l1525
 14485                           
 14486                           ; BSR set to: 1
 14487  0056DE  0EFF               	movlw	255
 14488  0056E0  1B50               	xorwf	___ftadd@f2& (0+255),f,b
 14489  0056E2  0EFF               	movlw	255
 14490  0056E4  1B51               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14491  0056E6  0EFF               	movlw	255
 14492  0056E8  1B52               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14493  0056EA  0E01               	movlw	1
 14494  0056EC  2750               	addwf	___ftadd@f2& (0+255),f,b
 14495  0056EE  0E00               	movlw	0
 14496  0056F0  2351               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14497  0056F2  0E00               	movlw	0
 14498  0056F4  2352               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14499  0056F6                     l1525:
 14500                           
 14501                           ; BSR set to: 1
 14502                           
 14503                           ; BSR set to: 1
 14504  0056F6  0E00               	movlw	0
 14505  0056F8  6F56               	movwf	___ftadd@sign& (0+255),b
 14506                           
 14507                           ; BSR set to: 1
 14508  0056FA  514D               	movf	___ftadd@f1& (0+255),w,b
 14509  0056FC  2750               	addwf	___ftadd@f2& (0+255),f,b
 14510  0056FE  514E               	movf	(___ftadd@f1+1)& (0+255),w,b
 14511  005700  2351               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14512  005702  514F               	movf	(___ftadd@f1+2)& (0+255),w,b
 14513  005704  2352               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14514                           
 14515                           ; BSR set to: 1
 14516  005706  AF52               	btfss	(___ftadd@f2+2)& (0+255),7,b
 14517  005708  D00E               	goto	l1526
 14518                           
 14519                           ; BSR set to: 1
 14520  00570A  0EFF               	movlw	255
 14521  00570C  1B50               	xorwf	___ftadd@f2& (0+255),f,b
 14522  00570E  0EFF               	movlw	255
 14523  005710  1B51               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14524  005712  0EFF               	movlw	255
 14525  005714  1B52               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14526  005716  0E01               	movlw	1
 14527  005718  2750               	addwf	___ftadd@f2& (0+255),f,b
 14528  00571A  0E00               	movlw	0
 14529  00571C  2351               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14530  00571E  0E00               	movlw	0
 14531  005720  2352               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14532                           
 14533                           ; BSR set to: 1
 14534  005722  0E01               	movlw	1
 14535  005724  6F56               	movwf	___ftadd@sign& (0+255),b
 14536  005726                     l1526:
 14537                           
 14538                           ; BSR set to: 1
 14539                           
 14540                           ; BSR set to: 1
 14541  005726  0060  F540  F105   	movff	___ftadd@f2,___ftpack@arg
 14542  00572C  0060  F544  F106   	movff	___ftadd@f2+1,___ftpack@arg+1
 14543  005732  0060  F548  F107   	movff	___ftadd@f2+2,___ftpack@arg+2
 14544  005738  0060  F560  F108   	movff	___ftadd@exp1,___ftpack@exp
 14545  00573E  0060  F558  F109   	movff	___ftadd@sign,___ftpack@sign
 14546  005744  ECE0  F039         	call	___ftpack	;wreg free
 14547  005748  0060  F414  F14D   	movff	?___ftpack,?___ftadd
 14548  00574E  0060  F418  F14E   	movff	?___ftpack+1,?___ftadd+1
 14549  005754  0060  F41C  F14F   	movff	?___ftpack+2,?___ftadd+2
 14550  00575A  0012               	return	
 14551  00575C                     __end_of___ftadd:
 14552                           	opt stack 0
 14553                           
 14554 ;; *************** function ___awtoft *****************
 14555 ;; Defined at:
 14556 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 14557 ;; Parameters:    Size  Location     Type
 14558 ;;  c               2   13[BANK1 ] int 
 14559 ;; Auto vars:     Size  Location     Type
 14560 ;;  sign            1   16[BANK1 ] unsigned char 
 14561 ;; Return value:  Size  Location     Type
 14562 ;;                  3   13[BANK1 ] float 
 14563 ;; Registers used:
 14564 ;;		wreg, status,2, status,0, cstack
 14565 ;; Tracked objects:
 14566 ;;		On entry : 0/0
 14567 ;;		On exit  : 0/0
 14568 ;;		Unchanged: 0/0
 14569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14570 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14571 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14573 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14574 ;;Total ram usage:        4 bytes
 14575 ;; Hardware stack levels used:    1
 14576 ;; Hardware stack levels required when called:   11
 14577 ;; This function calls:
 14578 ;;		___ftpack
 14579 ;; This function is called by:
 14580 ;;		_Converte_Escala
 14581 ;;		_Calcula_Fator_m
 14582 ;;		_polinomio
 14583 ;; This function uses a non-reentrant model
 14584 ;;
 14585                           
 14586                           	psect	text32
 14587  00870C                     __ptext32:
 14588                           	opt stack 0
 14589  00870C                     ___awtoft:
 14590                           	opt stack 16
 14591                           
 14592                           ;incstack = 0
 14593  00870C  0E00               	movlw	0
 14594  00870E  0101               	movlb	1	; () banked
 14595  008710  6F10               	movwf	___awtoft@sign& (0+255),b
 14596                           
 14597                           ; BSR set to: 1
 14598  008712  AF0E               	btfss	(___awtoft@c+1)& (0+255),7,b
 14599  008714  D006               	goto	l1431
 14600                           
 14601                           ; BSR set to: 1
 14602  008716  6D0D               	negf	___awtoft@c& (0+255),b
 14603  008718  1F0E               	comf	(___awtoft@c+1)& (0+255),f,b
 14604  00871A  B0D8               	btfsc	16344,0,c
 14605  00871C  2B0E               	incf	(___awtoft@c+1)& (0+255),f,b
 14606                           
 14607                           ; BSR set to: 1
 14608  00871E  0E01               	movlw	1
 14609  008720  6F10               	movwf	___awtoft@sign& (0+255),b
 14610  008722                     l1431:
 14611                           
 14612                           ; BSR set to: 1
 14613                           
 14614                           ; BSR set to: 1
 14615  008722  0060  F434  F105   	movff	___awtoft@c,___ftpack@arg
 14616  008728  0060  F438  F106   	movff	___awtoft@c+1,___ftpack@arg+1
 14617  00872E  6B07               	clrf	(___ftpack@arg+2)& (0+255),b
 14618  008730  0E8E               	movlw	142
 14619  008732  6F08               	movwf	___ftpack@exp& (0+255),b
 14620  008734  0060  F440  F109   	movff	___awtoft@sign,___ftpack@sign
 14621  00873A  ECE0  F039         	call	___ftpack	;wreg free
 14622  00873E  0060  F414  F10D   	movff	?___ftpack,?___awtoft
 14623  008744  0060  F418  F10E   	movff	?___ftpack+1,?___awtoft+1
 14624  00874A  0060  F41C  F10F   	movff	?___ftpack+2,?___awtoft+2
 14625  008750  0012               	return	
 14626  008752                     __end_of___awtoft:
 14627                           	opt stack 0
 14628                           
 14629 ;; *************** function ___altoft *****************
 14630 ;; Defined at:
 14631 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 14632 ;; Parameters:    Size  Location     Type
 14633 ;;  c               4   67[BANK1 ] long 
 14634 ;; Auto vars:     Size  Location     Type
 14635 ;;  sign            1   76[BANK1 ] unsigned char 
 14636 ;;  exp             1   75[BANK1 ] unsigned char 
 14637 ;; Return value:  Size  Location     Type
 14638 ;;                  3   67[BANK1 ] float 
 14639 ;; Registers used:
 14640 ;;		wreg, status,2, status,0, cstack
 14641 ;; Tracked objects:
 14642 ;;		On entry : 0/0
 14643 ;;		On exit  : 0/0
 14644 ;;		Unchanged: 0/0
 14645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14646 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14647 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14648 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14649 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14650 ;;Total ram usage:       10 bytes
 14651 ;; Hardware stack levels used:    1
 14652 ;; Hardware stack levels required when called:   11
 14653 ;; This function calls:
 14654 ;;		___ftpack
 14655 ;; This function is called by:
 14656 ;;		_Converte_Escala
 14657 ;; This function uses a non-reentrant model
 14658 ;;
 14659                           
 14660                           	psect	text33
 14661  00797E                     __ptext33:
 14662                           	opt stack 0
 14663  00797E                     ___altoft:
 14664                           	opt stack 17
 14665                           
 14666                           ;incstack = 0
 14667  00797E  0E00               	movlw	0
 14668  007980  0101               	movlb	1	; () banked
 14669  007982  6F4C               	movwf	___altoft@sign& (0+255),b
 14670  007984  0E8E               	movlw	142
 14671  007986  6F4B               	movwf	___altoft@exp& (0+255),b
 14672                           
 14673                           ; BSR set to: 1
 14674  007988  AF46               	btfss	(___altoft@c+3)& (0+255),7,b
 14675  00798A  D011               	goto	l1320
 14676                           
 14677                           ; BSR set to: 1
 14678  00798C  1F46               	comf	(___altoft@c+3)& (0+255),f,b
 14679  00798E  1F45               	comf	(___altoft@c+2)& (0+255),f,b
 14680  007990  1F44               	comf	(___altoft@c+1)& (0+255),f,b
 14681  007992  6D43               	negf	___altoft@c& (0+255),b
 14682  007994  0E00               	movlw	0
 14683  007996  2344               	addwfc	(___altoft@c+1)& (0+255),f,b
 14684  007998  2345               	addwfc	(___altoft@c+2)& (0+255),f,b
 14685  00799A  2346               	addwfc	(___altoft@c+3)& (0+255),f,b
 14686                           
 14687                           ; BSR set to: 1
 14688  00799C  0E01               	movlw	1
 14689  00799E  6F4C               	movwf	___altoft@sign& (0+255),b
 14690                           
 14691                           ; BSR set to: 1
 14692  0079A0  D006               	goto	l1320
 14693  0079A2                     
 14694                           ; BSR set to: 1
 14695                           
 14696                           ; BSR set to: 1
 14697  0079A2  90D8               	bcf	16344,0,c
 14698  0079A4  3346               	rrcf	(___altoft@c+3)& (0+255),f,b
 14699  0079A6  3345               	rrcf	(___altoft@c+2)& (0+255),f,b
 14700  0079A8  3344               	rrcf	(___altoft@c+1)& (0+255),f,b
 14701  0079AA  3343               	rrcf	___altoft@c& (0+255),f,b
 14702  0079AC  2B4B               	incf	___altoft@exp& (0+255),f,b
 14703  0079AE                     l1320:
 14704                           
 14705                           ; BSR set to: 1
 14706                           
 14707                           ; BSR set to: 1
 14708  0079AE  0E00               	movlw	0
 14709  0079B0  1543               	andwf	___altoft@c& (0+255),w,b
 14710  0079B2  6F47               	movwf	??___altoft& (0+255),b
 14711  0079B4  0E00               	movlw	0
 14712  0079B6  1544               	andwf	(___altoft@c+1)& (0+255),w,b
 14713  0079B8  6F48               	movwf	(??___altoft+1)& (0+255),b
 14714  0079BA  0E00               	movlw	0
 14715  0079BC  1545               	andwf	(___altoft@c+2)& (0+255),w,b
 14716  0079BE  6F49               	movwf	(??___altoft+2)& (0+255),b
 14717  0079C0  0EFF               	movlw	255
 14718  0079C2  1546               	andwf	(___altoft@c+3)& (0+255),w,b
 14719  0079C4  6F4A               	movwf	(??___altoft+3)& (0+255),b
 14720  0079C6  5147               	movf	??___altoft& (0+255),w,b
 14721  0079C8  1148               	iorwf	(??___altoft+1)& (0+255),w,b
 14722  0079CA  1149               	iorwf	(??___altoft+2)& (0+255),w,b
 14723  0079CC  114A               	iorwf	(??___altoft+3)& (0+255),w,b
 14724  0079CE  A4D8               	btfss	16344,2,c
 14725  0079D0  D7E8               	goto	l1321
 14726                           
 14727                           ; BSR set to: 1
 14728                           
 14729                           ; BSR set to: 1
 14730  0079D2  0060  F50C  F105   	movff	___altoft@c,___ftpack@arg
 14731  0079D8  0060  F510  F106   	movff	___altoft@c+1,___ftpack@arg+1
 14732  0079DE  0060  F514  F107   	movff	___altoft@c+2,___ftpack@arg+2
 14733  0079E4  0060  F52C  F108   	movff	___altoft@exp,___ftpack@exp
 14734  0079EA  0060  F530  F109   	movff	___altoft@sign,___ftpack@sign
 14735  0079F0  ECE0  F039         	call	___ftpack	;wreg free
 14736  0079F4  0060  F414  F143   	movff	?___ftpack,?___altoft
 14737  0079FA  0060  F418  F144   	movff	?___ftpack+1,?___altoft+1
 14738  007A00  0060  F41C  F145   	movff	?___ftpack+2,?___altoft+2
 14739  007A06  0012               	return	
 14740  007A08                     __end_of___altoft:
 14741                           	opt stack 0
 14742                           
 14743 ;; *************** function ___ftpack *****************
 14744 ;; Defined at:
 14745 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 14746 ;; Parameters:    Size  Location     Type
 14747 ;;  arg             3    5[BANK1 ] unsigned um
 14748 ;;  exp             1    8[BANK1 ] unsigned char 
 14749 ;;  sign            1    9[BANK1 ] unsigned char 
 14750 ;; Auto vars:     Size  Location     Type
 14751 ;;		None
 14752 ;; Return value:  Size  Location     Type
 14753 ;;                  3    5[BANK1 ] float 
 14754 ;; Registers used:
 14755 ;;		wreg, status,2, status,0
 14756 ;; Tracked objects:
 14757 ;;		On entry : 0/0
 14758 ;;		On exit  : 0/0
 14759 ;;		Unchanged: 0/0
 14760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14761 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14763 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14764 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14765 ;;Total ram usage:        8 bytes
 14766 ;; Hardware stack levels used:    1
 14767 ;; Hardware stack levels required when called:   10
 14768 ;; This function calls:
 14769 ;;		Nothing
 14770 ;; This function is called by:
 14771 ;;		___altoft
 14772 ;;		___awtoft
 14773 ;;		___ftadd
 14774 ;;		___ftdiv
 14775 ;;		___ftmul
 14776 ;;		___lltoft
 14777 ;; This function uses a non-reentrant model
 14778 ;;
 14779                           
 14780                           	psect	text34
 14781  0073C0                     __ptext34:
 14782                           	opt stack 0
 14783  0073C0                     ___ftpack:
 14784                           	opt stack 17
 14785                           
 14786                           ;incstack = 0
 14787  0073C0  0101               	movlb	1	; () banked
 14788  0073C2  5108               	movf	___ftpack@exp& (0+255),w,b
 14789  0073C4  B4D8               	btfsc	16344,2,c
 14790  0073C6  D005               	goto	u13810
 14791                           
 14792                           ; BSR set to: 1
 14793  0073C8  5105               	movf	___ftpack@arg& (0+255),w,b
 14794  0073CA  1106               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 14795  0073CC  1107               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 14796  0073CE  A4D8               	btfss	16344,2,c
 14797  0073D0  D00C               	goto	l1467
 14798  0073D2                     u13810:
 14799                           
 14800                           ; BSR set to: 1
 14801                           
 14802                           ; BSR set to: 1
 14803  0073D2  0E00               	movlw	0
 14804  0073D4  6F05               	movwf	?___ftpack& (0+255),b
 14805  0073D6  0E00               	movlw	0
 14806  0073D8  6F06               	movwf	(?___ftpack+1)& (0+255),b
 14807  0073DA  0E00               	movlw	0
 14808  0073DC  6F07               	movwf	(?___ftpack+2)& (0+255),b
 14809                           
 14810                           ; BSR set to: 1
 14811  0073DE  0012               	return	
 14812  0073E0                     
 14813                           ; BSR set to: 1
 14814                           
 14815                           ; BSR set to: 1
 14816  0073E0  2B08               	incf	___ftpack@exp& (0+255),f,b
 14817  0073E2  90D8               	bcf	16344,0,c
 14818  0073E4  3307               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14819  0073E6  3306               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14820  0073E8  3305               	rrcf	___ftpack@arg& (0+255),f,b
 14821  0073EA                     l1467:
 14822                           
 14823                           ; BSR set to: 1
 14824                           
 14825                           ; BSR set to: 1
 14826  0073EA  0E00               	movlw	0
 14827  0073EC  1505               	andwf	___ftpack@arg& (0+255),w,b
 14828  0073EE  6F0A               	movwf	??___ftpack& (0+255),b
 14829  0073F0  0E00               	movlw	0
 14830  0073F2  1506               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14831  0073F4  6F0B               	movwf	(??___ftpack+1)& (0+255),b
 14832  0073F6  0EFE               	movlw	254
 14833  0073F8  1507               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14834  0073FA  6F0C               	movwf	(??___ftpack+2)& (0+255),b
 14835  0073FC  510A               	movf	??___ftpack& (0+255),w,b
 14836  0073FE  110B               	iorwf	(??___ftpack+1)& (0+255),w,b
 14837  007400  110C               	iorwf	(??___ftpack+2)& (0+255),w,b
 14838  007402  B4D8               	btfsc	16344,2,c
 14839  007404  D00C               	goto	l1470
 14840  007406  D7EC               	goto	l1468
 14841  007408                     
 14842                           ; BSR set to: 1
 14843                           
 14844                           ; BSR set to: 1
 14845  007408  2B08               	incf	___ftpack@exp& (0+255),f,b
 14846                           
 14847                           ; BSR set to: 1
 14848  00740A  0E01               	movlw	1
 14849  00740C  2705               	addwf	___ftpack@arg& (0+255),f,b
 14850  00740E  0E00               	movlw	0
 14851  007410  2306               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 14852  007412  0E00               	movlw	0
 14853  007414  2307               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 14854  007416  90D8               	bcf	16344,0,c
 14855  007418  3307               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14856  00741A  3306               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14857  00741C  3305               	rrcf	___ftpack@arg& (0+255),f,b
 14858  00741E                     l1470:
 14859                           
 14860                           ; BSR set to: 1
 14861                           
 14862                           ; BSR set to: 1
 14863  00741E  0E00               	movlw	0
 14864  007420  1505               	andwf	___ftpack@arg& (0+255),w,b
 14865  007422  6F0A               	movwf	??___ftpack& (0+255),b
 14866  007424  0E00               	movlw	0
 14867  007426  1506               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14868  007428  6F0B               	movwf	(??___ftpack+1)& (0+255),b
 14869  00742A  0EFF               	movlw	255
 14870  00742C  1507               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14871  00742E  6F0C               	movwf	(??___ftpack+2)& (0+255),b
 14872  007430  510A               	movf	??___ftpack& (0+255),w,b
 14873  007432  110B               	iorwf	(??___ftpack+1)& (0+255),w,b
 14874  007434  110C               	iorwf	(??___ftpack+2)& (0+255),w,b
 14875  007436  B4D8               	btfsc	16344,2,c
 14876  007438  D006               	goto	l1473
 14877  00743A  D7E6               	goto	l1471
 14878  00743C                     
 14879                           ; BSR set to: 1
 14880                           
 14881                           ; BSR set to: 1
 14882  00743C  0708               	decf	___ftpack@exp& (0+255),f,b
 14883  00743E  90D8               	bcf	16344,0,c
 14884  007440  3705               	rlcf	___ftpack@arg& (0+255),f,b
 14885  007442  3706               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 14886  007444  3707               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 14887  007446                     l1473:
 14888                           
 14889                           ; BSR set to: 1
 14890                           
 14891                           ; BSR set to: 1
 14892  007446  BF06               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 14893  007448  D003               	goto	u13850
 14894                           
 14895                           ; BSR set to: 1
 14896  00744A  0E02               	movlw	2
 14897  00744C  6108               	cpfslt	___ftpack@exp& (0+255),b
 14898  00744E  D7F6               	goto	l1474
 14899  007450                     u13850:
 14900                           
 14901                           ; BSR set to: 1
 14902                           
 14903                           ; BSR set to: 1
 14904  007450  A108               	btfss	___ftpack@exp& (0+255),0,b
 14905                           
 14906                           ; BSR set to: 1
 14907  007452  9F06               	bcf	(___ftpack@arg+1)& (0+255),7,b
 14908                           
 14909                           ; BSR set to: 1
 14910                           
 14911                           ; BSR set to: 1
 14912  007454  90D8               	bcf	16344,0,c
 14913  007456  3308               	rrcf	___ftpack@exp& (0+255),f,b
 14914  007458  5108               	movf	___ftpack@exp& (0+255),w,b
 14915  00745A  1307               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 14916                           
 14917                           ; BSR set to: 1
 14918  00745C  5109               	movf	___ftpack@sign& (0+255),w,b
 14919  00745E  A4D8               	btfss	16344,2,c
 14920                           
 14921                           ; BSR set to: 1
 14922  007460  8F07               	bsf	(___ftpack@arg+2)& (0+255),7,b
 14923                           
 14924                           ; BSR set to: 1
 14925                           
 14926                           ; BSR set to: 1
 14927  007462  0060  F414  F105   	movff	___ftpack@arg,?___ftpack
 14928  007468  0060  F418  F106   	movff	___ftpack@arg+1,?___ftpack+1
 14929  00746E  0060  F41C  F107   	movff	___ftpack@arg+2,?___ftpack+2
 14930  007474  0012               	return	
 14931  007476                     __end_of___ftpack:
 14932                           	opt stack 0
 14933                           
 14934 ;; *************** function _Buffer_Escrita_USB_Add_String *****************
 14935 ;; Defined at:
 14936 ;;		line 184 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 14937 ;; Parameters:    Size  Location     Type
 14938 ;;  dado            2    7[BANK1 ] PTR unsigned char 
 14939 ;;		 -> Verifica_Analogica@valoradstr(10), STR_98(2), STR_85(17), STR_71(20), 
 14940 ;;		 -> STR_70(5), STR_69(11), MACAddress(18), STR_44(25), 
 14941 ;;		 -> STR_43(27), STR_25(10), STR_18(24), main@motivo(20), 
 14942 ;;  aguarda         2    9[BANK1 ] short 
 14943 ;; Auto vars:     Size  Location     Type
 14944 ;;  i               2   13[BANK1 ] int 
 14945 ;; Return value:  Size  Location     Type
 14946 ;;                  2    7[BANK1 ] short 
 14947 ;; Registers used:
 14948 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14949 ;; Tracked objects:
 14950 ;;		On entry : 0/0
 14951 ;;		On exit  : 0/0
 14952 ;;		Unchanged: 0/0
 14953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14954 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14955 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14956 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14957 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14958 ;;Total ram usage:        8 bytes
 14959 ;; Hardware stack levels used:    1
 14960 ;; Hardware stack levels required when called:   11
 14961 ;; This function calls:
 14962 ;;		_Buffer_Escrita_USB_Add_Char
 14963 ;;		_TransmiteBuffer_USB
 14964 ;; This function is called by:
 14965 ;;		_main
 14966 ;;		_inicia_Post
 14967 ;;		_Verifica_Analogica
 14968 ;;		_Envia_Post_Content
 14969 ;; This function uses a non-reentrant model
 14970 ;;
 14971                           
 14972                           	psect	text35
 14973  006F3A                     __ptext35:
 14974                           	opt stack 0
 14975  006F3A                     _Buffer_Escrita_USB_Add_String:
 14976                           	opt stack 18
 14977                           
 14978                           ;Serial.c: 185: int i = 0;
 14979                           
 14980                           ; BSR set to: 1
 14981                           ;incstack = 0
 14982  006F3A  0E00               	movlw	0
 14983  006F3C  0101               	movlb	1	; () banked
 14984  006F3E  6F0E               	movwf	(Buffer_Escrita_USB_Add_String@i+1)& (0+255),b
 14985  006F40  0E00               	movlw	0
 14986  006F42  6F0D               	movwf	Buffer_Escrita_USB_Add_String@i& (0+255),b
 14987                           
 14988                           ;Serial.c: 186: ponteiro_USB = 0;
 14989  006F44  0E00               	movlw	0
 14990  006F46  6FE2               	movwf	(_ponteiro_USB+1)& (0+255),b
 14991  006F48  0E00               	movlw	0
 14992  006F4A  6FE1               	movwf	_ponteiro_USB& (0+255),b
 14993                           
 14994                           ;Serial.c: 187: ponteiro_escrita_USB = 0;
 14995  006F4C  0E00               	movlw	0
 14996  006F4E  6FE6               	movwf	(_ponteiro_escrita_USB+1)& (0+255),b
 14997  006F50  0E00               	movlw	0
 14998  006F52  6FE5               	movwf	_ponteiro_escrita_USB& (0+255),b
 14999                           
 15000                           ;Serial.c: 188: buffer_escrita_USB[0] = 0x00;
 15001  006F54  0E00               	movlw	0
 15002  006F56  0107               	movlb	7	; () banked
 15003  006F58  6F00               	movwf	_buffer_escrita_USB& (0+255),b
 15004                           
 15005                           ;Serial.c: 190: while (dado[i] != 0x00) {
 15006  006F5A  D029               	goto	l285
 15007  006F5C                     
 15008                           ;Serial.c: 191: if (i >= 150) return;
 15009                           
 15010                           ; BSR set to: 7
 15011  006F5C  0101               	movlb	1	; () banked
 15012  006F5E  BF0E               	btfsc	(Buffer_Escrita_USB_Add_String@i+1)& (0+255),7,b
 15013  006F60  D006               	goto	l287
 15014  006F62  510E               	movf	(Buffer_Escrita_USB_Add_String@i+1)& (0+255),w,b
 15015  006F64  E150               	bnz	l288
 15016  006F66  0E96               	movlw	150
 15017  006F68  5D0D               	subwf	Buffer_Escrita_USB_Add_String@i& (0+255),w,b
 15018  006F6A  B0D8               	btfsc	16344,0,c
 15019  006F6C  0012               	return	
 15020  006F6E                     l287:
 15021                           
 15022                           ; BSR set to: 1
 15023                           ;Serial.c: 192: Buffer_Escrita_USB_Add_Char(dado[i]);
 15024                           
 15025                           ; BSR set to: 1
 15026  006F6E  510D               	movf	Buffer_Escrita_USB_Add_String@i& (0+255),w,b
 15027  006F70  2507               	addwf	Buffer_Escrita_USB_Add_String@dado& (0+255),w,b
 15028  006F72  6F0B               	movwf	??_Buffer_Escrita_USB_Add_String& (0+255),b
 15029  006F74  510E               	movf	(Buffer_Escrita_USB_Add_String@i+1)& (0+255),w,b
 15030  006F76  2108               	addwfc	(Buffer_Escrita_USB_Add_String@dado+1)& (0+255),w,b
 15031  006F78  6F0C               	movwf	(??_Buffer_Escrita_USB_Add_String+1)& (0+255),b
 15032  006F7A  0060  F42F  FFF6   	movff	??_Buffer_Escrita_USB_Add_String,16374
 15033  006F80  0060  F433  FFF7   	movff	??_Buffer_Escrita_USB_Add_String+1,16375
 15034  006F86  0E00               	movlw	low (__mediumconst shr (0+16))
 15035  006F88  6EF8               	movwf	16376,c
 15036  006F8A  0E0F               	movlw	(high __ramtop+-1)
 15037  006F8C  64F7               	cpfsgt	16375,c
 15038  006F8E  D003               	bra	u18757
 15039  006F90  0008               	tblrd		*
 15040  006F92  50F5               	movf	16373,w,c
 15041  006F94  D007               	bra	u18750
 15042  006F96                     u18757:
 15043  006F96  006F FFDB FFE9     	movff	16374,16361
 15044  006F9C  006F FFDF FFEA     	movff	16375,16362
 15045  006FA2  50EF               	movf	16367,w,c
 15046  006FA4                     u18750:
 15047  006FA4  EC43  F044         	call	_Buffer_Escrita_USB_Add_Char
 15048                           
 15049                           ;Serial.c: 193: i++;
 15050  006FA8  0101               	movlb	1	; () banked
 15051  006FAA  4B0D               	infsnz	Buffer_Escrita_USB_Add_String@i& (0+255),f,b
 15052  006FAC  2B0E               	incf	(Buffer_Escrita_USB_Add_String@i+1)& (0+255),f,b
 15053  006FAE                     l285:
 15054                           
 15055                           ; BSR set to: 1
 15056  006FAE  0101               	movlb	1	; () banked
 15057  006FB0  510D               	movf	Buffer_Escrita_USB_Add_String@i& (0+255),w,b
 15058  006FB2  2507               	addwf	Buffer_Escrita_USB_Add_String@dado& (0+255),w,b
 15059  006FB4  6F0B               	movwf	??_Buffer_Escrita_USB_Add_String& (0+255),b
 15060  006FB6  510E               	movf	(Buffer_Escrita_USB_Add_String@i+1)& (0+255),w,b
 15061  006FB8  2108               	addwfc	(Buffer_Escrita_USB_Add_String@dado+1)& (0+255),w,b
 15062  006FBA  6F0C               	movwf	(??_Buffer_Escrita_USB_Add_String+1)& (0+255),b
 15063  006FBC  0060  F42F  FFF6   	movff	??_Buffer_Escrita_USB_Add_String,16374
 15064  006FC2  0060  F433  FFF7   	movff	??_Buffer_Escrita_USB_Add_String+1,16375
 15065  006FC8  0E00               	movlw	low (__mediumconst shr (0+16))
 15066  006FCA  6EF8               	movwf	16376,c
 15067  006FCC  0E0F               	movlw	(high __ramtop+-1)
 15068  006FCE  64F7               	cpfsgt	16375,c
 15069  006FD0  D003               	bra	u18767
 15070  006FD2  0008               	tblrd		*
 15071  006FD4  50F5               	movf	16373,w,c
 15072  006FD6  D007               	bra	u18760
 15073  006FD8                     u18767:
 15074  006FD8  006F FFDB FFE9     	movff	16374,16361
 15075  006FDE  006F FFDF FFEA     	movff	16375,16362
 15076  006FE4  50EF               	movf	16367,w,c
 15077  006FE6                     u18760:
 15078  006FE6  0900               	iorlw	0
 15079  006FE8  A4D8               	btfss	16344,2,c
 15080  006FEA  D7B8               	goto	l286
 15081                           
 15082                           ;Serial.c: 194: }
 15083                           ;Serial.c: 195: if (aguarda){
 15084  006FEC  0101               	movlb	1	; () banked
 15085  006FEE  5109               	movf	Buffer_Escrita_USB_Add_String@aguarda& (0+255),w,b
 15086  006FF0  110A               	iorwf	(Buffer_Escrita_USB_Add_String@aguarda+1)& (0+255),w,b
 15087  006FF2  B4D8               	btfsc	16344,2,c
 15088  006FF4  0012               	return	
 15089  006FF6                     u18780:
 15090                           
 15091                           ; BSR set to: 1
 15092                           
 15093                           ; BSR set to: 1
 15094                           
 15095                           ; BSR set to: 1
 15096                           
 15097                           ; BSR set to: 1
 15098                           ;Serial.c: 196: while (TransmiteBuffer_USB() == 0);
 15099  006FF6  EC65  F041         	call	_TransmiteBuffer_USB	;wreg free
 15100  006FFA  0101               	movlb	1	; () banked
 15101  006FFC  5105               	movf	?_TransmiteBuffer_USB& (0+255),w,b
 15102  006FFE  1106               	iorwf	(?_TransmiteBuffer_USB+1)& (0+255),w,b
 15103  007000  A4D8               	btfss	16344,2,c
 15104  007002  0012               	return	
 15105  007004  D7F8               	goto	u18780
 15106  007006                     l288:
 15107                           
 15108                           ; BSR set to: 1
 15109  007006  0012               	return		;funcret
 15110  007008                     __end_of_Buffer_Escrita_USB_Add_String:
 15111                           	opt stack 0
 15112                           
 15113 ;; *************** function _TransmiteBuffer_USB *****************
 15114 ;; Defined at:
 15115 ;;		line 154 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 15116 ;; Parameters:    Size  Location     Type
 15117 ;;		None
 15118 ;; Auto vars:     Size  Location     Type
 15119 ;;		None
 15120 ;; Return value:  Size  Location     Type
 15121 ;;                  2    5[BANK1 ] int 
 15122 ;; Registers used:
 15123 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15124 ;; Tracked objects:
 15125 ;;		On entry : 0/0
 15126 ;;		On exit  : 0/0
 15127 ;;		Unchanged: 0/0
 15128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15129 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15132 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15133 ;;Total ram usage:        2 bytes
 15134 ;; Hardware stack levels used:    1
 15135 ;; Hardware stack levels required when called:   10
 15136 ;; This function calls:
 15137 ;;		Nothing
 15138 ;; This function is called by:
 15139 ;;		_main
 15140 ;;		_Buffer_Escrita_USB_Add_String
 15141 ;; This function uses a non-reentrant model
 15142 ;;
 15143                           
 15144                           	psect	text36
 15145  0082CA                     __ptext36:
 15146                           	opt stack 0
 15147  0082CA                     _TransmiteBuffer_USB:
 15148                           	opt stack 18
 15149                           
 15150                           ;Serial.c: 155: if (U1ERRIRbits.TXMTIF == 0) return 0;
 15151                           
 15152                           ; BSR set to: 1
 15153                           ;incstack = 0
 15154  0082CA  013D               	movlb	61	; () banked
 15155  0082CC  BFF9               	btfsc	249,7,b	;volatile
 15156  0082CE  D006               	goto	l270
 15157                           
 15158                           ; BSR set to: 61
 15159  0082D0  0E00               	movlw	0
 15160  0082D2  0101               	movlb	1	; () banked
 15161  0082D4  6F06               	movwf	(?_TransmiteBuffer_USB+1)& (0+255),b
 15162  0082D6  0E00               	movlw	0
 15163  0082D8  6F05               	movwf	?_TransmiteBuffer_USB& (0+255),b
 15164                           
 15165                           ; BSR set to: 1
 15166  0082DA  0012               	return	
 15167  0082DC                     l270:
 15168                           
 15169                           ;Serial.c: 156: if (ponteiro_escrita_USB < ponteiro_USB) {
 15170                           
 15171                           ; BSR set to: 1
 15172  0082DC  0101               	movlb	1	; () banked
 15173  0082DE  51E1               	movf	_ponteiro_USB& (0+255),w,b
 15174  0082E0  5DE5               	subwf	_ponteiro_escrita_USB& (0+255),w,b
 15175  0082E2  51E2               	movf	(_ponteiro_USB+1)& (0+255),w,b
 15176  0082E4  59E6               	subwfb	(_ponteiro_escrita_USB+1)& (0+255),w,b
 15177  0082E6  B0D8               	btfsc	16344,0,c
 15178  0082E8  D011               	goto	l272
 15179                           
 15180                           ; BSR set to: 1
 15181                           ;Serial.c: 157: U1TXB = buffer_escrita_USB[ponteiro_escrita_USB];
 15182  0082EA  0E00               	movlw	low _buffer_escrita_USB
 15183  0082EC  25E5               	addwf	_ponteiro_escrita_USB& (0+255),w,b
 15184  0082EE  6ED9               	movwf	16345,c
 15185  0082F0  0E07               	movlw	high _buffer_escrita_USB
 15186  0082F2  21E6               	addwfc	(_ponteiro_escrita_USB+1)& (0+255),w,b
 15187  0082F4  6EDA               	movwf	16346,c
 15188  0082F6  50DF               	movf	16351,w,c
 15189  0082F8  013D               	movlb	61	; () banked
 15190  0082FA  6FEA               	movwf	234,b	;volatile
 15191                           
 15192                           ; BSR set to: 61
 15193                           ;Serial.c: 158: ponteiro_escrita_USB++;
 15194  0082FC  0101               	movlb	1	; () banked
 15195  0082FE  4BE5               	infsnz	_ponteiro_escrita_USB& (0+255),f,b
 15196  008300  2BE6               	incf	(_ponteiro_escrita_USB+1)& (0+255),f,b
 15197                           
 15198                           ; BSR set to: 1
 15199                           ;Serial.c: 159: return 0;
 15200  008302  0E00               	movlw	0
 15201  008304  6F06               	movwf	(?_TransmiteBuffer_USB+1)& (0+255),b
 15202  008306  0E00               	movlw	0
 15203  008308  6F05               	movwf	?_TransmiteBuffer_USB& (0+255),b
 15204                           
 15205                           ; BSR set to: 1
 15206                           ;Serial.c: 160: } else {
 15207                           
 15208                           ; BSR set to: 1
 15209  00830A  0012               	return	
 15210  00830C                     l272:
 15211                           
 15212                           ; BSR set to: 1
 15213                           ;Serial.c: 161: ponteiro_USB = 0;
 15214                           
 15215                           ; BSR set to: 1
 15216  00830C  0E00               	movlw	0
 15217  00830E  6FE2               	movwf	(_ponteiro_USB+1)& (0+255),b
 15218  008310  0E00               	movlw	0
 15219  008312  6FE1               	movwf	_ponteiro_USB& (0+255),b
 15220                           
 15221                           ;Serial.c: 162: ponteiro_escrita_USB = 0;
 15222  008314  0E00               	movlw	0
 15223  008316  6FE6               	movwf	(_ponteiro_escrita_USB+1)& (0+255),b
 15224  008318  0E00               	movlw	0
 15225  00831A  6FE5               	movwf	_ponteiro_escrita_USB& (0+255),b
 15226                           
 15227                           ;Serial.c: 163: return 1;
 15228  00831C  0E00               	movlw	0
 15229  00831E  6F06               	movwf	(?_TransmiteBuffer_USB+1)& (0+255),b
 15230  008320  0E01               	movlw	1
 15231  008322  6F05               	movwf	?_TransmiteBuffer_USB& (0+255),b
 15232                           
 15233                           ; BSR set to: 1
 15234  008324  0012               	return	
 15235  008326                     __end_of_TransmiteBuffer_USB:
 15236                           	opt stack 0
 15237                           
 15238 ;; *************** function _Buffer_Escrita_USB_Add_Char *****************
 15239 ;; Defined at:
 15240 ;;		line 200 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 15241 ;; Parameters:    Size  Location     Type
 15242 ;;  dado            1    wreg     unsigned char 
 15243 ;; Auto vars:     Size  Location     Type
 15244 ;;  dado            1    5[BANK1 ] unsigned char 
 15245 ;; Return value:  Size  Location     Type
 15246 ;;                  2   14[None  ] short 
 15247 ;; Registers used:
 15248 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15249 ;; Tracked objects:
 15250 ;;		On entry : 0/0
 15251 ;;		On exit  : 0/0
 15252 ;;		Unchanged: 0/0
 15253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15255 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15257 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15258 ;;Total ram usage:        1 bytes
 15259 ;; Hardware stack levels used:    1
 15260 ;; Hardware stack levels required when called:   10
 15261 ;; This function calls:
 15262 ;;		Nothing
 15263 ;; This function is called by:
 15264 ;;		_Buffer_Escrita_USB_Add_String
 15265 ;; This function uses a non-reentrant model
 15266 ;;
 15267                           
 15268                           	psect	text37
 15269  008886                     __ptext37:
 15270                           	opt stack 0
 15271  008886                     _Buffer_Escrita_USB_Add_Char:
 15272                           	opt stack 18
 15273                           
 15274                           ; BSR set to: 1
 15275                           ;incstack = 0
 15276                           ;Buffer_Escrita_USB_Add_Char@dado stored from wreg
 15277  008886  0101               	movlb	1	; () banked
 15278  008888  6F05               	movwf	Buffer_Escrita_USB_Add_Char@dado& (0+255),b
 15279                           
 15280                           ;Serial.c: 201: buffer_escrita_USB[ponteiro_USB] = dado;
 15281  00888A  0E00               	movlw	low _buffer_escrita_USB
 15282  00888C  0101               	movlb	1	; () banked
 15283  00888E  25E1               	addwf	_ponteiro_USB& (0+255),w,b
 15284  008890  6ED9               	movwf	16345,c
 15285  008892  0E07               	movlw	high _buffer_escrita_USB
 15286  008894  21E2               	addwfc	(_ponteiro_USB+1)& (0+255),w,b
 15287  008896  6EDA               	movwf	16346,c
 15288  008898  0060  F417  FFDF   	movff	Buffer_Escrita_USB_Add_Char@dado,16351
 15289                           
 15290                           ; BSR set to: 1
 15291                           ;Serial.c: 207: if (ponteiro_USB >= 150) ponteiro_USB = 0;
 15292  00889E  51E2               	movf	(_ponteiro_USB+1)& (0+255),w,b
 15293  0088A0  E104               	bnz	u18600
 15294  0088A2  0E96               	movlw	150
 15295  0088A4  5DE1               	subwf	_ponteiro_USB& (0+255),w,b
 15296  0088A6  A0D8               	btfss	16344,0,c
 15297  0088A8  D005               	goto	l296
 15298  0088AA                     u18600:
 15299                           
 15300                           ; BSR set to: 1
 15301  0088AA  0E00               	movlw	0
 15302  0088AC  6FE2               	movwf	(_ponteiro_USB+1)& (0+255),b
 15303  0088AE  0E00               	movlw	0
 15304  0088B0  6FE1               	movwf	_ponteiro_USB& (0+255),b
 15305  0088B2  0012               	return	
 15306  0088B4                     l296:
 15307                           
 15308                           ; BSR set to: 1
 15309                           ;Serial.c: 208: else ponteiro_USB++;
 15310                           
 15311                           ; BSR set to: 1
 15312  0088B4  4BE1               	infsnz	_ponteiro_USB& (0+255),f,b
 15313  0088B6  2BE2               	incf	(_ponteiro_USB+1)& (0+255),f,b
 15314  0088B8  0012               	return	
 15315  0088BA                     __end_of_Buffer_Escrita_USB_Add_Char:
 15316                           	opt stack 0
 15317                           
 15318 ;; *************** function _InicializaWifi *****************
 15319 ;; Defined at:
 15320 ;;		line 18 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
 15321 ;; Parameters:    Size  Location     Type
 15322 ;;		None
 15323 ;; Auto vars:     Size  Location     Type
 15324 ;;		None
 15325 ;; Return value:  Size  Location     Type
 15326 ;;                  1    wreg      void 
 15327 ;; Registers used:
 15328 ;;		wreg
 15329 ;; Tracked objects:
 15330 ;;		On entry : 0/0
 15331 ;;		On exit  : 0/0
 15332 ;;		Unchanged: 0/0
 15333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15336 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15337 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15338 ;;Total ram usage:        1 bytes
 15339 ;; Hardware stack levels used:    1
 15340 ;; Hardware stack levels required when called:   10
 15341 ;; This function calls:
 15342 ;;		Nothing
 15343 ;; This function is called by:
 15344 ;;		_main
 15345 ;; This function uses a non-reentrant model
 15346 ;;
 15347                           
 15348                           	psect	text38
 15349  0088BA                     __ptext38:
 15350                           	opt stack 0
 15351  0088BA                     _InicializaWifi:
 15352                           	opt stack 20
 15353                           
 15354                           ;Wifi.c: 19: TRISEbits.TRISE1 = 1;
 15355                           
 15356                           ; BSR set to: 1
 15357                           ;incstack = 0
 15358  0088BA  013F               	movlb	63	; () banked
 15359  0088BC  83C6               	bsf	198,1,b	;volatile
 15360                           
 15361                           ;Wifi.c: 20: TRISEbits.TRISE0 = 0;
 15362  0088BE  91C6               	bcf	198,0,b	;volatile
 15363                           
 15364                           ;Wifi.c: 21: TRISAbits.TRISA4 = 1;
 15365  0088C0  89C2               	bsf	194,4,b	;volatile
 15366                           
 15367                           ;Wifi.c: 22: TRISEbits.TRISE2 = 0;
 15368  0088C2  95C6               	bcf	198,2,b	;volatile
 15369                           
 15370                           ;Wifi.c: 24: ANSELEbits.ANSELE1 = 0;
 15371  0088C4  013A               	movlb	58	; () banked
 15372  0088C6  9380               	bcf	128,1,b	;volatile
 15373                           
 15374                           ;Wifi.c: 25: ANSELAbits.ANSELA4 = 0;
 15375  0088C8  9940               	bcf	64,4,b	;volatile
 15376                           
 15377                           ;Wifi.c: 27: LATEbits.LATE2 = 1;
 15378  0088CA  013F               	movlb	63	; () banked
 15379  0088CC  85BE               	bsf	190,2,b	;volatile
 15380                           
 15381                           ;Wifi.c: 28: LATEbits.LATE0 = 1;
 15382  0088CE  81BE               	bsf	190,0,b	;volatile
 15383                           
 15384                           ;Wifi.c: 30: TRISAbits.TRISA5 = 0;
 15385  0088D0  9BC2               	bcf	194,5,b	;volatile
 15386                           
 15387                           ;Wifi.c: 31: LATAbits.LATA5 = 0;
 15388  0088D2  9BBA               	bcf	186,5,b	;volatile
 15389                           
 15390                           ; BSR set to: 63
 15391                           ;Wifi.c: 32: _delay((unsigned long)((10)*(40000000/4000.0)));
 15392  0088D4  0E82               	movlw	130
 15393  0088D6  0101               	movlb	1	; () banked
 15394  0088D8  6F05               	movwf	??_InicializaWifi& (0+255),b
 15395  0088DA  0EDD               	movlw	221
 15396  0088DC                     u19607:
 15397  0088DC  2EE8               	decfsz	16360,f,c
 15398  0088DE  D7FE               	bra	u19607
 15399  0088E0  2F05               	decfsz	??_InicializaWifi& (0+255),f,b
 15400  0088E2  D7FC               	bra	u19607
 15401  0088E4  D000               	nop2	
 15402                           
 15403                           ;Wifi.c: 33: LATAbits.LATA5 = 1;
 15404  0088E6  013F               	movlb	63	; () banked
 15405  0088E8  8BBA               	bsf	186,5,b	;volatile
 15406                           
 15407                           ; BSR set to: 63
 15408  0088EA  0012               	return		;funcret
 15409  0088EC                     __end_of_InicializaWifi:
 15410                           	opt stack 0
 15411                           
 15412 ;; *************** function _Abre_Porta_COMM *****************
 15413 ;; Defined at:
 15414 ;;		line 84 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 15415 ;; Parameters:    Size  Location     Type
 15416 ;;  BaudRate        4   27[BANK1 ] long 
 15417 ;; Auto vars:     Size  Location     Type
 15418 ;;  baud            4   31[BANK1 ] long 
 15419 ;; Return value:  Size  Location     Type
 15420 ;;                  1    wreg      void 
 15421 ;; Registers used:
 15422 ;;		wreg, status,2, status,0, cstack
 15423 ;; Tracked objects:
 15424 ;;		On entry : 0/0
 15425 ;;		On exit  : 0/0
 15426 ;;		Unchanged: 0/0
 15427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15428 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15429 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15431 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15432 ;;Total ram usage:        8 bytes
 15433 ;; Hardware stack levels used:    1
 15434 ;; Hardware stack levels required when called:   12
 15435 ;; This function calls:
 15436 ;;		_Calcula_BaudRate
 15437 ;;		___aldiv
 15438 ;;		_lock_PPS
 15439 ;;		_unLock_PPS
 15440 ;; This function is called by:
 15441 ;;		_main
 15442 ;; This function uses a non-reentrant model
 15443 ;;
 15444                           
 15445                           	psect	text39
 15446  0075DA                     __ptext39:
 15447                           	opt stack 0
 15448  0075DA                     _Abre_Porta_COMM:
 15449                           	opt stack 18
 15450                           
 15451                           ;Serial.c: 85: long baud = Calcula_BaudRate(BaudRate);
 15452                           
 15453                           ; BSR set to: 63
 15454                           ;incstack = 0
 15455  0075DA  0060  F46C  F113   	movff	Abre_Porta_COMM@BaudRate,Calcula_BaudRate@BaudRate
 15456  0075E0  0060  F470  F114   	movff	Abre_Porta_COMM@BaudRate+1,Calcula_BaudRate@BaudRate+1
 15457  0075E6  0060  F474  F115   	movff	Abre_Porta_COMM@BaudRate+2,Calcula_BaudRate@BaudRate+2
 15458  0075EC  0060  F478  F116   	movff	Abre_Porta_COMM@BaudRate+3,Calcula_BaudRate@BaudRate+3
 15459  0075F2  EC84  F039         	call	_Calcula_BaudRate	;wreg free
 15460  0075F6  0060  F44C  F11F   	movff	?_Calcula_BaudRate,Abre_Porta_COMM@baud
 15461  0075FC  0060  F450  F120   	movff	?_Calcula_BaudRate+1,Abre_Porta_COMM@baud+1
 15462  007602  0060  F454  F121   	movff	?_Calcula_BaudRate+2,Abre_Porta_COMM@baud+2
 15463  007608  0060  F458  F122   	movff	?_Calcula_BaudRate+3,Abre_Porta_COMM@baud+3
 15464                           
 15465                           ;Serial.c: 87: TRISBbits.TRISB2 = 0;
 15466  00760E  013F               	movlb	63	; () banked
 15467  007610  95C3               	bcf	195,2,b	;volatile
 15468                           
 15469                           ; BSR set to: 63
 15470                           ;Serial.c: 88: TRISBbits.TRISB3 = 1;
 15471  007612  87C3               	bsf	195,3,b	;volatile
 15472                           
 15473                           ;Serial.c: 90: U2BRGH = (unsigned char) ((baud & 0xFF00) / 0x100);
 15474  007614  0E00               	movlw	0
 15475  007616  0101               	movlb	1	; () banked
 15476  007618  151F               	andwf	Abre_Porta_COMM@baud& (0+255),w,b
 15477  00761A  6F05               	movwf	___aldiv@dividend& (0+255),b
 15478  00761C  0EFF               	movlw	255
 15479  00761E  1520               	andwf	(Abre_Porta_COMM@baud+1)& (0+255),w,b
 15480  007620  6F06               	movwf	(___aldiv@dividend+1)& (0+255),b
 15481  007622  0E00               	movlw	0
 15482  007624  1521               	andwf	(Abre_Porta_COMM@baud+2)& (0+255),w,b
 15483  007626  6F07               	movwf	(___aldiv@dividend+2)& (0+255),b
 15484  007628  0E00               	movlw	0
 15485  00762A  1522               	andwf	(Abre_Porta_COMM@baud+3)& (0+255),w,b
 15486  00762C  6F08               	movwf	(___aldiv@dividend+3)& (0+255),b
 15487  00762E  0E00               	movlw	0
 15488  007630  6F09               	movwf	___aldiv@divisor& (0+255),b
 15489  007632  0E01               	movlw	1
 15490  007634  6F0A               	movwf	(___aldiv@divisor+1)& (0+255),b
 15491  007636  0E00               	movlw	0
 15492  007638  6F0B               	movwf	(___aldiv@divisor+2)& (0+255),b
 15493  00763A  0E00               	movlw	0
 15494  00763C  6F0C               	movwf	(___aldiv@divisor+3)& (0+255),b
 15495  00763E  ECCB  F036         	call	___aldiv	;wreg free
 15496  007642  0101               	movlb	1	; () banked
 15497  007644  5105               	movf	?___aldiv& (0+255),w,b
 15498  007646  013D               	movlb	61	; () banked
 15499  007648  6FDE               	movwf	222,b	;volatile
 15500                           
 15501                           ; BSR set to: 61
 15502                           ;Serial.c: 91: U2BRGL = (unsigned char) (baud & 0x00FF);
 15503  00764A  0060  F47F  FDDD   	movff	Abre_Porta_COMM@baud,15837	;volatile
 15504                           
 15505                           ; BSR set to: 61
 15506                           ;Serial.c: 92: U2CON0bits.TXEN = 1;
 15507  007650  8BDA               	bsf	218,5,b	;volatile
 15508                           
 15509                           ; BSR set to: 61
 15510                           ;Serial.c: 93: U2CON0bits.BRGS = 1;
 15511  007652  8FDA               	bsf	218,7,b	;volatile
 15512                           
 15513                           ; BSR set to: 61
 15514                           ;Serial.c: 95: U2CON0bits.RXEN = 1;
 15515  007654  89DA               	bsf	218,4,b	;volatile
 15516                           
 15517                           ; BSR set to: 61
 15518                           ;Serial.c: 96: U2CON0bits.BRGS = 1;
 15519  007656  8FDA               	bsf	218,7,b	;volatile
 15520                           
 15521                           ; BSR set to: 61
 15522                           ;Serial.c: 97: PIE6bits.U2IE = 1;
 15523  007658  0139               	movlb	57	; () banked
 15524  00765A  8B96               	bsf	150,5,b	;volatile
 15525                           
 15526                           ; BSR set to: 57
 15527                           ;Serial.c: 98: PIE6bits.U2RXIE = 1;
 15528  00765C  8596               	bsf	150,2,b	;volatile
 15529                           
 15530                           ; BSR set to: 57
 15531                           ;Serial.c: 100: U2CON0bits.U2MODE = 0;
 15532  00765E  013D               	movlb	61	; () banked
 15533  007660  91DA               	bcf	218,0,b	;volatile
 15534  007662  93DA               	bcf	218,1,b	;volatile
 15535  007664  95DA               	bcf	218,2,b	;volatile
 15536  007666  97DA               	bcf	218,3,b	;volatile
 15537                           
 15538                           ; BSR set to: 61
 15539                           ;Serial.c: 102: unLock_PPS();
 15540  007668  EC3A  F045         	call	_unLock_PPS	;wreg free
 15541                           
 15542                           ;Serial.c: 103: RB1PPS = 0b010110;
 15543  00766C  0E16               	movlw	22
 15544  00766E  013A               	movlb	58	; () banked
 15545  007670  6F09               	movwf	9,b	;volatile
 15546                           
 15547                           ; BSR set to: 58
 15548                           ;Serial.c: 104: U2RXPPS = 0b001000;
 15549  007672  0E08               	movlw	8
 15550  007674  6FE8               	movwf	232,b	;volatile
 15551                           
 15552                           ; BSR set to: 58
 15553                           ;Serial.c: 106: ANSELBbits.ANSELB0 = 0;
 15554  007676  9150               	bcf	80,0,b	;volatile
 15555                           
 15556                           ; BSR set to: 58
 15557                           ;Serial.c: 108: TRISBbits.TRISB0 = 1;
 15558  007678  013F               	movlb	63	; () banked
 15559  00767A  81C3               	bsf	195,0,b	;volatile
 15560                           
 15561                           ; BSR set to: 63
 15562                           ;Serial.c: 109: TRISBbits.TRISB1 = 0;
 15563  00767C  93C3               	bcf	195,1,b	;volatile
 15564                           
 15565                           ; BSR set to: 63
 15566                           ;Serial.c: 111: lock_PPS();
 15567  00767E  EC46  F045         	call	_lock_PPS	;wreg free
 15568                           
 15569                           ;Serial.c: 113: U2CON1bits.ON = 1;
 15570  007682  013D               	movlb	61	; () banked
 15571  007684  8FDB               	bsf	219,7,b	;volatile
 15572                           
 15573                           ; BSR set to: 61
 15574  007686  0012               	return		;funcret
 15575  007688                     __end_of_Abre_Porta_COMM:
 15576                           	opt stack 0
 15577                           
 15578 ;; *************** function _Abre_Porta_1 *****************
 15579 ;; Defined at:
 15580 ;;		line 43 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 15581 ;; Parameters:    Size  Location     Type
 15582 ;;  PORTA           2   27[BANK1 ] int 
 15583 ;;  BaudRate        4   29[BANK1 ] long 
 15584 ;; Auto vars:     Size  Location     Type
 15585 ;;  baud            4   33[BANK1 ] long 
 15586 ;; Return value:  Size  Location     Type
 15587 ;;                  1    wreg      void 
 15588 ;; Registers used:
 15589 ;;		wreg, status,2, status,0, cstack
 15590 ;; Tracked objects:
 15591 ;;		On entry : 0/0
 15592 ;;		On exit  : 0/0
 15593 ;;		Unchanged: 0/0
 15594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15595 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15596 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15598 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15599 ;;Total ram usage:       10 bytes
 15600 ;; Hardware stack levels used:    1
 15601 ;; Hardware stack levels required when called:   12
 15602 ;; This function calls:
 15603 ;;		_Calcula_BaudRate
 15604 ;;		___aldiv
 15605 ;;		_lock_PPS
 15606 ;;		_unLock_PPS
 15607 ;; This function is called by:
 15608 ;;		_main
 15609 ;; This function uses a non-reentrant model
 15610 ;;
 15611                           
 15612                           	psect	text40
 15613  006CBC                     __ptext40:
 15614                           	opt stack 0
 15615  006CBC                     _Abre_Porta_1:
 15616                           	opt stack 18
 15617                           
 15618                           ;Serial.c: 44: long baud = Calcula_BaudRate(BaudRate);
 15619                           
 15620                           ; BSR set to: 61
 15621                           ;incstack = 0
 15622  006CBC  0060  F474  F113   	movff	Abre_Porta_1@BaudRate,Calcula_BaudRate@BaudRate
 15623  006CC2  0060  F478  F114   	movff	Abre_Porta_1@BaudRate+1,Calcula_BaudRate@BaudRate+1
 15624  006CC8  0060  F47C  F115   	movff	Abre_Porta_1@BaudRate+2,Calcula_BaudRate@BaudRate+2
 15625  006CCE  0060  F480  F116   	movff	Abre_Porta_1@BaudRate+3,Calcula_BaudRate@BaudRate+3
 15626  006CD4  EC84  F039         	call	_Calcula_BaudRate	;wreg free
 15627  006CD8  0060  F44C  F121   	movff	?_Calcula_BaudRate,Abre_Porta_1@baud
 15628  006CDE  0060  F450  F122   	movff	?_Calcula_BaudRate+1,Abre_Porta_1@baud+1
 15629  006CE4  0060  F454  F123   	movff	?_Calcula_BaudRate+2,Abre_Porta_1@baud+2
 15630  006CEA  0060  F458  F124   	movff	?_Calcula_BaudRate+3,Abre_Porta_1@baud+3
 15631                           
 15632                           ;Serial.c: 46: U1CON0bits.TXEN = 1;
 15633  006CF0  013D               	movlb	61	; () banked
 15634  006CF2  8BF2               	bsf	242,5,b	;volatile
 15635                           
 15636                           ; BSR set to: 61
 15637                           ;Serial.c: 47: U1CON0bits.RXEN = 1;
 15638  006CF4  89F2               	bsf	242,4,b	;volatile
 15639                           
 15640                           ; BSR set to: 61
 15641                           ;Serial.c: 48: U1CON0bits.BRGS = 1;
 15642  006CF6  8FF2               	bsf	242,7,b	;volatile
 15643                           
 15644                           ; BSR set to: 61
 15645                           ;Serial.c: 49: PIE3bits.U1IE = 1;
 15646  006CF8  0139               	movlb	57	; () banked
 15647  006CFA  8D93               	bsf	147,6,b	;volatile
 15648                           
 15649                           ; BSR set to: 57
 15650                           ;Serial.c: 50: PIE3bits.U1RXIE = 1;
 15651  006CFC  8793               	bsf	147,3,b	;volatile
 15652                           
 15653                           ; BSR set to: 57
 15654                           ;Serial.c: 52: U1CON0bits.U1MODE = 0;
 15655  006CFE  013D               	movlb	61	; () banked
 15656  006D00  91F2               	bcf	242,0,b	;volatile
 15657  006D02  93F2               	bcf	242,1,b	;volatile
 15658  006D04  95F2               	bcf	242,2,b	;volatile
 15659  006D06  97F2               	bcf	242,3,b	;volatile
 15660                           
 15661                           ;Serial.c: 54: U1BRGH = (unsigned char) ((baud & 0xFF00) / 0x100);
 15662  006D08  0E00               	movlw	0
 15663  006D0A  0101               	movlb	1	; () banked
 15664  006D0C  1521               	andwf	Abre_Porta_1@baud& (0+255),w,b
 15665  006D0E  6F05               	movwf	___aldiv@dividend& (0+255),b
 15666  006D10  0EFF               	movlw	255
 15667  006D12  1522               	andwf	(Abre_Porta_1@baud+1)& (0+255),w,b
 15668  006D14  6F06               	movwf	(___aldiv@dividend+1)& (0+255),b
 15669  006D16  0E00               	movlw	0
 15670  006D18  1523               	andwf	(Abre_Porta_1@baud+2)& (0+255),w,b
 15671  006D1A  6F07               	movwf	(___aldiv@dividend+2)& (0+255),b
 15672  006D1C  0E00               	movlw	0
 15673  006D1E  1524               	andwf	(Abre_Porta_1@baud+3)& (0+255),w,b
 15674  006D20  6F08               	movwf	(___aldiv@dividend+3)& (0+255),b
 15675  006D22  0E00               	movlw	0
 15676  006D24  6F09               	movwf	___aldiv@divisor& (0+255),b
 15677  006D26  0E01               	movlw	1
 15678  006D28  6F0A               	movwf	(___aldiv@divisor+1)& (0+255),b
 15679  006D2A  0E00               	movlw	0
 15680  006D2C  6F0B               	movwf	(___aldiv@divisor+2)& (0+255),b
 15681  006D2E  0E00               	movlw	0
 15682  006D30  6F0C               	movwf	(___aldiv@divisor+3)& (0+255),b
 15683  006D32  ECCB  F036         	call	___aldiv	;wreg free
 15684  006D36  0101               	movlb	1	; () banked
 15685  006D38  5105               	movf	?___aldiv& (0+255),w,b
 15686  006D3A  013D               	movlb	61	; () banked
 15687  006D3C  6FF6               	movwf	246,b	;volatile
 15688                           
 15689                           ; BSR set to: 61
 15690                           ;Serial.c: 55: U1BRGL = (unsigned char) (baud & 0x00FF);
 15691  006D3E  0060  F487  FDF5   	movff	Abre_Porta_1@baud,15861	;volatile
 15692                           
 15693                           ; BSR set to: 61
 15694                           ;Serial.c: 59: if (PORTA == 0x100) {
 15695  006D44  0101               	movlb	1	; () banked
 15696  006D46  051C               	decf	(Abre_Porta_1@PORTA+1)& (0+255),w,b
 15697  006D48  111B               	iorwf	Abre_Porta_1@PORTA& (0+255),w,b
 15698  006D4A  A4D8               	btfss	16344,2,c
 15699  006D4C  D00E               	goto	l253
 15700                           
 15701                           ; BSR set to: 1
 15702                           ;Serial.c: 60: unLock_PPS();
 15703  006D4E  EC3A  F045         	call	_unLock_PPS	;wreg free
 15704                           
 15705                           ;Serial.c: 61: RC0PPS = 0b010011;
 15706  006D52  0E13               	movlw	19
 15707  006D54  013A               	movlb	58	; () banked
 15708  006D56  6F10               	movwf	16,b	;volatile
 15709                           
 15710                           ; BSR set to: 58
 15711                           ;Serial.c: 63: U1RXPPS = 0b010001;
 15712  006D58  0E11               	movlw	17
 15713  006D5A  6FE5               	movwf	229,b	;volatile
 15714                           
 15715                           ;Serial.c: 64: lock_PPS();
 15716  006D5C  EC46  F045         	call	_lock_PPS	;wreg free
 15717                           
 15718                           ;Serial.c: 65: ANSELCbits.ANSELC1 = 0;
 15719  006D60  013A               	movlb	58	; () banked
 15720  006D62  9360               	bcf	96,1,b	;volatile
 15721                           
 15722                           ; BSR set to: 58
 15723                           ;Serial.c: 66: TRISCbits.TRISC0 = 0;
 15724  006D64  013F               	movlb	63	; () banked
 15725  006D66  91C4               	bcf	196,0,b	;volatile
 15726                           
 15727                           ; BSR set to: 63
 15728                           ;Serial.c: 67: TRISCbits.TRISC1 = 1;
 15729  006D68  83C4               	bsf	196,1,b	;volatile
 15730  006D6A                     l253:
 15731                           
 15732                           ;Serial.c: 69: }
 15733                           ;Serial.c: 70: if (PORTA == 0x101) {
 15734                           
 15735                           ; BSR set to: 63
 15736  006D6A  0101               	movlb	1	; () banked
 15737  006D6C  051B               	decf	Abre_Porta_1@PORTA& (0+255),w,b
 15738  006D6E  E110               	bnz	l14022
 15739  006D70  051C               	decf	(Abre_Porta_1@PORTA+1)& (0+255),w,b
 15740  006D72  A4D8               	btfss	16344,2,c
 15741  006D74  D00D               	goto	l254
 15742                           
 15743                           ; BSR set to: 1
 15744                           ;Serial.c: 71: unLock_PPS();
 15745  006D76  EC3A  F045         	call	_unLock_PPS	;wreg free
 15746                           
 15747                           ;Serial.c: 72: RC5PPS = 0b010011;
 15748  006D7A  0E13               	movlw	19
 15749  006D7C  013A               	movlb	58	; () banked
 15750  006D7E  6F15               	movwf	21,b	;volatile
 15751                           
 15752                           ; BSR set to: 58
 15753                           ;Serial.c: 73: ;
 15754                           ;Serial.c: 74: U1RXPPS = 0b010111;
 15755  006D80  0E17               	movlw	23
 15756  006D82  6FE5               	movwf	229,b	;volatile
 15757                           
 15758                           ; BSR set to: 58
 15759                           ;Serial.c: 75: ANSELCbits.ANSELC5 = 0;
 15760  006D84  9B60               	bcf	96,5,b	;volatile
 15761                           
 15762                           ; BSR set to: 58
 15763                           ;Serial.c: 76: TRISCbits.TRISC5 = 0;
 15764  006D86  013F               	movlb	63	; () banked
 15765  006D88  9BC4               	bcf	196,5,b	;volatile
 15766                           
 15767                           ; BSR set to: 63
 15768                           ;Serial.c: 77: TRISCbits.TRISC7 = 1;
 15769  006D8A  8FC4               	bsf	196,7,b	;volatile
 15770                           
 15771                           ;Serial.c: 78: lock_PPS();
 15772  006D8C  EC46  F045         	call	_lock_PPS	;wreg free
 15773  006D90                     l254:
 15774  006D90                     l14022:
 15775                           
 15776                           ;Serial.c: 79: }
 15777                           ;Serial.c: 81: U1CON1bits.ON = 1;
 15778  006D90  013D               	movlb	61	; () banked
 15779  006D92  8FF3               	bsf	243,7,b	;volatile
 15780                           
 15781                           ; BSR set to: 61
 15782  006D94  0012               	return		;funcret
 15783  006D96                     __end_of_Abre_Porta_1:
 15784                           	opt stack 0
 15785                           
 15786 ;; *************** function _unLock_PPS *****************
 15787 ;; Defined at:
 15788 ;;		line 13 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/PPS.c"
 15789 ;; Parameters:    Size  Location     Type
 15790 ;;		None
 15791 ;; Auto vars:     Size  Location     Type
 15792 ;;		None
 15793 ;; Return value:  Size  Location     Type
 15794 ;;                  1    wreg      void 
 15795 ;; Registers used:
 15796 ;;		wreg, status,2
 15797 ;; Tracked objects:
 15798 ;;		On entry : 0/0
 15799 ;;		On exit  : 0/0
 15800 ;;		Unchanged: 0/0
 15801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15806 ;;Total ram usage:        0 bytes
 15807 ;; Hardware stack levels used:    1
 15808 ;; Hardware stack levels required when called:   10
 15809 ;; This function calls:
 15810 ;;		Nothing
 15811 ;; This function is called by:
 15812 ;;		_Abre_Porta_1
 15813 ;;		_Abre_Porta_COMM
 15814 ;; This function uses a non-reentrant model
 15815 ;;
 15816                           
 15817                           	psect	text41
 15818  008A74                     __ptext41:
 15819                           	opt stack 0
 15820  008A74                     _unLock_PPS:
 15821                           	opt stack 19
 15822                           
 15823                           ;PPS.c: 14: INTCON0bits.GIE = 0;
 15824                           
 15825                           ; BSR set to: 61
 15826                           ;incstack = 0
 15827  008A74  013F               	movlb	63	; () banked
 15828  008A76  9FD2               	bcf	210,7,b	;volatile
 15829                           
 15830                           ;PPS.c: 15: INTCON0bits.GIEL = 0;
 15831  008A78  9DD2               	bcf	210,6,b	;volatile
 15832                           
 15833                           ;PPS.c: 16: INTCON0bits.GIEH = 0;
 15834  008A7A  9FD2               	bcf	210,7,b	;volatile
 15835                           
 15836                           ; BSR set to: 63
 15837                           ;PPS.c: 17: PPSLOCK = 0x55;
 15838  008A7C  0E55               	movlw	85
 15839  008A7E  013A               	movlb	58	; () banked
 15840  008A80  6FBF               	movwf	191,b	;volsfr
 15841                           
 15842                           ;PPS.c: 18: PPSLOCK = 0xAA;
 15843  008A82  0EAA               	movlw	170
 15844  008A84  6FBF               	movwf	191,b	;volsfr
 15845                           
 15846                           ;PPS.c: 19: PPSLOCK = 0;
 15847  008A86  0E00               	movlw	0
 15848  008A88  6FBF               	movwf	191,b	;volsfr
 15849                           
 15850                           ; BSR set to: 58
 15851  008A8A  0012               	return		;funcret
 15852  008A8C                     __end_of_unLock_PPS:
 15853                           	opt stack 0
 15854                           
 15855 ;; *************** function _lock_PPS *****************
 15856 ;; Defined at:
 15857 ;;		line 4 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/PPS.c"
 15858 ;; Parameters:    Size  Location     Type
 15859 ;;		None
 15860 ;; Auto vars:     Size  Location     Type
 15861 ;;		None
 15862 ;; Return value:  Size  Location     Type
 15863 ;;                  1    wreg      void 
 15864 ;; Registers used:
 15865 ;;		wreg, status,2
 15866 ;; Tracked objects:
 15867 ;;		On entry : 0/0
 15868 ;;		On exit  : 0/0
 15869 ;;		Unchanged: 0/0
 15870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15875 ;;Total ram usage:        0 bytes
 15876 ;; Hardware stack levels used:    1
 15877 ;; Hardware stack levels required when called:   10
 15878 ;; This function calls:
 15879 ;;		Nothing
 15880 ;; This function is called by:
 15881 ;;		_Abre_Porta_1
 15882 ;;		_Abre_Porta_COMM
 15883 ;; This function uses a non-reentrant model
 15884 ;;
 15885                           
 15886                           	psect	text42
 15887  008A8C                     __ptext42:
 15888                           	opt stack 0
 15889  008A8C                     _lock_PPS:
 15890                           	opt stack 19
 15891                           
 15892                           ;PPS.c: 5: INTCON0bits.GIE = 1;
 15893                           
 15894                           ; BSR set to: 58
 15895                           ;incstack = 0
 15896  008A8C  013F               	movlb	63	; () banked
 15897  008A8E  8FD2               	bsf	210,7,b	;volatile
 15898                           
 15899                           ;PPS.c: 6: INTCON0bits.GIEL = 1;
 15900  008A90  8DD2               	bsf	210,6,b	;volatile
 15901                           
 15902                           ;PPS.c: 7: INTCON0bits.GIEH = 1;
 15903  008A92  8FD2               	bsf	210,7,b	;volatile
 15904                           
 15905                           ; BSR set to: 63
 15906                           ;PPS.c: 8: PPSLOCK = 0x55;
 15907  008A94  0E55               	movlw	85
 15908  008A96  013A               	movlb	58	; () banked
 15909  008A98  6FBF               	movwf	191,b	;volsfr
 15910                           
 15911                           ;PPS.c: 9: PPSLOCK = 0xAA;
 15912  008A9A  0EAA               	movlw	170
 15913  008A9C  6FBF               	movwf	191,b	;volsfr
 15914                           
 15915                           ;PPS.c: 10: PPSLOCK = 1;
 15916  008A9E  0E01               	movlw	1
 15917  008AA0  6FBF               	movwf	191,b	;volsfr
 15918                           
 15919                           ; BSR set to: 58
 15920  008AA2  0012               	return		;funcret
 15921  008AA4                     __end_of_lock_PPS:
 15922                           	opt stack 0
 15923                           
 15924 ;; *************** function _Calcula_BaudRate *****************
 15925 ;; Defined at:
 15926 ;;		line 116 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 15927 ;; Parameters:    Size  Location     Type
 15928 ;;  BaudRate        4   19[BANK1 ] long 
 15929 ;; Auto vars:     Size  Location     Type
 15930 ;;  baud            4   23[BANK1 ] long 
 15931 ;; Return value:  Size  Location     Type
 15932 ;;                  4   19[BANK1 ] long 
 15933 ;; Registers used:
 15934 ;;		wreg, status,2, status,0, cstack
 15935 ;; Tracked objects:
 15936 ;;		On entry : 0/0
 15937 ;;		On exit  : 0/0
 15938 ;;		Unchanged: 0/0
 15939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15940 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15941 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15943 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15944 ;;Total ram usage:        8 bytes
 15945 ;; Hardware stack levels used:    1
 15946 ;; Hardware stack levels required when called:   11
 15947 ;; This function calls:
 15948 ;;		___aldiv
 15949 ;; This function is called by:
 15950 ;;		_Abre_Porta_1
 15951 ;;		_Abre_Porta_COMM
 15952 ;; This function uses a non-reentrant model
 15953 ;;
 15954                           
 15955                           	psect	text43
 15956  007308                     __ptext43:
 15957                           	opt stack 0
 15958  007308                     _Calcula_BaudRate:
 15959                           	opt stack 18
 15960                           
 15961                           ;Serial.c: 117: long baud;
 15962                           ;Serial.c: 119: baud = 40000000 / BaudRate;
 15963                           
 15964                           ; BSR set to: 58
 15965                           ;incstack = 0
 15966  007308  0E00               	movlw	0
 15967  00730A  0101               	movlb	1	; () banked
 15968  00730C  6F05               	movwf	___aldiv@dividend& (0+255),b
 15969  00730E  0E5A               	movlw	90
 15970  007310  6F06               	movwf	(___aldiv@dividend+1)& (0+255),b
 15971  007312  0E62               	movlw	98
 15972  007314  6F07               	movwf	(___aldiv@dividend+2)& (0+255),b
 15973  007316  0E02               	movlw	2
 15974  007318  6F08               	movwf	(___aldiv@dividend+3)& (0+255),b
 15975  00731A  0060  F44C  F109   	movff	Calcula_BaudRate@BaudRate,___aldiv@divisor
 15976  007320  0060  F450  F10A   	movff	Calcula_BaudRate@BaudRate+1,___aldiv@divisor+1
 15977  007326  0060  F454  F10B   	movff	Calcula_BaudRate@BaudRate+2,___aldiv@divisor+2
 15978  00732C  0060  F458  F10C   	movff	Calcula_BaudRate@BaudRate+3,___aldiv@divisor+3
 15979  007332  ECCB  F036         	call	___aldiv	;wreg free
 15980  007336  0060  F414  F117   	movff	?___aldiv,Calcula_BaudRate@baud
 15981  00733C  0060  F418  F118   	movff	?___aldiv+1,Calcula_BaudRate@baud+1
 15982  007342  0060  F41C  F119   	movff	?___aldiv+2,Calcula_BaudRate@baud+2
 15983  007348  0060  F420  F11A   	movff	?___aldiv+3,Calcula_BaudRate@baud+3
 15984                           
 15985                           ;Serial.c: 120: baud = baud / (long) 4;
 15986  00734E  0060  F45C  F105   	movff	Calcula_BaudRate@baud,___aldiv@dividend
 15987  007354  0060  F460  F106   	movff	Calcula_BaudRate@baud+1,___aldiv@dividend+1
 15988  00735A  0060  F464  F107   	movff	Calcula_BaudRate@baud+2,___aldiv@dividend+2
 15989  007360  0060  F468  F108   	movff	Calcula_BaudRate@baud+3,___aldiv@dividend+3
 15990  007366  0E04               	movlw	4
 15991  007368  0101               	movlb	1	; () banked
 15992  00736A  6F09               	movwf	___aldiv@divisor& (0+255),b
 15993  00736C  0E00               	movlw	0
 15994  00736E  6F0A               	movwf	(___aldiv@divisor+1)& (0+255),b
 15995  007370  0E00               	movlw	0
 15996  007372  6F0B               	movwf	(___aldiv@divisor+2)& (0+255),b
 15997  007374  0E00               	movlw	0
 15998  007376  6F0C               	movwf	(___aldiv@divisor+3)& (0+255),b
 15999  007378  ECCB  F036         	call	___aldiv	;wreg free
 16000  00737C  0060  F414  F117   	movff	?___aldiv,Calcula_BaudRate@baud
 16001  007382  0060  F418  F118   	movff	?___aldiv+1,Calcula_BaudRate@baud+1
 16002  007388  0060  F41C  F119   	movff	?___aldiv+2,Calcula_BaudRate@baud+2
 16003  00738E  0060  F420  F11A   	movff	?___aldiv+3,Calcula_BaudRate@baud+3
 16004                           
 16005                           ;Serial.c: 121: baud--;
 16006  007394  0EFF               	movlw	255
 16007  007396  0101               	movlb	1	; () banked
 16008  007398  2717               	addwf	Calcula_BaudRate@baud& (0+255),f,b
 16009  00739A  0EFF               	movlw	255
 16010  00739C  2318               	addwfc	(Calcula_BaudRate@baud+1)& (0+255),f,b
 16011  00739E  0EFF               	movlw	255
 16012  0073A0  2319               	addwfc	(Calcula_BaudRate@baud+2)& (0+255),f,b
 16013  0073A2  0EFF               	movlw	255
 16014  0073A4  231A               	addwfc	(Calcula_BaudRate@baud+3)& (0+255),f,b
 16015                           
 16016                           ; BSR set to: 1
 16017                           ;Serial.c: 123: return baud;
 16018  0073A6  0060  F45C  F113   	movff	Calcula_BaudRate@baud,?_Calcula_BaudRate
 16019  0073AC  0060  F460  F114   	movff	Calcula_BaudRate@baud+1,?_Calcula_BaudRate+1
 16020  0073B2  0060  F464  F115   	movff	Calcula_BaudRate@baud+2,?_Calcula_BaudRate+2
 16021  0073B8  0060  F468  F116   	movff	Calcula_BaudRate@baud+3,?_Calcula_BaudRate+3
 16022  0073BE  0012               	return	
 16023  0073C0                     __end_of_Calcula_BaudRate:
 16024                           	opt stack 0
 16025                           
 16026 ;; *************** function ___aldiv *****************
 16027 ;; Defined at:
 16028 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 16029 ;; Parameters:    Size  Location     Type
 16030 ;;  dividend        4    5[BANK1 ] long 
 16031 ;;  divisor         4    9[BANK1 ] long 
 16032 ;; Auto vars:     Size  Location     Type
 16033 ;;  quotient        4   15[BANK1 ] long 
 16034 ;;  sign            1   14[BANK1 ] unsigned char 
 16035 ;;  counter         1   13[BANK1 ] unsigned char 
 16036 ;; Return value:  Size  Location     Type
 16037 ;;                  4    5[BANK1 ] long 
 16038 ;; Registers used:
 16039 ;;		wreg, status,2, status,0
 16040 ;; Tracked objects:
 16041 ;;		On entry : 0/0
 16042 ;;		On exit  : 0/0
 16043 ;;		Unchanged: 0/0
 16044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16045 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16046 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16048 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16049 ;;Total ram usage:       14 bytes
 16050 ;; Hardware stack levels used:    1
 16051 ;; Hardware stack levels required when called:   10
 16052 ;; This function calls:
 16053 ;;		Nothing
 16054 ;; This function is called by:
 16055 ;;		_Abre_Porta_1
 16056 ;;		_Abre_Porta_COMM
 16057 ;;		_Calcula_BaudRate
 16058 ;; This function uses a non-reentrant model
 16059 ;;
 16060                           
 16061                           	psect	text44
 16062  006D96                     __ptext44:
 16063                           	opt stack 0
 16064  006D96                     ___aldiv:
 16065                           	opt stack 19
 16066                           
 16067                           ; BSR set to: 1
 16068                           ;incstack = 0
 16069  006D96  0E00               	movlw	0
 16070  006D98  0101               	movlb	1	; () banked
 16071  006D9A  6F0E               	movwf	___aldiv@sign& (0+255),b
 16072                           
 16073                           ; BSR set to: 1
 16074  006D9C  AF0C               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 16075  006D9E  D00A               	goto	l1291
 16076                           
 16077                           ; BSR set to: 1
 16078  006DA0  1F0C               	comf	(___aldiv@divisor+3)& (0+255),f,b
 16079  006DA2  1F0B               	comf	(___aldiv@divisor+2)& (0+255),f,b
 16080  006DA4  1F0A               	comf	(___aldiv@divisor+1)& (0+255),f,b
 16081  006DA6  6D09               	negf	___aldiv@divisor& (0+255),b
 16082  006DA8  0E00               	movlw	0
 16083  006DAA  230A               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 16084  006DAC  230B               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 16085  006DAE  230C               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 16086                           
 16087                           ; BSR set to: 1
 16088  006DB0  0E01               	movlw	1
 16089  006DB2  6F0E               	movwf	___aldiv@sign& (0+255),b
 16090  006DB4                     l1291:
 16091                           
 16092                           ; BSR set to: 1
 16093                           
 16094                           ; BSR set to: 1
 16095  006DB4  AF08               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 16096  006DB6  D00A               	goto	l1292
 16097                           
 16098                           ; BSR set to: 1
 16099  006DB8  1F08               	comf	(___aldiv@dividend+3)& (0+255),f,b
 16100  006DBA  1F07               	comf	(___aldiv@dividend+2)& (0+255),f,b
 16101  006DBC  1F06               	comf	(___aldiv@dividend+1)& (0+255),f,b
 16102  006DBE  6D05               	negf	___aldiv@dividend& (0+255),b
 16103  006DC0  0E00               	movlw	0
 16104  006DC2  2306               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 16105  006DC4  2307               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 16106  006DC6  2308               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 16107                           
 16108                           ; BSR set to: 1
 16109  006DC8  0E01               	movlw	1
 16110  006DCA  1B0E               	xorwf	___aldiv@sign& (0+255),f,b
 16111  006DCC                     l1292:
 16112                           
 16113                           ; BSR set to: 1
 16114                           
 16115                           ; BSR set to: 1
 16116  006DCC  0E00               	movlw	0
 16117  006DCE  6F0F               	movwf	___aldiv@quotient& (0+255),b
 16118  006DD0  0E00               	movlw	0
 16119  006DD2  6F10               	movwf	(___aldiv@quotient+1)& (0+255),b
 16120  006DD4  0E00               	movlw	0
 16121  006DD6  6F11               	movwf	(___aldiv@quotient+2)& (0+255),b
 16122  006DD8  0E00               	movlw	0
 16123  006DDA  6F12               	movwf	(___aldiv@quotient+3)& (0+255),b
 16124                           
 16125                           ; BSR set to: 1
 16126  006DDC  5109               	movf	___aldiv@divisor& (0+255),w,b
 16127  006DDE  110A               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 16128  006DE0  110B               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 16129  006DE2  110C               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 16130  006DE4  B4D8               	btfsc	16344,2,c
 16131  006DE6  D02A               	goto	l1299
 16132                           
 16133                           ; BSR set to: 1
 16134  006DE8  0E01               	movlw	1
 16135  006DEA  6F0D               	movwf	___aldiv@counter& (0+255),b
 16136  006DEC  D006               	goto	l1294
 16137  006DEE                     
 16138                           ; BSR set to: 1
 16139                           
 16140                           ; BSR set to: 1
 16141  006DEE  90D8               	bcf	16344,0,c
 16142  006DF0  3709               	rlcf	___aldiv@divisor& (0+255),f,b
 16143  006DF2  370A               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 16144  006DF4  370B               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 16145  006DF6  370C               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 16146  006DF8  2B0D               	incf	___aldiv@counter& (0+255),f,b
 16147  006DFA                     l1294:
 16148                           
 16149                           ; BSR set to: 1
 16150                           
 16151                           ; BSR set to: 1
 16152  006DFA  AF0C               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 16153  006DFC  D7F8               	goto	l1295
 16154  006DFE                     u18690:
 16155                           
 16156                           ; BSR set to: 1
 16157                           
 16158                           ; BSR set to: 1
 16159                           
 16160                           ; BSR set to: 1
 16161  006DFE  90D8               	bcf	16344,0,c
 16162  006E00  370F               	rlcf	___aldiv@quotient& (0+255),f,b
 16163  006E02  3710               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 16164  006E04  3711               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 16165  006E06  3712               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 16166                           
 16167                           ; BSR set to: 1
 16168  006E08  5109               	movf	___aldiv@divisor& (0+255),w,b
 16169  006E0A  5D05               	subwf	___aldiv@dividend& (0+255),w,b
 16170  006E0C  510A               	movf	(___aldiv@divisor+1)& (0+255),w,b
 16171  006E0E  5906               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 16172  006E10  510B               	movf	(___aldiv@divisor+2)& (0+255),w,b
 16173  006E12  5907               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 16174  006E14  510C               	movf	(___aldiv@divisor+3)& (0+255),w,b
 16175  006E16  5908               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 16176  006E18  A0D8               	btfss	16344,0,c
 16177  006E1A  D009               	goto	l1298
 16178                           
 16179                           ; BSR set to: 1
 16180  006E1C  5109               	movf	___aldiv@divisor& (0+255),w,b
 16181  006E1E  5F05               	subwf	___aldiv@dividend& (0+255),f,b
 16182  006E20  510A               	movf	(___aldiv@divisor+1)& (0+255),w,b
 16183  006E22  5B06               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 16184  006E24  510B               	movf	(___aldiv@divisor+2)& (0+255),w,b
 16185  006E26  5B07               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 16186  006E28  510C               	movf	(___aldiv@divisor+3)& (0+255),w,b
 16187  006E2A  5B08               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 16188                           
 16189                           ; BSR set to: 1
 16190  006E2C  810F               	bsf	___aldiv@quotient& (0+255),0,b
 16191  006E2E                     l1298:
 16192                           
 16193                           ; BSR set to: 1
 16194                           
 16195                           ; BSR set to: 1
 16196  006E2E  90D8               	bcf	16344,0,c
 16197  006E30  330C               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 16198  006E32  330B               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 16199  006E34  330A               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 16200  006E36  3309               	rrcf	___aldiv@divisor& (0+255),f,b
 16201                           
 16202                           ; BSR set to: 1
 16203  006E38  2F0D               	decfsz	___aldiv@counter& (0+255),f,b
 16204  006E3A  D7E1               	goto	u18690
 16205  006E3C                     l1299:
 16206                           
 16207                           ; BSR set to: 1
 16208                           
 16209                           ; BSR set to: 1
 16210                           
 16211                           ; BSR set to: 1
 16212  006E3C  510E               	movf	___aldiv@sign& (0+255),w,b
 16213  006E3E  B4D8               	btfsc	16344,2,c
 16214  006E40  D008               	goto	l1300
 16215                           
 16216                           ; BSR set to: 1
 16217  006E42  1F12               	comf	(___aldiv@quotient+3)& (0+255),f,b
 16218  006E44  1F11               	comf	(___aldiv@quotient+2)& (0+255),f,b
 16219  006E46  1F10               	comf	(___aldiv@quotient+1)& (0+255),f,b
 16220  006E48  6D0F               	negf	___aldiv@quotient& (0+255),b
 16221  006E4A  0E00               	movlw	0
 16222  006E4C  2310               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 16223  006E4E  2311               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 16224  006E50  2312               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 16225  006E52                     l1300:
 16226                           
 16227                           ; BSR set to: 1
 16228                           
 16229                           ; BSR set to: 1
 16230  006E52  0060  F43C  F105   	movff	___aldiv@quotient,?___aldiv
 16231  006E58  0060  F440  F106   	movff	___aldiv@quotient+1,?___aldiv+1
 16232  006E5E  0060  F444  F107   	movff	___aldiv@quotient+2,?___aldiv+2
 16233  006E64  0060  F448  F108   	movff	___aldiv@quotient+3,?___aldiv+3
 16234  006E6A  0012               	return	
 16235  006E6C                     __end_of___aldiv:
 16236                           	opt stack 0
 16237                           
 16238 ;; *************** function _Interrupt_USB_485 *****************
 16239 ;; Defined at:
 16240 ;;		line 35 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Main.c"
 16241 ;; Parameters:    Size  Location     Type
 16242 ;;		None
 16243 ;; Auto vars:     Size  Location     Type
 16244 ;;  lido            1    2[COMRAM] unsigned char 
 16245 ;; Return value:  Size  Location     Type
 16246 ;;                  1    wreg      void 
 16247 ;; Registers used:
 16248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16249 ;; Tracked objects:
 16250 ;;		On entry : 0/0
 16251 ;;		On exit  : 0/0
 16252 ;;		Unchanged: 0/0
 16253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16257 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16258 ;;Total ram usage:        2 bytes
 16259 ;; Hardware stack levels used:    1
 16260 ;; Hardware stack levels required when called:    1
 16261 ;; This function calls:
 16262 ;;		_Buffer_Leitura_USB_Add_Char
 16263 ;;		_Recebe
 16264 ;;		i1_Buffer_Escrita_COMM_Add_Char
 16265 ;; This function is called by:
 16266 ;;		Interrupt level 1
 16267 ;; This function uses a non-reentrant model
 16268 ;;
 16269                           
 16270                           	psect	text45
 16271  0089DC                     __ptext45:
 16272                           	opt stack 0
 16273  0089DC                     _Interrupt_USB_485:
 16274                           	opt stack 22
 16275                           
 16276                           ; BSR set to: 1
 16277                           ;incstack = 0
 16278  0089DC  006F FF60  F002    	movff	16344,??_Interrupt_USB_485
 16279                           
 16280                           ;Main.c: 38: if (U1RXIF == 1) {
 16281  0089E2  0139               	movlb	57	; () banked
 16282  0089E4  A7A3               	btfss	163,3,b	;volatile
 16283  0089E6  D00B               	goto	i1l115
 16284                           
 16285                           ; BSR set to: 57
 16286                           ;Main.c: 39: char lido = Recebe();
 16287  0089E8  EC72  F045         	call	_Recebe	;wreg free
 16288  0089EC  6E03               	movwf	Interrupt_USB_485@lido,c
 16289                           
 16290                           ;Main.c: 40: Buffer_Escrita_COMM_Add_Char(lido);
 16291  0089EE  5003               	movf	Interrupt_USB_485@lido,w,c
 16292  0089F0  EC76  F044         	call	i1_Buffer_Escrita_COMM_Add_Char
 16293                           
 16294                           ;Main.c: 41: Buffer_Leitura_USB_Add_Char(lido);
 16295  0089F4  5003               	movf	Interrupt_USB_485@lido,w,c
 16296  0089F6  EC78  F045         	call	_Buffer_Leitura_USB_Add_Char
 16297                           
 16298                           ;Main.c: 42: U1RXIF = 0;
 16299  0089FA  0139               	movlb	57	; () banked
 16300  0089FC  97A3               	bcf	163,3,b	;volatile
 16301  0089FE                     i1l115:
 16302                           
 16303                           ; BSR set to: 57
 16304                           
 16305                           ; BSR set to: 57
 16306  0089FE  0060  F00B  FFD8   	movff	??_Interrupt_USB_485,16344
 16307  008A04  0011               	retfie		f
 16308  008A06                     __end_of_Interrupt_USB_485:
 16309                           	opt stack 0
 16310                           
 16311 ;; *************** function i1_Buffer_Escrita_COMM_Add_Char *****************
 16312 ;; Defined at:
 16313 ;;		line 211 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 16314 ;; Parameters:    Size  Location     Type
 16315 ;;  dado            1    wreg     unsigned char 
 16316 ;; Auto vars:     Size  Location     Type
 16317 ;;  dado            1    3[COMRAM] unsigned char 
 16318 ;; Return value:  Size  Location     Type
 16319 ;;                  2    0[None  ] short 
 16320 ;; Registers used:
 16321 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16322 ;; Tracked objects:
 16323 ;;		On entry : 0/0
 16324 ;;		On exit  : 0/0
 16325 ;;		Unchanged: 0/0
 16326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16330 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16331 ;;Total ram usage:        1 bytes
 16332 ;; Hardware stack levels used:    1
 16333 ;; This function calls:
 16334 ;;		Nothing
 16335 ;; This function is called by:
 16336 ;;		_Interrupt_USB_485
 16337 ;;		_SOCKET_RX
 16338 ;;		i1_Buffer_Escrita_COMM_Add_String
 16339 ;; This function uses a non-reentrant model
 16340 ;;
 16341                           
 16342                           	psect	text46
 16343  0088EC                     __ptext46:
 16344                           	opt stack 0
 16345  0088EC                     i1_Buffer_Escrita_COMM_Add_Char:
 16346                           	opt stack 19
 16347                           
 16348                           ; BSR set to: 57
 16349                           ;incstack = 0
 16350                           ;i1Buffer_Escrita_COMM_Add_Char@dado stored from wreg
 16351  0088EC  6E04               	movwf	i1Buffer_Escrita_COMM_Add_Char@dado,c
 16352                           
 16353                           ;Serial.c: 212: buffer_escrita_comm[ponteiro_COMM] = dado;
 16354  0088EE  0E00               	movlw	low _buffer_escrita_comm
 16355  0088F0  0101               	movlb	1	; () banked
 16356  0088F2  25E3               	addwf	_ponteiro_COMM& (0+255),w,b
 16357  0088F4  6ED9               	movwf	16345,c
 16358  0088F6  0E06               	movlw	high _buffer_escrita_comm
 16359  0088F8  21E4               	addwfc	(_ponteiro_COMM+1)& (0+255),w,b
 16360  0088FA  6EDA               	movwf	16346,c
 16361  0088FC  0060  F013  FFDF   	movff	i1Buffer_Escrita_COMM_Add_Char@dado,16351
 16362                           
 16363                           ; BSR set to: 1
 16364                           ;Serial.c: 213: if (ponteiro_COMM >= 150) ponteiro_COMM = 0;
 16365  008902  51E4               	movf	(_ponteiro_COMM+1)& (0+255),w,b
 16366  008904  E104               	bnz	i1u1390_20
 16367  008906  0E96               	movlw	150
 16368  008908  5DE3               	subwf	_ponteiro_COMM& (0+255),w,b
 16369  00890A  A0D8               	btfss	16344,0,c
 16370  00890C  D005               	goto	i1l301
 16371  00890E                     i1u1390_20:
 16372                           
 16373                           ; BSR set to: 1
 16374  00890E  0E00               	movlw	0
 16375  008910  6FE4               	movwf	(_ponteiro_COMM+1)& (0+255),b
 16376  008912  0E00               	movlw	0
 16377  008914  6FE3               	movwf	_ponteiro_COMM& (0+255),b
 16378  008916  0012               	return	
 16379  008918                     i1l301:
 16380                           
 16381                           ; BSR set to: 1
 16382                           ;Serial.c: 214: else ponteiro_COMM++;
 16383                           
 16384                           ; BSR set to: 1
 16385  008918  4BE3               	infsnz	_ponteiro_COMM& (0+255),f,b
 16386  00891A  2BE4               	incf	(_ponteiro_COMM+1)& (0+255),f,b
 16387  00891C  0012               	return	
 16388  00891E                     __end_ofi1_Buffer_Escrita_COMM_Add_Char:
 16389                           	opt stack 0
 16390                           
 16391 ;; *************** function _Recebe *****************
 16392 ;; Defined at:
 16393 ;;		line 136 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 16394 ;; Parameters:    Size  Location     Type
 16395 ;;		None
 16396 ;; Auto vars:     Size  Location     Type
 16397 ;;		None
 16398 ;; Return value:  Size  Location     Type
 16399 ;;                  1    wreg      unsigned char 
 16400 ;; Registers used:
 16401 ;;		wreg, status,2
 16402 ;; Tracked objects:
 16403 ;;		On entry : 0/0
 16404 ;;		On exit  : 0/0
 16405 ;;		Unchanged: 0/0
 16406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16411 ;;Total ram usage:        0 bytes
 16412 ;; Hardware stack levels used:    1
 16413 ;; This function calls:
 16414 ;;		Nothing
 16415 ;; This function is called by:
 16416 ;;		_Interrupt_USB_485
 16417 ;; This function uses a non-reentrant model
 16418 ;;
 16419                           
 16420                           	psect	text47
 16421  008AE4                     __ptext47:
 16422                           	opt stack 0
 16423  008AE4                     _Recebe:
 16424                           	opt stack 22
 16425                           
 16426                           ;Serial.c: 137: return U1RXB;
 16427                           
 16428                           ; BSR set to: 1
 16429                           ;incstack = 0
 16430  008AE4  013D               	movlb	61	; () banked
 16431  008AE6  51E8               	movf	232,w,b	;volatile
 16432  008AE8  0012               	return	
 16433  008AEA                     __end_of_Recebe:
 16434                           	opt stack 0
 16435                           
 16436 ;; *************** function _Buffer_Leitura_USB_Add_Char *****************
 16437 ;; Defined at:
 16438 ;;		line 180 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 16439 ;; Parameters:    Size  Location     Type
 16440 ;;  dado            1    wreg     unsigned char 
 16441 ;; Auto vars:     Size  Location     Type
 16442 ;;  dado            1    0[COMRAM] unsigned char 
 16443 ;; Return value:  Size  Location     Type
 16444 ;;                  1    wreg      void 
 16445 ;; Registers used:
 16446 ;;		wreg
 16447 ;; Tracked objects:
 16448 ;;		On entry : 0/0
 16449 ;;		On exit  : 0/0
 16450 ;;		Unchanged: 0/0
 16451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16456 ;;Total ram usage:        0 bytes
 16457 ;; Hardware stack levels used:    1
 16458 ;; This function calls:
 16459 ;;		Nothing
 16460 ;; This function is called by:
 16461 ;;		_Interrupt_USB_485
 16462 ;; This function uses a non-reentrant model
 16463 ;;
 16464                           
 16465                           	psect	text48
 16466  008AF0                     __ptext48:
 16467                           	opt stack 0
 16468  008AF0                     _Buffer_Leitura_USB_Add_Char:
 16469                           	opt stack 22
 16470                           
 16471                           ; BSR set to: 61
 16472                           ;incstack = 0
 16473  008AF0  0012               	return		;funcret
 16474  008AF2                     __end_of_Buffer_Leitura_USB_Add_Char:
 16475                           	opt stack 0
 16476                           
 16477 ;; *************** function _Interrupt_WIFI_GSM *****************
 16478 ;; Defined at:
 16479 ;;		line 47 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Main.c"
 16480 ;; Parameters:    Size  Location     Type
 16481 ;;		None
 16482 ;; Auto vars:     Size  Location     Type
 16483 ;;  lido            1  103[BANK0 ] unsigned char 
 16484 ;; Return value:  Size  Location     Type
 16485 ;;                  1    wreg      void 
 16486 ;; Registers used:
 16487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 16488 ;; Tracked objects:
 16489 ;;		On entry : 0/0
 16490 ;;		On exit  : 0/0
 16491 ;;		Unchanged: 0/0
 16492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16494 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16495 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16496 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16497 ;;Total ram usage:        6 bytes
 16498 ;; Hardware stack levels used:    1
 16499 ;; Hardware stack levels required when called:    9
 16500 ;; This function calls:
 16501 ;;		_AguardaINT
 16502 ;;		_Recebe_COMM
 16503 ;;		i1_Buffer_Escrita_USB_Add_Char
 16504 ;; This function is called by:
 16505 ;;		Interrupt level 1
 16506 ;; This function uses a non-reentrant model
 16507 ;;
 16508                           
 16509                           	psect	text49
 16510  0081B4                     __ptext49:
 16511                           	opt stack 0
 16512  0081B4                     _Interrupt_WIFI_GSM:
 16513                           	opt stack 14
 16514                           
 16515                           ;incstack = 0
 16516  0081B4  006F FF60  F100    	movff	16344,??_Interrupt_WIFI_GSM
 16517  0081BA  006F FFD8  F101    	movff	16374,??_Interrupt_WIFI_GSM+1
 16518  0081C0  006F FFDC  F102    	movff	16375,??_Interrupt_WIFI_GSM+2
 16519  0081C6  006F FFE0  F103    	movff	16376,??_Interrupt_WIFI_GSM+3
 16520  0081CC  006F FFD4  F104    	movff	16373,??_Interrupt_WIFI_GSM+4
 16521                           
 16522                           ;Main.c: 50: if (U2RXIF == 1) {
 16523  0081D2  0139               	movlb	57	; () banked
 16524  0081D4  A5A6               	btfss	166,2,b	;volatile
 16525  0081D6  D00D               	goto	i1l121
 16526                           
 16527                           ; BSR set to: 57
 16528                           ;Main.c: 51: char lido = Recebe_COMM();
 16529  0081D8  EC75  F045         	call	_Recebe_COMM	;wreg free
 16530  0081DC  0100               	movlb	0	; () banked
 16531  0081DE  6FC7               	movwf	Interrupt_WIFI_GSM@lido& (0+255),b
 16532                           
 16533                           ; BSR set to: 0
 16534                           ;Main.c: 52: Buffer_Escrita_USB_Add_Char(lido);
 16535  0081E0  51C7               	movf	Interrupt_WIFI_GSM@lido& (0+255),w,b
 16536  0081E2  EC8F  F044         	call	i1_Buffer_Escrita_USB_Add_Char
 16537                           
 16538                           ;Main.c: 53: AguardaINT(lido);
 16539  0081E6  0100               	movlb	0	; () banked
 16540  0081E8  51C7               	movf	Interrupt_WIFI_GSM@lido& (0+255),w,b
 16541  0081EA  ECE9  F033         	call	_AguardaINT
 16542                           
 16543                           ;Main.c: 54: U2RXIF = 0;
 16544  0081EE  0139               	movlb	57	; () banked
 16545  0081F0  95A6               	bcf	166,2,b	;volatile
 16546  0081F2                     i1l121:
 16547                           
 16548                           ; BSR set to: 57
 16549                           
 16550                           ; BSR set to: 57
 16551  0081F2  0060  F413  FFF5   	movff	??_Interrupt_WIFI_GSM+4,16373
 16552  0081F8  0060  F40F  FFF8   	movff	??_Interrupt_WIFI_GSM+3,16376
 16553  0081FE  0060  F40B  FFF7   	movff	??_Interrupt_WIFI_GSM+2,16375
 16554  008204  0060  F407  FFF6   	movff	??_Interrupt_WIFI_GSM+1,16374
 16555  00820A  0060  F403  FFD8   	movff	??_Interrupt_WIFI_GSM,16344
 16556  008210  0011               	retfie		f
 16557  008212                     __end_of_Interrupt_WIFI_GSM:
 16558                           	opt stack 0
 16559                           
 16560 ;; *************** function _Recebe_COMM *****************
 16561 ;; Defined at:
 16562 ;;		line 140 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 16563 ;; Parameters:    Size  Location     Type
 16564 ;;		None
 16565 ;; Auto vars:     Size  Location     Type
 16566 ;;		None
 16567 ;; Return value:  Size  Location     Type
 16568 ;;                  1    wreg      unsigned char 
 16569 ;; Registers used:
 16570 ;;		wreg, status,2
 16571 ;; Tracked objects:
 16572 ;;		On entry : 0/0
 16573 ;;		On exit  : 0/0
 16574 ;;		Unchanged: 0/0
 16575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16580 ;;Total ram usage:        0 bytes
 16581 ;; Hardware stack levels used:    1
 16582 ;; This function calls:
 16583 ;;		Nothing
 16584 ;; This function is called by:
 16585 ;;		_Interrupt_WIFI_GSM
 16586 ;; This function uses a non-reentrant model
 16587 ;;
 16588                           
 16589                           	psect	text50
 16590  008AEA                     __ptext50:
 16591                           	opt stack 0
 16592  008AEA                     _Recebe_COMM:
 16593                           	opt stack 22
 16594                           
 16595                           ;Serial.c: 141: return U2RXB;
 16596                           
 16597                           ; BSR set to: 57
 16598                           ;incstack = 0
 16599  008AEA  013D               	movlb	61	; () banked
 16600  008AEC  51D0               	movf	208,w,b	;volatile
 16601  008AEE  0012               	return	
 16602  008AF0                     __end_of_Recebe_COMM:
 16603                           	opt stack 0
 16604                           
 16605 ;; *************** function _AguardaINT *****************
 16606 ;; Defined at:
 16607 ;;		line 244 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 16608 ;; Parameters:    Size  Location     Type
 16609 ;;  dado            1    wreg     unsigned char 
 16610 ;; Auto vars:     Size  Location     Type
 16611 ;;  dado            1  102[BANK0 ] unsigned char 
 16612 ;; Return value:  Size  Location     Type
 16613 ;;                  1    wreg      void 
 16614 ;; Registers used:
 16615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 16616 ;; Tracked objects:
 16617 ;;		On entry : 0/0
 16618 ;;		On exit  : 0/0
 16619 ;;		Unchanged: 0/0
 16620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16622 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16623 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16624 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16625 ;;Total ram usage:        3 bytes
 16626 ;; Hardware stack levels used:    1
 16627 ;; Hardware stack levels required when called:    8
 16628 ;; This function calls:
 16629 ;;		Absolute function
 16630 ;;		_GETMACAddr
 16631 ;;		_Post
 16632 ;;		_Post2
 16633 ;;		_SETMACAddr
 16634 ;;		_SOCKET_RX
 16635 ;;		_TASK_POST
 16636 ;;		_WIND
 16637 ;;		_nada
 16638 ;;		_recebe
 16639 ;;		_recebeADDRESS
 16640 ;;		_recebeFRAMEID
 16641 ;;		_recebeFRAMES
 16642 ;;		_recebeFUNCTIONCODE
 16643 ;;		_recebeNETWORKID
 16644 ;;		_recebeNODEID
 16645 ;;		_recebeSIZE
 16646 ;;		_verificaERRO
 16647 ;; This function is called by:
 16648 ;;		_Interrupt_WIFI_GSM
 16649 ;; This function uses a non-reentrant model
 16650 ;;
 16651                           
 16652                           	psect	text51
 16653  0067D2                     __ptext51:
 16654                           	opt stack 0
 16655  0067D2                     _AguardaINT:
 16656                           	opt stack 14
 16657                           
 16658                           ; BSR set to: 61
 16659                           ;incstack = 0
 16660                           ;AguardaINT@dado stored from wreg
 16661  0067D2  0100               	movlb	0	; () banked
 16662  0067D4  6FC6               	movwf	AguardaINT@dado& (0+255),b
 16663                           
 16664                           ;Serial.c: 245: verificaERRO(dado);
 16665  0067D6  0100               	movlb	0	; () banked
 16666  0067D8  51C6               	movf	AguardaINT@dado& (0+255),w,b
 16667  0067DA  ECC0  F042         	call	_verificaERRO
 16668                           
 16669                           ;Serial.c: 246: if (Aguarda_str_OK == 0) {
 16670  0067DE  0100               	movlb	0	; () banked
 16671  0067E0  51DF               	movf	_Aguarda_str_OK& (0+255),w,b
 16672  0067E2  11E0               	iorwf	(_Aguarda_str_OK+1)& (0+255),w,b
 16673  0067E4  A4D8               	btfss	16344,2,c
 16674  0067E6  D023               	goto	i1l317
 16675                           
 16676                           ; BSR set to: 0
 16677                           ;Serial.c: 247: if (dado == Aguarda_str[Aguarda_Ponteiro]) {
 16678  0067E8  0EAA               	movlw	low _Aguarda_str
 16679  0067EA  25E3               	addwf	_Aguarda_Ponteiro& (0+255),w,b
 16680  0067EC  6ED9               	movwf	16345,c
 16681  0067EE  0E03               	movlw	high _Aguarda_str
 16682  0067F0  21E4               	addwfc	(_Aguarda_Ponteiro+1)& (0+255),w,b
 16683  0067F2  6EDA               	movwf	16346,c
 16684  0067F4  51C6               	movf	AguardaINT@dado& (0+255),w,b
 16685  0067F6  18DE               	xorwf	16350,w,c
 16686  0067F8  A4D8               	btfss	16344,2,c
 16687  0067FA  D014               	goto	i1l318
 16688                           
 16689                           ; BSR set to: 0
 16690                           ;Serial.c: 248: Aguarda_Ponteiro++;
 16691  0067FC  4BE3               	infsnz	_Aguarda_Ponteiro& (0+255),f,b
 16692  0067FE  2BE4               	incf	(_Aguarda_Ponteiro+1)& (0+255),f,b
 16693                           
 16694                           ; BSR set to: 0
 16695                           ;Serial.c: 249: if (Aguarda_str[Aguarda_Ponteiro] == 0x00) {
 16696  006800  0EAA               	movlw	low _Aguarda_str
 16697  006802  25E3               	addwf	_Aguarda_Ponteiro& (0+255),w,b
 16698  006804  6ED9               	movwf	16345,c
 16699  006806  0E03               	movlw	high _Aguarda_str
 16700  006808  21E4               	addwfc	(_Aguarda_Ponteiro+1)& (0+255),w,b
 16701  00680A  6EDA               	movwf	16346,c
 16702  00680C  50DF               	movf	16351,w,c
 16703  00680E  A4D8               	btfss	16344,2,c
 16704  006810  0012               	return	
 16705                           
 16706                           ; BSR set to: 0
 16707                           ;Serial.c: 250: Aguarda_str_OK = 1;
 16708  006812  0E00               	movlw	0
 16709  006814  6FE0               	movwf	(_Aguarda_str_OK+1)& (0+255),b
 16710  006816  0E01               	movlw	1
 16711  006818  6FDF               	movwf	_Aguarda_str_OK& (0+255),b
 16712                           
 16713                           ;Serial.c: 251: Aguarda_Ponteiro = 0;
 16714  00681A  0E00               	movlw	0
 16715  00681C  6FE4               	movwf	(_Aguarda_Ponteiro+1)& (0+255),b
 16716  00681E  0E00               	movlw	0
 16717  006820  6FE3               	movwf	_Aguarda_Ponteiro& (0+255),b
 16718                           
 16719                           ; BSR set to: 0
 16720                           ;Serial.c: 252: }
 16721                           ;Serial.c: 253: } else {
 16722  006822  0012               	return	
 16723  006824                     i1l318:
 16724                           
 16725                           ; BSR set to: 0
 16726                           ;Serial.c: 254: Aguarda_Ponteiro = 0;
 16727                           
 16728                           ; BSR set to: 0
 16729  006824  0E00               	movlw	0
 16730  006826  6FE4               	movwf	(_Aguarda_Ponteiro+1)& (0+255),b
 16731  006828  0E00               	movlw	0
 16732  00682A  6FE3               	movwf	_Aguarda_Ponteiro& (0+255),b
 16733                           
 16734                           ; BSR set to: 0
 16735                           ;Serial.c: 255: }
 16736                           ;Serial.c: 256: } else {
 16737  00682C  0012               	return	
 16738  00682E                     i1l317:
 16739                           
 16740                           ; BSR set to: 0
 16741                           ;Serial.c: 257: Aguarda_Resposta[Aguarda_Ponteiro] = dado;
 16742                           
 16743                           ; BSR set to: 0
 16744  00682E  0E00               	movlw	low _Aguarda_Resposta
 16745  006830  25E3               	addwf	_Aguarda_Ponteiro& (0+255),w,b
 16746  006832  6ED9               	movwf	16345,c
 16747  006834  0E03               	movlw	high _Aguarda_Resposta
 16748  006836  21E4               	addwfc	(_Aguarda_Ponteiro+1)& (0+255),w,b
 16749  006838  6EDA               	movwf	16346,c
 16750  00683A  0060  F31B  FFDF   	movff	AguardaINT@dado,16351
 16751                           
 16752                           ; BSR set to: 0
 16753                           ;Serial.c: 258: Aguarda_Ponteiro++;
 16754  006840  4BE3               	infsnz	_Aguarda_Ponteiro& (0+255),f,b
 16755  006842  2BE4               	incf	(_Aguarda_Ponteiro+1)& (0+255),f,b
 16756                           
 16757                           ; BSR set to: 0
 16758                           ;Serial.c: 259: if (breakpoint_sw == 1) {
 16759  006844  0102               	movlb	2	; () banked
 16760  006846  05EB               	decf	_breakpoint_sw& (0+255),w,b
 16761  006848  11EC               	iorwf	(_breakpoint_sw+1)& (0+255),w,b
 16762  00684A  A4D8               	btfss	16344,2,c
 16763  00684C  D004               	goto	i1l322
 16764                           
 16765                           ; BSR set to: 2
 16766                           ;Serial.c: 260: breakpoint_sw = 1;
 16767  00684E  0E00               	movlw	0
 16768  006850  6FEC               	movwf	(_breakpoint_sw+1)& (0+255),b
 16769  006852  0E01               	movlw	1
 16770  006854  6FEB               	movwf	_breakpoint_sw& (0+255),b
 16771  006856                     i1l322:
 16772                           
 16773                           ; BSR set to: 2
 16774                           ;Serial.c: 261: }
 16775                           ;Serial.c: 262: if (dado == Aguarda_end[Aguarda_End_Ponteiro]) {
 16776                           
 16777                           ; BSR set to: 2
 16778  006856  0ED0               	movlw	low _Aguarda_end
 16779  006858  0100               	movlb	0	; () banked
 16780  00685A  25E1               	addwf	_Aguarda_End_Ponteiro& (0+255),w,b
 16781  00685C  6ED9               	movwf	16345,c
 16782  00685E  0E03               	movlw	high _Aguarda_end
 16783  006860  21E2               	addwfc	(_Aguarda_End_Ponteiro+1)& (0+255),w,b
 16784  006862  6EDA               	movwf	16346,c
 16785  006864  51C6               	movf	AguardaINT@dado& (0+255),w,b
 16786  006866  18DE               	xorwf	16350,w,c
 16787  006868  A4D8               	btfss	16344,2,c
 16788  00686A  0012               	return	
 16789                           
 16790                           ; BSR set to: 0
 16791                           ;Serial.c: 263: Aguarda_End_Ponteiro++;
 16792  00686C  4BE1               	infsnz	_Aguarda_End_Ponteiro& (0+255),f,b
 16793  00686E  2BE2               	incf	(_Aguarda_End_Ponteiro+1)& (0+255),f,b
 16794                           
 16795                           ; BSR set to: 0
 16796                           ;Serial.c: 264: if (Aguarda_end[Aguarda_End_Ponteiro] == 0x00) {
 16797  006870  0ED0               	movlw	low _Aguarda_end
 16798  006872  25E1               	addwf	_Aguarda_End_Ponteiro& (0+255),w,b
 16799  006874  6ED9               	movwf	16345,c
 16800  006876  0E03               	movlw	high _Aguarda_end
 16801  006878  21E2               	addwfc	(_Aguarda_End_Ponteiro+1)& (0+255),w,b
 16802  00687A  6EDA               	movwf	16346,c
 16803  00687C  50DF               	movf	16351,w,c
 16804  00687E  A4D8               	btfss	16344,2,c
 16805  006880  0012               	return	
 16806                           
 16807                           ; BSR set to: 0
 16808                           ;Serial.c: 265: Aguarda_Resposta[Aguarda_Ponteiro - Aguarda_End_Ponteiro] = 0x00;
 16809  006882  0060  F384  F0C4   	movff	_Aguarda_End_Ponteiro,??_AguardaINT
 16810  006888  0060  F388  F0C5   	movff	_Aguarda_End_Ponteiro+1,??_AguardaINT+1
 16811  00688E  1FC4               	comf	??_AguardaINT& (0+255),f,b
 16812  006890  1FC5               	comf	(??_AguardaINT+1)& (0+255),f,b
 16813  006892  4BC4               	infsnz	??_AguardaINT& (0+255),f,b
 16814  006894  2BC5               	incf	(??_AguardaINT+1)& (0+255),f,b
 16815  006896  51E3               	movf	_Aguarda_Ponteiro& (0+255),w,b
 16816  006898  27C4               	addwf	??_AguardaINT& (0+255),f,b
 16817  00689A  51E4               	movf	(_Aguarda_Ponteiro+1)& (0+255),w,b
 16818  00689C  23C5               	addwfc	(??_AguardaINT+1)& (0+255),f,b
 16819  00689E  0E00               	movlw	low _Aguarda_Resposta
 16820  0068A0  25C4               	addwf	??_AguardaINT& (0+255),w,b
 16821  0068A2  6ED9               	movwf	16345,c
 16822  0068A4  0E03               	movlw	high _Aguarda_Resposta
 16823  0068A6  21C5               	addwfc	(??_AguardaINT+1)& (0+255),w,b
 16824  0068A8  6EDA               	movwf	16346,c
 16825  0068AA  0E00               	movlw	0
 16826  0068AC  6EDF               	movwf	16351,c
 16827                           
 16828                           ; BSR set to: 0
 16829                           ;Serial.c: 266: Aguarda_End_Ponteiro = 0;
 16830  0068AE  0E00               	movlw	0
 16831  0068B0  6FE2               	movwf	(_Aguarda_End_Ponteiro+1)& (0+255),b
 16832  0068B2  0E00               	movlw	0
 16833  0068B4  6FE1               	movwf	_Aguarda_End_Ponteiro& (0+255),b
 16834                           
 16835                           ; BSR set to: 0
 16836                           ;Serial.c: 267: Aguarda_str_OK = 0;
 16837  0068B6  0E00               	movlw	0
 16838  0068B8  6FE0               	movwf	(_Aguarda_str_OK+1)& (0+255),b
 16839  0068BA  0E00               	movlw	0
 16840  0068BC  6FDF               	movwf	_Aguarda_str_OK& (0+255),b
 16841                           
 16842                           ; BSR set to: 0
 16843                           ;Serial.c: 269: Aguarda_Funcao();
 16844  0068BE  D801               	call	i1u1926_28
 16845  0068C0  0012               	return	
 16846  0068C2                     i1u1926_28:
 16847  0068C2  0005               	push	
 16848  0068C4  6EFA               	movwf	16378,c
 16849  0068C6  0102               	movlb	2	; () banked
 16850  0068C8  51F1               	movf	_Aguarda_Funcao& (0+255),w,b
 16851  0068CA  6EFD               	movwf	16381,c
 16852  0068CC  51F2               	movf	(_Aguarda_Funcao+1)& (0+255),w,b
 16853  0068CE  6EFE               	movwf	16382,c
 16854  0068D0  6AFF               	clrf	16383,c
 16855  0068D2  50FA               	movf	16378,w,c
 16856  0068D4  0012               	return		;indir
 16857  0068D6                     __end_of_AguardaINT:
 16858                           	opt stack 0
 16859                           
 16860 ;; *************** function _TASK_POST *****************
 16861 ;; Defined at:
 16862 ;;		line 230 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 16863 ;; Parameters:    Size  Location     Type
 16864 ;;		None
 16865 ;; Auto vars:     Size  Location     Type
 16866 ;;		None
 16867 ;; Return value:  Size  Location     Type
 16868 ;;                  1    wreg      void 
 16869 ;; Registers used:
 16870 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16871 ;; Tracked objects:
 16872 ;;		On entry : 0/0
 16873 ;;		On exit  : 0/0
 16874 ;;		Unchanged: 0/0
 16875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16880 ;;Total ram usage:        0 bytes
 16881 ;; Hardware stack levels used:    1
 16882 ;; Hardware stack levels required when called:    5
 16883 ;; This function calls:
 16884 ;;		i1_Aguarda_dado
 16885 ;;		i1_Buffer_Escrita_COMM_Add_String
 16886 ;; This function is called by:
 16887 ;;		_AguardaINT
 16888 ;; This function uses a non-reentrant model
 16889 ;;
 16890                           
 16891                           	psect	text52
 16892  0087DA                     __ptext52:
 16893                           	opt stack 0
 16894  0087DA                     _TASK_POST:
 16895                           	opt stack 16
 16896                           
 16897                           ;GERREX.c: 231: Buffer_Escrita_COMM_Add_String("AT+S.HTTPPOST=services.gerrex.com.br,/se
      +                          rvice/task,80,,,,gerrex_response.json,gerrex.json\r", 0);
 16898                           
 16899                           ;incstack = 0
 16900  0087DA  0EF7               	movlw	low STR_78
 16901  0087DC  6E06               	movwf	i1Buffer_Escrita_COMM_Add_String@dado,c
 16902  0087DE  0EFB               	movlw	high STR_78
 16903  0087E0  6E07               	movwf	i1Buffer_Escrita_COMM_Add_String@dado+1,c
 16904  0087E2  0E00               	movlw	0
 16905  0087E4  6E09               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda+1,c
 16906  0087E6  0E00               	movlw	0
 16907  0087E8  6E08               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda,c
 16908  0087EA  EC66  F038         	call	i1_Buffer_Escrita_COMM_Add_String	;wreg free
 16909                           
 16910                           ;GERREX.c: 232: Aguarda_dado("A", "K\r", "", TASK_POST);
 16911  0087EE  0EFB               	movlw	low STR_79
 16912  0087F0  0100               	movlb	0	; () banked
 16913  0087F2  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 16914  0087F4  0EFF               	movlw	high STR_79
 16915  0087F6  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 16916  0087F8  0EE7               	movlw	low STR_80
 16917  0087FA  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 16918  0087FC  0EFF               	movlw	high STR_80
 16919  0087FE  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 16920  008800  0E64               	movlw	low (STR_90+23)
 16921  008802  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 16922  008804  0EFE               	movlw	high (STR_90+23)
 16923  008806  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 16924  008808  0EDA               	movlw	low _TASK_POST
 16925  00880A  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 16926  00880C  0E87               	movlw	high _TASK_POST
 16927  00880E  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 16928  008810  EC78  F040         	call	i1_Aguarda_dado	;wreg free
 16929  008814  0012               	return		;funcret
 16930  008816                     __end_of_TASK_POST:
 16931                           	opt stack 0
 16932                           
 16933 ;; *************** function _SETMACAddr *****************
 16934 ;; Defined at:
 16935 ;;		line 187 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 16936 ;; Parameters:    Size  Location     Type
 16937 ;;		None
 16938 ;; Auto vars:     Size  Location     Type
 16939 ;;  i               2   13[COMRAM] int 
 16940 ;; Return value:  Size  Location     Type
 16941 ;;                  1    wreg      void 
 16942 ;; Registers used:
 16943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16944 ;; Tracked objects:
 16945 ;;		On entry : 0/0
 16946 ;;		On exit  : 0/0
 16947 ;;		Unchanged: 0/0
 16948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16952 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16953 ;;Total ram usage:        2 bytes
 16954 ;; Hardware stack levels used:    1
 16955 ;; Hardware stack levels required when called:    7
 16956 ;; This function calls:
 16957 ;;		_limpa_Buffer_Escrita_COMM
 16958 ;;		_limpa_Buffer_Escrita_USB
 16959 ;;		i1_Buffer_Escrita_USB_Add_String
 16960 ;;		i1_inicia_Post
 16961 ;; This function is called by:
 16962 ;;		_GETMACAddr
 16963 ;;		_AguardaINT
 16964 ;; This function uses a non-reentrant model
 16965 ;;
 16966                           
 16967                           	psect	text53
 16968  007688                     __ptext53:
 16969                           	opt stack 0
 16970  007688                     _SETMACAddr:
 16971                           	opt stack 14
 16972                           
 16973                           ;GERREX.c: 188: PORTBbits.RB2 = 1;
 16974                           
 16975                           ;incstack = 0
 16976  007688  013F               	movlb	63	; () banked
 16977  00768A  85CB               	bsf	203,2,b	;volatile
 16978                           
 16979                           ; BSR set to: 63
 16980                           ;GERREX.c: 189: int i = 0;
 16981  00768C  0E00               	movlw	0
 16982  00768E  6E0F               	movwf	SETMACAddr@i+1,c
 16983  007690  0E00               	movlw	0
 16984  007692  6E0E               	movwf	SETMACAddr@i,c
 16985                           
 16986                           ;GERREX.c: 190: while (Aguarda_Resposta[i] != 0x00) {
 16987  007694  D011               	goto	i1l635
 16988  007696                     
 16989                           ;GERREX.c: 191: MACAddress[i] = Aguarda_Resposta[i];
 16990                           
 16991                           ; BSR set to: 63
 16992  007696  0E00               	movlw	low _Aguarda_Resposta
 16993  007698  240E               	addwf	SETMACAddr@i,w,c
 16994  00769A  6ED9               	movwf	16345,c
 16995  00769C  0E03               	movlw	high _Aguarda_Resposta
 16996  00769E  200F               	addwfc	SETMACAddr@i+1,w,c
 16997  0076A0  6EDA               	movwf	16346,c
 16998  0076A2  0EBE               	movlw	low _MACAddress
 16999  0076A4  240E               	addwf	SETMACAddr@i,w,c
 17000  0076A6  6EE1               	movwf	16353,c
 17001  0076A8  0E03               	movlw	high _MACAddress
 17002  0076AA  200F               	addwfc	SETMACAddr@i+1,w,c
 17003  0076AC  6EE2               	movwf	16354,c
 17004  0076AE  006F FF7F FFE7     	movff	16351,16359
 17005                           
 17006                           ;GERREX.c: 192: i++;
 17007  0076B4  4A0E               	infsnz	SETMACAddr@i,f,c
 17008  0076B6  2A0F               	incf	SETMACAddr@i+1,f,c
 17009  0076B8                     i1l635:
 17010  0076B8  0E00               	movlw	low _Aguarda_Resposta
 17011  0076BA  240E               	addwf	SETMACAddr@i,w,c
 17012  0076BC  6ED9               	movwf	16345,c
 17013  0076BE  0E03               	movlw	high _Aguarda_Resposta
 17014  0076C0  200F               	addwfc	SETMACAddr@i+1,w,c
 17015  0076C2  6EDA               	movwf	16346,c
 17016  0076C4  50DF               	movf	16351,w,c
 17017  0076C6  A4D8               	btfss	16344,2,c
 17018  0076C8  D7E6               	goto	i1l636
 17019                           
 17020                           ;GERREX.c: 193: }
 17021                           ;GERREX.c: 194: MACAddress[i] = 0x00;
 17022  0076CA  0EBE               	movlw	low _MACAddress
 17023  0076CC  240E               	addwf	SETMACAddr@i,w,c
 17024  0076CE  6ED9               	movwf	16345,c
 17025  0076D0  0E03               	movlw	high _MACAddress
 17026  0076D2  200F               	addwfc	SETMACAddr@i+1,w,c
 17027  0076D4  6EDA               	movwf	16346,c
 17028  0076D6  0E00               	movlw	0
 17029  0076D8  6EDF               	movwf	16351,c
 17030                           
 17031                           ;GERREX.c: 196: limpa_Buffer_Escrita_COMM();
 17032  0076DA  ECCB  F043         	call	_limpa_Buffer_Escrita_COMM	;wreg free
 17033                           
 17034                           ;GERREX.c: 197: limpa_Buffer_Escrita_USB();
 17035  0076DE  ECA9  F043         	call	_limpa_Buffer_Escrita_USB	;wreg free
 17036                           
 17037                           ;GERREX.c: 198: PORTBbits.RB2 = 0;
 17038  0076E2  013F               	movlb	63	; () banked
 17039  0076E4  95CB               	bcf	203,2,b	;volatile
 17040                           
 17041                           ; BSR set to: 63
 17042                           ;GERREX.c: 200: Buffer_Escrita_USB_Add_String("\r\n\r\n>MAC: ", 1);
 17043  0076E6  0E44               	movlw	low STR_69
 17044  0076E8  6E06               	movwf	i1Buffer_Escrita_USB_Add_String@dado,c
 17045  0076EA  0EFF               	movlw	high STR_69
 17046  0076EC  6E07               	movwf	i1Buffer_Escrita_USB_Add_String@dado+1,c
 17047  0076EE  0E00               	movlw	0
 17048  0076F0  6E09               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,c
 17049  0076F2  0E01               	movlw	1
 17050  0076F4  6E08               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda,c
 17051  0076F6  EC04  F038         	call	i1_Buffer_Escrita_USB_Add_String	;wreg free
 17052                           
 17053                           ;GERREX.c: 201: Buffer_Escrita_USB_Add_String(MACAddress, 1);
 17054  0076FA  0EBE               	movlw	low _MACAddress
 17055  0076FC  6E06               	movwf	i1Buffer_Escrita_USB_Add_String@dado,c
 17056  0076FE  0E03               	movlw	high _MACAddress
 17057  007700  6E07               	movwf	i1Buffer_Escrita_USB_Add_String@dado+1,c
 17058  007702  0E00               	movlw	0
 17059  007704  6E09               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,c
 17060  007706  0E01               	movlw	1
 17061  007708  6E08               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda,c
 17062  00770A  EC04  F038         	call	i1_Buffer_Escrita_USB_Add_String	;wreg free
 17063                           
 17064                           ;GERREX.c: 202: Buffer_Escrita_USB_Add_String("\r\n\r\n", 1);
 17065  00770E  0E60               	movlw	low (STR_90+19)
 17066  007710  6E06               	movwf	i1Buffer_Escrita_USB_Add_String@dado,c
 17067  007712  0EFE               	movlw	high (STR_90+19)
 17068  007714  6E07               	movwf	i1Buffer_Escrita_USB_Add_String@dado+1,c
 17069  007716  0E00               	movlw	0
 17070  007718  6E09               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,c
 17071  00771A  0E01               	movlw	1
 17072  00771C  6E08               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda,c
 17073  00771E  EC04  F038         	call	i1_Buffer_Escrita_USB_Add_String	;wreg free
 17074                           
 17075                           ;GERREX.c: 204: PORTBbits.RB2 = 1;
 17076  007722  013F               	movlb	63	; () banked
 17077  007724  85CB               	bsf	203,2,b	;volatile
 17078                           
 17079                           ; BSR set to: 63
 17080                           ;GERREX.c: 206: inicia_Post();
 17081  007726  EC0D  F03E         	call	i1_inicia_Post	;wreg free
 17082  00772A  0012               	return		;funcret
 17083  00772C                     __end_of_SETMACAddr:
 17084                           	opt stack 0
 17085                           
 17086 ;; *************** function _SOCKET_RX *****************
 17087 ;; Defined at:
 17088 ;;		line 293 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 17089 ;; Parameters:    Size  Location     Type
 17090 ;;		None
 17091 ;; Auto vars:     Size  Location     Type
 17092 ;;  i               2   87[COMRAM] int 
 17093 ;; Return value:  Size  Location     Type
 17094 ;;                  1    wreg      void 
 17095 ;; Registers used:
 17096 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17097 ;; Tracked objects:
 17098 ;;		On entry : 0/0
 17099 ;;		On exit  : 0/0
 17100 ;;		Unchanged: 0/0
 17101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17103 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17105 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17106 ;;Total ram usage:        2 bytes
 17107 ;; Hardware stack levels used:    1
 17108 ;; Hardware stack levels required when called:    5
 17109 ;; This function calls:
 17110 ;;		i1_Aguarda_dado
 17111 ;;		i1_Buffer_Escrita_COMM_Add_Char
 17112 ;;		i1_Buffer_Escrita_COMM_Add_String
 17113 ;;		i1_TransmiteBuffer_COMM
 17114 ;; This function is called by:
 17115 ;;		_WIND
 17116 ;;		_SOCKET_QUERY
 17117 ;;		_AguardaINT
 17118 ;; This function uses a non-reentrant model
 17119 ;;
 17120                           
 17121                           	psect	text54
 17122  007B9A                     __ptext54:
 17123                           	opt stack 0
 17124  007B9A                     _SOCKET_RX:
 17125                           	opt stack 16
 17126                           
 17127                           ;GERREX.c: 294: int i = 0;
 17128                           
 17129                           ;incstack = 0
 17130  007B9A  0E00               	movlw	0
 17131  007B9C  6E59               	movwf	SOCKET_RX@i+1,c
 17132  007B9E  0E00               	movlw	0
 17133  007BA0  6E58               	movwf	SOCKET_RX@i,c
 17134                           
 17135                           ;GERREX.c: 305: Buffer_Escrita_COMM_Add_String("AT+S.SOCKR=00,", 0);
 17136  007BA2  0E0E               	movlw	low STR_103
 17137  007BA4  6E06               	movwf	i1Buffer_Escrita_COMM_Add_String@dado,c
 17138  007BA6  0EFF               	movlw	high STR_103
 17139  007BA8  6E07               	movwf	i1Buffer_Escrita_COMM_Add_String@dado+1,c
 17140  007BAA  0E00               	movlw	0
 17141  007BAC  6E09               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda+1,c
 17142  007BAE  0E00               	movlw	0
 17143  007BB0  6E08               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda,c
 17144  007BB2  EC66  F038         	call	i1_Buffer_Escrita_COMM_Add_String	;wreg free
 17145                           
 17146                           ;GERREX.c: 306: while (Aguarda_Resposta[i] != 0x00) {
 17147  007BB6  D00B               	goto	i1l672
 17148  007BB8                     
 17149                           ;GERREX.c: 307: Buffer_Escrita_COMM_Add_Char(Aguarda_Resposta[i]);
 17150  007BB8  0E00               	movlw	low _Aguarda_Resposta
 17151  007BBA  2458               	addwf	SOCKET_RX@i,w,c
 17152  007BBC  6ED9               	movwf	16345,c
 17153  007BBE  0E03               	movlw	high _Aguarda_Resposta
 17154  007BC0  2059               	addwfc	SOCKET_RX@i+1,w,c
 17155  007BC2  6EDA               	movwf	16346,c
 17156  007BC4  50DF               	movf	16351,w,c
 17157  007BC6  EC76  F044         	call	i1_Buffer_Escrita_COMM_Add_Char
 17158                           
 17159                           ;GERREX.c: 308: i++;
 17160  007BCA  4A58               	infsnz	SOCKET_RX@i,f,c
 17161  007BCC  2A59               	incf	SOCKET_RX@i+1,f,c
 17162  007BCE                     i1l672:
 17163  007BCE  0E00               	movlw	low _Aguarda_Resposta
 17164  007BD0  2458               	addwf	SOCKET_RX@i,w,c
 17165  007BD2  6ED9               	movwf	16345,c
 17166  007BD4  0E03               	movlw	high _Aguarda_Resposta
 17167  007BD6  2059               	addwfc	SOCKET_RX@i+1,w,c
 17168  007BD8  6EDA               	movwf	16346,c
 17169  007BDA  50DF               	movf	16351,w,c
 17170  007BDC  A4D8               	btfss	16344,2,c
 17171  007BDE  D7EC               	goto	i1l673
 17172                           
 17173                           ;GERREX.c: 309: }
 17174                           ;GERREX.c: 310: Buffer_Escrita_COMM_Add_Char('\r');
 17175  007BE0  0E0D               	movlw	13
 17176  007BE2  EC76  F044         	call	i1_Buffer_Escrita_COMM_Add_Char
 17177  007BE6  ECC0  F041         	call	i1_TransmiteBuffer_COMM	;wreg free
 17178  007BEA  5004               	movf	?i1_TransmiteBuffer_COMM,w,c
 17179  007BEC  1005               	iorwf	?i1_TransmiteBuffer_COMM+1,w,c
 17180  007BEE  B4D8               	btfsc	16344,2,c
 17181  007BF0  D7FA               	goto	i1l676
 17182                           
 17183                           ;GERREX.c: 313: Aguarda_dado("+WIND:", ":", "", WIND);
 17184  007BF2  0EAF               	movlw	low STR_92
 17185  007BF4  0100               	movlb	0	; () banked
 17186  007BF6  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 17187  007BF8  0EFF               	movlw	high STR_92
 17188  007BFA  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 17189  007BFC  0EC1               	movlw	low (STR_57+4)
 17190  007BFE  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 17191  007C00  0EFF               	movlw	high (STR_57+4)
 17192  007C02  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 17193  007C04  0E64               	movlw	low (STR_90+23)
 17194  007C06  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 17195  007C08  0EFE               	movlw	high (STR_90+23)
 17196  007C0A  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 17197  007C0C  0E52               	movlw	low _WIND
 17198  007C0E  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 17199  007C10  0E81               	movlw	high _WIND
 17200  007C12  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 17201  007C14  EC78  F040         	call	i1_Aguarda_dado	;wreg free
 17202  007C18  0012               	return		;funcret
 17203  007C1A                     __end_of_SOCKET_RX:
 17204                           	opt stack 0
 17205                           
 17206 ;; *************** function _WIND *****************
 17207 ;; Defined at:
 17208 ;;		line 253 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 17209 ;; Parameters:    Size  Location     Type
 17210 ;;		None
 17211 ;; Auto vars:     Size  Location     Type
 17212 ;;		None
 17213 ;; Return value:  Size  Location     Type
 17214 ;;                  1    wreg      void 
 17215 ;; Registers used:
 17216 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17217 ;; Tracked objects:
 17218 ;;		On entry : 0/0
 17219 ;;		On exit  : 0/0
 17220 ;;		Unchanged: 0/0
 17221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17226 ;;Total ram usage:        0 bytes
 17227 ;; Hardware stack levels used:    1
 17228 ;; Hardware stack levels required when called:    5
 17229 ;; This function calls:
 17230 ;;		i1_Aguarda_dado
 17231 ;;		i1_Buffer_Escrita_USB_Add_String
 17232 ;; This function is called by:
 17233 ;;		_SOCKET_RX
 17234 ;;		_Envia_Post_Content
 17235 ;;		_AguardaINT
 17236 ;; This function uses a non-reentrant model
 17237 ;;
 17238                           
 17239                           	psect	text55
 17240  008152                     __ptext55:
 17241                           	opt stack 0
 17242  008152                     _WIND:
 17243                           	opt stack 16
 17244                           
 17245                           ;GERREX.c: 254: if (Aguarda_Resposta[0] == 0x35 && Aguarda_Resposta[1] == 0x35) {
 17246                           
 17247                           ;incstack = 0
 17248  008152  0E35               	movlw	53
 17249  008154  0103               	movlb	3	; () banked
 17250  008156  1900               	xorwf	_Aguarda_Resposta& (0+255),w,b
 17251  008158  A4D8               	btfss	16344,2,c
 17252  00815A  D017               	goto	i1l656
 17253                           
 17254                           ; BSR set to: 3
 17255  00815C  0E35               	movlw	53
 17256  00815E  1901               	xorwf	(_Aguarda_Resposta+1)& (0+255),w,b
 17257  008160  A4D8               	btfss	16344,2,c
 17258  008162  D013               	goto	i1l656
 17259                           
 17260                           ; BSR set to: 3
 17261                           ;GERREX.c: 256: Aguarda_dado(":0:", "\r", "", SOCKET_RX);
 17262  008164  0EDF               	movlw	low STR_95
 17263  008166  0100               	movlb	0	; () banked
 17264  008168  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 17265  00816A  0EFF               	movlw	high STR_95
 17266  00816C  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 17267  00816E  0EC4               	movlw	low (STR_26+29)
 17268  008170  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 17269  008172  0EFD               	movlw	high (STR_26+29)
 17270  008174  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 17271  008176  0E64               	movlw	low (STR_90+23)
 17272  008178  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 17273  00817A  0EFE               	movlw	high (STR_90+23)
 17274  00817C  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 17275  00817E  0E9A               	movlw	low _SOCKET_RX
 17276  008180  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 17277  008182  0E7B               	movlw	high _SOCKET_RX
 17278  008184  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 17279  008186  EC78  F040         	call	i1_Aguarda_dado	;wreg free
 17280  00818A                     i1l656:
 17281                           
 17282                           ;GERREX.c: 257: }
 17283                           ;GERREX.c: 258: if (Aguarda_Resposta[0] == 0x35 && Aguarda_Resposta[1] == 0x38) {
 17284  00818A  0E35               	movlw	53
 17285  00818C  0103               	movlb	3	; () banked
 17286  00818E  1900               	xorwf	_Aguarda_Resposta& (0+255),w,b
 17287  008190  A4D8               	btfss	16344,2,c
 17288  008192  0012               	return	
 17289                           
 17290                           ; BSR set to: 3
 17291  008194  0E38               	movlw	56
 17292  008196  1901               	xorwf	(_Aguarda_Resposta+1)& (0+255),w,b
 17293  008198  A4D8               	btfss	16344,2,c
 17294  00819A  0012               	return	
 17295                           
 17296                           ; BSR set to: 3
 17297                           ;GERREX.c: 259: Buffer_Escrita_USB_Add_String("#", 1);
 17298  00819C  0EF9               	movlw	low STR_98
 17299  00819E  6E06               	movwf	i1Buffer_Escrita_USB_Add_String@dado,c
 17300  0081A0  0EFF               	movlw	high STR_98
 17301  0081A2  6E07               	movwf	i1Buffer_Escrita_USB_Add_String@dado+1,c
 17302  0081A4  0E00               	movlw	0
 17303  0081A6  6E09               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,c
 17304  0081A8  0E01               	movlw	1
 17305  0081AA  6E08               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda,c
 17306  0081AC  EC04  F038         	call	i1_Buffer_Escrita_USB_Add_String	;wreg free
 17307  0081B0  0012               	return	
 17308  0081B2                     __end_of_WIND:
 17309                           	opt stack 0
 17310                           
 17311 ;; *************** function _recebeSIZE *****************
 17312 ;; Defined at:
 17313 ;;		line 181 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 17314 ;; Parameters:    Size  Location     Type
 17315 ;;		None
 17316 ;; Auto vars:     Size  Location     Type
 17317 ;;		None
 17318 ;; Return value:  Size  Location     Type
 17319 ;;                  1    wreg      void 
 17320 ;; Registers used:
 17321 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17322 ;; Tracked objects:
 17323 ;;		On entry : 0/0
 17324 ;;		On exit  : 0/0
 17325 ;;		Unchanged: 0/0
 17326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17329 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17330 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17331 ;;Total ram usage:        2 bytes
 17332 ;; Hardware stack levels used:    1
 17333 ;; Hardware stack levels required when called:    5
 17334 ;; This function calls:
 17335 ;;		i1_Aguarda_dado
 17336 ;; This function is called by:
 17337 ;;		_recebeFRAMES
 17338 ;;		_recebeADDRESS
 17339 ;;		_AguardaINT
 17340 ;; This function uses a non-reentrant model
 17341 ;;
 17342                           
 17343                           	psect	text56
 17344  008486                     __ptext56:
 17345                           	opt stack 0
 17346  008486                     _recebeSIZE:
 17347                           	opt stack 16
 17348                           
 17349                           ;GERREX.c: 182: address[ponteiroFrames] = Aguarda_Resposta[0];
 17350                           
 17351                           ;incstack = 0
 17352  008486  0103               	movlb	3	; () banked
 17353  008488  5100               	movf	_Aguarda_Resposta& (0+255),w,b
 17354  00848A  6E58               	movwf	??_recebeSIZE& (0+255),c
 17355  00848C  6A59               	clrf	(??_recebeSIZE+1)& (0+255),c
 17356  00848E  90D8               	bcf	16344,0,c
 17357  008490  0100               	movlb	0	; () banked
 17358  008492  35D9               	rlcf	_ponteiroFrames& (0+255),w,b
 17359  008494  6ED9               	movwf	16345,c
 17360  008496  35DA               	rlcf	(_ponteiroFrames+1)& (0+255),w,b
 17361  008498  6EDA               	movwf	16346,c
 17362  00849A  0EB4               	movlw	low _address
 17363  00849C  26D9               	addwf	16345,f,c
 17364  00849E  0E04               	movlw	high _address
 17365  0084A0  22DA               	addwfc	16346,f,c
 17366  0084A2  0060  F163  FFDE   	movff	??_recebeSIZE,16350
 17367  0084A8  0060  F167  FFDD   	movff	??_recebeSIZE+1,16349
 17368                           
 17369                           ; BSR set to: 0
 17370                           ;GERREX.c: 183: Aguarda_dado("\":", ",", "", recebeFRAMEID);
 17371  0084AE  0EC0               	movlw	low (STR_57+3)
 17372  0084B0  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 17373  0084B2  0EFF               	movlw	high (STR_57+3)
 17374  0084B4  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 17375  0084B6  0EEB               	movlw	low (STR_52+1)
 17376  0084B8  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 17377  0084BA  0EFF               	movlw	high (STR_52+1)
 17378  0084BC  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 17379  0084BE  0E64               	movlw	low (STR_90+23)
 17380  0084C0  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 17381  0084C2  0EFE               	movlw	high (STR_90+23)
 17382  0084C4  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 17383  0084C6  0E96               	movlw	low _recebeFRAMEID
 17384  0084C8  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 17385  0084CA  0E7C               	movlw	high _recebeFRAMEID
 17386  0084CC  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 17387  0084CE  EC78  F040         	call	i1_Aguarda_dado	;wreg free
 17388                           
 17389                           ;GERREX.c: 184: ponteiroFrames++;
 17390  0084D2  0100               	movlb	0	; () banked
 17391  0084D4  4BD9               	infsnz	_ponteiroFrames& (0+255),f,b
 17392  0084D6  2BDA               	incf	(_ponteiroFrames+1)& (0+255),f,b
 17393                           
 17394                           ; BSR set to: 0
 17395  0084D8  0012               	return		;funcret
 17396  0084DA                     __end_of_recebeSIZE:
 17397                           	opt stack 0
 17398                           
 17399 ;; *************** function _recebeADDRESS *****************
 17400 ;; Defined at:
 17401 ;;		line 176 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 17402 ;; Parameters:    Size  Location     Type
 17403 ;;		None
 17404 ;; Auto vars:     Size  Location     Type
 17405 ;;		None
 17406 ;; Return value:  Size  Location     Type
 17407 ;;                  1    wreg      void 
 17408 ;; Registers used:
 17409 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17410 ;; Tracked objects:
 17411 ;;		On entry : 0/0
 17412 ;;		On exit  : 0/0
 17413 ;;		Unchanged: 0/0
 17414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17417 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17419 ;;Total ram usage:        2 bytes
 17420 ;; Hardware stack levels used:    1
 17421 ;; Hardware stack levels required when called:    5
 17422 ;; This function calls:
 17423 ;;		i1_Aguarda_dado
 17424 ;; This function is called by:
 17425 ;;		_recebeFRAMES
 17426 ;;		_recebeFUNCTIONCODE
 17427 ;;		_AguardaINT
 17428 ;; This function uses a non-reentrant model
 17429 ;;
 17430                           
 17431                           	psect	text57
 17432  008622                     __ptext57:
 17433                           	opt stack 0
 17434  008622                     _recebeADDRESS:
 17435                           	opt stack 15
 17436                           
 17437                           ;GERREX.c: 177: functionCode[ponteiroFrames] = Aguarda_Resposta[0];
 17438                           
 17439                           ; BSR set to: 0
 17440                           ;incstack = 0
 17441  008622  0103               	movlb	3	; () banked
 17442  008624  5100               	movf	_Aguarda_Resposta& (0+255),w,b
 17443  008626  6E58               	movwf	??_recebeADDRESS& (0+255),c
 17444  008628  6A59               	clrf	(??_recebeADDRESS+1)& (0+255),c
 17445  00862A  90D8               	bcf	16344,0,c
 17446  00862C  0100               	movlb	0	; () banked
 17447  00862E  35D9               	rlcf	_ponteiroFrames& (0+255),w,b
 17448  008630  6ED9               	movwf	16345,c
 17449  008632  35DA               	rlcf	(_ponteiroFrames+1)& (0+255),w,b
 17450  008634  6EDA               	movwf	16346,c
 17451  008636  0EA0               	movlw	low _functionCode
 17452  008638  26D9               	addwf	16345,f,c
 17453  00863A  0E05               	movlw	high _functionCode
 17454  00863C  22DA               	addwfc	16346,f,c
 17455  00863E  0060  F163  FFDE   	movff	??_recebeADDRESS,16350
 17456  008644  0060  F167  FFDD   	movff	??_recebeADDRESS+1,16349
 17457                           
 17458                           ; BSR set to: 0
 17459                           ;GERREX.c: 178: Aguarda_dado("ess\":", "\",", "", recebeSIZE);
 17460  00864A  0EC3               	movlw	low STR_63
 17461  00864C  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 17462  00864E  0EFF               	movlw	high STR_63
 17463  008650  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 17464  008652  0EEA               	movlw	low STR_52
 17465  008654  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 17466  008656  0EFF               	movlw	high STR_52
 17467  008658  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 17468  00865A  0E64               	movlw	low (STR_90+23)
 17469  00865C  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 17470  00865E  0EFE               	movlw	high (STR_90+23)
 17471  008660  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 17472  008662  0E86               	movlw	low _recebeSIZE
 17473  008664  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 17474  008666  0E84               	movlw	high _recebeSIZE
 17475  008668  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 17476  00866A  EC78  F040         	call	i1_Aguarda_dado	;wreg free
 17477  00866E  0012               	return		;funcret
 17478  008670                     __end_of_recebeADDRESS:
 17479                           	opt stack 0
 17480                           
 17481 ;; *************** function _recebeFUNCTIONCODE *****************
 17482 ;; Defined at:
 17483 ;;		line 171 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 17484 ;; Parameters:    Size  Location     Type
 17485 ;;		None
 17486 ;; Auto vars:     Size  Location     Type
 17487 ;;		None
 17488 ;; Return value:  Size  Location     Type
 17489 ;;                  1    wreg      void 
 17490 ;; Registers used:
 17491 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17492 ;; Tracked objects:
 17493 ;;		On entry : 0/0
 17494 ;;		On exit  : 0/0
 17495 ;;		Unchanged: 0/0
 17496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17499 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17500 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17501 ;;Total ram usage:        2 bytes
 17502 ;; Hardware stack levels used:    1
 17503 ;; Hardware stack levels required when called:    5
 17504 ;; This function calls:
 17505 ;;		i1_Aguarda_dado
 17506 ;; This function is called by:
 17507 ;;		_recebeFRAMES
 17508 ;;		_recebeNODEID
 17509 ;;		_AguardaINT
 17510 ;; This function uses a non-reentrant model
 17511 ;;
 17512                           
 17513                           	psect	text58
 17514  008670                     __ptext58:
 17515                           	opt stack 0
 17516  008670                     _recebeFUNCTIONCODE:
 17517                           	opt stack 16
 17518                           
 17519                           ;GERREX.c: 172: nodeId[ponteiroFrames] = Aguarda_Resposta[0];
 17520                           
 17521                           ;incstack = 0
 17522  008670  0103               	movlb	3	; () banked
 17523  008672  5100               	movf	_Aguarda_Resposta& (0+255),w,b
 17524  008674  6E58               	movwf	??_recebeFUNCTIONCODE& (0+255),c
 17525  008676  6A59               	clrf	(??_recebeFUNCTIONCODE+1)& (0+255),c
 17526  008678  90D8               	bcf	16344,0,c
 17527  00867A  0100               	movlb	0	; () banked
 17528  00867C  35D9               	rlcf	_ponteiroFrames& (0+255),w,b
 17529  00867E  6ED9               	movwf	16345,c
 17530  008680  35DA               	rlcf	(_ponteiroFrames+1)& (0+255),w,b
 17531  008682  6EDA               	movwf	16346,c
 17532  008684  0E00               	movlw	low _nodeId
 17533  008686  26D9               	addwf	16345,f,c
 17534  008688  0E04               	movlw	high _nodeId
 17535  00868A  22DA               	addwfc	16346,f,c
 17536  00868C  0060  F163  FFDE   	movff	??_recebeFUNCTIONCODE,16350
 17537  008692  0060  F167  FFDD   	movff	??_recebeFUNCTIONCODE+1,16349
 17538                           
 17539                           ; BSR set to: 0
 17540                           ;GERREX.c: 173: Aguarda_dado("Code\":", ",", "", recebeADDRESS);
 17541  008698  0EA8               	movlw	low STR_60
 17542  00869A  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 17543  00869C  0EFF               	movlw	high STR_60
 17544  00869E  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 17545  0086A0  0EEB               	movlw	low (STR_52+1)
 17546  0086A2  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 17547  0086A4  0EFF               	movlw	high (STR_52+1)
 17548  0086A6  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 17549  0086A8  0E64               	movlw	low (STR_90+23)
 17550  0086AA  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 17551  0086AC  0EFE               	movlw	high (STR_90+23)
 17552  0086AE  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 17553  0086B0  0E22               	movlw	low _recebeADDRESS
 17554  0086B2  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 17555  0086B4  0E86               	movlw	high _recebeADDRESS
 17556  0086B6  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 17557  0086B8  EC78  F040         	call	i1_Aguarda_dado	;wreg free
 17558  0086BC  0012               	return		;funcret
 17559  0086BE                     __end_of_recebeFUNCTIONCODE:
 17560                           	opt stack 0
 17561                           
 17562 ;; *************** function _recebeNODEID *****************
 17563 ;; Defined at:
 17564 ;;		line 166 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 17565 ;; Parameters:    Size  Location     Type
 17566 ;;		None
 17567 ;; Auto vars:     Size  Location     Type
 17568 ;;		None
 17569 ;; Return value:  Size  Location     Type
 17570 ;;                  1    wreg      void 
 17571 ;; Registers used:
 17572 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17573 ;; Tracked objects:
 17574 ;;		On entry : 0/0
 17575 ;;		On exit  : 0/0
 17576 ;;		Unchanged: 0/0
 17577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17580 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17582 ;;Total ram usage:        2 bytes
 17583 ;; Hardware stack levels used:    1
 17584 ;; Hardware stack levels required when called:    5
 17585 ;; This function calls:
 17586 ;;		i1_Aguarda_dado
 17587 ;; This function is called by:
 17588 ;;		_recebeFRAMES
 17589 ;;		_recebeNETWORKID
 17590 ;;		_AguardaINT
 17591 ;; This function uses a non-reentrant model
 17592 ;;
 17593                           
 17594                           	psect	text59
 17595  0086BE                     __ptext59:
 17596                           	opt stack 0
 17597  0086BE                     _recebeNODEID:
 17598                           	opt stack 16
 17599                           
 17600                           ;GERREX.c: 167: networkId[ponteiroFrames] = Aguarda_Resposta[0];
 17601                           
 17602                           ;incstack = 0
 17603  0086BE  0103               	movlb	3	; () banked
 17604  0086C0  5100               	movf	_Aguarda_Resposta& (0+255),w,b
 17605  0086C2  6E58               	movwf	??_recebeNODEID& (0+255),c
 17606  0086C4  6A59               	clrf	(??_recebeNODEID+1)& (0+255),c
 17607  0086C6  90D8               	bcf	16344,0,c
 17608  0086C8  0100               	movlb	0	; () banked
 17609  0086CA  35D9               	rlcf	_ponteiroFrames& (0+255),w,b
 17610  0086CC  6ED9               	movwf	16345,c
 17611  0086CE  35DA               	rlcf	(_ponteiroFrames+1)& (0+255),w,b
 17612  0086D0  6EDA               	movwf	16346,c
 17613  0086D2  0E3C               	movlw	low _networkId
 17614  0086D4  26D9               	addwf	16345,f,c
 17615  0086D6  0E04               	movlw	high _networkId
 17616  0086D8  22DA               	addwfc	16346,f,c
 17617  0086DA  0060  F163  FFDE   	movff	??_recebeNODEID,16350
 17618  0086E0  0060  F167  FFDD   	movff	??_recebeNODEID+1,16349
 17619                           
 17620                           ; BSR set to: 0
 17621                           ;GERREX.c: 168: Aguarda_dado("eId\":", ",", "", recebeFUNCTIONCODE);
 17622  0086E6  0EBD               	movlw	low STR_57
 17623  0086E8  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 17624  0086EA  0EFF               	movlw	high STR_57
 17625  0086EC  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 17626  0086EE  0EEB               	movlw	low (STR_52+1)
 17627  0086F0  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 17628  0086F2  0EFF               	movlw	high (STR_52+1)
 17629  0086F4  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 17630  0086F6  0E64               	movlw	low (STR_90+23)
 17631  0086F8  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 17632  0086FA  0EFE               	movlw	high (STR_90+23)
 17633  0086FC  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 17634  0086FE  0E70               	movlw	low _recebeFUNCTIONCODE
 17635  008700  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 17636  008702  0E86               	movlw	high _recebeFUNCTIONCODE
 17637  008704  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 17638  008706  EC78  F040         	call	i1_Aguarda_dado	;wreg free
 17639  00870A  0012               	return		;funcret
 17640  00870C                     __end_of_recebeNODEID:
 17641                           	opt stack 0
 17642                           
 17643 ;; *************** function _recebeNETWORKID *****************
 17644 ;; Defined at:
 17645 ;;		line 152 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 17646 ;; Parameters:    Size  Location     Type
 17647 ;;		None
 17648 ;; Auto vars:     Size  Location     Type
 17649 ;;  para            2   94[BANK0 ] int 
 17650 ;;  i               2   96[BANK0 ] int 
 17651 ;; Return value:  Size  Location     Type
 17652 ;;                  1    wreg      void 
 17653 ;; Registers used:
 17654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17655 ;; Tracked objects:
 17656 ;;		On entry : 0/0
 17657 ;;		On exit  : 0/0
 17658 ;;		Unchanged: 0/0
 17659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17661 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17662 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17663 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17664 ;;Total ram usage:        6 bytes
 17665 ;; Hardware stack levels used:    1
 17666 ;; Hardware stack levels required when called:    5
 17667 ;; This function calls:
 17668 ;;		i1_Aguarda_dado
 17669 ;;		i1___wmul
 17670 ;; This function is called by:
 17671 ;;		_recebeFRAMES
 17672 ;;		_recebeFRAMEID
 17673 ;;		_AguardaINT
 17674 ;; This function uses a non-reentrant model
 17675 ;;
 17676                           
 17677                           	psect	text60
 17678  006BD4                     __ptext60:
 17679                           	opt stack 0
 17680  006BD4                     _recebeNETWORKID:
 17681                           	opt stack 16
 17682                           
 17683                           ;GERREX.c: 153: int i = 0;
 17684                           
 17685                           ;incstack = 0
 17686  006BD4  0E00               	movlw	0
 17687  006BD6  0100               	movlb	0	; () banked
 17688  006BD8  6FC1               	movwf	(recebeNETWORKID@i+1)& (0+255),b
 17689  006BDA  0E00               	movlw	0
 17690  006BDC  6FC0               	movwf	recebeNETWORKID@i& (0+255),b
 17691                           
 17692                           ;GERREX.c: 154: while (Aguarda_Resposta[i] != 0x00) {
 17693  006BDE  D035               	goto	i1l616
 17694  006BE0                     
 17695                           ; BSR set to: 0
 17696                           ;GERREX.c: 155: if (ponteiroFrames > 0) {
 17697                           
 17698                           ; BSR set to: 0
 17699  006BE0  BFDA               	btfsc	(_ponteiroFrames+1)& (0+255),7,b
 17700  006BE2  D00D               	goto	i1l618
 17701  006BE4  51DA               	movf	(_ponteiroFrames+1)& (0+255),w,b
 17702  006BE6  E103               	bnz	i1u1864_20
 17703  006BE8  05D9               	decf	_ponteiroFrames& (0+255),w,b
 17704  006BEA  A0D8               	btfss	16344,0,c
 17705  006BEC  D008               	goto	i1l618
 17706  006BEE                     i1u1864_20:
 17707                           
 17708                           ; BSR set to: 0
 17709                           ;GERREX.c: 156: int para = 0;
 17710  006BEE  0E00               	movlw	0
 17711  006BF0  6FBF               	movwf	(recebeNETWORKID@para+1)& (0+255),b
 17712  006BF2  0E00               	movlw	0
 17713  006BF4  6FBE               	movwf	recebeNETWORKID@para& (0+255),b
 17714                           
 17715                           ;GERREX.c: 157: para = 1;
 17716  006BF6  0E00               	movlw	0
 17717  006BF8  6FBF               	movwf	(recebeNETWORKID@para+1)& (0+255),b
 17718  006BFA  0E01               	movlw	1
 17719  006BFC  6FBE               	movwf	recebeNETWORKID@para& (0+255),b
 17720  006BFE                     i1l618:
 17721                           
 17722                           ; BSR set to: 0
 17723                           ;GERREX.c: 158: }
 17724                           ;GERREX.c: 159: frameId[ponteiroFrames][i] = Aguarda_Resposta[i];
 17725                           
 17726                           ; BSR set to: 0
 17727  006BFE  0E00               	movlw	low _Aguarda_Resposta
 17728  006C00  25C0               	addwf	recebeNETWORKID@i& (0+255),w,b
 17729  006C02  6ED9               	movwf	16345,c
 17730  006C04  0E03               	movlw	high _Aguarda_Resposta
 17731  006C06  21C1               	addwfc	(recebeNETWORKID@i+1)& (0+255),w,b
 17732  006C08  6EDA               	movwf	16346,c
 17733  006C0A  0060  F364  F012   	movff	_ponteiroFrames,i1___wmul@multiplier
 17734  006C10  0060  F368  F013   	movff	_ponteiroFrames+1,i1___wmul@multiplier+1
 17735  006C16  0E00               	movlw	0
 17736  006C18  6E15               	movwf	i1___wmul@multiplicand+1,c
 17737  006C1A  0E25               	movlw	37
 17738  006C1C  6E14               	movwf	i1___wmul@multiplicand,c
 17739  006C1E  ECC0  F044         	call	i1___wmul	;wreg free
 17740  006C22  0E96               	movlw	low _frameId
 17741  006C24  6E58               	movwf	??_recebeNETWORKID& (0+255),c
 17742  006C26  0E0A               	movlw	high _frameId
 17743  006C28  6E59               	movwf	(??_recebeNETWORKID+1)& (0+255),c
 17744  006C2A  5012               	movf	?i1___wmul,w,c
 17745  006C2C  2658               	addwf	??_recebeNETWORKID,f,c
 17746  006C2E  5013               	movf	?i1___wmul+1,w,c
 17747  006C30  2259               	addwfc	??_recebeNETWORKID+1,f,c
 17748  006C32  0100               	movlb	0	; () banked
 17749  006C34  51C0               	movf	recebeNETWORKID@i& (0+255),w,b
 17750  006C36  2458               	addwf	??_recebeNETWORKID,w,c
 17751  006C38  6EE1               	movwf	16353,c
 17752  006C3A  51C1               	movf	(recebeNETWORKID@i+1)& (0+255),w,b
 17753  006C3C  2059               	addwfc	??_recebeNETWORKID+1,w,c
 17754  006C3E  6EE2               	movwf	16354,c
 17755  006C40  006F FF7F FFE7     	movff	16351,16359
 17756                           
 17757                           ; BSR set to: 0
 17758                           ;GERREX.c: 160: i++;
 17759  006C46  4BC0               	infsnz	recebeNETWORKID@i& (0+255),f,b
 17760  006C48  2BC1               	incf	(recebeNETWORKID@i+1)& (0+255),f,b
 17761  006C4A                     i1l616:
 17762                           
 17763                           ; BSR set to: 0
 17764                           
 17765                           ; BSR set to: 0
 17766  006C4A  0E00               	movlw	low _Aguarda_Resposta
 17767  006C4C  25C0               	addwf	recebeNETWORKID@i& (0+255),w,b
 17768  006C4E  6ED9               	movwf	16345,c
 17769  006C50  0E03               	movlw	high _Aguarda_Resposta
 17770  006C52  21C1               	addwfc	(recebeNETWORKID@i+1)& (0+255),w,b
 17771  006C54  6EDA               	movwf	16346,c
 17772  006C56  50DF               	movf	16351,w,c
 17773  006C58  A4D8               	btfss	16344,2,c
 17774  006C5A  D7C2               	goto	i1l617
 17775                           
 17776                           ; BSR set to: 0
 17777                           ;GERREX.c: 161: }
 17778                           ;GERREX.c: 162: frameId[ponteiroFrames][i] = 0x00;
 17779                           
 17780                           ; BSR set to: 0
 17781  006C5C  0060  F364  F012   	movff	_ponteiroFrames,i1___wmul@multiplier
 17782  006C62  0060  F368  F013   	movff	_ponteiroFrames+1,i1___wmul@multiplier+1
 17783  006C68  0E00               	movlw	0
 17784  006C6A  6E15               	movwf	i1___wmul@multiplicand+1,c
 17785  006C6C  0E25               	movlw	37
 17786  006C6E  6E14               	movwf	i1___wmul@multiplicand,c
 17787  006C70  ECC0  F044         	call	i1___wmul	;wreg free
 17788  006C74  0E96               	movlw	low _frameId
 17789  006C76  6E58               	movwf	??_recebeNETWORKID& (0+255),c
 17790  006C78  0E0A               	movlw	high _frameId
 17791  006C7A  6E59               	movwf	(??_recebeNETWORKID+1)& (0+255),c
 17792  006C7C  5012               	movf	?i1___wmul,w,c
 17793  006C7E  2658               	addwf	??_recebeNETWORKID,f,c
 17794  006C80  5013               	movf	?i1___wmul+1,w,c
 17795  006C82  2259               	addwfc	??_recebeNETWORKID+1,f,c
 17796  006C84  0100               	movlb	0	; () banked
 17797  006C86  51C0               	movf	recebeNETWORKID@i& (0+255),w,b
 17798  006C88  2458               	addwf	??_recebeNETWORKID,w,c
 17799  006C8A  6ED9               	movwf	16345,c
 17800  006C8C  51C1               	movf	(recebeNETWORKID@i+1)& (0+255),w,b
 17801  006C8E  2059               	addwfc	??_recebeNETWORKID+1,w,c
 17802  006C90  6EDA               	movwf	16346,c
 17803  006C92  0E00               	movlw	0
 17804  006C94  6EDF               	movwf	16351,c
 17805                           
 17806                           ; BSR set to: 0
 17807                           ;GERREX.c: 163: Aguarda_dado("rkId\":", ",", "", recebeNODEID);
 17808  006C96  0EA1               	movlw	low STR_54
 17809  006C98  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 17810  006C9A  0EFF               	movlw	high STR_54
 17811  006C9C  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 17812  006C9E  0EEB               	movlw	low (STR_52+1)
 17813  006CA0  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 17814  006CA2  0EFF               	movlw	high (STR_52+1)
 17815  006CA4  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 17816  006CA6  0E64               	movlw	low (STR_90+23)
 17817  006CA8  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 17818  006CAA  0EFE               	movlw	high (STR_90+23)
 17819  006CAC  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 17820  006CAE  0EBE               	movlw	low _recebeNODEID
 17821  006CB0  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 17822  006CB2  0E86               	movlw	high _recebeNODEID
 17823  006CB4  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 17824  006CB6  EC78  F040         	call	i1_Aguarda_dado	;wreg free
 17825  006CBA  0012               	return		;funcret
 17826  006CBC                     __end_of_recebeNETWORKID:
 17827                           	opt stack 0
 17828                           
 17829 ;; *************** function _recebeFRAMEID *****************
 17830 ;; Defined at:
 17831 ;;		line 145 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 17832 ;; Parameters:    Size  Location     Type
 17833 ;;		None
 17834 ;; Auto vars:     Size  Location     Type
 17835 ;;		None
 17836 ;; Return value:  Size  Location     Type
 17837 ;;                  1    wreg      void 
 17838 ;; Registers used:
 17839 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17840 ;; Tracked objects:
 17841 ;;		On entry : 0/0
 17842 ;;		On exit  : 0/0
 17843 ;;		Unchanged: 0/0
 17844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17847 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17848 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17849 ;;Total ram usage:        6 bytes
 17850 ;; Hardware stack levels used:    1
 17851 ;; Hardware stack levels required when called:    5
 17852 ;; This function calls:
 17853 ;;		i1_Aguarda_dado
 17854 ;; This function is called by:
 17855 ;;		_recebeFRAMES
 17856 ;;		_recebeSIZE
 17857 ;;		_AguardaINT
 17858 ;; This function uses a non-reentrant model
 17859 ;;
 17860                           
 17861                           	psect	text61
 17862  007C96                     __ptext61:
 17863                           	opt stack 0
 17864  007C96                     _recebeFRAMEID:
 17865                           	opt stack 15
 17866                           
 17867                           ;GERREX.c: 146: if (ponteiroFrames > 0) {
 17868                           
 17869                           ;incstack = 0
 17870  007C96  0100               	movlb	0	; () banked
 17871  007C98  BFDA               	btfsc	(_ponteiroFrames+1)& (0+255),7,b
 17872  007C9A  D027               	goto	i1l612
 17873  007C9C  51DA               	movf	(_ponteiroFrames+1)& (0+255),w,b
 17874  007C9E  E103               	bnz	i1u1863_20
 17875  007CA0  05D9               	decf	_ponteiroFrames& (0+255),w,b
 17876  007CA2  A0D8               	btfss	16344,0,c
 17877  007CA4  D022               	goto	i1l612
 17878  007CA6                     i1u1863_20:
 17879                           
 17880                           ; BSR set to: 0
 17881                           ;GERREX.c: 147: size[ponteiroFrames - 1] = Aguarda_Resposta[0];
 17882  007CA6  0103               	movlb	3	; () banked
 17883  007CA8  5100               	movf	_Aguarda_Resposta& (0+255),w,b
 17884  007CAA  0100               	movlb	0	; () banked
 17885  007CAC  6FBE               	movwf	??_recebeFRAMEID& (0+255),b
 17886  007CAE  6BBF               	clrf	(??_recebeFRAMEID+1)& (0+255),b
 17887  007CB0  0EFE               	movlw	254
 17888  007CB2  6FC0               	movwf	(??_recebeFRAMEID+2)& (0+255),b
 17889  007CB4  0EFF               	movlw	255
 17890  007CB6  6FC1               	movwf	(??_recebeFRAMEID+3)& (0+255),b
 17891  007CB8  0060  F364  F0C2   	movff	_ponteiroFrames,??_recebeFRAMEID+4
 17892  007CBE  0060  F368  F0C3   	movff	_ponteiroFrames+1,??_recebeFRAMEID+5
 17893  007CC4  90D8               	bcf	16344,0,c
 17894  007CC6  37C2               	rlcf	(??_recebeFRAMEID+4)& (0+255),f,b
 17895  007CC8  37C3               	rlcf	(??_recebeFRAMEID+5)& (0+255),f,b
 17896  007CCA  51C0               	movf	(??_recebeFRAMEID+2)& (0+255),w,b
 17897  007CCC  27C2               	addwf	(??_recebeFRAMEID+4)& (0+255),f,b
 17898  007CCE  51C1               	movf	(??_recebeFRAMEID+3)& (0+255),w,b
 17899  007CD0  23C3               	addwfc	(??_recebeFRAMEID+5)& (0+255),f,b
 17900  007CD2  0E64               	movlw	low _size
 17901  007CD4  25C2               	addwf	(??_recebeFRAMEID+4)& (0+255),w,b
 17902  007CD6  6ED9               	movwf	16345,c
 17903  007CD8  0E05               	movlw	high _size
 17904  007CDA  21C3               	addwfc	(??_recebeFRAMEID+5)& (0+255),w,b
 17905  007CDC  6EDA               	movwf	16346,c
 17906  007CDE  0060  F2FB  FFDE   	movff	??_recebeFRAMEID,16350
 17907  007CE4  0060  F2FF  FFDD   	movff	??_recebeFRAMEID+1,16349
 17908  007CEA                     i1l612:
 17909                           
 17910                           ; BSR set to: 0
 17911                           ;GERREX.c: 148: }
 17912                           ;GERREX.c: 149: Aguarda_dado("meId\":\"", "\",", "", recebeNETWORKID);
 17913                           
 17914                           ; BSR set to: 0
 17915  007CEA  0E8B               	movlw	low STR_51
 17916  007CEC  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 17917  007CEE  0EFF               	movlw	high STR_51
 17918  007CF0  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 17919  007CF2  0EEA               	movlw	low STR_52
 17920  007CF4  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 17921  007CF6  0EFF               	movlw	high STR_52
 17922  007CF8  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 17923  007CFA  0E64               	movlw	low (STR_90+23)
 17924  007CFC  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 17925  007CFE  0EFE               	movlw	high (STR_90+23)
 17926  007D00  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 17927  007D02  0ED4               	movlw	low _recebeNETWORKID
 17928  007D04  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 17929  007D06  0E6B               	movlw	high _recebeNETWORKID
 17930  007D08  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 17931  007D0A  EC78  F040         	call	i1_Aguarda_dado	;wreg free
 17932  007D0E  0012               	return		;funcret
 17933  007D10                     __end_of_recebeFRAMEID:
 17934                           	opt stack 0
 17935                           
 17936 ;; *************** function _recebe *****************
 17937 ;; Defined at:
 17938 ;;		line 137 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
 17939 ;; Parameters:    Size  Location     Type
 17940 ;;		None
 17941 ;; Auto vars:     Size  Location     Type
 17942 ;;		None
 17943 ;; Return value:  Size  Location     Type
 17944 ;;                  1    wreg      void 
 17945 ;; Registers used:
 17946 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17947 ;; Tracked objects:
 17948 ;;		On entry : 0/0
 17949 ;;		On exit  : 0/0
 17950 ;;		Unchanged: 0/0
 17951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17956 ;;Total ram usage:        0 bytes
 17957 ;; Hardware stack levels used:    1
 17958 ;; Hardware stack levels required when called:    5
 17959 ;; This function calls:
 17960 ;;		i1_Aguarda_dado
 17961 ;;		i1_Buffer_Escrita_COMM_Add_String
 17962 ;; This function is called by:
 17963 ;;		_Post2
 17964 ;;		_AguardaINT
 17965 ;; This function uses a non-reentrant model
 17966 ;;
 17967                           
 17968                           	psect	text62
 17969  0085D2                     __ptext62:
 17970                           	opt stack 0
 17971  0085D2                     _recebe:
 17972                           	opt stack 16
 17973                           
 17974                           ;Wifi.c: 138: Buffer_Escrita_COMM_Add_String("AT+S.FSP=retorno.json,0,", 1);
 17975                           
 17976                           ;incstack = 0
 17977  0085D2  0E34               	movlw	low STR_34
 17978  0085D4  6E06               	movwf	i1Buffer_Escrita_COMM_Add_String@dado,c
 17979  0085D6  0EFE               	movlw	high STR_34
 17980  0085D8  6E07               	movwf	i1Buffer_Escrita_COMM_Add_String@dado+1,c
 17981  0085DA  0E00               	movlw	0
 17982  0085DC  6E09               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda+1,c
 17983  0085DE  0E01               	movlw	1
 17984  0085E0  6E08               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda,c
 17985  0085E2  EC66  F038         	call	i1_Buffer_Escrita_COMM_Add_String	;wreg free
 17986                           
 17987                           ;Wifi.c: 139: Buffer_Escrita_COMM_Add_String("100000\r", 1);
 17988  0085E6  0EBE               	movlw	low (STR_26+23)
 17989  0085E8  6E06               	movwf	i1Buffer_Escrita_COMM_Add_String@dado,c
 17990  0085EA  0EFD               	movlw	high (STR_26+23)
 17991  0085EC  6E07               	movwf	i1Buffer_Escrita_COMM_Add_String@dado+1,c
 17992  0085EE  0E00               	movlw	0
 17993  0085F0  6E09               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda+1,c
 17994  0085F2  0E01               	movlw	1
 17995  0085F4  6E08               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda,c
 17996  0085F6  EC66  F038         	call	i1_Buffer_Escrita_COMM_Add_String	;wreg free
 17997                           
 17998                           ;Wifi.c: 140: Aguarda_dado("Read Cap:", "\r", "", recebeFRAMES);
 17999  0085FA  0E6D               	movlw	low STR_36
 18000  0085FC  0100               	movlb	0	; () banked
 18001  0085FE  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 18002  008600  0EFF               	movlw	high STR_36
 18003  008602  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 18004  008604  0EC4               	movlw	low (STR_26+29)
 18005  008606  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 18006  008608  0EFD               	movlw	high (STR_26+29)
 18007  00860A  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 18008  00860C  0E64               	movlw	low (STR_90+23)
 18009  00860E  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 18010  008610  0EFE               	movlw	high (STR_90+23)
 18011  008612  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 18012  008614  0E2C               	movlw	low _recebeFRAMES
 18013  008616  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 18014  008618  0E59               	movlw	high _recebeFRAMES
 18015  00861A  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 18016  00861C  EC78  F040         	call	i1_Aguarda_dado	;wreg free
 18017  008620  0012               	return		;funcret
 18018  008622                     __end_of_recebe:
 18019                           	opt stack 0
 18020                           
 18021 ;; *************** function _Post2 *****************
 18022 ;; Defined at:
 18023 ;;		line 123 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
 18024 ;; Parameters:    Size  Location     Type
 18025 ;;		None
 18026 ;; Auto vars:     Size  Location     Type
 18027 ;;		None
 18028 ;; Return value:  Size  Location     Type
 18029 ;;                  1    wreg      void 
 18030 ;; Registers used:
 18031 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18032 ;; Tracked objects:
 18033 ;;		On entry : 0/0
 18034 ;;		On exit  : 0/0
 18035 ;;		Unchanged: 0/0
 18036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18041 ;;Total ram usage:        0 bytes
 18042 ;; Hardware stack levels used:    1
 18043 ;; Hardware stack levels required when called:    5
 18044 ;; This function calls:
 18045 ;;		i1_Aguarda_dado
 18046 ;;		i1_Buffer_Escrita_COMM_Add_String
 18047 ;; This function is called by:
 18048 ;;		_Post
 18049 ;;		_AguardaINT
 18050 ;; This function uses a non-reentrant model
 18051 ;;
 18052                           
 18053                           	psect	text63
 18054  008816                     __ptext63:
 18055                           	opt stack 0
 18056  008816                     _Post2:
 18057                           	opt stack 16
 18058                           
 18059                           ;Wifi.c: 124: Buffer_Escrita_COMM_Add_String("AT+S.HTTPPOST=services.gerrex.com.br,/serv
      +                          ice/task,80,,,,retorno.json,gerrex.json\r\n", 1);
 18060                           
 18061                           ;incstack = 0
 18062  008816  0E52               	movlw	low STR_30
 18063  008818  6E06               	movwf	i1Buffer_Escrita_COMM_Add_String@dado,c
 18064  00881A  0EFC               	movlw	high STR_30
 18065  00881C  6E07               	movwf	i1Buffer_Escrita_COMM_Add_String@dado+1,c
 18066  00881E  0E00               	movlw	0
 18067  008820  6E09               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda+1,c
 18068  008822  0E01               	movlw	1
 18069  008824  6E08               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda,c
 18070  008826  EC66  F038         	call	i1_Buffer_Escrita_COMM_Add_String	;wreg free
 18071                           
 18072                           ;Wifi.c: 125: Aguarda_dado("AT", "OK", "", recebe);
 18073  00882A  0EF6               	movlw	low STR_27
 18074  00882C  0100               	movlb	0	; () banked
 18075  00882E  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 18076  008830  0EFF               	movlw	high STR_27
 18077  008832  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 18078  008834  0EF0               	movlw	low STR_28
 18079  008836  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 18080  008838  0EFF               	movlw	high STR_28
 18081  00883A  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 18082  00883C  0E64               	movlw	low (STR_90+23)
 18083  00883E  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 18084  008840  0EFE               	movlw	high (STR_90+23)
 18085  008842  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 18086  008844  0ED2               	movlw	low _recebe
 18087  008846  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 18088  008848  0E85               	movlw	high _recebe
 18089  00884A  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 18090  00884C  EC78  F040         	call	i1_Aguarda_dado	;wreg free
 18091  008850  0012               	return		;funcret
 18092  008852                     __end_of_Post2:
 18093                           	opt stack 0
 18094                           
 18095 ;; *************** function _nada *****************
 18096 ;; Defined at:
 18097 ;;		line 226 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 18098 ;; Parameters:    Size  Location     Type
 18099 ;;		None
 18100 ;; Auto vars:     Size  Location     Type
 18101 ;;		None
 18102 ;; Return value:  Size  Location     Type
 18103 ;;                  1    wreg      void 
 18104 ;; Registers used:
 18105 ;;		None
 18106 ;; Tracked objects:
 18107 ;;		On entry : 0/0
 18108 ;;		On exit  : 0/0
 18109 ;;		Unchanged: 0/0
 18110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18115 ;;Total ram usage:        0 bytes
 18116 ;; Hardware stack levels used:    1
 18117 ;; This function calls:
 18118 ;;		Nothing
 18119 ;; This function is called by:
 18120 ;;		_Post
 18121 ;;		_recebeFRAMES
 18122 ;;		_AguardaINT
 18123 ;; This function uses a non-reentrant model
 18124 ;;
 18125                           
 18126                           	psect	text64
 18127  008AF2                     __ptext64:
 18128                           	opt stack 0
 18129  008AF2                     _nada:
 18130                           	opt stack 21
 18131                           
 18132                           ;GERREX.c: 227: return;
 18133                           
 18134                           ;incstack = 0
 18135  008AF2  0012               	return		;funcret
 18136  008AF4                     __end_of_nada:
 18137                           	opt stack 0
 18138                           
 18139 ;; *************** function _Post *****************
 18140 ;; Defined at:
 18141 ;;		line 112 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
 18142 ;; Parameters:    Size  Location     Type
 18143 ;;		None
 18144 ;; Auto vars:     Size  Location     Type
 18145 ;;		None
 18146 ;; Return value:  Size  Location     Type
 18147 ;;                  1    wreg      void 
 18148 ;; Registers used:
 18149 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18150 ;; Tracked objects:
 18151 ;;		On entry : 0/0
 18152 ;;		On exit  : 0/0
 18153 ;;		Unchanged: 0/0
 18154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18159 ;;Total ram usage:        0 bytes
 18160 ;; Hardware stack levels used:    1
 18161 ;; Hardware stack levels required when called:    5
 18162 ;; This function calls:
 18163 ;;		i1_Aguarda_dado
 18164 ;;		i1_Buffer_Escrita_COMM_Add_String
 18165 ;;		i1_Buffer_Escrita_USB_Add_String
 18166 ;; This function is called by:
 18167 ;;		_inicia_Post
 18168 ;;		i1_inicia_Post
 18169 ;;		_AguardaINT
 18170 ;; This function uses a non-reentrant model
 18171 ;;
 18172                           
 18173                           	psect	text65
 18174  007D86                     __ptext65:
 18175                           	opt stack 0
 18176  007D86                     _Post:
 18177                           	opt stack 16
 18178                           
 18179                           ;Wifi.c: 113: Aguarda_dado("*", "*", "", nada);
 18180                           
 18181                           ;incstack = 0
 18182  007D86  0EFD               	movlw	low STR_22
 18183  007D88  0100               	movlb	0	; () banked
 18184  007D8A  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 18185  007D8C  0EFF               	movlw	high STR_22
 18186  007D8E  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 18187  007D90  0EFD               	movlw	low STR_22
 18188  007D92  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 18189  007D94  0EFF               	movlw	high STR_22
 18190  007D96  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 18191  007D98  0E64               	movlw	low (STR_90+23)
 18192  007D9A  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 18193  007D9C  0EFE               	movlw	high (STR_90+23)
 18194  007D9E  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 18195  007DA0  0EF2               	movlw	low _nada
 18196  007DA2  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 18197  007DA4  0E8A               	movlw	high _nada
 18198  007DA6  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 18199  007DA8  EC78  F040         	call	i1_Aguarda_dado	;wreg free
 18200                           
 18201                           ;Wifi.c: 115: Buffer_Escrita_USB_Add_String("Post...\r\n", 1);
 18202  007DAC  0E63               	movlw	low STR_25
 18203  007DAE  6E06               	movwf	i1Buffer_Escrita_USB_Add_String@dado,c
 18204  007DB0  0EFF               	movlw	high STR_25
 18205  007DB2  6E07               	movwf	i1Buffer_Escrita_USB_Add_String@dado+1,c
 18206  007DB4  0E00               	movlw	0
 18207  007DB6  6E09               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,c
 18208  007DB8  0E01               	movlw	1
 18209  007DBA  6E08               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda,c
 18210  007DBC  EC04  F038         	call	i1_Buffer_Escrita_USB_Add_String	;wreg free
 18211                           
 18212                           ;Wifi.c: 117: Buffer_Escrita_COMM_Add_String("AT+S.FSP=gerrex.json,0,100000\r", 1);
 18213  007DC0  0EA7               	movlw	low STR_26
 18214  007DC2  6E06               	movwf	i1Buffer_Escrita_COMM_Add_String@dado,c
 18215  007DC4  0EFD               	movlw	high STR_26
 18216  007DC6  6E07               	movwf	i1Buffer_Escrita_COMM_Add_String@dado+1,c
 18217  007DC8  0E00               	movlw	0
 18218  007DCA  6E09               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda+1,c
 18219  007DCC  0E01               	movlw	1
 18220  007DCE  6E08               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda,c
 18221  007DD0  EC66  F038         	call	i1_Buffer_Escrita_COMM_Add_String	;wreg free
 18222                           
 18223                           ;Wifi.c: 120: Aguarda_dado("AT", "OK", "", Post2);
 18224  007DD4  0EF6               	movlw	low STR_27
 18225  007DD6  0100               	movlb	0	; () banked
 18226  007DD8  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 18227  007DDA  0EFF               	movlw	high STR_27
 18228  007DDC  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 18229  007DDE  0EF0               	movlw	low STR_28
 18230  007DE0  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 18231  007DE2  0EFF               	movlw	high STR_28
 18232  007DE4  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 18233  007DE6  0E64               	movlw	low (STR_90+23)
 18234  007DE8  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 18235  007DEA  0EFE               	movlw	high (STR_90+23)
 18236  007DEC  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 18237  007DEE  0E16               	movlw	low _Post2
 18238  007DF0  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 18239  007DF2  0E88               	movlw	high _Post2
 18240  007DF4  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 18241  007DF6  EC78  F040         	call	i1_Aguarda_dado	;wreg free
 18242  007DFA  0012               	return		;funcret
 18243  007DFC                     __end_of_Post:
 18244                           	opt stack 0
 18245                           
 18246 ;; *************** function _GETMACAddr *****************
 18247 ;; Defined at:
 18248 ;;		line 209 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 18249 ;; Parameters:    Size  Location     Type
 18250 ;;		None
 18251 ;; Auto vars:     Size  Location     Type
 18252 ;;		None
 18253 ;; Return value:  Size  Location     Type
 18254 ;;                  1    wreg      void 
 18255 ;; Registers used:
 18256 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18257 ;; Tracked objects:
 18258 ;;		On entry : 0/0
 18259 ;;		On exit  : 0/0
 18260 ;;		Unchanged: 0/0
 18261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18264 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18266 ;;Total ram usage:        2 bytes
 18267 ;; Hardware stack levels used:    1
 18268 ;; Hardware stack levels required when called:    5
 18269 ;; This function calls:
 18270 ;;		i1_Aguarda_dado
 18271 ;;		i1_Buffer_Escrita_COMM_Add_String
 18272 ;;		i1_Buffer_Escrita_USB_Add_String
 18273 ;; This function is called by:
 18274 ;;		_main
 18275 ;;		_AguardaINT
 18276 ;; This function uses a non-reentrant model
 18277 ;;
 18278                           
 18279                           	psect	text66
 18280  008024                     __ptext66:
 18281                           	opt stack 0
 18282  008024                     _GETMACAddr:
 18283                           	opt stack 16
 18284                           
 18285                           ;GERREX.c: 210: Buffer_Escrita_USB_Add_String("\r\nWIFI OK - IP OK\r\n", 1);
 18286                           
 18287                           ;incstack = 0
 18288  008024  0E93               	movlw	low STR_71
 18289  008026  6E06               	movwf	i1Buffer_Escrita_USB_Add_String@dado,c
 18290  008028  0EFE               	movlw	high STR_71
 18291  00802A  6E07               	movwf	i1Buffer_Escrita_USB_Add_String@dado+1,c
 18292  00802C  0E00               	movlw	0
 18293  00802E  6E09               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,c
 18294  008030  0E01               	movlw	1
 18295  008032  6E08               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda,c
 18296  008034  EC04  F038         	call	i1_Buffer_Escrita_USB_Add_String	;wreg free
 18297                           
 18298                           ;GERREX.c: 211: _delay((unsigned long)((500)*(40000000/4000.0)));
 18299  008038  0E1A               	movlw	26
 18300  00803A  6E59               	movwf	(??_GETMACAddr+1)& (0+255),c
 18301  00803C  0E5E               	movlw	94
 18302  00803E  6E58               	movwf	??_GETMACAddr& (0+255),c
 18303  008040  0E6E               	movlw	110
 18304  008042                     i1u1961_27:
 18305  008042  2EE8               	decfsz	16360,f,c
 18306  008044  D7FE               	bra	i1u1961_27
 18307  008046  2E58               	decfsz	??_GETMACAddr& (0+255),f,c
 18308  008048  D7FC               	bra	i1u1961_27
 18309  00804A  2E59               	decfsz	(??_GETMACAddr+1)& (0+255),f,c
 18310  00804C  D7FA               	bra	i1u1961_27
 18311  00804E  D000               	nop2	
 18312                           
 18313                           ;GERREX.c: 213: Buffer_Escrita_COMM_Add_String("AT+S.GCFG=nv_wifi_macaddr\r\n", 1);
 18314  008050  0EE4               	movlw	low STR_72
 18315  008052  6E06               	movwf	i1Buffer_Escrita_COMM_Add_String@dado,c
 18316  008054  0EFD               	movlw	high STR_72
 18317  008056  6E07               	movwf	i1Buffer_Escrita_COMM_Add_String@dado+1,c
 18318  008058  0E00               	movlw	0
 18319  00805A  6E09               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda+1,c
 18320  00805C  0E01               	movlw	1
 18321  00805E  6E08               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda,c
 18322  008060  EC66  F038         	call	i1_Buffer_Escrita_COMM_Add_String	;wreg free
 18323                           
 18324                           ;GERREX.c: 214: Aguarda_dado("nv_wifi_macaddr=", "\r", "ERROR:", SETMACAddr);
 18325  008064  0EEE               	movlw	low STR_73
 18326  008066  0100               	movlb	0	; () banked
 18327  008068  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 18328  00806A  0EFE               	movlw	high STR_73
 18329  00806C  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 18330  00806E  0EC4               	movlw	low (STR_26+29)
 18331  008070  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 18332  008072  0EFD               	movlw	high (STR_26+29)
 18333  008074  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 18334  008076  0EB6               	movlw	low STR_75
 18335  008078  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 18336  00807A  0EFF               	movlw	high STR_75
 18337  00807C  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 18338  00807E  0E88               	movlw	low _SETMACAddr
 18339  008080  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 18340  008082  0E76               	movlw	high _SETMACAddr
 18341  008084  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 18342  008086  EC78  F040         	call	i1_Aguarda_dado	;wreg free
 18343  00808A  0012               	return		;funcret
 18344  00808C                     __end_of_GETMACAddr:
 18345                           	opt stack 0
 18346                           
 18347 ;; *************** function _recebeFRAMES *****************
 18348 ;; Defined at:
 18349 ;;		line 49 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 18350 ;; Parameters:    Size  Location     Type
 18351 ;;		None
 18352 ;; Auto vars:     Size  Location     Type
 18353 ;;  exit            2   87[COMRAM] int 
 18354 ;; Return value:  Size  Location     Type
 18355 ;;                  1    wreg      void 
 18356 ;; Registers used:
 18357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18358 ;; Tracked objects:
 18359 ;;		On entry : 0/0
 18360 ;;		On exit  : 0/0
 18361 ;;		Unchanged: 0/0
 18362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18364 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18366 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18367 ;;Total ram usage:        2 bytes
 18368 ;; Hardware stack levels used:    1
 18369 ;; Hardware stack levels required when called:    6
 18370 ;; This function calls:
 18371 ;;		_Aguarda
 18372 ;;		_recebeADDRESS
 18373 ;;		_recebeFRAMEID
 18374 ;;		_recebeFUNCTIONCODE
 18375 ;;		_recebeNETWORKID
 18376 ;;		_recebeNODEID
 18377 ;;		_recebeSIZE
 18378 ;;		i1_Aguarda_dado
 18379 ;;		i1_Buffer_Escrita_USB_Add_String
 18380 ;; This function is called by:
 18381 ;;		_recebe
 18382 ;;		_GETTask
 18383 ;;		_AguardaINT
 18384 ;; This function uses a non-reentrant model
 18385 ;;
 18386                           
 18387                           	psect	text67
 18388  00592C                     __ptext67:
 18389                           	opt stack 0
 18390  00592C                     _recebeFRAMES:
 18391                           	opt stack 15
 18392                           
 18393                           ;GERREX.c: 50: Aguarda_dado("*", "*", "", nada);
 18394                           
 18395                           ;incstack = 0
 18396  00592C  0EFD               	movlw	low STR_22
 18397  00592E  0100               	movlb	0	; () banked
 18398  005930  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 18399  005932  0EFF               	movlw	high STR_22
 18400  005934  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 18401  005936  0EFD               	movlw	low STR_22
 18402  005938  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 18403  00593A  0EFF               	movlw	high STR_22
 18404  00593C  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 18405  00593E  0E64               	movlw	low (STR_90+23)
 18406  005940  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 18407  005942  0EFE               	movlw	high (STR_90+23)
 18408  005944  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 18409  005946  0EF2               	movlw	low _nada
 18410  005948  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 18411  00594A  0E8A               	movlw	high _nada
 18412  00594C  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 18413  00594E  EC78  F040         	call	i1_Aguarda_dado	;wreg free
 18414                           
 18415                           ;GERREX.c: 52: if (Aguarda_Resposta[0] == 0x32 && Aguarda_Resposta[1] == 0x00 ) {
 18416  005952  0E32               	movlw	50
 18417  005954  0103               	movlb	3	; () banked
 18418  005956  1900               	xorwf	_Aguarda_Resposta& (0+255),w,b
 18419  005958  A4D8               	btfss	16344,2,c
 18420  00595A  D00E               	goto	i1l560
 18421                           
 18422                           ; BSR set to: 3
 18423  00595C  5101               	movf	(_Aguarda_Resposta+1)& (0+255),w,b
 18424  00595E  A4D8               	btfss	16344,2,c
 18425  005960  D00B               	goto	i1l560
 18426                           
 18427                           ; BSR set to: 3
 18428                           ;GERREX.c: 53: Buffer_Escrita_USB_Add_String("\r\n>>>>>> No Instructions\r\n", 1);
 18429  005962  0E00               	movlw	low STR_43
 18430  005964  6E06               	movwf	i1Buffer_Escrita_USB_Add_String@dado,c
 18431  005966  0EFE               	movlw	high STR_43
 18432  005968  6E07               	movwf	i1Buffer_Escrita_USB_Add_String@dado+1,c
 18433  00596A  0E00               	movlw	0
 18434  00596C  6E09               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,c
 18435  00596E  0E01               	movlw	1
 18436  005970  6E08               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda,c
 18437  005972  EC04  F038         	call	i1_Buffer_Escrita_USB_Add_String	;wreg free
 18438                           
 18439                           ;GERREX.c: 54: goto noInstructions;
 18440  005976  D081               	goto	i1l561
 18441  005978                     i1l560:
 18442                           
 18443                           ;GERREX.c: 55: }
 18444                           ;GERREX.c: 56: ponteiroFrames = 0;
 18445  005978  0E00               	movlw	0
 18446  00597A  0100               	movlb	0	; () banked
 18447  00597C  6FDA               	movwf	(_ponteiroFrames+1)& (0+255),b
 18448  00597E  0E00               	movlw	0
 18449  005980  6FD9               	movwf	_ponteiroFrames& (0+255),b
 18450                           
 18451                           ;GERREX.c: 57: tamFrames=0;
 18452  005982  0E00               	movlw	0
 18453  005984  0102               	movlb	2	; () banked
 18454  005986  6FEA               	movwf	(_tamFrames+1)& (0+255),b
 18455  005988  0E00               	movlw	0
 18456  00598A  6FE9               	movwf	_tamFrames& (0+255),b
 18457                           
 18458                           ; BSR set to: 2
 18459                           ;GERREX.c: 58: INTCON0bits.GIE = 0;
 18460  00598C  013F               	movlb	63	; () banked
 18461  00598E  9FD2               	bcf	210,7,b	;volatile
 18462                           
 18463                           ;GERREX.c: 59: int exit = 0;
 18464  005990  0E00               	movlw	0
 18465  005992  6E59               	movwf	recebeFRAMES@exit+1,c
 18466  005994  0E00               	movlw	0
 18467  005996  6E58               	movwf	recebeFRAMES@exit,c
 18468                           
 18469                           ;GERREX.c: 60: AguardaFrames = 0;
 18470  005998  0E00               	movlw	0
 18471  00599A  0102               	movlb	2	; () banked
 18472  00599C  6FF4               	movwf	(_AguardaFrames+1)& (0+255),b
 18473  00599E  0E00               	movlw	0
 18474  0059A0  6FF3               	movwf	_AguardaFrames& (0+255),b
 18475  0059A2                     
 18476                           ; BSR set to: 2
 18477                           ;GERREX.c: 62: PORTBbits.RB2 = 1;
 18478                           
 18479                           ; BSR set to: 2
 18480  0059A2  013F               	movlb	63	; () banked
 18481  0059A4  85CB               	bsf	203,2,b	;volatile
 18482                           
 18483                           ; BSR set to: 63
 18484                           ;GERREX.c: 63: recebeFRAMEID();
 18485  0059A6  EC4B  F03E         	call	_recebeFRAMEID	;wreg free
 18486                           
 18487                           ;GERREX.c: 64: exit = 0;
 18488  0059AA  0E00               	movlw	0
 18489  0059AC  6E59               	movwf	recebeFRAMES@exit+1,c
 18490  0059AE  0E00               	movlw	0
 18491  0059B0  6E58               	movwf	recebeFRAMES@exit,c
 18492                           
 18493                           ;GERREX.c: 65: while (exit == 0) {
 18494  0059B2  D013               	goto	i1l565
 18495  0059B4                     
 18496                           ;GERREX.c: 66: exit = Aguarda(0x00);
 18497  0059B4  0E00               	movlw	0
 18498  0059B6  ECD1  F031         	call	_Aguarda
 18499  0059BA  0060  F030  F058   	movff	?_Aguarda,recebeFRAMES@exit
 18500  0059C0  0060  F034  F059   	movff	?_Aguarda+1,recebeFRAMES@exit+1
 18501                           
 18502                           ;GERREX.c: 67: if (AguardaFrames == 1) {
 18503  0059C6  0102               	movlb	2	; () banked
 18504  0059C8  05F3               	decf	_AguardaFrames& (0+255),w,b
 18505  0059CA  11F4               	iorwf	(_AguardaFrames+1)& (0+255),w,b
 18506  0059CC  A4D8               	btfss	16344,2,c
 18507  0059CE  D005               	goto	i1l565
 18508                           
 18509                           ; BSR set to: 2
 18510                           ;GERREX.c: 68: AguardaFrames = 0;
 18511  0059D0  0E00               	movlw	0
 18512  0059D2  6FF4               	movwf	(_AguardaFrames+1)& (0+255),b
 18513  0059D4  0E00               	movlw	0
 18514  0059D6  6FF3               	movwf	_AguardaFrames& (0+255),b
 18515                           
 18516                           ;GERREX.c: 69: goto fim;
 18517  0059D8  D03F               	goto	i1l584
 18518  0059DA                     i1l565:
 18519                           
 18520                           ; BSR set to: 2
 18521                           
 18522                           ; BSR set to: 2
 18523  0059DA  5058               	movf	recebeFRAMES@exit,w,c
 18524  0059DC  1059               	iorwf	recebeFRAMES@exit+1,w,c
 18525  0059DE  B4D8               	btfsc	16344,2,c
 18526  0059E0  D7E9               	goto	i1l564
 18527                           
 18528                           ;GERREX.c: 70: }
 18529                           ;GERREX.c: 71: };
 18530                           ;GERREX.c: 72: PORTBbits.RB2 = 1;
 18531  0059E2  013F               	movlb	63	; () banked
 18532  0059E4  85CB               	bsf	203,2,b	;volatile
 18533                           
 18534                           ; BSR set to: 63
 18535                           ;GERREX.c: 73: recebeNETWORKID();
 18536  0059E6  ECEA  F035         	call	_recebeNETWORKID	;wreg free
 18537  0059EA  0E00               	movlw	0
 18538  0059EC  ECD1  F031         	call	_Aguarda
 18539  0059F0  500C               	movf	?_Aguarda,w,c
 18540  0059F2  100D               	iorwf	?_Aguarda+1,w,c
 18541  0059F4  B4D8               	btfsc	16344,2,c
 18542  0059F6  D7F9               	goto	i1l569
 18543                           
 18544                           ;GERREX.c: 75: PORTBbits.RB2 = 1;
 18545  0059F8  013F               	movlb	63	; () banked
 18546  0059FA  85CB               	bsf	203,2,b	;volatile
 18547                           
 18548                           ; BSR set to: 63
 18549                           ;GERREX.c: 76: recebeNODEID();
 18550  0059FC  EC5F  F043         	call	_recebeNODEID	;wreg free
 18551  005A00  0E00               	movlw	0
 18552  005A02  ECD1  F031         	call	_Aguarda
 18553  005A06  500C               	movf	?_Aguarda,w,c
 18554  005A08  100D               	iorwf	?_Aguarda+1,w,c
 18555  005A0A  B4D8               	btfsc	16344,2,c
 18556  005A0C  D7F9               	goto	i1l572
 18557                           
 18558                           ;GERREX.c: 78: PORTBbits.RB2 = 1;
 18559  005A0E  013F               	movlb	63	; () banked
 18560  005A10  85CB               	bsf	203,2,b	;volatile
 18561                           
 18562                           ; BSR set to: 63
 18563                           ;GERREX.c: 79: recebeFUNCTIONCODE();
 18564  005A12  EC38  F043         	call	_recebeFUNCTIONCODE	;wreg free
 18565  005A16  0E00               	movlw	0
 18566  005A18  ECD1  F031         	call	_Aguarda
 18567  005A1C  500C               	movf	?_Aguarda,w,c
 18568  005A1E  100D               	iorwf	?_Aguarda+1,w,c
 18569  005A20  B4D8               	btfsc	16344,2,c
 18570  005A22  D7F9               	goto	i1l575
 18571                           
 18572                           ;GERREX.c: 81: PORTBbits.RB2 = 1;
 18573  005A24  013F               	movlb	63	; () banked
 18574  005A26  85CB               	bsf	203,2,b	;volatile
 18575                           
 18576                           ; BSR set to: 63
 18577                           ;GERREX.c: 82: recebeADDRESS();
 18578  005A28  EC11  F043         	call	_recebeADDRESS	;wreg free
 18579  005A2C  0E00               	movlw	0
 18580  005A2E  ECD1  F031         	call	_Aguarda
 18581  005A32  500C               	movf	?_Aguarda,w,c
 18582  005A34  100D               	iorwf	?_Aguarda+1,w,c
 18583  005A36  B4D8               	btfsc	16344,2,c
 18584  005A38  D7F9               	goto	i1l578
 18585                           
 18586                           ;GERREX.c: 84: PORTBbits.RB2 = 1;
 18587  005A3A  013F               	movlb	63	; () banked
 18588  005A3C  85CB               	bsf	203,2,b	;volatile
 18589                           
 18590                           ; BSR set to: 63
 18591                           ;GERREX.c: 85: recebeSIZE();
 18592  005A3E  EC43  F042         	call	_recebeSIZE	;wreg free
 18593  005A42  0E00               	movlw	0
 18594  005A44  ECD1  F031         	call	_Aguarda
 18595  005A48  500C               	movf	?_Aguarda,w,c
 18596  005A4A  100D               	iorwf	?_Aguarda+1,w,c
 18597  005A4C  B4D8               	btfsc	16344,2,c
 18598  005A4E  D7F9               	goto	i1l581
 18599                           
 18600                           ;GERREX.c: 87: tamFrames++;
 18601  005A50  0102               	movlb	2	; () banked
 18602  005A52  4BE9               	infsnz	_tamFrames& (0+255),f,b
 18603  005A54  2BEA               	incf	(_tamFrames+1)& (0+255),f,b
 18604                           
 18605                           ; BSR set to: 2
 18606  005A56  D7A5               	goto	i1l562
 18607  005A58                     i1l584:
 18608                           
 18609                           ; BSR set to: 2
 18610                           ;GERREX.c: 90: INTCON0bits.GIE = 1;
 18611                           
 18612                           ; BSR set to: 2
 18613                           ;GERREX.c: 88: }
 18614                           ;GERREX.c: 89: fim:
 18615  005A58  013F               	movlb	63	; () banked
 18616  005A5A  8FD2               	bsf	210,7,b	;volatile
 18617                           
 18618                           ; BSR set to: 63
 18619                           ;GERREX.c: 91: AguardaFrames = 0;
 18620  005A5C  0E00               	movlw	0
 18621  005A5E  0102               	movlb	2	; () banked
 18622  005A60  6FF4               	movwf	(_AguardaFrames+1)& (0+255),b
 18623  005A62  0E00               	movlw	0
 18624  005A64  6FF3               	movwf	_AguardaFrames& (0+255),b
 18625                           
 18626                           ; BSR set to: 2
 18627                           ;GERREX.c: 92: Buffer_Escrita_USB_Add_String("\r\n--FRAMES RECEBIDOS--\r\n", 1);
 18628  005A66  0E1B               	movlw	low STR_44
 18629  005A68  6E06               	movwf	i1Buffer_Escrita_USB_Add_String@dado,c
 18630  005A6A  0EFE               	movlw	high STR_44
 18631  005A6C  6E07               	movwf	i1Buffer_Escrita_USB_Add_String@dado+1,c
 18632  005A6E  0E00               	movlw	0
 18633  005A70  6E09               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,c
 18634  005A72  0E01               	movlw	1
 18635  005A74  6E08               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda,c
 18636  005A76  EC04  F038         	call	i1_Buffer_Escrita_USB_Add_String	;wreg free
 18637  005A7A                     i1l561:
 18638                           
 18639                           ;GERREX.c: 95: Aguarda_dado("*", "*", "", nada);
 18640  005A7A  0EFD               	movlw	low STR_22
 18641  005A7C  0100               	movlb	0	; () banked
 18642  005A7E  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 18643  005A80  0EFF               	movlw	high STR_22
 18644  005A82  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 18645  005A84  0EFD               	movlw	low STR_22
 18646  005A86  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 18647  005A88  0EFF               	movlw	high STR_22
 18648  005A8A  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 18649  005A8C  0E64               	movlw	low (STR_90+23)
 18650  005A8E  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 18651  005A90  0EFE               	movlw	high (STR_90+23)
 18652  005A92  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 18653  005A94  0EF2               	movlw	low _nada
 18654  005A96  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 18655  005A98  0E8A               	movlw	high _nada
 18656  005A9A  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 18657  005A9C  EC78  F040         	call	i1_Aguarda_dado	;wreg free
 18658                           
 18659                           ;GERREX.c: 99: LATEbits.LATE2 = 0;
 18660  005AA0  013F               	movlb	63	; () banked
 18661  005AA2  95BE               	bcf	190,2,b	;volatile
 18662                           
 18663                           ; BSR set to: 63
 18664                           ;GERREX.c: 102: Postando = 0;
 18665  005AA4  0E00               	movlw	0
 18666  005AA6  0102               	movlb	2	; () banked
 18667  005AA8  6FFF               	movwf	(_Postando+1)& (0+255),b
 18668  005AAA  0E00               	movlw	0
 18669  005AAC  6FFE               	movwf	_Postando& (0+255),b
 18670                           
 18671                           ; BSR set to: 2
 18672  005AAE  0012               	return		;funcret
 18673  005AB0                     __end_of_recebeFRAMES:
 18674                           	opt stack 0
 18675                           
 18676 ;; *************** function _Aguarda *****************
 18677 ;; Defined at:
 18678 ;;		line 275 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 18679 ;; Parameters:    Size  Location     Type
 18680 ;;  dado            1    wreg     unsigned char 
 18681 ;; Auto vars:     Size  Location     Type
 18682 ;;  dado            1   15[COMRAM] unsigned char 
 18683 ;; Return value:  Size  Location     Type
 18684 ;;                  2   11[COMRAM] int 
 18685 ;; Registers used:
 18686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18687 ;; Tracked objects:
 18688 ;;		On entry : 0/0
 18689 ;;		On exit  : 0/0
 18690 ;;		Unchanged: 0/0
 18691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18692 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18694 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18695 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18696 ;;Total ram usage:        5 bytes
 18697 ;; Hardware stack levels used:    1
 18698 ;; Hardware stack levels required when called:    1
 18699 ;; This function calls:
 18700 ;;		_verificaERRO
 18701 ;;		_verificaFimFrame
 18702 ;; This function is called by:
 18703 ;;		_recebeFRAMES
 18704 ;;		_GETTask
 18705 ;;		_SOCKET_QUERY
 18706 ;; This function uses a non-reentrant model
 18707 ;;
 18708                           
 18709                           	psect	text68
 18710  0063A2                     __ptext68:
 18711                           	opt stack 0
 18712  0063A2                     _Aguarda:
 18713                           	opt stack 19
 18714                           
 18715                           ; BSR set to: 2
 18716                           ;incstack = 0
 18717                           ;Aguarda@dado stored from wreg
 18718  0063A2  6E10               	movwf	Aguarda@dado,c
 18719                           
 18720                           ;Serial.c: 276: if (U2RXIF == 1) {
 18721  0063A4  0139               	movlb	57	; () banked
 18722  0063A6  A5A6               	btfss	166,2,b	;volatile
 18723  0063A8  D005               	goto	i1l328
 18724                           
 18725                           ; BSR set to: 57
 18726                           ;Serial.c: 277: dado = U2RXB;
 18727  0063AA  006F F740  F010    	movff	15824,Aguarda@dado	;volatile
 18728                           
 18729                           ; BSR set to: 57
 18730                           ;Serial.c: 278: U2RXIF = 0;
 18731  0063B0  95A6               	bcf	166,2,b	;volatile
 18732                           
 18733                           ;Serial.c: 279: } else {
 18734  0063B2  D005               	goto	i1l329
 18735  0063B4                     i1l328:
 18736                           
 18737                           ; BSR set to: 57
 18738                           ;Serial.c: 280: return 0;
 18739                           
 18740                           ; BSR set to: 57
 18741  0063B4  0E00               	movlw	0
 18742  0063B6  6E0D               	movwf	?_Aguarda+1,c
 18743  0063B8  0E00               	movlw	0
 18744  0063BA  6E0C               	movwf	?_Aguarda,c
 18745                           
 18746                           ; BSR set to: 57
 18747  0063BC  0012               	return	
 18748  0063BE                     i1l329:
 18749                           
 18750                           ; BSR set to: 57
 18751                           ;Serial.c: 281: }
 18752                           ;Serial.c: 283: PORTBbits.RB2 = 1;
 18753  0063BE  013F               	movlb	63	; () banked
 18754  0063C0  85CB               	bsf	203,2,b	;volatile
 18755                           
 18756                           ; BSR set to: 63
 18757                           ;Serial.c: 285: verificaERRO(dado);
 18758  0063C2  5010               	movf	Aguarda@dado,w,c
 18759  0063C4  ECC0  F042         	call	_verificaERRO
 18760                           
 18761                           ;Serial.c: 286: verificaFimFrame(dado);
 18762  0063C8  5010               	movf	Aguarda@dado,w,c
 18763  0063CA  EC97  F042         	call	_verificaFimFrame
 18764                           
 18765                           ;Serial.c: 288: if (Aguarda_str_OK == 0) {
 18766  0063CE  0100               	movlb	0	; () banked
 18767  0063D0  51DF               	movf	_Aguarda_str_OK& (0+255),w,b
 18768  0063D2  11E0               	iorwf	(_Aguarda_str_OK+1)& (0+255),w,b
 18769  0063D4  A4D8               	btfss	16344,2,c
 18770  0063D6  D01E               	goto	i1l331
 18771                           
 18772                           ; BSR set to: 0
 18773                           ;Serial.c: 289: if (dado == Aguarda_str[Aguarda_Ponteiro]) {
 18774  0063D8  0EAA               	movlw	low _Aguarda_str
 18775  0063DA  25E3               	addwf	_Aguarda_Ponteiro& (0+255),w,b
 18776  0063DC  6ED9               	movwf	16345,c
 18777  0063DE  0E03               	movlw	high _Aguarda_str
 18778  0063E0  21E4               	addwfc	(_Aguarda_Ponteiro+1)& (0+255),w,b
 18779  0063E2  6EDA               	movwf	16346,c
 18780  0063E4  5010               	movf	Aguarda@dado,w,c
 18781  0063E6  18DE               	xorwf	16350,w,c
 18782  0063E8  A4D8               	btfss	16344,2,c
 18783  0063EA  D00F               	goto	i1l332
 18784                           
 18785                           ; BSR set to: 0
 18786                           ;Serial.c: 290: Aguarda_Ponteiro++;
 18787  0063EC  4BE3               	infsnz	_Aguarda_Ponteiro& (0+255),f,b
 18788  0063EE  2BE4               	incf	(_Aguarda_Ponteiro+1)& (0+255),f,b
 18789                           
 18790                           ; BSR set to: 0
 18791                           ;Serial.c: 291: if (Aguarda_str[Aguarda_Ponteiro] == 0x00) {
 18792  0063F0  0EAA               	movlw	low _Aguarda_str
 18793  0063F2  25E3               	addwf	_Aguarda_Ponteiro& (0+255),w,b
 18794  0063F4  6ED9               	movwf	16345,c
 18795  0063F6  0E03               	movlw	high _Aguarda_str
 18796  0063F8  21E4               	addwfc	(_Aguarda_Ponteiro+1)& (0+255),w,b
 18797  0063FA  6EDA               	movwf	16346,c
 18798  0063FC  50DF               	movf	16351,w,c
 18799  0063FE  A4D8               	btfss	16344,2,c
 18800  006400  D052               	goto	i1l337
 18801                           
 18802                           ; BSR set to: 0
 18803                           ;Serial.c: 292: Aguarda_str_OK = 1;
 18804  006402  0E00               	movlw	0
 18805  006404  6FE0               	movwf	(_Aguarda_str_OK+1)& (0+255),b
 18806  006406  0E01               	movlw	1
 18807  006408  6FDF               	movwf	_Aguarda_str_OK& (0+255),b
 18808  00640A                     i1l332:
 18809                           
 18810                           ; BSR set to: 0
 18811                           ;Serial.c: 296: Aguarda_Ponteiro = 0;
 18812                           
 18813                           ; BSR set to: 0
 18814  00640A  0E00               	movlw	0
 18815  00640C  6FE4               	movwf	(_Aguarda_Ponteiro+1)& (0+255),b
 18816  00640E  0E00               	movlw	0
 18817  006410  6FE3               	movwf	_Aguarda_Ponteiro& (0+255),b
 18818                           
 18819                           ; BSR set to: 0
 18820                           ;Serial.c: 297: }
 18821                           ;Serial.c: 298: } else {
 18822  006412  D049               	goto	i1l337
 18823  006414                     i1l331:
 18824                           
 18825                           ; BSR set to: 0
 18826                           ;Serial.c: 299: Aguarda_Resposta[Aguarda_Ponteiro] = dado;
 18827                           
 18828                           ; BSR set to: 0
 18829  006414  0E00               	movlw	low _Aguarda_Resposta
 18830  006416  25E3               	addwf	_Aguarda_Ponteiro& (0+255),w,b
 18831  006418  6ED9               	movwf	16345,c
 18832  00641A  0E03               	movlw	high _Aguarda_Resposta
 18833  00641C  21E4               	addwfc	(_Aguarda_Ponteiro+1)& (0+255),w,b
 18834  00641E  6EDA               	movwf	16346,c
 18835  006420  0060  F043  FFDF   	movff	Aguarda@dado,16351
 18836                           
 18837                           ; BSR set to: 0
 18838                           ;Serial.c: 300: Aguarda_Ponteiro++;
 18839  006426  4BE3               	infsnz	_Aguarda_Ponteiro& (0+255),f,b
 18840  006428  2BE4               	incf	(_Aguarda_Ponteiro+1)& (0+255),f,b
 18841                           
 18842                           ; BSR set to: 0
 18843                           ;Serial.c: 302: if (dado == Aguarda_end[Aguarda_End_Ponteiro]) {
 18844  00642A  0ED0               	movlw	low _Aguarda_end
 18845  00642C  25E1               	addwf	_Aguarda_End_Ponteiro& (0+255),w,b
 18846  00642E  6ED9               	movwf	16345,c
 18847  006430  0E03               	movlw	high _Aguarda_end
 18848  006432  21E2               	addwfc	(_Aguarda_End_Ponteiro+1)& (0+255),w,b
 18849  006434  6EDA               	movwf	16346,c
 18850  006436  5010               	movf	Aguarda@dado,w,c
 18851  006438  18DE               	xorwf	16350,w,c
 18852  00643A  A4D8               	btfss	16344,2,c
 18853  00643C  D034               	goto	i1l337
 18854                           
 18855                           ; BSR set to: 0
 18856                           ;Serial.c: 303: Aguarda_End_Ponteiro++;
 18857  00643E  4BE1               	infsnz	_Aguarda_End_Ponteiro& (0+255),f,b
 18858  006440  2BE2               	incf	(_Aguarda_End_Ponteiro+1)& (0+255),f,b
 18859                           
 18860                           ; BSR set to: 0
 18861                           ;Serial.c: 304: if (Aguarda_end[Aguarda_End_Ponteiro] == 0x00) {
 18862  006442  0ED0               	movlw	low _Aguarda_end
 18863  006444  25E1               	addwf	_Aguarda_End_Ponteiro& (0+255),w,b
 18864  006446  6ED9               	movwf	16345,c
 18865  006448  0E03               	movlw	high _Aguarda_end
 18866  00644A  21E2               	addwfc	(_Aguarda_End_Ponteiro+1)& (0+255),w,b
 18867  00644C  6EDA               	movwf	16346,c
 18868  00644E  50DF               	movf	16351,w,c
 18869  006450  A4D8               	btfss	16344,2,c
 18870  006452  D029               	goto	i1l337
 18871                           
 18872                           ; BSR set to: 0
 18873                           ;Serial.c: 305: Aguarda_Resposta[Aguarda_Ponteiro - Aguarda_End_Ponteiro] = 0x00;
 18874  006454  0060  F384  F00E   	movff	_Aguarda_End_Ponteiro,??_Aguarda
 18875  00645A  0060  F388  F00F   	movff	_Aguarda_End_Ponteiro+1,??_Aguarda+1
 18876  006460  1E0E               	comf	??_Aguarda,f,c
 18877  006462  1E0F               	comf	??_Aguarda+1,f,c
 18878  006464  4A0E               	infsnz	??_Aguarda,f,c
 18879  006466  2A0F               	incf	??_Aguarda+1,f,c
 18880  006468  51E3               	movf	_Aguarda_Ponteiro& (0+255),w,b
 18881  00646A  260E               	addwf	??_Aguarda,f,c
 18882  00646C  51E4               	movf	(_Aguarda_Ponteiro+1)& (0+255),w,b
 18883  00646E  220F               	addwfc	??_Aguarda+1,f,c
 18884  006470  0E00               	movlw	low _Aguarda_Resposta
 18885  006472  240E               	addwf	??_Aguarda,w,c
 18886  006474  6ED9               	movwf	16345,c
 18887  006476  0E03               	movlw	high _Aguarda_Resposta
 18888  006478  200F               	addwfc	??_Aguarda+1,w,c
 18889  00647A  6EDA               	movwf	16346,c
 18890  00647C  0E00               	movlw	0
 18891  00647E  6EDF               	movwf	16351,c
 18892                           
 18893                           ; BSR set to: 0
 18894                           ;Serial.c: 306: Aguarda_End_Ponteiro = 0;
 18895  006480  0E00               	movlw	0
 18896  006482  6FE2               	movwf	(_Aguarda_End_Ponteiro+1)& (0+255),b
 18897  006484  0E00               	movlw	0
 18898  006486  6FE1               	movwf	_Aguarda_End_Ponteiro& (0+255),b
 18899                           
 18900                           ; BSR set to: 0
 18901                           ;Serial.c: 307: Aguarda_Ponteiro = 0;
 18902  006488  0E00               	movlw	0
 18903  00648A  6FE4               	movwf	(_Aguarda_Ponteiro+1)& (0+255),b
 18904  00648C  0E00               	movlw	0
 18905  00648E  6FE3               	movwf	_Aguarda_Ponteiro& (0+255),b
 18906                           
 18907                           ; BSR set to: 0
 18908                           ;Serial.c: 308: Aguarda_str_OK = 0;
 18909  006490  0E00               	movlw	0
 18910  006492  6FE0               	movwf	(_Aguarda_str_OK+1)& (0+255),b
 18911  006494  0E00               	movlw	0
 18912  006496  6FDF               	movwf	_Aguarda_str_OK& (0+255),b
 18913                           
 18914                           ; BSR set to: 0
 18915                           ;Serial.c: 310: PORTBbits.RB2 = 0;
 18916  006498  013F               	movlb	63	; () banked
 18917  00649A  95CB               	bcf	203,2,b	;volatile
 18918                           
 18919                           ; BSR set to: 63
 18920                           ;Serial.c: 311: return 1;
 18921  00649C  0E00               	movlw	0
 18922  00649E  6E0D               	movwf	?_Aguarda+1,c
 18923  0064A0  0E01               	movlw	1
 18924  0064A2  6E0C               	movwf	?_Aguarda,c
 18925                           
 18926                           ; BSR set to: 63
 18927  0064A4  0012               	return	
 18928  0064A6                     i1l337:
 18929                           
 18930                           ;Serial.c: 312: }
 18931                           ;Serial.c: 313: }
 18932                           ;Serial.c: 314: }
 18933                           ;Serial.c: 315: PORTBbits.RB2 = 0;
 18934                           
 18935                           ; BSR set to: 63
 18936                           
 18937                           ; BSR set to: 63
 18938  0064A6  013F               	movlb	63	; () banked
 18939  0064A8  95CB               	bcf	203,2,b	;volatile
 18940                           
 18941                           ; BSR set to: 63
 18942                           ;Serial.c: 316: return 0;
 18943  0064AA  0E00               	movlw	0
 18944  0064AC  6E0D               	movwf	?_Aguarda+1,c
 18945  0064AE  0E00               	movlw	0
 18946  0064B0  6E0C               	movwf	?_Aguarda,c
 18947  0064B2  0012               	return	
 18948  0064B4                     __end_of_Aguarda:
 18949                           	opt stack 0
 18950                           
 18951 ;; *************** function _verificaFimFrame *****************
 18952 ;; Defined at:
 18953 ;;		line 319 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 18954 ;; Parameters:    Size  Location     Type
 18955 ;;  dado            1    wreg     unsigned char 
 18956 ;; Auto vars:     Size  Location     Type
 18957 ;;  dado            1    7[COMRAM] unsigned char 
 18958 ;;  FIM             3    4[COMRAM] unsigned char [3]
 18959 ;; Return value:  Size  Location     Type
 18960 ;;                  2  212[None  ] int 
 18961 ;; Registers used:
 18962 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18963 ;; Tracked objects:
 18964 ;;		On entry : 0/0
 18965 ;;		On exit  : 0/0
 18966 ;;		Unchanged: 0/0
 18967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18969 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18970 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18971 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18972 ;;Total ram usage:        5 bytes
 18973 ;; Hardware stack levels used:    1
 18974 ;; This function calls:
 18975 ;;		Nothing
 18976 ;; This function is called by:
 18977 ;;		_Aguarda
 18978 ;; This function uses a non-reentrant model
 18979 ;;
 18980                           
 18981                           	psect	text69
 18982  00852E                     __ptext69:
 18983                           	opt stack 0
 18984  00852E                     _verificaFimFrame:
 18985                           	opt stack 19
 18986                           
 18987                           ;incstack = 0
 18988                           ;verificaFimFrame@dado stored from wreg
 18989  00852E  6E08               	movwf	verificaFimFrame@dado,c
 18990                           
 18991                           ;Serial.c: 320: char FIM [] = "}]";
 18992  008530  0060  FBE4  F005   	movff	verificaFimFrame@F19980,verificaFimFrame@FIM
 18993  008536  0060  FBE8  F006   	movff	verificaFimFrame@F19980+1,verificaFimFrame@FIM+1
 18994  00853C  0060  FBEC  F007   	movff	verificaFimFrame@F19980+2,verificaFimFrame@FIM+2
 18995                           
 18996                           ;Serial.c: 321: if (dado == FIM[Ponteiro_FIM]) {
 18997  008542  0E05               	movlw	low verificaFimFrame@FIM
 18998  008544  0100               	movlb	0	; () banked
 18999  008546  25DB               	addwf	_Ponteiro_FIM& (0+255),w,b
 19000  008548  6ED9               	movwf	16345,c
 19001  00854A  0E00               	movlw	high verificaFimFrame@FIM
 19002  00854C  21DC               	addwfc	(_Ponteiro_FIM+1)& (0+255),w,b
 19003  00854E  6EDA               	movwf	16346,c
 19004  008550  5008               	movf	verificaFimFrame@dado,w,c
 19005  008552  18DE               	xorwf	16350,w,c
 19006  008554  A4D8               	btfss	16344,2,c
 19007  008556  D00E               	goto	i1l342
 19008                           
 19009                           ; BSR set to: 0
 19010                           ;Serial.c: 322: Ponteiro_FIM++;
 19011  008558  4BDB               	infsnz	_Ponteiro_FIM& (0+255),f,b
 19012  00855A  2BDC               	incf	(_Ponteiro_FIM+1)& (0+255),f,b
 19013                           
 19014                           ; BSR set to: 0
 19015                           ;Serial.c: 323: if (Ponteiro_FIM >= 0x02) {
 19016  00855C  51DC               	movf	(_Ponteiro_FIM+1)& (0+255),w,b
 19017  00855E  E104               	bnz	i1u1186_20
 19018  008560  0E02               	movlw	2
 19019  008562  5DDB               	subwf	_Ponteiro_FIM& (0+255),w,b
 19020  008564  A0D8               	btfss	16344,0,c
 19021  008566  0012               	return	
 19022  008568                     i1u1186_20:
 19023                           
 19024                           ; BSR set to: 0
 19025                           ;Serial.c: 324: AguardaFrames = 1;
 19026  008568  0E00               	movlw	0
 19027  00856A  0102               	movlb	2	; () banked
 19028  00856C  6FF4               	movwf	(_AguardaFrames+1)& (0+255),b
 19029  00856E  0E01               	movlw	1
 19030  008570  6FF3               	movwf	_AguardaFrames& (0+255),b
 19031                           
 19032                           ; BSR set to: 2
 19033                           ;Serial.c: 325: }
 19034                           ;Serial.c: 326: } else {
 19035  008572  0012               	return	
 19036  008574                     i1l342:
 19037                           
 19038                           ;Serial.c: 327: Ponteiro_FIM = 0;
 19039                           
 19040                           ; BSR set to: 2
 19041  008574  0E00               	movlw	0
 19042  008576  0100               	movlb	0	; () banked
 19043  008578  6FDC               	movwf	(_Ponteiro_FIM+1)& (0+255),b
 19044  00857A  0E00               	movlw	0
 19045  00857C  6FDB               	movwf	_Ponteiro_FIM& (0+255),b
 19046  00857E  0012               	return	
 19047  008580                     __end_of_verificaFimFrame:
 19048                           	opt stack 0
 19049                           
 19050 ;; *************** function _verificaERRO *****************
 19051 ;; Defined at:
 19052 ;;		line 331 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 19053 ;; Parameters:    Size  Location     Type
 19054 ;;  dado            1    wreg     unsigned char 
 19055 ;; Auto vars:     Size  Location     Type
 19056 ;;  dado            1   10[COMRAM] unsigned char 
 19057 ;;  ERRO            6    4[COMRAM] unsigned char [6]
 19058 ;; Return value:  Size  Location     Type
 19059 ;;                  1    wreg      void 
 19060 ;; Registers used:
 19061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 19062 ;; Tracked objects:
 19063 ;;		On entry : 0/0
 19064 ;;		On exit  : 0/0
 19065 ;;		Unchanged: 0/0
 19066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19068 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19069 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19070 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19071 ;;Total ram usage:        8 bytes
 19072 ;; Hardware stack levels used:    1
 19073 ;; This function calls:
 19074 ;;		Nothing
 19075 ;; This function is called by:
 19076 ;;		_AguardaINT
 19077 ;;		_Aguarda
 19078 ;; This function uses a non-reentrant model
 19079 ;;
 19080                           
 19081                           	psect	text70
 19082  008580                     __ptext70:
 19083                           	opt stack 0
 19084  008580                     _verificaERRO:
 19085                           	opt stack 21
 19086                           
 19087                           ;incstack = 0
 19088                           ;verificaERRO@dado stored from wreg
 19089  008580  6E0B               	movwf	verificaERRO@dado,c
 19090                           
 19091                           ;Serial.c: 332: char ERRO [] = "ERRO:";
 19092  008582  EE20  F3F2         	lfsr	2,verificaERRO@F19983
 19093  008586  EE10  F005         	lfsr	1,verificaERRO@ERRO
 19094  00858A  0E05               	movlw	5
 19095  00858C                     i1u1182_21:
 19096  00858C  006F FF6F FFE3     	movff	16347,16355
 19097  008592  06E8               	decf	16360,f,c
 19098  008594  E2FB               	bc	i1u1182_21
 19099                           
 19100                           ;Serial.c: 333: if (dado == ERRO[Ponteiro_ERRO]) {
 19101  008596  0E05               	movlw	low verificaERRO@ERRO
 19102  008598  0100               	movlb	0	; () banked
 19103  00859A  25DD               	addwf	_Ponteiro_ERRO& (0+255),w,b
 19104  00859C  6ED9               	movwf	16345,c
 19105  00859E  0E00               	movlw	high verificaERRO@ERRO
 19106  0085A0  21DE               	addwfc	(_Ponteiro_ERRO+1)& (0+255),w,b
 19107  0085A2  6EDA               	movwf	16346,c
 19108  0085A4  500B               	movf	verificaERRO@dado,w,c
 19109  0085A6  18DE               	xorwf	16350,w,c
 19110  0085A8  A4D8               	btfss	16344,2,c
 19111  0085AA  D00D               	goto	i1l350
 19112                           
 19113                           ; BSR set to: 0
 19114                           ;Serial.c: 334: Ponteiro_ERRO++;
 19115  0085AC  4BDD               	infsnz	_Ponteiro_ERRO& (0+255),f,b
 19116  0085AE  2BDE               	incf	(_Ponteiro_ERRO+1)& (0+255),f,b
 19117                           
 19118                           ; BSR set to: 0
 19119                           ;Serial.c: 335: if (ERRO[Ponteiro_ERRO] == 0x00) {
 19120  0085B0  0E05               	movlw	low verificaERRO@ERRO
 19121  0085B2  25DD               	addwf	_Ponteiro_ERRO& (0+255),w,b
 19122  0085B4  6ED9               	movwf	16345,c
 19123  0085B6  0E00               	movlw	high verificaERRO@ERRO
 19124  0085B8  21DE               	addwfc	(_Ponteiro_ERRO+1)& (0+255),w,b
 19125  0085BA  6EDA               	movwf	16346,c
 19126  0085BC  50DF               	movf	16351,w,c
 19127  0085BE  A4D8               	btfss	16344,2,c
 19128  0085C0  0012               	return	
 19129                           
 19130                           ; BSR set to: 0
 19131  0085C2  00FF               	reset		;# 
 19132                           
 19133                           ;Serial.c: 337: }
 19134                           ;Serial.c: 338: } else {
 19135  0085C4  0012               	return	
 19136  0085C6                     i1l350:
 19137                           
 19138                           ;Serial.c: 339: Ponteiro_ERRO = 0;
 19139  0085C6  0E00               	movlw	0
 19140  0085C8  0100               	movlb	0	; () banked
 19141  0085CA  6FDE               	movwf	(_Ponteiro_ERRO+1)& (0+255),b
 19142  0085CC  0E00               	movlw	0
 19143  0085CE  6FDD               	movwf	_Ponteiro_ERRO& (0+255),b
 19144  0085D0  0012               	return	
 19145  0085D2                     __end_of_verificaERRO:
 19146                           	opt stack 0
 19147                           
 19148 ;; *************** function i1_inicia_Post *****************
 19149 ;; Defined at:
 19150 ;;		line 102 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
 19151 ;; Parameters:    Size  Location     Type
 19152 ;;		None
 19153 ;; Auto vars:     Size  Location     Type
 19154 ;;		None
 19155 ;; Return value:  Size  Location     Type
 19156 ;;                  1    wreg      void 
 19157 ;; Registers used:
 19158 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19159 ;; Tracked objects:
 19160 ;;		On entry : 0/0
 19161 ;;		On exit  : 0/0
 19162 ;;		Unchanged: 0/0
 19163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19166 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19167 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19168 ;;Total ram usage:        2 bytes
 19169 ;; Hardware stack levels used:    1
 19170 ;; Hardware stack levels required when called:    6
 19171 ;; This function calls:
 19172 ;;		i1_Aguarda_dado
 19173 ;;		i1_Buffer_Escrita_COMM_Add_String
 19174 ;;		i1_Buffer_Escrita_USB_Add_String
 19175 ;;		i1_append_Arquivo_Json
 19176 ;; This function is called by:
 19177 ;;		_SETMACAddr
 19178 ;; This function uses a non-reentrant model
 19179 ;;
 19180                           
 19181                           	psect	text71
 19182  007C1A                     __ptext71:
 19183                           	opt stack 0
 19184  007C1A                     i1_inicia_Post:
 19185                           	opt stack 14
 19186                           
 19187                           ;Wifi.c: 103: Postando = 1;
 19188                           
 19189                           ;incstack = 0
 19190  007C1A  0E00               	movlw	0
 19191  007C1C  0102               	movlb	2	; () banked
 19192  007C1E  6FFF               	movwf	(_Postando+1)& (0+255),b
 19193  007C20  0E01               	movlw	1
 19194  007C22  6FFE               	movwf	_Postando& (0+255),b
 19195                           
 19196                           ; BSR set to: 2
 19197                           ;Wifi.c: 104: LATEbits.LATE2 = 1;
 19198  007C24  013F               	movlb	63	; () banked
 19199  007C26  85BE               	bsf	190,2,b	;volatile
 19200                           
 19201                           ; BSR set to: 63
 19202                           ;Wifi.c: 105: Buffer_Escrita_COMM_Add_String("AT+S.FSD=gerrex.json\r", 1);
 19203  007C28  0E7D               	movlw	low STR_17
 19204  007C2A  6E06               	movwf	i1Buffer_Escrita_COMM_Add_String@dado,c
 19205  007C2C  0EFE               	movlw	high STR_17
 19206  007C2E  6E07               	movwf	i1Buffer_Escrita_COMM_Add_String@dado+1,c
 19207  007C30  0E00               	movlw	0
 19208  007C32  6E09               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda+1,c
 19209  007C34  0E01               	movlw	1
 19210  007C36  6E08               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda,c
 19211  007C38  EC66  F038         	call	i1_Buffer_Escrita_COMM_Add_String	;wreg free
 19212                           
 19213                           ;Wifi.c: 106: _delay((unsigned long)((500)*(40000000/4000.0)));
 19214  007C3C  0E1A               	movlw	26
 19215  007C3E  0100               	movlb	0	; () banked
 19216  007C40  6FBF               	movwf	(??i1_inicia_Post+1)& (0+255),b
 19217  007C42  0E5E               	movlw	94
 19218  007C44  6FBE               	movwf	??i1_inicia_Post& (0+255),b
 19219  007C46  0E6E               	movlw	110
 19220  007C48                     i1u1962_27:
 19221  007C48  2EE8               	decfsz	16360,f,c
 19222  007C4A  D7FE               	bra	i1u1962_27
 19223  007C4C  2FBE               	decfsz	??i1_inicia_Post& (0+255),f,b
 19224  007C4E  D7FC               	bra	i1u1962_27
 19225  007C50  2FBF               	decfsz	(??i1_inicia_Post+1)& (0+255),f,b
 19226  007C52  D7FA               	bra	i1u1962_27
 19227  007C54  F000               	nop	
 19228                           
 19229                           ;Wifi.c: 107: Buffer_Escrita_USB_Add_String("Inicia_Arquivo_Gerrex\r\n", 1);
 19230  007C56  0E65               	movlw	low STR_18
 19231  007C58  6E06               	movwf	i1Buffer_Escrita_USB_Add_String@dado,c
 19232  007C5A  0EFE               	movlw	high STR_18
 19233  007C5C  6E07               	movwf	i1Buffer_Escrita_USB_Add_String@dado+1,c
 19234  007C5E  0E00               	movlw	0
 19235  007C60  6E09               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,c
 19236  007C62  0E01               	movlw	1
 19237  007C64  6E08               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda,c
 19238  007C66  EC04  F038         	call	i1_Buffer_Escrita_USB_Add_String	;wreg free
 19239                           
 19240                           ;Wifi.c: 108: append_Arquivo_Json();
 19241  007C6A  EC85  F029         	call	i1_append_Arquivo_Json	;wreg free
 19242                           
 19243                           ;Wifi.c: 109: Aguarda_dado("-S", "\r", "", Post);
 19244  007C6E  0EF3               	movlw	low STR_19
 19245  007C70  0100               	movlb	0	; () banked
 19246  007C72  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 19247  007C74  0EFF               	movlw	high STR_19
 19248  007C76  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 19249  007C78  0EC4               	movlw	low (STR_26+29)
 19250  007C7A  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 19251  007C7C  0EFD               	movlw	high (STR_26+29)
 19252  007C7E  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 19253  007C80  0E64               	movlw	low (STR_90+23)
 19254  007C82  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 19255  007C84  0EFE               	movlw	high (STR_90+23)
 19256  007C86  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 19257  007C88  0E86               	movlw	low _Post
 19258  007C8A  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 19259  007C8C  0E7D               	movlw	high _Post
 19260  007C8E  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 19261  007C90  EC78  F040         	call	i1_Aguarda_dado	;wreg free
 19262  007C94  0012               	return		;funcret
 19263  007C96                     __end_ofi1_inicia_Post:
 19264                           	opt stack 0
 19265                           
 19266 ;; *************** function i1_append_Arquivo_Json *****************
 19267 ;; Defined at:
 19268 ;;		line 49 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
 19269 ;; Parameters:    Size  Location     Type
 19270 ;;		None
 19271 ;; Auto vars:     Size  Location     Type
 19272 ;;  append_Arqui  120   17[BANK1 ] unsigned char [120]
 19273 ;;  append_Arqui   10  143[BANK1 ] unsigned char [10]
 19274 ;;  append_Arqui    6  137[BANK1 ] unsigned char [6]
 19275 ;;  append_Arqui    4  153[BANK1 ] long 
 19276 ;;  append_Arqui    2  163[BANK1 ] int 
 19277 ;;  append_Arqui    2  157[BANK1 ] unsigned char [2]
 19278 ;;  append_Arqui    2  161[BANK1 ] int 
 19279 ;; Return value:  Size  Location     Type
 19280 ;;                  1    wreg      void 
 19281 ;; Registers used:
 19282 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19283 ;; Tracked objects:
 19284 ;;		On entry : 0/0
 19285 ;;		On exit  : 0/0
 19286 ;;		Unchanged: 0/0
 19287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19289 ;;      Locals:         0       0     148       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19290 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19291 ;;      Totals:         0       4     148       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19292 ;;Total ram usage:      152 bytes
 19293 ;; Hardware stack levels used:    1
 19294 ;; Hardware stack levels required when called:    5
 19295 ;; This function calls:
 19296 ;;		i1___wmul
 19297 ;;		i1_cria_Arquivo
 19298 ;;		i1_sprintf
 19299 ;; This function is called by:
 19300 ;;		i1_inicia_Post
 19301 ;; This function uses a non-reentrant model
 19302 ;;
 19303                           
 19304                           	psect	text72
 19305  00530A                     __ptext72:
 19306                           	opt stack 0
 19307  00530A                     i1_append_Arquivo_Json:
 19308                           	opt stack 14
 19309                           
 19310                           ;Wifi.c: 50: int i = 0;
 19311                           
 19312                           ;incstack = 0
 19313  00530A  0E00               	movlw	0
 19314  00530C  0101               	movlb	1	; () banked
 19315  00530E  6FA4               	movwf	(i1append_Arquivo_Json@i+1)& (0+255),b
 19316  005310  0E00               	movlw	0
 19317  005312  6FA3               	movwf	i1append_Arquivo_Json@i& (0+255),b
 19318                           
 19319                           ;Wifi.c: 51: int primeiro = 0;
 19320  005314  0E00               	movlw	0
 19321  005316  6FA2               	movwf	(i1append_Arquivo_Json@primeiro+1)& (0+255),b
 19322  005318  0E00               	movlw	0
 19323  00531A  6FA1               	movwf	i1append_Arquivo_Json@primeiro& (0+255),b
 19324                           
 19325                           ; BSR set to: 1
 19326                           ;Wifi.c: 52: char virgula[2];
 19327                           ;Wifi.c: 53: char linhaArquivo [120];
 19328                           ;Wifi.c: 55: cria_Arquivo("gerrex.json", "{\"code\":\"00:80:E1:BF:E3:C8\",\"taskResponse
      +                          Frames\":[");
 19329  00531C  0E38               	movlw	low STR_8
 19330  00531E  0100               	movlb	0	; () banked
 19331  005320  6FB6               	movwf	i1cria_Arquivo@nome& (0+255),b
 19332  005322  0EFF               	movlw	high STR_8
 19333  005324  6FB7               	movwf	(i1cria_Arquivo@nome+1)& (0+255),b
 19334  005326  0E29               	movlw	low STR_9
 19335  005328  6FB8               	movwf	i1cria_Arquivo@dado& (0+255),b
 19336  00532A  0EFD               	movlw	high STR_9
 19337  00532C  6FB9               	movwf	(i1cria_Arquivo@dado+1)& (0+255),b
 19338  00532E  EC95  F03A         	call	i1_cria_Arquivo	;wreg free
 19339                           
 19340                           ;Wifi.c: 59: MEMORIA[2] = 0;
 19341  005332  0E00               	movlw	0
 19342  005334  0102               	movlb	2	; () banked
 19343  005336  6F9C               	movwf	(_MEMORIA+8)& (0+255),b
 19344  005338  0E00               	movlw	0
 19345  00533A  6F9D               	movwf	(_MEMORIA+9)& (0+255),b
 19346  00533C  0E00               	movlw	0
 19347  00533E  6F9E               	movwf	(_MEMORIA+10)& (0+255),b
 19348  005340  0E00               	movlw	0
 19349  005342  6F9F               	movwf	(_MEMORIA+11)& (0+255),b
 19350                           
 19351                           ; BSR set to: 2
 19352                           ;Wifi.c: 60: MEMORIA[3] = 0;
 19353  005344  0E00               	movlw	0
 19354  005346  6FA0               	movwf	(_MEMORIA+12)& (0+255),b
 19355  005348  0E00               	movlw	0
 19356  00534A  6FA1               	movwf	(_MEMORIA+13)& (0+255),b
 19357  00534C  0E00               	movlw	0
 19358  00534E  6FA2               	movwf	(_MEMORIA+14)& (0+255),b
 19359  005350  0E00               	movlw	0
 19360  005352  6FA3               	movwf	(_MEMORIA+15)& (0+255),b
 19361                           
 19362                           ; BSR set to: 2
 19363                           ;Wifi.c: 61: MEMORIA[4] = 0;
 19364  005354  0E00               	movlw	0
 19365  005356  6FA4               	movwf	(_MEMORIA+16)& (0+255),b
 19366  005358  0E00               	movlw	0
 19367  00535A  6FA5               	movwf	(_MEMORIA+17)& (0+255),b
 19368  00535C  0E00               	movlw	0
 19369  00535E  6FA6               	movwf	(_MEMORIA+18)& (0+255),b
 19370  005360  0E00               	movlw	0
 19371  005362  6FA7               	movwf	(_MEMORIA+19)& (0+255),b
 19372                           
 19373                           ; BSR set to: 2
 19374                           ;Wifi.c: 62: MEMORIA[5] = 0;
 19375  005364  0E00               	movlw	0
 19376  005366  6FA8               	movwf	(_MEMORIA+20)& (0+255),b
 19377  005368  0E00               	movlw	0
 19378  00536A  6FA9               	movwf	(_MEMORIA+21)& (0+255),b
 19379  00536C  0E00               	movlw	0
 19380  00536E  6FAA               	movwf	(_MEMORIA+22)& (0+255),b
 19381  005370  0E00               	movlw	0
 19382  005372  6FAB               	movwf	(_MEMORIA+23)& (0+255),b
 19383                           
 19384                           ; BSR set to: 2
 19385                           ;Wifi.c: 63: MEMORIA[6] = 0;
 19386  005374  0E00               	movlw	0
 19387  005376  6FAC               	movwf	(_MEMORIA+24)& (0+255),b
 19388  005378  0E00               	movlw	0
 19389  00537A  6FAD               	movwf	(_MEMORIA+25)& (0+255),b
 19390  00537C  0E00               	movlw	0
 19391  00537E  6FAE               	movwf	(_MEMORIA+26)& (0+255),b
 19392  005380  0E00               	movlw	0
 19393  005382  6FAF               	movwf	(_MEMORIA+27)& (0+255),b
 19394                           
 19395                           ; BSR set to: 2
 19396                           ;Wifi.c: 67: for (i = 0; i < tamFrames; i++) {
 19397  005384  0E00               	movlw	0
 19398  005386  0101               	movlb	1	; () banked
 19399  005388  6FA4               	movwf	(i1append_Arquivo_Json@i+1)& (0+255),b
 19400  00538A  0E00               	movlw	0
 19401  00538C  6FA3               	movwf	i1append_Arquivo_Json@i& (0+255),b
 19402  00538E  D0E3               	goto	i1l432
 19403  005390                     
 19404                           ;Wifi.c: 68: char resultado [6];
 19405                           ;Wifi.c: 70: long valorMem = MEMORIA[address[i] - 0x30];
 19406                           
 19407                           ; BSR set to: 1
 19408  005390  0E40               	movlw	64
 19409  005392  0100               	movlb	0	; () banked
 19410  005394  6FBA               	movwf	??i1_append_Arquivo_Json& (0+255),b
 19411  005396  0EFF               	movlw	255
 19412  005398  6FBB               	movwf	(??i1_append_Arquivo_Json+1)& (0+255),b
 19413  00539A  90D8               	bcf	16344,0,c
 19414  00539C  0101               	movlb	1	; () banked
 19415  00539E  35A3               	rlcf	i1append_Arquivo_Json@i& (0+255),w,b
 19416  0053A0  6ED9               	movwf	16345,c
 19417  0053A2  35A4               	rlcf	(i1append_Arquivo_Json@i+1)& (0+255),w,b
 19418  0053A4  6EDA               	movwf	16346,c
 19419  0053A6  0EB4               	movlw	low _address
 19420  0053A8  26D9               	addwf	16345,f,c
 19421  0053AA  0E04               	movlw	high _address
 19422  0053AC  22DA               	addwfc	16346,f,c
 19423  0053AE  006F FF78  F0BC    	movff	16350,??i1_append_Arquivo_Json+2
 19424  0053B4  006F FF74  F0BD    	movff	16349,??i1_append_Arquivo_Json+3
 19425  0053BA  0100               	movlb	0	; () banked
 19426  0053BC  90D8               	bcf	16344,0,c
 19427  0053BE  37BC               	rlcf	(??i1_append_Arquivo_Json+2)& (0+255),f,b
 19428  0053C0  37BD               	rlcf	(??i1_append_Arquivo_Json+3)& (0+255),f,b
 19429  0053C2  90D8               	bcf	16344,0,c
 19430  0053C4  37BC               	rlcf	(??i1_append_Arquivo_Json+2)& (0+255),f,b
 19431  0053C6  37BD               	rlcf	(??i1_append_Arquivo_Json+3)& (0+255),f,b
 19432  0053C8  51BA               	movf	??i1_append_Arquivo_Json& (0+255),w,b
 19433  0053CA  27BC               	addwf	(??i1_append_Arquivo_Json+2)& (0+255),f,b
 19434  0053CC  51BB               	movf	(??i1_append_Arquivo_Json+1)& (0+255),w,b
 19435  0053CE  23BD               	addwfc	(??i1_append_Arquivo_Json+3)& (0+255),f,b
 19436  0053D0  0E94               	movlw	low _MEMORIA
 19437  0053D2  25BC               	addwf	(??i1_append_Arquivo_Json+2)& (0+255),w,b
 19438  0053D4  6ED9               	movwf	16345,c
 19439  0053D6  0E02               	movlw	high _MEMORIA
 19440  0053D8  21BD               	addwfc	(??i1_append_Arquivo_Json+3)& (0+255),w,b
 19441  0053DA  6EDA               	movwf	16346,c
 19442  0053DC  006F FF78  F199    	movff	16350,i1append_Arquivo_Json@valorMem
 19443  0053E2  006F FF78  F19A    	movff	16350,i1append_Arquivo_Json@valorMem+1
 19444  0053E8  006F FF78  F19B    	movff	16350,i1append_Arquivo_Json@valorMem+2
 19445  0053EE  006F FF78  F19C    	movff	16350,i1append_Arquivo_Json@valorMem+3
 19446                           
 19447                           ; BSR set to: 0
 19448                           ;Wifi.c: 71: char valorMem_Char[10];
 19449                           ;Wifi.c: 73: sprintf(valorMem_Char,"%08lx",valorMem);
 19450  0053F4  0E8F               	movlw	low i1append_Arquivo_Json@valorMem_Char
 19451  0053F6  6F69               	movwf	i1sprintf@sp& (0+255),b
 19452  0053F8  0E01               	movlw	high i1append_Arquivo_Json@valorMem_Char
 19453  0053FA  6F6A               	movwf	(i1sprintf@sp+1)& (0+255),b
 19454  0053FC  0ECF               	movlw	low STR_10
 19455  0053FE  6F6B               	movwf	i1sprintf@f& (0+255),b
 19456  005400  0EFF               	movlw	high STR_10
 19457  005402  6F6C               	movwf	(i1sprintf@f+1)& (0+255),b
 19458  005404  0060  F664  F06D   	movff	i1append_Arquivo_Json@valorMem,?i1_sprintf+4
 19459  00540A  0060  F668  F06E   	movff	i1append_Arquivo_Json@valorMem+1,?i1_sprintf+5
 19460  005410  0060  F66C  F06F   	movff	i1append_Arquivo_Json@valorMem+2,?i1_sprintf+6
 19461  005416  0060  F670  F070   	movff	i1append_Arquivo_Json@valorMem+3,?i1_sprintf+7
 19462  00541C  ECB5  F00E         	call	i1_sprintf	;wreg free
 19463                           
 19464                           ;Wifi.c: 74: result[i] = 1;
 19465  005420  90D8               	bcf	16344,0,c
 19466  005422  0101               	movlb	1	; () banked
 19467  005424  35A3               	rlcf	i1append_Arquivo_Json@i& (0+255),w,b
 19468  005426  6ED9               	movwf	16345,c
 19469  005428  35A4               	rlcf	(i1append_Arquivo_Json@i+1)& (0+255),w,b
 19470  00542A  6EDA               	movwf	16346,c
 19471  00542C  0E78               	movlw	low _result
 19472  00542E  26D9               	addwf	16345,f,c
 19473  005430  0E04               	movlw	high _result
 19474  005432  22DA               	addwfc	16346,f,c
 19475  005434  0E01               	movlw	1
 19476  005436  6EDE               	movwf	16350,c
 19477  005438  0E00               	movlw	0
 19478  00543A  6EDD               	movwf	16349,c
 19479                           
 19480                           ; BSR set to: 1
 19481                           ;Wifi.c: 76: if (primeiro == 0) {
 19482  00543C  51A1               	movf	i1append_Arquivo_Json@primeiro& (0+255),w,b
 19483  00543E  11A2               	iorwf	(i1append_Arquivo_Json@primeiro+1)& (0+255),w,b
 19484  005440  A4D8               	btfss	16344,2,c
 19485  005442  D007               	goto	i1l434
 19486                           
 19487                           ; BSR set to: 1
 19488                           ;Wifi.c: 77: virgula[0] = 0x00;
 19489  005444  0E00               	movlw	0
 19490  005446  6F9D               	movwf	i1append_Arquivo_Json@virgula& (0+255),b
 19491                           
 19492                           ;Wifi.c: 78: primeiro = 1;
 19493  005448  0E00               	movlw	0
 19494  00544A  6FA2               	movwf	(i1append_Arquivo_Json@primeiro+1)& (0+255),b
 19495  00544C  0E01               	movlw	1
 19496  00544E  6FA1               	movwf	i1append_Arquivo_Json@primeiro& (0+255),b
 19497                           
 19498                           ;Wifi.c: 79: }
 19499  005450  D004               	goto	i1l435
 19500  005452                     i1l434:
 19501                           
 19502                           ; BSR set to: 1
 19503                           ;Wifi.c: 80: else {
 19504                           ;Wifi.c: 81: virgula[0] = ',';
 19505                           
 19506                           ; BSR set to: 1
 19507  005452  0E2C               	movlw	44
 19508  005454  6F9D               	movwf	i1append_Arquivo_Json@virgula& (0+255),b
 19509                           
 19510                           ;Wifi.c: 82: virgula[1] = 0x00;
 19511  005456  0E00               	movlw	0
 19512  005458  6F9E               	movwf	(i1append_Arquivo_Json@virgula+1)& (0+255),b
 19513  00545A                     i1l435:
 19514                           
 19515                           ; BSR set to: 1
 19516                           ;Wifi.c: 83: }
 19517                           ;Wifi.c: 84: if (result[i] == 1) sprintf(resultado, "true");
 19518                           
 19519                           ; BSR set to: 1
 19520  00545A  90D8               	bcf	16344,0,c
 19521  00545C  35A3               	rlcf	i1append_Arquivo_Json@i& (0+255),w,b
 19522  00545E  6ED9               	movwf	16345,c
 19523  005460  35A4               	rlcf	(i1append_Arquivo_Json@i+1)& (0+255),w,b
 19524  005462  6EDA               	movwf	16346,c
 19525  005464  0E78               	movlw	low _result
 19526  005466  26D9               	addwf	16345,f,c
 19527  005468  0E04               	movlw	high _result
 19528  00546A  22DA               	addwfc	16346,f,c
 19529  00546C  04DE               	decf	16350,w,c
 19530  00546E  10DE               	iorwf	16350,w,c
 19531  005470  A4D8               	btfss	16344,2,c
 19532  005472  D00C               	goto	i1l436
 19533                           
 19534                           ; BSR set to: 1
 19535  005474  0E89               	movlw	low i1append_Arquivo_Json@resultado
 19536  005476  0100               	movlb	0	; () banked
 19537  005478  6F69               	movwf	i1sprintf@sp& (0+255),b
 19538  00547A  0E01               	movlw	high i1append_Arquivo_Json@resultado
 19539  00547C  6F6A               	movwf	(i1sprintf@sp+1)& (0+255),b
 19540  00547E  0EDA               	movlw	low STR_11
 19541  005480  6F6B               	movwf	i1sprintf@f& (0+255),b
 19542  005482  0EFF               	movlw	high STR_11
 19543  005484  6F6C               	movwf	(i1sprintf@f+1)& (0+255),b
 19544  005486  ECB5  F00E         	call	i1_sprintf	;wreg free
 19545  00548A  D00B               	goto	i1l437
 19546  00548C                     i1l436:
 19547                           
 19548                           ;Wifi.c: 85: else sprintf(resultado, "false");
 19549  00548C  0E89               	movlw	low i1append_Arquivo_Json@resultado
 19550  00548E  0100               	movlb	0	; () banked
 19551  005490  6F69               	movwf	i1sprintf@sp& (0+255),b
 19552  005492  0E01               	movlw	high i1append_Arquivo_Json@resultado
 19553  005494  6F6A               	movwf	(i1sprintf@sp+1)& (0+255),b
 19554  005496  0EC9               	movlw	low STR_12
 19555  005498  6F6B               	movwf	i1sprintf@f& (0+255),b
 19556  00549A  0EFF               	movlw	high STR_12
 19557  00549C  6F6C               	movwf	(i1sprintf@f+1)& (0+255),b
 19558  00549E  ECB5  F00E         	call	i1_sprintf	;wreg free
 19559  0054A2                     i1l437:
 19560                           
 19561                           ;Wifi.c: 86: sprintf(linhaArquivo, "%s{\"frameId\":\"%s\",\"value\":\"%c%c,%c%c,%c%c,%c%
      +                          c\",\"result\":%s}", virgula, frameId[i], valorMem_Char[0], valorMem_Char[1], valorMem_C
      +                          har[2],valorMem_Char[3], valorMem_Char[4],valorMem_Char[5],valorMem_Char[6],valorMem_Ch
 19562  0054A2  0060  F68C  F012   	movff	i1append_Arquivo_Json@i,i1___wmul@multiplier
 19563  0054A8  0060  F690  F013   	movff	i1append_Arquivo_Json@i+1,i1___wmul@multiplier+1
 19564  0054AE  0E00               	movlw	0
 19565  0054B0  6E15               	movwf	i1___wmul@multiplicand+1,c
 19566  0054B2  0E25               	movlw	37
 19567  0054B4  6E14               	movwf	i1___wmul@multiplicand,c
 19568  0054B6  ECC0  F044         	call	i1___wmul	;wreg free
 19569  0054BA  0E96               	movlw	low _frameId
 19570  0054BC  2412               	addwf	?i1___wmul,w,c
 19571  0054BE  0101               	movlb	1	; () banked
 19572  0054C0  6F9F               	movwf	i1_append_Arquivo_Json$3040& (0+255),b
 19573  0054C2  0E0A               	movlw	high _frameId
 19574  0054C4  2013               	addwfc	?i1___wmul+1,w,c
 19575  0054C6  6FA0               	movwf	(i1_append_Arquivo_Json$3040+1)& (0+255),b
 19576                           
 19577                           ; BSR set to: 1
 19578                           ;Wifi.c: 86: sprintf(linhaArquivo, "%s{\"frameId\":\"%s\",\"value\":\"%c%c,%c%c,%c%c,%c%
      +                          c\",\"result\":%s}", virgula, frameId[i], valorMem_Char[0], valorMem_Char[1], valorMem_C
      +                          har[2],valorMem_Char[3], valorMem_Char[4],valorMem_Char[5],valorMem_Char[6],valorMem_Ch
 19579  0054C8  0E11               	movlw	low i1append_Arquivo_Json@linhaArquivo
 19580  0054CA  0100               	movlb	0	; () banked
 19581  0054CC  6F69               	movwf	i1sprintf@sp& (0+255),b
 19582  0054CE  0E01               	movlw	high i1append_Arquivo_Json@linhaArquivo
 19583  0054D0  6F6A               	movwf	(i1sprintf@sp+1)& (0+255),b
 19584  0054D2  0EEC               	movlw	low STR_13
 19585  0054D4  6F6B               	movwf	i1sprintf@f& (0+255),b
 19586  0054D6  0EFC               	movlw	high STR_13
 19587  0054D8  6F6C               	movwf	(i1sprintf@f+1)& (0+255),b
 19588  0054DA  0E9D               	movlw	low i1append_Arquivo_Json@virgula
 19589  0054DC  6F6D               	movwf	(?i1_sprintf+4)& (0+255),b
 19590  0054DE  0E01               	movlw	high i1append_Arquivo_Json@virgula
 19591  0054E0  6F6E               	movwf	(?i1_sprintf+5)& (0+255),b
 19592  0054E2  0060  F67C  F06F   	movff	i1_append_Arquivo_Json$3040,?i1_sprintf+6
 19593  0054E8  0060  F680  F070   	movff	i1_append_Arquivo_Json$3040+1,?i1_sprintf+7
 19594  0054EE  0060  F63C  F071   	movff	i1append_Arquivo_Json@valorMem_Char,?i1_sprintf+8
 19595  0054F4  6B72               	clrf	(?i1_sprintf+9)& (0+255),b
 19596  0054F6  0060  F640  F073   	movff	i1append_Arquivo_Json@valorMem_Char+1,?i1_sprintf+10
 19597  0054FC  6B74               	clrf	(?i1_sprintf+11)& (0+255),b
 19598  0054FE  0060  F644  F075   	movff	i1append_Arquivo_Json@valorMem_Char+2,?i1_sprintf+12
 19599  005504  6B76               	clrf	(?i1_sprintf+13)& (0+255),b
 19600  005506  0060  F648  F077   	movff	i1append_Arquivo_Json@valorMem_Char+3,?i1_sprintf+14
 19601  00550C  6B78               	clrf	(?i1_sprintf+15)& (0+255),b
 19602  00550E  0060  F64C  F079   	movff	i1append_Arquivo_Json@valorMem_Char+4,?i1_sprintf+16
 19603  005514  6B7A               	clrf	(?i1_sprintf+17)& (0+255),b
 19604  005516  0060  F650  F07B   	movff	i1append_Arquivo_Json@valorMem_Char+5,?i1_sprintf+18
 19605  00551C  6B7C               	clrf	(?i1_sprintf+19)& (0+255),b
 19606  00551E  0060  F654  F07D   	movff	i1append_Arquivo_Json@valorMem_Char+6,?i1_sprintf+20
 19607  005524  6B7E               	clrf	(?i1_sprintf+21)& (0+255),b
 19608  005526  0060  F658  F07F   	movff	i1append_Arquivo_Json@valorMem_Char+7,?i1_sprintf+22
 19609  00552C  6B80               	clrf	(?i1_sprintf+23)& (0+255),b
 19610  00552E  0E89               	movlw	low i1append_Arquivo_Json@resultado
 19611  005530  6F81               	movwf	(?i1_sprintf+24)& (0+255),b
 19612  005532  0E01               	movlw	high i1append_Arquivo_Json@resultado
 19613  005534  6F82               	movwf	(?i1_sprintf+25)& (0+255),b
 19614  005536  ECB5  F00E         	call	i1_sprintf	;wreg free
 19615                           
 19616                           ;Wifi.c: 89: cria_Arquivo("gerrex.json", linhaArquivo);
 19617  00553A  0E38               	movlw	low STR_8
 19618  00553C  0100               	movlb	0	; () banked
 19619  00553E  6FB6               	movwf	i1cria_Arquivo@nome& (0+255),b
 19620  005540  0EFF               	movlw	high STR_8
 19621  005542  6FB7               	movwf	(i1cria_Arquivo@nome+1)& (0+255),b
 19622  005544  0E11               	movlw	low i1append_Arquivo_Json@linhaArquivo
 19623  005546  6FB8               	movwf	i1cria_Arquivo@dado& (0+255),b
 19624  005548  0E01               	movlw	high i1append_Arquivo_Json@linhaArquivo
 19625  00554A  6FB9               	movwf	(i1cria_Arquivo@dado+1)& (0+255),b
 19626  00554C  EC95  F03A         	call	i1_cria_Arquivo	;wreg free
 19627  005550  0101               	movlb	1	; () banked
 19628  005552  4BA3               	infsnz	i1append_Arquivo_Json@i& (0+255),f,b
 19629  005554  2BA4               	incf	(i1append_Arquivo_Json@i+1)& (0+255),f,b
 19630  005556                     i1l432:
 19631                           
 19632                           ; BSR set to: 1
 19633                           
 19634                           ; BSR set to: 1
 19635  005556  0102               	movlb	2	; () banked
 19636  005558  51E9               	movf	_tamFrames& (0+255),w,b
 19637  00555A  0101               	movlb	1	; () banked
 19638  00555C  5DA3               	subwf	i1append_Arquivo_Json@i& (0+255),w,b
 19639  00555E  51A4               	movf	(i1append_Arquivo_Json@i+1)& (0+255),w,b
 19640  005560  0A80               	xorlw	128
 19641  005562  0100               	movlb	0	; () banked
 19642  005564  6FBA               	movwf	??i1_append_Arquivo_Json& (0+255),b
 19643  005566  0102               	movlb	2	; () banked
 19644  005568  51EA               	movf	(_tamFrames+1)& (0+255),w,b
 19645  00556A  0A80               	xorlw	128
 19646  00556C  0100               	movlb	0	; () banked
 19647  00556E  59BA               	subwfb	??i1_append_Arquivo_Json& (0+255),w,b
 19648  005570  A0D8               	btfss	16344,0,c
 19649  005572  D70E               	goto	i1l433
 19650                           
 19651                           ; BSR set to: 0
 19652                           ;Wifi.c: 97: }
 19653                           ;Wifi.c: 98: cria_Arquivo("gerrex.json", "]}\r");
 19654                           
 19655                           ; BSR set to: 0
 19656  005574  0E38               	movlw	low STR_8
 19657  005576  6FB6               	movwf	i1cria_Arquivo@nome& (0+255),b
 19658  005578  0EFF               	movlw	high STR_8
 19659  00557A  6FB7               	movwf	(i1cria_Arquivo@nome+1)& (0+255),b
 19660  00557C  0EE3               	movlw	low STR_16
 19661  00557E  6FB8               	movwf	i1cria_Arquivo@dado& (0+255),b
 19662  005580  0EFF               	movlw	high STR_16
 19663  005582  6FB9               	movwf	(i1cria_Arquivo@dado+1)& (0+255),b
 19664  005584  EC95  F03A         	call	i1_cria_Arquivo	;wreg free
 19665  005588  0012               	return		;funcret
 19666  00558A                     __end_ofi1_append_Arquivo_Json:
 19667                           	opt stack 0
 19668                           
 19669 ;; *************** function i1_cria_Arquivo *****************
 19670 ;; Defined at:
 19671 ;;		line 36 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
 19672 ;; Parameters:    Size  Location     Type
 19673 ;;  nome            2   86[BANK0 ] PTR unsigned char 
 19674 ;;		 -> STR_15(12), STR_14(12), STR_8(12), 
 19675 ;;  dado            2   88[BANK0 ] PTR unsigned char 
 19676 ;;		 -> STR_16(4), append_Arquivo_Json@linhaArquivo(120), STR_9(51), 
 19677 ;; Auto vars:     Size  Location     Type
 19678 ;;  cria_Arquivo   15    0[BANK1 ] unsigned char [15]
 19679 ;;  cria_Arquivo    2   15[BANK1 ] int 
 19680 ;; Return value:  Size  Location     Type
 19681 ;;                  1    wreg      void 
 19682 ;; Registers used:
 19683 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19684 ;; Tracked objects:
 19685 ;;		On entry : 0/0
 19686 ;;		On exit  : 0/0
 19687 ;;		Unchanged: 0/0
 19688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19689 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19690 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19692 ;;      Totals:         1       4      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19693 ;;Total ram usage:       22 bytes
 19694 ;; Hardware stack levels used:    1
 19695 ;; Hardware stack levels required when called:    4
 19696 ;; This function calls:
 19697 ;;		i1_Buffer_Escrita_COMM_Add_String
 19698 ;;		i1_length
 19699 ;;		i1_sprintf
 19700 ;; This function is called by:
 19701 ;;		i1_append_Arquivo_Json
 19702 ;; This function uses a non-reentrant model
 19703 ;;
 19704                           
 19705                           	psect	text73
 19706  00752A                     __ptext73:
 19707                           	opt stack 0
 19708  00752A                     i1_cria_Arquivo:
 19709                           	opt stack 14
 19710                           
 19711                           ;Wifi.c: 37: unsigned char tamanho [15];
 19712                           ;Wifi.c: 38: int tam = 0;
 19713                           
 19714                           ;incstack = 0
 19715  00752A  0E00               	movlw	0
 19716  00752C  0101               	movlb	1	; () banked
 19717  00752E  6F10               	movwf	(i1cria_Arquivo@tam+1)& (0+255),b
 19718  007530  0E00               	movlw	0
 19719  007532  6F0F               	movwf	i1cria_Arquivo@tam& (0+255),b
 19720                           
 19721                           ; BSR set to: 1
 19722                           ;Wifi.c: 39: _delay((unsigned long)((10)*(40000000/4000.0)));
 19723  007534  0E82               	movlw	130
 19724  007536  6E58               	movwf	??i1_cria_Arquivo& (0+255),c
 19725  007538  0EDE               	movlw	222
 19726  00753A                     i1u1963_27:
 19727  00753A  2EE8               	decfsz	16360,f,c
 19728  00753C  D7FE               	bra	i1u1963_27
 19729  00753E  2E58               	decfsz	??i1_cria_Arquivo& (0+255),f,c
 19730  007540  D7FC               	bra	i1u1963_27
 19731                           
 19732                           ;Wifi.c: 40: Buffer_Escrita_COMM_Add_String("AT+S.FSC=", 1);
 19733  007542  0E77               	movlw	low STR_6
 19734  007544  6E06               	movwf	i1Buffer_Escrita_COMM_Add_String@dado,c
 19735  007546  0EFF               	movlw	high STR_6
 19736  007548  6E07               	movwf	i1Buffer_Escrita_COMM_Add_String@dado+1,c
 19737  00754A  0E00               	movlw	0
 19738  00754C  6E09               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda+1,c
 19739  00754E  0E01               	movlw	1
 19740  007550  6E08               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda,c
 19741  007552  EC66  F038         	call	i1_Buffer_Escrita_COMM_Add_String	;wreg free
 19742                           
 19743                           ;Wifi.c: 41: Buffer_Escrita_COMM_Add_String(nome, 1);
 19744  007556  0060  F2D8  F006   	movff	i1cria_Arquivo@nome,i1Buffer_Escrita_COMM_Add_String@dado
 19745  00755C  0060  F2DC  F007   	movff	i1cria_Arquivo@nome+1,i1Buffer_Escrita_COMM_Add_String@dado+1
 19746  007562  0E00               	movlw	0
 19747  007564  6E09               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda+1,c
 19748  007566  0E01               	movlw	1
 19749  007568  6E08               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda,c
 19750  00756A  EC66  F038         	call	i1_Buffer_Escrita_COMM_Add_String	;wreg free
 19751                           
 19752                           ;Wifi.c: 42: tam = length(dado);
 19753  00756E  0060  F2E0  F004   	movff	i1cria_Arquivo@dado,i1length@dado
 19754  007574  0060  F2E4  F005   	movff	i1cria_Arquivo@dado+1,i1length@dado+1
 19755  00757A  ECED  F041         	call	i1_length	;wreg free
 19756  00757E  0060  F010  F10F   	movff	?i1_length,i1cria_Arquivo@tam
 19757  007584  0060  F014  F110   	movff	?i1_length+1,i1cria_Arquivo@tam+1
 19758                           
 19759                           ;Wifi.c: 43: sprintf(tamanho, ",%i\r", tam);
 19760  00758A  0E00               	movlw	low i1cria_Arquivo@tamanho
 19761  00758C  0100               	movlb	0	; () banked
 19762  00758E  6F69               	movwf	i1sprintf@sp& (0+255),b
 19763  007590  0E01               	movlw	high i1cria_Arquivo@tamanho
 19764  007592  6F6A               	movwf	(i1sprintf@sp+1)& (0+255),b
 19765  007594  0ED5               	movlw	low STR_7
 19766  007596  6F6B               	movwf	i1sprintf@f& (0+255),b
 19767  007598  0EFF               	movlw	high STR_7
 19768  00759A  6F6C               	movwf	(i1sprintf@f+1)& (0+255),b
 19769  00759C  0060  F43C  F06D   	movff	i1cria_Arquivo@tam,?i1_sprintf+4
 19770  0075A2  0060  F440  F06E   	movff	i1cria_Arquivo@tam+1,?i1_sprintf+5
 19771  0075A8  ECB5  F00E         	call	i1_sprintf	;wreg free
 19772                           
 19773                           ;Wifi.c: 44: Buffer_Escrita_COMM_Add_String(tamanho, 1);
 19774  0075AC  0E00               	movlw	low i1cria_Arquivo@tamanho
 19775  0075AE  6E06               	movwf	i1Buffer_Escrita_COMM_Add_String@dado,c
 19776  0075B0  0E01               	movlw	high i1cria_Arquivo@tamanho
 19777  0075B2  6E07               	movwf	i1Buffer_Escrita_COMM_Add_String@dado+1,c
 19778  0075B4  0E00               	movlw	0
 19779  0075B6  6E09               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda+1,c
 19780  0075B8  0E01               	movlw	1
 19781  0075BA  6E08               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda,c
 19782  0075BC  EC66  F038         	call	i1_Buffer_Escrita_COMM_Add_String	;wreg free
 19783                           
 19784                           ;Wifi.c: 45: Buffer_Escrita_COMM_Add_String(dado, 1);
 19785  0075C0  0060  F2E0  F006   	movff	i1cria_Arquivo@dado,i1Buffer_Escrita_COMM_Add_String@dado
 19786  0075C6  0060  F2E4  F007   	movff	i1cria_Arquivo@dado+1,i1Buffer_Escrita_COMM_Add_String@dado+1
 19787  0075CC  0E00               	movlw	0
 19788  0075CE  6E09               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda+1,c
 19789  0075D0  0E01               	movlw	1
 19790  0075D2  6E08               	movwf	i1Buffer_Escrita_COMM_Add_String@aguarda,c
 19791  0075D4  EC66  F038         	call	i1_Buffer_Escrita_COMM_Add_String	;wreg free
 19792  0075D8  0012               	return		;funcret
 19793  0075DA                     __end_ofi1_cria_Arquivo:
 19794                           	opt stack 0
 19795                           
 19796 ;; *************** function i1_length *****************
 19797 ;; Defined at:
 19798 ;;		line 143 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
 19799 ;; Parameters:    Size  Location     Type
 19800 ;;  dado            2    3[COMRAM] PTR unsigned char 
 19801 ;;		 -> STR_16(4), append_Arquivo_Json@linhaArquivo(120), STR_9(51), 
 19802 ;; Auto vars:     Size  Location     Type
 19803 ;;  length          2    7[COMRAM] int 
 19804 ;; Return value:  Size  Location     Type
 19805 ;;                  2    3[COMRAM] int 
 19806 ;; Registers used:
 19807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 19808 ;; Tracked objects:
 19809 ;;		On entry : 0/0
 19810 ;;		On exit  : 0/0
 19811 ;;		Unchanged: 0/0
 19812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19813 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19814 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19815 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19816 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19817 ;;Total ram usage:        6 bytes
 19818 ;; Hardware stack levels used:    1
 19819 ;; This function calls:
 19820 ;;		Nothing
 19821 ;; This function is called by:
 19822 ;;		i1_cria_Arquivo
 19823 ;; This function uses a non-reentrant model
 19824 ;;
 19825                           
 19826                           	psect	text74
 19827  0083DA                     __ptext74:
 19828                           	opt stack 0
 19829  0083DA                     i1_length:
 19830                           	opt stack 17
 19831                           
 19832                           ;Wifi.c: 144: int i = 0;
 19833                           
 19834                           ;incstack = 0
 19835  0083DA  0E00               	movlw	0
 19836  0083DC  6E09               	movwf	i1length@i+1,c
 19837  0083DE  0E00               	movlw	0
 19838  0083E0  6E08               	movwf	i1length@i,c
 19839                           
 19840                           ;Wifi.c: 145: while (dado[i] != 0x00)i++;
 19841  0083E2  D002               	goto	i1l454
 19842  0083E4  4A08               	infsnz	i1length@i,f,c
 19843  0083E6  2A09               	incf	i1length@i+1,f,c
 19844  0083E8                     i1l454:
 19845  0083E8  5008               	movf	i1length@i,w,c
 19846  0083EA  2404               	addwf	i1length@dado,w,c
 19847  0083EC  6E06               	movwf	??i1_length& (0+255),c
 19848  0083EE  5009               	movf	i1length@i+1,w,c
 19849  0083F0  2005               	addwfc	i1length@dado+1,w,c
 19850  0083F2  6E07               	movwf	(??i1_length+1)& (0+255),c
 19851  0083F4  0060  F01B  FFF6   	movff	??i1_length,16374
 19852  0083FA  0060  F01F  FFF7   	movff	??i1_length+1,16375
 19853  008400  0E00               	movlw	low (__mediumconst shr (0+16))
 19854  008402  6EF8               	movwf	16376,c
 19855  008404  0E0F               	movlw	(high __ramtop+-1)
 19856  008406  64F7               	cpfsgt	16375,c
 19857  008408  D003               	bra	i1u1486_27
 19858  00840A  0008               	tblrd		*
 19859  00840C  50F5               	movf	16373,w,c
 19860  00840E  D007               	bra	i1u1486_20
 19861  008410                     i1u1486_27:
 19862  008410  006F FFDB FFE9     	movff	16374,16361
 19863  008416  006F FFDF FFEA     	movff	16375,16362
 19864  00841C  50EF               	movf	16367,w,c
 19865  00841E                     i1u1486_20:
 19866  00841E  0900               	iorlw	0
 19867  008420  A4D8               	btfss	16344,2,c
 19868  008422  D7E0               	goto	i1l455
 19869                           
 19870                           ;Wifi.c: 146: return i;
 19871  008424  0060  F020  F004   	movff	i1length@i,?i1_length
 19872  00842A  0060  F024  F005   	movff	i1length@i+1,?i1_length+1
 19873  008430  0012               	return		;funcret
 19874  008432                     __end_ofi1_length:
 19875                           	opt stack 0
 19876                           
 19877 ;; *************** function _limpa_Buffer_Escrita_USB *****************
 19878 ;; Defined at:
 19879 ;;		line 347 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 19880 ;; Parameters:    Size  Location     Type
 19881 ;;		None
 19882 ;; Auto vars:     Size  Location     Type
 19883 ;;  i               2    3[COMRAM] int 
 19884 ;; Return value:  Size  Location     Type
 19885 ;;                  1    wreg      void 
 19886 ;; Registers used:
 19887 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19888 ;; Tracked objects:
 19889 ;;		On entry : 0/0
 19890 ;;		On exit  : 0/0
 19891 ;;		Unchanged: 0/0
 19892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19894 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19896 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19897 ;;Total ram usage:        2 bytes
 19898 ;; Hardware stack levels used:    1
 19899 ;; This function calls:
 19900 ;;		Nothing
 19901 ;; This function is called by:
 19902 ;;		_SETMACAddr
 19903 ;; This function uses a non-reentrant model
 19904 ;;
 19905                           
 19906                           	psect	text75
 19907  008752                     __ptext75:
 19908                           	opt stack 0
 19909  008752                     _limpa_Buffer_Escrita_USB:
 19910                           	opt stack 20
 19911                           
 19912                           ;Serial.c: 348: int i = 0;
 19913                           
 19914                           ;incstack = 0
 19915  008752  0E00               	movlw	0
 19916  008754  6E05               	movwf	limpa_Buffer_Escrita_USB@i+1,c
 19917  008756  0E00               	movlw	0
 19918  008758  6E04               	movwf	limpa_Buffer_Escrita_USB@i,c
 19919                           
 19920                           ;Serial.c: 349: ponteiro_USB = 0;
 19921  00875A  0E00               	movlw	0
 19922  00875C  0101               	movlb	1	; () banked
 19923  00875E  6FE2               	movwf	(_ponteiro_USB+1)& (0+255),b
 19924  008760  0E00               	movlw	0
 19925  008762  6FE1               	movwf	_ponteiro_USB& (0+255),b
 19926                           
 19927                           ;Serial.c: 350: ponteiro_escrita_USB = 0;
 19928  008764  0E00               	movlw	0
 19929  008766  6FE6               	movwf	(_ponteiro_escrita_USB+1)& (0+255),b
 19930  008768  0E00               	movlw	0
 19931  00876A  6FE5               	movwf	_ponteiro_escrita_USB& (0+255),b
 19932                           
 19933                           ;Serial.c: 351: while (i < 150) {
 19934  00876C  D00A               	goto	i1l356
 19935  00876E                     
 19936                           ;Serial.c: 352: buffer_escrita_USB[i] = 0x00;
 19937                           
 19938                           ; BSR set to: 1
 19939  00876E  0E00               	movlw	low _buffer_escrita_USB
 19940  008770  2404               	addwf	limpa_Buffer_Escrita_USB@i,w,c
 19941  008772  6ED9               	movwf	16345,c
 19942  008774  0E07               	movlw	high _buffer_escrita_USB
 19943  008776  2005               	addwfc	limpa_Buffer_Escrita_USB@i+1,w,c
 19944  008778  6EDA               	movwf	16346,c
 19945  00877A  0E00               	movlw	0
 19946  00877C  6EDF               	movwf	16351,c
 19947                           
 19948                           ;Serial.c: 353: i++;
 19949  00877E  4A04               	infsnz	limpa_Buffer_Escrita_USB@i,f,c
 19950  008780  2A05               	incf	limpa_Buffer_Escrita_USB@i+1,f,c
 19951  008782                     i1l356:
 19952  008782  BE05               	btfsc	limpa_Buffer_Escrita_USB@i+1,7,c
 19953  008784  D7F4               	goto	i1l357
 19954  008786  5005               	movf	limpa_Buffer_Escrita_USB@i+1,w,c
 19955  008788  E105               	bnz	i1l359
 19956  00878A  0E96               	movlw	150
 19957  00878C  5C04               	subwf	limpa_Buffer_Escrita_USB@i,w,c
 19958  00878E  B0D8               	btfsc	16344,0,c
 19959  008790  0012               	return	
 19960  008792  D7ED               	goto	i1l357
 19961  008794                     i1l359:
 19962  008794  0012               	return		;funcret
 19963  008796                     __end_of_limpa_Buffer_Escrita_USB:
 19964                           	opt stack 0
 19965                           
 19966 ;; *************** function _limpa_Buffer_Escrita_COMM *****************
 19967 ;; Defined at:
 19968 ;;		line 357 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 19969 ;; Parameters:    Size  Location     Type
 19970 ;;		None
 19971 ;; Auto vars:     Size  Location     Type
 19972 ;;  i               2    3[COMRAM] int 
 19973 ;; Return value:  Size  Location     Type
 19974 ;;                  1    wreg      void 
 19975 ;; Registers used:
 19976 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19977 ;; Tracked objects:
 19978 ;;		On entry : 0/0
 19979 ;;		On exit  : 0/0
 19980 ;;		Unchanged: 0/0
 19981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19983 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19985 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19986 ;;Total ram usage:        2 bytes
 19987 ;; Hardware stack levels used:    1
 19988 ;; This function calls:
 19989 ;;		Nothing
 19990 ;; This function is called by:
 19991 ;;		_SETMACAddr
 19992 ;; This function uses a non-reentrant model
 19993 ;;
 19994                           
 19995                           	psect	text76
 19996  008796                     __ptext76:
 19997                           	opt stack 0
 19998  008796                     _limpa_Buffer_Escrita_COMM:
 19999                           	opt stack 20
 20000                           
 20001                           ;Serial.c: 358: int i = 0;
 20002                           
 20003                           ;incstack = 0
 20004  008796  0E00               	movlw	0
 20005  008798  6E05               	movwf	limpa_Buffer_Escrita_COMM@i+1,c
 20006  00879A  0E00               	movlw	0
 20007  00879C  6E04               	movwf	limpa_Buffer_Escrita_COMM@i,c
 20008                           
 20009                           ;Serial.c: 359: ponteiro_COMM = 0;
 20010  00879E  0E00               	movlw	0
 20011  0087A0  0101               	movlb	1	; () banked
 20012  0087A2  6FE4               	movwf	(_ponteiro_COMM+1)& (0+255),b
 20013  0087A4  0E00               	movlw	0
 20014  0087A6  6FE3               	movwf	_ponteiro_COMM& (0+255),b
 20015                           
 20016                           ;Serial.c: 360: ponteiro_escrita_COMM = 0;
 20017  0087A8  0E00               	movlw	0
 20018  0087AA  6FE8               	movwf	(_ponteiro_escrita_COMM+1)& (0+255),b
 20019  0087AC  0E00               	movlw	0
 20020  0087AE  6FE7               	movwf	_ponteiro_escrita_COMM& (0+255),b
 20021                           
 20022                           ;Serial.c: 361: while (i < 150) {
 20023  0087B0  D00A               	goto	i1l362
 20024  0087B2                     
 20025                           ;Serial.c: 362: buffer_escrita_comm[i] = 0x00;
 20026                           
 20027                           ; BSR set to: 1
 20028  0087B2  0E00               	movlw	low _buffer_escrita_comm
 20029  0087B4  2404               	addwf	limpa_Buffer_Escrita_COMM@i,w,c
 20030  0087B6  6ED9               	movwf	16345,c
 20031  0087B8  0E06               	movlw	high _buffer_escrita_comm
 20032  0087BA  2005               	addwfc	limpa_Buffer_Escrita_COMM@i+1,w,c
 20033  0087BC  6EDA               	movwf	16346,c
 20034  0087BE  0E00               	movlw	0
 20035  0087C0  6EDF               	movwf	16351,c
 20036                           
 20037                           ;Serial.c: 363: i++;
 20038  0087C2  4A04               	infsnz	limpa_Buffer_Escrita_COMM@i,f,c
 20039  0087C4  2A05               	incf	limpa_Buffer_Escrita_COMM@i+1,f,c
 20040  0087C6                     i1l362:
 20041  0087C6  BE05               	btfsc	limpa_Buffer_Escrita_COMM@i+1,7,c
 20042  0087C8  D7F4               	goto	i1l363
 20043  0087CA  5005               	movf	limpa_Buffer_Escrita_COMM@i+1,w,c
 20044  0087CC  E105               	bnz	i1l365
 20045  0087CE  0E96               	movlw	150
 20046  0087D0  5C04               	subwf	limpa_Buffer_Escrita_COMM@i,w,c
 20047  0087D2  B0D8               	btfsc	16344,0,c
 20048  0087D4  0012               	return	
 20049  0087D6  D7ED               	goto	i1l363
 20050  0087D8                     i1l365:
 20051  0087D8  0012               	return		;funcret
 20052  0087DA                     __end_of_limpa_Buffer_Escrita_COMM:
 20053                           	opt stack 0
 20054                           
 20055 ;; *************** function i1_Buffer_Escrita_USB_Add_String *****************
 20056 ;; Defined at:
 20057 ;;		line 184 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 20058 ;; Parameters:    Size  Location     Type
 20059 ;;  dado            2    5[COMRAM] PTR unsigned char 
 20060 ;;		 -> Verifica_Analogica@valoradstr(10), STR_98(2), STR_85(17), STR_71(20), 
 20061 ;;		 -> STR_70(5), STR_69(11), MACAddress(18), STR_44(25), 
 20062 ;;		 -> STR_43(27), STR_25(10), STR_18(24), main@motivo(20), 
 20063 ;;  aguarda         2    7[COMRAM] short 
 20064 ;; Auto vars:     Size  Location     Type
 20065 ;;  Buffer_Escri    2   11[COMRAM] int 
 20066 ;; Return value:  Size  Location     Type
 20067 ;;                  2    5[COMRAM] short 
 20068 ;; Registers used:
 20069 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20070 ;; Tracked objects:
 20071 ;;		On entry : 0/0
 20072 ;;		On exit  : 0/0
 20073 ;;		Unchanged: 0/0
 20074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20076 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20078 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20079 ;;Total ram usage:        8 bytes
 20080 ;; Hardware stack levels used:    1
 20081 ;; Hardware stack levels required when called:    1
 20082 ;; This function calls:
 20083 ;;		i1_Buffer_Escrita_USB_Add_Char
 20084 ;;		i1_TransmiteBuffer_USB
 20085 ;; This function is called by:
 20086 ;;		_Post
 20087 ;;		_recebeFRAMES
 20088 ;;		_SETMACAddr
 20089 ;;		_GETMACAddr
 20090 ;;		_WIND
 20091 ;;		i1_inicia_Post
 20092 ;; This function uses a non-reentrant model
 20093 ;;
 20094                           
 20095                           	psect	text77
 20096  007008                     __ptext77:
 20097                           	opt stack 0
 20098  007008                     i1_Buffer_Escrita_USB_Add_String:
 20099                           	opt stack 19
 20100                           
 20101                           ;Serial.c: 185: int i = 0;
 20102                           
 20103                           ;incstack = 0
 20104  007008  0E00               	movlw	0
 20105  00700A  6E0D               	movwf	i1Buffer_Escrita_USB_Add_String@i+1,c
 20106  00700C  0E00               	movlw	0
 20107  00700E  6E0C               	movwf	i1Buffer_Escrita_USB_Add_String@i,c
 20108                           
 20109                           ;Serial.c: 186: ponteiro_USB = 0;
 20110  007010  0E00               	movlw	0
 20111  007012  0101               	movlb	1	; () banked
 20112  007014  6FE2               	movwf	(_ponteiro_USB+1)& (0+255),b
 20113  007016  0E00               	movlw	0
 20114  007018  6FE1               	movwf	_ponteiro_USB& (0+255),b
 20115                           
 20116                           ;Serial.c: 187: ponteiro_escrita_USB = 0;
 20117  00701A  0E00               	movlw	0
 20118  00701C  6FE6               	movwf	(_ponteiro_escrita_USB+1)& (0+255),b
 20119  00701E  0E00               	movlw	0
 20120  007020  6FE5               	movwf	_ponteiro_escrita_USB& (0+255),b
 20121                           
 20122                           ;Serial.c: 188: buffer_escrita_USB[0] = 0x00;
 20123  007022  0E00               	movlw	0
 20124  007024  0107               	movlb	7	; () banked
 20125  007026  6F00               	movwf	_buffer_escrita_USB& (0+255),b
 20126                           
 20127                           ;Serial.c: 190: while (dado[i] != 0x00) {
 20128  007028  D027               	goto	i1l285
 20129  00702A                     
 20130                           ;Serial.c: 191: if (i >= 150) return;
 20131                           
 20132                           ; BSR set to: 7
 20133  00702A  BE0D               	btfsc	i1Buffer_Escrita_USB_Add_String@i+1,7,c
 20134  00702C  D006               	goto	i1l287
 20135  00702E  500D               	movf	i1Buffer_Escrita_USB_Add_String@i+1,w,c
 20136  007030  E14C               	bnz	i1l288
 20137  007032  0E96               	movlw	150
 20138  007034  5C0C               	subwf	i1Buffer_Escrita_USB_Add_String@i,w,c
 20139  007036  B0D8               	btfsc	16344,0,c
 20140  007038  0012               	return	
 20141  00703A                     i1l287:
 20142                           
 20143                           ;Serial.c: 192: Buffer_Escrita_USB_Add_Char(dado[i]);
 20144  00703A  500C               	movf	i1Buffer_Escrita_USB_Add_String@i,w,c
 20145  00703C  2406               	addwf	i1Buffer_Escrita_USB_Add_String@dado,w,c
 20146  00703E  6E0A               	movwf	??i1_Buffer_Escrita_USB_Add_String& (0+255),c
 20147  007040  500D               	movf	i1Buffer_Escrita_USB_Add_String@i+1,w,c
 20148  007042  2007               	addwfc	i1Buffer_Escrita_USB_Add_String@dado+1,w,c
 20149  007044  6E0B               	movwf	(??i1_Buffer_Escrita_USB_Add_String+1)& (0+255),c
 20150  007046  0060  F02B  FFF6   	movff	??i1_Buffer_Escrita_USB_Add_String,16374
 20151  00704C  0060  F02F  FFF7   	movff	??i1_Buffer_Escrita_USB_Add_String+1,16375
 20152  007052  0E00               	movlw	low (__mediumconst shr (0+16))
 20153  007054  6EF8               	movwf	16376,c
 20154  007056  0E0F               	movlw	(high __ramtop+-1)
 20155  007058  64F7               	cpfsgt	16375,c
 20156  00705A  D003               	bra	i1u1852_27
 20157  00705C  0008               	tblrd		*
 20158  00705E  50F5               	movf	16373,w,c
 20159  007060  D007               	bra	i1u1852_20
 20160  007062                     i1u1852_27:
 20161  007062  006F FFDB FFE9     	movff	16374,16361
 20162  007068  006F FFDF FFEA     	movff	16375,16362
 20163  00706E  50EF               	movf	16367,w,c
 20164  007070                     i1u1852_20:
 20165  007070  EC8F  F044         	call	i1_Buffer_Escrita_USB_Add_Char
 20166                           
 20167                           ;Serial.c: 193: i++;
 20168  007074  4A0C               	infsnz	i1Buffer_Escrita_USB_Add_String@i,f,c
 20169  007076  2A0D               	incf	i1Buffer_Escrita_USB_Add_String@i+1,f,c
 20170  007078                     i1l285:
 20171  007078  500C               	movf	i1Buffer_Escrita_USB_Add_String@i,w,c
 20172  00707A  2406               	addwf	i1Buffer_Escrita_USB_Add_String@dado,w,c
 20173  00707C  6E0A               	movwf	??i1_Buffer_Escrita_USB_Add_String& (0+255),c
 20174  00707E  500D               	movf	i1Buffer_Escrita_USB_Add_String@i+1,w,c
 20175  007080  2007               	addwfc	i1Buffer_Escrita_USB_Add_String@dado+1,w,c
 20176  007082  6E0B               	movwf	(??i1_Buffer_Escrita_USB_Add_String+1)& (0+255),c
 20177  007084  0060  F02B  FFF6   	movff	??i1_Buffer_Escrita_USB_Add_String,16374
 20178  00708A  0060  F02F  FFF7   	movff	??i1_Buffer_Escrita_USB_Add_String+1,16375
 20179  007090  0E00               	movlw	low (__mediumconst shr (0+16))
 20180  007092  6EF8               	movwf	16376,c
 20181  007094  0E0F               	movlw	(high __ramtop+-1)
 20182  007096  64F7               	cpfsgt	16375,c
 20183  007098  D003               	bra	i1u1853_27
 20184  00709A  0008               	tblrd		*
 20185  00709C  50F5               	movf	16373,w,c
 20186  00709E  D007               	bra	i1u1853_20
 20187  0070A0                     i1u1853_27:
 20188  0070A0  006F FFDB FFE9     	movff	16374,16361
 20189  0070A6  006F FFDF FFEA     	movff	16375,16362
 20190  0070AC  50EF               	movf	16367,w,c
 20191  0070AE                     i1u1853_20:
 20192  0070AE  0900               	iorlw	0
 20193  0070B0  A4D8               	btfss	16344,2,c
 20194  0070B2  D7BB               	goto	i1l286
 20195                           
 20196                           ;Serial.c: 194: }
 20197                           ;Serial.c: 195: if (aguarda){
 20198  0070B4  5008               	movf	i1Buffer_Escrita_USB_Add_String@aguarda,w,c
 20199  0070B6  1009               	iorwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,w,c
 20200  0070B8  B4D8               	btfsc	16344,2,c
 20201  0070BA  0012               	return	
 20202  0070BC                     i1u1855_20:
 20203                           
 20204                           ;Serial.c: 196: while (TransmiteBuffer_USB() == 0);
 20205  0070BC  EC93  F041         	call	i1_TransmiteBuffer_USB	;wreg free
 20206  0070C0  5004               	movf	?i1_TransmiteBuffer_USB,w,c
 20207  0070C2  1005               	iorwf	?i1_TransmiteBuffer_USB+1,w,c
 20208  0070C4  A4D8               	btfss	16344,2,c
 20209  0070C6  0012               	return	
 20210  0070C8  D7F9               	goto	i1u1855_20
 20211  0070CA                     i1l288:
 20212  0070CA  0012               	return		;funcret
 20213  0070CC                     __end_ofi1_Buffer_Escrita_USB_Add_String:
 20214                           	opt stack 0
 20215                           
 20216 ;; *************** function i1_TransmiteBuffer_USB *****************
 20217 ;; Defined at:
 20218 ;;		line 154 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 20219 ;; Parameters:    Size  Location     Type
 20220 ;;		None
 20221 ;; Auto vars:     Size  Location     Type
 20222 ;;		None
 20223 ;; Return value:  Size  Location     Type
 20224 ;;                  2    3[COMRAM] int 
 20225 ;; Registers used:
 20226 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20227 ;; Tracked objects:
 20228 ;;		On entry : 0/0
 20229 ;;		On exit  : 0/0
 20230 ;;		Unchanged: 0/0
 20231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20236 ;;Total ram usage:        2 bytes
 20237 ;; Hardware stack levels used:    1
 20238 ;; This function calls:
 20239 ;;		Nothing
 20240 ;; This function is called by:
 20241 ;;		i1_Buffer_Escrita_USB_Add_String
 20242 ;; This function uses a non-reentrant model
 20243 ;;
 20244                           
 20245                           	psect	text78
 20246  008326                     __ptext78:
 20247                           	opt stack 0
 20248  008326                     i1_TransmiteBuffer_USB:
 20249                           	opt stack 19
 20250                           
 20251                           ;Serial.c: 155: if (U1ERRIRbits.TXMTIF == 0) return 0;
 20252                           
 20253                           ;incstack = 0
 20254  008326  013D               	movlb	61	; () banked
 20255  008328  BFF9               	btfsc	249,7,b	;volatile
 20256  00832A  D005               	goto	i1l270
 20257                           
 20258                           ; BSR set to: 61
 20259  00832C  0E00               	movlw	0
 20260  00832E  6E05               	movwf	?i1_TransmiteBuffer_USB+1,c
 20261  008330  0E00               	movlw	0
 20262  008332  6E04               	movwf	?i1_TransmiteBuffer_USB,c
 20263                           
 20264                           ; BSR set to: 61
 20265  008334  0012               	return	
 20266  008336                     i1l270:
 20267                           
 20268                           ; BSR set to: 61
 20269                           ;Serial.c: 156: if (ponteiro_escrita_USB < ponteiro_USB) {
 20270                           
 20271                           ; BSR set to: 61
 20272  008336  0101               	movlb	1	; () banked
 20273  008338  51E1               	movf	_ponteiro_USB& (0+255),w,b
 20274  00833A  5DE5               	subwf	_ponteiro_escrita_USB& (0+255),w,b
 20275  00833C  51E2               	movf	(_ponteiro_USB+1)& (0+255),w,b
 20276  00833E  59E6               	subwfb	(_ponteiro_escrita_USB+1)& (0+255),w,b
 20277  008340  B0D8               	btfsc	16344,0,c
 20278  008342  D011               	goto	i1l272
 20279                           
 20280                           ; BSR set to: 1
 20281                           ;Serial.c: 157: U1TXB = buffer_escrita_USB[ponteiro_escrita_USB];
 20282  008344  0E00               	movlw	low _buffer_escrita_USB
 20283  008346  25E5               	addwf	_ponteiro_escrita_USB& (0+255),w,b
 20284  008348  6ED9               	movwf	16345,c
 20285  00834A  0E07               	movlw	high _buffer_escrita_USB
 20286  00834C  21E6               	addwfc	(_ponteiro_escrita_USB+1)& (0+255),w,b
 20287  00834E  6EDA               	movwf	16346,c
 20288  008350  50DF               	movf	16351,w,c
 20289  008352  013D               	movlb	61	; () banked
 20290  008354  6FEA               	movwf	234,b	;volatile
 20291                           
 20292                           ; BSR set to: 61
 20293                           ;Serial.c: 158: ponteiro_escrita_USB++;
 20294  008356  0101               	movlb	1	; () banked
 20295  008358  4BE5               	infsnz	_ponteiro_escrita_USB& (0+255),f,b
 20296  00835A  2BE6               	incf	(_ponteiro_escrita_USB+1)& (0+255),f,b
 20297                           
 20298                           ; BSR set to: 1
 20299                           ;Serial.c: 159: return 0;
 20300  00835C  0E00               	movlw	0
 20301  00835E  6E05               	movwf	?i1_TransmiteBuffer_USB+1,c
 20302  008360  0E00               	movlw	0
 20303  008362  6E04               	movwf	?i1_TransmiteBuffer_USB,c
 20304                           
 20305                           ; BSR set to: 1
 20306                           ;Serial.c: 160: } else {
 20307                           
 20308                           ; BSR set to: 1
 20309  008364  0012               	return	
 20310  008366                     i1l272:
 20311                           
 20312                           ; BSR set to: 1
 20313                           ;Serial.c: 161: ponteiro_USB = 0;
 20314                           
 20315                           ; BSR set to: 1
 20316  008366  0E00               	movlw	0
 20317  008368  6FE2               	movwf	(_ponteiro_USB+1)& (0+255),b
 20318  00836A  0E00               	movlw	0
 20319  00836C  6FE1               	movwf	_ponteiro_USB& (0+255),b
 20320                           
 20321                           ;Serial.c: 162: ponteiro_escrita_USB = 0;
 20322  00836E  0E00               	movlw	0
 20323  008370  6FE6               	movwf	(_ponteiro_escrita_USB+1)& (0+255),b
 20324  008372  0E00               	movlw	0
 20325  008374  6FE5               	movwf	_ponteiro_escrita_USB& (0+255),b
 20326                           
 20327                           ;Serial.c: 163: return 1;
 20328  008376  0E00               	movlw	0
 20329  008378  6E05               	movwf	?i1_TransmiteBuffer_USB+1,c
 20330  00837A  0E01               	movlw	1
 20331  00837C  6E04               	movwf	?i1_TransmiteBuffer_USB,c
 20332                           
 20333                           ; BSR set to: 1
 20334  00837E  0012               	return	
 20335  008380                     __end_ofi1_TransmiteBuffer_USB:
 20336                           	opt stack 0
 20337                           
 20338 ;; *************** function i1_Buffer_Escrita_USB_Add_Char *****************
 20339 ;; Defined at:
 20340 ;;		line 200 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 20341 ;; Parameters:    Size  Location     Type
 20342 ;;  dado            1    wreg     unsigned char 
 20343 ;; Auto vars:     Size  Location     Type
 20344 ;;  dado            1    3[COMRAM] unsigned char 
 20345 ;; Return value:  Size  Location     Type
 20346 ;;                  2    0[None  ] short 
 20347 ;; Registers used:
 20348 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20349 ;; Tracked objects:
 20350 ;;		On entry : 0/0
 20351 ;;		On exit  : 0/0
 20352 ;;		Unchanged: 0/0
 20353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20357 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20358 ;;Total ram usage:        1 bytes
 20359 ;; Hardware stack levels used:    1
 20360 ;; This function calls:
 20361 ;;		Nothing
 20362 ;; This function is called by:
 20363 ;;		_Interrupt_WIFI_GSM
 20364 ;;		i1_Buffer_Escrita_USB_Add_String
 20365 ;; This function uses a non-reentrant model
 20366 ;;
 20367                           
 20368                           	psect	text79
 20369  00891E                     __ptext79:
 20370                           	opt stack 0
 20371  00891E                     i1_Buffer_Escrita_USB_Add_Char:
 20372                           	opt stack 22
 20373                           
 20374                           ;incstack = 0
 20375                           ;i1Buffer_Escrita_USB_Add_Char@dado stored from wreg
 20376  00891E  6E04               	movwf	i1Buffer_Escrita_USB_Add_Char@dado,c
 20377                           
 20378                           ;Serial.c: 201: buffer_escrita_USB[ponteiro_USB] = dado;
 20379  008920  0E00               	movlw	low _buffer_escrita_USB
 20380  008922  0101               	movlb	1	; () banked
 20381  008924  25E1               	addwf	_ponteiro_USB& (0+255),w,b
 20382  008926  6ED9               	movwf	16345,c
 20383  008928  0E07               	movlw	high _buffer_escrita_USB
 20384  00892A  21E2               	addwfc	(_ponteiro_USB+1)& (0+255),w,b
 20385  00892C  6EDA               	movwf	16346,c
 20386  00892E  0060  F013  FFDF   	movff	i1Buffer_Escrita_USB_Add_Char@dado,16351
 20387                           
 20388                           ; BSR set to: 1
 20389                           ;Serial.c: 207: if (ponteiro_USB >= 150) ponteiro_USB = 0;
 20390  008934  51E2               	movf	(_ponteiro_USB+1)& (0+255),w,b
 20391  008936  E104               	bnz	i1u1692_20
 20392  008938  0E96               	movlw	150
 20393  00893A  5DE1               	subwf	_ponteiro_USB& (0+255),w,b
 20394  00893C  A0D8               	btfss	16344,0,c
 20395  00893E  D005               	goto	i1l296
 20396  008940                     i1u1692_20:
 20397                           
 20398                           ; BSR set to: 1
 20399  008940  0E00               	movlw	0
 20400  008942  6FE2               	movwf	(_ponteiro_USB+1)& (0+255),b
 20401  008944  0E00               	movlw	0
 20402  008946  6FE1               	movwf	_ponteiro_USB& (0+255),b
 20403  008948  0012               	return	
 20404  00894A                     i1l296:
 20405                           
 20406                           ; BSR set to: 1
 20407                           ;Serial.c: 208: else ponteiro_USB++;
 20408                           
 20409                           ; BSR set to: 1
 20410  00894A  4BE1               	infsnz	_ponteiro_USB& (0+255),f,b
 20411  00894C  2BE2               	incf	(_ponteiro_USB+1)& (0+255),f,b
 20412  00894E  0012               	return	
 20413  008950                     __end_ofi1_Buffer_Escrita_USB_Add_Char:
 20414                           	opt stack 0
 20415                           
 20416 ;; *************** function i1_Buffer_Escrita_COMM_Add_String *****************
 20417 ;; Defined at:
 20418 ;;		line 217 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 20419 ;; Parameters:    Size  Location     Type
 20420 ;;  dado            2    5[COMRAM] PTR unsigned char 
 20421 ;;		 -> STR_103(15), STR_99(15), STR_91(136), STR_90(24), 
 20422 ;;		 -> STR_89(44), STR_88(31), STR_87(30), STR_86(19), 
 20423 ;;		 -> STR_78(91), STR_72(28), STR_39(70), STR_35(8), 
 20424 ;;		 -> STR_34(25), STR_30(84), STR_26(31), STR_17(22), 
 20425 ;;		 -> STR_16(4), STR_15(12), STR_14(12), append_Arquivo_Json@linhaArquivo(120), 
 20426 ;;		 -> STR_9(51), STR_8(12), cria_Arquivo@tamanho(15), STR_6(10), 
 20427 ;;  aguarda         2    7[COMRAM] short 
 20428 ;; Auto vars:     Size  Location     Type
 20429 ;;  Buffer_Escri    2   11[COMRAM] int 
 20430 ;; Return value:  Size  Location     Type
 20431 ;;                  2    5[COMRAM] short 
 20432 ;; Registers used:
 20433 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20434 ;; Tracked objects:
 20435 ;;		On entry : 0/0
 20436 ;;		On exit  : 0/0
 20437 ;;		Unchanged: 0/0
 20438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20439 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20440 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20441 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20442 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20443 ;;Total ram usage:        8 bytes
 20444 ;; Hardware stack levels used:    1
 20445 ;; Hardware stack levels required when called:    1
 20446 ;; This function calls:
 20447 ;;		i1_Buffer_Escrita_COMM_Add_Char
 20448 ;;		i1_TransmiteBuffer_COMM
 20449 ;; This function is called by:
 20450 ;;		_Post
 20451 ;;		_Post2
 20452 ;;		_recebe
 20453 ;;		_GETMACAddr
 20454 ;;		_TASK_POST
 20455 ;;		_SOCKET_RX
 20456 ;;		i1_cria_Arquivo
 20457 ;;		i1_inicia_Post
 20458 ;; This function uses a non-reentrant model
 20459 ;;
 20460                           
 20461                           	psect	text80
 20462  0070CC                     __ptext80:
 20463                           	opt stack 0
 20464  0070CC                     i1_Buffer_Escrita_COMM_Add_String:
 20465                           	opt stack 19
 20466                           
 20467                           ;Serial.c: 218: int i = 0;
 20468                           
 20469                           ; BSR set to: 1
 20470                           ;incstack = 0
 20471  0070CC  0E00               	movlw	0
 20472  0070CE  6E0D               	movwf	i1Buffer_Escrita_COMM_Add_String@i+1,c
 20473  0070D0  0E00               	movlw	0
 20474  0070D2  6E0C               	movwf	i1Buffer_Escrita_COMM_Add_String@i,c
 20475                           
 20476                           ;Serial.c: 220: ponteiro_COMM = 0;
 20477  0070D4  0E00               	movlw	0
 20478  0070D6  0101               	movlb	1	; () banked
 20479  0070D8  6FE4               	movwf	(_ponteiro_COMM+1)& (0+255),b
 20480  0070DA  0E00               	movlw	0
 20481  0070DC  6FE3               	movwf	_ponteiro_COMM& (0+255),b
 20482                           
 20483                           ;Serial.c: 221: ponteiro_escrita_COMM = 0;
 20484  0070DE  0E00               	movlw	0
 20485  0070E0  6FE8               	movwf	(_ponteiro_escrita_COMM+1)& (0+255),b
 20486  0070E2  0E00               	movlw	0
 20487  0070E4  6FE7               	movwf	_ponteiro_escrita_COMM& (0+255),b
 20488                           
 20489                           ;Serial.c: 222: buffer_escrita_comm[0] = 0x00;
 20490  0070E6  0E00               	movlw	0
 20491  0070E8  0106               	movlb	6	; () banked
 20492  0070EA  6F00               	movwf	_buffer_escrita_comm& (0+255),b
 20493                           
 20494                           ;Serial.c: 224: while (dado[i] != 0x00) {
 20495  0070EC  D027               	goto	i1l306
 20496  0070EE                     
 20497                           ;Serial.c: 225: if (i >= 150) return;
 20498                           
 20499                           ; BSR set to: 6
 20500  0070EE  BE0D               	btfsc	i1Buffer_Escrita_COMM_Add_String@i+1,7,c
 20501  0070F0  D006               	goto	i1l308
 20502  0070F2  500D               	movf	i1Buffer_Escrita_COMM_Add_String@i+1,w,c
 20503  0070F4  E14C               	bnz	i1l309
 20504  0070F6  0E96               	movlw	150
 20505  0070F8  5C0C               	subwf	i1Buffer_Escrita_COMM_Add_String@i,w,c
 20506  0070FA  B0D8               	btfsc	16344,0,c
 20507  0070FC  0012               	return	
 20508  0070FE                     i1l308:
 20509                           
 20510                           ;Serial.c: 226: Buffer_Escrita_COMM_Add_Char(dado[i]);
 20511  0070FE  500C               	movf	i1Buffer_Escrita_COMM_Add_String@i,w,c
 20512  007100  2406               	addwf	i1Buffer_Escrita_COMM_Add_String@dado,w,c
 20513  007102  6E0A               	movwf	??i1_Buffer_Escrita_COMM_Add_String& (0+255),c
 20514  007104  500D               	movf	i1Buffer_Escrita_COMM_Add_String@i+1,w,c
 20515  007106  2007               	addwfc	i1Buffer_Escrita_COMM_Add_String@dado+1,w,c
 20516  007108  6E0B               	movwf	(??i1_Buffer_Escrita_COMM_Add_String+1)& (0+255),c
 20517  00710A  0060  F02B  FFF6   	movff	??i1_Buffer_Escrita_COMM_Add_String,16374
 20518  007110  0060  F02F  FFF7   	movff	??i1_Buffer_Escrita_COMM_Add_String+1,16375
 20519  007116  0E00               	movlw	low (__mediumconst shr (0+16))
 20520  007118  6EF8               	movwf	16376,c
 20521  00711A  0E0F               	movlw	(high __ramtop+-1)
 20522  00711C  64F7               	cpfsgt	16375,c
 20523  00711E  D003               	bra	i1u1481_27
 20524  007120  0008               	tblrd		*
 20525  007122  50F5               	movf	16373,w,c
 20526  007124  D007               	bra	i1u1481_20
 20527  007126                     i1u1481_27:
 20528  007126  006F FFDB FFE9     	movff	16374,16361
 20529  00712C  006F FFDF FFEA     	movff	16375,16362
 20530  007132  50EF               	movf	16367,w,c
 20531  007134                     i1u1481_20:
 20532  007134  EC76  F044         	call	i1_Buffer_Escrita_COMM_Add_Char
 20533                           
 20534                           ;Serial.c: 227: i++;
 20535  007138  4A0C               	infsnz	i1Buffer_Escrita_COMM_Add_String@i,f,c
 20536  00713A  2A0D               	incf	i1Buffer_Escrita_COMM_Add_String@i+1,f,c
 20537  00713C                     i1l306:
 20538  00713C  500C               	movf	i1Buffer_Escrita_COMM_Add_String@i,w,c
 20539  00713E  2406               	addwf	i1Buffer_Escrita_COMM_Add_String@dado,w,c
 20540  007140  6E0A               	movwf	??i1_Buffer_Escrita_COMM_Add_String& (0+255),c
 20541  007142  500D               	movf	i1Buffer_Escrita_COMM_Add_String@i+1,w,c
 20542  007144  2007               	addwfc	i1Buffer_Escrita_COMM_Add_String@dado+1,w,c
 20543  007146  6E0B               	movwf	(??i1_Buffer_Escrita_COMM_Add_String+1)& (0+255),c
 20544  007148  0060  F02B  FFF6   	movff	??i1_Buffer_Escrita_COMM_Add_String,16374
 20545  00714E  0060  F02F  FFF7   	movff	??i1_Buffer_Escrita_COMM_Add_String+1,16375
 20546  007154  0E00               	movlw	low (__mediumconst shr (0+16))
 20547  007156  6EF8               	movwf	16376,c
 20548  007158  0E0F               	movlw	(high __ramtop+-1)
 20549  00715A  64F7               	cpfsgt	16375,c
 20550  00715C  D003               	bra	i1u1482_27
 20551  00715E  0008               	tblrd		*
 20552  007160  50F5               	movf	16373,w,c
 20553  007162  D007               	bra	i1u1482_20
 20554  007164                     i1u1482_27:
 20555  007164  006F FFDB FFE9     	movff	16374,16361
 20556  00716A  006F FFDF FFEA     	movff	16375,16362
 20557  007170  50EF               	movf	16367,w,c
 20558  007172                     i1u1482_20:
 20559  007172  0900               	iorlw	0
 20560  007174  A4D8               	btfss	16344,2,c
 20561  007176  D7BB               	goto	i1l307
 20562                           
 20563                           ;Serial.c: 228: }
 20564                           ;Serial.c: 229: if (aguarda){
 20565  007178  5008               	movf	i1Buffer_Escrita_COMM_Add_String@aguarda,w,c
 20566  00717A  1009               	iorwf	i1Buffer_Escrita_COMM_Add_String@aguarda+1,w,c
 20567  00717C  B4D8               	btfsc	16344,2,c
 20568  00717E  0012               	return	
 20569  007180                     i1u1484_20:
 20570                           
 20571                           ;Serial.c: 230: while (TransmiteBuffer_COMM() == 0);
 20572  007180  ECC0  F041         	call	i1_TransmiteBuffer_COMM	;wreg free
 20573  007184  5004               	movf	?i1_TransmiteBuffer_COMM,w,c
 20574  007186  1005               	iorwf	?i1_TransmiteBuffer_COMM+1,w,c
 20575  007188  A4D8               	btfss	16344,2,c
 20576  00718A  0012               	return	
 20577  00718C  D7F9               	goto	i1u1484_20
 20578  00718E                     i1l309:
 20579  00718E  0012               	return		;funcret
 20580  007190                     __end_ofi1_Buffer_Escrita_COMM_Add_String:
 20581                           	opt stack 0
 20582                           
 20583 ;; *************** function i1_TransmiteBuffer_COMM *****************
 20584 ;; Defined at:
 20585 ;;		line 167 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 20586 ;; Parameters:    Size  Location     Type
 20587 ;;		None
 20588 ;; Auto vars:     Size  Location     Type
 20589 ;;		None
 20590 ;; Return value:  Size  Location     Type
 20591 ;;                  2    3[COMRAM] int 
 20592 ;; Registers used:
 20593 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20594 ;; Tracked objects:
 20595 ;;		On entry : 0/0
 20596 ;;		On exit  : 0/0
 20597 ;;		Unchanged: 0/0
 20598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20602 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20603 ;;Total ram usage:        2 bytes
 20604 ;; Hardware stack levels used:    1
 20605 ;; This function calls:
 20606 ;;		Nothing
 20607 ;; This function is called by:
 20608 ;;		_SOCKET_RX
 20609 ;;		i1_Buffer_Escrita_COMM_Add_String
 20610 ;; This function uses a non-reentrant model
 20611 ;;
 20612                           
 20613                           	psect	text81
 20614  008380                     __ptext81:
 20615                           	opt stack 0
 20616  008380                     i1_TransmiteBuffer_COMM:
 20617                           	opt stack 19
 20618                           
 20619                           ;Serial.c: 168: if (U2ERRIRbits.TXMTIF == 0) return 0;
 20620                           
 20621                           ;incstack = 0
 20622  008380  013D               	movlb	61	; () banked
 20623  008382  BFE1               	btfsc	225,7,b	;volatile
 20624  008384  D005               	goto	i1l276
 20625                           
 20626                           ; BSR set to: 61
 20627  008386  0E00               	movlw	0
 20628  008388  6E05               	movwf	?i1_TransmiteBuffer_COMM+1,c
 20629  00838A  0E00               	movlw	0
 20630  00838C  6E04               	movwf	?i1_TransmiteBuffer_COMM,c
 20631                           
 20632                           ; BSR set to: 61
 20633  00838E  0012               	return	
 20634  008390                     i1l276:
 20635                           
 20636                           ; BSR set to: 61
 20637                           ;Serial.c: 169: if (ponteiro_escrita_COMM < ponteiro_COMM) {
 20638                           
 20639                           ; BSR set to: 61
 20640  008390  0101               	movlb	1	; () banked
 20641  008392  51E3               	movf	_ponteiro_COMM& (0+255),w,b
 20642  008394  5DE7               	subwf	_ponteiro_escrita_COMM& (0+255),w,b
 20643  008396  51E4               	movf	(_ponteiro_COMM+1)& (0+255),w,b
 20644  008398  59E8               	subwfb	(_ponteiro_escrita_COMM+1)& (0+255),w,b
 20645  00839A  B0D8               	btfsc	16344,0,c
 20646  00839C  D011               	goto	i1l278
 20647                           
 20648                           ; BSR set to: 1
 20649                           ;Serial.c: 170: U2TXB = buffer_escrita_comm[ponteiro_escrita_COMM];
 20650  00839E  0E00               	movlw	low _buffer_escrita_comm
 20651  0083A0  25E7               	addwf	_ponteiro_escrita_COMM& (0+255),w,b
 20652  0083A2  6ED9               	movwf	16345,c
 20653  0083A4  0E06               	movlw	high _buffer_escrita_comm
 20654  0083A6  21E8               	addwfc	(_ponteiro_escrita_COMM+1)& (0+255),w,b
 20655  0083A8  6EDA               	movwf	16346,c
 20656  0083AA  50DF               	movf	16351,w,c
 20657  0083AC  013D               	movlb	61	; () banked
 20658  0083AE  6FD2               	movwf	210,b	;volatile
 20659                           
 20660                           ; BSR set to: 61
 20661                           ;Serial.c: 171: ponteiro_escrita_COMM++;
 20662  0083B0  0101               	movlb	1	; () banked
 20663  0083B2  4BE7               	infsnz	_ponteiro_escrita_COMM& (0+255),f,b
 20664  0083B4  2BE8               	incf	(_ponteiro_escrita_COMM+1)& (0+255),f,b
 20665                           
 20666                           ; BSR set to: 1
 20667                           ;Serial.c: 172: return 0;
 20668  0083B6  0E00               	movlw	0
 20669  0083B8  6E05               	movwf	?i1_TransmiteBuffer_COMM+1,c
 20670  0083BA  0E00               	movlw	0
 20671  0083BC  6E04               	movwf	?i1_TransmiteBuffer_COMM,c
 20672                           
 20673                           ; BSR set to: 1
 20674                           ;Serial.c: 173: } else {
 20675                           
 20676                           ; BSR set to: 1
 20677  0083BE  0012               	return	
 20678  0083C0                     i1l278:
 20679                           
 20680                           ; BSR set to: 1
 20681                           ;Serial.c: 174: ponteiro_COMM = 0;
 20682                           
 20683                           ; BSR set to: 1
 20684  0083C0  0E00               	movlw	0
 20685  0083C2  6FE4               	movwf	(_ponteiro_COMM+1)& (0+255),b
 20686  0083C4  0E00               	movlw	0
 20687  0083C6  6FE3               	movwf	_ponteiro_COMM& (0+255),b
 20688                           
 20689                           ;Serial.c: 175: ponteiro_escrita_COMM = 0;
 20690  0083C8  0E00               	movlw	0
 20691  0083CA  6FE8               	movwf	(_ponteiro_escrita_COMM+1)& (0+255),b
 20692  0083CC  0E00               	movlw	0
 20693  0083CE  6FE7               	movwf	_ponteiro_escrita_COMM& (0+255),b
 20694                           
 20695                           ;Serial.c: 176: return 1;
 20696  0083D0  0E00               	movlw	0
 20697  0083D2  6E05               	movwf	?i1_TransmiteBuffer_COMM+1,c
 20698  0083D4  0E01               	movlw	1
 20699  0083D6  6E04               	movwf	?i1_TransmiteBuffer_COMM,c
 20700                           
 20701                           ; BSR set to: 1
 20702  0083D8  0012               	return	
 20703  0083DA                     __end_ofi1_TransmiteBuffer_COMM:
 20704                           	opt stack 0
 20705                           
 20706 ;; *************** function i1_Aguarda_dado *****************
 20707 ;; Defined at:
 20708 ;;		line 217 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 20709 ;; Parameters:    Size  Location     Type
 20710 ;;  inicio          2   86[BANK0 ] PTR unsigned char 
 20711 ;;		 -> STR_104(7), STR_100(10), STR_95(4), STR_92(7), 
 20712 ;;		 -> STR_82(7), STR_79(2), STR_73(17), STR_66(3), 
 20713 ;;		 -> STR_63(6), STR_60(7), STR_57(6), STR_54(7), 
 20714 ;;		 -> STR_51(8), STR_48(10), STR_45(2), STR_40(2), 
 20715 ;;		 -> STR_36(10), STR_31(3), STR_27(3), STR_22(2), 
 20716 ;;		 -> STR_19(3), STR_3(10), 
 20717 ;;  fim             2   88[BANK0 ] PTR unsigned char 
 20718 ;;		 -> STR_105(2), STR_101(3), STR_96(2), STR_93(2), 
 20719 ;;		 -> STR_83(7), STR_80(3), STR_74(2), STR_67(2), 
 20720 ;;		 -> STR_64(3), STR_61(2), STR_58(2), STR_55(2), 
 20721 ;;		 -> STR_52(3), STR_49(2), STR_46(2), STR_41(2), 
 20722 ;;		 -> STR_37(2), STR_32(3), STR_28(3), STR_23(2), 
 20723 ;;		 -> STR_20(2), STR_4(2), 
 20724 ;;  error           2   90[BANK0 ] PTR unsigned char 
 20725 ;;		 -> STR_106(1), STR_102(1), STR_97(1), STR_94(1), 
 20726 ;;		 -> STR_84(7), STR_81(1), STR_75(7), STR_68(1), 
 20727 ;;		 -> STR_65(1), STR_62(1), STR_59(1), STR_56(1), 
 20728 ;;		 -> STR_53(1), STR_50(1), STR_47(1), STR_42(1), 
 20729 ;;		 -> STR_38(1), STR_33(1), STR_29(1), STR_24(1), 
 20730 ;;		 -> STR_21(1), STR_5(1), 
 20731 ;;  ff              2   92[BANK0 ] PTR FTN()PTR void 
 20732 ;;		 -> SOCKET_RX(1), WIND(1), TASK_POST(1), SETMACAddr(1), 
 20733 ;;		 -> Absolute function(3), recebeSIZE(1), recebeADDRESS(1), recebeFUNCTIONCODE(1), 
 20734 ;;		 -> recebeNODEID(1), recebeNETWORKID(1), recebeFRAMEID(1), recebeFRAMES(1), 
 20735 ;;		 -> recebe(1), Post2(1), nada(1), Post(1), 
 20736 ;;		 -> GETMACAddr(1), 
 20737 ;; Auto vars:     Size  Location     Type
 20738 ;;		None
 20739 ;; Return value:  Size  Location     Type
 20740 ;;                  1    wreg      void 
 20741 ;; Registers used:
 20742 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20743 ;; Tracked objects:
 20744 ;;		On entry : 0/0
 20745 ;;		On exit  : 0/0
 20746 ;;		Unchanged: 0/0
 20747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20748 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20751 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20752 ;;Total ram usage:        8 bytes
 20753 ;; Hardware stack levels used:    1
 20754 ;; Hardware stack levels required when called:    4
 20755 ;; This function calls:
 20756 ;;		i1_sprintf
 20757 ;; This function is called by:
 20758 ;;		_Post
 20759 ;;		_Post2
 20760 ;;		_recebe
 20761 ;;		_recebeFRAMES
 20762 ;;		_recebeFRAMEID
 20763 ;;		_recebeNETWORKID
 20764 ;;		_recebeNODEID
 20765 ;;		_recebeFUNCTIONCODE
 20766 ;;		_recebeADDRESS
 20767 ;;		_recebeSIZE
 20768 ;;		_GETMACAddr
 20769 ;;		_TASK_POST
 20770 ;;		_WIND
 20771 ;;		_SOCKET_RX
 20772 ;;		i1_inicia_Post
 20773 ;; This function uses a non-reentrant model
 20774 ;;
 20775                           
 20776                           	psect	text82
 20777  0080F0                     __ptext82:
 20778                           	opt stack 0
 20779  0080F0                     i1_Aguarda_dado:
 20780                           	opt stack 16
 20781                           
 20782                           ;GERREX.c: 218: PORTBbits.RB2 = 1;
 20783                           
 20784                           ;incstack = 0
 20785  0080F0  013F               	movlb	63	; () banked
 20786  0080F2  85CB               	bsf	203,2,b	;volatile
 20787                           
 20788                           ; BSR set to: 63
 20789                           ;GERREX.c: 219: Aguarda_Ponteiro = 0;
 20790  0080F4  0E00               	movlw	0
 20791  0080F6  0100               	movlb	0	; () banked
 20792  0080F8  6FE4               	movwf	(_Aguarda_Ponteiro+1)& (0+255),b
 20793  0080FA  0E00               	movlw	0
 20794  0080FC  6FE3               	movwf	_Aguarda_Ponteiro& (0+255),b
 20795                           
 20796                           ; BSR set to: 0
 20797                           ;GERREX.c: 220: sprintf(Aguarda_str, "%s", inicio);
 20798  0080FE  0EAA               	movlw	low _Aguarda_str
 20799  008100  6F69               	movwf	i1sprintf@sp& (0+255),b
 20800  008102  0E03               	movlw	high _Aguarda_str
 20801  008104  6F6A               	movwf	(i1sprintf@sp+1)& (0+255),b
 20802  008106  0EED               	movlw	low STR_76
 20803  008108  6F6B               	movwf	i1sprintf@f& (0+255),b
 20804  00810A  0EFF               	movlw	high STR_76
 20805  00810C  6F6C               	movwf	(i1sprintf@f+1)& (0+255),b
 20806  00810E  0060  F2D8  F06D   	movff	i1Aguarda_dado@inicio,?i1_sprintf+4
 20807  008114  0060  F2DC  F06E   	movff	i1Aguarda_dado@inicio+1,?i1_sprintf+5
 20808  00811A  ECB5  F00E         	call	i1_sprintf	;wreg free
 20809                           
 20810                           ;GERREX.c: 221: sprintf(Aguarda_end, "%s", fim);
 20811  00811E  0ED0               	movlw	low _Aguarda_end
 20812  008120  0100               	movlb	0	; () banked
 20813  008122  6F69               	movwf	i1sprintf@sp& (0+255),b
 20814  008124  0E03               	movlw	high _Aguarda_end
 20815  008126  6F6A               	movwf	(i1sprintf@sp+1)& (0+255),b
 20816  008128  0EED               	movlw	low STR_76
 20817  00812A  6F6B               	movwf	i1sprintf@f& (0+255),b
 20818  00812C  0EFF               	movlw	high STR_76
 20819  00812E  6F6C               	movwf	(i1sprintf@f+1)& (0+255),b
 20820  008130  0060  F2E0  F06D   	movff	i1Aguarda_dado@fim,?i1_sprintf+4
 20821  008136  0060  F2E4  F06E   	movff	i1Aguarda_dado@fim+1,?i1_sprintf+5
 20822  00813C  ECB5  F00E         	call	i1_sprintf	;wreg free
 20823                           
 20824                           ;GERREX.c: 222: Aguarda_Funcao = ff;
 20825  008140  0060  F2F0  F2F1   	movff	i1Aguarda_dado@ff,_Aguarda_Funcao
 20826  008146  0060  F2F4  F2F2   	movff	i1Aguarda_dado@ff+1,_Aguarda_Funcao+1
 20827                           
 20828                           ;GERREX.c: 223: PORTBbits.RB2 = 0;
 20829  00814C  013F               	movlb	63	; () banked
 20830  00814E  95CB               	bcf	203,2,b	;volatile
 20831                           
 20832                           ; BSR set to: 63
 20833  008150  0012               	return		;funcret
 20834  008152                     __end_ofi1_Aguarda_dado:
 20835                           	opt stack 0
 20836                           
 20837 ;; *************** function i1_sprintf *****************
 20838 ;; Defined at:
 20839 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 20840 ;; Parameters:    Size  Location     Type
 20841 ;;  sp              2    9[BANK0 ] PTR unsigned char 
 20842 ;;		 -> Verifica_Analogica@valoradstr(10), append_Arquivo_Json@linhaArquivo(120), append_Arquivo_Json@resultado(6), appe
      +nd_Arquivo_Json@valorMem_Char(10), 
 20843 ;;		 -> cria_Arquivo@tamanho(15), Aguarda_end(10), Aguarda_str(20), main@motivo(20), 
 20844 ;;  f               2   11[BANK0 ] PTR const unsigned char 
 20845 ;;		 -> STR_107(14), STR_77(3), STR_76(3), STR_13(61), 
 20846 ;;		 -> STR_12(6), STR_11(5), STR_10(6), STR_7(5), 
 20847 ;;		 -> STR_2(13), STR_1(18), 
 20848 ;; Auto vars:     Size  Location     Type
 20849 ;;  sprintf         4   74[BANK0 ] unsigned long 
 20850 ;;  sprintf         4   66[BANK0 ] struct .
 20851 ;;  sprintf         3   78[BANK0 ] struct .
 20852 ;;  sprintf         3   57[BANK0 ] struct .
 20853 ;;  sprintf         2   84[BANK0 ] unsigned short 
 20854 ;;  sprintf         2   81[BANK0 ] int 
 20855 ;;  sprintf         2   72[BANK0 ] int 
 20856 ;;  sprintf         2   70[BANK0 ] int 
 20857 ;;  sprintf         2   64[BANK0 ] PTR void [1]
 20858 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
 20859 ;;  sprintf         2   62[BANK0 ] unsigned int 
 20860 ;;  sprintf         2   60[BANK0 ] PTR const unsigned char 
 20861 ;;		 -> STR_108(7), sprintf@c(1), STR_105(2), STR_104(7), 
 20862 ;;		 -> STR_101(3), STR_100(10), STR_96(2), STR_95(4), 
 20863 ;;		 -> STR_93(2), STR_92(7), STR_83(7), STR_82(7), 
 20864 ;;		 -> STR_80(3), STR_79(2), STR_74(2), STR_73(17), 
 20865 ;;		 -> STR_67(2), STR_66(3), STR_64(3), STR_63(6), 
 20866 ;;		 -> STR_61(2), STR_60(7), STR_58(2), STR_57(6), 
 20867 ;;		 -> STR_55(2), STR_54(7), STR_52(3), STR_51(8), 
 20868 ;;		 -> STR_49(2), STR_48(10), STR_46(2), STR_45(2), 
 20869 ;;		 -> STR_41(2), STR_40(2), STR_37(2), STR_36(10), 
 20870 ;;		 -> STR_32(3), STR_31(3), STR_28(3), STR_27(3), 
 20871 ;;		 -> STR_23(2), STR_22(2), STR_20(2), STR_19(3), 
 20872 ;;		 -> frameId(1110), append_Arquivo_Json@resultado(6), append_Arquivo_Json@virgula(2), STR_4(2), 
 20873 ;;		 -> STR_3(10), 
 20874 ;;  sprintf         1   83[BANK0 ] char 
 20875 ;;  sprintf         1   44[BANK0 ] unsigned char 
 20876 ;;  sprintf         1    0        unsigned char 
 20877 ;; Return value:  Size  Location     Type
 20878 ;;                  2    9[BANK0 ] int 
 20879 ;; Registers used:
 20880 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20881 ;; Tracked objects:
 20882 ;;		On entry : 0/0
 20883 ;;		On exit  : 0/0
 20884 ;;		Unchanged: 0/0
 20885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20886 ;;      Params:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20887 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20888 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20889 ;;      Totals:         0      77       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20890 ;;Total ram usage:       77 bytes
 20891 ;; Hardware stack levels used:    1
 20892 ;; Hardware stack levels required when called:    3
 20893 ;; This function calls:
 20894 ;;		i1___awdiv
 20895 ;;		i1___awmod
 20896 ;;		i1___ftadd
 20897 ;;		i1___ftdiv
 20898 ;;		i1___ftge
 20899 ;;		i1___ftmul
 20900 ;;		i1___ftneg
 20901 ;;		i1___ftsub
 20902 ;;		i1___fttol
 20903 ;;		i1___lldiv
 20904 ;;		i1___llmod
 20905 ;;		i1___lltoft
 20906 ;;		i1___wmul
 20907 ;;		i1__div_to_l_
 20908 ;;		i1__tdiv_to_l_
 20909 ;;		i1_fround
 20910 ;;		i1_isdigit
 20911 ;;		i1_scale
 20912 ;; This function is called by:
 20913 ;;		i1_cria_Arquivo
 20914 ;;		i1_append_Arquivo_Json
 20915 ;;		i1_Aguarda_dado
 20916 ;; This function uses a non-reentrant model
 20917 ;;
 20918                           
 20919                           	psect	text83
 20920  001D6A                     __ptext83:
 20921                           	opt stack 0
 20922  001D6A                     i1_sprintf:
 20923                           	opt stack 16
 20924                           
 20925                           ;doprnt.c: 494: va_list ap;
 20926                           ;doprnt.c: 499: signed char c;
 20927                           ;doprnt.c: 501: int width;
 20928                           ;doprnt.c: 504: int prec;
 20929                           ;doprnt.c: 508: unsigned short flag;
 20930                           ;doprnt.c: 515: char d;
 20931                           ;doprnt.c: 516: double fval;
 20932                           ;doprnt.c: 517: int exp;
 20933                           ;doprnt.c: 523: union {
 20934                           ;doprnt.c: 524: unsigned long vd;
 20935                           ;doprnt.c: 525: double integ;
 20936                           ;doprnt.c: 526: } tmpval;
 20937                           ;doprnt.c: 528: unsigned long val;
 20938                           ;doprnt.c: 529: unsigned len;
 20939                           ;doprnt.c: 530: const char * cp;
 20940                           ;doprnt.c: 533: *ap = __va_start();
 20941                           
 20942                           ; BSR set to: 63
 20943                           ;incstack = 0
 20944  001D6A  0E6D               	movlw	low (?i1_sprintf+4)
 20945  001D6C  0100               	movlb	0	; () banked
 20946  001D6E  6FA0               	movwf	i1sprintf@ap& (0+255),b
 20947  001D70  0E00               	movlw	high (?i1_sprintf+4)
 20948  001D72  6FA1               	movwf	(i1sprintf@ap+1)& (0+255),b
 20949                           
 20950                           ;doprnt.c: 536: while(c = *f++) {
 20951  001D74  EFF1  F01C         	goto	i1u1635_20
 20952  001D78                     
 20953                           ; BSR set to: 0
 20954                           ;doprnt.c: 538: if(c != '%')
 20955                           
 20956                           ; BSR set to: 0
 20957  001D78  0E25               	movlw	37
 20958  001D7A  19B3               	xorwf	i1sprintf@c& (0+255),w,b
 20959  001D7C  B4D8               	btfsc	16344,2,c
 20960  001D7E  D00D               	goto	i1l964
 20961                           
 20962                           ; BSR set to: 0
 20963                           ;doprnt.c: 540: {
 20964                           ;doprnt.c: 541: ((*sp++ = (c)));
 20965  001D80  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 20966  001D86  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 20967  001D8C  0060  F2CF  FFDF   	movff	i1sprintf@c,16351
 20968                           
 20969                           ; BSR set to: 0
 20970  001D92  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 20971  001D94  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 20972                           
 20973                           ;doprnt.c: 542: continue;
 20974  001D96  EFF1  F01C         	goto	i1u1635_20
 20975  001D9A                     i1l964:
 20976                           
 20977                           ; BSR set to: 0
 20978                           ;doprnt.c: 543: }
 20979                           ;doprnt.c: 546: width = 0;
 20980                           
 20981                           ; BSR set to: 0
 20982  001D9A  0E00               	movlw	0
 20983  001D9C  6FA9               	movwf	(i1sprintf@width+1)& (0+255),b
 20984  001D9E  0E00               	movlw	0
 20985  001DA0  6FA8               	movwf	i1sprintf@width& (0+255),b
 20986                           
 20987                           ;doprnt.c: 548: flag = 0;
 20988  001DA2  0E00               	movlw	0
 20989  001DA4  6FB5               	movwf	(i1sprintf@flag+1)& (0+255),b
 20990  001DA6  0E00               	movlw	0
 20991  001DA8  6FB4               	movwf	i1sprintf@flag& (0+255),b
 20992                           
 20993                           ; BSR set to: 0
 20994                           ;doprnt.c: 551: switch(*f) {
 20995                           
 20996                           ;doprnt.c: 550: for(;;) {
 20997  001DAA  D010               	goto	i1l966
 20998  001DAC                     
 20999                           ;doprnt.c: 554: flag |= 0x08;
 21000                           
 21001                           ; BSR set to: 0
 21002  001DAC  0100               	movlb	0	; () banked
 21003  001DAE  87B4               	bsf	i1sprintf@flag& (0+255),3,b
 21004  001DB0  D00B               	goto	L22
 21005  001DB2                     
 21006                           ;doprnt.c: 561: flag |= 0x01;
 21007                           
 21008                           ; BSR set to: 0
 21009  001DB2  0100               	movlb	0	; () banked
 21010  001DB4  81B4               	bsf	i1sprintf@flag& (0+255),0,b
 21011  001DB6  D008               	goto	L22
 21012  001DB8                     
 21013                           ;doprnt.c: 568: flag |= 0x02;
 21014                           
 21015                           ; BSR set to: 0
 21016  001DB8  0100               	movlb	0	; () banked
 21017  001DBA  83B4               	bsf	i1sprintf@flag& (0+255),1,b
 21018  001DBC  D005               	goto	L22
 21019  001DBE                     
 21020                           ;doprnt.c: 574: flag |= 0x800;
 21021                           
 21022                           ; BSR set to: 0
 21023  001DBE  0100               	movlb	0	; () banked
 21024  001DC0  87B5               	bsf	(i1sprintf@flag+1)& (0+255),3,b
 21025  001DC2  D002               	goto	L22
 21026  001DC4                     
 21027                           ;doprnt.c: 580: flag |= 0x04;
 21028                           
 21029                           ; BSR set to: 0
 21030  001DC4  0100               	movlb	0	; () banked
 21031  001DC6  85B4               	bsf	i1sprintf@flag& (0+255),2,b
 21032  001DC8                     L22:
 21033                           
 21034                           ;doprnt.c: 581: f++;
 21035  001DC8  4B6B               	infsnz	i1sprintf@f& (0+255),f,b
 21036  001DCA  2B6C               	incf	(i1sprintf@f+1)& (0+255),f,b
 21037  001DCC                     i1l966:
 21038                           
 21039                           ; BSR set to: 0
 21040  001DCC  0060  F1AF  FFF6   	movff	i1sprintf@f,16374
 21041  001DD2  0060  F1B3  FFF7   	movff	i1sprintf@f+1,16375
 21042  001DD8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21043  001DD8  6AF8               	clrf	16376,c
 21044  001DDA                     	endif
 21045  001DDA                     	if	0	;tblptru may be non-zero
 21046  001DDA                     	endif
 21047  001DDA  0008               	tblrd		*
 21048  001DDC  50F5               	movf	16373,w,c
 21049                           
 21050                           ; Switch size 1, requested type "space"
 21051                           ; Number of cases is 5, Range of values is 32 to 48
 21052                           ; switch strategies available:
 21053                           ; Name         Instructions Cycles
 21054                           ; simple_byte           16     9 (average)
 21055                           ;	Chosen strategy is simple_byte
 21056  001DDE  0A20               	xorlw	32	; case 32
 21057  001DE0  B4D8               	btfsc	16344,2,c
 21058  001DE2  D7E7               	goto	i1l969
 21059  001DE4  0A03               	xorlw	3	; case 35
 21060  001DE6  B4D8               	btfsc	16344,2,c
 21061  001DE8  D7EA               	goto	i1l971
 21062  001DEA  0A08               	xorlw	8	; case 43
 21063  001DEC  B4D8               	btfsc	16344,2,c
 21064  001DEE  D7E4               	goto	i1l970
 21065  001DF0  0A06               	xorlw	6	; case 45
 21066  001DF2  B4D8               	btfsc	16344,2,c
 21067  001DF4  D7DB               	goto	i1l967
 21068  001DF6  0A1D               	xorlw	29	; case 48
 21069  001DF8  B4D8               	btfsc	16344,2,c
 21070  001DFA  D7E4               	goto	i1l972
 21071                           
 21072                           ;doprnt.c: 589: if(flag & 0x02)
 21073                           
 21074                           ;doprnt.c: 586: }
 21075                           
 21076                           ;doprnt.c: 585: break;
 21077  001DFC  0100               	movlb	0	; () banked
 21078  001DFE  B3B4               	btfsc	i1sprintf@flag& (0+255),1,b
 21079                           
 21080                           ; BSR set to: 0
 21081                           ;doprnt.c: 590: flag &= ~0x01;
 21082  001E00  91B4               	bcf	i1sprintf@flag& (0+255),0,b
 21083                           
 21084                           ; BSR set to: 0
 21085                           ;doprnt.c: 593: if(flag & 0x08)
 21086                           
 21087                           ; BSR set to: 0
 21088  001E02  B7B4               	btfsc	i1sprintf@flag& (0+255),3,b
 21089                           
 21090                           ; BSR set to: 0
 21091                           ;doprnt.c: 594: flag &= ~0x04;
 21092  001E04  95B4               	bcf	i1sprintf@flag& (0+255),2,b
 21093                           
 21094                           ; BSR set to: 0
 21095                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 21096                           
 21097                           ; BSR set to: 0
 21098  001E06  0060  F1AF  FFF6   	movff	i1sprintf@f,16374
 21099  001E0C  0060  F1B3  FFF7   	movff	i1sprintf@f+1,16375
 21100  001E12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21101  001E12  6AF8               	clrf	16376,c
 21102  001E14                     	endif
 21103  001E14                     	if	0	;tblptru may be non-zero
 21104  001E14                     	endif
 21105  001E14  0008               	tblrd		*
 21106  001E16  50F5               	movf	16373,w,c
 21107  001E18  EC2A  F045         	call	i1_isdigit
 21108  001E1C  A0D8               	btfss	16344,0,c
 21109  001E1E  D03E               	goto	i1u1492_20
 21110                           
 21111                           ;doprnt.c: 598: width = 0;
 21112  001E20  0E00               	movlw	0
 21113  001E22  0100               	movlb	0	; () banked
 21114  001E24  6FA9               	movwf	(i1sprintf@width+1)& (0+255),b
 21115  001E26  0E00               	movlw	0
 21116  001E28  6FA8               	movwf	i1sprintf@width& (0+255),b
 21117  001E2A                     
 21118                           ;doprnt.c: 600: width *= 10;
 21119                           
 21120                           ; BSR set to: 0
 21121  001E2A  0060  F2A0  F012   	movff	i1sprintf@width,i1___wmul@multiplier
 21122  001E30  0060  F2A4  F013   	movff	i1sprintf@width+1,i1___wmul@multiplier+1
 21123  001E36  0E00               	movlw	0
 21124  001E38  6E15               	movwf	i1___wmul@multiplicand+1,c
 21125  001E3A  0E0A               	movlw	10
 21126  001E3C  6E14               	movwf	i1___wmul@multiplicand,c
 21127  001E3E  ECC0  F044         	call	i1___wmul	;wreg free
 21128  001E42  0060  F048  F0A8   	movff	?i1___wmul,i1sprintf@width
 21129  001E48  0060  F04C  F0A9   	movff	?i1___wmul+1,i1sprintf@width+1
 21130                           
 21131                           ;doprnt.c: 601: width += *f++ - '0';
 21132  001E4E  0ED0               	movlw	208
 21133  001E50  0100               	movlb	0	; () banked
 21134  001E52  6F83               	movwf	??i1_sprintf& (0+255),b
 21135  001E54  0EFF               	movlw	255
 21136  001E56  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 21137  001E58  0060  F1AF  FFF6   	movff	i1sprintf@f,16374
 21138  001E5E  0060  F1B3  FFF7   	movff	i1sprintf@f+1,16375
 21139  001E64                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21140  001E64  6AF8               	clrf	16376,c
 21141  001E66                     	endif
 21142  001E66                     	if	0	;tblptru may be non-zero
 21143  001E66                     	endif
 21144  001E66  0008               	tblrd		*
 21145  001E68  50F5               	movf	16373,w,c
 21146  001E6A  6F85               	movwf	(??i1_sprintf+2)& (0+255),b
 21147  001E6C  6B86               	clrf	(??i1_sprintf+3)& (0+255),b
 21148  001E6E  5183               	movf	??i1_sprintf& (0+255),w,b
 21149  001E70  2785               	addwf	(??i1_sprintf+2)& (0+255),f,b
 21150  001E72  5184               	movf	(??i1_sprintf+1)& (0+255),w,b
 21151  001E74  2386               	addwfc	(??i1_sprintf+3)& (0+255),f,b
 21152  001E76  5185               	movf	(??i1_sprintf+2)& (0+255),w,b
 21153  001E78  27A8               	addwf	i1sprintf@width& (0+255),f,b
 21154  001E7A  5186               	movf	(??i1_sprintf+3)& (0+255),w,b
 21155  001E7C  23A9               	addwfc	(i1sprintf@width+1)& (0+255),f,b
 21156                           
 21157                           ; BSR set to: 0
 21158  001E7E  4B6B               	infsnz	i1sprintf@f& (0+255),f,b
 21159  001E80  2B6C               	incf	(i1sprintf@f+1)& (0+255),f,b
 21160                           
 21161                           ; BSR set to: 0
 21162                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 21163  001E82  0060  F1AF  FFF6   	movff	i1sprintf@f,16374
 21164  001E88  0060  F1B3  FFF7   	movff	i1sprintf@f+1,16375
 21165  001E8E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21166  001E8E  6AF8               	clrf	16376,c
 21167  001E90                     	endif
 21168  001E90                     	if	0	;tblptru may be non-zero
 21169  001E90                     	endif
 21170  001E90  0008               	tblrd		*
 21171  001E92  50F5               	movf	16373,w,c
 21172  001E94  EC2A  F045         	call	i1_isdigit
 21173  001E98  B0D8               	btfsc	16344,0,c
 21174  001E9A  D7C7               	goto	i1l978
 21175  001E9C                     i1u1492_20:
 21176                           
 21177                           ;doprnt.c: 608: }
 21178                           ;doprnt.c: 611: if(*f == '.') {
 21179  001E9C  0060  F1AF  FFF6   	movff	i1sprintf@f,16374
 21180  001EA2  0060  F1B3  FFF7   	movff	i1sprintf@f+1,16375
 21181  001EA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21182  001EA8  6AF8               	clrf	16376,c
 21183  001EAA                     	endif
 21184  001EAA                     	if	0	;tblptru may be non-zero
 21185  001EAA                     	endif
 21186  001EAA  0008               	tblrd		*
 21187  001EAC  50F5               	movf	16373,w,c
 21188  001EAE  0A2E               	xorlw	46
 21189  001EB0  A4D8               	btfss	16344,2,c
 21190  001EB2  D038               	goto	i1l980
 21191                           
 21192                           ;doprnt.c: 612: flag |= 0x4000;
 21193  001EB4  0100               	movlb	0	; () banked
 21194  001EB6  8DB5               	bsf	(i1sprintf@flag+1)& (0+255),6,b
 21195                           
 21196                           ;doprnt.c: 613: f++;
 21197  001EB8  4B6B               	infsnz	i1sprintf@f& (0+255),f,b
 21198  001EBA  2B6C               	incf	(i1sprintf@f+1)& (0+255),f,b
 21199                           
 21200                           ; BSR set to: 0
 21201                           ;doprnt.c: 620: {
 21202                           ;doprnt.c: 621: prec = 0;
 21203  001EBC  0E00               	movlw	0
 21204  001EBE  6FB2               	movwf	(i1sprintf@prec+1)& (0+255),b
 21205  001EC0  0E00               	movlw	0
 21206  001EC2  6FB1               	movwf	i1sprintf@prec& (0+255),b
 21207                           
 21208                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 21209  001EC4  D021               	goto	i1l981
 21210  001EC6                     
 21211                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 21212                           
 21213                           ; BSR set to: 0
 21214  001EC6  0060  F2C4  F012   	movff	i1sprintf@prec,i1___wmul@multiplier
 21215  001ECC  0060  F2C8  F013   	movff	i1sprintf@prec+1,i1___wmul@multiplier+1
 21216  001ED2  0E00               	movlw	0
 21217  001ED4  6E15               	movwf	i1___wmul@multiplicand+1,c
 21218  001ED6  0E0A               	movlw	10
 21219  001ED8  6E14               	movwf	i1___wmul@multiplicand,c
 21220  001EDA  ECC0  F044         	call	i1___wmul	;wreg free
 21221  001EDE  0060  F1AF  FFF6   	movff	i1sprintf@f,16374
 21222  001EE4  0060  F1B3  FFF7   	movff	i1sprintf@f+1,16375
 21223  001EEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21224  001EEA  6AF8               	clrf	16376,c
 21225  001EEC                     	endif
 21226  001EEC                     	if	0	;tblptru may be non-zero
 21227  001EEC                     	endif
 21228  001EEC  0008               	tblrd		*
 21229  001EEE  50F5               	movf	16373,w,c
 21230  001EF0  2612               	addwf	?i1___wmul,f,c
 21231  001EF2  0E00               	movlw	0
 21232  001EF4  2213               	addwfc	?i1___wmul+1,f,c
 21233  001EF6  0ED0               	movlw	208
 21234  001EF8  2412               	addwf	?i1___wmul,w,c
 21235  001EFA  0100               	movlb	0	; () banked
 21236  001EFC  6FB1               	movwf	i1sprintf@prec& (0+255),b
 21237  001EFE  0EFF               	movlw	255
 21238  001F00  2013               	addwfc	?i1___wmul+1,w,c
 21239  001F02  6FB2               	movwf	(i1sprintf@prec+1)& (0+255),b
 21240                           
 21241                           ; BSR set to: 0
 21242  001F04  4B6B               	infsnz	i1sprintf@f& (0+255),f,b
 21243  001F06  2B6C               	incf	(i1sprintf@f+1)& (0+255),f,b
 21244  001F08                     i1l981:
 21245                           
 21246                           ; BSR set to: 0
 21247                           
 21248                           ; BSR set to: 0
 21249  001F08  0060  F1AF  FFF6   	movff	i1sprintf@f,16374
 21250  001F0E  0060  F1B3  FFF7   	movff	i1sprintf@f+1,16375
 21251  001F14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21252  001F14  6AF8               	clrf	16376,c
 21253  001F16                     	endif
 21254  001F16                     	if	0	;tblptru may be non-zero
 21255  001F16                     	endif
 21256  001F16  0008               	tblrd		*
 21257  001F18  50F5               	movf	16373,w,c
 21258  001F1A  EC2A  F045         	call	i1_isdigit
 21259  001F1E  A0D8               	btfss	16344,0,c
 21260  001F20  D0DE               	goto	i1l986
 21261  001F22  D7D1               	goto	i1l982
 21262  001F24                     i1l980:
 21263                           
 21264                           ;doprnt.c: 626: prec = 0;
 21265  001F24  0E00               	movlw	0
 21266  001F26  0100               	movlb	0	; () banked
 21267  001F28  6FB2               	movwf	(i1sprintf@prec+1)& (0+255),b
 21268  001F2A  0E00               	movlw	0
 21269  001F2C  6FB1               	movwf	i1sprintf@prec& (0+255),b
 21270                           
 21271                           ; BSR set to: 0
 21272                           ;doprnt.c: 628: flag |= 0x1000;
 21273  001F2E  89B5               	bsf	(i1sprintf@flag+1)& (0+255),4,b
 21274                           
 21275                           ; BSR set to: 0
 21276                           ;doprnt.c: 635: switch(c = *f++) {
 21277                           
 21278                           ;doprnt.c: 630: }
 21279                           ;doprnt.c: 633: loop:
 21280                           
 21281                           ; BSR set to: 0
 21282  001F30  D0D6               	goto	i1l986
 21283  001F32                     
 21284                           ; BSR set to: 0
 21285                           ;doprnt.c: 643: flag |= 0x10;
 21286                           
 21287                           ; BSR set to: 0
 21288  001F32  89B4               	bsf	i1sprintf@flag& (0+255),4,b
 21289                           
 21290                           ;doprnt.c: 644: goto loop;
 21291  001F34  D0D4               	goto	i1l986
 21292  001F36                     
 21293                           ; BSR set to: 0
 21294                           ;doprnt.c: 663: flag |= 0x400;
 21295                           
 21296                           ; BSR set to: 0
 21297  001F36  85B5               	bsf	(i1sprintf@flag+1)& (0+255),2,b
 21298                           
 21299                           ;doprnt.c: 664: break;
 21300  001F38  D107               	goto	i1l991
 21301  001F3A                     
 21302                           ; BSR set to: 0
 21303                           ;doprnt.c: 670: flag |= 0x20;
 21304                           
 21305                           ; BSR set to: 0
 21306  001F3A  8BB4               	bsf	i1sprintf@flag& (0+255),5,b
 21307  001F3C                     i1l993:
 21308                           
 21309                           ; BSR set to: 0
 21310                           ;doprnt.c: 673: flag |= 0x100;
 21311  001F3C  81B5               	bsf	(i1sprintf@flag+1)& (0+255),0,b
 21312                           
 21313                           ;doprnt.c: 674: break;
 21314  001F3E  D104               	goto	i1l991
 21315  001F40                     
 21316                           ; BSR set to: 0
 21317                           ;doprnt.c: 680: flag |= 0x20;
 21318                           
 21319                           ; BSR set to: 0
 21320  001F40  8BB4               	bsf	i1sprintf@flag& (0+255),5,b
 21321  001F42                     i1l995:
 21322                           
 21323                           ; BSR set to: 0
 21324                           ;doprnt.c: 683: flag |= 0x200;
 21325  001F42  83B5               	bsf	(i1sprintf@flag+1)& (0+255),1,b
 21326                           
 21327                           ; BSR set to: 0
 21328                           ;doprnt.c: 698: case 'i':
 21329                           ;doprnt.c: 699: break;
 21330                           
 21331                           ; BSR set to: 0
 21332                           
 21333                           ;doprnt.c: 697: case 'd':
 21334                           
 21335                           ;doprnt.c: 684: break;
 21336  001F44  D101               	goto	i1l991
 21337  001F46                     
 21338                           ; BSR set to: 0
 21339                           ;doprnt.c: 721: flag |= 0x80;
 21340                           
 21341                           ; BSR set to: 0
 21342  001F46  8FB4               	bsf	i1sprintf@flag& (0+255),7,b
 21343                           
 21344                           ;doprnt.c: 723: break;
 21345  001F48  D0FF               	goto	i1l991
 21346  001F4A                     
 21347                           ; BSR set to: 0
 21348                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 21349                           
 21350                           ; BSR set to: 0
 21351  001F4A  0060  F283  FFD9   	movff	i1sprintf@ap,16345
 21352  001F50  0060  F287  FFDA   	movff	i1sprintf@ap+1,16346
 21353  001F56  006F FF78  F09C    	movff	16350,i1sprintf@cp
 21354  001F5C  006F FF74  F09D    	movff	16349,i1sprintf@cp+1
 21355                           
 21356                           ; BSR set to: 0
 21357  001F62  0E02               	movlw	2
 21358  001F64  27A0               	addwf	i1sprintf@ap& (0+255),f,b
 21359  001F66  0E00               	movlw	0
 21360  001F68  23A1               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 21361                           
 21362                           ; BSR set to: 0
 21363                           ;doprnt.c: 740: if(!cp)
 21364  001F6A  519C               	movf	i1sprintf@cp& (0+255),w,b
 21365  001F6C  119D               	iorwf	(i1sprintf@cp+1)& (0+255),w,b
 21366  001F6E  A4D8               	btfss	16344,2,c
 21367  001F70  D004               	goto	i1l1000
 21368                           
 21369                           ; BSR set to: 0
 21370                           ;doprnt.c: 741: cp = "(null)";
 21371  001F72  0E93               	movlw	low STR_108
 21372  001F74  6F9C               	movwf	i1sprintf@cp& (0+255),b
 21373  001F76  0EFF               	movlw	high STR_108
 21374  001F78  6F9D               	movwf	(i1sprintf@cp+1)& (0+255),b
 21375  001F7A                     i1l1000:
 21376                           
 21377                           ; BSR set to: 0
 21378                           ;doprnt.c: 745: len = 0;
 21379                           
 21380                           ; BSR set to: 0
 21381  001F7A  0E00               	movlw	0
 21382  001F7C  6F9F               	movwf	(i1sprintf@len+1)& (0+255),b
 21383  001F7E  0E00               	movlw	0
 21384  001F80  6F9E               	movwf	i1sprintf@len& (0+255),b
 21385                           
 21386                           ;doprnt.c: 746: while(cp[len])
 21387  001F82  D003               	goto	i1l1001
 21388  001F84                     
 21389                           ;doprnt.c: 747: len++;
 21390                           
 21391                           ; BSR set to: 0
 21392  001F84  0100               	movlb	0	; () banked
 21393  001F86  4B9E               	infsnz	i1sprintf@len& (0+255),f,b
 21394  001F88  2B9F               	incf	(i1sprintf@len+1)& (0+255),f,b
 21395  001F8A                     i1l1001:
 21396                           
 21397                           ; BSR set to: 0
 21398                           
 21399                           ; BSR set to: 0
 21400  001F8A  519E               	movf	i1sprintf@len& (0+255),w,b
 21401  001F8C  259C               	addwf	i1sprintf@cp& (0+255),w,b
 21402  001F8E  6F83               	movwf	??i1_sprintf& (0+255),b
 21403  001F90  519F               	movf	(i1sprintf@len+1)& (0+255),w,b
 21404  001F92  219D               	addwfc	(i1sprintf@cp+1)& (0+255),w,b
 21405  001F94  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 21406  001F96  0060  F20F  FFF6   	movff	??i1_sprintf,16374
 21407  001F9C  0060  F213  FFF7   	movff	??i1_sprintf+1,16375
 21408  001FA2  0E00               	movlw	low (__mediumconst shr (0+16))
 21409  001FA4  6EF8               	movwf	16376,c
 21410  001FA6  0E0F               	movlw	(high __ramtop+-1)
 21411  001FA8  64F7               	cpfsgt	16375,c
 21412  001FAA  D003               	bra	i1u1496_27
 21413  001FAC  0008               	tblrd		*
 21414  001FAE  50F5               	movf	16373,w,c
 21415  001FB0  D007               	bra	i1u1496_20
 21416  001FB2                     i1u1496_27:
 21417  001FB2  006F FFDB FFE9     	movff	16374,16361
 21418  001FB8  006F FFDF FFEA     	movff	16375,16362
 21419  001FBE  50EF               	movf	16367,w,c
 21420  001FC0                     i1u1496_20:
 21421  001FC0  0900               	iorlw	0
 21422  001FC2  A4D8               	btfss	16344,2,c
 21423  001FC4  D7DF               	goto	i1l1002
 21424  001FC6                     i1u1497_20:
 21425                           
 21426                           ;doprnt.c: 753: if(prec && prec < len)
 21427                           
 21428                           ;doprnt.c: 750: dostring:
 21429  001FC6  0100               	movlb	0	; () banked
 21430  001FC8  51B1               	movf	i1sprintf@prec& (0+255),w,b
 21431  001FCA  11B2               	iorwf	(i1sprintf@prec+1)& (0+255),w,b
 21432  001FCC  B4D8               	btfsc	16344,2,c
 21433  001FCE  D00C               	goto	i1l1005
 21434                           
 21435                           ; BSR set to: 0
 21436  001FD0  519E               	movf	i1sprintf@len& (0+255),w,b
 21437  001FD2  5DB1               	subwf	i1sprintf@prec& (0+255),w,b
 21438  001FD4  519F               	movf	(i1sprintf@len+1)& (0+255),w,b
 21439  001FD6  59B2               	subwfb	(i1sprintf@prec+1)& (0+255),w,b
 21440  001FD8  B0D8               	btfsc	16344,0,c
 21441  001FDA  D006               	goto	i1l1005
 21442                           
 21443                           ; BSR set to: 0
 21444                           ;doprnt.c: 754: len = prec;
 21445  001FDC  0060  F2C4  F09E   	movff	i1sprintf@prec,i1sprintf@len
 21446  001FE2  0060  F2C8  F09F   	movff	i1sprintf@prec+1,i1sprintf@len+1
 21447  001FE8                     i1l1005:
 21448                           
 21449                           ; BSR set to: 0
 21450                           ;doprnt.c: 757: if(width > len)
 21451                           
 21452                           ; BSR set to: 0
 21453  001FE8  51A8               	movf	i1sprintf@width& (0+255),w,b
 21454  001FEA  5D9E               	subwf	i1sprintf@len& (0+255),w,b
 21455  001FEC  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 21456  001FEE  599F               	subwfb	(i1sprintf@len+1)& (0+255),w,b
 21457  001FF0  B0D8               	btfsc	16344,0,c
 21458  001FF2  D005               	goto	i1l1006
 21459                           
 21460                           ; BSR set to: 0
 21461                           ;doprnt.c: 758: width -= len;
 21462  001FF4  519E               	movf	i1sprintf@len& (0+255),w,b
 21463  001FF6  5FA8               	subwf	i1sprintf@width& (0+255),f,b
 21464  001FF8  519F               	movf	(i1sprintf@len+1)& (0+255),w,b
 21465  001FFA  5BA9               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 21466  001FFC  D004               	goto	i1l1007
 21467  001FFE                     i1l1006:
 21468                           
 21469                           ; BSR set to: 0
 21470                           ;doprnt.c: 759: else
 21471                           ;doprnt.c: 760: width = 0;
 21472                           
 21473                           ; BSR set to: 0
 21474  001FFE  0E00               	movlw	0
 21475  002000  6FA9               	movwf	(i1sprintf@width+1)& (0+255),b
 21476  002002  0E00               	movlw	0
 21477  002004  6FA8               	movwf	i1sprintf@width& (0+255),b
 21478  002006                     i1l1007:
 21479                           
 21480                           ; BSR set to: 0
 21481                           ;doprnt.c: 762: if(!(flag & 0x08))
 21482                           
 21483                           ; BSR set to: 0
 21484  002006  A7B4               	btfss	i1sprintf@flag& (0+255),3,b
 21485  002008  D00B               	goto	i1l1009
 21486  00200A  D034               	goto	i1l1012
 21487  00200C                     i1l11474:
 21488                           
 21489                           ; BSR set to: 0
 21490                           ;doprnt.c: 765: ((*sp++ = (' ')));
 21491  00200C  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21492  002012  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21493  002018  0E20               	movlw	32
 21494  00201A  6EDF               	movwf	16351,c
 21495                           
 21496                           ; BSR set to: 0
 21497  00201C  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 21498  00201E  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 21499  002020                     i1l1009:
 21500                           
 21501                           ; BSR set to: 0
 21502                           
 21503                           ; BSR set to: 0
 21504  002020  07A8               	decf	i1sprintf@width& (0+255),f,b
 21505  002022  A0D8               	btfss	16344,0,c
 21506  002024  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 21507  002026  29A8               	incf	i1sprintf@width& (0+255),w,b
 21508  002028  E1F1               	bnz	i1l11474
 21509  00202A  29A9               	incf	(i1sprintf@width+1)& (0+255),w,b
 21510  00202C  B4D8               	btfsc	16344,2,c
 21511  00202E  D022               	goto	i1l1012
 21512  002030  D7ED               	goto	i1l1010
 21513  002032                     i1l11480:
 21514                           
 21515                           ; BSR set to: 0
 21516                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 21517  002032  0060  F273  FFF6   	movff	i1sprintf@cp,16374
 21518  002038  0060  F277  FFF7   	movff	i1sprintf@cp+1,16375
 21519  00203E  0E00               	movlw	low (__mediumconst shr (0+16))
 21520  002040  6EF8               	movwf	16376,c
 21521  002042  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21522  002048  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21523  00204E  0E0F               	movlw	(high __ramtop+-1)
 21524  002050  64F7               	cpfsgt	16375,c
 21525  002052  D003               	bra	i1u1503_27
 21526  002054  0008               	tblrd		*
 21527  002056  50F5               	movf	16373,w,c
 21528  002058  D007               	bra	i1u1503_20
 21529  00205A                     i1u1503_27:
 21530  00205A  006F FFDB FFE9     	movff	16374,16361
 21531  002060  006F FFDF FFEA     	movff	16375,16362
 21532  002066  50EF               	movf	16367,w,c
 21533  002068                     i1u1503_20:
 21534  002068  6EDF               	movwf	16351,c
 21535  00206A  0100               	movlb	0	; () banked
 21536  00206C  4B9C               	infsnz	i1sprintf@cp& (0+255),f,b
 21537  00206E  2B9D               	incf	(i1sprintf@cp+1)& (0+255),f,b
 21538                           
 21539                           ; BSR set to: 0
 21540  002070  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 21541  002072  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 21542  002074                     i1l1012:
 21543                           
 21544                           ; BSR set to: 0
 21545                           
 21546                           ; BSR set to: 0
 21547  002074  079E               	decf	i1sprintf@len& (0+255),f,b
 21548  002076  A0D8               	btfss	16344,0,c
 21549  002078  079F               	decf	(i1sprintf@len+1)& (0+255),f,b
 21550  00207A  299E               	incf	i1sprintf@len& (0+255),w,b
 21551  00207C  E1DA               	bnz	i1l11480
 21552  00207E  299F               	incf	(i1sprintf@len+1)& (0+255),w,b
 21553  002080  A4D8               	btfss	16344,2,c
 21554  002082  D7D7               	goto	i1l1013
 21555                           
 21556                           ; BSR set to: 0
 21557                           ;doprnt.c: 770: if(flag & 0x08)
 21558  002084  B7B4               	btfsc	i1sprintf@flag& (0+255),3,b
 21559  002086  D00C               	goto	i1l1016
 21560  002088  EFF1  F01C         	goto	i1u1635_20
 21561  00208C                     i1l11490:
 21562                           
 21563                           ; BSR set to: 0
 21564                           ;doprnt.c: 772: ((*sp++ = (' ')));
 21565  00208C  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21566  002092  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21567  002098  0E20               	movlw	32
 21568  00209A  6EDF               	movwf	16351,c
 21569                           
 21570                           ; BSR set to: 0
 21571  00209C  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 21572  00209E  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 21573  0020A0                     i1l1016:
 21574                           
 21575                           ; BSR set to: 0
 21576                           
 21577                           ; BSR set to: 0
 21578  0020A0  07A8               	decf	i1sprintf@width& (0+255),f,b
 21579  0020A2  A0D8               	btfss	16344,0,c
 21580  0020A4  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 21581  0020A6  29A8               	incf	i1sprintf@width& (0+255),w,b
 21582  0020A8  E1F1               	bnz	i1l11490
 21583  0020AA  29A9               	incf	(i1sprintf@width+1)& (0+255),w,b
 21584  0020AC  B4D8               	btfsc	16344,2,c
 21585  0020AE  EFF1  F01C         	goto	i1u1635_20
 21586  0020B2  D7EC               	goto	i1l1017
 21587  0020B4                     
 21588                           ; BSR set to: 0
 21589                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 21590                           
 21591                           ; BSR set to: 0
 21592  0020B4  0060  F283  FFD9   	movff	i1sprintf@ap,16345
 21593  0020BA  0060  F287  FFDA   	movff	i1sprintf@ap+1,16346
 21594  0020C0  50DF               	movf	16351,w,c
 21595  0020C2  6FB3               	movwf	i1sprintf@c& (0+255),b
 21596                           
 21597                           ; BSR set to: 0
 21598  0020C4  0E02               	movlw	2
 21599  0020C6  27A0               	addwf	i1sprintf@ap& (0+255),f,b
 21600  0020C8  0E00               	movlw	0
 21601  0020CA  23A1               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 21602  0020CC                     
 21603                           ; BSR set to: 0
 21604                           ;doprnt.c: 805: cp = (char *)&c;
 21605                           
 21606                           ; BSR set to: 0
 21607  0020CC  0EB3               	movlw	low i1sprintf@c
 21608  0020CE  6F9C               	movwf	i1sprintf@cp& (0+255),b
 21609  0020D0  0E00               	movlw	high i1sprintf@c
 21610  0020D2  6F9D               	movwf	(i1sprintf@cp+1)& (0+255),b
 21611                           
 21612                           ; BSR set to: 0
 21613                           ;doprnt.c: 806: len = 1;
 21614  0020D4  0E00               	movlw	0
 21615  0020D6  6F9F               	movwf	(i1sprintf@len+1)& (0+255),b
 21616  0020D8  0E01               	movlw	1
 21617  0020DA  6F9E               	movwf	i1sprintf@len& (0+255),b
 21618                           
 21619                           ;doprnt.c: 807: goto dostring;
 21620  0020DC  D774               	goto	i1u1497_20
 21621  0020DE                     i1l986:
 21622                           
 21623                           ; BSR set to: 0
 21624  0020DE  0060  F1AF  FFF6   	movff	i1sprintf@f,16374
 21625  0020E4  0060  F1B3  FFF7   	movff	i1sprintf@f+1,16375
 21626  0020EA  0100               	movlb	0	; () banked
 21627  0020EC  4B6B               	infsnz	i1sprintf@f& (0+255),f,b
 21628  0020EE  2B6C               	incf	(i1sprintf@f+1)& (0+255),f,b
 21629  0020F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21630  0020F0  6AF8               	clrf	16376,c
 21631  0020F2                     	endif
 21632  0020F2                     	if	0	;tblptru may be non-zero
 21633  0020F2                     	endif
 21634  0020F2  0008               	tblrd		*
 21635  0020F4  006F FFD4  F0B3    	movff	16373,i1sprintf@c
 21636  0020FA  51B3               	movf	i1sprintf@c& (0+255),w,b
 21637                           
 21638                           ; Switch size 1, requested type "space"
 21639                           ; Number of cases is 12, Range of values is 0 to 120
 21640                           ; switch strategies available:
 21641                           ; Name         Instructions Cycles
 21642                           ; simple_byte           37    19 (average)
 21643                           ;	Chosen strategy is simple_byte
 21644  0020FC  0A00               	xorlw	0	; case 0
 21645  0020FE  B4D8               	btfsc	16344,2,c
 21646  002100  EF02  F01D         	goto	i1u1636_20
 21647  002104  0A45               	xorlw	69	; case 69
 21648  002106  B4D8               	btfsc	16344,2,c
 21649  002108  D718               	goto	i1l992
 21650  00210A  0A02               	xorlw	2	; case 71
 21651  00210C  B4D8               	btfsc	16344,2,c
 21652  00210E  D718               	goto	i1l994
 21653  002110  0A24               	xorlw	36	; case 99
 21654  002112  B4D8               	btfsc	16344,2,c
 21655  002114  D7CF               	goto	i1l1019
 21656  002116  0A07               	xorlw	7	; case 100
 21657  002118  B4D8               	btfsc	16344,2,c
 21658  00211A  D016               	goto	i1l991
 21659  00211C  0A01               	xorlw	1	; case 101
 21660  00211E  B4D8               	btfsc	16344,2,c
 21661  002120  D70D               	goto	i1l993
 21662  002122  0A03               	xorlw	3	; case 102
 21663  002124  B4D8               	btfsc	16344,2,c
 21664  002126  D707               	goto	i1l990
 21665  002128  0A01               	xorlw	1	; case 103
 21666  00212A  B4D8               	btfsc	16344,2,c
 21667  00212C  D70A               	goto	i1l995
 21668  00212E  0A0E               	xorlw	14	; case 105
 21669  002130  B4D8               	btfsc	16344,2,c
 21670  002132  D00A               	goto	i1l991
 21671  002134  0A05               	xorlw	5	; case 108
 21672  002136  B4D8               	btfsc	16344,2,c
 21673  002138  D6FC               	goto	i1l989
 21674  00213A  0A1F               	xorlw	31	; case 115
 21675  00213C  B4D8               	btfsc	16344,2,c
 21676  00213E  D705               	goto	i1l999
 21677  002140  0A0B               	xorlw	11	; case 120
 21678  002142  B4D8               	btfsc	16344,2,c
 21679  002144  D700               	goto	i1l998
 21680  002146  D7C2               	goto	i1l1020
 21681  002148                     i1l991:
 21682                           
 21683                           ; BSR set to: 0
 21684                           ;doprnt.c: 825: if(flag & (0x700)) {
 21685                           
 21686                           ; BSR set to: 0
 21687  002148  0E07               	movlw	7
 21688  00214A  15B5               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 21689  00214C  B4D8               	btfsc	16344,2,c
 21690  00214E  EF2B  F01A         	goto	i1l1021
 21691                           
 21692                           ; BSR set to: 0
 21693                           ;doprnt.c: 827: if(flag & 0x1000)
 21694  002152  A9B5               	btfss	(i1sprintf@flag+1)& (0+255),4,b
 21695  002154  D004               	goto	i1l1022
 21696                           
 21697                           ; BSR set to: 0
 21698                           ;doprnt.c: 829: prec = 6;
 21699  002156  0E00               	movlw	0
 21700  002158  6FB2               	movwf	(i1sprintf@prec+1)& (0+255),b
 21701  00215A  0E06               	movlw	6
 21702  00215C  6FB1               	movwf	i1sprintf@prec& (0+255),b
 21703  00215E                     i1l1022:
 21704                           
 21705                           ; BSR set to: 0
 21706                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 21707                           
 21708                           ; BSR set to: 0
 21709  00215E  0060  F283  FFD9   	movff	i1sprintf@ap,16345
 21710  002164  0060  F287  FFDA   	movff	i1sprintf@ap+1,16346
 21711  00216A  006F FF78  F0AE    	movff	16350,i1sprintf@fval
 21712  002170  006F FF78  F0AF    	movff	16350,i1sprintf@fval+1
 21713  002176  006F FF74  F0B0    	movff	16349,i1sprintf@fval+2
 21714                           
 21715                           ; BSR set to: 0
 21716  00217C  0E03               	movlw	3
 21717  00217E  27A0               	addwf	i1sprintf@ap& (0+255),f,b
 21718  002180  0E00               	movlw	0
 21719  002182  23A1               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 21720                           
 21721                           ; BSR set to: 0
 21722                           ;doprnt.c: 831: if(fval < 0.0) {
 21723  002184  AFB0               	btfss	(i1sprintf@fval+2)& (0+255),7,b
 21724  002186  D017               	goto	i1l1023
 21725                           
 21726                           ; BSR set to: 0
 21727                           ;doprnt.c: 832: fval = -fval;
 21728  002188  0060  F2B8  F030   	movff	i1sprintf@fval,i1___ftneg@f1
 21729  00218E  0060  F2BC  F031   	movff	i1sprintf@fval+1,i1___ftneg@f1+1
 21730  002194  0060  F2C0  F032   	movff	i1sprintf@fval+2,i1___ftneg@f1+2
 21731  00219A  EC03  F045         	call	i1___ftneg	;wreg free
 21732  00219E  0060  F0C0  F0AE   	movff	?i1___ftneg,i1sprintf@fval
 21733  0021A4  0060  F0C4  F0AF   	movff	?i1___ftneg+1,i1sprintf@fval+1
 21734  0021AA  0060  F0C8  F0B0   	movff	?i1___ftneg+2,i1sprintf@fval+2
 21735                           
 21736                           ;doprnt.c: 833: flag |= 0x03;
 21737  0021B0  0E03               	movlw	3
 21738  0021B2  0100               	movlb	0	; () banked
 21739  0021B4  13B4               	iorwf	i1sprintf@flag& (0+255),f,b
 21740  0021B6                     i1l1023:
 21741                           
 21742                           ; BSR set to: 0
 21743                           ;doprnt.c: 834: }
 21744                           ;doprnt.c: 835: exp = 0;
 21745                           
 21746                           ; BSR set to: 0
 21747  0021B6  0E00               	movlw	0
 21748  0021B8  6FA7               	movwf	(i1sprintf@exp+1)& (0+255),b
 21749  0021BA  0E00               	movlw	0
 21750  0021BC  6FA6               	movwf	i1sprintf@exp& (0+255),b
 21751                           
 21752                           ; BSR set to: 0
 21753                           ;doprnt.c: 836: if( fval!=0) {
 21754  0021BE  51AE               	movf	i1sprintf@fval& (0+255),w,b
 21755  0021C0  11AF               	iorwf	(i1sprintf@fval+1)& (0+255),w,b
 21756  0021C2  11B0               	iorwf	(i1sprintf@fval+2)& (0+255),w,b
 21757  0021C4  B4D8               	btfsc	16344,2,c
 21758  0021C6  D0A5               	goto	i1l1028
 21759                           
 21760                           ; BSR set to: 0
 21761                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 21762  0021C8  0E82               	movlw	130
 21763  0021CA  6F83               	movwf	??i1_sprintf& (0+255),b
 21764  0021CC  0EFF               	movlw	255
 21765  0021CE  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 21766  0021D0  0060  F2B8  F085   	movff	i1sprintf@fval,??i1_sprintf+2
 21767  0021D6  0060  F2BC  F086   	movff	i1sprintf@fval+1,??i1_sprintf+3
 21768  0021DC  0060  F2C0  F087   	movff	i1sprintf@fval+2,??i1_sprintf+4
 21769  0021E2  0060  F2C4  F088   	movff	i1sprintf@fval+3,??i1_sprintf+5
 21770  0021E8  0E10               	movlw	16
 21771  0021EA  D005               	goto	i1u1511_20
 21772  0021EC                     i1u1511_25:
 21773  0021EC  90D8               	bcf	16344,0,c
 21774  0021EE  3388               	rrcf	(??i1_sprintf+5)& (0+255),f,b
 21775  0021F0  3387               	rrcf	(??i1_sprintf+4)& (0+255),f,b
 21776  0021F2  3386               	rrcf	(??i1_sprintf+3)& (0+255),f,b
 21777  0021F4  3385               	rrcf	(??i1_sprintf+2)& (0+255),f,b
 21778  0021F6                     i1u1511_20:
 21779  0021F6  2EE8               	decfsz	16360,f,c
 21780  0021F8  D7F9               	goto	i1u1511_25
 21781  0021FA  5185               	movf	(??i1_sprintf+2)& (0+255),w,b
 21782  0021FC  2583               	addwf	??i1_sprintf& (0+255),w,b
 21783  0021FE  6FA6               	movwf	i1sprintf@exp& (0+255),b
 21784  002200  0E00               	movlw	0
 21785  002202  2184               	addwfc	(??i1_sprintf+1)& (0+255),w,b
 21786  002204  6FA7               	movwf	(i1sprintf@exp+1)& (0+255),b
 21787                           
 21788                           ; BSR set to: 0
 21789                           ;doprnt.c: 838: exp--;
 21790  002206  07A6               	decf	i1sprintf@exp& (0+255),f,b
 21791  002208  A0D8               	btfss	16344,0,c
 21792  00220A  07A7               	decf	(i1sprintf@exp+1)& (0+255),f,b
 21793                           
 21794                           ; BSR set to: 0
 21795                           ;doprnt.c: 839: exp *= 3;
 21796  00220C  0060  F298  F012   	movff	i1sprintf@exp,i1___wmul@multiplier
 21797  002212  0060  F29C  F013   	movff	i1sprintf@exp+1,i1___wmul@multiplier+1
 21798  002218  0E00               	movlw	0
 21799  00221A  6E15               	movwf	i1___wmul@multiplicand+1,c
 21800  00221C  0E03               	movlw	3
 21801  00221E  6E14               	movwf	i1___wmul@multiplicand,c
 21802  002220  ECC0  F044         	call	i1___wmul	;wreg free
 21803  002224  0060  F048  F0A6   	movff	?i1___wmul,i1sprintf@exp
 21804  00222A  0060  F04C  F0A7   	movff	?i1___wmul+1,i1sprintf@exp+1
 21805                           
 21806                           ;doprnt.c: 840: exp /= 10;
 21807  002230  0060  F298  F00A   	movff	i1sprintf@exp,i1___awdiv@dividend
 21808  002236  0060  F29C  F00B   	movff	i1sprintf@exp+1,i1___awdiv@dividend+1
 21809  00223C  0E00               	movlw	0
 21810  00223E  6E0D               	movwf	i1___awdiv@divisor+1,c
 21811  002240  0E0A               	movlw	10
 21812  002242  6E0C               	movwf	i1___awdiv@divisor,c
 21813  002244  EC49  F03D         	call	i1___awdiv	;wreg free
 21814  002248  0060  F028  F0A6   	movff	?i1___awdiv,i1sprintf@exp
 21815  00224E  0060  F02C  F0A7   	movff	?i1___awdiv+1,i1sprintf@exp+1
 21816                           
 21817                           ;doprnt.c: 841: if(exp < 0)
 21818  002254  0100               	movlb	0	; () banked
 21819  002256  AFA7               	btfss	(i1sprintf@exp+1)& (0+255),7,b
 21820  002258  D003               	goto	i1l1025
 21821                           
 21822                           ; BSR set to: 0
 21823                           ;doprnt.c: 842: exp--;
 21824  00225A  07A6               	decf	i1sprintf@exp& (0+255),f,b
 21825  00225C  A0D8               	btfss	16344,0,c
 21826  00225E  07A7               	decf	(i1sprintf@exp+1)& (0+255),f,b
 21827  002260                     i1l1025:
 21828                           
 21829                           ; BSR set to: 0
 21830                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 21831                           
 21832                           ; BSR set to: 0
 21833  002260  51A6               	movf	i1sprintf@exp& (0+255),w,b
 21834  002262  0800               	sublw	0
 21835  002264  EC93  F01F         	call	i1_scale
 21836  002268  0060  F108  F0A2   	movff	?i1_scale,i1sprintf@tmpval
 21837  00226E  0060  F10C  F0A3   	movff	?i1_scale+1,i1sprintf@tmpval+1
 21838  002274  0060  F110  F0A4   	movff	?i1_scale+2,i1sprintf@tmpval+2
 21839                           
 21840                           ;doprnt.c: 847: tmpval.integ *= fval;
 21841  00227A  0060  F288  F033   	movff	i1sprintf@tmpval,i1___ftmul@f1
 21842  002280  0060  F28C  F034   	movff	i1sprintf@tmpval+1,i1___ftmul@f1+1
 21843  002286  0060  F290  F035   	movff	i1sprintf@tmpval+2,i1___ftmul@f1+2
 21844  00228C  0060  F2B8  F036   	movff	i1sprintf@fval,i1___ftmul@f2
 21845  002292  0060  F2BC  F037   	movff	i1sprintf@fval+1,i1___ftmul@f2+1
 21846  002298  0060  F2C0  F038   	movff	i1sprintf@fval+2,i1___ftmul@f2+2
 21847  00229E  ECE0  F032         	call	i1___ftmul	;wreg free
 21848  0022A2  0060  F0CC  F0A2   	movff	?i1___ftmul,i1sprintf@tmpval
 21849  0022A8  0060  F0D0  F0A3   	movff	?i1___ftmul+1,i1sprintf@tmpval+1
 21850  0022AE  0060  F0D4  F0A4   	movff	?i1___ftmul+2,i1sprintf@tmpval+2
 21851                           
 21852                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 21853  0022B4  0060  F288  F060   	movff	i1sprintf@tmpval,i1___ftge@ff1
 21854  0022BA  0060  F28C  F061   	movff	i1sprintf@tmpval+1,i1___ftge@ff1+1
 21855  0022C0  0060  F290  F062   	movff	i1sprintf@tmpval+2,i1___ftge@ff1+2
 21856  0022C6  0E00               	movlw	0
 21857  0022C8  0100               	movlb	0	; () banked
 21858  0022CA  6F63               	movwf	i1___ftge@ff2& (0+255),b
 21859  0022CC  0E80               	movlw	128
 21860  0022CE  6F64               	movwf	(i1___ftge@ff2+1)& (0+255),b
 21861  0022D0  0E3F               	movlw	63
 21862  0022D2  6F65               	movwf	(i1___ftge@ff2+2)& (0+255),b
 21863  0022D4  ECE5  F03B         	call	i1___ftge	;wreg free
 21864  0022D8  0100               	movlb	0	; () banked
 21865  0022DA  B0D8               	btfsc	16344,0,c
 21866  0022DC  D004               	goto	i1l1026
 21867                           
 21868                           ; BSR set to: 0
 21869                           ;doprnt.c: 849: exp--;
 21870  0022DE  07A6               	decf	i1sprintf@exp& (0+255),f,b
 21871  0022E0  A0D8               	btfss	16344,0,c
 21872  0022E2  07A7               	decf	(i1sprintf@exp+1)& (0+255),f,b
 21873  0022E4  D016               	goto	i1l1028
 21874  0022E6                     i1l1026:
 21875                           
 21876                           ; BSR set to: 0
 21877                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 21878                           
 21879                           ; BSR set to: 0
 21880  0022E6  0060  F288  F060   	movff	i1sprintf@tmpval,i1___ftge@ff1
 21881  0022EC  0060  F28C  F061   	movff	i1sprintf@tmpval+1,i1___ftge@ff1+1
 21882  0022F2  0060  F290  F062   	movff	i1sprintf@tmpval+2,i1___ftge@ff1+2
 21883  0022F8  0E00               	movlw	0
 21884  0022FA  6F63               	movwf	i1___ftge@ff2& (0+255),b
 21885  0022FC  0E20               	movlw	32
 21886  0022FE  6F64               	movwf	(i1___ftge@ff2+1)& (0+255),b
 21887  002300  0E41               	movlw	65
 21888  002302  6F65               	movwf	(i1___ftge@ff2+2)& (0+255),b
 21889  002304  ECE5  F03B         	call	i1___ftge	;wreg free
 21890  002308  0100               	movlb	0	; () banked
 21891  00230A  A0D8               	btfss	16344,0,c
 21892  00230C  D002               	goto	i1l1028
 21893                           
 21894                           ; BSR set to: 0
 21895                           ;doprnt.c: 851: exp++;
 21896  00230E  4BA6               	infsnz	i1sprintf@exp& (0+255),f,b
 21897  002310  2BA7               	incf	(i1sprintf@exp+1)& (0+255),f,b
 21898  002312                     i1l1028:
 21899                           
 21900                           ; BSR set to: 0
 21901                           ;doprnt.c: 852: }
 21902                           ;doprnt.c: 854: if(exp <= 0)
 21903                           
 21904                           ; BSR set to: 0
 21905                           
 21906                           ; BSR set to: 0
 21907                           
 21908                           ; BSR set to: 0
 21909  002312  BFA7               	btfsc	(i1sprintf@exp+1)& (0+255),7,b
 21910  002314  D005               	goto	i1u1515_20
 21911  002316  51A7               	movf	(i1sprintf@exp+1)& (0+255),w,b
 21912  002318  E106               	bnz	i1l1029
 21913  00231A  05A6               	decf	i1sprintf@exp& (0+255),w,b
 21914  00231C  B0D8               	btfsc	16344,0,c
 21915  00231E  D003               	goto	i1l1029
 21916  002320                     i1u1515_20:
 21917                           
 21918                           ; BSR set to: 0
 21919                           ;doprnt.c: 855: c = 1;
 21920  002320  0E01               	movlw	1
 21921  002322  6FB3               	movwf	i1sprintf@c& (0+255),b
 21922  002324  D003               	goto	i1l1030
 21923  002326                     i1l1029:
 21924                           
 21925                           ; BSR set to: 0
 21926                           ;doprnt.c: 856: else
 21927                           ;doprnt.c: 857: c = exp;
 21928  002326  0060  F298  F0B3   	movff	i1sprintf@exp,i1sprintf@c
 21929  00232C                     i1l1030:
 21930                           
 21931                           ; BSR set to: 0
 21932                           ;doprnt.c: 858: if(
 21933                           ;doprnt.c: 860: flag & 0x100
 21934                           ;doprnt.c: 862: ||
 21935                           ;doprnt.c: 866: flag & 0x200 && (exp < -4 || exp >= (int)prec)
 21936                           ;doprnt.c: 868: ) {
 21937  00232C  B1B5               	btfsc	(i1sprintf@flag+1)& (0+255),0,b
 21938  00232E  D016               	goto	i1u1519_20
 21939                           
 21940                           ; BSR set to: 0
 21941  002330  A3B5               	btfss	(i1sprintf@flag+1)& (0+255),1,b
 21942  002332  EFBE  F015         	goto	i1l1031
 21943                           
 21944                           ; BSR set to: 0
 21945  002336  AFA7               	btfss	(i1sprintf@exp+1)& (0+255),7,b
 21946  002338  D006               	goto	i1u1518_20
 21947  00233A  0EFC               	movlw	252
 21948  00233C  5DA6               	subwf	i1sprintf@exp& (0+255),w,b
 21949  00233E  0EFF               	movlw	255
 21950  002340  59A7               	subwfb	(i1sprintf@exp+1)& (0+255),w,b
 21951  002342  A0D8               	btfss	16344,0,c
 21952  002344  D00B               	goto	i1u1519_20
 21953  002346                     i1u1518_20:
 21954                           
 21955                           ; BSR set to: 0
 21956  002346  51B1               	movf	i1sprintf@prec& (0+255),w,b
 21957  002348  5DA6               	subwf	i1sprintf@exp& (0+255),w,b
 21958  00234A  51A7               	movf	(i1sprintf@exp+1)& (0+255),w,b
 21959  00234C  0A80               	xorlw	128
 21960  00234E  6F83               	movwf	??i1_sprintf& (0+255),b
 21961  002350  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 21962  002352  0A80               	xorlw	128
 21963  002354  5983               	subwfb	??i1_sprintf& (0+255),w,b
 21964  002356  A0D8               	btfss	16344,0,c
 21965  002358  EFBE  F015         	goto	i1l1031
 21966  00235C                     i1u1519_20:
 21967                           
 21968                           ; BSR set to: 0
 21969                           ;doprnt.c: 870: if(prec && flag & 0x200)
 21970                           
 21971                           ; BSR set to: 0
 21972                           
 21973                           ; BSR set to: 0
 21974  00235C  51B1               	movf	i1sprintf@prec& (0+255),w,b
 21975  00235E  11B2               	iorwf	(i1sprintf@prec+1)& (0+255),w,b
 21976  002360  A4D8               	btfss	16344,2,c
 21977                           
 21978                           ; BSR set to: 0
 21979  002362  A3B5               	btfss	(i1sprintf@flag+1)& (0+255),1,b
 21980  002364  D003               	goto	i1l1036
 21981                           
 21982                           ; BSR set to: 0
 21983                           ;doprnt.c: 871: prec--;
 21984  002366  07B1               	decf	i1sprintf@prec& (0+255),f,b
 21985  002368  A0D8               	btfss	16344,0,c
 21986  00236A  07B2               	decf	(i1sprintf@prec+1)& (0+255),f,b
 21987  00236C                     i1l1036:
 21988                           
 21989                           ; BSR set to: 0
 21990                           ;doprnt.c: 873: if((unsigned)prec > (sizeof dpowers/sizeof dpowers[0]) - 2)
 21991                           
 21992                           ; BSR set to: 0
 21993  00236C  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 21994  00236E  E104               	bnz	i1u1522_20
 21995  002370  0E09               	movlw	9
 21996  002372  5DB1               	subwf	i1sprintf@prec& (0+255),w,b
 21997  002374  A0D8               	btfss	16344,0,c
 21998  002376  D003               	goto	i1l1037
 21999  002378                     i1u1522_20:
 22000                           
 22001                           ; BSR set to: 0
 22002                           ;doprnt.c: 874: c = (sizeof dpowers/sizeof dpowers[0]) - 2;
 22003  002378  0E08               	movlw	8
 22004  00237A  6FB3               	movwf	i1sprintf@c& (0+255),b
 22005  00237C  D003               	goto	i1l1038
 22006  00237E                     i1l1037:
 22007                           
 22008                           ; BSR set to: 0
 22009                           ;doprnt.c: 875: else
 22010                           ;doprnt.c: 876: c = prec;
 22011  00237E  0060  F2C4  F0B3   	movff	i1sprintf@prec,i1sprintf@c
 22012  002384                     i1l1038:
 22013                           
 22014                           ; BSR set to: 0
 22015                           ;doprnt.c: 877: if( fval!=0) {
 22016                           
 22017                           ; BSR set to: 0
 22018  002384  51AE               	movf	i1sprintf@fval& (0+255),w,b
 22019  002386  11AF               	iorwf	(i1sprintf@fval+1)& (0+255),w,b
 22020  002388  11B0               	iorwf	(i1sprintf@fval+2)& (0+255),w,b
 22021  00238A  B4D8               	btfsc	16344,2,c
 22022  00238C  D11D               	goto	i1l1043
 22023                           
 22024                           ; BSR set to: 0
 22025                           ;doprnt.c: 878: fval /= scale(exp-c);
 22026  00238E  0060  F2B8  F049   	movff	i1sprintf@fval,i1___ftdiv@f1
 22027  002394  0060  F2BC  F04A   	movff	i1sprintf@fval+1,i1___ftdiv@f1+1
 22028  00239A  0060  F2C0  F04B   	movff	i1sprintf@fval+2,i1___ftdiv@f1+2
 22029  0023A0  51B3               	movf	i1sprintf@c& (0+255),w,b
 22030  0023A2  0800               	sublw	0
 22031  0023A4  25A6               	addwf	i1sprintf@exp& (0+255),w,b
 22032  0023A6  EC93  F01F         	call	i1_scale
 22033  0023AA  0060  F108  F04C   	movff	?i1_scale,i1___ftdiv@f2
 22034  0023B0  0060  F10C  F04D   	movff	?i1_scale+1,i1___ftdiv@f2+1
 22035  0023B6  0060  F110  F04E   	movff	?i1_scale+2,i1___ftdiv@f2+2
 22036  0023BC  EC6C  F035         	call	i1___ftdiv	;wreg free
 22037  0023C0  0060  F124  F0AE   	movff	?i1___ftdiv,i1sprintf@fval
 22038  0023C6  0060  F128  F0AF   	movff	?i1___ftdiv+1,i1sprintf@fval+1
 22039  0023CC  0060  F12C  F0B0   	movff	?i1___ftdiv+2,i1sprintf@fval+2
 22040                           
 22041                           ;doprnt.c: 893: if(fval - (double)(unsigned long)fval >= 0.5)
 22042  0023D2  0060  F2B8  F04F   	movff	i1sprintf@fval,i1___ftadd@f2
 22043  0023D8  0060  F2BC  F050   	movff	i1sprintf@fval+1,i1___ftadd@f2+1
 22044  0023DE  0060  F2C0  F051   	movff	i1sprintf@fval+2,i1___ftadd@f2+2
 22045  0023E4  0060  F2B8  F018   	movff	i1sprintf@fval,i1___fttol@f1
 22046  0023EA  0060  F2BC  F019   	movff	i1sprintf@fval+1,i1___fttol@f1+1
 22047  0023F0  0060  F2C0  F01A   	movff	i1sprintf@fval+2,i1___fttol@f1+2
 22048  0023F6  EC6B  F034         	call	i1___fttol	;wreg free
 22049  0023FA  0060  F060  F027   	movff	?i1___fttol,i1___lltoft@c
 22050  002400  0060  F064  F028   	movff	?i1___fttol+1,i1___lltoft@c+1
 22051  002406  0060  F068  F029   	movff	?i1___fttol+2,i1___lltoft@c+2
 22052  00240C  0060  F06C  F02A   	movff	?i1___fttol+3,i1___lltoft@c+3
 22053  002412  ECDD  F03F         	call	i1___lltoft	;wreg free
 22054  002416  0060  F09C  F030   	movff	?i1___lltoft,i1___ftneg@f1
 22055  00241C  0060  F0A0  F031   	movff	?i1___lltoft+1,i1___ftneg@f1+1
 22056  002422  0060  F0A4  F032   	movff	?i1___lltoft+2,i1___ftneg@f1+2
 22057  002428  EC03  F045         	call	i1___ftneg	;wreg free
 22058  00242C  0060  F0C0  F04C   	movff	?i1___ftneg,i1___ftadd@f1
 22059  002432  0060  F0C4  F04D   	movff	?i1___ftneg+1,i1___ftadd@f1+1
 22060  002438  0060  F0C8  F04E   	movff	?i1___ftneg+2,i1___ftadd@f1+2
 22061  00243E  ECAE  F02B         	call	i1___ftadd	;wreg free
 22062  002442  0060  F130  F060   	movff	?i1___ftadd,i1___ftge@ff1
 22063  002448  0060  F134  F061   	movff	?i1___ftadd+1,i1___ftge@ff1+1
 22064  00244E  0060  F138  F062   	movff	?i1___ftadd+2,i1___ftge@ff1+2
 22065  002454  0E00               	movlw	0
 22066  002456  0100               	movlb	0	; () banked
 22067  002458  6F63               	movwf	i1___ftge@ff2& (0+255),b
 22068  00245A  0E00               	movlw	0
 22069  00245C  6F64               	movwf	(i1___ftge@ff2+1)& (0+255),b
 22070  00245E  0E3F               	movlw	63
 22071  002460  6F65               	movwf	(i1___ftge@ff2+2)& (0+255),b
 22072  002462  ECE5  F03B         	call	i1___ftge	;wreg free
 22073  002466  0100               	movlb	0	; () banked
 22074  002468  A0D8               	btfss	16344,0,c
 22075  00246A  D01A               	goto	i1l1040
 22076                           
 22077                           ; BSR set to: 0
 22078                           ;doprnt.c: 894: fval += 0.5;
 22079  00246C  0060  F2B8  F04C   	movff	i1sprintf@fval,i1___ftadd@f1
 22080  002472  0060  F2BC  F04D   	movff	i1sprintf@fval+1,i1___ftadd@f1+1
 22081  002478  0060  F2C0  F04E   	movff	i1sprintf@fval+2,i1___ftadd@f1+2
 22082  00247E  0E00               	movlw	0
 22083  002480  6E4F               	movwf	i1___ftadd@f2,c
 22084  002482  0E00               	movlw	0
 22085  002484  6E50               	movwf	i1___ftadd@f2+1,c
 22086  002486  0E3F               	movlw	63
 22087  002488  6E51               	movwf	i1___ftadd@f2+2,c
 22088  00248A  ECAE  F02B         	call	i1___ftadd	;wreg free
 22089  00248E  0060  F130  F0AE   	movff	?i1___ftadd,i1sprintf@fval
 22090  002494  0060  F134  F0AF   	movff	?i1___ftadd+1,i1sprintf@fval+1
 22091  00249A  0060  F138  F0B0   	movff	?i1___ftadd+2,i1sprintf@fval+2
 22092  0024A0                     i1l1040:
 22093                           
 22094                           ;doprnt.c: 895: if((unsigned long)fval >= dpowers[c+1]) {
 22095  0024A0  0060  F2CC  F083   	movff	i1sprintf@c,??i1_sprintf
 22096  0024A6  0100               	movlb	0	; () banked
 22097  0024A8  6B84               	clrf	(??i1_sprintf+1)& (0+255),b
 22098  0024AA  BF83               	btfsc	??i1_sprintf& (0+255),7,b
 22099  0024AC  0784               	decf	(??i1_sprintf+1)& (0+255),f,b
 22100  0024AE  90D8               	bcf	16344,0,c
 22101  0024B0  3783               	rlcf	??i1_sprintf& (0+255),f,b
 22102  0024B2  3784               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 22103  0024B4  90D8               	bcf	16344,0,c
 22104  0024B6  3783               	rlcf	??i1_sprintf& (0+255),f,b
 22105  0024B8  3784               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 22106  0024BA  0E04               	movlw	4
 22107  0024BC  2783               	addwf	??i1_sprintf& (0+255),f,b
 22108  0024BE  0E00               	movlw	0
 22109  0024C0  2384               	addwfc	(??i1_sprintf+1)& (0+255),f,b
 22110  0024C2  0ED9               	movlw	low _dpowers
 22111  0024C4  2583               	addwf	??i1_sprintf& (0+255),w,b
 22112  0024C6  6EF6               	movwf	16374,c
 22113  0024C8  0EFA               	movlw	high _dpowers
 22114  0024CA  2184               	addwfc	(??i1_sprintf+1)& (0+255),w,b
 22115  0024CC  6EF7               	movwf	16375,c
 22116  0024CE                     	if	1	;There are 3 active tblptr bytes
 22117  0024CE  6AF8               	clrf	16376,c
 22118  0024D0  0E00               	movlw	low (__mediumconst shr (0+16))
 22119  0024D2  22F8               	addwfc	16376,f,c
 22120  0024D4                     	endif
 22121  0024D4  0060  F2B8  F018   	movff	i1sprintf@fval,i1___fttol@f1
 22122  0024DA  0060  F2BC  F019   	movff	i1sprintf@fval+1,i1___fttol@f1+1
 22123  0024E0  0060  F2C0  F01A   	movff	i1sprintf@fval+2,i1___fttol@f1+2
 22124  0024E6  EC6B  F034         	call	i1___fttol	;wreg free
 22125  0024EA  0009               	tblrd		*+
 22126  0024EC  50F5               	movf	16373,w,c
 22127  0024EE  5C18               	subwf	?i1___fttol,w,c
 22128  0024F0  0009               	tblrd		*+
 22129  0024F2  50F5               	movf	16373,w,c
 22130  0024F4  5819               	subwfb	?i1___fttol+1,w,c
 22131  0024F6  0009               	tblrd		*+
 22132  0024F8  50F5               	movf	16373,w,c
 22133  0024FA  581A               	subwfb	?i1___fttol+2,w,c
 22134  0024FC  0009               	tblrd		*+
 22135  0024FE  50F5               	movf	16373,w,c
 22136  002500  581B               	subwfb	?i1___fttol+3,w,c
 22137  002502  A0D8               	btfss	16344,0,c
 22138  002504  D01E               	goto	i1l1041
 22139                           
 22140                           ;doprnt.c: 896: fval *= 1e-1;
 22141  002506  0060  F2B8  F033   	movff	i1sprintf@fval,i1___ftmul@f1
 22142  00250C  0060  F2BC  F034   	movff	i1sprintf@fval+1,i1___ftmul@f1+1
 22143  002512  0060  F2C0  F035   	movff	i1sprintf@fval+2,i1___ftmul@f1+2
 22144  002518  0ECD               	movlw	205
 22145  00251A  6E36               	movwf	i1___ftmul@f2,c
 22146  00251C  0ECC               	movlw	204
 22147  00251E  6E37               	movwf	i1___ftmul@f2+1,c
 22148  002520  0E3D               	movlw	61
 22149  002522  6E38               	movwf	i1___ftmul@f2+2,c
 22150  002524  ECE0  F032         	call	i1___ftmul	;wreg free
 22151  002528  0060  F0CC  F0AE   	movff	?i1___ftmul,i1sprintf@fval
 22152  00252E  0060  F0D0  F0AF   	movff	?i1___ftmul+1,i1sprintf@fval+1
 22153  002534  0060  F0D4  F0B0   	movff	?i1___ftmul+2,i1sprintf@fval+2
 22154                           
 22155                           ;doprnt.c: 897: exp++;
 22156  00253A  0100               	movlb	0	; () banked
 22157  00253C  4BA6               	infsnz	i1sprintf@exp& (0+255),f,b
 22158  00253E  2BA7               	incf	(i1sprintf@exp+1)& (0+255),f,b
 22159                           
 22160                           ;doprnt.c: 898: } else if((unsigned long)fval < dpowers[c]) {
 22161  002540  D043               	goto	i1l1043
 22162  002542                     i1l1041:
 22163                           
 22164                           ; BSR set to: 0
 22165  002542  0100               	movlb	0	; () banked
 22166  002544  51B3               	movf	i1sprintf@c& (0+255),w,b
 22167  002546  0D04               	mullw	4
 22168  002548  0ED9               	movlw	low _dpowers
 22169  00254A  24F3               	addwf	16371,w,c
 22170  00254C  6EF6               	movwf	16374,c
 22171  00254E  0EFA               	movlw	high _dpowers
 22172  002550  20F4               	addwfc	16372,w,c
 22173  002552  6EF7               	movwf	16375,c
 22174  002554                     	if	1	;There are 3 active tblptr bytes
 22175  002554  6AF8               	clrf	16376,c
 22176  002556  0E00               	movlw	low (__mediumconst shr (0+16))
 22177  002558  22F8               	addwfc	16376,f,c
 22178  00255A                     	endif
 22179  00255A  0060  F2B8  F018   	movff	i1sprintf@fval,i1___fttol@f1
 22180  002560  0060  F2BC  F019   	movff	i1sprintf@fval+1,i1___fttol@f1+1
 22181  002566  0060  F2C0  F01A   	movff	i1sprintf@fval+2,i1___fttol@f1+2
 22182  00256C  EC6B  F034         	call	i1___fttol	;wreg free
 22183  002570  0009               	tblrd		*+
 22184  002572  50F5               	movf	16373,w,c
 22185  002574  5C18               	subwf	?i1___fttol,w,c
 22186  002576  0009               	tblrd		*+
 22187  002578  50F5               	movf	16373,w,c
 22188  00257A  5819               	subwfb	?i1___fttol+1,w,c
 22189  00257C  0009               	tblrd		*+
 22190  00257E  50F5               	movf	16373,w,c
 22191  002580  581A               	subwfb	?i1___fttol+2,w,c
 22192  002582  0009               	tblrd		*+
 22193  002584  50F5               	movf	16373,w,c
 22194  002586  581B               	subwfb	?i1___fttol+3,w,c
 22195  002588  B0D8               	btfsc	16344,0,c
 22196  00258A  D01E               	goto	i1l1043
 22197                           
 22198                           ;doprnt.c: 899: fval *= 10.0;
 22199  00258C  0060  F2B8  F033   	movff	i1sprintf@fval,i1___ftmul@f1
 22200  002592  0060  F2BC  F034   	movff	i1sprintf@fval+1,i1___ftmul@f1+1
 22201  002598  0060  F2C0  F035   	movff	i1sprintf@fval+2,i1___ftmul@f1+2
 22202  00259E  0E00               	movlw	0
 22203  0025A0  6E36               	movwf	i1___ftmul@f2,c
 22204  0025A2  0E20               	movlw	32
 22205  0025A4  6E37               	movwf	i1___ftmul@f2+1,c
 22206  0025A6  0E41               	movlw	65
 22207  0025A8  6E38               	movwf	i1___ftmul@f2+2,c
 22208  0025AA  ECE0  F032         	call	i1___ftmul	;wreg free
 22209  0025AE  0060  F0CC  F0AE   	movff	?i1___ftmul,i1sprintf@fval
 22210  0025B4  0060  F0D0  F0AF   	movff	?i1___ftmul+1,i1sprintf@fval+1
 22211  0025BA  0060  F0D4  F0B0   	movff	?i1___ftmul+2,i1sprintf@fval+2
 22212                           
 22213                           ;doprnt.c: 900: exp--;
 22214  0025C0  0100               	movlb	0	; () banked
 22215  0025C2  07A6               	decf	i1sprintf@exp& (0+255),f,b
 22216  0025C4  A0D8               	btfss	16344,0,c
 22217  0025C6  07A7               	decf	(i1sprintf@exp+1)& (0+255),f,b
 22218  0025C8                     i1l1043:
 22219                           
 22220                           ;doprnt.c: 901: }
 22221                           ;doprnt.c: 903: }
 22222                           ;doprnt.c: 905: if(flag & 0x200 && !(flag & 0x800)) {
 22223                           
 22224                           ; BSR set to: 0
 22225                           
 22226                           ; BSR set to: 0
 22227                           
 22228                           ; BSR set to: 0
 22229  0025C8  0100               	movlb	0	; () banked
 22230  0025CA  B3B5               	btfsc	(i1sprintf@flag+1)& (0+255),1,b
 22231                           
 22232                           ; BSR set to: 0
 22233  0025CC  B7B5               	btfsc	(i1sprintf@flag+1)& (0+255),3,b
 22234  0025CE  D09E               	goto	i1l1051
 22235                           
 22236                           ; BSR set to: 0
 22237                           ;doprnt.c: 906: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])))
 22238  0025D0  BFB2               	btfsc	(i1sprintf@prec+1)& (0+255),7,b
 22239  0025D2  D00A               	goto	i1l1045
 22240  0025D4  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 22241  0025D6  E104               	bnz	i1u1529_20
 22242  0025D8  0E0B               	movlw	11
 22243  0025DA  5DB1               	subwf	i1sprintf@prec& (0+255),w,b
 22244  0025DC  A0D8               	btfss	16344,0,c
 22245  0025DE  D004               	goto	i1l1045
 22246  0025E0                     i1u1529_20:
 22247                           
 22248                           ; BSR set to: 0
 22249                           ;doprnt.c: 907: prec = (sizeof dpowers/sizeof dpowers[0]);
 22250  0025E0  0E00               	movlw	0
 22251  0025E2  6FB2               	movwf	(i1sprintf@prec+1)& (0+255),b
 22252  0025E4  0E0A               	movlw	10
 22253  0025E6  6FB1               	movwf	i1sprintf@prec& (0+255),b
 22254  0025E8                     i1l1045:
 22255                           
 22256                           ; BSR set to: 0
 22257                           ;doprnt.c: 915: val = (unsigned long)fval;
 22258                           
 22259                           ; BSR set to: 0
 22260  0025E8  0060  F2B8  F018   	movff	i1sprintf@fval,i1___fttol@f1
 22261  0025EE  0060  F2BC  F019   	movff	i1sprintf@fval+1,i1___fttol@f1+1
 22262  0025F4  0060  F2C0  F01A   	movff	i1sprintf@fval+2,i1___fttol@f1+2
 22263  0025FA  EC6B  F034         	call	i1___fttol	;wreg free
 22264  0025FE  0060  F060  F0AA   	movff	?i1___fttol,i1sprintf@val
 22265  002604  0060  F064  F0AB   	movff	?i1___fttol+1,i1sprintf@val+1
 22266  00260A  0060  F068  F0AC   	movff	?i1___fttol+2,i1sprintf@val+2
 22267  002610  0060  F06C  F0AD   	movff	?i1___fttol+3,i1sprintf@val+3
 22268                           
 22269                           ;doprnt.c: 916: while(val && val % 10 == 0) {
 22270  002616  D026               	goto	i1l1046
 22271  002618                     
 22272                           ;doprnt.c: 917: prec--;
 22273  002618  0100               	movlb	0	; () banked
 22274  00261A  07B1               	decf	i1sprintf@prec& (0+255),f,b
 22275  00261C  A0D8               	btfss	16344,0,c
 22276  00261E  07B2               	decf	(i1sprintf@prec+1)& (0+255),f,b
 22277                           
 22278                           ; BSR set to: 0
 22279                           ;doprnt.c: 918: val /= 10;
 22280  002620  0060  F2A8  F004   	movff	i1sprintf@val,i1___lldiv@dividend
 22281  002626  0060  F2AC  F005   	movff	i1sprintf@val+1,i1___lldiv@dividend+1
 22282  00262C  0060  F2B0  F006   	movff	i1sprintf@val+2,i1___lldiv@dividend+2
 22283  002632  0060  F2B4  F007   	movff	i1sprintf@val+3,i1___lldiv@dividend+3
 22284  002638  0E0A               	movlw	10
 22285  00263A  6E08               	movwf	i1___lldiv@divisor,c
 22286  00263C  0E00               	movlw	0
 22287  00263E  6E09               	movwf	i1___lldiv@divisor+1,c
 22288  002640  0E00               	movlw	0
 22289  002642  6E0A               	movwf	i1___lldiv@divisor+2,c
 22290  002644  0E00               	movlw	0
 22291  002646  6E0B               	movwf	i1___lldiv@divisor+3,c
 22292  002648  EC04  F03D         	call	i1___lldiv	;wreg free
 22293  00264C  0060  F010  F0AA   	movff	?i1___lldiv,i1sprintf@val
 22294  002652  0060  F014  F0AB   	movff	?i1___lldiv+1,i1sprintf@val+1
 22295  002658  0060  F018  F0AC   	movff	?i1___lldiv+2,i1sprintf@val+2
 22296  00265E  0060  F01C  F0AD   	movff	?i1___lldiv+3,i1sprintf@val+3
 22297  002664                     i1l1046:
 22298  002664  0100               	movlb	0	; () banked
 22299  002666  51AA               	movf	i1sprintf@val& (0+255),w,b
 22300  002668  11AB               	iorwf	(i1sprintf@val+1)& (0+255),w,b
 22301  00266A  11AC               	iorwf	(i1sprintf@val+2)& (0+255),w,b
 22302  00266C  11AD               	iorwf	(i1sprintf@val+3)& (0+255),w,b
 22303  00266E  B4D8               	btfsc	16344,2,c
 22304  002670  D01C               	goto	i1u1531_20
 22305                           
 22306                           ; BSR set to: 0
 22307  002672  0060  F2A8  F011   	movff	i1sprintf@val,i1___llmod@dividend
 22308  002678  0060  F2AC  F012   	movff	i1sprintf@val+1,i1___llmod@dividend+1
 22309  00267E  0060  F2B0  F013   	movff	i1sprintf@val+2,i1___llmod@dividend+2
 22310  002684  0060  F2B4  F014   	movff	i1sprintf@val+3,i1___llmod@dividend+3
 22311  00268A  0E0A               	movlw	10
 22312  00268C  6E15               	movwf	i1___llmod@divisor,c
 22313  00268E  0E00               	movlw	0
 22314  002690  6E16               	movwf	i1___llmod@divisor+1,c
 22315  002692  0E00               	movlw	0
 22316  002694  6E17               	movwf	i1___llmod@divisor+2,c
 22317  002696  0E00               	movlw	0
 22318  002698  6E18               	movwf	i1___llmod@divisor+3,c
 22319  00269A  EC70  F03F         	call	i1___llmod	;wreg free
 22320  00269E  5011               	movf	?i1___llmod,w,c
 22321  0026A0  1012               	iorwf	?i1___llmod+1,w,c
 22322  0026A2  1013               	iorwf	?i1___llmod+2,w,c
 22323  0026A4  1014               	iorwf	?i1___llmod+3,w,c
 22324  0026A6  B4D8               	btfsc	16344,2,c
 22325  0026A8  D7B7               	goto	i1l1047
 22326  0026AA                     i1u1531_20:
 22327                           
 22328                           ;doprnt.c: 919: }
 22329                           ;doprnt.c: 921: if(prec < c) {
 22330  0026AA  0100               	movlb	0	; () banked
 22331  0026AC  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 22332  0026AE  0A80               	xorlw	128
 22333  0026B0  6F83               	movwf	??i1_sprintf& (0+255),b
 22334  0026B2  51B3               	movf	i1sprintf@c& (0+255),w,b
 22335  0026B4  5DB1               	subwf	i1sprintf@prec& (0+255),w,b
 22336  0026B6  0E80               	movlw	128
 22337  0026B8  BFB3               	btfsc	i1sprintf@c& (0+255),7,b
 22338  0026BA  0E7F               	movlw	127
 22339  0026BC  5983               	subwfb	??i1_sprintf& (0+255),w,b
 22340  0026BE  B0D8               	btfsc	16344,0,c
 22341  0026C0  D025               	goto	i1l1051
 22342                           
 22343                           ; BSR set to: 0
 22344                           ;doprnt.c: 922: fval /= scale(c-prec);
 22345  0026C2  0060  F2B8  F049   	movff	i1sprintf@fval,i1___ftdiv@f1
 22346  0026C8  0060  F2BC  F04A   	movff	i1sprintf@fval+1,i1___ftdiv@f1+1
 22347  0026CE  0060  F2C0  F04B   	movff	i1sprintf@fval+2,i1___ftdiv@f1+2
 22348  0026D4  51B1               	movf	i1sprintf@prec& (0+255),w,b
 22349  0026D6  0800               	sublw	0
 22350  0026D8  25B3               	addwf	i1sprintf@c& (0+255),w,b
 22351  0026DA  EC93  F01F         	call	i1_scale
 22352  0026DE  0060  F108  F04C   	movff	?i1_scale,i1___ftdiv@f2
 22353  0026E4  0060  F10C  F04D   	movff	?i1_scale+1,i1___ftdiv@f2+1
 22354  0026EA  0060  F110  F04E   	movff	?i1_scale+2,i1___ftdiv@f2+2
 22355  0026F0  EC6C  F035         	call	i1___ftdiv	;wreg free
 22356  0026F4  0060  F124  F0AE   	movff	?i1___ftdiv,i1sprintf@fval
 22357  0026FA  0060  F128  F0AF   	movff	?i1___ftdiv+1,i1sprintf@fval+1
 22358  002700  0060  F12C  F0B0   	movff	?i1___ftdiv+2,i1sprintf@fval+2
 22359                           
 22360                           ;doprnt.c: 923: c = prec;
 22361  002706  0060  F2C4  F0B3   	movff	i1sprintf@prec,i1sprintf@c
 22362  00270C                     i1l1051:
 22363                           
 22364                           ;doprnt.c: 924: }
 22365                           ;doprnt.c: 926: }
 22366                           ;doprnt.c: 929: width -= prec + 5;
 22367  00270C  0E05               	movlw	5
 22368  00270E  0100               	movlb	0	; () banked
 22369  002710  25B1               	addwf	i1sprintf@prec& (0+255),w,b
 22370  002712  6F83               	movwf	??i1_sprintf& (0+255),b
 22371  002714  0E00               	movlw	0
 22372  002716  21B2               	addwfc	(i1sprintf@prec+1)& (0+255),w,b
 22373  002718  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 22374  00271A  5183               	movf	??i1_sprintf& (0+255),w,b
 22375  00271C  5FA8               	subwf	i1sprintf@width& (0+255),f,b
 22376  00271E  5184               	movf	(??i1_sprintf+1)& (0+255),w,b
 22377  002720  5BA9               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 22378                           
 22379                           ; BSR set to: 0
 22380                           ;doprnt.c: 931: if(prec || flag & 0x800)
 22381  002722  51B1               	movf	i1sprintf@prec& (0+255),w,b
 22382  002724  11B2               	iorwf	(i1sprintf@prec+1)& (0+255),w,b
 22383  002726  A4D8               	btfss	16344,2,c
 22384  002728  D002               	goto	i1u1534_20
 22385                           
 22386                           ; BSR set to: 0
 22387  00272A  A7B5               	btfss	(i1sprintf@flag+1)& (0+255),3,b
 22388  00272C  D003               	goto	i1l1052
 22389  00272E                     i1u1534_20:
 22390                           
 22391                           ; BSR set to: 0
 22392                           ;doprnt.c: 932: width--;
 22393                           
 22394                           ; BSR set to: 0
 22395  00272E  07A8               	decf	i1sprintf@width& (0+255),f,b
 22396  002730  A0D8               	btfss	16344,0,c
 22397  002732  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 22398  002734                     i1l1052:
 22399                           
 22400                           ; BSR set to: 0
 22401                           ;doprnt.c: 934: if(flag & 0x03)
 22402                           
 22403                           ; BSR set to: 0
 22404  002734  0E03               	movlw	3
 22405  002736  15B4               	andwf	i1sprintf@flag& (0+255),w,b
 22406  002738  6F83               	movwf	??i1_sprintf& (0+255),b
 22407  00273A  0E00               	movlw	0
 22408  00273C  15B5               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 22409  00273E  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 22410  002740  5183               	movf	??i1_sprintf& (0+255),w,b
 22411  002742  1184               	iorwf	(??i1_sprintf+1)& (0+255),w,b
 22412  002744  B4D8               	btfsc	16344,2,c
 22413  002746  D003               	goto	i1l1055
 22414                           
 22415                           ; BSR set to: 0
 22416                           ;doprnt.c: 935: width--;
 22417  002748  07A8               	decf	i1sprintf@width& (0+255),f,b
 22418  00274A  A0D8               	btfss	16344,0,c
 22419  00274C  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 22420  00274E                     i1l1055:
 22421                           
 22422                           ; BSR set to: 0
 22423                           ;doprnt.c: 946: if(flag & 0x04) {
 22424                           
 22425                           ; BSR set to: 0
 22426  00274E  A5B4               	btfss	i1sprintf@flag& (0+255),2,b
 22427  002750  D038               	goto	i1l1056
 22428                           
 22429                           ; BSR set to: 0
 22430                           ;doprnt.c: 948: if(flag & 0x02)
 22431  002752  A3B4               	btfss	i1sprintf@flag& (0+255),1,b
 22432  002754  D014               	goto	i1l1057
 22433                           
 22434                           ; BSR set to: 0
 22435                           ;doprnt.c: 949: ((*sp++ = (flag & 0x01 ? '-' : '+')));
 22436  002756  B1B4               	btfsc	i1sprintf@flag& (0+255),0,b
 22437  002758  D004               	goto	i1l1059
 22438                           
 22439                           ; BSR set to: 0
 22440  00275A  0E00               	movlw	0
 22441  00275C  6F8E               	movwf	(i1_sprintf$2173+1)& (0+255),b
 22442  00275E  0E2B               	movlw	43
 22443  002760  D003               	goto	L23
 22444  002762                     i1l1059:
 22445                           
 22446                           ; BSR set to: 0
 22447                           
 22448                           ; BSR set to: 0
 22449  002762  0E00               	movlw	0
 22450  002764  6F8E               	movwf	(i1_sprintf$2173+1)& (0+255),b
 22451  002766  0E2D               	movlw	45
 22452  002768                     L23:
 22453  002768  6F8D               	movwf	i1_sprintf$2173& (0+255),b
 22454                           
 22455                           ; BSR set to: 0
 22456                           
 22457                           ; BSR set to: 0
 22458  00276A  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22459  002770  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22460  002776  0060  F237  FFDF   	movff	i1_sprintf$2173,16351
 22461  00277C  D00A               	goto	i1l11644
 22462  00277E                     i1l1057:
 22463                           
 22464                           ; BSR set to: 0
 22465                           ;doprnt.c: 950: else if(flag & 0x01)
 22466  00277E  A1B4               	btfss	i1sprintf@flag& (0+255),0,b
 22467  002780  D018               	goto	i1l1064
 22468                           
 22469                           ; BSR set to: 0
 22470                           ;doprnt.c: 951: ((*sp++ = (' ')));
 22471  002782  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22472  002788  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22473  00278E  0E20               	movlw	32
 22474  002790  6EDF               	movwf	16351,c
 22475  002792                     i1l11644:
 22476                           
 22477                           ; BSR set to: 0
 22478  002792  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22479  002794  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22480                           
 22481                           ; BSR set to: 0
 22482                           ;doprnt.c: 953: while(width > 0) {
 22483                           
 22484                           ; BSR set to: 0
 22485  002796  D00D               	goto	i1l1064
 22486  002798                     i1l11646:
 22487                           
 22488                           ; BSR set to: 0
 22489                           ;doprnt.c: 954: ((*sp++ = ('0')));
 22490  002798  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22491  00279E  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22492  0027A4  0E30               	movlw	48
 22493  0027A6  6EDF               	movwf	16351,c
 22494                           
 22495                           ; BSR set to: 0
 22496  0027A8  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22497  0027AA  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22498                           
 22499                           ; BSR set to: 0
 22500                           ;doprnt.c: 955: width--;
 22501  0027AC  07A8               	decf	i1sprintf@width& (0+255),f,b
 22502  0027AE  A0D8               	btfss	16344,0,c
 22503  0027B0  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 22504  0027B2                     i1l1064:
 22505                           
 22506                           ; BSR set to: 0
 22507                           
 22508                           ; BSR set to: 0
 22509  0027B2  BFA9               	btfsc	(i1sprintf@width+1)& (0+255),7,b
 22510  0027B4  D03F               	goto	i1l1078
 22511  0027B6  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 22512  0027B8  E1EF               	bnz	i1l11646
 22513  0027BA  05A8               	decf	i1sprintf@width& (0+255),w,b
 22514  0027BC  A0D8               	btfss	16344,0,c
 22515  0027BE  D03A               	goto	i1l1078
 22516  0027C0  D7EB               	goto	i1l1065
 22517  0027C2                     i1l1056:
 22518                           
 22519                           ; BSR set to: 0
 22520                           ;doprnt.c: 959: {
 22521                           ;doprnt.c: 962: if(!(flag & 0x08))
 22522  0027C2  A7B4               	btfss	i1sprintf@flag& (0+255),3,b
 22523  0027C4  D00E               	goto	i1l1069
 22524  0027C6  D014               	goto	i1u1542_20
 22525  0027C8                     i1l11656:
 22526                           
 22527                           ; BSR set to: 0
 22528                           ;doprnt.c: 965: ((*sp++ = (' ')));
 22529  0027C8  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22530  0027CE  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22531  0027D4  0E20               	movlw	32
 22532  0027D6  6EDF               	movwf	16351,c
 22533                           
 22534                           ; BSR set to: 0
 22535  0027D8  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22536  0027DA  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22537                           
 22538                           ; BSR set to: 0
 22539                           ;doprnt.c: 966: width--;
 22540  0027DC  07A8               	decf	i1sprintf@width& (0+255),f,b
 22541  0027DE  A0D8               	btfss	16344,0,c
 22542  0027E0  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 22543  0027E2                     i1l1069:
 22544                           
 22545                           ; BSR set to: 0
 22546                           
 22547                           ; BSR set to: 0
 22548  0027E2  BFA9               	btfsc	(i1sprintf@width+1)& (0+255),7,b
 22549  0027E4  D005               	goto	i1u1542_20
 22550  0027E6  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 22551  0027E8  E1EF               	bnz	i1l11656
 22552  0027EA  05A8               	decf	i1sprintf@width& (0+255),w,b
 22553  0027EC  B0D8               	btfsc	16344,0,c
 22554  0027EE  D7EC               	goto	i1l1070
 22555  0027F0                     i1u1542_20:
 22556                           
 22557                           ; BSR set to: 0
 22558                           ;doprnt.c: 967: }
 22559                           ;doprnt.c: 970: if(flag & 0x02)
 22560                           
 22561                           ; BSR set to: 0
 22562  0027F0  A3B4               	btfss	i1sprintf@flag& (0+255),1,b
 22563  0027F2  D014               	goto	i1l1072
 22564                           
 22565                           ; BSR set to: 0
 22566                           ;doprnt.c: 971: ((*sp++ = (flag & 0x01 ? '-' : '+')));
 22567  0027F4  B1B4               	btfsc	i1sprintf@flag& (0+255),0,b
 22568  0027F6  D004               	goto	i1l1074
 22569                           
 22570                           ; BSR set to: 0
 22571  0027F8  0E00               	movlw	0
 22572  0027FA  6F90               	movwf	(i1_sprintf$2174+1)& (0+255),b
 22573  0027FC  0E2B               	movlw	43
 22574  0027FE  D003               	goto	L24
 22575  002800                     i1l1074:
 22576                           
 22577                           ; BSR set to: 0
 22578                           
 22579                           ; BSR set to: 0
 22580  002800  0E00               	movlw	0
 22581  002802  6F90               	movwf	(i1_sprintf$2174+1)& (0+255),b
 22582  002804  0E2D               	movlw	45
 22583  002806                     L24:
 22584  002806  6F8F               	movwf	i1_sprintf$2174& (0+255),b
 22585                           
 22586                           ; BSR set to: 0
 22587                           
 22588                           ; BSR set to: 0
 22589  002808  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22590  00280E  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22591  002814  0060  F23F  FFDF   	movff	i1_sprintf$2174,16351
 22592  00281A  D00A               	goto	i1l11676
 22593  00281C                     i1l1072:
 22594                           
 22595                           ; BSR set to: 0
 22596                           ;doprnt.c: 977: else if(flag & 0x01)
 22597  00281C  A1B4               	btfss	i1sprintf@flag& (0+255),0,b
 22598  00281E  D00A               	goto	i1l1078
 22599                           
 22600                           ; BSR set to: 0
 22601                           ;doprnt.c: 978: ((*sp++ = (' ')));
 22602  002820  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22603  002826  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22604  00282C  0E20               	movlw	32
 22605  00282E  6EDF               	movwf	16351,c
 22606  002830                     i1l11676:
 22607                           
 22608                           ; BSR set to: 0
 22609  002830  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22610  002832  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22611  002834                     i1l1078:
 22612                           
 22613                           ; BSR set to: 0
 22614                           ;doprnt.c: 980: }
 22615                           ;doprnt.c: 985: val = (unsigned long)fval;
 22616                           
 22617                           ; BSR set to: 0
 22618                           
 22619                           ; BSR set to: 0
 22620                           
 22621                           ; BSR set to: 0
 22622  002834  0060  F2B8  F018   	movff	i1sprintf@fval,i1___fttol@f1
 22623  00283A  0060  F2BC  F019   	movff	i1sprintf@fval+1,i1___fttol@f1+1
 22624  002840  0060  F2C0  F01A   	movff	i1sprintf@fval+2,i1___fttol@f1+2
 22625  002846  EC6B  F034         	call	i1___fttol	;wreg free
 22626  00284A  0060  F060  F0AA   	movff	?i1___fttol,i1sprintf@val
 22627  002850  0060  F064  F0AB   	movff	?i1___fttol+1,i1sprintf@val+1
 22628  002856  0060  F068  F0AC   	movff	?i1___fttol+2,i1sprintf@val+2
 22629  00285C  0060  F06C  F0AD   	movff	?i1___fttol+3,i1sprintf@val+3
 22630                           
 22631                           ;doprnt.c: 986: ((*sp++ = (val/dpowers[c] + '0')));
 22632  002862  0060  F2A8  F004   	movff	i1sprintf@val,i1___lldiv@dividend
 22633  002868  0060  F2AC  F005   	movff	i1sprintf@val+1,i1___lldiv@dividend+1
 22634  00286E  0060  F2B0  F006   	movff	i1sprintf@val+2,i1___lldiv@dividend+2
 22635  002874  0060  F2B4  F007   	movff	i1sprintf@val+3,i1___lldiv@dividend+3
 22636  00287A  0100               	movlb	0	; () banked
 22637  00287C  51B3               	movf	i1sprintf@c& (0+255),w,b
 22638  00287E  0D04               	mullw	4
 22639  002880  0ED9               	movlw	low _dpowers
 22640  002882  24F3               	addwf	16371,w,c
 22641  002884  6EF6               	movwf	16374,c
 22642  002886  0EFA               	movlw	high _dpowers
 22643  002888  20F4               	addwfc	16372,w,c
 22644  00288A  6EF7               	movwf	16375,c
 22645  00288C                     	if	1	;There are 3 active tblptr bytes
 22646  00288C  6AF8               	clrf	16376,c
 22647  00288E  0E00               	movlw	low (__mediumconst shr (0+16))
 22648  002890  22F8               	addwfc	16376,f,c
 22649  002892                     	endif
 22650  002892  0009               	tblrd		*+
 22651  002894  006F FFD4  F008    	movff	16373,i1___lldiv@divisor
 22652  00289A  0009               	tblrd		*+
 22653  00289C  006F FFD4  F009    	movff	16373,i1___lldiv@divisor+1
 22654  0028A2  0009               	tblrd		*+
 22655  0028A4  006F FFD4  F00A    	movff	16373,i1___lldiv@divisor+2
 22656  0028AA  000A               	tblrd		*-
 22657  0028AC  006F FFD4  F00B    	movff	16373,i1___lldiv@divisor+3
 22658  0028B2  EC04  F03D         	call	i1___lldiv	;wreg free
 22659  0028B6  5004               	movf	?i1___lldiv,w,c
 22660  0028B8  0F30               	addlw	48
 22661  0028BA  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22662  0028C0  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22663  0028C6  6EDF               	movwf	16351,c
 22664  0028C8  0100               	movlb	0	; () banked
 22665  0028CA  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22666  0028CC  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22667                           
 22668                           ; BSR set to: 0
 22669                           ;doprnt.c: 987: val %= dpowers[c];
 22670  0028CE  0060  F2A8  F011   	movff	i1sprintf@val,i1___llmod@dividend
 22671  0028D4  0060  F2AC  F012   	movff	i1sprintf@val+1,i1___llmod@dividend+1
 22672  0028DA  0060  F2B0  F013   	movff	i1sprintf@val+2,i1___llmod@dividend+2
 22673  0028E0  0060  F2B4  F014   	movff	i1sprintf@val+3,i1___llmod@dividend+3
 22674  0028E6  51B3               	movf	i1sprintf@c& (0+255),w,b
 22675  0028E8  0D04               	mullw	4
 22676  0028EA  0ED9               	movlw	low _dpowers
 22677  0028EC  24F3               	addwf	16371,w,c
 22678  0028EE  6EF6               	movwf	16374,c
 22679  0028F0  0EFA               	movlw	high _dpowers
 22680  0028F2  20F4               	addwfc	16372,w,c
 22681  0028F4  6EF7               	movwf	16375,c
 22682  0028F6                     	if	1	;There are 3 active tblptr bytes
 22683  0028F6  6AF8               	clrf	16376,c
 22684  0028F8  0E00               	movlw	low (__mediumconst shr (0+16))
 22685  0028FA  22F8               	addwfc	16376,f,c
 22686  0028FC                     	endif
 22687  0028FC  0009               	tblrd		*+
 22688  0028FE  006F FFD4  F015    	movff	16373,i1___llmod@divisor
 22689  002904  0009               	tblrd		*+
 22690  002906  006F FFD4  F016    	movff	16373,i1___llmod@divisor+1
 22691  00290C  0009               	tblrd		*+
 22692  00290E  006F FFD4  F017    	movff	16373,i1___llmod@divisor+2
 22693  002914  000A               	tblrd		*-
 22694  002916  006F FFD4  F018    	movff	16373,i1___llmod@divisor+3
 22695  00291C  EC70  F03F         	call	i1___llmod	;wreg free
 22696  002920  0060  F044  F0AA   	movff	?i1___llmod,i1sprintf@val
 22697  002926  0060  F048  F0AB   	movff	?i1___llmod+1,i1sprintf@val+1
 22698  00292C  0060  F04C  F0AC   	movff	?i1___llmod+2,i1sprintf@val+2
 22699  002932  0060  F050  F0AD   	movff	?i1___llmod+3,i1sprintf@val+3
 22700                           
 22701                           ;doprnt.c: 990: if(prec || flag & 0x800)
 22702  002938  0100               	movlb	0	; () banked
 22703  00293A  51B1               	movf	i1sprintf@prec& (0+255),w,b
 22704  00293C  11B2               	iorwf	(i1sprintf@prec+1)& (0+255),w,b
 22705  00293E  A4D8               	btfss	16344,2,c
 22706  002940  D002               	goto	i1u1547_20
 22707                           
 22708                           ; BSR set to: 0
 22709  002942  A7B5               	btfss	(i1sprintf@flag+1)& (0+255),3,b
 22710  002944  D0A2               	goto	i1u1551_20
 22711  002946                     i1u1547_20:
 22712                           
 22713                           ; BSR set to: 0
 22714                           ;doprnt.c: 994: {
 22715                           ;doprnt.c: 995: ((*sp++ = ('.')));
 22716                           
 22717                           ; BSR set to: 0
 22718  002946  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22719  00294C  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22720  002952  0E2E               	movlw	46
 22721  002954  6EDF               	movwf	16351,c
 22722                           
 22723                           ; BSR set to: 0
 22724  002956  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22725  002958  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22726                           
 22727                           ; BSR set to: 0
 22728                           ;doprnt.c: 996: prec -= c;
 22729  00295A  51B3               	movf	i1sprintf@c& (0+255),w,b
 22730  00295C  5FB1               	subwf	i1sprintf@prec& (0+255),f,b
 22731  00295E  0E00               	movlw	0
 22732  002960  BFB3               	btfsc	i1sprintf@c& (0+255),7,b
 22733  002962  0EFF               	movlw	255
 22734  002964  5BB2               	subwfb	(i1sprintf@prec+1)& (0+255),f,b
 22735                           
 22736                           ;doprnt.c: 997: while(c--) {
 22737  002966  D07A               	goto	i1l1082
 22738  002968                     i1l1083:
 22739                           
 22740                           ; BSR set to: 0
 22741                           ;doprnt.c: 1002: if(flag & 0x200 && val == 0) {
 22742  002968  A3B5               	btfss	(i1sprintf@flag+1)& (0+255),1,b
 22743  00296A  D00E               	goto	i1l1084
 22744                           
 22745                           ; BSR set to: 0
 22746  00296C  51AA               	movf	i1sprintf@val& (0+255),w,b
 22747  00296E  11AB               	iorwf	(i1sprintf@val+1)& (0+255),w,b
 22748  002970  11AC               	iorwf	(i1sprintf@val+2)& (0+255),w,b
 22749  002972  11AD               	iorwf	(i1sprintf@val+3)& (0+255),w,b
 22750  002974  A4D8               	btfss	16344,2,c
 22751  002976  D008               	goto	i1l1084
 22752                           
 22753                           ; BSR set to: 0
 22754                           ;doprnt.c: 1003: prec = c = 0;
 22755  002978  0E00               	movlw	0
 22756  00297A  6FB3               	movwf	i1sprintf@c& (0+255),b
 22757  00297C  51B3               	movf	i1sprintf@c& (0+255),w,b
 22758  00297E  6FB1               	movwf	i1sprintf@prec& (0+255),b
 22759  002980  6BB2               	clrf	(i1sprintf@prec+1)& (0+255),b
 22760  002982  BFB1               	btfsc	i1sprintf@prec& (0+255),7,b
 22761  002984  07B2               	decf	(i1sprintf@prec+1)& (0+255),f,b
 22762                           
 22763                           ;doprnt.c: 1004: break;
 22764  002986  D07D               	goto	i1l1086
 22765  002988                     i1l1084:
 22766                           
 22767                           ; BSR set to: 0
 22768                           ;doprnt.c: 1005: }
 22769                           ;doprnt.c: 1007: ((*sp++ = ('0' + (val/dpowers[c]))));
 22770                           
 22771                           ; BSR set to: 0
 22772  002988  0060  F2A8  F004   	movff	i1sprintf@val,i1___lldiv@dividend
 22773  00298E  0060  F2AC  F005   	movff	i1sprintf@val+1,i1___lldiv@dividend+1
 22774  002994  0060  F2B0  F006   	movff	i1sprintf@val+2,i1___lldiv@dividend+2
 22775  00299A  0060  F2B4  F007   	movff	i1sprintf@val+3,i1___lldiv@dividend+3
 22776  0029A0  51B3               	movf	i1sprintf@c& (0+255),w,b
 22777  0029A2  0D04               	mullw	4
 22778  0029A4  0ED9               	movlw	low _dpowers
 22779  0029A6  24F3               	addwf	16371,w,c
 22780  0029A8  6EF6               	movwf	16374,c
 22781  0029AA  0EFA               	movlw	high _dpowers
 22782  0029AC  20F4               	addwfc	16372,w,c
 22783  0029AE  6EF7               	movwf	16375,c
 22784  0029B0                     	if	1	;There are 3 active tblptr bytes
 22785  0029B0  6AF8               	clrf	16376,c
 22786  0029B2  0E00               	movlw	low (__mediumconst shr (0+16))
 22787  0029B4  22F8               	addwfc	16376,f,c
 22788  0029B6                     	endif
 22789  0029B6  0009               	tblrd		*+
 22790  0029B8  006F FFD4  F008    	movff	16373,i1___lldiv@divisor
 22791  0029BE  0009               	tblrd		*+
 22792  0029C0  006F FFD4  F009    	movff	16373,i1___lldiv@divisor+1
 22793  0029C6  0009               	tblrd		*+
 22794  0029C8  006F FFD4  F00A    	movff	16373,i1___lldiv@divisor+2
 22795  0029CE  000A               	tblrd		*-
 22796  0029D0  006F FFD4  F00B    	movff	16373,i1___lldiv@divisor+3
 22797  0029D6  EC04  F03D         	call	i1___lldiv	;wreg free
 22798  0029DA  5004               	movf	?i1___lldiv,w,c
 22799  0029DC  0F30               	addlw	48
 22800  0029DE  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22801  0029E4  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22802  0029EA  6EDF               	movwf	16351,c
 22803  0029EC  0100               	movlb	0	; () banked
 22804  0029EE  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22805  0029F0  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22806                           
 22807                           ; BSR set to: 0
 22808                           ;doprnt.c: 1008: val %= dpowers[c];
 22809  0029F2  0060  F2A8  F011   	movff	i1sprintf@val,i1___llmod@dividend
 22810  0029F8  0060  F2AC  F012   	movff	i1sprintf@val+1,i1___llmod@dividend+1
 22811  0029FE  0060  F2B0  F013   	movff	i1sprintf@val+2,i1___llmod@dividend+2
 22812  002A04  0060  F2B4  F014   	movff	i1sprintf@val+3,i1___llmod@dividend+3
 22813  002A0A  51B3               	movf	i1sprintf@c& (0+255),w,b
 22814  002A0C  0D04               	mullw	4
 22815  002A0E  0ED9               	movlw	low _dpowers
 22816  002A10  24F3               	addwf	16371,w,c
 22817  002A12  6EF6               	movwf	16374,c
 22818  002A14  0EFA               	movlw	high _dpowers
 22819  002A16  20F4               	addwfc	16372,w,c
 22820  002A18  6EF7               	movwf	16375,c
 22821  002A1A                     	if	1	;There are 3 active tblptr bytes
 22822  002A1A  6AF8               	clrf	16376,c
 22823  002A1C  0E00               	movlw	low (__mediumconst shr (0+16))
 22824  002A1E  22F8               	addwfc	16376,f,c
 22825  002A20                     	endif
 22826  002A20  0009               	tblrd		*+
 22827  002A22  006F FFD4  F015    	movff	16373,i1___llmod@divisor
 22828  002A28  0009               	tblrd		*+
 22829  002A2A  006F FFD4  F016    	movff	16373,i1___llmod@divisor+1
 22830  002A30  0009               	tblrd		*+
 22831  002A32  006F FFD4  F017    	movff	16373,i1___llmod@divisor+2
 22832  002A38  000A               	tblrd		*-
 22833  002A3A  006F FFD4  F018    	movff	16373,i1___llmod@divisor+3
 22834  002A40  EC70  F03F         	call	i1___llmod	;wreg free
 22835  002A44  0060  F044  F0AA   	movff	?i1___llmod,i1sprintf@val
 22836  002A4A  0060  F048  F0AB   	movff	?i1___llmod+1,i1sprintf@val+1
 22837  002A50  0060  F04C  F0AC   	movff	?i1___llmod+2,i1sprintf@val+2
 22838  002A56  0060  F050  F0AD   	movff	?i1___llmod+3,i1sprintf@val+3
 22839  002A5C                     i1l1082:
 22840  002A5C  0100               	movlb	0	; () banked
 22841  002A5E  07B3               	decf	i1sprintf@c& (0+255),f,b
 22842  002A60  29B3               	incf	i1sprintf@c& (0+255),w,b
 22843  002A62  B4D8               	btfsc	16344,2,c
 22844  002A64  D00E               	goto	i1l1086
 22845  002A66  D780               	goto	i1l1083
 22846  002A68                     
 22847                           ; BSR set to: 0
 22848                           ;doprnt.c: 1012: ((*sp++ = ('0')));
 22849                           
 22850                           ; BSR set to: 0
 22851  002A68  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22852  002A6E  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22853  002A74  0E30               	movlw	48
 22854  002A76  6EDF               	movwf	16351,c
 22855                           
 22856                           ; BSR set to: 0
 22857  002A78  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22858  002A7A  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22859                           
 22860                           ; BSR set to: 0
 22861                           ;doprnt.c: 1013: prec--;
 22862  002A7C  07B1               	decf	i1sprintf@prec& (0+255),f,b
 22863  002A7E  A0D8               	btfss	16344,0,c
 22864  002A80  07B2               	decf	(i1sprintf@prec+1)& (0+255),f,b
 22865  002A82                     i1l1086:
 22866                           
 22867                           ; BSR set to: 0
 22868                           
 22869                           ; BSR set to: 0
 22870  002A82  51B1               	movf	i1sprintf@prec& (0+255),w,b
 22871  002A84  11B2               	iorwf	(i1sprintf@prec+1)& (0+255),w,b
 22872  002A86  A4D8               	btfss	16344,2,c
 22873  002A88  D7EF               	goto	i1l1087
 22874  002A8A                     i1u1551_20:
 22875                           
 22876                           ; BSR set to: 0
 22877                           ;doprnt.c: 1014: }
 22878                           ;doprnt.c: 1015: }
 22879                           ;doprnt.c: 1017: if(flag & 0x20)
 22880                           
 22881                           ; BSR set to: 0
 22882  002A8A  ABB4               	btfss	i1sprintf@flag& (0+255),5,b
 22883  002A8C  D008               	goto	i1l1089
 22884                           
 22885                           ; BSR set to: 0
 22886                           ;doprnt.c: 1018: ((*sp++ = ('E')));
 22887  002A8E  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22888  002A94  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22889  002A9A  0E45               	movlw	69
 22890  002A9C  D007               	goto	L25
 22891  002A9E                     i1l1089:
 22892                           
 22893                           ; BSR set to: 0
 22894                           ;doprnt.c: 1019: else
 22895                           ;doprnt.c: 1021: ((*sp++ = ('e')));
 22896                           
 22897                           ; BSR set to: 0
 22898  002A9E  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22899  002AA4  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22900  002AAA  0E65               	movlw	101
 22901  002AAC                     L25:
 22902  002AAC  6EDF               	movwf	16351,c
 22903                           
 22904                           ; BSR set to: 0
 22905  002AAE  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22906  002AB0  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22907                           
 22908                           ; BSR set to: 0
 22909                           ;doprnt.c: 1022: if(exp < 0) {
 22910                           
 22911                           ; BSR set to: 0
 22912  002AB2  AFA7               	btfss	(i1sprintf@exp+1)& (0+255),7,b
 22913  002AB4  D00C               	goto	i1l1091
 22914                           
 22915                           ; BSR set to: 0
 22916                           ;doprnt.c: 1023: exp = -exp;
 22917  002AB6  6DA6               	negf	i1sprintf@exp& (0+255),b
 22918  002AB8  1FA7               	comf	(i1sprintf@exp+1)& (0+255),f,b
 22919  002ABA  B0D8               	btfsc	16344,0,c
 22920  002ABC  2BA7               	incf	(i1sprintf@exp+1)& (0+255),f,b
 22921                           
 22922                           ; BSR set to: 0
 22923                           ;doprnt.c: 1024: ((*sp++ = ('-')));
 22924  002ABE  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22925  002AC4  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22926  002ACA  0E2D               	movlw	45
 22927  002ACC  D007               	goto	L26
 22928  002ACE                     i1l1091:
 22929                           
 22930                           ; BSR set to: 0
 22931                           ;doprnt.c: 1026: ((*sp++ = ('+')));
 22932                           
 22933                           ; BSR set to: 0
 22934  002ACE  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22935  002AD4  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22936  002ADA  0E2B               	movlw	43
 22937  002ADC                     L26:
 22938  002ADC  6EDF               	movwf	16351,c
 22939                           
 22940                           ; BSR set to: 0
 22941  002ADE  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22942  002AE0  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22943                           
 22944                           ; BSR set to: 0
 22945                           ;doprnt.c: 1039: ((*sp++ = (exp / 10 + '0')));
 22946                           
 22947                           ; BSR set to: 0
 22948  002AE2  0060  F298  F00A   	movff	i1sprintf@exp,i1___awdiv@dividend
 22949  002AE8  0060  F29C  F00B   	movff	i1sprintf@exp+1,i1___awdiv@dividend+1
 22950  002AEE  0E00               	movlw	0
 22951  002AF0  6E0D               	movwf	i1___awdiv@divisor+1,c
 22952  002AF2  0E0A               	movlw	10
 22953  002AF4  6E0C               	movwf	i1___awdiv@divisor,c
 22954  002AF6  EC49  F03D         	call	i1___awdiv	;wreg free
 22955  002AFA  500A               	movf	?i1___awdiv,w,c
 22956  002AFC  0F30               	addlw	48
 22957  002AFE  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22958  002B04  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22959  002B0A  6EDF               	movwf	16351,c
 22960  002B0C  0100               	movlb	0	; () banked
 22961  002B0E  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22962  002B10  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22963                           
 22964                           ; BSR set to: 0
 22965                           ;doprnt.c: 1040: ((*sp++ = (exp % 10 + '0')));
 22966  002B12  0060  F298  F004   	movff	i1sprintf@exp,i1___awmod@dividend
 22967  002B18  0060  F29C  F005   	movff	i1sprintf@exp+1,i1___awmod@dividend+1
 22968  002B1E  0E00               	movlw	0
 22969  002B20  6E07               	movwf	i1___awmod@divisor+1,c
 22970  002B22  0E0A               	movlw	10
 22971  002B24  6E06               	movwf	i1___awmod@divisor,c
 22972  002B26  ECFE  F03E         	call	i1___awmod	;wreg free
 22973  002B2A  5004               	movf	?i1___awmod,w,c
 22974  002B2C  0F30               	addlw	48
 22975  002B2E  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22976  002B34  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22977  002B3A  6EDF               	movwf	16351,c
 22978  002B3C  0100               	movlb	0	; () banked
 22979  002B3E  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22980  002B40  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22981                           
 22982                           ; BSR set to: 0
 22983                           ;doprnt.c: 1042: if((flag & 0x08) && width > 0)
 22984  002B42  B7B4               	btfsc	i1sprintf@flag& (0+255),3,b
 22985                           
 22986                           ; BSR set to: 0
 22987  002B44  BFA9               	btfsc	(i1sprintf@width+1)& (0+255),7,b
 22988  002B46  EFF1  F01C         	goto	i1u1635_20
 22989  002B4A  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 22990  002B4C  E104               	bnz	i1l11748
 22991  002B4E  05A8               	decf	i1sprintf@width& (0+255),w,b
 22992  002B50  A0D8               	btfss	16344,0,c
 22993  002B52  EFF1  F01C         	goto	i1u1635_20
 22994  002B56                     i1u1555_20:
 22995  002B56                     i1l11748:
 22996                           
 22997                           ; BSR set to: 0
 22998                           ;doprnt.c: 1044: ((*sp++ = (' ')));
 22999  002B56  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23000  002B5C  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23001  002B62  0E20               	movlw	32
 23002  002B64  6EDF               	movwf	16351,c
 23003                           
 23004                           ; BSR set to: 0
 23005  002B66  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 23006  002B68  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 23007                           
 23008                           ; BSR set to: 0
 23009                           ;doprnt.c: 1045: while(--width);
 23010  002B6A  07A8               	decf	i1sprintf@width& (0+255),f,b
 23011  002B6C  A0D8               	btfss	16344,0,c
 23012  002B6E  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 23013  002B70  51A8               	movf	i1sprintf@width& (0+255),w,b
 23014  002B72  11A9               	iorwf	(i1sprintf@width+1)& (0+255),w,b
 23015  002B74  B4D8               	btfsc	16344,2,c
 23016  002B76  EFF1  F01C         	goto	i1u1635_20
 23017  002B7A  D7ED               	goto	i1u1555_20
 23018  002B7C                     i1l1031:
 23019                           
 23020                           ; BSR set to: 0
 23021                           ;doprnt.c: 1048: }
 23022                           ;doprnt.c: 1087: if(flag & 0x200) {
 23023  002B7C  A3B5               	btfss	(i1sprintf@flag+1)& (0+255),1,b
 23024  002B7E  D12A               	goto	i1l1096
 23025                           
 23026                           ; BSR set to: 0
 23027                           ;doprnt.c: 1088: if(exp < 0)
 23028  002B80  AFA7               	btfss	(i1sprintf@exp+1)& (0+255),7,b
 23029  002B82  D00A               	goto	i1l1097
 23030                           
 23031                           ; BSR set to: 0
 23032                           ;doprnt.c: 1089: prec -= (exp+1);
 23033  002B84  0E01               	movlw	1
 23034  002B86  25A6               	addwf	i1sprintf@exp& (0+255),w,b
 23035  002B88  6F83               	movwf	??i1_sprintf& (0+255),b
 23036  002B8A  0E00               	movlw	0
 23037  002B8C  21A7               	addwfc	(i1sprintf@exp+1)& (0+255),w,b
 23038  002B8E  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 23039  002B90  5183               	movf	??i1_sprintf& (0+255),w,b
 23040  002B92  5FB1               	subwf	i1sprintf@prec& (0+255),f,b
 23041  002B94  5184               	movf	(??i1_sprintf+1)& (0+255),w,b
 23042  002B96  5BB2               	subwfb	(i1sprintf@prec+1)& (0+255),f,b
 23043  002B98                     i1l1097:
 23044                           
 23045                           ; BSR set to: 0
 23046                           ;doprnt.c: 1091: val = (unsigned long)fval;
 23047                           
 23048                           ; BSR set to: 0
 23049  002B98  0060  F2B8  F018   	movff	i1sprintf@fval,i1___fttol@f1
 23050  002B9E  0060  F2BC  F019   	movff	i1sprintf@fval+1,i1___fttol@f1+1
 23051  002BA4  0060  F2C0  F01A   	movff	i1sprintf@fval+2,i1___fttol@f1+2
 23052  002BAA  EC6B  F034         	call	i1___fttol	;wreg free
 23053  002BAE  0060  F060  F0AA   	movff	?i1___fttol,i1sprintf@val
 23054  002BB4  0060  F064  F0AB   	movff	?i1___fttol+1,i1sprintf@val+1
 23055  002BBA  0060  F068  F0AC   	movff	?i1___fttol+2,i1sprintf@val+2
 23056  002BC0  0060  F06C  F0AD   	movff	?i1___fttol+3,i1sprintf@val+3
 23057                           
 23058                           ;doprnt.c: 1092: for(c = 0 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 23059  002BC6  0E00               	movlw	0
 23060  002BC8  0100               	movlb	0	; () banked
 23061  002BCA  6FB3               	movwf	i1sprintf@c& (0+255),b
 23062  002BCC                     i1l11762:
 23063                           
 23064                           ; BSR set to: 0
 23065  002BCC  0E0A               	movlw	10
 23066  002BCE  19B3               	xorwf	i1sprintf@c& (0+255),w,b
 23067  002BD0  B4D8               	btfsc	16344,2,c
 23068  002BD2  D01B               	goto	i1u1561_20
 23069                           
 23070                           ; BSR set to: 0
 23071                           ;doprnt.c: 1093: if(val < dpowers[c])
 23072                           
 23073                           ; BSR set to: 0
 23074                           
 23075                           ; BSR set to: 0
 23076  002BD4  51B3               	movf	i1sprintf@c& (0+255),w,b
 23077  002BD6  0D04               	mullw	4
 23078  002BD8  0ED9               	movlw	low _dpowers
 23079  002BDA  24F3               	addwf	16371,w,c
 23080  002BDC  6EF6               	movwf	16374,c
 23081  002BDE  0EFA               	movlw	high _dpowers
 23082  002BE0  20F4               	addwfc	16372,w,c
 23083  002BE2  6EF7               	movwf	16375,c
 23084  002BE4                     	if	1	;There are 3 active tblptr bytes
 23085  002BE4  6AF8               	clrf	16376,c
 23086  002BE6  0E00               	movlw	low (__mediumconst shr (0+16))
 23087  002BE8  22F8               	addwfc	16376,f,c
 23088  002BEA                     	endif
 23089  002BEA  0009               	tblrd		*+
 23090  002BEC  50F5               	movf	16373,w,c
 23091  002BEE  5DAA               	subwf	i1sprintf@val& (0+255),w,b
 23092  002BF0  0009               	tblrd		*+
 23093  002BF2  50F5               	movf	16373,w,c
 23094  002BF4  59AB               	subwfb	(i1sprintf@val+1)& (0+255),w,b
 23095  002BF6  0009               	tblrd		*+
 23096  002BF8  50F5               	movf	16373,w,c
 23097  002BFA  59AC               	subwfb	(i1sprintf@val+2)& (0+255),w,b
 23098  002BFC  0009               	tblrd		*+
 23099  002BFE  50F5               	movf	16373,w,c
 23100  002C00  59AD               	subwfb	(i1sprintf@val+3)& (0+255),w,b
 23101  002C02  A0D8               	btfss	16344,0,c
 23102  002C04  D002               	goto	i1u1561_20
 23103                           
 23104                           ; BSR set to: 0
 23105                           
 23106                           ; BSR set to: 0
 23107                           
 23108                           ; BSR set to: 0
 23109                           ;doprnt.c: 1094: break;
 23110  002C06  2BB3               	incf	i1sprintf@c& (0+255),f,b
 23111  002C08  D7E1               	goto	i1l11762
 23112  002C0A                     i1u1561_20:
 23113                           
 23114                           ; BSR set to: 0
 23115                           ;doprnt.c: 1095: prec -= c;
 23116                           
 23117                           ; BSR set to: 0
 23118  002C0A  51B3               	movf	i1sprintf@c& (0+255),w,b
 23119  002C0C  5FB1               	subwf	i1sprintf@prec& (0+255),f,b
 23120  002C0E  0E00               	movlw	0
 23121  002C10  BFB3               	btfsc	i1sprintf@c& (0+255),7,b
 23122  002C12  0EFF               	movlw	255
 23123  002C14  5BB2               	subwfb	(i1sprintf@prec+1)& (0+255),f,b
 23124                           
 23125                           ;doprnt.c: 1096: if(prec <= 12)
 23126  002C16  BFB2               	btfsc	(i1sprintf@prec+1)& (0+255),7,b
 23127  002C18  D006               	goto	i1u1562_20
 23128  002C1A  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 23129  002C1C  E124               	bnz	i1l1101
 23130  002C1E  0E0D               	movlw	13
 23131  002C20  5DB1               	subwf	i1sprintf@prec& (0+255),w,b
 23132  002C22  B0D8               	btfsc	16344,0,c
 23133  002C24  D020               	goto	i1l1101
 23134  002C26                     i1u1562_20:
 23135                           
 23136                           ; BSR set to: 0
 23137                           ;doprnt.c: 1097: fval += fround(prec);
 23138  002C26  0060  F2B8  F04C   	movff	i1sprintf@fval,i1___ftadd@f1
 23139  002C2C  0060  F2BC  F04D   	movff	i1sprintf@fval+1,i1___ftadd@f1+1
 23140  002C32  0060  F2C0  F04E   	movff	i1sprintf@fval+2,i1___ftadd@f1+2
 23141  002C38  51B1               	movf	i1sprintf@prec& (0+255),w,b
 23142  002C3A  EC60  F025         	call	i1_fround
 23143  002C3E  0060  F108  F04F   	movff	?i1_fround,i1___ftadd@f2
 23144  002C44  0060  F10C  F050   	movff	?i1_fround+1,i1___ftadd@f2+1
 23145  002C4A  0060  F110  F051   	movff	?i1_fround+2,i1___ftadd@f2+2
 23146  002C50  ECAE  F02B         	call	i1___ftadd	;wreg free
 23147  002C54  0060  F130  F0AE   	movff	?i1___ftadd,i1sprintf@fval
 23148  002C5A  0060  F134  F0AF   	movff	?i1___ftadd+1,i1sprintf@fval+1
 23149  002C60  0060  F138  F0B0   	movff	?i1___ftadd+2,i1sprintf@fval+2
 23150  002C66                     i1l1101:
 23151                           
 23152                           ;doprnt.c: 1100: {
 23153                           ;doprnt.c: 1101: double temp;
 23154                           ;doprnt.c: 1102: temp = scale(prec);
 23155  002C66  0100               	movlb	0	; () banked
 23156  002C68  51B1               	movf	i1sprintf@prec& (0+255),w,b
 23157  002C6A  EC93  F01F         	call	i1_scale
 23158  002C6E  0060  F108  F099   	movff	?i1_scale,i1sprintf@temp
 23159  002C74  0060  F10C  F09A   	movff	?i1_scale+1,i1sprintf@temp+1
 23160  002C7A  0060  F110  F09B   	movff	?i1_scale+2,i1sprintf@temp+2
 23161                           
 23162                           ;doprnt.c: 1103: temp *= fval - (double)val;
 23163  002C80  0060  F264  F033   	movff	i1sprintf@temp,i1___ftmul@f1
 23164  002C86  0060  F268  F034   	movff	i1sprintf@temp+1,i1___ftmul@f1+1
 23165  002C8C  0060  F26C  F035   	movff	i1sprintf@temp+2,i1___ftmul@f1+2
 23166  002C92  0060  F2B8  F04F   	movff	i1sprintf@fval,i1___ftadd@f2
 23167  002C98  0060  F2BC  F050   	movff	i1sprintf@fval+1,i1___ftadd@f2+1
 23168  002C9E  0060  F2C0  F051   	movff	i1sprintf@fval+2,i1___ftadd@f2+2
 23169  002CA4  0060  F2A8  F027   	movff	i1sprintf@val,i1___lltoft@c
 23170  002CAA  0060  F2AC  F028   	movff	i1sprintf@val+1,i1___lltoft@c+1
 23171  002CB0  0060  F2B0  F029   	movff	i1sprintf@val+2,i1___lltoft@c+2
 23172  002CB6  0060  F2B4  F02A   	movff	i1sprintf@val+3,i1___lltoft@c+3
 23173  002CBC  ECDD  F03F         	call	i1___lltoft	;wreg free
 23174  002CC0  0060  F09C  F030   	movff	?i1___lltoft,i1___ftneg@f1
 23175  002CC6  0060  F0A0  F031   	movff	?i1___lltoft+1,i1___ftneg@f1+1
 23176  002CCC  0060  F0A4  F032   	movff	?i1___lltoft+2,i1___ftneg@f1+2
 23177  002CD2  EC03  F045         	call	i1___ftneg	;wreg free
 23178  002CD6  0060  F0C0  F04C   	movff	?i1___ftneg,i1___ftadd@f1
 23179  002CDC  0060  F0C4  F04D   	movff	?i1___ftneg+1,i1___ftadd@f1+1
 23180  002CE2  0060  F0C8  F04E   	movff	?i1___ftneg+2,i1___ftadd@f1+2
 23181  002CE8  ECAE  F02B         	call	i1___ftadd	;wreg free
 23182  002CEC  0060  F130  F036   	movff	?i1___ftadd,i1___ftmul@f2
 23183  002CF2  0060  F134  F037   	movff	?i1___ftadd+1,i1___ftmul@f2+1
 23184  002CF8  0060  F138  F038   	movff	?i1___ftadd+2,i1___ftmul@f2+2
 23185  002CFE  ECE0  F032         	call	i1___ftmul	;wreg free
 23186  002D02  0060  F0CC  F099   	movff	?i1___ftmul,i1sprintf@temp
 23187  002D08  0060  F0D0  F09A   	movff	?i1___ftmul+1,i1sprintf@temp+1
 23188  002D0E  0060  F0D4  F09B   	movff	?i1___ftmul+2,i1sprintf@temp+2
 23189                           
 23190                           ;doprnt.c: 1104: val = (unsigned long)temp;
 23191  002D14  0060  F264  F018   	movff	i1sprintf@temp,i1___fttol@f1
 23192  002D1A  0060  F268  F019   	movff	i1sprintf@temp+1,i1___fttol@f1+1
 23193  002D20  0060  F26C  F01A   	movff	i1sprintf@temp+2,i1___fttol@f1+2
 23194  002D26  EC6B  F034         	call	i1___fttol	;wreg free
 23195  002D2A  0060  F060  F0AA   	movff	?i1___fttol,i1sprintf@val
 23196  002D30  0060  F064  F0AB   	movff	?i1___fttol+1,i1sprintf@val+1
 23197  002D36  0060  F068  F0AC   	movff	?i1___fttol+2,i1sprintf@val+2
 23198  002D3C  0060  F06C  F0AD   	movff	?i1___fttol+3,i1sprintf@val+3
 23199                           
 23200                           ;doprnt.c: 1105: }
 23201                           ;doprnt.c: 1106: while(prec && val % 10 == 0) {
 23202  002D42  D026               	goto	i1l1102
 23203  002D44                     
 23204                           ;doprnt.c: 1107: val /= 10;
 23205  002D44  0060  F2A8  F004   	movff	i1sprintf@val,i1___lldiv@dividend
 23206  002D4A  0060  F2AC  F005   	movff	i1sprintf@val+1,i1___lldiv@dividend+1
 23207  002D50  0060  F2B0  F006   	movff	i1sprintf@val+2,i1___lldiv@dividend+2
 23208  002D56  0060  F2B4  F007   	movff	i1sprintf@val+3,i1___lldiv@dividend+3
 23209  002D5C  0E0A               	movlw	10
 23210  002D5E  6E08               	movwf	i1___lldiv@divisor,c
 23211  002D60  0E00               	movlw	0
 23212  002D62  6E09               	movwf	i1___lldiv@divisor+1,c
 23213  002D64  0E00               	movlw	0
 23214  002D66  6E0A               	movwf	i1___lldiv@divisor+2,c
 23215  002D68  0E00               	movlw	0
 23216  002D6A  6E0B               	movwf	i1___lldiv@divisor+3,c
 23217  002D6C  EC04  F03D         	call	i1___lldiv	;wreg free
 23218  002D70  0060  F010  F0AA   	movff	?i1___lldiv,i1sprintf@val
 23219  002D76  0060  F014  F0AB   	movff	?i1___lldiv+1,i1sprintf@val+1
 23220  002D7C  0060  F018  F0AC   	movff	?i1___lldiv+2,i1sprintf@val+2
 23221  002D82  0060  F01C  F0AD   	movff	?i1___lldiv+3,i1sprintf@val+3
 23222                           
 23223                           ;doprnt.c: 1108: prec--;
 23224  002D88  0100               	movlb	0	; () banked
 23225  002D8A  07B1               	decf	i1sprintf@prec& (0+255),f,b
 23226  002D8C  A0D8               	btfss	16344,0,c
 23227  002D8E  07B2               	decf	(i1sprintf@prec+1)& (0+255),f,b
 23228  002D90                     i1l1102:
 23229                           
 23230                           ; BSR set to: 0
 23231  002D90  0100               	movlb	0	; () banked
 23232  002D92  51B1               	movf	i1sprintf@prec& (0+255),w,b
 23233  002D94  11B2               	iorwf	(i1sprintf@prec+1)& (0+255),w,b
 23234  002D96  B4D8               	btfsc	16344,2,c
 23235  002D98  D046               	goto	i1l1108
 23236                           
 23237                           ; BSR set to: 0
 23238  002D9A  0060  F2A8  F011   	movff	i1sprintf@val,i1___llmod@dividend
 23239  002DA0  0060  F2AC  F012   	movff	i1sprintf@val+1,i1___llmod@dividend+1
 23240  002DA6  0060  F2B0  F013   	movff	i1sprintf@val+2,i1___llmod@dividend+2
 23241  002DAC  0060  F2B4  F014   	movff	i1sprintf@val+3,i1___llmod@dividend+3
 23242  002DB2  0E0A               	movlw	10
 23243  002DB4  6E15               	movwf	i1___llmod@divisor,c
 23244  002DB6  0E00               	movlw	0
 23245  002DB8  6E16               	movwf	i1___llmod@divisor+1,c
 23246  002DBA  0E00               	movlw	0
 23247  002DBC  6E17               	movwf	i1___llmod@divisor+2,c
 23248  002DBE  0E00               	movlw	0
 23249  002DC0  6E18               	movwf	i1___llmod@divisor+3,c
 23250  002DC2  EC70  F03F         	call	i1___llmod	;wreg free
 23251  002DC6  5011               	movf	?i1___llmod,w,c
 23252  002DC8  1012               	iorwf	?i1___llmod+1,w,c
 23253  002DCA  1013               	iorwf	?i1___llmod+2,w,c
 23254  002DCC  1014               	iorwf	?i1___llmod+3,w,c
 23255  002DCE  A4D8               	btfss	16344,2,c
 23256  002DD0  D02A               	goto	i1l1108
 23257  002DD2  D7B8               	goto	i1l1103
 23258  002DD4                     i1l1096:
 23259                           
 23260                           ;doprnt.c: 1112: if(prec <= 12)
 23261  002DD4  0100               	movlb	0	; () banked
 23262  002DD6  BFB2               	btfsc	(i1sprintf@prec+1)& (0+255),7,b
 23263  002DD8  D006               	goto	i1u1565_20
 23264  002DDA  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 23265  002DDC  E124               	bnz	i1l11794
 23266  002DDE  0E0D               	movlw	13
 23267  002DE0  5DB1               	subwf	i1sprintf@prec& (0+255),w,b
 23268  002DE2  B0D8               	btfsc	16344,0,c
 23269  002DE4  D020               	goto	i1l1108
 23270  002DE6                     i1u1565_20:
 23271                           
 23272                           ; BSR set to: 0
 23273                           ;doprnt.c: 1113: fval += fround(prec);
 23274  002DE6  0060  F2B8  F04C   	movff	i1sprintf@fval,i1___ftadd@f1
 23275  002DEC  0060  F2BC  F04D   	movff	i1sprintf@fval+1,i1___ftadd@f1+1
 23276  002DF2  0060  F2C0  F04E   	movff	i1sprintf@fval+2,i1___ftadd@f1+2
 23277  002DF8  51B1               	movf	i1sprintf@prec& (0+255),w,b
 23278  002DFA  EC60  F025         	call	i1_fround
 23279  002DFE  0060  F108  F04F   	movff	?i1_fround,i1___ftadd@f2
 23280  002E04  0060  F10C  F050   	movff	?i1_fround+1,i1___ftadd@f2+1
 23281  002E0A  0060  F110  F051   	movff	?i1_fround+2,i1___ftadd@f2+2
 23282  002E10  ECAE  F02B         	call	i1___ftadd	;wreg free
 23283  002E14  0060  F130  F0AE   	movff	?i1___ftadd,i1sprintf@fval
 23284  002E1A  0060  F134  F0AF   	movff	?i1___ftadd+1,i1sprintf@fval+1
 23285  002E20  0060  F138  F0B0   	movff	?i1___ftadd+2,i1sprintf@fval+2
 23286  002E26                     i1l1108:
 23287  002E26                     i1l11794:
 23288                           
 23289                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 23290  002E26  0100               	movlb	0	; () banked
 23291  002E28  BFA7               	btfsc	(i1sprintf@exp+1)& (0+255),7,b
 23292  002E2A  D006               	goto	i1u1566_20
 23293  002E2C  51A7               	movf	(i1sprintf@exp+1)& (0+255),w,b
 23294  002E2E  E123               	bnz	i1l11802
 23295  002E30  0E0A               	movlw	10
 23296  002E32  5DA6               	subwf	i1sprintf@exp& (0+255),w,b
 23297  002E34  B0D8               	btfsc	16344,0,c
 23298  002E36  D01F               	goto	i1u1569_20
 23299  002E38                     i1u1566_20:
 23300                           
 23301                           ; BSR set to: 0
 23302  002E38  51AE               	movf	i1sprintf@fval& (0+255),w,b
 23303  002E3A  11AF               	iorwf	(i1sprintf@fval+1)& (0+255),w,b
 23304  002E3C  11B0               	iorwf	(i1sprintf@fval+2)& (0+255),w,b
 23305  002E3E  B4D8               	btfsc	16344,2,c
 23306  002E40  D068               	goto	i1l1109
 23307                           
 23308                           ; BSR set to: 0
 23309  002E42  0060  F2B8  F018   	movff	i1sprintf@fval,i1___fttol@f1
 23310  002E48  0060  F2BC  F019   	movff	i1sprintf@fval+1,i1___fttol@f1+1
 23311  002E4E  0060  F2C0  F01A   	movff	i1sprintf@fval+2,i1___fttol@f1+2
 23312  002E54  EC6B  F034         	call	i1___fttol	;wreg free
 23313  002E58  5018               	movf	?i1___fttol,w,c
 23314  002E5A  1019               	iorwf	?i1___fttol+1,w,c
 23315  002E5C  101A               	iorwf	?i1___fttol+2,w,c
 23316  002E5E  101B               	iorwf	?i1___fttol+3,w,c
 23317  002E60  A4D8               	btfss	16344,2,c
 23318  002E62  D057               	goto	i1l1109
 23319  002E64  0100               	movlb	0	; () banked
 23320  002E66  BFA7               	btfsc	(i1sprintf@exp+1)& (0+255),7,b
 23321  002E68  D054               	goto	i1l1109
 23322  002E6A  51A7               	movf	(i1sprintf@exp+1)& (0+255),w,b
 23323  002E6C  E104               	bnz	i1l11802
 23324  002E6E  0E02               	movlw	2
 23325  002E70  5DA6               	subwf	i1sprintf@exp& (0+255),w,b
 23326  002E72  A0D8               	btfss	16344,0,c
 23327  002E74  D04E               	goto	i1l1109
 23328  002E76                     i1u1569_20:
 23329  002E76                     i1l11802:
 23330                           
 23331                           ; BSR set to: 0
 23332                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 23333  002E76  0060  F288  F060   	movff	i1sprintf@tmpval,i1___ftge@ff1
 23334  002E7C  0060  F28C  F061   	movff	i1sprintf@tmpval+1,i1___ftge@ff1+1
 23335  002E82  0060  F290  F062   	movff	i1sprintf@tmpval+2,i1___ftge@ff1+2
 23336  002E88  0E70               	movlw	112
 23337  002E8A  6F63               	movwf	i1___ftge@ff2& (0+255),b
 23338  002E8C  0E89               	movlw	137
 23339  002E8E  6F64               	movwf	(i1___ftge@ff2+1)& (0+255),b
 23340  002E90  0E40               	movlw	64
 23341  002E92  6F65               	movwf	(i1___ftge@ff2+2)& (0+255),b
 23342  002E94  ECE5  F03B         	call	i1___ftge	;wreg free
 23343  002E98  0100               	movlb	0	; () banked
 23344  002E9A  B0D8               	btfsc	16344,0,c
 23345  002E9C  D002               	goto	i1l1112
 23346                           
 23347                           ; BSR set to: 0
 23348                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 23349  002E9E  0EF7               	movlw	247
 23350  002EA0  D001               	goto	L27
 23351  002EA2                     i1l1112:
 23352                           
 23353                           ; BSR set to: 0
 23354                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 23355                           
 23356                           ; BSR set to: 0
 23357  002EA2  0EF8               	movlw	248
 23358  002EA4                     L27:
 23359  002EA4  27A6               	addwf	i1sprintf@exp& (0+255),f,b
 23360  002EA6  0EFF               	movlw	255
 23361  002EA8  23A7               	addwfc	(i1sprintf@exp+1)& (0+255),f,b
 23362                           
 23363                           ; BSR set to: 0
 23364                           ;doprnt.c: 1124: }
 23365                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 23366                           
 23367                           ; BSR set to: 0
 23368  002EAA  51A6               	movf	i1sprintf@exp& (0+255),w,b
 23369  002EAC  EC93  F01F         	call	i1_scale
 23370  002EB0  0060  F108  F0A2   	movff	?i1_scale,i1sprintf@tmpval
 23371  002EB6  0060  F10C  F0A3   	movff	?i1_scale+1,i1sprintf@tmpval+1
 23372  002EBC  0060  F110  F0A4   	movff	?i1_scale+2,i1sprintf@tmpval+2
 23373                           
 23374                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 23375  002EC2  0060  F2B8  F004   	movff	i1sprintf@fval,i1__tdiv_to_l_@f1
 23376  002EC8  0060  F2BC  F005   	movff	i1sprintf@fval+1,i1__tdiv_to_l_@f1+1
 23377  002ECE  0060  F2C0  F006   	movff	i1sprintf@fval+2,i1__tdiv_to_l_@f1+2
 23378  002ED4  0060  F288  F007   	movff	i1sprintf@tmpval,i1__tdiv_to_l_@f2
 23379  002EDA  0060  F28C  F008   	movff	i1sprintf@tmpval+1,i1__tdiv_to_l_@f2+1
 23380  002EE0  0060  F290  F009   	movff	i1sprintf@tmpval+2,i1__tdiv_to_l_@f2+2
 23381  002EE6  EC65  F02F         	call	i1__tdiv_to_l_	;wreg free
 23382  002EEA  0060  F010  F0AA   	movff	?i1__tdiv_to_l_,i1sprintf@val
 23383  002EF0  0060  F014  F0AB   	movff	?i1__tdiv_to_l_+1,i1sprintf@val+1
 23384  002EF6  0060  F018  F0AC   	movff	?i1__tdiv_to_l_+2,i1sprintf@val+2
 23385  002EFC  0060  F01C  F0AD   	movff	?i1__tdiv_to_l_+3,i1sprintf@val+3
 23386                           
 23387                           ;doprnt.c: 1129: fval = 0.0;
 23388  002F02  0E00               	movlw	0
 23389  002F04  0100               	movlb	0	; () banked
 23390  002F06  6FAE               	movwf	i1sprintf@fval& (0+255),b
 23391  002F08  0E00               	movlw	0
 23392  002F0A  6FAF               	movwf	(i1sprintf@fval+1)& (0+255),b
 23393  002F0C  0E00               	movlw	0
 23394  002F0E  6FB0               	movwf	(i1sprintf@fval+2)& (0+255),b
 23395                           
 23396                           ;doprnt.c: 1130: } else {
 23397  002F10  D047               	goto	i1l1118
 23398  002F12                     i1l1109:
 23399                           
 23400                           ;doprnt.c: 1131: val = (unsigned long)fval;
 23401                           
 23402                           ; BSR set to: 0
 23403  002F12  0060  F2B8  F018   	movff	i1sprintf@fval,i1___fttol@f1
 23404  002F18  0060  F2BC  F019   	movff	i1sprintf@fval+1,i1___fttol@f1+1
 23405  002F1E  0060  F2C0  F01A   	movff	i1sprintf@fval+2,i1___fttol@f1+2
 23406  002F24  EC6B  F034         	call	i1___fttol	;wreg free
 23407  002F28  0060  F060  F0AA   	movff	?i1___fttol,i1sprintf@val
 23408  002F2E  0060  F064  F0AB   	movff	?i1___fttol+1,i1sprintf@val+1
 23409  002F34  0060  F068  F0AC   	movff	?i1___fttol+2,i1sprintf@val+2
 23410  002F3A  0060  F06C  F0AD   	movff	?i1___fttol+3,i1sprintf@val+3
 23411                           
 23412                           ;doprnt.c: 1132: fval -= (double)val;
 23413  002F40  0060  F2B8  F060   	movff	i1sprintf@fval,i1___ftsub@f1
 23414  002F46  0060  F2BC  F061   	movff	i1sprintf@fval+1,i1___ftsub@f1+1
 23415  002F4C  0060  F2C0  F062   	movff	i1sprintf@fval+2,i1___ftsub@f1+2
 23416  002F52  0060  F2A8  F027   	movff	i1sprintf@val,i1___lltoft@c
 23417  002F58  0060  F2AC  F028   	movff	i1sprintf@val+1,i1___lltoft@c+1
 23418  002F5E  0060  F2B0  F029   	movff	i1sprintf@val+2,i1___lltoft@c+2
 23419  002F64  0060  F2B4  F02A   	movff	i1sprintf@val+3,i1___lltoft@c+3
 23420  002F6A  ECDD  F03F         	call	i1___lltoft	;wreg free
 23421  002F6E  0060  F09C  F063   	movff	?i1___lltoft,i1___ftsub@f2
 23422  002F74  0060  F0A0  F064   	movff	?i1___lltoft+1,i1___ftsub@f2+1
 23423  002F7A  0060  F0A4  F065   	movff	?i1___lltoft+2,i1___ftsub@f2+2
 23424  002F80  EC6D  F042         	call	i1___ftsub	;wreg free
 23425  002F84  0060  F180  F0AE   	movff	?i1___ftsub,i1sprintf@fval
 23426  002F8A  0060  F184  F0AF   	movff	?i1___ftsub+1,i1sprintf@fval+1
 23427  002F90  0060  F188  F0B0   	movff	?i1___ftsub+2,i1sprintf@fval+2
 23428                           
 23429                           ;doprnt.c: 1133: exp = 0;
 23430  002F96  0E00               	movlw	0
 23431  002F98  0100               	movlb	0	; () banked
 23432  002F9A  6FA7               	movwf	(i1sprintf@exp+1)& (0+255),b
 23433  002F9C  0E00               	movlw	0
 23434  002F9E  6FA6               	movwf	i1sprintf@exp& (0+255),b
 23435  002FA0                     i1l1118:
 23436                           
 23437                           ; BSR set to: 0
 23438                           ;doprnt.c: 1134: }
 23439                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 23440                           
 23441                           ; BSR set to: 0
 23442  002FA0  0E01               	movlw	1
 23443  002FA2  6FB3               	movwf	i1sprintf@c& (0+255),b
 23444  002FA4                     i1l11822:
 23445                           
 23446                           ; BSR set to: 0
 23447  002FA4  0E0A               	movlw	10
 23448  002FA6  19B3               	xorwf	i1sprintf@c& (0+255),w,b
 23449  002FA8  B4D8               	btfsc	16344,2,c
 23450  002FAA  D01B               	goto	i1u1573_20
 23451                           
 23452                           ; BSR set to: 0
 23453                           ;doprnt.c: 1137: if(val < dpowers[c])
 23454                           
 23455                           ; BSR set to: 0
 23456                           
 23457                           ; BSR set to: 0
 23458  002FAC  51B3               	movf	i1sprintf@c& (0+255),w,b
 23459  002FAE  0D04               	mullw	4
 23460  002FB0  0ED9               	movlw	low _dpowers
 23461  002FB2  24F3               	addwf	16371,w,c
 23462  002FB4  6EF6               	movwf	16374,c
 23463  002FB6  0EFA               	movlw	high _dpowers
 23464  002FB8  20F4               	addwfc	16372,w,c
 23465  002FBA  6EF7               	movwf	16375,c
 23466  002FBC                     	if	1	;There are 3 active tblptr bytes
 23467  002FBC  6AF8               	clrf	16376,c
 23468  002FBE  0E00               	movlw	low (__mediumconst shr (0+16))
 23469  002FC0  22F8               	addwfc	16376,f,c
 23470  002FC2                     	endif
 23471  002FC2  0009               	tblrd		*+
 23472  002FC4  50F5               	movf	16373,w,c
 23473  002FC6  5DAA               	subwf	i1sprintf@val& (0+255),w,b
 23474  002FC8  0009               	tblrd		*+
 23475  002FCA  50F5               	movf	16373,w,c
 23476  002FCC  59AB               	subwfb	(i1sprintf@val+1)& (0+255),w,b
 23477  002FCE  0009               	tblrd		*+
 23478  002FD0  50F5               	movf	16373,w,c
 23479  002FD2  59AC               	subwfb	(i1sprintf@val+2)& (0+255),w,b
 23480  002FD4  0009               	tblrd		*+
 23481  002FD6  50F5               	movf	16373,w,c
 23482  002FD8  59AD               	subwfb	(i1sprintf@val+3)& (0+255),w,b
 23483  002FDA  A0D8               	btfss	16344,0,c
 23484  002FDC  D002               	goto	i1u1573_20
 23485                           
 23486                           ; BSR set to: 0
 23487                           
 23488                           ; BSR set to: 0
 23489                           
 23490                           ; BSR set to: 0
 23491                           ;doprnt.c: 1138: break;
 23492  002FDE  2BB3               	incf	i1sprintf@c& (0+255),f,b
 23493  002FE0  D7E1               	goto	i1l11822
 23494  002FE2                     i1u1573_20:
 23495                           
 23496                           ; BSR set to: 0
 23497                           ;doprnt.c: 1142: width -= prec + c + exp;
 23498                           
 23499                           ; BSR set to: 0
 23500  002FE2  0060  F2CC  F083   	movff	i1sprintf@c,??i1_sprintf
 23501  002FE8  6B84               	clrf	(??i1_sprintf+1)& (0+255),b
 23502  002FEA  BF83               	btfsc	??i1_sprintf& (0+255),7,b
 23503  002FEC  0784               	decf	(??i1_sprintf+1)& (0+255),f,b
 23504  002FEE  51B1               	movf	i1sprintf@prec& (0+255),w,b
 23505  002FF0  2783               	addwf	??i1_sprintf& (0+255),f,b
 23506  002FF2  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 23507  002FF4  2384               	addwfc	(??i1_sprintf+1)& (0+255),f,b
 23508  002FF6  51A6               	movf	i1sprintf@exp& (0+255),w,b
 23509  002FF8  2783               	addwf	??i1_sprintf& (0+255),f,b
 23510  002FFA  51A7               	movf	(i1sprintf@exp+1)& (0+255),w,b
 23511  002FFC  2384               	addwfc	(??i1_sprintf+1)& (0+255),f,b
 23512  002FFE  5183               	movf	??i1_sprintf& (0+255),w,b
 23513  003000  5FA8               	subwf	i1sprintf@width& (0+255),f,b
 23514  003002  5184               	movf	(??i1_sprintf+1)& (0+255),w,b
 23515  003004  5BA9               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 23516                           
 23517                           ; BSR set to: 0
 23518                           ;doprnt.c: 1143: if(
 23519                           ;doprnt.c: 1145: flag & 0x800 ||
 23520                           ;doprnt.c: 1147: prec)
 23521  003006  B7B5               	btfsc	(i1sprintf@flag+1)& (0+255),3,b
 23522  003008  D004               	goto	i1u1575_20
 23523                           
 23524                           ; BSR set to: 0
 23525  00300A  51B1               	movf	i1sprintf@prec& (0+255),w,b
 23526  00300C  11B2               	iorwf	(i1sprintf@prec+1)& (0+255),w,b
 23527  00300E  B4D8               	btfsc	16344,2,c
 23528  003010  D003               	goto	i1l1122
 23529  003012                     i1u1575_20:
 23530                           
 23531                           ; BSR set to: 0
 23532                           ;doprnt.c: 1148: width--;
 23533                           
 23534                           ; BSR set to: 0
 23535  003012  07A8               	decf	i1sprintf@width& (0+255),f,b
 23536  003014  A0D8               	btfss	16344,0,c
 23537  003016  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 23538  003018                     i1l1122:
 23539                           
 23540                           ; BSR set to: 0
 23541                           ;doprnt.c: 1149: if(flag & 0x03)
 23542                           
 23543                           ; BSR set to: 0
 23544  003018  0E03               	movlw	3
 23545  00301A  15B4               	andwf	i1sprintf@flag& (0+255),w,b
 23546  00301C  6F83               	movwf	??i1_sprintf& (0+255),b
 23547  00301E  0E00               	movlw	0
 23548  003020  15B5               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 23549  003022  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 23550  003024  5183               	movf	??i1_sprintf& (0+255),w,b
 23551  003026  1184               	iorwf	(??i1_sprintf+1)& (0+255),w,b
 23552  003028  B4D8               	btfsc	16344,2,c
 23553  00302A  D003               	goto	i1l1125
 23554                           
 23555                           ; BSR set to: 0
 23556                           ;doprnt.c: 1150: width--;
 23557  00302C  07A8               	decf	i1sprintf@width& (0+255),f,b
 23558  00302E  A0D8               	btfss	16344,0,c
 23559  003030  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 23560  003032                     i1l1125:
 23561                           
 23562                           ; BSR set to: 0
 23563                           ;doprnt.c: 1153: if(flag & 0x04) {
 23564                           
 23565                           ; BSR set to: 0
 23566  003032  A5B4               	btfss	i1sprintf@flag& (0+255),2,b
 23567  003034  D038               	goto	i1l1126
 23568                           
 23569                           ; BSR set to: 0
 23570                           ;doprnt.c: 1155: if(flag & 0x02)
 23571  003036  A3B4               	btfss	i1sprintf@flag& (0+255),1,b
 23572  003038  D014               	goto	i1l1127
 23573                           
 23574                           ; BSR set to: 0
 23575                           ;doprnt.c: 1159: ((*sp++ = (flag & 0x01 ? '-' : '+')));
 23576  00303A  B1B4               	btfsc	i1sprintf@flag& (0+255),0,b
 23577  00303C  D004               	goto	i1l1129
 23578                           
 23579                           ; BSR set to: 0
 23580  00303E  0E00               	movlw	0
 23581  003040  6F92               	movwf	(i1_sprintf$2177+1)& (0+255),b
 23582  003042  0E2B               	movlw	43
 23583  003044  D003               	goto	L28
 23584  003046                     i1l1129:
 23585                           
 23586                           ; BSR set to: 0
 23587                           
 23588                           ; BSR set to: 0
 23589  003046  0E00               	movlw	0
 23590  003048  6F92               	movwf	(i1_sprintf$2177+1)& (0+255),b
 23591  00304A  0E2D               	movlw	45
 23592  00304C                     L28:
 23593  00304C  6F91               	movwf	i1_sprintf$2177& (0+255),b
 23594                           
 23595                           ; BSR set to: 0
 23596                           
 23597                           ; BSR set to: 0
 23598  00304E  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23599  003054  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23600  00305A  0060  F247  FFDF   	movff	i1_sprintf$2177,16351
 23601  003060  D00A               	goto	i1l11862
 23602  003062                     i1l1127:
 23603                           
 23604                           ; BSR set to: 0
 23605                           ;doprnt.c: 1161: else
 23606                           ;doprnt.c: 1164: if(flag & 0x01)
 23607  003062  A1B4               	btfss	i1sprintf@flag& (0+255),0,b
 23608  003064  D018               	goto	i1l1134
 23609                           
 23610                           ; BSR set to: 0
 23611                           ;doprnt.c: 1165: ((*sp++ = (' ')));
 23612  003066  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23613  00306C  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23614  003072  0E20               	movlw	32
 23615  003074  6EDF               	movwf	16351,c
 23616  003076                     i1l11862:
 23617                           
 23618                           ; BSR set to: 0
 23619  003076  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 23620  003078  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 23621                           
 23622                           ; BSR set to: 0
 23623                           ;doprnt.c: 1168: while(width > 0) {
 23624                           
 23625                           ; BSR set to: 0
 23626  00307A  D00D               	goto	i1l1134
 23627  00307C                     i1l11864:
 23628                           
 23629                           ; BSR set to: 0
 23630                           ;doprnt.c: 1169: ((*sp++ = ('0')));
 23631  00307C  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23632  003082  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23633  003088  0E30               	movlw	48
 23634  00308A  6EDF               	movwf	16351,c
 23635                           
 23636                           ; BSR set to: 0
 23637  00308C  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 23638  00308E  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 23639                           
 23640                           ; BSR set to: 0
 23641                           ;doprnt.c: 1170: width--;
 23642  003090  07A8               	decf	i1sprintf@width& (0+255),f,b
 23643  003092  A0D8               	btfss	16344,0,c
 23644  003094  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 23645  003096                     i1l1134:
 23646                           
 23647                           ; BSR set to: 0
 23648                           
 23649                           ; BSR set to: 0
 23650  003096  BFA9               	btfsc	(i1sprintf@width+1)& (0+255),7,b
 23651  003098  D0A0               	goto	i1l1149
 23652  00309A  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 23653  00309C  E1EF               	bnz	i1l11864
 23654  00309E  05A8               	decf	i1sprintf@width& (0+255),w,b
 23655  0030A0  A0D8               	btfss	16344,0,c
 23656  0030A2  D09B               	goto	i1l1149
 23657  0030A4  D7EB               	goto	i1l1135
 23658  0030A6                     i1l1126:
 23659                           
 23660                           ; BSR set to: 0
 23661                           ;doprnt.c: 1175: {
 23662                           ;doprnt.c: 1177: if(!(flag & 0x08))
 23663  0030A6  A7B4               	btfss	i1sprintf@flag& (0+255),3,b
 23664  0030A8  D00E               	goto	i1l1139
 23665  0030AA  D014               	goto	i1u1583_20
 23666  0030AC                     i1l11874:
 23667                           
 23668                           ; BSR set to: 0
 23669                           ;doprnt.c: 1181: ((*sp++ = (' ')));
 23670  0030AC  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23671  0030B2  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23672  0030B8  0E20               	movlw	32
 23673  0030BA  6EDF               	movwf	16351,c
 23674                           
 23675                           ; BSR set to: 0
 23676  0030BC  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 23677  0030BE  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 23678                           
 23679                           ; BSR set to: 0
 23680                           ;doprnt.c: 1182: width--;
 23681  0030C0  07A8               	decf	i1sprintf@width& (0+255),f,b
 23682  0030C2  A0D8               	btfss	16344,0,c
 23683  0030C4  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 23684  0030C6                     i1l1139:
 23685                           
 23686                           ; BSR set to: 0
 23687                           
 23688                           ; BSR set to: 0
 23689  0030C6  BFA9               	btfsc	(i1sprintf@width+1)& (0+255),7,b
 23690  0030C8  D005               	goto	i1u1583_20
 23691  0030CA  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 23692  0030CC  E1EF               	bnz	i1l11874
 23693  0030CE  05A8               	decf	i1sprintf@width& (0+255),w,b
 23694  0030D0  B0D8               	btfsc	16344,0,c
 23695  0030D2  D7EC               	goto	i1l1140
 23696  0030D4                     i1u1583_20:
 23697                           
 23698                           ; BSR set to: 0
 23699                           ;doprnt.c: 1183: }
 23700                           ;doprnt.c: 1186: if(flag & 0x02)
 23701                           
 23702                           ; BSR set to: 0
 23703  0030D4  A3B4               	btfss	i1sprintf@flag& (0+255),1,b
 23704  0030D6  D014               	goto	i1l1142
 23705                           
 23706                           ; BSR set to: 0
 23707                           ;doprnt.c: 1190: ((*sp++ = (flag & 0x01 ? '-' : '+')));
 23708  0030D8  B1B4               	btfsc	i1sprintf@flag& (0+255),0,b
 23709  0030DA  D004               	goto	i1l1144
 23710                           
 23711                           ; BSR set to: 0
 23712  0030DC  0E00               	movlw	0
 23713  0030DE  6F94               	movwf	(i1_sprintf$2178+1)& (0+255),b
 23714  0030E0  0E2B               	movlw	43
 23715  0030E2  D003               	goto	L29
 23716  0030E4                     i1l1144:
 23717                           
 23718                           ; BSR set to: 0
 23719                           
 23720                           ; BSR set to: 0
 23721  0030E4  0E00               	movlw	0
 23722  0030E6  6F94               	movwf	(i1_sprintf$2178+1)& (0+255),b
 23723  0030E8  0E2D               	movlw	45
 23724  0030EA                     L29:
 23725  0030EA  6F93               	movwf	i1_sprintf$2178& (0+255),b
 23726                           
 23727                           ; BSR set to: 0
 23728                           
 23729                           ; BSR set to: 0
 23730  0030EC  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23731  0030F2  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23732  0030F8  0060  F24F  FFDF   	movff	i1_sprintf$2178,16351
 23733  0030FE  D06B               	goto	L38
 23734  003100                     i1l1142:
 23735                           
 23736                           ; BSR set to: 0
 23737                           ;doprnt.c: 1192: else if(flag & 0x01)
 23738  003100  A1B4               	btfss	i1sprintf@flag& (0+255),0,b
 23739  003102  D06B               	goto	i1l1149
 23740                           
 23741                           ; BSR set to: 0
 23742                           ;doprnt.c: 1193: ((*sp++ = (' ')));
 23743  003104  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23744  00310A  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23745  003110  0E20               	movlw	32
 23746  003112  D060               	goto	L30
 23747  003114                     
 23748                           ; BSR set to: 0
 23749                           ;doprnt.c: 1200: {
 23750                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 23751                           
 23752                           ; BSR set to: 0
 23753  003114  0060  F2A8  F004   	movff	i1sprintf@val,i1___lldiv@dividend
 23754  00311A  0060  F2AC  F005   	movff	i1sprintf@val+1,i1___lldiv@dividend+1
 23755  003120  0060  F2B0  F006   	movff	i1sprintf@val+2,i1___lldiv@dividend+2
 23756  003126  0060  F2B4  F007   	movff	i1sprintf@val+3,i1___lldiv@dividend+3
 23757  00312C  51B3               	movf	i1sprintf@c& (0+255),w,b
 23758  00312E  0D04               	mullw	4
 23759  003130  0ED9               	movlw	low _dpowers
 23760  003132  24F3               	addwf	16371,w,c
 23761  003134  6EF6               	movwf	16374,c
 23762  003136  0EFA               	movlw	high _dpowers
 23763  003138  20F4               	addwfc	16372,w,c
 23764  00313A  6EF7               	movwf	16375,c
 23765  00313C                     	if	1	;There are 3 active tblptr bytes
 23766  00313C  6AF8               	clrf	16376,c
 23767  00313E  0E00               	movlw	low (__mediumconst shr (0+16))
 23768  003140  22F8               	addwfc	16376,f,c
 23769  003142                     	endif
 23770  003142  0009               	tblrd		*+
 23771  003144  006F FFD4  F008    	movff	16373,i1___lldiv@divisor
 23772  00314A  0009               	tblrd		*+
 23773  00314C  006F FFD4  F009    	movff	16373,i1___lldiv@divisor+1
 23774  003152  0009               	tblrd		*+
 23775  003154  006F FFD4  F00A    	movff	16373,i1___lldiv@divisor+2
 23776  00315A  000A               	tblrd		*-
 23777  00315C  006F FFD4  F00B    	movff	16373,i1___lldiv@divisor+3
 23778  003162  EC04  F03D         	call	i1___lldiv	;wreg free
 23779  003166  0060  F010  F0A2   	movff	?i1___lldiv,i1sprintf@tmpval
 23780  00316C  0060  F014  F0A3   	movff	?i1___lldiv+1,i1sprintf@tmpval+1
 23781  003172  0060  F018  F0A4   	movff	?i1___lldiv+2,i1sprintf@tmpval+2
 23782  003178  0060  F01C  F0A5   	movff	?i1___lldiv+3,i1sprintf@tmpval+3
 23783                           
 23784                           ;doprnt.c: 1202: tmpval.vd %= 10;
 23785  00317E  0060  F288  F011   	movff	i1sprintf@tmpval,i1___llmod@dividend
 23786  003184  0060  F28C  F012   	movff	i1sprintf@tmpval+1,i1___llmod@dividend+1
 23787  00318A  0060  F290  F013   	movff	i1sprintf@tmpval+2,i1___llmod@dividend+2
 23788  003190  0060  F294  F014   	movff	i1sprintf@tmpval+3,i1___llmod@dividend+3
 23789  003196  0E0A               	movlw	10
 23790  003198  6E15               	movwf	i1___llmod@divisor,c
 23791  00319A  0E00               	movlw	0
 23792  00319C  6E16               	movwf	i1___llmod@divisor+1,c
 23793  00319E  0E00               	movlw	0
 23794  0031A0  6E17               	movwf	i1___llmod@divisor+2,c
 23795  0031A2  0E00               	movlw	0
 23796  0031A4  6E18               	movwf	i1___llmod@divisor+3,c
 23797  0031A6  EC70  F03F         	call	i1___llmod	;wreg free
 23798  0031AA  0060  F044  F0A2   	movff	?i1___llmod,i1sprintf@tmpval
 23799  0031B0  0060  F048  F0A3   	movff	?i1___llmod+1,i1sprintf@tmpval+1
 23800  0031B6  0060  F04C  F0A4   	movff	?i1___llmod+2,i1sprintf@tmpval+2
 23801  0031BC  0060  F050  F0A5   	movff	?i1___llmod+3,i1sprintf@tmpval+3
 23802                           
 23803                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 23804  0031C2  0100               	movlb	0	; () banked
 23805  0031C4  51A2               	movf	i1sprintf@tmpval& (0+255),w,b
 23806  0031C6  0F30               	addlw	48
 23807  0031C8  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23808  0031CE  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23809  0031D4                     L30:
 23810  0031D4  6EDF               	movwf	16351,c
 23811  0031D6                     L38:
 23812                           
 23813                           ; BSR set to: 0
 23814  0031D6  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 23815  0031D8  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 23816  0031DA                     i1l1149:
 23817                           
 23818                           ; BSR set to: 0
 23819                           
 23820                           ; BSR set to: 0
 23821  0031DA  07B3               	decf	i1sprintf@c& (0+255),f,b
 23822  0031DC  29B3               	incf	i1sprintf@c& (0+255),w,b
 23823  0031DE  B4D8               	btfsc	16344,2,c
 23824  0031E0  D00E               	goto	i1l1152
 23825  0031E2  D798               	goto	i1l1150
 23826  0031E4                     i1l11906:
 23827                           
 23828                           ; BSR set to: 0
 23829                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 23830  0031E4  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23831  0031EA  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23832  0031F0  0E30               	movlw	48
 23833  0031F2  6EDF               	movwf	16351,c
 23834                           
 23835                           ; BSR set to: 0
 23836  0031F4  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 23837  0031F6  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 23838                           
 23839                           ; BSR set to: 0
 23840                           ;doprnt.c: 1209: exp--;
 23841  0031F8  07A6               	decf	i1sprintf@exp& (0+255),f,b
 23842  0031FA  A0D8               	btfss	16344,0,c
 23843  0031FC  07A7               	decf	(i1sprintf@exp+1)& (0+255),f,b
 23844  0031FE                     i1l1152:
 23845                           
 23846                           ; BSR set to: 0
 23847                           
 23848                           ; BSR set to: 0
 23849  0031FE  BFA7               	btfsc	(i1sprintf@exp+1)& (0+255),7,b
 23850  003200  D005               	goto	i1u1588_20
 23851  003202  51A7               	movf	(i1sprintf@exp+1)& (0+255),w,b
 23852  003204  E1EF               	bnz	i1l11906
 23853  003206  05A6               	decf	i1sprintf@exp& (0+255),w,b
 23854  003208  B0D8               	btfsc	16344,0,c
 23855  00320A  D7EC               	goto	i1l1153
 23856  00320C                     i1u1588_20:
 23857                           
 23858                           ; BSR set to: 0
 23859                           ;doprnt.c: 1210: }
 23860                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 23861                           
 23862                           ; BSR set to: 0
 23863  00320C  BFB2               	btfsc	(i1sprintf@prec+1)& (0+255),7,b
 23864  00320E  D009               	goto	i1l1155
 23865  003210  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 23866  003212  E104               	bnz	i1u1589_20
 23867  003214  0E09               	movlw	9
 23868  003216  5DB1               	subwf	i1sprintf@prec& (0+255),w,b
 23869  003218  A0D8               	btfss	16344,0,c
 23870  00321A  D003               	goto	i1l1155
 23871  00321C                     i1u1589_20:
 23872                           
 23873                           ; BSR set to: 0
 23874                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 23875  00321C  0E08               	movlw	8
 23876  00321E  6FB3               	movwf	i1sprintf@c& (0+255),b
 23877  003220  D003               	goto	i1l1156
 23878  003222                     i1l1155:
 23879                           
 23880                           ; BSR set to: 0
 23881                           ;doprnt.c: 1213: else
 23882                           ;doprnt.c: 1214: c = prec;
 23883  003222  0060  F2C4  F0B3   	movff	i1sprintf@prec,i1sprintf@c
 23884  003228                     i1l1156:
 23885                           
 23886                           ; BSR set to: 0
 23887                           ;doprnt.c: 1215: prec -= c;
 23888                           
 23889                           ; BSR set to: 0
 23890  003228  51B3               	movf	i1sprintf@c& (0+255),w,b
 23891  00322A  5FB1               	subwf	i1sprintf@prec& (0+255),f,b
 23892  00322C  0E00               	movlw	0
 23893  00322E  BFB3               	btfsc	i1sprintf@c& (0+255),7,b
 23894  003230  0EFF               	movlw	255
 23895  003232  5BB2               	subwfb	(i1sprintf@prec+1)& (0+255),f,b
 23896                           
 23897                           ; BSR set to: 0
 23898                           ;doprnt.c: 1217: if(c || flag & 0x800)
 23899  003234  51B3               	movf	i1sprintf@c& (0+255),w,b
 23900  003236  A4D8               	btfss	16344,2,c
 23901  003238  D002               	goto	i1u1591_20
 23902                           
 23903                           ; BSR set to: 0
 23904  00323A  A7B5               	btfss	(i1sprintf@flag+1)& (0+255),3,b
 23905  00323C  D00A               	goto	i1l1157
 23906  00323E                     i1u1591_20:
 23907                           
 23908                           ; BSR set to: 0
 23909                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 23910                           
 23911                           ; BSR set to: 0
 23912  00323E  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23913  003244  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23914  00324A  0E2E               	movlw	46
 23915  00324C  6EDF               	movwf	16351,c
 23916                           
 23917                           ; BSR set to: 0
 23918  00324E  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 23919  003250  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 23920  003252                     i1l1157:
 23921                           
 23922                           ; BSR set to: 0
 23923                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 23924                           
 23925                           ; BSR set to: 0
 23926  003252  51B3               	movf	i1sprintf@c& (0+255),w,b
 23927  003254  EC93  F01F         	call	i1_scale
 23928  003258  0060  F108  F089   	movff	?i1_scale,i1_sprintf$3044
 23929  00325E  0060  F10C  F08A   	movff	?i1_scale+1,i1_sprintf$3044+1
 23930  003264  0060  F110  F08B   	movff	?i1_scale+2,i1_sprintf$3044+2
 23931                           
 23932                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 23933  00326A  0060  F2B8  F036   	movff	i1sprintf@fval,i1___ftmul@f2
 23934  003270  0060  F2BC  F037   	movff	i1sprintf@fval+1,i1___ftmul@f2+1
 23935  003276  0060  F2C0  F038   	movff	i1sprintf@fval+2,i1___ftmul@f2+2
 23936  00327C  0060  F224  F033   	movff	i1_sprintf$3044,i1___ftmul@f1
 23937  003282  0060  F228  F034   	movff	i1_sprintf$3044+1,i1___ftmul@f1+1
 23938  003288  0060  F22C  F035   	movff	i1_sprintf$3044+2,i1___ftmul@f1+2
 23939  00328E  ECE0  F032         	call	i1___ftmul	;wreg free
 23940  003292  0060  F0CC  F018   	movff	?i1___ftmul,i1___fttol@f1
 23941  003298  0060  F0D0  F019   	movff	?i1___ftmul+1,i1___fttol@f1+1
 23942  00329E  0060  F0D4  F01A   	movff	?i1___ftmul+2,i1___fttol@f1+2
 23943  0032A4  EC6B  F034         	call	i1___fttol	;wreg free
 23944  0032A8  0060  F060  F0AA   	movff	?i1___fttol,i1sprintf@val
 23945  0032AE  0060  F064  F0AB   	movff	?i1___fttol+1,i1sprintf@val+1
 23946  0032B4  0060  F068  F0AC   	movff	?i1___fttol+2,i1sprintf@val+2
 23947  0032BA  0060  F06C  F0AD   	movff	?i1___fttol+3,i1sprintf@val+3
 23948                           
 23949                           ;doprnt.c: 1228: while(c--) {
 23950  0032C0  D099               	goto	i1l1160
 23951  0032C2                     
 23952                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 23953  0032C2  0060  F2A8  F004   	movff	i1sprintf@val,i1___lldiv@dividend
 23954  0032C8  0060  F2AC  F005   	movff	i1sprintf@val+1,i1___lldiv@dividend+1
 23955  0032CE  0060  F2B0  F006   	movff	i1sprintf@val+2,i1___lldiv@dividend+2
 23956  0032D4  0060  F2B4  F007   	movff	i1sprintf@val+3,i1___lldiv@dividend+3
 23957  0032DA  0100               	movlb	0	; () banked
 23958  0032DC  51B3               	movf	i1sprintf@c& (0+255),w,b
 23959  0032DE  0D04               	mullw	4
 23960  0032E0  0ED9               	movlw	low _dpowers
 23961  0032E2  24F3               	addwf	16371,w,c
 23962  0032E4  6EF6               	movwf	16374,c
 23963  0032E6  0EFA               	movlw	high _dpowers
 23964  0032E8  20F4               	addwfc	16372,w,c
 23965  0032EA  6EF7               	movwf	16375,c
 23966  0032EC                     	if	1	;There are 3 active tblptr bytes
 23967  0032EC  6AF8               	clrf	16376,c
 23968  0032EE  0E00               	movlw	low (__mediumconst shr (0+16))
 23969  0032F0  22F8               	addwfc	16376,f,c
 23970  0032F2                     	endif
 23971  0032F2  0009               	tblrd		*+
 23972  0032F4  006F FFD4  F008    	movff	16373,i1___lldiv@divisor
 23973  0032FA  0009               	tblrd		*+
 23974  0032FC  006F FFD4  F009    	movff	16373,i1___lldiv@divisor+1
 23975  003302  0009               	tblrd		*+
 23976  003304  006F FFD4  F00A    	movff	16373,i1___lldiv@divisor+2
 23977  00330A  000A               	tblrd		*-
 23978  00330C  006F FFD4  F00B    	movff	16373,i1___lldiv@divisor+3
 23979  003312  EC04  F03D         	call	i1___lldiv	;wreg free
 23980  003316  0060  F010  F0A2   	movff	?i1___lldiv,i1sprintf@tmpval
 23981  00331C  0060  F014  F0A3   	movff	?i1___lldiv+1,i1sprintf@tmpval+1
 23982  003322  0060  F018  F0A4   	movff	?i1___lldiv+2,i1sprintf@tmpval+2
 23983  003328  0060  F01C  F0A5   	movff	?i1___lldiv+3,i1sprintf@tmpval+3
 23984                           
 23985                           ;doprnt.c: 1230: tmpval.vd %= 10;
 23986  00332E  0060  F288  F011   	movff	i1sprintf@tmpval,i1___llmod@dividend
 23987  003334  0060  F28C  F012   	movff	i1sprintf@tmpval+1,i1___llmod@dividend+1
 23988  00333A  0060  F290  F013   	movff	i1sprintf@tmpval+2,i1___llmod@dividend+2
 23989  003340  0060  F294  F014   	movff	i1sprintf@tmpval+3,i1___llmod@dividend+3
 23990  003346  0E0A               	movlw	10
 23991  003348  6E15               	movwf	i1___llmod@divisor,c
 23992  00334A  0E00               	movlw	0
 23993  00334C  6E16               	movwf	i1___llmod@divisor+1,c
 23994  00334E  0E00               	movlw	0
 23995  003350  6E17               	movwf	i1___llmod@divisor+2,c
 23996  003352  0E00               	movlw	0
 23997  003354  6E18               	movwf	i1___llmod@divisor+3,c
 23998  003356  EC70  F03F         	call	i1___llmod	;wreg free
 23999  00335A  0060  F044  F0A2   	movff	?i1___llmod,i1sprintf@tmpval
 24000  003360  0060  F048  F0A3   	movff	?i1___llmod+1,i1sprintf@tmpval+1
 24001  003366  0060  F04C  F0A4   	movff	?i1___llmod+2,i1sprintf@tmpval+2
 24002  00336C  0060  F050  F0A5   	movff	?i1___llmod+3,i1sprintf@tmpval+3
 24003                           
 24004                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 24005  003372  0100               	movlb	0	; () banked
 24006  003374  51A2               	movf	i1sprintf@tmpval& (0+255),w,b
 24007  003376  0F30               	addlw	48
 24008  003378  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 24009  00337E  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 24010  003384  6EDF               	movwf	16351,c
 24011                           
 24012                           ; BSR set to: 0
 24013  003386  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 24014  003388  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 24015                           
 24016                           ; BSR set to: 0
 24017                           ;doprnt.c: 1232: val %= dpowers[c];
 24018  00338A  0060  F2A8  F011   	movff	i1sprintf@val,i1___llmod@dividend
 24019  003390  0060  F2AC  F012   	movff	i1sprintf@val+1,i1___llmod@dividend+1
 24020  003396  0060  F2B0  F013   	movff	i1sprintf@val+2,i1___llmod@dividend+2
 24021  00339C  0060  F2B4  F014   	movff	i1sprintf@val+3,i1___llmod@dividend+3
 24022  0033A2  51B3               	movf	i1sprintf@c& (0+255),w,b
 24023  0033A4  0D04               	mullw	4
 24024  0033A6  0ED9               	movlw	low _dpowers
 24025  0033A8  24F3               	addwf	16371,w,c
 24026  0033AA  6EF6               	movwf	16374,c
 24027  0033AC  0EFA               	movlw	high _dpowers
 24028  0033AE  20F4               	addwfc	16372,w,c
 24029  0033B0  6EF7               	movwf	16375,c
 24030  0033B2                     	if	1	;There are 3 active tblptr bytes
 24031  0033B2  6AF8               	clrf	16376,c
 24032  0033B4  0E00               	movlw	low (__mediumconst shr (0+16))
 24033  0033B6  22F8               	addwfc	16376,f,c
 24034  0033B8                     	endif
 24035  0033B8  0009               	tblrd		*+
 24036  0033BA  006F FFD4  F015    	movff	16373,i1___llmod@divisor
 24037  0033C0  0009               	tblrd		*+
 24038  0033C2  006F FFD4  F016    	movff	16373,i1___llmod@divisor+1
 24039  0033C8  0009               	tblrd		*+
 24040  0033CA  006F FFD4  F017    	movff	16373,i1___llmod@divisor+2
 24041  0033D0  000A               	tblrd		*-
 24042  0033D2  006F FFD4  F018    	movff	16373,i1___llmod@divisor+3
 24043  0033D8  EC70  F03F         	call	i1___llmod	;wreg free
 24044  0033DC  0060  F044  F0AA   	movff	?i1___llmod,i1sprintf@val
 24045  0033E2  0060  F048  F0AB   	movff	?i1___llmod+1,i1sprintf@val+1
 24046  0033E8  0060  F04C  F0AC   	movff	?i1___llmod+2,i1sprintf@val+2
 24047  0033EE  0060  F050  F0AD   	movff	?i1___llmod+3,i1sprintf@val+3
 24048  0033F4                     i1l1160:
 24049  0033F4  0100               	movlb	0	; () banked
 24050  0033F6  07B3               	decf	i1sprintf@c& (0+255),f,b
 24051  0033F8  29B3               	incf	i1sprintf@c& (0+255),w,b
 24052  0033FA  B4D8               	btfsc	16344,2,c
 24053  0033FC  D00E               	goto	i1l1163
 24054  0033FE  D761               	goto	i1l1161
 24055  003400                     
 24056                           ; BSR set to: 0
 24057                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 24058                           
 24059                           ; BSR set to: 0
 24060  003400  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 24061  003406  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 24062  00340C  0E30               	movlw	48
 24063  00340E  6EDF               	movwf	16351,c
 24064                           
 24065                           ; BSR set to: 0
 24066  003410  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 24067  003412  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 24068                           
 24069                           ; BSR set to: 0
 24070                           ;doprnt.c: 1237: prec--;
 24071  003414  07B1               	decf	i1sprintf@prec& (0+255),f,b
 24072  003416  A0D8               	btfss	16344,0,c
 24073  003418  07B2               	decf	(i1sprintf@prec+1)& (0+255),f,b
 24074  00341A                     i1l1163:
 24075                           
 24076                           ; BSR set to: 0
 24077                           
 24078                           ; BSR set to: 0
 24079  00341A  51B1               	movf	i1sprintf@prec& (0+255),w,b
 24080  00341C  11B2               	iorwf	(i1sprintf@prec+1)& (0+255),w,b
 24081  00341E  A4D8               	btfss	16344,2,c
 24082  003420  D7EF               	goto	i1l1164
 24083                           
 24084                           ; BSR set to: 0
 24085                           ;doprnt.c: 1238: }
 24086                           ;doprnt.c: 1240: if((flag & 0x08) && width > 0)
 24087  003422  B7B4               	btfsc	i1sprintf@flag& (0+255),3,b
 24088                           
 24089                           ; BSR set to: 0
 24090  003424  BFA9               	btfsc	(i1sprintf@width+1)& (0+255),7,b
 24091  003426  D2DD               	goto	i1u1635_20
 24092  003428  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 24093  00342A  E103               	bnz	i1l11954
 24094  00342C  05A8               	decf	i1sprintf@width& (0+255),w,b
 24095  00342E  A0D8               	btfss	16344,0,c
 24096  003430  D2D8               	goto	i1u1635_20
 24097  003432                     i1u1595_20:
 24098  003432                     i1l11954:
 24099                           
 24100                           ; BSR set to: 0
 24101                           ;doprnt.c: 1242: ((*sp++ = (' ')));
 24102  003432  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 24103  003438  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 24104  00343E  0E20               	movlw	32
 24105  003440  6EDF               	movwf	16351,c
 24106                           
 24107                           ; BSR set to: 0
 24108  003442  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 24109  003444  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 24110                           
 24111                           ; BSR set to: 0
 24112                           ;doprnt.c: 1243: while(--width);
 24113  003446  07A8               	decf	i1sprintf@width& (0+255),f,b
 24114  003448  A0D8               	btfss	16344,0,c
 24115  00344A  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 24116  00344C  51A8               	movf	i1sprintf@width& (0+255),w,b
 24117  00344E  11A9               	iorwf	(i1sprintf@width+1)& (0+255),w,b
 24118  003450  B4D8               	btfsc	16344,2,c
 24119  003452  D2C7               	goto	i1u1635_20
 24120  003454  D7EE               	goto	i1u1595_20
 24121  003456                     i1l1021:
 24122                           
 24123                           ; BSR set to: 0
 24124                           ;doprnt.c: 1246: }
 24125                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
 24126  003456  BFB4               	btfsc	i1sprintf@flag& (0+255),7,b
 24127  003458  D038               	goto	i1l1169
 24128                           
 24129                           ; BSR set to: 0
 24130                           ;doprnt.c: 1253: {
 24131                           ;doprnt.c: 1255: if(flag & 0x10)
 24132  00345A  A9B4               	btfss	i1sprintf@flag& (0+255),4,b
 24133  00345C  D014               	goto	i1l1170
 24134                           
 24135                           ; BSR set to: 0
 24136                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 24137  00345E  0060  F283  FFD9   	movff	i1sprintf@ap,16345
 24138  003464  0060  F287  FFDA   	movff	i1sprintf@ap+1,16346
 24139  00346A  006F FF78  F0AA    	movff	16350,i1sprintf@val
 24140  003470  006F FF78  F0AB    	movff	16350,i1sprintf@val+1
 24141  003476  006F FF78  F0AC    	movff	16350,i1sprintf@val+2
 24142  00347C  006F FF78  F0AD    	movff	16350,i1sprintf@val+3
 24143                           
 24144                           ; BSR set to: 0
 24145  003482  0E04               	movlw	4
 24146  003484  D012               	goto	L31
 24147  003486                     i1l1170:
 24148                           
 24149                           ; BSR set to: 0
 24150                           ;doprnt.c: 1257: else
 24151                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 24152                           
 24153                           ; BSR set to: 0
 24154  003486  0060  F283  FFD9   	movff	i1sprintf@ap,16345
 24155  00348C  0060  F287  FFDA   	movff	i1sprintf@ap+1,16346
 24156  003492  006F FF78  F0AA    	movff	16350,i1sprintf@val
 24157  003498  006F FF74  F0AB    	movff	16349,i1sprintf@val+1
 24158  00349E  0E00               	movlw	0
 24159  0034A0  BFAB               	btfsc	(i1sprintf@val+1)& (0+255),7,b
 24160  0034A2  0EFF               	movlw	-1
 24161  0034A4  6FAC               	movwf	(i1sprintf@val+2)& (0+255),b
 24162  0034A6  6FAD               	movwf	(i1sprintf@val+3)& (0+255),b
 24163                           
 24164                           ; BSR set to: 0
 24165  0034A8  0E02               	movlw	2
 24166  0034AA                     L31:
 24167  0034AA  27A0               	addwf	i1sprintf@ap& (0+255),f,b
 24168  0034AC  0E00               	movlw	0
 24169  0034AE  23A1               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 24170                           
 24171                           ; BSR set to: 0
 24172                           ;doprnt.c: 1261: if((long)val < 0) {
 24173                           
 24174                           ; BSR set to: 0
 24175  0034B0  AFAD               	btfss	(i1sprintf@val+3)& (0+255),7,b
 24176  0034B2  D039               	goto	i1l1175
 24177                           
 24178                           ; BSR set to: 0
 24179                           ;doprnt.c: 1262: flag |= 0x03;
 24180  0034B4  0E03               	movlw	3
 24181  0034B6  13B4               	iorwf	i1sprintf@flag& (0+255),f,b
 24182                           
 24183                           ; BSR set to: 0
 24184                           ;doprnt.c: 1263: val = -val;
 24185  0034B8  1FAD               	comf	(i1sprintf@val+3)& (0+255),f,b
 24186  0034BA  1FAC               	comf	(i1sprintf@val+2)& (0+255),f,b
 24187  0034BC  1FAB               	comf	(i1sprintf@val+1)& (0+255),f,b
 24188  0034BE  6DAA               	negf	i1sprintf@val& (0+255),b
 24189  0034C0  0E00               	movlw	0
 24190  0034C2  23AB               	addwfc	(i1sprintf@val+1)& (0+255),f,b
 24191  0034C4  23AC               	addwfc	(i1sprintf@val+2)& (0+255),f,b
 24192  0034C6  23AD               	addwfc	(i1sprintf@val+3)& (0+255),f,b
 24193                           
 24194                           ; BSR set to: 0
 24195                           ;doprnt.c: 1264: }
 24196                           ;doprnt.c: 1266: }
 24197  0034C8  D02E               	goto	i1l1175
 24198  0034CA                     i1l1169:
 24199                           
 24200                           ; BSR set to: 0
 24201                           ;doprnt.c: 1268: else
 24202                           ;doprnt.c: 1273: {
 24203                           ;doprnt.c: 1281: if(flag & 0x10)
 24204  0034CA  A9B4               	btfss	i1sprintf@flag& (0+255),4,b
 24205  0034CC  D014               	goto	i1l1174
 24206                           
 24207                           ; BSR set to: 0
 24208                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 24209  0034CE  0060  F283  FFD9   	movff	i1sprintf@ap,16345
 24210  0034D4  0060  F287  FFDA   	movff	i1sprintf@ap+1,16346
 24211  0034DA  006F FF78  F0AA    	movff	16350,i1sprintf@val
 24212  0034E0  006F FF78  F0AB    	movff	16350,i1sprintf@val+1
 24213  0034E6  006F FF78  F0AC    	movff	16350,i1sprintf@val+2
 24214  0034EC  006F FF78  F0AD    	movff	16350,i1sprintf@val+3
 24215                           
 24216                           ; BSR set to: 0
 24217  0034F2  0E04               	movlw	4
 24218  0034F4  D015               	goto	L32
 24219  0034F6                     i1l1174:
 24220                           
 24221                           ; BSR set to: 0
 24222                           ;doprnt.c: 1283: else
 24223                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 24224                           
 24225                           ; BSR set to: 0
 24226  0034F6  0060  F283  FFD9   	movff	i1sprintf@ap,16345
 24227  0034FC  0060  F287  FFDA   	movff	i1sprintf@ap+1,16346
 24228  003502  006F FF78  F083    	movff	16350,??i1_sprintf
 24229  003508  006F FF74  F084    	movff	16349,??i1_sprintf+1
 24230  00350E  0060  F20C  F0AA   	movff	??i1_sprintf,i1sprintf@val
 24231  003514  0060  F210  F0AB   	movff	??i1_sprintf+1,i1sprintf@val+1
 24232  00351A  6BAC               	clrf	(i1sprintf@val+2)& (0+255),b
 24233  00351C  6BAD               	clrf	(i1sprintf@val+3)& (0+255),b
 24234                           
 24235                           ; BSR set to: 0
 24236  00351E  0E02               	movlw	2
 24237  003520                     L32:
 24238  003520  27A0               	addwf	i1sprintf@ap& (0+255),f,b
 24239  003522  0E00               	movlw	0
 24240  003524  23A1               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 24241  003526                     i1l1175:
 24242                           
 24243                           ; BSR set to: 0
 24244                           ;doprnt.c: 1287: }
 24245                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 24246                           
 24247                           ; BSR set to: 0
 24248                           
 24249                           ; BSR set to: 0
 24250  003526  51B1               	movf	i1sprintf@prec& (0+255),w,b
 24251  003528  11B2               	iorwf	(i1sprintf@prec+1)& (0+255),w,b
 24252  00352A  A4D8               	btfss	16344,2,c
 24253  00352C  D04B               	goto	i1l1177
 24254                           
 24255                           ; BSR set to: 0
 24256  00352E  51AA               	movf	i1sprintf@val& (0+255),w,b
 24257  003530  11AB               	iorwf	(i1sprintf@val+1)& (0+255),w,b
 24258  003532  11AC               	iorwf	(i1sprintf@val+2)& (0+255),w,b
 24259  003534  11AD               	iorwf	(i1sprintf@val+3)& (0+255),w,b
 24260  003536  A4D8               	btfss	16344,2,c
 24261  003538  D045               	goto	i1l1177
 24262                           
 24263                           ; BSR set to: 0
 24264                           ;doprnt.c: 1291: prec++;
 24265  00353A  4BB1               	infsnz	i1sprintf@prec& (0+255),f,b
 24266  00353C  2BB2               	incf	(i1sprintf@prec+1)& (0+255),f,b
 24267                           
 24268                           ; BSR set to: 0
 24269                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
 24270  00353E  D042               	goto	i1l1177
 24271  003540                     
 24272                           ; BSR set to: 0
 24273                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 24274                           
 24275                           ; BSR set to: 0
 24276  003540  0E01               	movlw	1
 24277  003542  6FB3               	movwf	i1sprintf@c& (0+255),b
 24278  003544                     i1l11992:
 24279                           
 24280                           ; BSR set to: 0
 24281  003544  0E0A               	movlw	10
 24282  003546  19B3               	xorwf	i1sprintf@c& (0+255),w,b
 24283  003548  B4D8               	btfsc	16344,2,c
 24284  00354A  D044               	goto	i1l1182
 24285                           
 24286                           ; BSR set to: 0
 24287                           ;doprnt.c: 1306: if(val < dpowers[c])
 24288                           
 24289                           ; BSR set to: 0
 24290                           
 24291                           ; BSR set to: 0
 24292  00354C  51B3               	movf	i1sprintf@c& (0+255),w,b
 24293  00354E  0D04               	mullw	4
 24294  003550  0ED9               	movlw	low _dpowers
 24295  003552  24F3               	addwf	16371,w,c
 24296  003554  6EF6               	movwf	16374,c
 24297  003556  0EFA               	movlw	high _dpowers
 24298  003558  20F4               	addwfc	16372,w,c
 24299  00355A  6EF7               	movwf	16375,c
 24300  00355C                     	if	1	;There are 3 active tblptr bytes
 24301  00355C  6AF8               	clrf	16376,c
 24302  00355E  0E00               	movlw	low (__mediumconst shr (0+16))
 24303  003560  22F8               	addwfc	16376,f,c
 24304  003562                     	endif
 24305  003562  0009               	tblrd		*+
 24306  003564  50F5               	movf	16373,w,c
 24307  003566  5DAA               	subwf	i1sprintf@val& (0+255),w,b
 24308  003568  0009               	tblrd		*+
 24309  00356A  50F5               	movf	16373,w,c
 24310  00356C  59AB               	subwfb	(i1sprintf@val+1)& (0+255),w,b
 24311  00356E  0009               	tblrd		*+
 24312  003570  50F5               	movf	16373,w,c
 24313  003572  59AC               	subwfb	(i1sprintf@val+2)& (0+255),w,b
 24314  003574  0009               	tblrd		*+
 24315  003576  50F5               	movf	16373,w,c
 24316  003578  59AD               	subwfb	(i1sprintf@val+3)& (0+255),w,b
 24317  00357A  A0D8               	btfss	16344,0,c
 24318  00357C  D02B               	goto	i1l1182
 24319                           
 24320                           ; BSR set to: 0
 24321                           
 24322                           ; BSR set to: 0
 24323                           
 24324                           ; BSR set to: 0
 24325                           ;doprnt.c: 1307: break;
 24326  00357E  2BB3               	incf	i1sprintf@c& (0+255),f,b
 24327  003580  D7E1               	goto	i1l11992
 24328  003582                     
 24329                           ; BSR set to: 0
 24330                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 24331                           
 24332                           ; BSR set to: 0
 24333  003582  0E01               	movlw	1
 24334  003584  6FB3               	movwf	i1sprintf@c& (0+255),b
 24335  003586                     i1l12006:
 24336                           
 24337                           ; BSR set to: 0
 24338  003586  0E08               	movlw	8
 24339  003588  19B3               	xorwf	i1sprintf@c& (0+255),w,b
 24340  00358A  B4D8               	btfsc	16344,2,c
 24341  00358C  D023               	goto	i1l1182
 24342                           
 24343                           ; BSR set to: 0
 24344                           ;doprnt.c: 1317: if(val < hexpowers[c])
 24345                           
 24346                           ; BSR set to: 0
 24347                           
 24348                           ; BSR set to: 0
 24349  00358E  51B3               	movf	i1sprintf@c& (0+255),w,b
 24350  003590  0D04               	mullw	4
 24351  003592  0E4F               	movlw	low _hexpowers
 24352  003594  24F3               	addwf	16371,w,c
 24353  003596  6EF6               	movwf	16374,c
 24354  003598  0EFB               	movlw	high _hexpowers
 24355  00359A  20F4               	addwfc	16372,w,c
 24356  00359C  6EF7               	movwf	16375,c
 24357  00359E                     	if	1	;There are 3 active tblptr bytes
 24358  00359E  6AF8               	clrf	16376,c
 24359  0035A0  0E00               	movlw	low (__mediumconst shr (0+16))
 24360  0035A2  22F8               	addwfc	16376,f,c
 24361  0035A4                     	endif
 24362  0035A4  0009               	tblrd		*+
 24363  0035A6  50F5               	movf	16373,w,c
 24364  0035A8  5DAA               	subwf	i1sprintf@val& (0+255),w,b
 24365  0035AA  0009               	tblrd		*+
 24366  0035AC  50F5               	movf	16373,w,c
 24367  0035AE  59AB               	subwfb	(i1sprintf@val+1)& (0+255),w,b
 24368  0035B0  0009               	tblrd		*+
 24369  0035B2  50F5               	movf	16373,w,c
 24370  0035B4  59AC               	subwfb	(i1sprintf@val+2)& (0+255),w,b
 24371  0035B6  0009               	tblrd		*+
 24372  0035B8  50F5               	movf	16373,w,c
 24373  0035BA  59AD               	subwfb	(i1sprintf@val+3)& (0+255),w,b
 24374  0035BC  A0D8               	btfss	16344,0,c
 24375  0035BE  D00A               	goto	i1l1182
 24376                           
 24377                           ; BSR set to: 0
 24378                           
 24379                           ; BSR set to: 0
 24380                           
 24381                           ; BSR set to: 0
 24382                           ;doprnt.c: 1318: break;
 24383  0035C0  2BB3               	incf	i1sprintf@c& (0+255),f,b
 24384  0035C2  D7E1               	goto	i1l12006
 24385  0035C4                     i1l1177:
 24386                           
 24387                           ; BSR set to: 0
 24388                           
 24389                           ; BSR set to: 0
 24390  0035C4  51B4               	movf	i1sprintf@flag& (0+255),w,b
 24391  0035C6  0B80               	andlw	128
 24392                           
 24393                           ; Switch size 1, requested type "space"
 24394                           ; Number of cases is 2, Range of values is 0 to 128
 24395                           ; switch strategies available:
 24396                           ; Name         Instructions Cycles
 24397                           ; simple_byte            7     4 (average)
 24398                           ;	Chosen strategy is simple_byte
 24399  0035C8  0A00               	xorlw	0	; case 0
 24400  0035CA  B4D8               	btfsc	16344,2,c
 24401  0035CC  D7B9               	goto	i1l1178
 24402  0035CE  0A80               	xorlw	128	; case 128
 24403  0035D0  B4D8               	btfsc	16344,2,c
 24404  0035D2  D7D7               	goto	i1l1183
 24405  0035D4                     i1l1182:
 24406                           
 24407                           ; BSR set to: 0
 24408                           ;doprnt.c: 1339: if(c < prec)
 24409                           
 24410                           ; BSR set to: 0
 24411  0035D4  0E80               	movlw	128
 24412  0035D6  BFB3               	btfsc	i1sprintf@c& (0+255),7,b
 24413  0035D8  0E7F               	movlw	127
 24414  0035DA  6F83               	movwf	??i1_sprintf& (0+255),b
 24415  0035DC  51B1               	movf	i1sprintf@prec& (0+255),w,b
 24416  0035DE  5DB3               	subwf	i1sprintf@c& (0+255),w,b
 24417  0035E0  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 24418  0035E2  0A80               	xorlw	128
 24419  0035E4  5983               	subwfb	??i1_sprintf& (0+255),w,b
 24420  0035E6  B0D8               	btfsc	16344,0,c
 24421  0035E8  D004               	goto	i1l1187
 24422                           
 24423                           ; BSR set to: 0
 24424                           ;doprnt.c: 1340: c = prec;
 24425  0035EA  0060  F2C4  F0B3   	movff	i1sprintf@prec,i1sprintf@c
 24426  0035F0  D010               	goto	i1l1189
 24427  0035F2                     i1l1187:
 24428                           
 24429                           ; BSR set to: 0
 24430                           ;doprnt.c: 1341: else if(prec < c)
 24431                           
 24432                           ; BSR set to: 0
 24433  0035F2  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 24434  0035F4  0A80               	xorlw	128
 24435  0035F6  6F83               	movwf	??i1_sprintf& (0+255),b
 24436  0035F8  51B3               	movf	i1sprintf@c& (0+255),w,b
 24437  0035FA  5DB1               	subwf	i1sprintf@prec& (0+255),w,b
 24438  0035FC  0E80               	movlw	128
 24439  0035FE  BFB3               	btfsc	i1sprintf@c& (0+255),7,b
 24440  003600  0E7F               	movlw	127
 24441  003602  5983               	subwfb	??i1_sprintf& (0+255),w,b
 24442  003604  B0D8               	btfsc	16344,0,c
 24443  003606  D005               	goto	i1l1189
 24444                           
 24445                           ; BSR set to: 0
 24446                           ;doprnt.c: 1342: prec = c;
 24447  003608  51B3               	movf	i1sprintf@c& (0+255),w,b
 24448  00360A  6FB1               	movwf	i1sprintf@prec& (0+255),b
 24449  00360C  6BB2               	clrf	(i1sprintf@prec+1)& (0+255),b
 24450  00360E  BFB1               	btfsc	i1sprintf@prec& (0+255),7,b
 24451  003610  07B2               	decf	(i1sprintf@prec+1)& (0+255),f,b
 24452  003612                     i1l1189:
 24453                           
 24454                           ; BSR set to: 0
 24455                           ;doprnt.c: 1345: if(width && flag & 0x03)
 24456                           
 24457                           ; BSR set to: 0
 24458                           
 24459                           ; BSR set to: 0
 24460  003612  51A8               	movf	i1sprintf@width& (0+255),w,b
 24461  003614  11A9               	iorwf	(i1sprintf@width+1)& (0+255),w,b
 24462  003616  B4D8               	btfsc	16344,2,c
 24463  003618  D00D               	goto	i1l1190
 24464                           
 24465                           ; BSR set to: 0
 24466  00361A  0E03               	movlw	3
 24467  00361C  15B4               	andwf	i1sprintf@flag& (0+255),w,b
 24468  00361E  6F83               	movwf	??i1_sprintf& (0+255),b
 24469  003620  0E00               	movlw	0
 24470  003622  15B5               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 24471  003624  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 24472  003626  5183               	movf	??i1_sprintf& (0+255),w,b
 24473  003628  1184               	iorwf	(??i1_sprintf+1)& (0+255),w,b
 24474  00362A  B4D8               	btfsc	16344,2,c
 24475  00362C  D003               	goto	i1l1190
 24476                           
 24477                           ; BSR set to: 0
 24478                           ;doprnt.c: 1346: width--;
 24479  00362E  07A8               	decf	i1sprintf@width& (0+255),f,b
 24480  003630  A0D8               	btfss	16344,0,c
 24481  003632  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 24482  003634                     i1l1190:
 24483                           
 24484                           ; BSR set to: 0
 24485                           ;doprnt.c: 1348: if(flag & 0x4000) {
 24486                           
 24487                           ; BSR set to: 0
 24488  003634  ADB5               	btfss	(i1sprintf@flag+1)& (0+255),6,b
 24489  003636  D013               	goto	i1l1193
 24490                           
 24491                           ; BSR set to: 0
 24492                           ;doprnt.c: 1349: if(width > prec)
 24493  003638  51A8               	movf	i1sprintf@width& (0+255),w,b
 24494  00363A  5DB1               	subwf	i1sprintf@prec& (0+255),w,b
 24495  00363C  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 24496  00363E  0A80               	xorlw	128
 24497  003640  6F83               	movwf	??i1_sprintf& (0+255),b
 24498  003642  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 24499  003644  0A80               	xorlw	128
 24500  003646  5983               	subwfb	??i1_sprintf& (0+255),w,b
 24501  003648  B0D8               	btfsc	16344,0,c
 24502  00364A  D005               	goto	i1l1192
 24503                           
 24504                           ; BSR set to: 0
 24505                           ;doprnt.c: 1350: width -= prec;
 24506  00364C  51B1               	movf	i1sprintf@prec& (0+255),w,b
 24507  00364E  5FA8               	subwf	i1sprintf@width& (0+255),f,b
 24508  003650  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 24509  003652  5BA9               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 24510  003654  D004               	goto	i1l1193
 24511  003656                     i1l1192:
 24512                           
 24513                           ; BSR set to: 0
 24514                           ;doprnt.c: 1351: else
 24515                           ;doprnt.c: 1352: width = 0;
 24516                           
 24517                           ; BSR set to: 0
 24518  003656  0E00               	movlw	0
 24519  003658  6FA9               	movwf	(i1sprintf@width+1)& (0+255),b
 24520  00365A  0E00               	movlw	0
 24521  00365C  6FA8               	movwf	i1sprintf@width& (0+255),b
 24522  00365E                     i1l1193:
 24523                           
 24524                           ; BSR set to: 0
 24525                           ;doprnt.c: 1353: }
 24526                           ;doprnt.c: 1368: if((flag & (0x80|0x800)) == (0x80|0x800)) {
 24527                           
 24528                           ; BSR set to: 0
 24529                           
 24530                           ; BSR set to: 0
 24531  00365E  0E80               	movlw	128
 24532  003660  6F83               	movwf	??i1_sprintf& (0+255),b
 24533  003662  0E08               	movlw	8
 24534  003664  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 24535  003666  0060  F2D0  F085   	movff	i1sprintf@flag,??i1_sprintf+2
 24536  00366C  0060  F2D4  F086   	movff	i1sprintf@flag+1,??i1_sprintf+3
 24537  003672  5183               	movf	??i1_sprintf& (0+255),w,b
 24538  003674  1785               	andwf	(??i1_sprintf+2)& (0+255),f,b
 24539  003676  5184               	movf	(??i1_sprintf+1)& (0+255),w,b
 24540  003678  1786               	andwf	(??i1_sprintf+3)& (0+255),f,b
 24541  00367A  0E80               	movlw	128
 24542  00367C  1985               	xorwf	(??i1_sprintf+2)& (0+255),w,b
 24543  00367E  E115               	bnz	i1l12052
 24544  003680  0E08               	movlw	8
 24545  003682  1986               	xorwf	(??i1_sprintf+3)& (0+255),w,b
 24546  003684  A4D8               	btfss	16344,2,c
 24547  003686  D011               	goto	i1l1196
 24548                           
 24549                           ; BSR set to: 0
 24550                           ;doprnt.c: 1372: if(width > 2)
 24551  003688  BFA9               	btfsc	(i1sprintf@width+1)& (0+255),7,b
 24552  00368A  D00B               	goto	i1l1195
 24553  00368C  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 24554  00368E  E104               	bnz	i1u1616_20
 24555  003690  0E03               	movlw	3
 24556  003692  5DA8               	subwf	i1sprintf@width& (0+255),w,b
 24557  003694  A0D8               	btfss	16344,0,c
 24558  003696  D005               	goto	i1l1195
 24559  003698                     i1u1616_20:
 24560                           
 24561                           ; BSR set to: 0
 24562                           ;doprnt.c: 1373: width -= 2;
 24563  003698  0EFE               	movlw	254
 24564  00369A  27A8               	addwf	i1sprintf@width& (0+255),f,b
 24565  00369C  0EFF               	movlw	255
 24566  00369E  23A9               	addwfc	(i1sprintf@width+1)& (0+255),f,b
 24567  0036A0  D004               	goto	i1l1196
 24568  0036A2                     i1l1195:
 24569                           
 24570                           ; BSR set to: 0
 24571                           ;doprnt.c: 1374: else
 24572                           ;doprnt.c: 1375: width = 0;
 24573                           
 24574                           ; BSR set to: 0
 24575  0036A2  0E00               	movlw	0
 24576  0036A4  6FA9               	movwf	(i1sprintf@width+1)& (0+255),b
 24577  0036A6  0E00               	movlw	0
 24578  0036A8  6FA8               	movwf	i1sprintf@width& (0+255),b
 24579  0036AA                     i1l1196:
 24580  0036AA                     i1l12052:
 24581                           
 24582                           ; BSR set to: 0
 24583                           ;doprnt.c: 1376: }
 24584                           ;doprnt.c: 1381: if(width > c)
 24585  0036AA  0E80               	movlw	128
 24586  0036AC  BFB3               	btfsc	i1sprintf@c& (0+255),7,b
 24587  0036AE  0E7F               	movlw	127
 24588  0036B0  6F83               	movwf	??i1_sprintf& (0+255),b
 24589  0036B2  51A8               	movf	i1sprintf@width& (0+255),w,b
 24590  0036B4  5DB3               	subwf	i1sprintf@c& (0+255),w,b
 24591  0036B6  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 24592  0036B8  0A80               	xorlw	128
 24593  0036BA  5983               	subwfb	??i1_sprintf& (0+255),w,b
 24594  0036BC  B0D8               	btfsc	16344,0,c
 24595  0036BE  D007               	goto	i1l1197
 24596                           
 24597                           ; BSR set to: 0
 24598                           ;doprnt.c: 1382: width -= c;
 24599  0036C0  51B3               	movf	i1sprintf@c& (0+255),w,b
 24600  0036C2  5FA8               	subwf	i1sprintf@width& (0+255),f,b
 24601  0036C4  0E00               	movlw	0
 24602  0036C6  BFB3               	btfsc	i1sprintf@c& (0+255),7,b
 24603  0036C8  0EFF               	movlw	255
 24604  0036CA  5BA9               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 24605  0036CC  D004               	goto	i1l1198
 24606  0036CE                     i1l1197:
 24607                           
 24608                           ; BSR set to: 0
 24609                           ;doprnt.c: 1383: else
 24610                           ;doprnt.c: 1384: width = 0;
 24611                           
 24612                           ; BSR set to: 0
 24613  0036CE  0E00               	movlw	0
 24614  0036D0  6FA9               	movwf	(i1sprintf@width+1)& (0+255),b
 24615  0036D2  0E00               	movlw	0
 24616  0036D4  6FA8               	movwf	i1sprintf@width& (0+255),b
 24617  0036D6                     i1l1198:
 24618                           
 24619                           ; BSR set to: 0
 24620                           ;doprnt.c: 1387: if(flag & 0x04) {
 24621                           
 24622                           ; BSR set to: 0
 24623  0036D6  A5B4               	btfss	i1sprintf@flag& (0+255),2,b
 24624  0036D8  D05B               	goto	i1l1199
 24625                           
 24626                           ; BSR set to: 0
 24627                           ;doprnt.c: 1389: if(flag & 0x02)
 24628  0036DA  A3B4               	btfss	i1sprintf@flag& (0+255),1,b
 24629  0036DC  D014               	goto	i1l1200
 24630                           
 24631                           ; BSR set to: 0
 24632                           ;doprnt.c: 1390: ((*sp++ = (flag & 0x01 ? '-' : '+')));
 24633  0036DE  B1B4               	btfsc	i1sprintf@flag& (0+255),0,b
 24634  0036E0  D004               	goto	i1l1202
 24635                           
 24636                           ; BSR set to: 0
 24637  0036E2  0E00               	movlw	0
 24638  0036E4  6F96               	movwf	(i1_sprintf$2179+1)& (0+255),b
 24639  0036E6  0E2B               	movlw	43
 24640  0036E8  D003               	goto	L33
 24641  0036EA                     i1l1202:
 24642                           
 24643                           ; BSR set to: 0
 24644                           
 24645                           ; BSR set to: 0
 24646  0036EA  0E00               	movlw	0
 24647  0036EC  6F96               	movwf	(i1_sprintf$2179+1)& (0+255),b
 24648  0036EE  0E2D               	movlw	45
 24649  0036F0                     L33:
 24650  0036F0  6F95               	movwf	i1_sprintf$2179& (0+255),b
 24651                           
 24652                           ; BSR set to: 0
 24653                           
 24654                           ; BSR set to: 0
 24655  0036F2  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 24656  0036F8  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 24657  0036FE  0060  F257  FFDF   	movff	i1_sprintf$2179,16351
 24658  003704  D031               	goto	L36
 24659  003706                     i1l1200:
 24660                           
 24661                           ; BSR set to: 0
 24662                           ;doprnt.c: 1396: else
 24663                           ;doprnt.c: 1399: if(flag & 0x01)
 24664  003706  A1B4               	btfss	i1sprintf@flag& (0+255),0,b
 24665  003708  D008               	goto	i1l1206
 24666                           
 24667                           ; BSR set to: 0
 24668                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 24669  00370A  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 24670  003710  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 24671  003716  0E20               	movlw	32
 24672  003718  D026               	goto	L34
 24673  00371A                     i1l1206:
 24674                           
 24675                           ; BSR set to: 0
 24676                           ;doprnt.c: 1403: else if((flag & (0x80|0x800)) == (0x80|0x800)) {
 24677                           
 24678                           ; BSR set to: 0
 24679  00371A  0E80               	movlw	128
 24680  00371C  6F83               	movwf	??i1_sprintf& (0+255),b
 24681  00371E  0E08               	movlw	8
 24682  003720  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 24683  003722  0060  F2D0  F085   	movff	i1sprintf@flag,??i1_sprintf+2
 24684  003728  0060  F2D4  F086   	movff	i1sprintf@flag+1,??i1_sprintf+3
 24685  00372E  5183               	movf	??i1_sprintf& (0+255),w,b
 24686  003730  1785               	andwf	(??i1_sprintf+2)& (0+255),f,b
 24687  003732  5184               	movf	(??i1_sprintf+1)& (0+255),w,b
 24688  003734  1786               	andwf	(??i1_sprintf+3)& (0+255),f,b
 24689  003736  0E80               	movlw	128
 24690  003738  1985               	xorwf	(??i1_sprintf+2)& (0+255),w,b
 24691  00373A  E118               	bnz	i1l12084
 24692  00373C  0E08               	movlw	8
 24693  00373E  1986               	xorwf	(??i1_sprintf+3)& (0+255),w,b
 24694  003740  A4D8               	btfss	16344,2,c
 24695  003742  D014               	goto	i1l1208
 24696                           
 24697                           ; BSR set to: 0
 24698                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 24699  003744  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 24700  00374A  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 24701  003750  0E30               	movlw	48
 24702  003752  6EDF               	movwf	16351,c
 24703                           
 24704                           ; BSR set to: 0
 24705  003754  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 24706  003756  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 24707                           
 24708                           ; BSR set to: 0
 24709                           ;doprnt.c: 1410: ((*sp++ = ('x')));
 24710  003758  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 24711  00375E  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 24712  003764  0E78               	movlw	120
 24713  003766                     L34:
 24714  003766  6EDF               	movwf	16351,c
 24715  003768                     L36:
 24716  003768  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 24717  00376A  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 24718  00376C                     i1l1208:
 24719  00376C                     i1l12084:
 24720                           
 24721                           ; BSR set to: 0
 24722                           ;doprnt.c: 1412: }
 24723                           ;doprnt.c: 1415: if(width)
 24724  00376C  51A8               	movf	i1sprintf@width& (0+255),w,b
 24725  00376E  11A9               	iorwf	(i1sprintf@width+1)& (0+255),w,b
 24726  003770  B4D8               	btfsc	16344,2,c
 24727  003772  D116               	goto	i1l1224
 24728                           
 24729                           ; BSR set to: 0
 24730                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 24731                           
 24732                           ; BSR set to: 0
 24733                           
 24734                           ;doprnt.c: 1416: do
 24735  003774  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 24736  00377A  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 24737  003780  0E30               	movlw	48
 24738  003782  6EDF               	movwf	16351,c
 24739                           
 24740                           ; BSR set to: 0
 24741  003784  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 24742  003786  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 24743                           
 24744                           ; BSR set to: 0
 24745                           ;doprnt.c: 1418: while(--width);
 24746  003788  07A8               	decf	i1sprintf@width& (0+255),f,b
 24747  00378A  A0D8               	btfss	16344,0,c
 24748  00378C  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 24749  00378E  D7EE               	goto	i1l1208
 24750  003790                     i1l1199:
 24751                           
 24752                           ; BSR set to: 0
 24753                           ;doprnt.c: 1422: {
 24754                           ;doprnt.c: 1424: if(width
 24755                           ;doprnt.c: 1426: && !(flag & 0x08)
 24756                           ;doprnt.c: 1428: )
 24757                           
 24758                           ; BSR set to: 0
 24759  003790  51A8               	movf	i1sprintf@width& (0+255),w,b
 24760  003792  11A9               	iorwf	(i1sprintf@width+1)& (0+255),w,b
 24761  003794  A4D8               	btfss	16344,2,c
 24762                           
 24763                           ; BSR set to: 0
 24764  003796  B7B4               	btfsc	i1sprintf@flag& (0+255),3,b
 24765  003798  D011               	goto	i1u1627_20
 24766  00379A                     i1u1626_20:
 24767                           
 24768                           ; BSR set to: 0
 24769                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 24770                           
 24771                           ; BSR set to: 0
 24772                           
 24773                           ;doprnt.c: 1429: do
 24774  00379A  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 24775  0037A0  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 24776  0037A6  0E20               	movlw	32
 24777  0037A8  6EDF               	movwf	16351,c
 24778                           
 24779                           ; BSR set to: 0
 24780  0037AA  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 24781  0037AC  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 24782                           
 24783                           ; BSR set to: 0
 24784                           ;doprnt.c: 1431: while(--width);
 24785  0037AE  07A8               	decf	i1sprintf@width& (0+255),f,b
 24786  0037B0  A0D8               	btfss	16344,0,c
 24787  0037B2  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 24788  0037B4  51A8               	movf	i1sprintf@width& (0+255),w,b
 24789  0037B6  11A9               	iorwf	(i1sprintf@width+1)& (0+255),w,b
 24790  0037B8  A4D8               	btfss	16344,2,c
 24791  0037BA  D7EF               	goto	i1u1626_20
 24792  0037BC                     i1u1627_20:
 24793                           
 24794                           ; BSR set to: 0
 24795                           ;doprnt.c: 1434: if(flag & 0x02)
 24796                           
 24797                           ; BSR set to: 0
 24798  0037BC  A3B4               	btfss	i1sprintf@flag& (0+255),1,b
 24799  0037BE  D014               	goto	i1l1216
 24800                           
 24801                           ; BSR set to: 0
 24802                           ;doprnt.c: 1435: ((*sp++ = (flag & 0x01 ? '-' : '+')));
 24803  0037C0  B1B4               	btfsc	i1sprintf@flag& (0+255),0,b
 24804  0037C2  D004               	goto	i1l1218
 24805                           
 24806                           ; BSR set to: 0
 24807  0037C4  0E00               	movlw	0
 24808  0037C6  6F98               	movwf	(i1_sprintf$2180+1)& (0+255),b
 24809  0037C8  0E2B               	movlw	43
 24810  0037CA  D003               	goto	L35
 24811  0037CC                     i1l1218:
 24812                           
 24813                           ; BSR set to: 0
 24814                           
 24815                           ; BSR set to: 0
 24816  0037CC  0E00               	movlw	0
 24817  0037CE  6F98               	movwf	(i1_sprintf$2180+1)& (0+255),b
 24818  0037D0  0E2D               	movlw	45
 24819  0037D2                     L35:
 24820  0037D2  6F97               	movwf	i1_sprintf$2180& (0+255),b
 24821                           
 24822                           ; BSR set to: 0
 24823                           
 24824                           ; BSR set to: 0
 24825  0037D4  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 24826  0037DA  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 24827  0037E0  0060  F25F  FFDF   	movff	i1_sprintf$2180,16351
 24828  0037E6  D00A               	goto	i1l12114
 24829  0037E8                     i1l1216:
 24830                           
 24831                           ; BSR set to: 0
 24832                           ;doprnt.c: 1443: else if(flag & 0x01)
 24833  0037E8  A1B4               	btfss	i1sprintf@flag& (0+255),0,b
 24834  0037EA  D00A               	goto	i1l1222
 24835                           
 24836                           ; BSR set to: 0
 24837                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 24838  0037EC  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 24839  0037F2  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 24840  0037F8  0E20               	movlw	32
 24841  0037FA  6EDF               	movwf	16351,c
 24842  0037FC                     i1l12114:
 24843                           
 24844                           ; BSR set to: 0
 24845  0037FC  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 24846  0037FE  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 24847  003800                     i1l1222:
 24848                           
 24849                           ; BSR set to: 0
 24850                           ;doprnt.c: 1454: if((flag & (0x80|0x800)) == (0x80|0x800)) {
 24851                           
 24852                           ; BSR set to: 0
 24853                           
 24854                           ; BSR set to: 0
 24855  003800  0E80               	movlw	128
 24856  003802  6F83               	movwf	??i1_sprintf& (0+255),b
 24857  003804  0E08               	movlw	8
 24858  003806  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 24859  003808  0060  F2D0  F085   	movff	i1sprintf@flag,??i1_sprintf+2
 24860  00380E  0060  F2D4  F086   	movff	i1sprintf@flag+1,??i1_sprintf+3
 24861  003814  5183               	movf	??i1_sprintf& (0+255),w,b
 24862  003816  1785               	andwf	(??i1_sprintf+2)& (0+255),f,b
 24863  003818  5184               	movf	(??i1_sprintf+1)& (0+255),w,b
 24864  00381A  1786               	andwf	(??i1_sprintf+3)& (0+255),f,b
 24865  00381C  0E80               	movlw	128
 24866  00381E  1985               	xorwf	(??i1_sprintf+2)& (0+255),w,b
 24867  003820  E103               	bnz	i1u1631_21
 24868  003822  0E08               	movlw	8
 24869  003824  1986               	xorwf	(??i1_sprintf+3)& (0+255),w,b
 24870  003826  A4D8               	btfss	16344,2,c
 24871  003828                     i1u1631_21:
 24872  003828  D0BB               	goto	i1l1224
 24873                           
 24874                           ; BSR set to: 0
 24875                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 24876  00382A  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 24877  003830  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 24878  003836  0E30               	movlw	48
 24879  003838  6EDF               	movwf	16351,c
 24880                           
 24881                           ; BSR set to: 0
 24882  00383A  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 24883  00383C  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 24884                           
 24885                           ; BSR set to: 0
 24886                           ;doprnt.c: 1464: ((*sp++ = ('x')));
 24887  00383E  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 24888  003844  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 24889  00384A  0E78               	movlw	120
 24890  00384C  6EDF               	movwf	16351,c
 24891  00384E  D0A6               	goto	i1l12136
 24892  003850                     
 24893                           ; BSR set to: 0
 24894                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 24895                           
 24896                           ; BSR set to: 0
 24897  003850  0060  F2C4  F083   	movff	i1sprintf@prec,??i1_sprintf
 24898  003856  0060  F2C8  F084   	movff	i1sprintf@prec+1,??i1_sprintf+1
 24899  00385C  90D8               	bcf	16344,0,c
 24900  00385E  3783               	rlcf	??i1_sprintf& (0+255),f,b
 24901  003860  3784               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 24902  003862  90D8               	bcf	16344,0,c
 24903  003864  3783               	rlcf	??i1_sprintf& (0+255),f,b
 24904  003866  3784               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 24905  003868  0ED9               	movlw	low _dpowers
 24906  00386A  2583               	addwf	??i1_sprintf& (0+255),w,b
 24907  00386C  6EF6               	movwf	16374,c
 24908  00386E  0EFA               	movlw	high _dpowers
 24909  003870  2184               	addwfc	(??i1_sprintf+1)& (0+255),w,b
 24910  003872  6EF7               	movwf	16375,c
 24911  003874                     	if	1	;There are 3 active tblptr bytes
 24912  003874  6AF8               	clrf	16376,c
 24913  003876  0E00               	movlw	low (__mediumconst shr (0+16))
 24914  003878  22F8               	addwfc	16376,f,c
 24915  00387A                     	endif
 24916  00387A  0009               	tblrd		*+
 24917  00387C  006F FFD4  F008    	movff	16373,i1___lldiv@divisor
 24918  003882  0009               	tblrd		*+
 24919  003884  006F FFD4  F009    	movff	16373,i1___lldiv@divisor+1
 24920  00388A  0009               	tblrd		*+
 24921  00388C  006F FFD4  F00A    	movff	16373,i1___lldiv@divisor+2
 24922  003892  000A               	tblrd		*-
 24923  003894  006F FFD4  F00B    	movff	16373,i1___lldiv@divisor+3
 24924  00389A  0060  F2A8  F004   	movff	i1sprintf@val,i1___lldiv@dividend
 24925  0038A0  0060  F2AC  F005   	movff	i1sprintf@val+1,i1___lldiv@dividend+1
 24926  0038A6  0060  F2B0  F006   	movff	i1sprintf@val+2,i1___lldiv@dividend+2
 24927  0038AC  0060  F2B4  F007   	movff	i1sprintf@val+3,i1___lldiv@dividend+3
 24928  0038B2  EC04  F03D         	call	i1___lldiv	;wreg free
 24929  0038B6  0060  F010  F011   	movff	?i1___lldiv,i1___llmod@dividend
 24930  0038BC  0060  F014  F012   	movff	?i1___lldiv+1,i1___llmod@dividend+1
 24931  0038C2  0060  F018  F013   	movff	?i1___lldiv+2,i1___llmod@dividend+2
 24932  0038C8  0060  F01C  F014   	movff	?i1___lldiv+3,i1___llmod@dividend+3
 24933  0038CE  0E0A               	movlw	10
 24934  0038D0  6E15               	movwf	i1___llmod@divisor,c
 24935  0038D2  0E00               	movlw	0
 24936  0038D4  6E16               	movwf	i1___llmod@divisor+1,c
 24937  0038D6  0E00               	movlw	0
 24938  0038D8  6E17               	movwf	i1___llmod@divisor+2,c
 24939  0038DA  0E00               	movlw	0
 24940  0038DC  6E18               	movwf	i1___llmod@divisor+3,c
 24941  0038DE  EC70  F03F         	call	i1___llmod	;wreg free
 24942  0038E2  5011               	movf	?i1___llmod,w,c
 24943  0038E4  0F30               	addlw	48
 24944  0038E6  0100               	movlb	0	; () banked
 24945  0038E8  6FB3               	movwf	i1sprintf@c& (0+255),b
 24946                           
 24947                           ;doprnt.c: 1491: break;
 24948  0038EA  D04F               	goto	i1l1228
 24949  0038EC                     
 24950                           ; BSR set to: 0
 24951                           ;doprnt.c: 1499: {
 24952                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 24953                           
 24954                           ; BSR set to: 0
 24955  0038EC  0060  F2A8  F004   	movff	i1sprintf@val,i1___lldiv@dividend
 24956  0038F2  0060  F2AC  F005   	movff	i1sprintf@val+1,i1___lldiv@dividend+1
 24957  0038F8  0060  F2B0  F006   	movff	i1sprintf@val+2,i1___lldiv@dividend+2
 24958  0038FE  0060  F2B4  F007   	movff	i1sprintf@val+3,i1___lldiv@dividend+3
 24959  003904  0060  F2C4  F083   	movff	i1sprintf@prec,??i1_sprintf
 24960  00390A  0060  F2C8  F084   	movff	i1sprintf@prec+1,??i1_sprintf+1
 24961  003910  90D8               	bcf	16344,0,c
 24962  003912  3783               	rlcf	??i1_sprintf& (0+255),f,b
 24963  003914  3784               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 24964  003916  90D8               	bcf	16344,0,c
 24965  003918  3783               	rlcf	??i1_sprintf& (0+255),f,b
 24966  00391A  3784               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 24967  00391C  0E4F               	movlw	low _hexpowers
 24968  00391E  2583               	addwf	??i1_sprintf& (0+255),w,b
 24969  003920  6EF6               	movwf	16374,c
 24970  003922  0EFB               	movlw	high _hexpowers
 24971  003924  2184               	addwfc	(??i1_sprintf+1)& (0+255),w,b
 24972  003926  6EF7               	movwf	16375,c
 24973  003928                     	if	1	;There are 3 active tblptr bytes
 24974  003928  6AF8               	clrf	16376,c
 24975  00392A  0E00               	movlw	low (__mediumconst shr (0+16))
 24976  00392C  22F8               	addwfc	16376,f,c
 24977  00392E                     	endif
 24978  00392E  0009               	tblrd		*+
 24979  003930  006F FFD4  F008    	movff	16373,i1___lldiv@divisor
 24980  003936  0009               	tblrd		*+
 24981  003938  006F FFD4  F009    	movff	16373,i1___lldiv@divisor+1
 24982  00393E  0009               	tblrd		*+
 24983  003940  006F FFD4  F00A    	movff	16373,i1___lldiv@divisor+2
 24984  003946  000A               	tblrd		*-
 24985  003948  006F FFD4  F00B    	movff	16373,i1___lldiv@divisor+3
 24986  00394E  EC04  F03D         	call	i1___lldiv	;wreg free
 24987  003952  5004               	movf	?i1___lldiv,w,c
 24988  003954  0B0F               	andlw	15
 24989  003956  0100               	movlb	0	; () banked
 24990  003958  6F8C               	movwf	i1sprintf@idx& (0+255),b
 24991                           
 24992                           ; BSR set to: 0
 24993                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 24994  00395A  518C               	movf	i1sprintf@idx& (0+255),w,b
 24995  00395C  0D01               	mullw	1
 24996  00395E  0ECC               	movlw	low STR_109
 24997  003960  24F3               	addwf	16371,w,c
 24998  003962  6EF6               	movwf	16374,c
 24999  003964  0EFE               	movlw	high STR_109
 25000  003966  20F4               	addwfc	16372,w,c
 25001  003968  6EF7               	movwf	16375,c
 25002  00396A                     	if	1	;There are 3 active tblptr bytes
 25003  00396A  6AF8               	clrf	16376,c
 25004  00396C  0E00               	movlw	low (__mediumconst shr (0+16))
 25005  00396E  22F8               	addwfc	16376,f,c
 25006  003970                     	endif
 25007  003970  0008               	tblrd		*
 25008  003972  006F FFD4  F0B3    	movff	16373,i1sprintf@c
 25009                           
 25010                           ; BSR set to: 0
 25011                           ;doprnt.c: 1523: }
 25012                           
 25013                           ;doprnt.c: 1508: }
 25014                           ;doprnt.c: 1510: break;
 25015  003978  D008               	goto	i1l1228
 25016  00397A                     i1l12132:
 25017                           
 25018                           ; BSR set to: 0
 25019  00397A  51B4               	movf	i1sprintf@flag& (0+255),w,b
 25020  00397C  0B80               	andlw	128
 25021                           
 25022                           ; Switch size 1, requested type "space"
 25023                           ; Number of cases is 2, Range of values is 0 to 128
 25024                           ; switch strategies available:
 25025                           ; Name         Instructions Cycles
 25026                           ; simple_byte            7     4 (average)
 25027                           ;	Chosen strategy is simple_byte
 25028  00397E  0A00               	xorlw	0	; case 0
 25029  003980  B4D8               	btfsc	16344,2,c
 25030  003982  D766               	goto	i1l1227
 25031  003984  0A80               	xorlw	128	; case 128
 25032  003986  B4D8               	btfsc	16344,2,c
 25033  003988  D7B1               	goto	i1l1229
 25034  00398A                     i1l1228:
 25035                           
 25036                           ; BSR set to: 0
 25037                           ;doprnt.c: 1524: ((*sp++ = (c)));
 25038                           
 25039                           ; BSR set to: 0
 25040  00398A  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 25041  003990  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 25042  003996  0060  F2CF  FFDF   	movff	i1sprintf@c,16351
 25043  00399C                     i1l12136:
 25044                           
 25045                           ; BSR set to: 0
 25046  00399C  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 25047  00399E  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 25048  0039A0                     i1l1224:
 25049                           
 25050                           ; BSR set to: 0
 25051                           
 25052                           ; BSR set to: 0
 25053  0039A0  07B1               	decf	i1sprintf@prec& (0+255),f,b
 25054  0039A2  A0D8               	btfss	16344,0,c
 25055  0039A4  07B2               	decf	(i1sprintf@prec+1)& (0+255),f,b
 25056  0039A6  29B1               	incf	i1sprintf@prec& (0+255),w,b
 25057  0039A8  E1E8               	bnz	i1l12132
 25058  0039AA  29B2               	incf	(i1sprintf@prec+1)& (0+255),w,b
 25059  0039AC  A4D8               	btfss	16344,2,c
 25060  0039AE  D7E5               	goto	i1l1226
 25061                           
 25062                           ; BSR set to: 0
 25063                           ;doprnt.c: 1525: }
 25064                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 25065  0039B0  B7B4               	btfsc	i1sprintf@flag& (0+255),3,b
 25066                           
 25067                           ; BSR set to: 0
 25068  0039B2  BFA9               	btfsc	(i1sprintf@width+1)& (0+255),7,b
 25069  0039B4  D016               	goto	i1u1635_20
 25070  0039B6  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 25071  0039B8  E103               	bnz	i1l12142
 25072  0039BA  05A8               	decf	i1sprintf@width& (0+255),w,b
 25073  0039BC  A0D8               	btfss	16344,0,c
 25074  0039BE  D011               	goto	i1u1635_20
 25075  0039C0                     i1u1634_20:
 25076  0039C0                     i1l12142:
 25077                           
 25078                           ; BSR set to: 0
 25079                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 25080  0039C0  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 25081  0039C6  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 25082  0039CC  0E20               	movlw	32
 25083  0039CE  6EDF               	movwf	16351,c
 25084                           
 25085                           ; BSR set to: 0
 25086  0039D0  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 25087  0039D2  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 25088                           
 25089                           ; BSR set to: 0
 25090                           ;doprnt.c: 1531: while(--width);
 25091  0039D4  07A8               	decf	i1sprintf@width& (0+255),f,b
 25092  0039D6  A0D8               	btfss	16344,0,c
 25093  0039D8  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 25094  0039DA  51A8               	movf	i1sprintf@width& (0+255),w,b
 25095  0039DC  11A9               	iorwf	(i1sprintf@width+1)& (0+255),w,b
 25096  0039DE  A4D8               	btfss	16344,2,c
 25097  0039E0  D7EF               	goto	i1u1634_20
 25098  0039E2                     i1u1635_20:
 25099                           
 25100                           ; BSR set to: 0
 25101                           
 25102                           ; BSR set to: 0
 25103                           
 25104                           ; BSR set to: 0
 25105                           
 25106                           ; BSR set to: 0
 25107  0039E2  0060  F1AF  FFF6   	movff	i1sprintf@f,16374
 25108  0039E8  0060  F1B3  FFF7   	movff	i1sprintf@f+1,16375
 25109  0039EE  4B6B               	infsnz	i1sprintf@f& (0+255),f,b
 25110  0039F0  2B6C               	incf	(i1sprintf@f+1)& (0+255),f,b
 25111  0039F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25112  0039F2  6AF8               	clrf	16376,c
 25113  0039F4                     	endif
 25114  0039F4                     	if	0	;tblptru may be non-zero
 25115  0039F4                     	endif
 25116  0039F4  0008               	tblrd		*
 25117  0039F6  006F FFD4  F0B3    	movff	16373,i1sprintf@c
 25118  0039FC  51B3               	movf	i1sprintf@c& (0+255),w,b
 25119  0039FE  A4D8               	btfss	16344,2,c
 25120  003A00  EFBC  F00E         	goto	i1l963
 25121  003A04                     i1u1636_20:
 25122                           
 25123                           ; BSR set to: 0
 25124                           ;doprnt.c: 1538: *sp = 0;
 25125                           
 25126                           ; BSR set to: 0
 25127                           
 25128                           ;doprnt.c: 1533: }
 25129                           ;doprnt.c: 1535: alldone:
 25130                           
 25131                           ; BSR set to: 0
 25132  003A04  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 25133  003A0A  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 25134  003A10  0E00               	movlw	0
 25135  003A12  6EDF               	movwf	16351,c
 25136  003A14  0012               	return	
 25137  003A16                     __end_ofi1_sprintf:
 25138                           	opt stack 0
 25139                           
 25140 ;; *************** function i1_scale *****************
 25141 ;; Defined at:
 25142 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 25143 ;; Parameters:    Size  Location     Type
 25144 ;;  scl             1    wreg     char 
 25145 ;; Auto vars:     Size  Location     Type
 25146 ;;  scl             1   71[COMRAM] char 
 25147 ;; Return value:  Size  Location     Type
 25148 ;;                  3   65[COMRAM] char 
 25149 ;; Registers used:
 25150 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25151 ;; Tracked objects:
 25152 ;;		On entry : 0/0
 25153 ;;		On exit  : 0/0
 25154 ;;		Unchanged: 0/0
 25155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25156 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25157 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25159 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25160 ;;Total ram usage:        7 bytes
 25161 ;; Hardware stack levels used:    1
 25162 ;; Hardware stack levels required when called:    2
 25163 ;; This function calls:
 25164 ;;		i1___awdiv
 25165 ;;		i1___awmod
 25166 ;;		i1___ftmul
 25167 ;;		i1___wmul
 25168 ;; This function is called by:
 25169 ;;		i1_sprintf
 25170 ;; This function uses a non-reentrant model
 25171 ;;
 25172                           
 25173                           	psect	text84
 25174  003F26                     __ptext84:
 25175                           	opt stack 0
 25176  003F26                     i1_scale:
 25177                           	opt stack 16
 25178                           
 25179                           ; BSR set to: 0
 25180                           ;incstack = 0
 25181                           ;i1scale@scl stored from wreg
 25182  003F26  6E48               	movwf	i1scale@scl,c
 25183                           
 25184                           ;doprnt.c: 428: if(scl < 0) {
 25185  003F28  AE48               	btfss	i1scale@scl,7,c
 25186  003F2A  D137               	goto	i1l952
 25187                           
 25188                           ;doprnt.c: 429: scl = -scl;
 25189  003F2C  6C48               	negf	i1scale@scl,c
 25190                           
 25191                           ;doprnt.c: 430: if(scl>=110)
 25192  003F2E  5048               	movf	i1scale@scl,w,c
 25193  003F30  0A80               	xorlw	128
 25194  003F32  0F12               	addlw	-238
 25195  003F34  A0D8               	btfss	16344,0,c
 25196  003F36  D0B0               	goto	i1l953
 25197                           
 25198                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 25199  003F38  0E00               	movlw	0
 25200  003F3A  6E15               	movwf	i1___wmul@multiplicand+1,c
 25201  003F3C  0E03               	movlw	3
 25202  003F3E  6E14               	movwf	i1___wmul@multiplicand,c
 25203  003F40  0E00               	movlw	0
 25204  003F42  6E0D               	movwf	i1___awdiv@divisor+1,c
 25205  003F44  0E0A               	movlw	10
 25206  003F46  6E0C               	movwf	i1___awdiv@divisor,c
 25207  003F48  0E00               	movlw	0
 25208  003F4A  6E07               	movwf	i1___awmod@divisor+1,c
 25209  003F4C  0E64               	movlw	100
 25210  003F4E  6E06               	movwf	i1___awmod@divisor,c
 25211  003F50  5048               	movf	i1scale@scl,w,c
 25212  003F52  6E04               	movwf	i1___awmod@dividend,c
 25213  003F54  6A05               	clrf	i1___awmod@dividend+1,c
 25214  003F56  BE04               	btfsc	i1___awmod@dividend,7,c
 25215  003F58  0605               	decf	i1___awmod@dividend+1,f,c
 25216  003F5A  ECFE  F03E         	call	i1___awmod	;wreg free
 25217  003F5E  0060  F010  F00A   	movff	?i1___awmod,i1___awdiv@dividend
 25218  003F64  0060  F014  F00B   	movff	?i1___awmod+1,i1___awdiv@dividend+1
 25219  003F6A  EC49  F03D         	call	i1___awdiv	;wreg free
 25220  003F6E  0E09               	movlw	9
 25221  003F70  240A               	addwf	?i1___awdiv,w,c
 25222  003F72  6E12               	movwf	i1___wmul@multiplier,c
 25223  003F74  0E00               	movlw	0
 25224  003F76  200B               	addwfc	?i1___awdiv+1,w,c
 25225  003F78  6E13               	movwf	i1___wmul@multiplier+1,c
 25226  003F7A  ECC0  F044         	call	i1___wmul	;wreg free
 25227  003F7E  0E28               	movlw	low __npowers_
 25228  003F80  2412               	addwf	?i1___wmul,w,c
 25229  003F82  6EF6               	movwf	16374,c
 25230  003F84  0EFB               	movlw	high __npowers_
 25231  003F86  2013               	addwfc	?i1___wmul+1,w,c
 25232  003F88  6EF7               	movwf	16375,c
 25233  003F8A                     	if	1	;There are 3 active tblptr bytes
 25234  003F8A  6AF8               	clrf	16376,c
 25235  003F8C  0E00               	movlw	low (__mediumconst shr (0+16))
 25236  003F8E  22F8               	addwfc	16376,f,c
 25237  003F90                     	endif
 25238  003F90  0009               	tblrd		*+
 25239  003F92  006F FFD4  F036    	movff	16373,i1___ftmul@f2
 25240  003F98  0009               	tblrd		*+
 25241  003F9A  006F FFD4  F037    	movff	16373,i1___ftmul@f2+1
 25242  003FA0  000A               	tblrd		*-
 25243  003FA2  006F FFD4  F038    	movff	16373,i1___ftmul@f2+2
 25244  003FA8  0E00               	movlw	0
 25245  003FAA  6E0D               	movwf	i1___awdiv@divisor+1,c
 25246  003FAC  0E64               	movlw	100
 25247  003FAE  6E0C               	movwf	i1___awdiv@divisor,c
 25248  003FB0  5048               	movf	i1scale@scl,w,c
 25249  003FB2  6E0A               	movwf	i1___awdiv@dividend,c
 25250  003FB4  6A0B               	clrf	i1___awdiv@dividend+1,c
 25251  003FB6  BE0A               	btfsc	i1___awdiv@dividend,7,c
 25252  003FB8  060B               	decf	i1___awdiv@dividend+1,f,c
 25253  003FBA  EC49  F03D         	call	i1___awdiv	;wreg free
 25254  003FBE  0E12               	movlw	18
 25255  003FC0  240A               	addwf	?i1___awdiv,w,c
 25256  003FC2  6E12               	movwf	i1___wmul@multiplier,c
 25257  003FC4  0E00               	movlw	0
 25258  003FC6  200B               	addwfc	?i1___awdiv+1,w,c
 25259  003FC8  6E13               	movwf	i1___wmul@multiplier+1,c
 25260  003FCA  0E00               	movlw	0
 25261  003FCC  6E15               	movwf	i1___wmul@multiplicand+1,c
 25262  003FCE  0E03               	movlw	3
 25263  003FD0  6E14               	movwf	i1___wmul@multiplicand,c
 25264  003FD2  ECC0  F044         	call	i1___wmul	;wreg free
 25265  003FD6  0E28               	movlw	low __npowers_
 25266  003FD8  2412               	addwf	?i1___wmul,w,c
 25267  003FDA  6EF6               	movwf	16374,c
 25268  003FDC  0EFB               	movlw	high __npowers_
 25269  003FDE  2013               	addwfc	?i1___wmul+1,w,c
 25270  003FE0  6EF7               	movwf	16375,c
 25271  003FE2                     	if	1	;There are 3 active tblptr bytes
 25272  003FE2  6AF8               	clrf	16376,c
 25273  003FE4  0E00               	movlw	low (__mediumconst shr (0+16))
 25274  003FE6  22F8               	addwfc	16376,f,c
 25275  003FE8                     	endif
 25276  003FE8  0009               	tblrd		*+
 25277  003FEA  006F FFD4  F033    	movff	16373,i1___ftmul@f1
 25278  003FF0  0009               	tblrd		*+
 25279  003FF2  006F FFD4  F034    	movff	16373,i1___ftmul@f1+1
 25280  003FF8  000A               	tblrd		*-
 25281  003FFA  006F FFD4  F035    	movff	16373,i1___ftmul@f1+2
 25282  004000  ECE0  F032         	call	i1___ftmul	;wreg free
 25283  004004  0060  F0CC  F045   	movff	?i1___ftmul,i1_scale$3043
 25284  00400A  0060  F0D0  F046   	movff	?i1___ftmul+1,i1_scale$3043+1
 25285  004010  0060  F0D4  F047   	movff	?i1___ftmul+2,i1_scale$3043+2
 25286                           
 25287                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 25288  004016  0060  F114  F033   	movff	i1_scale$3043,i1___ftmul@f1
 25289  00401C  0060  F118  F034   	movff	i1_scale$3043+1,i1___ftmul@f1+1
 25290  004022  0060  F11C  F035   	movff	i1_scale$3043+2,i1___ftmul@f1+2
 25291  004028  0E00               	movlw	0
 25292  00402A  6E15               	movwf	i1___wmul@multiplicand+1,c
 25293  00402C  0E03               	movlw	3
 25294  00402E  6E14               	movwf	i1___wmul@multiplicand,c
 25295  004030  0E00               	movlw	0
 25296  004032  6E07               	movwf	i1___awmod@divisor+1,c
 25297  004034  0E0A               	movlw	10
 25298  004036  6E06               	movwf	i1___awmod@divisor,c
 25299  004038  5048               	movf	i1scale@scl,w,c
 25300  00403A  6E04               	movwf	i1___awmod@dividend,c
 25301  00403C  6A05               	clrf	i1___awmod@dividend+1,c
 25302  00403E  BE04               	btfsc	i1___awmod@dividend,7,c
 25303  004040  0605               	decf	i1___awmod@dividend+1,f,c
 25304  004042  ECFE  F03E         	call	i1___awmod	;wreg free
 25305  004046  0060  F010  F012   	movff	?i1___awmod,i1___wmul@multiplier
 25306  00404C  0060  F014  F013   	movff	?i1___awmod+1,i1___wmul@multiplier+1
 25307  004052  ECC0  F044         	call	i1___wmul	;wreg free
 25308  004056  0E28               	movlw	low __npowers_
 25309  004058  2412               	addwf	?i1___wmul,w,c
 25310  00405A  6EF6               	movwf	16374,c
 25311  00405C  0EFB               	movlw	high __npowers_
 25312  00405E  2013               	addwfc	?i1___wmul+1,w,c
 25313  004060  6EF7               	movwf	16375,c
 25314  004062                     	if	1	;There are 3 active tblptr bytes
 25315  004062  6AF8               	clrf	16376,c
 25316  004064  0E00               	movlw	low (__mediumconst shr (0+16))
 25317  004066  22F8               	addwfc	16376,f,c
 25318  004068                     	endif
 25319  004068  0009               	tblrd		*+
 25320  00406A  006F FFD4  F036    	movff	16373,i1___ftmul@f2
 25321  004070  0009               	tblrd		*+
 25322  004072  006F FFD4  F037    	movff	16373,i1___ftmul@f2+1
 25323  004078  000A               	tblrd		*-
 25324  00407A  006F FFD4  F038    	movff	16373,i1___ftmul@f2+2
 25325  004080  ECE0  F032         	call	i1___ftmul	;wreg free
 25326  004084  0060  F0CC  F042   	movff	?i1___ftmul,?i1_scale
 25327  00408A  0060  F0D0  F043   	movff	?i1___ftmul+1,?i1_scale+1
 25328  004090  0060  F0D4  F044   	movff	?i1___ftmul+2,?i1_scale+2
 25329  004096  0012               	return	
 25330  004098                     i1l953:
 25331                           
 25332                           ;doprnt.c: 432: else if(scl > 10)
 25333  004098  5048               	movf	i1scale@scl,w,c
 25334  00409A  0A80               	xorlw	128
 25335  00409C  0F75               	addlw	-139
 25336  00409E  A0D8               	btfss	16344,0,c
 25337  0040A0  D064               	goto	i1l956
 25338                           
 25339                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 25340  0040A2  0E00               	movlw	0
 25341  0040A4  6E0D               	movwf	i1___awdiv@divisor+1,c
 25342  0040A6  0E0A               	movlw	10
 25343  0040A8  6E0C               	movwf	i1___awdiv@divisor,c
 25344  0040AA  5048               	movf	i1scale@scl,w,c
 25345  0040AC  6E0A               	movwf	i1___awdiv@dividend,c
 25346  0040AE  6A0B               	clrf	i1___awdiv@dividend+1,c
 25347  0040B0  BE0A               	btfsc	i1___awdiv@dividend,7,c
 25348  0040B2  060B               	decf	i1___awdiv@dividend+1,f,c
 25349  0040B4  EC49  F03D         	call	i1___awdiv	;wreg free
 25350  0040B8  0E09               	movlw	9
 25351  0040BA  240A               	addwf	?i1___awdiv,w,c
 25352  0040BC  6E12               	movwf	i1___wmul@multiplier,c
 25353  0040BE  0E00               	movlw	0
 25354  0040C0  200B               	addwfc	?i1___awdiv+1,w,c
 25355  0040C2  6E13               	movwf	i1___wmul@multiplier+1,c
 25356  0040C4  0E00               	movlw	0
 25357  0040C6  6E15               	movwf	i1___wmul@multiplicand+1,c
 25358  0040C8  0E03               	movlw	3
 25359  0040CA  6E14               	movwf	i1___wmul@multiplicand,c
 25360  0040CC  ECC0  F044         	call	i1___wmul	;wreg free
 25361  0040D0  0E28               	movlw	low __npowers_
 25362  0040D2  2412               	addwf	?i1___wmul,w,c
 25363  0040D4  6EF6               	movwf	16374,c
 25364  0040D6  0EFB               	movlw	high __npowers_
 25365  0040D8  2013               	addwfc	?i1___wmul+1,w,c
 25366  0040DA  6EF7               	movwf	16375,c
 25367  0040DC                     	if	1	;There are 3 active tblptr bytes
 25368  0040DC  6AF8               	clrf	16376,c
 25369  0040DE  0E00               	movlw	low (__mediumconst shr (0+16))
 25370  0040E0  22F8               	addwfc	16376,f,c
 25371  0040E2                     	endif
 25372  0040E2  0009               	tblrd		*+
 25373  0040E4  006F FFD4  F033    	movff	16373,i1___ftmul@f1
 25374  0040EA  0009               	tblrd		*+
 25375  0040EC  006F FFD4  F034    	movff	16373,i1___ftmul@f1+1
 25376  0040F2  000A               	tblrd		*-
 25377  0040F4  006F FFD4  F035    	movff	16373,i1___ftmul@f1+2
 25378  0040FA  0E00               	movlw	0
 25379  0040FC  6E15               	movwf	i1___wmul@multiplicand+1,c
 25380  0040FE  0E03               	movlw	3
 25381  004100  6E14               	movwf	i1___wmul@multiplicand,c
 25382  004102  0E00               	movlw	0
 25383  004104  6E07               	movwf	i1___awmod@divisor+1,c
 25384  004106  0E0A               	movlw	10
 25385  004108  6E06               	movwf	i1___awmod@divisor,c
 25386  00410A  5048               	movf	i1scale@scl,w,c
 25387  00410C  6E04               	movwf	i1___awmod@dividend,c
 25388  00410E  6A05               	clrf	i1___awmod@dividend+1,c
 25389  004110  BE04               	btfsc	i1___awmod@dividend,7,c
 25390  004112  0605               	decf	i1___awmod@dividend+1,f,c
 25391  004114  ECFE  F03E         	call	i1___awmod	;wreg free
 25392  004118  0060  F010  F012   	movff	?i1___awmod,i1___wmul@multiplier
 25393  00411E  0060  F014  F013   	movff	?i1___awmod+1,i1___wmul@multiplier+1
 25394  004124  ECC0  F044         	call	i1___wmul	;wreg free
 25395  004128  0E28               	movlw	low __npowers_
 25396  00412A  2412               	addwf	?i1___wmul,w,c
 25397  00412C  6EF6               	movwf	16374,c
 25398  00412E  0EFB               	movlw	high __npowers_
 25399  004130  2013               	addwfc	?i1___wmul+1,w,c
 25400  004132  6EF7               	movwf	16375,c
 25401  004134                     	if	1	;There are 3 active tblptr bytes
 25402  004134  6AF8               	clrf	16376,c
 25403  004136  0E00               	movlw	low (__mediumconst shr (0+16))
 25404  004138  22F8               	addwfc	16376,f,c
 25405  00413A                     	endif
 25406  00413A  0009               	tblrd		*+
 25407  00413C  006F FFD4  F036    	movff	16373,i1___ftmul@f2
 25408  004142  0009               	tblrd		*+
 25409  004144  006F FFD4  F037    	movff	16373,i1___ftmul@f2+1
 25410  00414A  000A               	tblrd		*-
 25411  00414C  006F FFD4  F038    	movff	16373,i1___ftmul@f2+2
 25412  004152  ECE0  F032         	call	i1___ftmul	;wreg free
 25413  004156  0060  F0CC  F042   	movff	?i1___ftmul,?i1_scale
 25414  00415C  0060  F0D0  F043   	movff	?i1___ftmul+1,?i1_scale+1
 25415  004162  0060  F0D4  F044   	movff	?i1___ftmul+2,?i1_scale+2
 25416  004168  0012               	return	
 25417  00416A                     i1l956:
 25418                           
 25419                           ;doprnt.c: 434: return _npowers_[scl];
 25420  00416A  5048               	movf	i1scale@scl,w,c
 25421  00416C  0D03               	mullw	3
 25422  00416E  0E28               	movlw	low __npowers_
 25423  004170  24F3               	addwf	16371,w,c
 25424  004172  6EF6               	movwf	16374,c
 25425  004174  0EFB               	movlw	high __npowers_
 25426  004176  20F4               	addwfc	16372,w,c
 25427  004178  6EF7               	movwf	16375,c
 25428  00417A                     	if	1	;There are 3 active tblptr bytes
 25429  00417A  6AF8               	clrf	16376,c
 25430  00417C  0E00               	movlw	low (__mediumconst shr (0+16))
 25431  00417E  22F8               	addwfc	16376,f,c
 25432  004180                     	endif
 25433  004180  0009               	tblrd		*+
 25434  004182  006F FFD4  F042    	movff	16373,?i1_scale
 25435  004188  0009               	tblrd		*+
 25436  00418A  006F FFD4  F043    	movff	16373,?i1_scale+1
 25437  004190  000A               	tblrd		*-
 25438  004192  006F FFD4  F044    	movff	16373,?i1_scale+2
 25439  004198  0012               	return	
 25440  00419A                     i1l952:
 25441                           
 25442                           ;doprnt.c: 435: }
 25443                           ;doprnt.c: 436: if(scl>=110)
 25444  00419A  5048               	movf	i1scale@scl,w,c
 25445  00419C  0A80               	xorlw	128
 25446  00419E  0F12               	addlw	-238
 25447  0041A0  A0D8               	btfss	16344,0,c
 25448  0041A2  D0B0               	goto	i1l957
 25449                           
 25450                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 25451  0041A4  0E00               	movlw	0
 25452  0041A6  6E15               	movwf	i1___wmul@multiplicand+1,c
 25453  0041A8  0E03               	movlw	3
 25454  0041AA  6E14               	movwf	i1___wmul@multiplicand,c
 25455  0041AC  0E00               	movlw	0
 25456  0041AE  6E0D               	movwf	i1___awdiv@divisor+1,c
 25457  0041B0  0E0A               	movlw	10
 25458  0041B2  6E0C               	movwf	i1___awdiv@divisor,c
 25459  0041B4  0E00               	movlw	0
 25460  0041B6  6E07               	movwf	i1___awmod@divisor+1,c
 25461  0041B8  0E64               	movlw	100
 25462  0041BA  6E06               	movwf	i1___awmod@divisor,c
 25463  0041BC  5048               	movf	i1scale@scl,w,c
 25464  0041BE  6E04               	movwf	i1___awmod@dividend,c
 25465  0041C0  6A05               	clrf	i1___awmod@dividend+1,c
 25466  0041C2  BE04               	btfsc	i1___awmod@dividend,7,c
 25467  0041C4  0605               	decf	i1___awmod@dividend+1,f,c
 25468  0041C6  ECFE  F03E         	call	i1___awmod	;wreg free
 25469  0041CA  0060  F010  F00A   	movff	?i1___awmod,i1___awdiv@dividend
 25470  0041D0  0060  F014  F00B   	movff	?i1___awmod+1,i1___awdiv@dividend+1
 25471  0041D6  EC49  F03D         	call	i1___awdiv	;wreg free
 25472  0041DA  0E09               	movlw	9
 25473  0041DC  240A               	addwf	?i1___awdiv,w,c
 25474  0041DE  6E12               	movwf	i1___wmul@multiplier,c
 25475  0041E0  0E00               	movlw	0
 25476  0041E2  200B               	addwfc	?i1___awdiv+1,w,c
 25477  0041E4  6E13               	movwf	i1___wmul@multiplier+1,c
 25478  0041E6  ECC0  F044         	call	i1___wmul	;wreg free
 25479  0041EA  0E01               	movlw	low __powers_
 25480  0041EC  2412               	addwf	?i1___wmul,w,c
 25481  0041EE  6EF6               	movwf	16374,c
 25482  0041F0  0EFB               	movlw	high __powers_
 25483  0041F2  2013               	addwfc	?i1___wmul+1,w,c
 25484  0041F4  6EF7               	movwf	16375,c
 25485  0041F6                     	if	1	;There are 3 active tblptr bytes
 25486  0041F6  6AF8               	clrf	16376,c
 25487  0041F8  0E00               	movlw	low (__mediumconst shr (0+16))
 25488  0041FA  22F8               	addwfc	16376,f,c
 25489  0041FC                     	endif
 25490  0041FC  0009               	tblrd		*+
 25491  0041FE  006F FFD4  F036    	movff	16373,i1___ftmul@f2
 25492  004204  0009               	tblrd		*+
 25493  004206  006F FFD4  F037    	movff	16373,i1___ftmul@f2+1
 25494  00420C  000A               	tblrd		*-
 25495  00420E  006F FFD4  F038    	movff	16373,i1___ftmul@f2+2
 25496  004214  0E00               	movlw	0
 25497  004216  6E0D               	movwf	i1___awdiv@divisor+1,c
 25498  004218  0E64               	movlw	100
 25499  00421A  6E0C               	movwf	i1___awdiv@divisor,c
 25500  00421C  5048               	movf	i1scale@scl,w,c
 25501  00421E  6E0A               	movwf	i1___awdiv@dividend,c
 25502  004220  6A0B               	clrf	i1___awdiv@dividend+1,c
 25503  004222  BE0A               	btfsc	i1___awdiv@dividend,7,c
 25504  004224  060B               	decf	i1___awdiv@dividend+1,f,c
 25505  004226  EC49  F03D         	call	i1___awdiv	;wreg free
 25506  00422A  0E12               	movlw	18
 25507  00422C  240A               	addwf	?i1___awdiv,w,c
 25508  00422E  6E12               	movwf	i1___wmul@multiplier,c
 25509  004230  0E00               	movlw	0
 25510  004232  200B               	addwfc	?i1___awdiv+1,w,c
 25511  004234  6E13               	movwf	i1___wmul@multiplier+1,c
 25512  004236  0E00               	movlw	0
 25513  004238  6E15               	movwf	i1___wmul@multiplicand+1,c
 25514  00423A  0E03               	movlw	3
 25515  00423C  6E14               	movwf	i1___wmul@multiplicand,c
 25516  00423E  ECC0  F044         	call	i1___wmul	;wreg free
 25517  004242  0E01               	movlw	low __powers_
 25518  004244  2412               	addwf	?i1___wmul,w,c
 25519  004246  6EF6               	movwf	16374,c
 25520  004248  0EFB               	movlw	high __powers_
 25521  00424A  2013               	addwfc	?i1___wmul+1,w,c
 25522  00424C  6EF7               	movwf	16375,c
 25523  00424E                     	if	1	;There are 3 active tblptr bytes
 25524  00424E  6AF8               	clrf	16376,c
 25525  004250  0E00               	movlw	low (__mediumconst shr (0+16))
 25526  004252  22F8               	addwfc	16376,f,c
 25527  004254                     	endif
 25528  004254  0009               	tblrd		*+
 25529  004256  006F FFD4  F033    	movff	16373,i1___ftmul@f1
 25530  00425C  0009               	tblrd		*+
 25531  00425E  006F FFD4  F034    	movff	16373,i1___ftmul@f1+1
 25532  004264  000A               	tblrd		*-
 25533  004266  006F FFD4  F035    	movff	16373,i1___ftmul@f1+2
 25534  00426C  ECE0  F032         	call	i1___ftmul	;wreg free
 25535  004270  0060  F0CC  F045   	movff	?i1___ftmul,i1_scale$3043
 25536  004276  0060  F0D0  F046   	movff	?i1___ftmul+1,i1_scale$3043+1
 25537  00427C  0060  F0D4  F047   	movff	?i1___ftmul+2,i1_scale$3043+2
 25538                           
 25539                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 25540  004282  0060  F114  F033   	movff	i1_scale$3043,i1___ftmul@f1
 25541  004288  0060  F118  F034   	movff	i1_scale$3043+1,i1___ftmul@f1+1
 25542  00428E  0060  F11C  F035   	movff	i1_scale$3043+2,i1___ftmul@f1+2
 25543  004294  0E00               	movlw	0
 25544  004296  6E15               	movwf	i1___wmul@multiplicand+1,c
 25545  004298  0E03               	movlw	3
 25546  00429A  6E14               	movwf	i1___wmul@multiplicand,c
 25547  00429C  0E00               	movlw	0
 25548  00429E  6E07               	movwf	i1___awmod@divisor+1,c
 25549  0042A0  0E0A               	movlw	10
 25550  0042A2  6E06               	movwf	i1___awmod@divisor,c
 25551  0042A4  5048               	movf	i1scale@scl,w,c
 25552  0042A6  6E04               	movwf	i1___awmod@dividend,c
 25553  0042A8  6A05               	clrf	i1___awmod@dividend+1,c
 25554  0042AA  BE04               	btfsc	i1___awmod@dividend,7,c
 25555  0042AC  0605               	decf	i1___awmod@dividend+1,f,c
 25556  0042AE  ECFE  F03E         	call	i1___awmod	;wreg free
 25557  0042B2  0060  F010  F012   	movff	?i1___awmod,i1___wmul@multiplier
 25558  0042B8  0060  F014  F013   	movff	?i1___awmod+1,i1___wmul@multiplier+1
 25559  0042BE  ECC0  F044         	call	i1___wmul	;wreg free
 25560  0042C2  0E01               	movlw	low __powers_
 25561  0042C4  2412               	addwf	?i1___wmul,w,c
 25562  0042C6  6EF6               	movwf	16374,c
 25563  0042C8  0EFB               	movlw	high __powers_
 25564  0042CA  2013               	addwfc	?i1___wmul+1,w,c
 25565  0042CC  6EF7               	movwf	16375,c
 25566  0042CE                     	if	1	;There are 3 active tblptr bytes
 25567  0042CE  6AF8               	clrf	16376,c
 25568  0042D0  0E00               	movlw	low (__mediumconst shr (0+16))
 25569  0042D2  22F8               	addwfc	16376,f,c
 25570  0042D4                     	endif
 25571  0042D4  0009               	tblrd		*+
 25572  0042D6  006F FFD4  F036    	movff	16373,i1___ftmul@f2
 25573  0042DC  0009               	tblrd		*+
 25574  0042DE  006F FFD4  F037    	movff	16373,i1___ftmul@f2+1
 25575  0042E4  000A               	tblrd		*-
 25576  0042E6  006F FFD4  F038    	movff	16373,i1___ftmul@f2+2
 25577  0042EC  ECE0  F032         	call	i1___ftmul	;wreg free
 25578  0042F0  0060  F0CC  F042   	movff	?i1___ftmul,?i1_scale
 25579  0042F6  0060  F0D0  F043   	movff	?i1___ftmul+1,?i1_scale+1
 25580  0042FC  0060  F0D4  F044   	movff	?i1___ftmul+2,?i1_scale+2
 25581  004302  0012               	return	
 25582  004304                     i1l957:
 25583                           
 25584                           ;doprnt.c: 438: else if(scl > 10)
 25585  004304  5048               	movf	i1scale@scl,w,c
 25586  004306  0A80               	xorlw	128
 25587  004308  0F75               	addlw	-139
 25588  00430A  A0D8               	btfss	16344,0,c
 25589  00430C  D064               	goto	i1l959
 25590                           
 25591                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 25592  00430E  0E00               	movlw	0
 25593  004310  6E0D               	movwf	i1___awdiv@divisor+1,c
 25594  004312  0E0A               	movlw	10
 25595  004314  6E0C               	movwf	i1___awdiv@divisor,c
 25596  004316  5048               	movf	i1scale@scl,w,c
 25597  004318  6E0A               	movwf	i1___awdiv@dividend,c
 25598  00431A  6A0B               	clrf	i1___awdiv@dividend+1,c
 25599  00431C  BE0A               	btfsc	i1___awdiv@dividend,7,c
 25600  00431E  060B               	decf	i1___awdiv@dividend+1,f,c
 25601  004320  EC49  F03D         	call	i1___awdiv	;wreg free
 25602  004324  0E09               	movlw	9
 25603  004326  240A               	addwf	?i1___awdiv,w,c
 25604  004328  6E12               	movwf	i1___wmul@multiplier,c
 25605  00432A  0E00               	movlw	0
 25606  00432C  200B               	addwfc	?i1___awdiv+1,w,c
 25607  00432E  6E13               	movwf	i1___wmul@multiplier+1,c
 25608  004330  0E00               	movlw	0
 25609  004332  6E15               	movwf	i1___wmul@multiplicand+1,c
 25610  004334  0E03               	movlw	3
 25611  004336  6E14               	movwf	i1___wmul@multiplicand,c
 25612  004338  ECC0  F044         	call	i1___wmul	;wreg free
 25613  00433C  0E01               	movlw	low __powers_
 25614  00433E  2412               	addwf	?i1___wmul,w,c
 25615  004340  6EF6               	movwf	16374,c
 25616  004342  0EFB               	movlw	high __powers_
 25617  004344  2013               	addwfc	?i1___wmul+1,w,c
 25618  004346  6EF7               	movwf	16375,c
 25619  004348                     	if	1	;There are 3 active tblptr bytes
 25620  004348  6AF8               	clrf	16376,c
 25621  00434A  0E00               	movlw	low (__mediumconst shr (0+16))
 25622  00434C  22F8               	addwfc	16376,f,c
 25623  00434E                     	endif
 25624  00434E  0009               	tblrd		*+
 25625  004350  006F FFD4  F033    	movff	16373,i1___ftmul@f1
 25626  004356  0009               	tblrd		*+
 25627  004358  006F FFD4  F034    	movff	16373,i1___ftmul@f1+1
 25628  00435E  000A               	tblrd		*-
 25629  004360  006F FFD4  F035    	movff	16373,i1___ftmul@f1+2
 25630  004366  0E00               	movlw	0
 25631  004368  6E15               	movwf	i1___wmul@multiplicand+1,c
 25632  00436A  0E03               	movlw	3
 25633  00436C  6E14               	movwf	i1___wmul@multiplicand,c
 25634  00436E  0E00               	movlw	0
 25635  004370  6E07               	movwf	i1___awmod@divisor+1,c
 25636  004372  0E0A               	movlw	10
 25637  004374  6E06               	movwf	i1___awmod@divisor,c
 25638  004376  5048               	movf	i1scale@scl,w,c
 25639  004378  6E04               	movwf	i1___awmod@dividend,c
 25640  00437A  6A05               	clrf	i1___awmod@dividend+1,c
 25641  00437C  BE04               	btfsc	i1___awmod@dividend,7,c
 25642  00437E  0605               	decf	i1___awmod@dividend+1,f,c
 25643  004380  ECFE  F03E         	call	i1___awmod	;wreg free
 25644  004384  0060  F010  F012   	movff	?i1___awmod,i1___wmul@multiplier
 25645  00438A  0060  F014  F013   	movff	?i1___awmod+1,i1___wmul@multiplier+1
 25646  004390  ECC0  F044         	call	i1___wmul	;wreg free
 25647  004394  0E01               	movlw	low __powers_
 25648  004396  2412               	addwf	?i1___wmul,w,c
 25649  004398  6EF6               	movwf	16374,c
 25650  00439A  0EFB               	movlw	high __powers_
 25651  00439C  2013               	addwfc	?i1___wmul+1,w,c
 25652  00439E  6EF7               	movwf	16375,c
 25653  0043A0                     	if	1	;There are 3 active tblptr bytes
 25654  0043A0  6AF8               	clrf	16376,c
 25655  0043A2  0E00               	movlw	low (__mediumconst shr (0+16))
 25656  0043A4  22F8               	addwfc	16376,f,c
 25657  0043A6                     	endif
 25658  0043A6  0009               	tblrd		*+
 25659  0043A8  006F FFD4  F036    	movff	16373,i1___ftmul@f2
 25660  0043AE  0009               	tblrd		*+
 25661  0043B0  006F FFD4  F037    	movff	16373,i1___ftmul@f2+1
 25662  0043B6  000A               	tblrd		*-
 25663  0043B8  006F FFD4  F038    	movff	16373,i1___ftmul@f2+2
 25664  0043BE  ECE0  F032         	call	i1___ftmul	;wreg free
 25665  0043C2  0060  F0CC  F042   	movff	?i1___ftmul,?i1_scale
 25666  0043C8  0060  F0D0  F043   	movff	?i1___ftmul+1,?i1_scale+1
 25667  0043CE  0060  F0D4  F044   	movff	?i1___ftmul+2,?i1_scale+2
 25668  0043D4  0012               	return	
 25669  0043D6                     i1l959:
 25670                           
 25671                           ;doprnt.c: 440: return _powers_[scl];
 25672  0043D6  5048               	movf	i1scale@scl,w,c
 25673  0043D8  0D03               	mullw	3
 25674  0043DA  0E01               	movlw	low __powers_
 25675  0043DC  24F3               	addwf	16371,w,c
 25676  0043DE  6EF6               	movwf	16374,c
 25677  0043E0  0EFB               	movlw	high __powers_
 25678  0043E2  20F4               	addwfc	16372,w,c
 25679  0043E4  6EF7               	movwf	16375,c
 25680  0043E6                     	if	1	;There are 3 active tblptr bytes
 25681  0043E6  6AF8               	clrf	16376,c
 25682  0043E8  0E00               	movlw	low (__mediumconst shr (0+16))
 25683  0043EA  22F8               	addwfc	16376,f,c
 25684  0043EC                     	endif
 25685  0043EC  0009               	tblrd		*+
 25686  0043EE  006F FFD4  F042    	movff	16373,?i1_scale
 25687  0043F4  0009               	tblrd		*+
 25688  0043F6  006F FFD4  F043    	movff	16373,?i1_scale+1
 25689  0043FC  000A               	tblrd		*-
 25690  0043FE  006F FFD4  F044    	movff	16373,?i1_scale+2
 25691  004404  0012               	return	
 25692  004406                     __end_ofi1_scale:
 25693                           	opt stack 0
 25694                           
 25695 ;; *************** function i1_isdigit *****************
 25696 ;; Defined at:
 25697 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 25698 ;; Parameters:    Size  Location     Type
 25699 ;;  c               1    wreg     unsigned char 
 25700 ;; Auto vars:     Size  Location     Type
 25701 ;;  c               1    5[COMRAM] unsigned char 
 25702 ;; Return value:  Size  Location     Type
 25703 ;;		None               void
 25704 ;; Registers used:
 25705 ;;		wreg, status,2, status,0
 25706 ;; Tracked objects:
 25707 ;;		On entry : 0/0
 25708 ;;		On exit  : 0/0
 25709 ;;		Unchanged: 0/0
 25710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25712 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25713 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25714 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25715 ;;Total ram usage:        3 bytes
 25716 ;; Hardware stack levels used:    1
 25717 ;; This function calls:
 25718 ;;		Nothing
 25719 ;; This function is called by:
 25720 ;;		i1_sprintf
 25721 ;; This function uses a non-reentrant model
 25722 ;;
 25723                           
 25724                           	psect	text85
 25725  008A54                     __ptext85:
 25726                           	opt stack 0
 25727  008A54                     i1_isdigit:
 25728                           	opt stack 18
 25729                           
 25730                           ;incstack = 0
 25731                           ;i1isdigit@c stored from wreg
 25732  008A54  6E06               	movwf	i1isdigit@c,c
 25733  008A56  0E00               	movlw	0
 25734  008A58  6E05               	movwf	i1_isdigit$2408,c
 25735  008A5A  0E3A               	movlw	58
 25736  008A5C  6006               	cpfslt	i1isdigit@c,c
 25737  008A5E  D005               	goto	i1l1599
 25738  008A60  0E2F               	movlw	47
 25739  008A62  6406               	cpfsgt	i1isdigit@c,c
 25740  008A64  D002               	goto	i1l1599
 25741  008A66  0E01               	movlw	1
 25742  008A68  6E05               	movwf	i1_isdigit$2408,c
 25743  008A6A                     i1l1599:
 25744  008A6A  0060  F014  F004   	movff	i1_isdigit$2408,??i1_isdigit
 25745  008A70  3004               	rrcf	??i1_isdigit,w,c
 25746  008A72  0012               	return	
 25747  008A74                     __end_ofi1_isdigit:
 25748                           	opt stack 0
 25749                           
 25750 ;; *************** function i1_fround *****************
 25751 ;; Defined at:
 25752 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 25753 ;; Parameters:    Size  Location     Type
 25754 ;;  prec            1    wreg     unsigned char 
 25755 ;; Auto vars:     Size  Location     Type
 25756 ;;  prec            1   74[COMRAM] unsigned char 
 25757 ;; Return value:  Size  Location     Type
 25758 ;;                  3   65[COMRAM] unsigned char 
 25759 ;; Registers used:
 25760 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25761 ;; Tracked objects:
 25762 ;;		On entry : 0/0
 25763 ;;		On exit  : 0/0
 25764 ;;		Unchanged: 0/0
 25765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25766 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25767 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25769 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25770 ;;Total ram usage:       10 bytes
 25771 ;; Hardware stack levels used:    1
 25772 ;; Hardware stack levels required when called:    2
 25773 ;; This function calls:
 25774 ;;		i1___awdiv
 25775 ;;		i1___awmod
 25776 ;;		i1___ftmul
 25777 ;;		i1___wmul
 25778 ;; This function is called by:
 25779 ;;		i1_sprintf
 25780 ;; This function uses a non-reentrant model
 25781 ;;
 25782                           
 25783                           	psect	text86
 25784  004AC0                     __ptext86:
 25785                           	opt stack 0
 25786  004AC0                     i1_fround:
 25787                           	opt stack 16
 25788                           
 25789                           ;incstack = 0
 25790                           ;i1fround@prec stored from wreg
 25791  004AC0  6E4B               	movwf	i1fround@prec,c
 25792                           
 25793                           ;doprnt.c: 413: if(prec>=110)
 25794  004AC2  0E6D               	movlw	109
 25795  004AC4  644B               	cpfsgt	i1fround@prec,c
 25796  004AC6  D0C7               	goto	i1l946
 25797                           
 25798                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 25799  004AC8  0E00               	movlw	0
 25800  004ACA  6E15               	movwf	i1___wmul@multiplicand+1,c
 25801  004ACC  0E03               	movlw	3
 25802  004ACE  6E14               	movwf	i1___wmul@multiplicand,c
 25803  004AD0  0E00               	movlw	0
 25804  004AD2  6E0D               	movwf	i1___awdiv@divisor+1,c
 25805  004AD4  0E0A               	movlw	10
 25806  004AD6  6E0C               	movwf	i1___awdiv@divisor,c
 25807  004AD8  0E00               	movlw	0
 25808  004ADA  6E07               	movwf	i1___awmod@divisor+1,c
 25809  004ADC  0E64               	movlw	100
 25810  004ADE  6E06               	movwf	i1___awmod@divisor,c
 25811  004AE0  0060  F12C  F004   	movff	i1fround@prec,i1___awmod@dividend
 25812  004AE6  6A05               	clrf	i1___awmod@dividend+1,c
 25813  004AE8  ECFE  F03E         	call	i1___awmod	;wreg free
 25814  004AEC  0060  F010  F00A   	movff	?i1___awmod,i1___awdiv@dividend
 25815  004AF2  0060  F014  F00B   	movff	?i1___awmod+1,i1___awdiv@dividend+1
 25816  004AF8  EC49  F03D         	call	i1___awdiv	;wreg free
 25817  004AFC  0E09               	movlw	9
 25818  004AFE  240A               	addwf	?i1___awdiv,w,c
 25819  004B00  6E12               	movwf	i1___wmul@multiplier,c
 25820  004B02  0E00               	movlw	0
 25821  004B04  200B               	addwfc	?i1___awdiv+1,w,c
 25822  004B06  6E13               	movwf	i1___wmul@multiplier+1,c
 25823  004B08  ECC0  F044         	call	i1___wmul	;wreg free
 25824  004B0C  0E28               	movlw	low __npowers_
 25825  004B0E  2412               	addwf	?i1___wmul,w,c
 25826  004B10  6EF6               	movwf	16374,c
 25827  004B12  0EFB               	movlw	high __npowers_
 25828  004B14  2013               	addwfc	?i1___wmul+1,w,c
 25829  004B16  6EF7               	movwf	16375,c
 25830  004B18                     	if	1	;There are 3 active tblptr bytes
 25831  004B18  6AF8               	clrf	16376,c
 25832  004B1A  0E00               	movlw	low (__mediumconst shr (0+16))
 25833  004B1C  22F8               	addwfc	16376,f,c
 25834  004B1E                     	endif
 25835  004B1E  0009               	tblrd		*+
 25836  004B20  006F FFD4  F036    	movff	16373,i1___ftmul@f2
 25837  004B26  0009               	tblrd		*+
 25838  004B28  006F FFD4  F037    	movff	16373,i1___ftmul@f2+1
 25839  004B2E  000A               	tblrd		*-
 25840  004B30  006F FFD4  F038    	movff	16373,i1___ftmul@f2+2
 25841  004B36  0E00               	movlw	0
 25842  004B38  6E0D               	movwf	i1___awdiv@divisor+1,c
 25843  004B3A  0E64               	movlw	100
 25844  004B3C  6E0C               	movwf	i1___awdiv@divisor,c
 25845  004B3E  0060  F12C  F00A   	movff	i1fround@prec,i1___awdiv@dividend
 25846  004B44  6A0B               	clrf	i1___awdiv@dividend+1,c
 25847  004B46  EC49  F03D         	call	i1___awdiv	;wreg free
 25848  004B4A  0E12               	movlw	18
 25849  004B4C  240A               	addwf	?i1___awdiv,w,c
 25850  004B4E  6E12               	movwf	i1___wmul@multiplier,c
 25851  004B50  0E00               	movlw	0
 25852  004B52  200B               	addwfc	?i1___awdiv+1,w,c
 25853  004B54  6E13               	movwf	i1___wmul@multiplier+1,c
 25854  004B56  0E00               	movlw	0
 25855  004B58  6E15               	movwf	i1___wmul@multiplicand+1,c
 25856  004B5A  0E03               	movlw	3
 25857  004B5C  6E14               	movwf	i1___wmul@multiplicand,c
 25858  004B5E  ECC0  F044         	call	i1___wmul	;wreg free
 25859  004B62  0E28               	movlw	low __npowers_
 25860  004B64  2412               	addwf	?i1___wmul,w,c
 25861  004B66  6EF6               	movwf	16374,c
 25862  004B68  0EFB               	movlw	high __npowers_
 25863  004B6A  2013               	addwfc	?i1___wmul+1,w,c
 25864  004B6C  6EF7               	movwf	16375,c
 25865  004B6E                     	if	1	;There are 3 active tblptr bytes
 25866  004B6E  6AF8               	clrf	16376,c
 25867  004B70  0E00               	movlw	low (__mediumconst shr (0+16))
 25868  004B72  22F8               	addwfc	16376,f,c
 25869  004B74                     	endif
 25870  004B74  0009               	tblrd		*+
 25871  004B76  006F FFD4  F033    	movff	16373,i1___ftmul@f1
 25872  004B7C  0009               	tblrd		*+
 25873  004B7E  006F FFD4  F034    	movff	16373,i1___ftmul@f1+1
 25874  004B84  000A               	tblrd		*-
 25875  004B86  006F FFD4  F035    	movff	16373,i1___ftmul@f1+2
 25876  004B8C  ECE0  F032         	call	i1___ftmul	;wreg free
 25877  004B90  0060  F0CC  F048   	movff	?i1___ftmul,i1_fround$3041
 25878  004B96  0060  F0D0  F049   	movff	?i1___ftmul+1,i1_fround$3041+1
 25879  004B9C  0060  F0D4  F04A   	movff	?i1___ftmul+2,i1_fround$3041+2
 25880                           
 25881                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 25882  004BA2  0E00               	movlw	0
 25883  004BA4  6E15               	movwf	i1___wmul@multiplicand+1,c
 25884  004BA6  0E03               	movlw	3
 25885  004BA8  6E14               	movwf	i1___wmul@multiplicand,c
 25886  004BAA  0E00               	movlw	0
 25887  004BAC  6E07               	movwf	i1___awmod@divisor+1,c
 25888  004BAE  0E0A               	movlw	10
 25889  004BB0  6E06               	movwf	i1___awmod@divisor,c
 25890  004BB2  0060  F12C  F004   	movff	i1fround@prec,i1___awmod@dividend
 25891  004BB8  6A05               	clrf	i1___awmod@dividend+1,c
 25892  004BBA  ECFE  F03E         	call	i1___awmod	;wreg free
 25893  004BBE  0060  F010  F012   	movff	?i1___awmod,i1___wmul@multiplier
 25894  004BC4  0060  F014  F013   	movff	?i1___awmod+1,i1___wmul@multiplier+1
 25895  004BCA  ECC0  F044         	call	i1___wmul	;wreg free
 25896  004BCE  0E28               	movlw	low __npowers_
 25897  004BD0  2412               	addwf	?i1___wmul,w,c
 25898  004BD2  6EF6               	movwf	16374,c
 25899  004BD4  0EFB               	movlw	high __npowers_
 25900  004BD6  2013               	addwfc	?i1___wmul+1,w,c
 25901  004BD8  6EF7               	movwf	16375,c
 25902  004BDA                     	if	1	;There are 3 active tblptr bytes
 25903  004BDA  6AF8               	clrf	16376,c
 25904  004BDC  0E00               	movlw	low (__mediumconst shr (0+16))
 25905  004BDE  22F8               	addwfc	16376,f,c
 25906  004BE0                     	endif
 25907  004BE0  0009               	tblrd		*+
 25908  004BE2  006F FFD4  F036    	movff	16373,i1___ftmul@f2
 25909  004BE8  0009               	tblrd		*+
 25910  004BEA  006F FFD4  F037    	movff	16373,i1___ftmul@f2+1
 25911  004BF0  000A               	tblrd		*-
 25912  004BF2  006F FFD4  F038    	movff	16373,i1___ftmul@f2+2
 25913  004BF8  0060  F120  F033   	movff	i1_fround$3041,i1___ftmul@f1
 25914  004BFE  0060  F124  F034   	movff	i1_fround$3041+1,i1___ftmul@f1+1
 25915  004C04  0060  F128  F035   	movff	i1_fround$3041+2,i1___ftmul@f1+2
 25916  004C0A  ECE0  F032         	call	i1___ftmul	;wreg free
 25917  004C0E  0060  F0CC  F045   	movff	?i1___ftmul,i1_fround$3042
 25918  004C14  0060  F0D0  F046   	movff	?i1___ftmul+1,i1_fround$3042+1
 25919  004C1A  0060  F0D4  F047   	movff	?i1___ftmul+2,i1_fround$3042+2
 25920                           
 25921                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 25922  004C20  0060  F114  F033   	movff	i1_fround$3042,i1___ftmul@f1
 25923  004C26  0060  F118  F034   	movff	i1_fround$3042+1,i1___ftmul@f1+1
 25924  004C2C  0060  F11C  F035   	movff	i1_fround$3042+2,i1___ftmul@f1+2
 25925  004C32  0E00               	movlw	0
 25926  004C34  6E36               	movwf	i1___ftmul@f2,c
 25927  004C36  0E00               	movlw	0
 25928  004C38  6E37               	movwf	i1___ftmul@f2+1,c
 25929  004C3A  0E3F               	movlw	63
 25930  004C3C  6E38               	movwf	i1___ftmul@f2+2,c
 25931  004C3E  ECE0  F032         	call	i1___ftmul	;wreg free
 25932  004C42  0060  F0CC  F042   	movff	?i1___ftmul,?i1_fround
 25933  004C48  0060  F0D0  F043   	movff	?i1___ftmul+1,?i1_fround+1
 25934  004C4E  0060  F0D4  F044   	movff	?i1___ftmul+2,?i1_fround+2
 25935  004C54  0012               	return	
 25936  004C56                     i1l946:
 25937                           
 25938                           ;doprnt.c: 415: else if(prec > 10)
 25939  004C56  0E0A               	movlw	10
 25940  004C58  644B               	cpfsgt	i1fround@prec,c
 25941  004C5A  D07C               	goto	i1l949
 25942                           
 25943                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 25944  004C5C  0E00               	movlw	0
 25945  004C5E  6E15               	movwf	i1___wmul@multiplicand+1,c
 25946  004C60  0E03               	movlw	3
 25947  004C62  6E14               	movwf	i1___wmul@multiplicand,c
 25948  004C64  0E00               	movlw	0
 25949  004C66  6E07               	movwf	i1___awmod@divisor+1,c
 25950  004C68  0E0A               	movlw	10
 25951  004C6A  6E06               	movwf	i1___awmod@divisor,c
 25952  004C6C  0060  F12C  F004   	movff	i1fround@prec,i1___awmod@dividend
 25953  004C72  6A05               	clrf	i1___awmod@dividend+1,c
 25954  004C74  ECFE  F03E         	call	i1___awmod	;wreg free
 25955  004C78  0060  F010  F012   	movff	?i1___awmod,i1___wmul@multiplier
 25956  004C7E  0060  F014  F013   	movff	?i1___awmod+1,i1___wmul@multiplier+1
 25957  004C84  ECC0  F044         	call	i1___wmul	;wreg free
 25958  004C88  0E28               	movlw	low __npowers_
 25959  004C8A  2412               	addwf	?i1___wmul,w,c
 25960  004C8C  6EF6               	movwf	16374,c
 25961  004C8E  0EFB               	movlw	high __npowers_
 25962  004C90  2013               	addwfc	?i1___wmul+1,w,c
 25963  004C92  6EF7               	movwf	16375,c
 25964  004C94                     	if	1	;There are 3 active tblptr bytes
 25965  004C94  6AF8               	clrf	16376,c
 25966  004C96  0E00               	movlw	low (__mediumconst shr (0+16))
 25967  004C98  22F8               	addwfc	16376,f,c
 25968  004C9A                     	endif
 25969  004C9A  0009               	tblrd		*+
 25970  004C9C  006F FFD4  F036    	movff	16373,i1___ftmul@f2
 25971  004CA2  0009               	tblrd		*+
 25972  004CA4  006F FFD4  F037    	movff	16373,i1___ftmul@f2+1
 25973  004CAA  000A               	tblrd		*-
 25974  004CAC  006F FFD4  F038    	movff	16373,i1___ftmul@f2+2
 25975  004CB2  0E00               	movlw	0
 25976  004CB4  6E0D               	movwf	i1___awdiv@divisor+1,c
 25977  004CB6  0E0A               	movlw	10
 25978  004CB8  6E0C               	movwf	i1___awdiv@divisor,c
 25979  004CBA  0060  F12C  F00A   	movff	i1fround@prec,i1___awdiv@dividend
 25980  004CC0  6A0B               	clrf	i1___awdiv@dividend+1,c
 25981  004CC2  EC49  F03D         	call	i1___awdiv	;wreg free
 25982  004CC6  0E09               	movlw	9
 25983  004CC8  240A               	addwf	?i1___awdiv,w,c
 25984  004CCA  6E12               	movwf	i1___wmul@multiplier,c
 25985  004CCC  0E00               	movlw	0
 25986  004CCE  200B               	addwfc	?i1___awdiv+1,w,c
 25987  004CD0  6E13               	movwf	i1___wmul@multiplier+1,c
 25988  004CD2  0E00               	movlw	0
 25989  004CD4  6E15               	movwf	i1___wmul@multiplicand+1,c
 25990  004CD6  0E03               	movlw	3
 25991  004CD8  6E14               	movwf	i1___wmul@multiplicand,c
 25992  004CDA  ECC0  F044         	call	i1___wmul	;wreg free
 25993  004CDE  0E28               	movlw	low __npowers_
 25994  004CE0  2412               	addwf	?i1___wmul,w,c
 25995  004CE2  6EF6               	movwf	16374,c
 25996  004CE4  0EFB               	movlw	high __npowers_
 25997  004CE6  2013               	addwfc	?i1___wmul+1,w,c
 25998  004CE8  6EF7               	movwf	16375,c
 25999  004CEA                     	if	1	;There are 3 active tblptr bytes
 26000  004CEA  6AF8               	clrf	16376,c
 26001  004CEC  0E00               	movlw	low (__mediumconst shr (0+16))
 26002  004CEE  22F8               	addwfc	16376,f,c
 26003  004CF0                     	endif
 26004  004CF0  0009               	tblrd		*+
 26005  004CF2  006F FFD4  F033    	movff	16373,i1___ftmul@f1
 26006  004CF8  0009               	tblrd		*+
 26007  004CFA  006F FFD4  F034    	movff	16373,i1___ftmul@f1+1
 26008  004D00  000A               	tblrd		*-
 26009  004D02  006F FFD4  F035    	movff	16373,i1___ftmul@f1+2
 26010  004D08  ECE0  F032         	call	i1___ftmul	;wreg free
 26011  004D0C  0060  F0CC  F048   	movff	?i1___ftmul,i1_fround$3041
 26012  004D12  0060  F0D0  F049   	movff	?i1___ftmul+1,i1_fround$3041+1
 26013  004D18  0060  F0D4  F04A   	movff	?i1___ftmul+2,i1_fround$3041+2
 26014                           
 26015                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 26016  004D1E  0060  F120  F033   	movff	i1_fround$3041,i1___ftmul@f1
 26017  004D24  0060  F124  F034   	movff	i1_fround$3041+1,i1___ftmul@f1+1
 26018  004D2A  0060  F128  F035   	movff	i1_fround$3041+2,i1___ftmul@f1+2
 26019  004D30  0E00               	movlw	0
 26020  004D32  6E36               	movwf	i1___ftmul@f2,c
 26021  004D34  0E00               	movlw	0
 26022  004D36  6E37               	movwf	i1___ftmul@f2+1,c
 26023  004D38  0E3F               	movlw	63
 26024  004D3A  6E38               	movwf	i1___ftmul@f2+2,c
 26025  004D3C  ECE0  F032         	call	i1___ftmul	;wreg free
 26026  004D40  0060  F0CC  F042   	movff	?i1___ftmul,?i1_fround
 26027  004D46  0060  F0D0  F043   	movff	?i1___ftmul+1,?i1_fround+1
 26028  004D4C  0060  F0D4  F044   	movff	?i1___ftmul+2,?i1_fround+2
 26029  004D52  0012               	return	
 26030  004D54                     i1l949:
 26031                           
 26032                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 26033  004D54  504B               	movf	i1fround@prec,w,c
 26034  004D56  0D03               	mullw	3
 26035  004D58  0E28               	movlw	low __npowers_
 26036  004D5A  24F3               	addwf	16371,w,c
 26037  004D5C  6EF6               	movwf	16374,c
 26038  004D5E  0EFB               	movlw	high __npowers_
 26039  004D60  20F4               	addwfc	16372,w,c
 26040  004D62  6EF7               	movwf	16375,c
 26041  004D64                     	if	1	;There are 3 active tblptr bytes
 26042  004D64  6AF8               	clrf	16376,c
 26043  004D66  0E00               	movlw	low (__mediumconst shr (0+16))
 26044  004D68  22F8               	addwfc	16376,f,c
 26045  004D6A                     	endif
 26046  004D6A  0009               	tblrd		*+
 26047  004D6C  006F FFD4  F033    	movff	16373,i1___ftmul@f1
 26048  004D72  0009               	tblrd		*+
 26049  004D74  006F FFD4  F034    	movff	16373,i1___ftmul@f1+1
 26050  004D7A  000A               	tblrd		*-
 26051  004D7C  006F FFD4  F035    	movff	16373,i1___ftmul@f1+2
 26052  004D82  0E00               	movlw	0
 26053  004D84  6E36               	movwf	i1___ftmul@f2,c
 26054  004D86  0E00               	movlw	0
 26055  004D88  6E37               	movwf	i1___ftmul@f2+1,c
 26056  004D8A  0E3F               	movlw	63
 26057  004D8C  6E38               	movwf	i1___ftmul@f2+2,c
 26058  004D8E  ECE0  F032         	call	i1___ftmul	;wreg free
 26059  004D92  0060  F0CC  F042   	movff	?i1___ftmul,?i1_fround
 26060  004D98  0060  F0D0  F043   	movff	?i1___ftmul+1,?i1_fround+1
 26061  004D9E  0060  F0D4  F044   	movff	?i1___ftmul+2,?i1_fround+2
 26062  004DA4  0012               	return	
 26063  004DA6                     __end_ofi1_fround:
 26064                           	opt stack 0
 26065                           
 26066 ;; *************** function i1___wmul *****************
 26067 ;; Defined at:
 26068 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 26069 ;; Parameters:    Size  Location     Type
 26070 ;;  multiplier      2   17[COMRAM] unsigned int 
 26071 ;;  multiplicand    2   19[COMRAM] unsigned int 
 26072 ;; Auto vars:     Size  Location     Type
 26073 ;;  __wmul          2   21[COMRAM] unsigned int 
 26074 ;; Return value:  Size  Location     Type
 26075 ;;                  2   17[COMRAM] unsigned int 
 26076 ;; Registers used:
 26077 ;;		wreg, status,2, status,0, prodl, prodh
 26078 ;; Tracked objects:
 26079 ;;		On entry : 0/0
 26080 ;;		On exit  : 0/0
 26081 ;;		Unchanged: 0/0
 26082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26083 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26084 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26086 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26087 ;;Total ram usage:        6 bytes
 26088 ;; Hardware stack levels used:    1
 26089 ;; This function calls:
 26090 ;;		Nothing
 26091 ;; This function is called by:
 26092 ;;		_recebeNETWORKID
 26093 ;;		i1_append_Arquivo_Json
 26094 ;;		i1_fround
 26095 ;;		i1_scale
 26096 ;;		i1_sprintf
 26097 ;; This function uses a non-reentrant model
 26098 ;;
 26099                           
 26100                           	psect	text87
 26101  008980                     __ptext87:
 26102                           	opt stack 0
 26103  008980                     i1___wmul:
 26104                           	opt stack 17
 26105                           
 26106                           ;incstack = 0
 26107  008980  5012               	movf	i1___wmul@multiplier,w,c
 26108  008982  0214               	mulwf	i1___wmul@multiplicand,c
 26109  008984  006F FFCC  F016    	movff	16371,i1___wmul@product
 26110  00898A  006F FFD0  F017    	movff	16372,i1___wmul@product+1
 26111  008990  5012               	movf	i1___wmul@multiplier,w,c
 26112  008992  0215               	mulwf	i1___wmul@multiplicand+1,c
 26113  008994  50F3               	movf	16371,w,c
 26114  008996  2617               	addwf	i1___wmul@product+1,f,c
 26115  008998  5013               	movf	i1___wmul@multiplier+1,w,c
 26116  00899A  0214               	mulwf	i1___wmul@multiplicand,c
 26117  00899C  50F3               	movf	16371,w,c
 26118  00899E  2617               	addwf	i1___wmul@product+1,f,c
 26119  0089A0  0060  F058  F012   	movff	i1___wmul@product,?i1___wmul
 26120  0089A6  0060  F05C  F013   	movff	i1___wmul@product+1,?i1___wmul+1
 26121  0089AC  0012               	return	
 26122  0089AE                     __end_ofi1___wmul:
 26123                           	opt stack 0
 26124                           
 26125 ;; *************** function i1___ftmul *****************
 26126 ;; Defined at:
 26127 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 26128 ;; Parameters:    Size  Location     Type
 26129 ;;  f1              3   50[COMRAM] float 
 26130 ;;  f2              3   53[COMRAM] float 
 26131 ;; Auto vars:     Size  Location     Type
 26132 ;;  __ftmul         3   60[COMRAM] unsigned um
 26133 ;;  __ftmul         1   64[COMRAM] unsigned char 
 26134 ;;  __ftmul         1   63[COMRAM] unsigned char 
 26135 ;;  __ftmul         1   59[COMRAM] unsigned char 
 26136 ;; Return value:  Size  Location     Type
 26137 ;;                  3   50[COMRAM] float 
 26138 ;; Registers used:
 26139 ;;		wreg, status,2, status,0, cstack
 26140 ;; Tracked objects:
 26141 ;;		On entry : 0/0
 26142 ;;		On exit  : 0/0
 26143 ;;		Unchanged: 0/0
 26144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26145 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26146 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26147 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26148 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26149 ;;Total ram usage:       15 bytes
 26150 ;; Hardware stack levels used:    1
 26151 ;; Hardware stack levels required when called:    1
 26152 ;; This function calls:
 26153 ;;		i1___ftpack
 26154 ;; This function is called by:
 26155 ;;		i1_fround
 26156 ;;		i1_scale
 26157 ;;		i1_sprintf
 26158 ;; This function uses a non-reentrant model
 26159 ;;
 26160                           
 26161                           	psect	text88
 26162  0065C0                     __ptext88:
 26163                           	opt stack 0
 26164  0065C0                     i1___ftmul:
 26165                           	opt stack 16
 26166                           
 26167                           ;incstack = 0
 26168  0065C0  0060  F0D4  F039   	movff	i1___ftmul@f1+2,??i1___ftmul
 26169  0065C6  6A3A               	clrf	(??i1___ftmul+1)& (0+255),c
 26170  0065C8  6A3B               	clrf	(??i1___ftmul+2)& (0+255),c
 26171  0065CA  3434               	rlcf	i1___ftmul@f1+1,w,c
 26172  0065CC  3639               	rlcf	??i1___ftmul& (0+255),f,c
 26173  0065CE  E301               	bnc	u1374_21
 26174  0065D0  803A               	bsf	(??i1___ftmul+1)& (0+255),0,c
 26175  0065D2                     u1374_21:
 26176  0065D2  5039               	movf	??i1___ftmul,w,c
 26177  0065D4  6E3C               	movwf	i1___ftmul@exp,c
 26178  0065D6  503C               	movf	i1___ftmul@exp,w,c
 26179  0065D8  A4D8               	btfss	16344,2,c
 26180  0065DA  D007               	goto	i1l1563
 26181  0065DC  0E00               	movlw	0
 26182  0065DE  6E33               	movwf	?i1___ftmul,c
 26183  0065E0  0E00               	movlw	0
 26184  0065E2  6E34               	movwf	?i1___ftmul+1,c
 26185  0065E4  0E00               	movlw	0
 26186  0065E6  6E35               	movwf	?i1___ftmul+2,c
 26187  0065E8  0012               	return	
 26188  0065EA                     i1l1563:
 26189  0065EA  0060  F0E0  F039   	movff	i1___ftmul@f2+2,??i1___ftmul
 26190  0065F0  6A3A               	clrf	(??i1___ftmul+1)& (0+255),c
 26191  0065F2  6A3B               	clrf	(??i1___ftmul+2)& (0+255),c
 26192  0065F4  3437               	rlcf	i1___ftmul@f2+1,w,c
 26193  0065F6  3639               	rlcf	??i1___ftmul& (0+255),f,c
 26194  0065F8  E301               	bnc	u1376_21
 26195  0065FA  803A               	bsf	(??i1___ftmul+1)& (0+255),0,c
 26196  0065FC                     u1376_21:
 26197  0065FC  5039               	movf	??i1___ftmul,w,c
 26198  0065FE  6E41               	movwf	i1___ftmul@sign,c
 26199  006600  5041               	movf	i1___ftmul@sign,w,c
 26200  006602  A4D8               	btfss	16344,2,c
 26201  006604  D007               	goto	i1l1565
 26202  006606  0E00               	movlw	0
 26203  006608  6E33               	movwf	?i1___ftmul,c
 26204  00660A  0E00               	movlw	0
 26205  00660C  6E34               	movwf	?i1___ftmul+1,c
 26206  00660E  0E00               	movlw	0
 26207  006610  6E35               	movwf	?i1___ftmul+2,c
 26208  006612  0012               	return	
 26209  006614                     i1l1565:
 26210  006614  5041               	movf	i1___ftmul@sign,w,c
 26211  006616  0F7B               	addlw	123
 26212  006618  263C               	addwf	i1___ftmul@exp,f,c
 26213  00661A  0060  F0D4  F041   	movff	i1___ftmul@f1+2,i1___ftmul@sign
 26214  006620  5038               	movf	i1___ftmul@f2+2,w,c
 26215  006622  1A41               	xorwf	i1___ftmul@sign,f,c
 26216  006624  0E80               	movlw	128
 26217  006626  1641               	andwf	i1___ftmul@sign,f,c
 26218  006628  8E34               	bsf	i1___ftmul@f1+1,7,c
 26219  00662A  8E37               	bsf	i1___ftmul@f2+1,7,c
 26220  00662C  0EFF               	movlw	255
 26221  00662E  1636               	andwf	i1___ftmul@f2,f,c
 26222  006630  0EFF               	movlw	255
 26223  006632  1637               	andwf	i1___ftmul@f2+1,f,c
 26224  006634  0E00               	movlw	0
 26225  006636  1638               	andwf	i1___ftmul@f2+2,f,c
 26226  006638  0E00               	movlw	0
 26227  00663A  6E3D               	movwf	i1___ftmul@f3_as_product,c
 26228  00663C  0E00               	movlw	0
 26229  00663E  6E3E               	movwf	i1___ftmul@f3_as_product+1,c
 26230  006640  0E00               	movlw	0
 26231  006642  6E3F               	movwf	i1___ftmul@f3_as_product+2,c
 26232  006644  0E07               	movlw	7
 26233  006646  6E40               	movwf	i1___ftmul@cntr,c
 26234  006648  A033               	btfss	i1___ftmul@f1,0,c
 26235  00664A  D006               	goto	i1l1567
 26236  00664C  5036               	movf	i1___ftmul@f2,w,c
 26237  00664E  263D               	addwf	i1___ftmul@f3_as_product,f,c
 26238  006650  5037               	movf	i1___ftmul@f2+1,w,c
 26239  006652  223E               	addwfc	i1___ftmul@f3_as_product+1,f,c
 26240  006654  5038               	movf	i1___ftmul@f2+2,w,c
 26241  006656  223F               	addwfc	i1___ftmul@f3_as_product+2,f,c
 26242  006658                     i1l1567:
 26243  006658  90D8               	bcf	16344,0,c
 26244  00665A  3235               	rrcf	i1___ftmul@f1+2,f,c
 26245  00665C  3234               	rrcf	i1___ftmul@f1+1,f,c
 26246  00665E  3233               	rrcf	i1___ftmul@f1,f,c
 26247  006660  90D8               	bcf	16344,0,c
 26248  006662  3636               	rlcf	i1___ftmul@f2,f,c
 26249  006664  3637               	rlcf	i1___ftmul@f2+1,f,c
 26250  006666  3638               	rlcf	i1___ftmul@f2+2,f,c
 26251  006668  2E40               	decfsz	i1___ftmul@cntr,f,c
 26252  00666A  D7EE               	goto	i1l1566
 26253  00666C  0E09               	movlw	9
 26254  00666E  6E40               	movwf	i1___ftmul@cntr,c
 26255  006670  A033               	btfss	i1___ftmul@f1,0,c
 26256  006672  D006               	goto	i1l1570
 26257  006674  5036               	movf	i1___ftmul@f2,w,c
 26258  006676  263D               	addwf	i1___ftmul@f3_as_product,f,c
 26259  006678  5037               	movf	i1___ftmul@f2+1,w,c
 26260  00667A  223E               	addwfc	i1___ftmul@f3_as_product+1,f,c
 26261  00667C  5038               	movf	i1___ftmul@f2+2,w,c
 26262  00667E  223F               	addwfc	i1___ftmul@f3_as_product+2,f,c
 26263  006680                     i1l1570:
 26264  006680  90D8               	bcf	16344,0,c
 26265  006682  3235               	rrcf	i1___ftmul@f1+2,f,c
 26266  006684  3234               	rrcf	i1___ftmul@f1+1,f,c
 26267  006686  3233               	rrcf	i1___ftmul@f1,f,c
 26268  006688  90D8               	bcf	16344,0,c
 26269  00668A  323F               	rrcf	i1___ftmul@f3_as_product+2,f,c
 26270  00668C  323E               	rrcf	i1___ftmul@f3_as_product+1,f,c
 26271  00668E  323D               	rrcf	i1___ftmul@f3_as_product,f,c
 26272  006690  2E40               	decfsz	i1___ftmul@cntr,f,c
 26273  006692  D7EE               	goto	i1l1569
 26274  006694  0060  F0F4  F004   	movff	i1___ftmul@f3_as_product,i1___ftpack@arg
 26275  00669A  0060  F0F8  F005   	movff	i1___ftmul@f3_as_product+1,i1___ftpack@arg+1
 26276  0066A0  0060  F0FC  F006   	movff	i1___ftmul@f3_as_product+2,i1___ftpack@arg+2
 26277  0066A6  0060  F0F0  F007   	movff	i1___ftmul@exp,i1___ftpack@exp
 26278  0066AC  0060  F104  F008   	movff	i1___ftmul@sign,i1___ftpack@sign
 26279  0066B2  EC3B  F03A         	call	i1___ftpack	;wreg free
 26280  0066B6  0060  F010  F033   	movff	?i1___ftpack,?i1___ftmul
 26281  0066BC  0060  F014  F034   	movff	?i1___ftpack+1,?i1___ftmul+1
 26282  0066C2  0060  F018  F035   	movff	?i1___ftpack+2,?i1___ftmul+2
 26283  0066C8  0012               	return	
 26284  0066CA                     __end_ofi1___ftmul:
 26285                           	opt stack 0
 26286                           
 26287 ;; *************** function i1___awmod *****************
 26288 ;; Defined at:
 26289 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 26290 ;; Parameters:    Size  Location     Type
 26291 ;;  dividend        2    3[COMRAM] int 
 26292 ;;  divisor         2    5[COMRAM] int 
 26293 ;; Auto vars:     Size  Location     Type
 26294 ;;  __awmod         1    8[COMRAM] unsigned char 
 26295 ;;  __awmod         1    7[COMRAM] unsigned char 
 26296 ;; Return value:  Size  Location     Type
 26297 ;;                  2    3[COMRAM] int 
 26298 ;; Registers used:
 26299 ;;		wreg, status,2, status,0
 26300 ;; Tracked objects:
 26301 ;;		On entry : 0/0
 26302 ;;		On exit  : 0/0
 26303 ;;		Unchanged: 0/0
 26304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26306 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26308 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26309 ;;Total ram usage:        6 bytes
 26310 ;; Hardware stack levels used:    1
 26311 ;; This function calls:
 26312 ;;		Nothing
 26313 ;; This function is called by:
 26314 ;;		i1_fround
 26315 ;;		i1_scale
 26316 ;;		i1_sprintf
 26317 ;; This function uses a non-reentrant model
 26318 ;;
 26319                           
 26320                           	psect	text89
 26321  007DFC                     __ptext89:
 26322                           	opt stack 0
 26323  007DFC                     i1___awmod:
 26324                           	opt stack 17
 26325                           
 26326                           ;incstack = 0
 26327  007DFC  0E00               	movlw	0
 26328  007DFE  6E09               	movwf	i1___awmod@sign,c
 26329  007E00  AE05               	btfss	i1___awmod@dividend+1,7,c
 26330  007E02  D006               	goto	i1l1416
 26331  007E04  6C04               	negf	i1___awmod@dividend,c
 26332  007E06  1E05               	comf	i1___awmod@dividend+1,f,c
 26333  007E08  B0D8               	btfsc	16344,0,c
 26334  007E0A  2A05               	incf	i1___awmod@dividend+1,f,c
 26335  007E0C  0E01               	movlw	1
 26336  007E0E  6E09               	movwf	i1___awmod@sign,c
 26337  007E10                     i1l1416:
 26338  007E10  AE07               	btfss	i1___awmod@divisor+1,7,c
 26339  007E12  D004               	goto	i1l1417
 26340  007E14  6C06               	negf	i1___awmod@divisor,c
 26341  007E16  1E07               	comf	i1___awmod@divisor+1,f,c
 26342  007E18  B0D8               	btfsc	16344,0,c
 26343  007E1A  2A07               	incf	i1___awmod@divisor+1,f,c
 26344  007E1C                     i1l1417:
 26345  007E1C  5006               	movf	i1___awmod@divisor,w,c
 26346  007E1E  1007               	iorwf	i1___awmod@divisor+1,w,c
 26347  007E20  B4D8               	btfsc	16344,2,c
 26348  007E22  D018               	goto	i1l1424
 26349  007E24  0E01               	movlw	1
 26350  007E26  6E08               	movwf	i1___awmod@counter,c
 26351  007E28  D004               	goto	i1l1419
 26352  007E2A  90D8               	bcf	16344,0,c
 26353  007E2C  3606               	rlcf	i1___awmod@divisor,f,c
 26354  007E2E  3607               	rlcf	i1___awmod@divisor+1,f,c
 26355  007E30  2A08               	incf	i1___awmod@counter,f,c
 26356  007E32                     i1l1419:
 26357  007E32  AE07               	btfss	i1___awmod@divisor+1,7,c
 26358  007E34  D7FA               	goto	i1l1420
 26359  007E36                     i1u1350_20:
 26360  007E36  5006               	movf	i1___awmod@divisor,w,c
 26361  007E38  5C04               	subwf	i1___awmod@dividend,w,c
 26362  007E3A  5007               	movf	i1___awmod@divisor+1,w,c
 26363  007E3C  5805               	subwfb	i1___awmod@dividend+1,w,c
 26364  007E3E  A0D8               	btfss	16344,0,c
 26365  007E40  D004               	goto	i1l1423
 26366  007E42  5006               	movf	i1___awmod@divisor,w,c
 26367  007E44  5E04               	subwf	i1___awmod@dividend,f,c
 26368  007E46  5007               	movf	i1___awmod@divisor+1,w,c
 26369  007E48  5A05               	subwfb	i1___awmod@dividend+1,f,c
 26370  007E4A                     i1l1423:
 26371  007E4A  90D8               	bcf	16344,0,c
 26372  007E4C  3207               	rrcf	i1___awmod@divisor+1,f,c
 26373  007E4E  3206               	rrcf	i1___awmod@divisor,f,c
 26374  007E50  2E08               	decfsz	i1___awmod@counter,f,c
 26375  007E52  D7F1               	goto	i1u1350_20
 26376  007E54                     i1l1424:
 26377  007E54  5009               	movf	i1___awmod@sign,w,c
 26378  007E56  B4D8               	btfsc	16344,2,c
 26379  007E58  D004               	goto	i1l1425
 26380  007E5A  6C04               	negf	i1___awmod@dividend,c
 26381  007E5C  1E05               	comf	i1___awmod@dividend+1,f,c
 26382  007E5E  B0D8               	btfsc	16344,0,c
 26383  007E60  2A05               	incf	i1___awmod@dividend+1,f,c
 26384  007E62                     i1l1425:
 26385  007E62  0060  F010  F004   	movff	i1___awmod@dividend,?i1___awmod
 26386  007E68  0060  F014  F005   	movff	i1___awmod@dividend+1,?i1___awmod+1
 26387  007E6E  0012               	return	
 26388  007E70                     __end_ofi1___awmod:
 26389                           	opt stack 0
 26390                           
 26391 ;; *************** function i1___awdiv *****************
 26392 ;; Defined at:
 26393 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 26394 ;; Parameters:    Size  Location     Type
 26395 ;;  dividend        2    9[COMRAM] int 
 26396 ;;  divisor         2   11[COMRAM] int 
 26397 ;; Auto vars:     Size  Location     Type
 26398 ;;  __awdiv         2   15[COMRAM] int 
 26399 ;;  __awdiv         1   14[COMRAM] unsigned char 
 26400 ;;  __awdiv         1   13[COMRAM] unsigned char 
 26401 ;; Return value:  Size  Location     Type
 26402 ;;                  2    9[COMRAM] int 
 26403 ;; Registers used:
 26404 ;;		wreg, status,2, status,0
 26405 ;; Tracked objects:
 26406 ;;		On entry : 0/0
 26407 ;;		On exit  : 0/0
 26408 ;;		Unchanged: 0/0
 26409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26411 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26413 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26414 ;;Total ram usage:        8 bytes
 26415 ;; Hardware stack levels used:    1
 26416 ;; This function calls:
 26417 ;;		Nothing
 26418 ;; This function is called by:
 26419 ;;		i1_fround
 26420 ;;		i1_scale
 26421 ;;		i1_sprintf
 26422 ;; This function uses a non-reentrant model
 26423 ;;
 26424                           
 26425                           	psect	text90
 26426  007A92                     __ptext90:
 26427                           	opt stack 0
 26428  007A92                     i1___awdiv:
 26429                           	opt stack 17
 26430                           
 26431                           ;incstack = 0
 26432  007A92  0E00               	movlw	0
 26433  007A94  6E0F               	movwf	i1___awdiv@sign,c
 26434  007A96  AE0D               	btfss	i1___awdiv@divisor+1,7,c
 26435  007A98  D006               	goto	i1l1403
 26436  007A9A  6C0C               	negf	i1___awdiv@divisor,c
 26437  007A9C  1E0D               	comf	i1___awdiv@divisor+1,f,c
 26438  007A9E  B0D8               	btfsc	16344,0,c
 26439  007AA0  2A0D               	incf	i1___awdiv@divisor+1,f,c
 26440  007AA2  0E01               	movlw	1
 26441  007AA4  6E0F               	movwf	i1___awdiv@sign,c
 26442  007AA6                     i1l1403:
 26443  007AA6  AE0B               	btfss	i1___awdiv@dividend+1,7,c
 26444  007AA8  D006               	goto	i1l1404
 26445  007AAA  6C0A               	negf	i1___awdiv@dividend,c
 26446  007AAC  1E0B               	comf	i1___awdiv@dividend+1,f,c
 26447  007AAE  B0D8               	btfsc	16344,0,c
 26448  007AB0  2A0B               	incf	i1___awdiv@dividend+1,f,c
 26449  007AB2  0E01               	movlw	1
 26450  007AB4  1A0F               	xorwf	i1___awdiv@sign,f,c
 26451  007AB6                     i1l1404:
 26452  007AB6  0E00               	movlw	0
 26453  007AB8  6E11               	movwf	i1___awdiv@quotient+1,c
 26454  007ABA  0E00               	movlw	0
 26455  007ABC  6E10               	movwf	i1___awdiv@quotient,c
 26456  007ABE  500C               	movf	i1___awdiv@divisor,w,c
 26457  007AC0  100D               	iorwf	i1___awdiv@divisor+1,w,c
 26458  007AC2  B4D8               	btfsc	16344,2,c
 26459  007AC4  D01C               	goto	i1l1411
 26460  007AC6  0E01               	movlw	1
 26461  007AC8  6E0E               	movwf	i1___awdiv@counter,c
 26462  007ACA  D004               	goto	i1l1406
 26463  007ACC  90D8               	bcf	16344,0,c
 26464  007ACE  360C               	rlcf	i1___awdiv@divisor,f,c
 26465  007AD0  360D               	rlcf	i1___awdiv@divisor+1,f,c
 26466  007AD2  2A0E               	incf	i1___awdiv@counter,f,c
 26467  007AD4                     i1l1406:
 26468  007AD4  AE0D               	btfss	i1___awdiv@divisor+1,7,c
 26469  007AD6  D7FA               	goto	i1l1407
 26470  007AD8                     i1u1344_20:
 26471  007AD8  90D8               	bcf	16344,0,c
 26472  007ADA  3610               	rlcf	i1___awdiv@quotient,f,c
 26473  007ADC  3611               	rlcf	i1___awdiv@quotient+1,f,c
 26474  007ADE  500C               	movf	i1___awdiv@divisor,w,c
 26475  007AE0  5C0A               	subwf	i1___awdiv@dividend,w,c
 26476  007AE2  500D               	movf	i1___awdiv@divisor+1,w,c
 26477  007AE4  580B               	subwfb	i1___awdiv@dividend+1,w,c
 26478  007AE6  A0D8               	btfss	16344,0,c
 26479  007AE8  D005               	goto	i1l1410
 26480  007AEA  500C               	movf	i1___awdiv@divisor,w,c
 26481  007AEC  5E0A               	subwf	i1___awdiv@dividend,f,c
 26482  007AEE  500D               	movf	i1___awdiv@divisor+1,w,c
 26483  007AF0  5A0B               	subwfb	i1___awdiv@dividend+1,f,c
 26484  007AF2  8010               	bsf	i1___awdiv@quotient,0,c
 26485  007AF4                     i1l1410:
 26486  007AF4  90D8               	bcf	16344,0,c
 26487  007AF6  320D               	rrcf	i1___awdiv@divisor+1,f,c
 26488  007AF8  320C               	rrcf	i1___awdiv@divisor,f,c
 26489  007AFA  2E0E               	decfsz	i1___awdiv@counter,f,c
 26490  007AFC  D7ED               	goto	i1u1344_20
 26491  007AFE                     i1l1411:
 26492  007AFE  500F               	movf	i1___awdiv@sign,w,c
 26493  007B00  B4D8               	btfsc	16344,2,c
 26494  007B02  D004               	goto	i1l1412
 26495  007B04  6C10               	negf	i1___awdiv@quotient,c
 26496  007B06  1E11               	comf	i1___awdiv@quotient+1,f,c
 26497  007B08  B0D8               	btfsc	16344,0,c
 26498  007B0A  2A11               	incf	i1___awdiv@quotient+1,f,c
 26499  007B0C                     i1l1412:
 26500  007B0C  0060  F040  F00A   	movff	i1___awdiv@quotient,?i1___awdiv
 26501  007B12  0060  F044  F00B   	movff	i1___awdiv@quotient+1,?i1___awdiv+1
 26502  007B18  0012               	return	
 26503  007B1A                     __end_ofi1___awdiv:
 26504                           	opt stack 0
 26505                           
 26506 ;; *************** function i1__tdiv_to_l_ *****************
 26507 ;; Defined at:
 26508 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 26509 ;; Parameters:    Size  Location     Type
 26510 ;;  f1              3    3[COMRAM] float 
 26511 ;;  f2              3    6[COMRAM] float 
 26512 ;; Auto vars:     Size  Location     Type
 26513 ;;  _tdiv_to_l_     4   12[COMRAM] unsigned long 
 26514 ;;  _tdiv_to_l_     1   17[COMRAM] unsigned char 
 26515 ;;  _tdiv_to_l_     1   16[COMRAM] unsigned char 
 26516 ;; Return value:  Size  Location     Type
 26517 ;;                  4    3[COMRAM] unsigned long 
 26518 ;; Registers used:
 26519 ;;		wreg, status,2, status,0
 26520 ;; Tracked objects:
 26521 ;;		On entry : 0/0
 26522 ;;		On exit  : 0/0
 26523 ;;		Unchanged: 0/0
 26524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26525 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26526 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26527 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26528 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26529 ;;Total ram usage:       15 bytes
 26530 ;; Hardware stack levels used:    1
 26531 ;; This function calls:
 26532 ;;		Nothing
 26533 ;; This function is called by:
 26534 ;;		i1_sprintf
 26535 ;; This function uses a non-reentrant model
 26536 ;;
 26537                           
 26538                           	psect	text91
 26539  005ECA                     __ptext91:
 26540                           	opt stack 0
 26541  005ECA                     i1__tdiv_to_l_:
 26542                           	opt stack 18
 26543                           
 26544                           ;incstack = 0
 26545  005ECA  0060  F018  F00A   	movff	i1__tdiv_to_l_@f1+2,??i1__tdiv_to_l_
 26546  005ED0  6A0B               	clrf	(??i1__tdiv_to_l_+1)& (0+255),c
 26547  005ED2  6A0C               	clrf	(??i1__tdiv_to_l_+2)& (0+255),c
 26548  005ED4  3405               	rlcf	i1__tdiv_to_l_@f1+1,w,c
 26549  005ED6  360A               	rlcf	??i1__tdiv_to_l_& (0+255),f,c
 26550  005ED8  E301               	bnc	u1410_21
 26551  005EDA  800B               	bsf	(??i1__tdiv_to_l_+1)& (0+255),0,c
 26552  005EDC                     u1410_21:
 26553  005EDC  500A               	movf	??i1__tdiv_to_l_,w,c
 26554  005EDE  6E12               	movwf	i1__tdiv_to_l_@exp1,c
 26555  005EE0  5012               	movf	i1__tdiv_to_l_@exp1,w,c
 26556  005EE2  A4D8               	btfss	16344,2,c
 26557  005EE4  D009               	goto	i1l1539
 26558  005EE6  0E00               	movlw	0
 26559  005EE8  6E04               	movwf	?i1__tdiv_to_l_,c
 26560  005EEA  0E00               	movlw	0
 26561  005EEC  6E05               	movwf	?i1__tdiv_to_l_+1,c
 26562  005EEE  0E00               	movlw	0
 26563  005EF0  6E06               	movwf	?i1__tdiv_to_l_+2,c
 26564  005EF2  0E00               	movlw	0
 26565  005EF4  6E07               	movwf	?i1__tdiv_to_l_+3,c
 26566  005EF6  0012               	return	
 26567  005EF8                     i1l1539:
 26568  005EF8  0060  F024  F00A   	movff	i1__tdiv_to_l_@f2+2,??i1__tdiv_to_l_
 26569  005EFE  6A0B               	clrf	(??i1__tdiv_to_l_+1)& (0+255),c
 26570  005F00  6A0C               	clrf	(??i1__tdiv_to_l_+2)& (0+255),c
 26571  005F02  3408               	rlcf	i1__tdiv_to_l_@f2+1,w,c
 26572  005F04  360A               	rlcf	??i1__tdiv_to_l_& (0+255),f,c
 26573  005F06  E301               	bnc	u1412_21
 26574  005F08  800B               	bsf	(??i1__tdiv_to_l_+1)& (0+255),0,c
 26575  005F0A                     u1412_21:
 26576  005F0A  500A               	movf	??i1__tdiv_to_l_,w,c
 26577  005F0C  6E11               	movwf	i1__tdiv_to_l_@cntr,c
 26578  005F0E  5011               	movf	i1__tdiv_to_l_@cntr,w,c
 26579  005F10  A4D8               	btfss	16344,2,c
 26580  005F12  D009               	goto	i1l1541
 26581  005F14  0E00               	movlw	0
 26582  005F16  6E04               	movwf	?i1__tdiv_to_l_,c
 26583  005F18  0E00               	movlw	0
 26584  005F1A  6E05               	movwf	?i1__tdiv_to_l_+1,c
 26585  005F1C  0E00               	movlw	0
 26586  005F1E  6E06               	movwf	?i1__tdiv_to_l_+2,c
 26587  005F20  0E00               	movlw	0
 26588  005F22  6E07               	movwf	?i1__tdiv_to_l_+3,c
 26589  005F24  0012               	return	
 26590  005F26                     i1l1541:
 26591  005F26  8E05               	bsf	i1__tdiv_to_l_@f1+1,7,c
 26592  005F28  0EFF               	movlw	255
 26593  005F2A  1604               	andwf	i1__tdiv_to_l_@f1,f,c
 26594  005F2C  0EFF               	movlw	255
 26595  005F2E  1605               	andwf	i1__tdiv_to_l_@f1+1,f,c
 26596  005F30  0E00               	movlw	0
 26597  005F32  1606               	andwf	i1__tdiv_to_l_@f1+2,f,c
 26598  005F34  8E08               	bsf	i1__tdiv_to_l_@f2+1,7,c
 26599  005F36  0EFF               	movlw	255
 26600  005F38  1607               	andwf	i1__tdiv_to_l_@f2,f,c
 26601  005F3A  0EFF               	movlw	255
 26602  005F3C  1608               	andwf	i1__tdiv_to_l_@f2+1,f,c
 26603  005F3E  0E00               	movlw	0
 26604  005F40  1609               	andwf	i1__tdiv_to_l_@f2+2,f,c
 26605  005F42  0E00               	movlw	0
 26606  005F44  6E0D               	movwf	i1__tdiv_to_l_@quot,c
 26607  005F46  0E00               	movlw	0
 26608  005F48  6E0E               	movwf	i1__tdiv_to_l_@quot+1,c
 26609  005F4A  0E00               	movlw	0
 26610  005F4C  6E0F               	movwf	i1__tdiv_to_l_@quot+2,c
 26611  005F4E  0E00               	movlw	0
 26612  005F50  6E10               	movwf	i1__tdiv_to_l_@quot+3,c
 26613  005F52  0E7F               	movlw	127
 26614  005F54  5E12               	subwf	i1__tdiv_to_l_@exp1,f,c
 26615  005F56  5011               	movf	i1__tdiv_to_l_@cntr,w,c
 26616  005F58  0F98               	addlw	152
 26617  005F5A  5E12               	subwf	i1__tdiv_to_l_@exp1,f,c
 26618  005F5C  0E18               	movlw	24
 26619  005F5E  6E11               	movwf	i1__tdiv_to_l_@cntr,c
 26620  005F60                     i1l1542:
 26621  005F60  90D8               	bcf	16344,0,c
 26622  005F62  360D               	rlcf	i1__tdiv_to_l_@quot,f,c
 26623  005F64  360E               	rlcf	i1__tdiv_to_l_@quot+1,f,c
 26624  005F66  360F               	rlcf	i1__tdiv_to_l_@quot+2,f,c
 26625  005F68  3610               	rlcf	i1__tdiv_to_l_@quot+3,f,c
 26626  005F6A  5007               	movf	i1__tdiv_to_l_@f2,w,c
 26627  005F6C  5C04               	subwf	i1__tdiv_to_l_@f1,w,c
 26628  005F6E  5008               	movf	i1__tdiv_to_l_@f2+1,w,c
 26629  005F70  5805               	subwfb	i1__tdiv_to_l_@f1+1,w,c
 26630  005F72  5009               	movf	i1__tdiv_to_l_@f2+2,w,c
 26631  005F74  5806               	subwfb	i1__tdiv_to_l_@f1+2,w,c
 26632  005F76  A0D8               	btfss	16344,0,c
 26633  005F78  D007               	goto	i1l1543
 26634  005F7A  5007               	movf	i1__tdiv_to_l_@f2,w,c
 26635  005F7C  5E04               	subwf	i1__tdiv_to_l_@f1,f,c
 26636  005F7E  5008               	movf	i1__tdiv_to_l_@f2+1,w,c
 26637  005F80  5A05               	subwfb	i1__tdiv_to_l_@f1+1,f,c
 26638  005F82  5009               	movf	i1__tdiv_to_l_@f2+2,w,c
 26639  005F84  5A06               	subwfb	i1__tdiv_to_l_@f1+2,f,c
 26640  005F86  800D               	bsf	i1__tdiv_to_l_@quot,0,c
 26641  005F88                     i1l1543:
 26642  005F88  90D8               	bcf	16344,0,c
 26643  005F8A  3604               	rlcf	i1__tdiv_to_l_@f1,f,c
 26644  005F8C  3605               	rlcf	i1__tdiv_to_l_@f1+1,f,c
 26645  005F8E  3606               	rlcf	i1__tdiv_to_l_@f1+2,f,c
 26646  005F90  2E11               	decfsz	i1__tdiv_to_l_@cntr,f,c
 26647  005F92  D7E6               	goto	i1l1542
 26648  005F94  AE12               	btfss	i1__tdiv_to_l_@exp1,7,c
 26649  005F96  D016               	goto	i1l1545
 26650  005F98  5012               	movf	i1__tdiv_to_l_@exp1,w,c
 26651  005F9A  0A80               	xorlw	128
 26652  005F9C  0F97               	addlw	151
 26653  005F9E  B0D8               	btfsc	16344,0,c
 26654  005FA0  D009               	goto	i1l1546
 26655  005FA2  0E00               	movlw	0
 26656  005FA4  6E04               	movwf	?i1__tdiv_to_l_,c
 26657  005FA6  0E00               	movlw	0
 26658  005FA8  6E05               	movwf	?i1__tdiv_to_l_+1,c
 26659  005FAA  0E00               	movlw	0
 26660  005FAC  6E06               	movwf	?i1__tdiv_to_l_+2,c
 26661  005FAE  0E00               	movlw	0
 26662  005FB0  6E07               	movwf	?i1__tdiv_to_l_+3,c
 26663  005FB2  0012               	return	
 26664  005FB4                     i1l1546:
 26665  005FB4  90D8               	bcf	16344,0,c
 26666  005FB6  3210               	rrcf	i1__tdiv_to_l_@quot+3,f,c
 26667  005FB8  320F               	rrcf	i1__tdiv_to_l_@quot+2,f,c
 26668  005FBA  320E               	rrcf	i1__tdiv_to_l_@quot+1,f,c
 26669  005FBC  320D               	rrcf	i1__tdiv_to_l_@quot,f,c
 26670  005FBE  3E12               	incfsz	i1__tdiv_to_l_@exp1,f,c
 26671  005FC0  D7F9               	goto	i1l1546
 26672  005FC2  D015               	goto	i1u1418_20
 26673  005FC4                     i1l1545:
 26674  005FC4  0E17               	movlw	23
 26675  005FC6  6412               	cpfsgt	i1__tdiv_to_l_@exp1,c
 26676  005FC8  D00F               	goto	i1l1551
 26677  005FCA  0E00               	movlw	0
 26678  005FCC  6E04               	movwf	?i1__tdiv_to_l_,c
 26679  005FCE  0E00               	movlw	0
 26680  005FD0  6E05               	movwf	?i1__tdiv_to_l_+1,c
 26681  005FD2  0E00               	movlw	0
 26682  005FD4  6E06               	movwf	?i1__tdiv_to_l_+2,c
 26683  005FD6  0E00               	movlw	0
 26684  005FD8  6E07               	movwf	?i1__tdiv_to_l_+3,c
 26685  005FDA  0012               	return	
 26686  005FDC  90D8               	bcf	16344,0,c
 26687  005FDE  360D               	rlcf	i1__tdiv_to_l_@quot,f,c
 26688  005FE0  360E               	rlcf	i1__tdiv_to_l_@quot+1,f,c
 26689  005FE2  360F               	rlcf	i1__tdiv_to_l_@quot+2,f,c
 26690  005FE4  3610               	rlcf	i1__tdiv_to_l_@quot+3,f,c
 26691  005FE6  0612               	decf	i1__tdiv_to_l_@exp1,f,c
 26692  005FE8                     i1l1551:
 26693  005FE8  5012               	movf	i1__tdiv_to_l_@exp1,w,c
 26694  005FEA  A4D8               	btfss	16344,2,c
 26695  005FEC  D7F7               	goto	i1l1552
 26696  005FEE                     i1u1418_20:
 26697  005FEE  0060  F034  F004   	movff	i1__tdiv_to_l_@quot,?i1__tdiv_to_l_
 26698  005FF4  0060  F038  F005   	movff	i1__tdiv_to_l_@quot+1,?i1__tdiv_to_l_+1
 26699  005FFA  0060  F03C  F006   	movff	i1__tdiv_to_l_@quot+2,?i1__tdiv_to_l_+2
 26700  006000  0060  F040  F007   	movff	i1__tdiv_to_l_@quot+3,?i1__tdiv_to_l_+3
 26701  006006  0012               	return		;funcret
 26702  006008                     __end_ofi1__tdiv_to_l_:
 26703                           	opt stack 0
 26704                           
 26705 ;; *************** function i1__div_to_l_ *****************
 26706 ;; Defined at:
 26707 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 26708 ;; Parameters:    Size  Location     Type
 26709 ;;  f1              3    3[COMRAM] unsigned long 
 26710 ;;  f2              3    6[COMRAM] unsigned long 
 26711 ;; Auto vars:     Size  Location     Type
 26712 ;;  _div_to_l_      4    9[COMRAM] unsigned long 
 26713 ;;  _div_to_l_      1   14[COMRAM] unsigned char 
 26714 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 26715 ;; Return value:  Size  Location     Type
 26716 ;;                  4    3[COMRAM] unsigned long 
 26717 ;; Registers used:
 26718 ;;		wreg, status,2, status,0
 26719 ;; Tracked objects:
 26720 ;;		On entry : 0/0
 26721 ;;		On exit  : 0/0
 26722 ;;		Unchanged: 0/0
 26723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26724 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26725 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26727 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26728 ;;Total ram usage:       12 bytes
 26729 ;; Hardware stack levels used:    1
 26730 ;; This function calls:
 26731 ;;		Nothing
 26732 ;; This function is called by:
 26733 ;;		i1_sprintf
 26734 ;; This function uses a non-reentrant model
 26735 ;;
 26736                           
 26737                           	psect	text92
 26738  006272                     __ptext92:
 26739                           	opt stack 0
 26740  006272                     i1__div_to_l_:
 26741                           	opt stack 18
 26742                           
 26743                           ;incstack = 0
 26744  006272  3406               	rlcf	i1__div_to_l_@f1+2,w,c
 26745  006274  3407               	rlcf	i1__div_to_l_@f1+3,w,c
 26746  006276  6E0F               	movwf	i1__div_to_l_@exp1,c
 26747  006278  500F               	movf	i1__div_to_l_@exp1,w,c
 26748  00627A  A4D8               	btfss	16344,2,c
 26749  00627C  D009               	goto	i1l1435
 26750  00627E  0E00               	movlw	0
 26751  006280  6E04               	movwf	?i1__div_to_l_,c
 26752  006282  0E00               	movlw	0
 26753  006284  6E05               	movwf	?i1__div_to_l_+1,c
 26754  006286  0E00               	movlw	0
 26755  006288  6E06               	movwf	?i1__div_to_l_+2,c
 26756  00628A  0E00               	movlw	0
 26757  00628C  6E07               	movwf	?i1__div_to_l_+3,c
 26758  00628E  0012               	return	
 26759  006290                     i1l1435:
 26760  006290  3409               	rlcf	i1__div_to_l_@f2+2,w,c
 26761  006292  340A               	rlcf	i1__div_to_l_@f2+3,w,c
 26762  006294  6E0E               	movwf	i1__div_to_l_@cntr,c
 26763  006296  500E               	movf	i1__div_to_l_@cntr,w,c
 26764  006298  A4D8               	btfss	16344,2,c
 26765  00629A  D009               	goto	i1l1437
 26766  00629C  0E00               	movlw	0
 26767  00629E  6E04               	movwf	?i1__div_to_l_,c
 26768  0062A0  0E00               	movlw	0
 26769  0062A2  6E05               	movwf	?i1__div_to_l_+1,c
 26770  0062A4  0E00               	movlw	0
 26771  0062A6  6E06               	movwf	?i1__div_to_l_+2,c
 26772  0062A8  0E00               	movlw	0
 26773  0062AA  6E07               	movwf	?i1__div_to_l_+3,c
 26774  0062AC  0012               	return	
 26775  0062AE                     i1l1437:
 26776  0062AE  8E06               	bsf	i1__div_to_l_@f1+2,7,c
 26777  0062B0  0EFF               	movlw	255
 26778  0062B2  1604               	andwf	i1__div_to_l_@f1,f,c
 26779  0062B4  0EFF               	movlw	255
 26780  0062B6  1605               	andwf	i1__div_to_l_@f1+1,f,c
 26781  0062B8  0EFF               	movlw	255
 26782  0062BA  1606               	andwf	i1__div_to_l_@f1+2,f,c
 26783  0062BC  0E00               	movlw	0
 26784  0062BE  1607               	andwf	i1__div_to_l_@f1+3,f,c
 26785  0062C0  8E09               	bsf	i1__div_to_l_@f2+2,7,c
 26786  0062C2  0EFF               	movlw	255
 26787  0062C4  1607               	andwf	i1__div_to_l_@f2,f,c
 26788  0062C6  0EFF               	movlw	255
 26789  0062C8  1608               	andwf	i1__div_to_l_@f2+1,f,c
 26790  0062CA  0EFF               	movlw	255
 26791  0062CC  1609               	andwf	i1__div_to_l_@f2+2,f,c
 26792  0062CE  0E00               	movlw	0
 26793  0062D0  160A               	andwf	i1__div_to_l_@f2+3,f,c
 26794  0062D2  0E00               	movlw	0
 26795  0062D4  6E0A               	movwf	i1__div_to_l_@quot,c
 26796  0062D6  0E00               	movlw	0
 26797  0062D8  6E0B               	movwf	i1__div_to_l_@quot+1,c
 26798  0062DA  0E00               	movlw	0
 26799  0062DC  6E0C               	movwf	i1__div_to_l_@quot+2,c
 26800  0062DE  0E00               	movlw	0
 26801  0062E0  6E0D               	movwf	i1__div_to_l_@quot+3,c
 26802  0062E2  0E7F               	movlw	127
 26803  0062E4  5E0F               	subwf	i1__div_to_l_@exp1,f,c
 26804  0062E6  500E               	movf	i1__div_to_l_@cntr,w,c
 26805  0062E8  0FA0               	addlw	160
 26806  0062EA  5E0F               	subwf	i1__div_to_l_@exp1,f,c
 26807  0062EC  0E20               	movlw	32
 26808  0062EE  6E0E               	movwf	i1__div_to_l_@cntr,c
 26809  0062F0  90D8               	bcf	16344,0,c
 26810  0062F2  360A               	rlcf	i1__div_to_l_@quot,f,c
 26811  0062F4  360B               	rlcf	i1__div_to_l_@quot+1,f,c
 26812  0062F6  360C               	rlcf	i1__div_to_l_@quot+2,f,c
 26813  0062F8  360D               	rlcf	i1__div_to_l_@quot+3,f,c
 26814  0062FA  5007               	movf	i1__div_to_l_@f2,w,c
 26815  0062FC  5C04               	subwf	i1__div_to_l_@f1,w,c
 26816  0062FE  5008               	movf	i1__div_to_l_@f2+1,w,c
 26817  006300  5805               	subwfb	i1__div_to_l_@f1+1,w,c
 26818  006302  5009               	movf	i1__div_to_l_@f2+2,w,c
 26819  006304  5806               	subwfb	i1__div_to_l_@f1+2,w,c
 26820  006306  500A               	movf	i1__div_to_l_@f2+3,w,c
 26821  006308  5807               	subwfb	i1__div_to_l_@f1+3,w,c
 26822  00630A  A0D8               	btfss	16344,0,c
 26823  00630C  D009               	goto	i1l1439
 26824  00630E  5007               	movf	i1__div_to_l_@f2,w,c
 26825  006310  5E04               	subwf	i1__div_to_l_@f1,f,c
 26826  006312  5008               	movf	i1__div_to_l_@f2+1,w,c
 26827  006314  5A05               	subwfb	i1__div_to_l_@f1+1,f,c
 26828  006316  5009               	movf	i1__div_to_l_@f2+2,w,c
 26829  006318  5A06               	subwfb	i1__div_to_l_@f1+2,f,c
 26830  00631A  500A               	movf	i1__div_to_l_@f2+3,w,c
 26831  00631C  5A07               	subwfb	i1__div_to_l_@f1+3,f,c
 26832  00631E  800A               	bsf	i1__div_to_l_@quot,0,c
 26833  006320                     i1l1439:
 26834  006320  90D8               	bcf	16344,0,c
 26835  006322  3604               	rlcf	i1__div_to_l_@f1,f,c
 26836  006324  3605               	rlcf	i1__div_to_l_@f1+1,f,c
 26837  006326  3606               	rlcf	i1__div_to_l_@f1+2,f,c
 26838  006328  3607               	rlcf	i1__div_to_l_@f1+3,f,c
 26839  00632A  2E0E               	decfsz	i1__div_to_l_@cntr,f,c
 26840  00632C  D7E1               	goto	i1l1438
 26841  00632E  AE0F               	btfss	i1__div_to_l_@exp1,7,c
 26842  006330  D016               	goto	i1l1441
 26843  006332  500F               	movf	i1__div_to_l_@exp1,w,c
 26844  006334  0A80               	xorlw	128
 26845  006336  0F9F               	addlw	159
 26846  006338  B0D8               	btfsc	16344,0,c
 26847  00633A  D009               	goto	i1l1442
 26848  00633C  0E00               	movlw	0
 26849  00633E  6E04               	movwf	?i1__div_to_l_,c
 26850  006340  0E00               	movlw	0
 26851  006342  6E05               	movwf	?i1__div_to_l_+1,c
 26852  006344  0E00               	movlw	0
 26853  006346  6E06               	movwf	?i1__div_to_l_+2,c
 26854  006348  0E00               	movlw	0
 26855  00634A  6E07               	movwf	?i1__div_to_l_+3,c
 26856  00634C  0012               	return	
 26857  00634E                     i1l1442:
 26858  00634E  90D8               	bcf	16344,0,c
 26859  006350  320D               	rrcf	i1__div_to_l_@quot+3,f,c
 26860  006352  320C               	rrcf	i1__div_to_l_@quot+2,f,c
 26861  006354  320B               	rrcf	i1__div_to_l_@quot+1,f,c
 26862  006356  320A               	rrcf	i1__div_to_l_@quot,f,c
 26863  006358  3E0F               	incfsz	i1__div_to_l_@exp1,f,c
 26864  00635A  D7F9               	goto	i1l1442
 26865  00635C  D015               	goto	i1u1404_20
 26866  00635E                     i1l1441:
 26867  00635E  0E1F               	movlw	31
 26868  006360  640F               	cpfsgt	i1__div_to_l_@exp1,c
 26869  006362  D00F               	goto	i1l1447
 26870  006364  0E00               	movlw	0
 26871  006366  6E04               	movwf	?i1__div_to_l_,c
 26872  006368  0E00               	movlw	0
 26873  00636A  6E05               	movwf	?i1__div_to_l_+1,c
 26874  00636C  0E00               	movlw	0
 26875  00636E  6E06               	movwf	?i1__div_to_l_+2,c
 26876  006370  0E00               	movlw	0
 26877  006372  6E07               	movwf	?i1__div_to_l_+3,c
 26878  006374  0012               	return	
 26879  006376  90D8               	bcf	16344,0,c
 26880  006378  360A               	rlcf	i1__div_to_l_@quot,f,c
 26881  00637A  360B               	rlcf	i1__div_to_l_@quot+1,f,c
 26882  00637C  360C               	rlcf	i1__div_to_l_@quot+2,f,c
 26883  00637E  360D               	rlcf	i1__div_to_l_@quot+3,f,c
 26884  006380  060F               	decf	i1__div_to_l_@exp1,f,c
 26885  006382                     i1l1447:
 26886  006382  500F               	movf	i1__div_to_l_@exp1,w,c
 26887  006384  A4D8               	btfss	16344,2,c
 26888  006386  D7F7               	goto	i1l1448
 26889  006388                     i1u1404_20:
 26890  006388  0060  F028  F004   	movff	i1__div_to_l_@quot,?i1__div_to_l_
 26891  00638E  0060  F02C  F005   	movff	i1__div_to_l_@quot+1,?i1__div_to_l_+1
 26892  006394  0060  F030  F006   	movff	i1__div_to_l_@quot+2,?i1__div_to_l_+2
 26893  00639A  0060  F034  F007   	movff	i1__div_to_l_@quot+3,?i1__div_to_l_+3
 26894  0063A0  0012               	return		;funcret
 26895  0063A2                     __end_ofi1__div_to_l_:
 26896                           	opt stack 0
 26897                           
 26898 ;; *************** function i1___lltoft *****************
 26899 ;; Defined at:
 26900 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 26901 ;; Parameters:    Size  Location     Type
 26902 ;;  c               4   38[COMRAM] unsigned long 
 26903 ;; Auto vars:     Size  Location     Type
 26904 ;;  __lltoft        1   46[COMRAM] unsigned char 
 26905 ;; Return value:  Size  Location     Type
 26906 ;;                  3   38[COMRAM] float 
 26907 ;; Registers used:
 26908 ;;		wreg, status,2, status,0, cstack
 26909 ;; Tracked objects:
 26910 ;;		On entry : 0/0
 26911 ;;		On exit  : 0/0
 26912 ;;		Unchanged: 0/0
 26913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26914 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26916 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26917 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26918 ;;Total ram usage:        9 bytes
 26919 ;; Hardware stack levels used:    1
 26920 ;; Hardware stack levels required when called:    1
 26921 ;; This function calls:
 26922 ;;		i1___ftpack
 26923 ;; This function is called by:
 26924 ;;		i1_sprintf
 26925 ;; This function uses a non-reentrant model
 26926 ;;
 26927                           
 26928                           	psect	text93
 26929  007FBA                     __ptext93:
 26930                           	opt stack 0
 26931  007FBA                     i1___lltoft:
 26932                           	opt stack 17
 26933                           
 26934                           ;incstack = 0
 26935  007FBA  0E8E               	movlw	142
 26936  007FBC  6E2F               	movwf	i1___lltoft@exp,c
 26937  007FBE  D006               	goto	i1l1646
 26938  007FC0  90D8               	bcf	16344,0,c
 26939  007FC2  322A               	rrcf	i1___lltoft@c+3,f,c
 26940  007FC4  3229               	rrcf	i1___lltoft@c+2,f,c
 26941  007FC6  3228               	rrcf	i1___lltoft@c+1,f,c
 26942  007FC8  3227               	rrcf	i1___lltoft@c,f,c
 26943  007FCA  2A2F               	incf	i1___lltoft@exp,f,c
 26944  007FCC                     i1l1646:
 26945  007FCC  0E00               	movlw	0
 26946  007FCE  1427               	andwf	i1___lltoft@c,w,c
 26947  007FD0  6E2B               	movwf	??i1___lltoft& (0+255),c
 26948  007FD2  0E00               	movlw	0
 26949  007FD4  1428               	andwf	i1___lltoft@c+1,w,c
 26950  007FD6  6E2C               	movwf	(??i1___lltoft+1)& (0+255),c
 26951  007FD8  0E00               	movlw	0
 26952  007FDA  1429               	andwf	i1___lltoft@c+2,w,c
 26953  007FDC  6E2D               	movwf	(??i1___lltoft+2)& (0+255),c
 26954  007FDE  0EFF               	movlw	255
 26955  007FE0  142A               	andwf	i1___lltoft@c+3,w,c
 26956  007FE2  6E2E               	movwf	(??i1___lltoft+3)& (0+255),c
 26957  007FE4  502B               	movf	??i1___lltoft,w,c
 26958  007FE6  102C               	iorwf	??i1___lltoft+1,w,c
 26959  007FE8  102D               	iorwf	??i1___lltoft+2,w,c
 26960  007FEA  102E               	iorwf	??i1___lltoft+3,w,c
 26961  007FEC  A4D8               	btfss	16344,2,c
 26962  007FEE  D7E8               	goto	i1l1647
 26963  007FF0  0060  F09C  F004   	movff	i1___lltoft@c,i1___ftpack@arg
 26964  007FF6  0060  F0A0  F005   	movff	i1___lltoft@c+1,i1___ftpack@arg+1
 26965  007FFC  0060  F0A4  F006   	movff	i1___lltoft@c+2,i1___ftpack@arg+2
 26966  008002  0060  F0BC  F007   	movff	i1___lltoft@exp,i1___ftpack@exp
 26967  008008  0E00               	movlw	0
 26968  00800A  6E08               	movwf	i1___ftpack@sign,c
 26969  00800C  EC3B  F03A         	call	i1___ftpack	;wreg free
 26970  008010  0060  F010  F027   	movff	?i1___ftpack,?i1___lltoft
 26971  008016  0060  F014  F028   	movff	?i1___ftpack+1,?i1___lltoft+1
 26972  00801C  0060  F018  F029   	movff	?i1___ftpack+2,?i1___lltoft+2
 26973  008022  0012               	return	
 26974  008024                     __end_ofi1___lltoft:
 26975                           	opt stack 0
 26976                           
 26977 ;; *************** function i1___llmod *****************
 26978 ;; Defined at:
 26979 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 26980 ;; Parameters:    Size  Location     Type
 26981 ;;  dividend        4   16[COMRAM] unsigned long 
 26982 ;;  divisor         4   20[COMRAM] unsigned long 
 26983 ;; Auto vars:     Size  Location     Type
 26984 ;;  __llmod         1   24[COMRAM] unsigned char 
 26985 ;; Return value:  Size  Location     Type
 26986 ;;                  4   16[COMRAM] unsigned long 
 26987 ;; Registers used:
 26988 ;;		wreg, status,2, status,0
 26989 ;; Tracked objects:
 26990 ;;		On entry : 0/0
 26991 ;;		On exit  : 0/0
 26992 ;;		Unchanged: 0/0
 26993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26994 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26995 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26997 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26998 ;;Total ram usage:        9 bytes
 26999 ;; Hardware stack levels used:    1
 27000 ;; This function calls:
 27001 ;;		Nothing
 27002 ;; This function is called by:
 27003 ;;		i1_sprintf
 27004 ;; This function uses a non-reentrant model
 27005 ;;
 27006                           
 27007                           	psect	text94
 27008  007EE0                     __ptext94:
 27009                           	opt stack 0
 27010  007EE0                     i1___llmod:
 27011                           	opt stack 18
 27012                           
 27013                           ;incstack = 0
 27014  007EE0  5015               	movf	i1___llmod@divisor,w,c
 27015  007EE2  1016               	iorwf	i1___llmod@divisor+1,w,c
 27016  007EE4  1017               	iorwf	i1___llmod@divisor+2,w,c
 27017  007EE6  1018               	iorwf	i1___llmod@divisor+3,w,c
 27018  007EE8  B4D8               	btfsc	16344,2,c
 27019  007EEA  D024               	goto	i1l1640
 27020  007EEC  0E01               	movlw	1
 27021  007EEE  6E19               	movwf	i1___llmod@counter,c
 27022  007EF0  D006               	goto	i1l1635
 27023  007EF2  90D8               	bcf	16344,0,c
 27024  007EF4  3615               	rlcf	i1___llmod@divisor,f,c
 27025  007EF6  3616               	rlcf	i1___llmod@divisor+1,f,c
 27026  007EF8  3617               	rlcf	i1___llmod@divisor+2,f,c
 27027  007EFA  3618               	rlcf	i1___llmod@divisor+3,f,c
 27028  007EFC  2A19               	incf	i1___llmod@counter,f,c
 27029  007EFE                     i1l1635:
 27030  007EFE  AE18               	btfss	i1___llmod@divisor+3,7,c
 27031  007F00  D7F8               	goto	i1l1636
 27032  007F02                     i1u1438_20:
 27033  007F02  5015               	movf	i1___llmod@divisor,w,c
 27034  007F04  5C11               	subwf	i1___llmod@dividend,w,c
 27035  007F06  5016               	movf	i1___llmod@divisor+1,w,c
 27036  007F08  5812               	subwfb	i1___llmod@dividend+1,w,c
 27037  007F0A  5017               	movf	i1___llmod@divisor+2,w,c
 27038  007F0C  5813               	subwfb	i1___llmod@dividend+2,w,c
 27039  007F0E  5018               	movf	i1___llmod@divisor+3,w,c
 27040  007F10  5814               	subwfb	i1___llmod@dividend+3,w,c
 27041  007F12  A0D8               	btfss	16344,0,c
 27042  007F14  D008               	goto	i1l1639
 27043  007F16  5015               	movf	i1___llmod@divisor,w,c
 27044  007F18  5E11               	subwf	i1___llmod@dividend,f,c
 27045  007F1A  5016               	movf	i1___llmod@divisor+1,w,c
 27046  007F1C  5A12               	subwfb	i1___llmod@dividend+1,f,c
 27047  007F1E  5017               	movf	i1___llmod@divisor+2,w,c
 27048  007F20  5A13               	subwfb	i1___llmod@dividend+2,f,c
 27049  007F22  5018               	movf	i1___llmod@divisor+3,w,c
 27050  007F24  5A14               	subwfb	i1___llmod@dividend+3,f,c
 27051  007F26                     i1l1639:
 27052  007F26  90D8               	bcf	16344,0,c
 27053  007F28  3218               	rrcf	i1___llmod@divisor+3,f,c
 27054  007F2A  3217               	rrcf	i1___llmod@divisor+2,f,c
 27055  007F2C  3216               	rrcf	i1___llmod@divisor+1,f,c
 27056  007F2E  3215               	rrcf	i1___llmod@divisor,f,c
 27057  007F30  2E19               	decfsz	i1___llmod@counter,f,c
 27058  007F32  D7E7               	goto	i1u1438_20
 27059  007F34                     i1l1640:
 27060  007F34  0060  F044  F011   	movff	i1___llmod@dividend,?i1___llmod
 27061  007F3A  0060  F048  F012   	movff	i1___llmod@dividend+1,?i1___llmod+1
 27062  007F40  0060  F04C  F013   	movff	i1___llmod@dividend+2,?i1___llmod+2
 27063  007F46  0060  F050  F014   	movff	i1___llmod@dividend+3,?i1___llmod+3
 27064  007F4C  0012               	return		;funcret
 27065  007F4E                     __end_ofi1___llmod:
 27066                           	opt stack 0
 27067                           
 27068 ;; *************** function i1___lldiv *****************
 27069 ;; Defined at:
 27070 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 27071 ;; Parameters:    Size  Location     Type
 27072 ;;  dividend        4    3[COMRAM] unsigned long 
 27073 ;;  divisor         4    7[COMRAM] unsigned long 
 27074 ;; Auto vars:     Size  Location     Type
 27075 ;;  __lldiv         4   11[COMRAM] unsigned long 
 27076 ;;  __lldiv         1   15[COMRAM] unsigned char 
 27077 ;; Return value:  Size  Location     Type
 27078 ;;                  4    3[COMRAM] unsigned long 
 27079 ;; Registers used:
 27080 ;;		wreg, status,2, status,0
 27081 ;; Tracked objects:
 27082 ;;		On entry : 0/0
 27083 ;;		On exit  : 0/0
 27084 ;;		Unchanged: 0/0
 27085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27086 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27087 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27089 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27090 ;;Total ram usage:       13 bytes
 27091 ;; Hardware stack levels used:    1
 27092 ;; This function calls:
 27093 ;;		Nothing
 27094 ;; This function is called by:
 27095 ;;		i1_sprintf
 27096 ;; This function uses a non-reentrant model
 27097 ;;
 27098                           
 27099                           	psect	text95
 27100  007A08                     __ptext95:
 27101                           	opt stack 0
 27102  007A08                     i1___lldiv:
 27103                           	opt stack 18
 27104                           
 27105                           ;incstack = 0
 27106  007A08  0E00               	movlw	0
 27107  007A0A  6E0C               	movwf	i1___lldiv@quotient,c
 27108  007A0C  0E00               	movlw	0
 27109  007A0E  6E0D               	movwf	i1___lldiv@quotient+1,c
 27110  007A10  0E00               	movlw	0
 27111  007A12  6E0E               	movwf	i1___lldiv@quotient+2,c
 27112  007A14  0E00               	movlw	0
 27113  007A16  6E0F               	movwf	i1___lldiv@quotient+3,c
 27114  007A18  5008               	movf	i1___lldiv@divisor,w,c
 27115  007A1A  1009               	iorwf	i1___lldiv@divisor+1,w,c
 27116  007A1C  100A               	iorwf	i1___lldiv@divisor+2,w,c
 27117  007A1E  100B               	iorwf	i1___lldiv@divisor+3,w,c
 27118  007A20  B4D8               	btfsc	16344,2,c
 27119  007A22  D02A               	goto	i1l1630
 27120  007A24  0E01               	movlw	1
 27121  007A26  6E10               	movwf	i1___lldiv@counter,c
 27122  007A28  D006               	goto	i1l1625
 27123  007A2A  90D8               	bcf	16344,0,c
 27124  007A2C  3608               	rlcf	i1___lldiv@divisor,f,c
 27125  007A2E  3609               	rlcf	i1___lldiv@divisor+1,f,c
 27126  007A30  360A               	rlcf	i1___lldiv@divisor+2,f,c
 27127  007A32  360B               	rlcf	i1___lldiv@divisor+3,f,c
 27128  007A34  2A10               	incf	i1___lldiv@counter,f,c
 27129  007A36                     i1l1625:
 27130  007A36  AE0B               	btfss	i1___lldiv@divisor+3,7,c
 27131  007A38  D7F8               	goto	i1l1626
 27132  007A3A                     i1u1435_20:
 27133  007A3A  90D8               	bcf	16344,0,c
 27134  007A3C  360C               	rlcf	i1___lldiv@quotient,f,c
 27135  007A3E  360D               	rlcf	i1___lldiv@quotient+1,f,c
 27136  007A40  360E               	rlcf	i1___lldiv@quotient+2,f,c
 27137  007A42  360F               	rlcf	i1___lldiv@quotient+3,f,c
 27138  007A44  5008               	movf	i1___lldiv@divisor,w,c
 27139  007A46  5C04               	subwf	i1___lldiv@dividend,w,c
 27140  007A48  5009               	movf	i1___lldiv@divisor+1,w,c
 27141  007A4A  5805               	subwfb	i1___lldiv@dividend+1,w,c
 27142  007A4C  500A               	movf	i1___lldiv@divisor+2,w,c
 27143  007A4E  5806               	subwfb	i1___lldiv@dividend+2,w,c
 27144  007A50  500B               	movf	i1___lldiv@divisor+3,w,c
 27145  007A52  5807               	subwfb	i1___lldiv@dividend+3,w,c
 27146  007A54  A0D8               	btfss	16344,0,c
 27147  007A56  D009               	goto	i1l1629
 27148  007A58  5008               	movf	i1___lldiv@divisor,w,c
 27149  007A5A  5E04               	subwf	i1___lldiv@dividend,f,c
 27150  007A5C  5009               	movf	i1___lldiv@divisor+1,w,c
 27151  007A5E  5A05               	subwfb	i1___lldiv@dividend+1,f,c
 27152  007A60  500A               	movf	i1___lldiv@divisor+2,w,c
 27153  007A62  5A06               	subwfb	i1___lldiv@dividend+2,f,c
 27154  007A64  500B               	movf	i1___lldiv@divisor+3,w,c
 27155  007A66  5A07               	subwfb	i1___lldiv@dividend+3,f,c
 27156  007A68  800C               	bsf	i1___lldiv@quotient,0,c
 27157  007A6A                     i1l1629:
 27158  007A6A  90D8               	bcf	16344,0,c
 27159  007A6C  320B               	rrcf	i1___lldiv@divisor+3,f,c
 27160  007A6E  320A               	rrcf	i1___lldiv@divisor+2,f,c
 27161  007A70  3209               	rrcf	i1___lldiv@divisor+1,f,c
 27162  007A72  3208               	rrcf	i1___lldiv@divisor,f,c
 27163  007A74  2E10               	decfsz	i1___lldiv@counter,f,c
 27164  007A76  D7E1               	goto	i1u1435_20
 27165  007A78                     i1l1630:
 27166  007A78  0060  F030  F004   	movff	i1___lldiv@quotient,?i1___lldiv
 27167  007A7E  0060  F034  F005   	movff	i1___lldiv@quotient+1,?i1___lldiv+1
 27168  007A84  0060  F038  F006   	movff	i1___lldiv@quotient+2,?i1___lldiv+2
 27169  007A8A  0060  F03C  F007   	movff	i1___lldiv@quotient+3,?i1___lldiv+3
 27170  007A90  0012               	return		;funcret
 27171  007A92                     __end_ofi1___lldiv:
 27172                           	opt stack 0
 27173                           
 27174 ;; *************** function i1___fttol *****************
 27175 ;; Defined at:
 27176 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 27177 ;; Parameters:    Size  Location     Type
 27178 ;;  f1              3   23[COMRAM] float 
 27179 ;; Auto vars:     Size  Location     Type
 27180 ;;  __fttol         4   33[COMRAM] unsigned long 
 27181 ;;  __fttol         1   37[COMRAM] unsigned char 
 27182 ;;  __fttol         1   32[COMRAM] unsigned char 
 27183 ;; Return value:  Size  Location     Type
 27184 ;;                  4   23[COMRAM] long 
 27185 ;; Registers used:
 27186 ;;		wreg, status,2, status,0
 27187 ;; Tracked objects:
 27188 ;;		On entry : 0/0
 27189 ;;		On exit  : 0/0
 27190 ;;		Unchanged: 0/0
 27191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27193 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27194 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27195 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27196 ;;Total ram usage:       15 bytes
 27197 ;; Hardware stack levels used:    1
 27198 ;; This function calls:
 27199 ;;		Nothing
 27200 ;; This function is called by:
 27201 ;;		i1_sprintf
 27202 ;; This function uses a non-reentrant model
 27203 ;;
 27204                           
 27205                           	psect	text96
 27206  0068D6                     __ptext96:
 27207                           	opt stack 0
 27208  0068D6                     i1___fttol:
 27209                           	opt stack 18
 27210                           
 27211                           ;incstack = 0
 27212  0068D6  0060  F068  F01C   	movff	i1___fttol@f1+2,??i1___fttol
 27213  0068DC  6A1D               	clrf	(??i1___fttol+1)& (0+255),c
 27214  0068DE  6A1E               	clrf	(??i1___fttol+2)& (0+255),c
 27215  0068E0  3419               	rlcf	i1___fttol@f1+1,w,c
 27216  0068E2  361C               	rlcf	??i1___fttol& (0+255),f,c
 27217  0068E4  E301               	bnc	u1424_21
 27218  0068E6  801D               	bsf	(??i1___fttol+1)& (0+255),0,c
 27219  0068E8                     u1424_21:
 27220  0068E8  501C               	movf	??i1___fttol,w,c
 27221  0068EA  6E26               	movwf	i1___fttol@exp1,c
 27222  0068EC  5026               	movf	i1___fttol@exp1,w,c
 27223  0068EE  A4D8               	btfss	16344,2,c
 27224  0068F0  D009               	goto	i1l1584
 27225  0068F2  0E00               	movlw	0
 27226  0068F4  6E18               	movwf	?i1___fttol,c
 27227  0068F6  0E00               	movlw	0
 27228  0068F8  6E19               	movwf	?i1___fttol+1,c
 27229  0068FA  0E00               	movlw	0
 27230  0068FC  6E1A               	movwf	?i1___fttol+2,c
 27231  0068FE  0E00               	movlw	0
 27232  006900  6E1B               	movwf	?i1___fttol+3,c
 27233  006902  0012               	return	
 27234  006904                     i1l1584:
 27235  006904  0E17               	movlw	23
 27236  006906  6E1C               	movwf	??i1___fttol& (0+255),c
 27237  006908  0060  F060  F01D   	movff	i1___fttol@f1,??i1___fttol+1
 27238  00690E  0060  F064  F01E   	movff	i1___fttol@f1+1,??i1___fttol+2
 27239  006914  0060  F068  F01F   	movff	i1___fttol@f1+2,??i1___fttol+3
 27240  00691A  281C               	incf	??i1___fttol,w,c
 27241  00691C  6E20               	movwf	(??i1___fttol+4)& (0+255),c
 27242  00691E  D004               	goto	i1u1426_20
 27243  006920                     i1u1426_25:
 27244  006920  90D8               	bcf	16344,0,c
 27245  006922  321F               	rrcf	??i1___fttol+3,f,c
 27246  006924  321E               	rrcf	??i1___fttol+2,f,c
 27247  006926  321D               	rrcf	??i1___fttol+1,f,c
 27248  006928                     i1u1426_20:
 27249  006928  2E20               	decfsz	(??i1___fttol+4)& (0+255),f,c
 27250  00692A  D7FA               	goto	i1u1426_25
 27251  00692C  501D               	movf	??i1___fttol+1,w,c
 27252  00692E  6E21               	movwf	i1___fttol@sign1,c
 27253  006930  8E19               	bsf	i1___fttol@f1+1,7,c
 27254  006932  0EFF               	movlw	255
 27255  006934  1618               	andwf	i1___fttol@f1,f,c
 27256  006936  0EFF               	movlw	255
 27257  006938  1619               	andwf	i1___fttol@f1+1,f,c
 27258  00693A  0E00               	movlw	0
 27259  00693C  161A               	andwf	i1___fttol@f1+2,f,c
 27260  00693E  5018               	movf	i1___fttol@f1,w,c
 27261  006940  6E22               	movwf	i1___fttol@lval,c
 27262  006942  5019               	movf	i1___fttol@f1+1,w,c
 27263  006944  6E23               	movwf	i1___fttol@lval+1,c
 27264  006946  501A               	movf	i1___fttol@f1+2,w,c
 27265  006948  6E24               	movwf	i1___fttol@lval+2,c
 27266  00694A  6A25               	clrf	i1___fttol@lval+3,c
 27267  00694C  0E8E               	movlw	142
 27268  00694E  5E26               	subwf	i1___fttol@exp1,f,c
 27269  006950  AE26               	btfss	i1___fttol@exp1,7,c
 27270  006952  D016               	goto	i1l1586
 27271  006954  5026               	movf	i1___fttol@exp1,w,c
 27272  006956  0A80               	xorlw	128
 27273  006958  0F8F               	addlw	143
 27274  00695A  B0D8               	btfsc	16344,0,c
 27275  00695C  D009               	goto	i1l1587
 27276  00695E  0E00               	movlw	0
 27277  006960  6E18               	movwf	?i1___fttol,c
 27278  006962  0E00               	movlw	0
 27279  006964  6E19               	movwf	?i1___fttol+1,c
 27280  006966  0E00               	movlw	0
 27281  006968  6E1A               	movwf	?i1___fttol+2,c
 27282  00696A  0E00               	movlw	0
 27283  00696C  6E1B               	movwf	?i1___fttol+3,c
 27284  00696E  0012               	return	
 27285  006970                     i1l1587:
 27286  006970  90D8               	bcf	16344,0,c
 27287  006972  3225               	rrcf	i1___fttol@lval+3,f,c
 27288  006974  3224               	rrcf	i1___fttol@lval+2,f,c
 27289  006976  3223               	rrcf	i1___fttol@lval+1,f,c
 27290  006978  3222               	rrcf	i1___fttol@lval,f,c
 27291  00697A  3E26               	incfsz	i1___fttol@exp1,f,c
 27292  00697C  D7F9               	goto	i1l1587
 27293  00697E  D015               	goto	i1u1430_20
 27294  006980                     i1l1586:
 27295  006980  0E17               	movlw	23
 27296  006982  6426               	cpfsgt	i1___fttol@exp1,c
 27297  006984  D00F               	goto	i1l1592
 27298  006986  0E00               	movlw	0
 27299  006988  6E18               	movwf	?i1___fttol,c
 27300  00698A  0E00               	movlw	0
 27301  00698C  6E19               	movwf	?i1___fttol+1,c
 27302  00698E  0E00               	movlw	0
 27303  006990  6E1A               	movwf	?i1___fttol+2,c
 27304  006992  0E00               	movlw	0
 27305  006994  6E1B               	movwf	?i1___fttol+3,c
 27306  006996  0012               	return	
 27307  006998  90D8               	bcf	16344,0,c
 27308  00699A  3622               	rlcf	i1___fttol@lval,f,c
 27309  00699C  3623               	rlcf	i1___fttol@lval+1,f,c
 27310  00699E  3624               	rlcf	i1___fttol@lval+2,f,c
 27311  0069A0  3625               	rlcf	i1___fttol@lval+3,f,c
 27312  0069A2  0626               	decf	i1___fttol@exp1,f,c
 27313  0069A4                     i1l1592:
 27314  0069A4  5026               	movf	i1___fttol@exp1,w,c
 27315  0069A6  A4D8               	btfss	16344,2,c
 27316  0069A8  D7F7               	goto	i1l1593
 27317  0069AA                     i1u1430_20:
 27318  0069AA  5021               	movf	i1___fttol@sign1,w,c
 27319  0069AC  B4D8               	btfsc	16344,2,c
 27320  0069AE  D008               	goto	i1l1595
 27321  0069B0  1E25               	comf	i1___fttol@lval+3,f,c
 27322  0069B2  1E24               	comf	i1___fttol@lval+2,f,c
 27323  0069B4  1E23               	comf	i1___fttol@lval+1,f,c
 27324  0069B6  6C22               	negf	i1___fttol@lval,c
 27325  0069B8  0E00               	movlw	0
 27326  0069BA  2223               	addwfc	i1___fttol@lval+1,f,c
 27327  0069BC  2224               	addwfc	i1___fttol@lval+2,f,c
 27328  0069BE  2225               	addwfc	i1___fttol@lval+3,f,c
 27329  0069C0                     i1l1595:
 27330  0069C0  0060  F088  F018   	movff	i1___fttol@lval,?i1___fttol
 27331  0069C6  0060  F08C  F019   	movff	i1___fttol@lval+1,?i1___fttol+1
 27332  0069CC  0060  F090  F01A   	movff	i1___fttol@lval+2,?i1___fttol+2
 27333  0069D2  0060  F094  F01B   	movff	i1___fttol@lval+3,?i1___fttol+3
 27334  0069D8  0012               	return	
 27335  0069DA                     __end_ofi1___fttol:
 27336                           	opt stack 0
 27337                           
 27338 ;; *************** function i1___ftsub *****************
 27339 ;; Defined at:
 27340 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 27341 ;; Parameters:    Size  Location     Type
 27342 ;;  f1              3    0[BANK0 ] float 
 27343 ;;  f2              3    3[BANK0 ] float 
 27344 ;; Auto vars:     Size  Location     Type
 27345 ;;		None
 27346 ;; Return value:  Size  Location     Type
 27347 ;;                  3    0[BANK0 ] float 
 27348 ;; Registers used:
 27349 ;;		wreg, status,2, status,0, cstack
 27350 ;; Tracked objects:
 27351 ;;		On entry : 0/0
 27352 ;;		On exit  : 0/0
 27353 ;;		Unchanged: 0/0
 27354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27355 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27358 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27359 ;;Total ram usage:        6 bytes
 27360 ;; Hardware stack levels used:    1
 27361 ;; Hardware stack levels required when called:    2
 27362 ;; This function calls:
 27363 ;;		i1___ftadd
 27364 ;; This function is called by:
 27365 ;;		i1_sprintf
 27366 ;; This function uses a non-reentrant model
 27367 ;;
 27368                           
 27369                           	psect	text97
 27370  0084DA                     __ptext97:
 27371                           	opt stack 0
 27372  0084DA                     i1___ftsub:
 27373                           	opt stack 16
 27374                           
 27375                           ;incstack = 0
 27376  0084DA  0100               	movlb	0	; () banked
 27377  0084DC  5163               	movf	i1___ftsub@f2& (0+255),w,b
 27378  0084DE  1164               	iorwf	(i1___ftsub@f2+1)& (0+255),w,b
 27379  0084E0  1165               	iorwf	(i1___ftsub@f2+2)& (0+255),w,b
 27380  0084E2  B4D8               	btfsc	16344,2,c
 27381  0084E4  D006               	goto	i1l1580
 27382                           
 27383                           ; BSR set to: 0
 27384  0084E6  0E00               	movlw	0
 27385  0084E8  1B63               	xorwf	i1___ftsub@f2& (0+255),f,b
 27386  0084EA  0E00               	movlw	0
 27387  0084EC  1B64               	xorwf	(i1___ftsub@f2+1)& (0+255),f,b
 27388  0084EE  0E80               	movlw	128
 27389  0084F0  1B65               	xorwf	(i1___ftsub@f2+2)& (0+255),f,b
 27390  0084F2                     i1l1580:
 27391                           
 27392                           ; BSR set to: 0
 27393                           
 27394                           ; BSR set to: 0
 27395  0084F2  0060  F180  F04C   	movff	i1___ftsub@f1,i1___ftadd@f1
 27396  0084F8  0060  F184  F04D   	movff	i1___ftsub@f1+1,i1___ftadd@f1+1
 27397  0084FE  0060  F188  F04E   	movff	i1___ftsub@f1+2,i1___ftadd@f1+2
 27398  008504  0060  F18C  F04F   	movff	i1___ftsub@f2,i1___ftadd@f2
 27399  00850A  0060  F190  F050   	movff	i1___ftsub@f2+1,i1___ftadd@f2+1
 27400  008510  0060  F194  F051   	movff	i1___ftsub@f2+2,i1___ftadd@f2+2
 27401  008516  ECAE  F02B         	call	i1___ftadd	;wreg free
 27402  00851A  0060  F130  F060   	movff	?i1___ftadd,?i1___ftsub
 27403  008520  0060  F134  F061   	movff	?i1___ftadd+1,?i1___ftsub+1
 27404  008526  0060  F138  F062   	movff	?i1___ftadd+2,?i1___ftsub+2
 27405  00852C  0012               	return	
 27406  00852E                     __end_ofi1___ftsub:
 27407                           	opt stack 0
 27408                           
 27409 ;; *************** function i1___ftadd *****************
 27410 ;; Defined at:
 27411 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 27412 ;; Parameters:    Size  Location     Type
 27413 ;;  f1              3   75[COMRAM] float 
 27414 ;;  f2              3   78[COMRAM] float 
 27415 ;; Auto vars:     Size  Location     Type
 27416 ;;  __ftadd         1   86[COMRAM] unsigned char 
 27417 ;;  __ftadd         1   85[COMRAM] unsigned char 
 27418 ;;  __ftadd         1   84[COMRAM] unsigned char 
 27419 ;; Return value:  Size  Location     Type
 27420 ;;                  3   75[COMRAM] float 
 27421 ;; Registers used:
 27422 ;;		wreg, status,2, status,0, cstack
 27423 ;; Tracked objects:
 27424 ;;		On entry : 0/0
 27425 ;;		On exit  : 0/0
 27426 ;;		Unchanged: 0/0
 27427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27428 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27429 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27430 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27431 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27432 ;;Total ram usage:       12 bytes
 27433 ;; Hardware stack levels used:    1
 27434 ;; Hardware stack levels required when called:    1
 27435 ;; This function calls:
 27436 ;;		i1___ftpack
 27437 ;; This function is called by:
 27438 ;;		i1_sprintf
 27439 ;;		i1___ftsub
 27440 ;; This function uses a non-reentrant model
 27441 ;;
 27442                           
 27443                           	psect	text98
 27444  00575C                     __ptext98:
 27445                           	opt stack 0
 27446  00575C                     i1___ftadd:
 27447                           	opt stack 16
 27448                           
 27449                           ;incstack = 0
 27450  00575C  0060  F138  F052   	movff	i1___ftadd@f1+2,??i1___ftadd
 27451  005762  6A53               	clrf	(??i1___ftadd+1)& (0+255),c
 27452  005764  6A54               	clrf	(??i1___ftadd+2)& (0+255),c
 27453  005766  344D               	rlcf	i1___ftadd@f1+1,w,c
 27454  005768  3652               	rlcf	??i1___ftadd& (0+255),f,c
 27455  00576A  E301               	bnc	u1353_21
 27456  00576C  8053               	bsf	(??i1___ftadd+1)& (0+255),0,c
 27457  00576E                     u1353_21:
 27458  00576E  5052               	movf	??i1___ftadd,w,c
 27459  005770  6E57               	movwf	i1___ftadd@exp1,c
 27460  005772  0060  F144  F052   	movff	i1___ftadd@f2+2,??i1___ftadd
 27461  005778  6A53               	clrf	(??i1___ftadd+1)& (0+255),c
 27462  00577A  6A54               	clrf	(??i1___ftadd+2)& (0+255),c
 27463  00577C  3450               	rlcf	i1___ftadd@f2+1,w,c
 27464  00577E  3652               	rlcf	??i1___ftadd& (0+255),f,c
 27465  005780  E301               	bnc	u1354_21
 27466  005782  8053               	bsf	(??i1___ftadd+1)& (0+255),0,c
 27467  005784                     u1354_21:
 27468  005784  5052               	movf	??i1___ftadd,w,c
 27469  005786  6E56               	movwf	i1___ftadd@exp2,c
 27470  005788  5057               	movf	i1___ftadd@exp1,w,c
 27471  00578A  B4D8               	btfsc	16344,2,c
 27472  00578C  D00B               	goto	i1u1357_20
 27473  00578E  5056               	movf	i1___ftadd@exp2,w,c
 27474  005790  5C57               	subwf	i1___ftadd@exp1,w,c
 27475  005792  B0D8               	btfsc	16344,0,c
 27476  005794  D011               	goto	i1l1498
 27477  005796  5057               	movf	i1___ftadd@exp1,w,c
 27478  005798  0800               	sublw	0
 27479  00579A  2456               	addwf	i1___ftadd@exp2,w,c
 27480  00579C  6E52               	movwf	??i1___ftadd& (0+255),c
 27481  00579E  0E18               	movlw	24
 27482  0057A0  6452               	cpfsgt	??i1___ftadd,c
 27483  0057A2  D00A               	goto	i1l1498
 27484  0057A4                     i1u1357_20:
 27485  0057A4  0060  F13C  F04C   	movff	i1___ftadd@f2,?i1___ftadd
 27486  0057AA  0060  F140  F04D   	movff	i1___ftadd@f2+1,?i1___ftadd+1
 27487  0057B0  0060  F144  F04E   	movff	i1___ftadd@f2+2,?i1___ftadd+2
 27488  0057B6  0012               	return	
 27489  0057B8                     i1l1498:
 27490  0057B8  5056               	movf	i1___ftadd@exp2,w,c
 27491  0057BA  B4D8               	btfsc	16344,2,c
 27492  0057BC  D00B               	goto	i1u1360_20
 27493  0057BE  5057               	movf	i1___ftadd@exp1,w,c
 27494  0057C0  5C56               	subwf	i1___ftadd@exp2,w,c
 27495  0057C2  B0D8               	btfsc	16344,0,c
 27496  0057C4  D011               	goto	i1l1502
 27497  0057C6  5056               	movf	i1___ftadd@exp2,w,c
 27498  0057C8  0800               	sublw	0
 27499  0057CA  2457               	addwf	i1___ftadd@exp1,w,c
 27500  0057CC  6E52               	movwf	??i1___ftadd& (0+255),c
 27501  0057CE  0E18               	movlw	24
 27502  0057D0  6452               	cpfsgt	??i1___ftadd,c
 27503  0057D2  D00A               	goto	i1l1502
 27504  0057D4                     i1u1360_20:
 27505  0057D4  0060  F130  F04C   	movff	i1___ftadd@f1,?i1___ftadd
 27506  0057DA  0060  F134  F04D   	movff	i1___ftadd@f1+1,?i1___ftadd+1
 27507  0057E0  0060  F138  F04E   	movff	i1___ftadd@f1+2,?i1___ftadd+2
 27508  0057E6  0012               	return	
 27509  0057E8                     i1l1502:
 27510  0057E8  0E06               	movlw	6
 27511  0057EA  6E55               	movwf	i1___ftadd@sign,c
 27512  0057EC  BE4E               	btfsc	i1___ftadd@f1+2,7,c
 27513  0057EE  8E55               	bsf	i1___ftadd@sign,7,c
 27514  0057F0  BE51               	btfsc	i1___ftadd@f2+2,7,c
 27515  0057F2  8C55               	bsf	i1___ftadd@sign,6,c
 27516  0057F4  8E4D               	bsf	i1___ftadd@f1+1,7,c
 27517  0057F6  0EFF               	movlw	255
 27518  0057F8  164C               	andwf	i1___ftadd@f1,f,c
 27519  0057FA  0EFF               	movlw	255
 27520  0057FC  164D               	andwf	i1___ftadd@f1+1,f,c
 27521  0057FE  0E00               	movlw	0
 27522  005800  164E               	andwf	i1___ftadd@f1+2,f,c
 27523  005802  8E50               	bsf	i1___ftadd@f2+1,7,c
 27524  005804  0EFF               	movlw	255
 27525  005806  164F               	andwf	i1___ftadd@f2,f,c
 27526  005808  0EFF               	movlw	255
 27527  00580A  1650               	andwf	i1___ftadd@f2+1,f,c
 27528  00580C  0E00               	movlw	0
 27529  00580E  1651               	andwf	i1___ftadd@f2+2,f,c
 27530  005810  5056               	movf	i1___ftadd@exp2,w,c
 27531  005812  5C57               	subwf	i1___ftadd@exp1,w,c
 27532  005814  B0D8               	btfsc	16344,0,c
 27533  005816  D01C               	goto	i1l1507
 27534  005818                     i1u1363_20:
 27535  005818  90D8               	bcf	16344,0,c
 27536  00581A  364F               	rlcf	i1___ftadd@f2,f,c
 27537  00581C  3650               	rlcf	i1___ftadd@f2+1,f,c
 27538  00581E  3651               	rlcf	i1___ftadd@f2+2,f,c
 27539  005820  0656               	decf	i1___ftadd@exp2,f,c
 27540  005822  5057               	movf	i1___ftadd@exp1,w,c
 27541  005824  1856               	xorwf	i1___ftadd@exp2,w,c
 27542  005826  B4D8               	btfsc	16344,2,c
 27543  005828  D00E               	goto	i1l1512
 27544  00582A  0655               	decf	i1___ftadd@sign,f,c
 27545  00582C  0060  F154  F052   	movff	i1___ftadd@sign,??i1___ftadd
 27546  005832  0E07               	movlw	7
 27547  005834  1652               	andwf	??i1___ftadd,f,c
 27548  005836  B4D8               	btfsc	16344,2,c
 27549  005838  D006               	goto	i1l1512
 27550  00583A  D7EE               	goto	i1u1363_20
 27551  00583C  90D8               	bcf	16344,0,c
 27552  00583E  324E               	rrcf	i1___ftadd@f1+2,f,c
 27553  005840  324D               	rrcf	i1___ftadd@f1+1,f,c
 27554  005842  324C               	rrcf	i1___ftadd@f1,f,c
 27555  005844  2A57               	incf	i1___ftadd@exp1,f,c
 27556  005846                     i1l1512:
 27557  005846  5056               	movf	i1___ftadd@exp2,w,c
 27558  005848  1857               	xorwf	i1___ftadd@exp1,w,c
 27559  00584A  B4D8               	btfsc	16344,2,c
 27560  00584C  D020               	goto	i1u1370_20
 27561  00584E  D7F6               	goto	i1l1513
 27562  005850                     i1l1507:
 27563  005850  5057               	movf	i1___ftadd@exp1,w,c
 27564  005852  5C56               	subwf	i1___ftadd@exp2,w,c
 27565  005854  B0D8               	btfsc	16344,0,c
 27566  005856  D01B               	goto	i1u1370_20
 27567  005858                     i1u1367_20:
 27568  005858  90D8               	bcf	16344,0,c
 27569  00585A  364C               	rlcf	i1___ftadd@f1,f,c
 27570  00585C  364D               	rlcf	i1___ftadd@f1+1,f,c
 27571  00585E  364E               	rlcf	i1___ftadd@f1+2,f,c
 27572  005860  0657               	decf	i1___ftadd@exp1,f,c
 27573  005862  5057               	movf	i1___ftadd@exp1,w,c
 27574  005864  1856               	xorwf	i1___ftadd@exp2,w,c
 27575  005866  B4D8               	btfsc	16344,2,c
 27576  005868  D00E               	goto	i1l1521
 27577  00586A  0655               	decf	i1___ftadd@sign,f,c
 27578  00586C  0060  F154  F052   	movff	i1___ftadd@sign,??i1___ftadd
 27579  005872  0E07               	movlw	7
 27580  005874  1652               	andwf	??i1___ftadd,f,c
 27581  005876  B4D8               	btfsc	16344,2,c
 27582  005878  D006               	goto	i1l1521
 27583  00587A  D7EE               	goto	i1u1367_20
 27584  00587C  90D8               	bcf	16344,0,c
 27585  00587E  3251               	rrcf	i1___ftadd@f2+2,f,c
 27586  005880  3250               	rrcf	i1___ftadd@f2+1,f,c
 27587  005882  324F               	rrcf	i1___ftadd@f2,f,c
 27588  005884  2A56               	incf	i1___ftadd@exp2,f,c
 27589  005886                     i1l1521:
 27590  005886  5056               	movf	i1___ftadd@exp2,w,c
 27591  005888  1857               	xorwf	i1___ftadd@exp1,w,c
 27592  00588A  A4D8               	btfss	16344,2,c
 27593  00588C  D7F7               	goto	i1l1522
 27594  00588E                     i1u1370_20:
 27595  00588E  AE55               	btfss	i1___ftadd@sign,7,c
 27596  005890  D00C               	goto	i1l1524
 27597  005892  0EFF               	movlw	255
 27598  005894  1A4C               	xorwf	i1___ftadd@f1,f,c
 27599  005896  0EFF               	movlw	255
 27600  005898  1A4D               	xorwf	i1___ftadd@f1+1,f,c
 27601  00589A  0EFF               	movlw	255
 27602  00589C  1A4E               	xorwf	i1___ftadd@f1+2,f,c
 27603  00589E  0E01               	movlw	1
 27604  0058A0  264C               	addwf	i1___ftadd@f1,f,c
 27605  0058A2  0E00               	movlw	0
 27606  0058A4  224D               	addwfc	i1___ftadd@f1+1,f,c
 27607  0058A6  0E00               	movlw	0
 27608  0058A8  224E               	addwfc	i1___ftadd@f1+2,f,c
 27609  0058AA                     i1l1524:
 27610  0058AA  AC55               	btfss	i1___ftadd@sign,6,c
 27611  0058AC  D00C               	goto	i1l1525
 27612  0058AE  0EFF               	movlw	255
 27613  0058B0  1A4F               	xorwf	i1___ftadd@f2,f,c
 27614  0058B2  0EFF               	movlw	255
 27615  0058B4  1A50               	xorwf	i1___ftadd@f2+1,f,c
 27616  0058B6  0EFF               	movlw	255
 27617  0058B8  1A51               	xorwf	i1___ftadd@f2+2,f,c
 27618  0058BA  0E01               	movlw	1
 27619  0058BC  264F               	addwf	i1___ftadd@f2,f,c
 27620  0058BE  0E00               	movlw	0
 27621  0058C0  2250               	addwfc	i1___ftadd@f2+1,f,c
 27622  0058C2  0E00               	movlw	0
 27623  0058C4  2251               	addwfc	i1___ftadd@f2+2,f,c
 27624  0058C6                     i1l1525:
 27625  0058C6  0E00               	movlw	0
 27626  0058C8  6E55               	movwf	i1___ftadd@sign,c
 27627  0058CA  504C               	movf	i1___ftadd@f1,w,c
 27628  0058CC  264F               	addwf	i1___ftadd@f2,f,c
 27629  0058CE  504D               	movf	i1___ftadd@f1+1,w,c
 27630  0058D0  2250               	addwfc	i1___ftadd@f2+1,f,c
 27631  0058D2  504E               	movf	i1___ftadd@f1+2,w,c
 27632  0058D4  2251               	addwfc	i1___ftadd@f2+2,f,c
 27633  0058D6  AE51               	btfss	i1___ftadd@f2+2,7,c
 27634  0058D8  D00E               	goto	i1l1526
 27635  0058DA  0EFF               	movlw	255
 27636  0058DC  1A4F               	xorwf	i1___ftadd@f2,f,c
 27637  0058DE  0EFF               	movlw	255
 27638  0058E0  1A50               	xorwf	i1___ftadd@f2+1,f,c
 27639  0058E2  0EFF               	movlw	255
 27640  0058E4  1A51               	xorwf	i1___ftadd@f2+2,f,c
 27641  0058E6  0E01               	movlw	1
 27642  0058E8  264F               	addwf	i1___ftadd@f2,f,c
 27643  0058EA  0E00               	movlw	0
 27644  0058EC  2250               	addwfc	i1___ftadd@f2+1,f,c
 27645  0058EE  0E00               	movlw	0
 27646  0058F0  2251               	addwfc	i1___ftadd@f2+2,f,c
 27647  0058F2  0E01               	movlw	1
 27648  0058F4  6E55               	movwf	i1___ftadd@sign,c
 27649  0058F6                     i1l1526:
 27650  0058F6  0060  F13C  F004   	movff	i1___ftadd@f2,i1___ftpack@arg
 27651  0058FC  0060  F140  F005   	movff	i1___ftadd@f2+1,i1___ftpack@arg+1
 27652  005902  0060  F144  F006   	movff	i1___ftadd@f2+2,i1___ftpack@arg+2
 27653  005908  0060  F15C  F007   	movff	i1___ftadd@exp1,i1___ftpack@exp
 27654  00590E  0060  F154  F008   	movff	i1___ftadd@sign,i1___ftpack@sign
 27655  005914  EC3B  F03A         	call	i1___ftpack	;wreg free
 27656  005918  0060  F010  F04C   	movff	?i1___ftpack,?i1___ftadd
 27657  00591E  0060  F014  F04D   	movff	?i1___ftpack+1,?i1___ftadd+1
 27658  005924  0060  F018  F04E   	movff	?i1___ftpack+2,?i1___ftadd+2
 27659  00592A  0012               	return	
 27660  00592C                     __end_ofi1___ftadd:
 27661                           	opt stack 0
 27662                           
 27663 ;; *************** function i1___ftneg *****************
 27664 ;; Defined at:
 27665 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 27666 ;; Parameters:    Size  Location     Type
 27667 ;;  f1              3   47[COMRAM] float 
 27668 ;; Auto vars:     Size  Location     Type
 27669 ;;		None
 27670 ;; Return value:  Size  Location     Type
 27671 ;;                  3   47[COMRAM] float 
 27672 ;; Registers used:
 27673 ;;		wreg, status,2, status,0
 27674 ;; Tracked objects:
 27675 ;;		On entry : 0/0
 27676 ;;		On exit  : 0/0
 27677 ;;		Unchanged: 0/0
 27678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27679 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27682 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27683 ;;Total ram usage:        3 bytes
 27684 ;; Hardware stack levels used:    1
 27685 ;; This function calls:
 27686 ;;		Nothing
 27687 ;; This function is called by:
 27688 ;;		i1_sprintf
 27689 ;; This function uses a non-reentrant model
 27690 ;;
 27691                           
 27692                           	psect	text99
 27693  008A06                     __ptext99:
 27694                           	opt stack 0
 27695  008A06                     i1___ftneg:
 27696                           	opt stack 18
 27697                           
 27698                           ;incstack = 0
 27699  008A06  5030               	movf	i1___ftneg@f1,w,c
 27700  008A08  1031               	iorwf	i1___ftneg@f1+1,w,c
 27701  008A0A  1032               	iorwf	i1___ftneg@f1+2,w,c
 27702  008A0C  B4D8               	btfsc	16344,2,c
 27703  008A0E  D006               	goto	i1l1574
 27704  008A10  0E00               	movlw	0
 27705  008A12  1A30               	xorwf	i1___ftneg@f1,f,c
 27706  008A14  0E00               	movlw	0
 27707  008A16  1A31               	xorwf	i1___ftneg@f1+1,f,c
 27708  008A18  0E80               	movlw	128
 27709  008A1A  1A32               	xorwf	i1___ftneg@f1+2,f,c
 27710  008A1C                     i1l1574:
 27711  008A1C  0060  F0C0  F030   	movff	i1___ftneg@f1,?i1___ftneg
 27712  008A22  0060  F0C4  F031   	movff	i1___ftneg@f1+1,?i1___ftneg+1
 27713  008A28  0060  F0C8  F032   	movff	i1___ftneg@f1+2,?i1___ftneg+2
 27714  008A2E  0012               	return		;funcret
 27715  008A30                     __end_ofi1___ftneg:
 27716                           	opt stack 0
 27717                           
 27718 ;; *************** function i1___ftge *****************
 27719 ;; Defined at:
 27720 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 27721 ;; Parameters:    Size  Location     Type
 27722 ;;  ff1             3    0[BANK0 ] float 
 27723 ;;  ff2             3    3[BANK0 ] float 
 27724 ;; Auto vars:     Size  Location     Type
 27725 ;;		None
 27726 ;; Return value:  Size  Location     Type
 27727 ;;		None               void
 27728 ;; Registers used:
 27729 ;;		wreg, status,2, status,0
 27730 ;; Tracked objects:
 27731 ;;		On entry : 0/0
 27732 ;;		On exit  : 0/0
 27733 ;;		Unchanged: 0/0
 27734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27735 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27737 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27738 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27739 ;;Total ram usage:        9 bytes
 27740 ;; Hardware stack levels used:    1
 27741 ;; This function calls:
 27742 ;;		Nothing
 27743 ;; This function is called by:
 27744 ;;		i1_sprintf
 27745 ;; This function uses a non-reentrant model
 27746 ;;
 27747                           
 27748                           	psect	text100
 27749  0077CA                     __ptext100:
 27750                           	opt stack 0
 27751  0077CA                     i1___ftge:
 27752                           	opt stack 18
 27753                           
 27754                           ;incstack = 0
 27755  0077CA  0100               	movlb	0	; () banked
 27756  0077CC  AF62               	btfss	(i1___ftge@ff1+2)& (0+255),7,b
 27757  0077CE  D019               	goto	i1l1556
 27758                           
 27759                           ; BSR set to: 0
 27760  0077D0  0060  F180  F066   	movff	i1___ftge@ff1,??i1___ftge
 27761  0077D6  0060  F184  F067   	movff	i1___ftge@ff1+1,??i1___ftge+1
 27762  0077DC  0060  F188  F068   	movff	i1___ftge@ff1+2,??i1___ftge+2
 27763  0077E2  1F66               	comf	??i1___ftge& (0+255),f,b
 27764  0077E4  1F67               	comf	(??i1___ftge+1)& (0+255),f,b
 27765  0077E6  1F68               	comf	(??i1___ftge+2)& (0+255),f,b
 27766  0077E8  2B66               	incf	??i1___ftge& (0+255),f,b
 27767  0077EA  0E00               	movlw	0
 27768  0077EC  2367               	addwfc	(??i1___ftge+1)& (0+255),f,b
 27769  0077EE  2368               	addwfc	(??i1___ftge+2)& (0+255),f,b
 27770  0077F0  0E00               	movlw	0
 27771  0077F2  2566               	addwf	??i1___ftge& (0+255),w,b
 27772  0077F4  6F60               	movwf	i1___ftge@ff1& (0+255),b
 27773  0077F6  0E00               	movlw	0
 27774  0077F8  2167               	addwfc	(??i1___ftge+1)& (0+255),w,b
 27775  0077FA  6F61               	movwf	(i1___ftge@ff1+1)& (0+255),b
 27776  0077FC  0E80               	movlw	128
 27777  0077FE  2168               	addwfc	(??i1___ftge+2)& (0+255),w,b
 27778  007800  6F62               	movwf	(i1___ftge@ff1+2)& (0+255),b
 27779  007802                     i1l1556:
 27780                           
 27781                           ; BSR set to: 0
 27782                           
 27783                           ; BSR set to: 0
 27784  007802  AF65               	btfss	(i1___ftge@ff2+2)& (0+255),7,b
 27785  007804  D019               	goto	i1l1557
 27786                           
 27787                           ; BSR set to: 0
 27788  007806  0060  F18C  F066   	movff	i1___ftge@ff2,??i1___ftge
 27789  00780C  0060  F190  F067   	movff	i1___ftge@ff2+1,??i1___ftge+1
 27790  007812  0060  F194  F068   	movff	i1___ftge@ff2+2,??i1___ftge+2
 27791  007818  1F66               	comf	??i1___ftge& (0+255),f,b
 27792  00781A  1F67               	comf	(??i1___ftge+1)& (0+255),f,b
 27793  00781C  1F68               	comf	(??i1___ftge+2)& (0+255),f,b
 27794  00781E  2B66               	incf	??i1___ftge& (0+255),f,b
 27795  007820  0E00               	movlw	0
 27796  007822  2367               	addwfc	(??i1___ftge+1)& (0+255),f,b
 27797  007824  2368               	addwfc	(??i1___ftge+2)& (0+255),f,b
 27798  007826  0E00               	movlw	0
 27799  007828  2566               	addwf	??i1___ftge& (0+255),w,b
 27800  00782A  6F63               	movwf	i1___ftge@ff2& (0+255),b
 27801  00782C  0E00               	movlw	0
 27802  00782E  2167               	addwfc	(??i1___ftge+1)& (0+255),w,b
 27803  007830  6F64               	movwf	(i1___ftge@ff2+1)& (0+255),b
 27804  007832  0E80               	movlw	128
 27805  007834  2168               	addwfc	(??i1___ftge+2)& (0+255),w,b
 27806  007836  6F65               	movwf	(i1___ftge@ff2+2)& (0+255),b
 27807  007838                     i1l1557:
 27808                           
 27809                           ; BSR set to: 0
 27810                           
 27811                           ; BSR set to: 0
 27812  007838  0E00               	movlw	0
 27813  00783A  1B60               	xorwf	i1___ftge@ff1& (0+255),f,b
 27814  00783C  0E00               	movlw	0
 27815  00783E  1B61               	xorwf	(i1___ftge@ff1+1)& (0+255),f,b
 27816  007840  0E80               	movlw	128
 27817  007842  1B62               	xorwf	(i1___ftge@ff1+2)& (0+255),f,b
 27818                           
 27819                           ; BSR set to: 0
 27820  007844  0E00               	movlw	0
 27821  007846  1B63               	xorwf	i1___ftge@ff2& (0+255),f,b
 27822  007848  0E00               	movlw	0
 27823  00784A  1B64               	xorwf	(i1___ftge@ff2+1)& (0+255),f,b
 27824  00784C  0E80               	movlw	128
 27825  00784E  1B65               	xorwf	(i1___ftge@ff2+2)& (0+255),f,b
 27826  007850  5163               	movf	i1___ftge@ff2& (0+255),w,b
 27827  007852  5D60               	subwf	i1___ftge@ff1& (0+255),w,b
 27828  007854  5164               	movf	(i1___ftge@ff2+1)& (0+255),w,b
 27829  007856  5961               	subwfb	(i1___ftge@ff1+1)& (0+255),w,b
 27830  007858  5165               	movf	(i1___ftge@ff2+2)& (0+255),w,b
 27831  00785A  5962               	subwfb	(i1___ftge@ff1+2)& (0+255),w,b
 27832  00785C  B0D8               	btfsc	16344,0,c
 27833  00785E  D002               	goto	i1l10476
 27834                           
 27835                           ; BSR set to: 0
 27836  007860  90D8               	bcf	16344,0,c
 27837  007862  0012               	return	
 27838  007864                     i1l10476:
 27839                           
 27840                           ; BSR set to: 0
 27841                           
 27842                           ; BSR set to: 0
 27843  007864  80D8               	bsf	16344,0,c
 27844                           
 27845                           ; BSR set to: 0
 27846  007866  0012               	return	
 27847  007868                     __end_ofi1___ftge:
 27848                           	opt stack 0
 27849                           
 27850 ;; *************** function i1___ftdiv *****************
 27851 ;; Defined at:
 27852 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 27853 ;; Parameters:    Size  Location     Type
 27854 ;;  f1              3   72[COMRAM] float 
 27855 ;;  f2              3   75[COMRAM] float 
 27856 ;; Auto vars:     Size  Location     Type
 27857 ;;  __ftdiv         3   82[COMRAM] float 
 27858 ;;  __ftdiv         1   86[COMRAM] unsigned char 
 27859 ;;  __ftdiv         1   85[COMRAM] unsigned char 
 27860 ;;  __ftdiv         1   81[COMRAM] unsigned char 
 27861 ;; Return value:  Size  Location     Type
 27862 ;;                  3   72[COMRAM] float 
 27863 ;; Registers used:
 27864 ;;		wreg, status,2, status,0, cstack
 27865 ;; Tracked objects:
 27866 ;;		On entry : 0/0
 27867 ;;		On exit  : 0/0
 27868 ;;		Unchanged: 0/0
 27869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27870 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27871 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27872 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27873 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27874 ;;Total ram usage:       15 bytes
 27875 ;; Hardware stack levels used:    1
 27876 ;; Hardware stack levels required when called:    1
 27877 ;; This function calls:
 27878 ;;		i1___ftpack
 27879 ;; This function is called by:
 27880 ;;		i1_sprintf
 27881 ;; This function uses a non-reentrant model
 27882 ;;
 27883                           
 27884                           	psect	text101
 27885  006AD8                     __ptext101:
 27886                           	opt stack 0
 27887  006AD8                     i1___ftdiv:
 27888                           	opt stack 17
 27889                           
 27890                           ; BSR set to: 0
 27891                           ;incstack = 0
 27892  006AD8  0060  F12C  F04F   	movff	i1___ftdiv@f1+2,??i1___ftdiv
 27893  006ADE  6A50               	clrf	(??i1___ftdiv+1)& (0+255),c
 27894  006AE0  6A51               	clrf	(??i1___ftdiv+2)& (0+255),c
 27895  006AE2  344A               	rlcf	i1___ftdiv@f1+1,w,c
 27896  006AE4  364F               	rlcf	??i1___ftdiv& (0+255),f,c
 27897  006AE6  E301               	bnc	u1405_21
 27898  006AE8  8050               	bsf	(??i1___ftdiv+1)& (0+255),0,c
 27899  006AEA                     u1405_21:
 27900  006AEA  504F               	movf	??i1___ftdiv,w,c
 27901  006AEC  6E56               	movwf	i1___ftdiv@exp,c
 27902  006AEE  5056               	movf	i1___ftdiv@exp,w,c
 27903  006AF0  A4D8               	btfss	16344,2,c
 27904  006AF2  D007               	goto	i1l1531
 27905  006AF4  0E00               	movlw	0
 27906  006AF6  6E49               	movwf	?i1___ftdiv,c
 27907  006AF8  0E00               	movlw	0
 27908  006AFA  6E4A               	movwf	?i1___ftdiv+1,c
 27909  006AFC  0E00               	movlw	0
 27910  006AFE  6E4B               	movwf	?i1___ftdiv+2,c
 27911  006B00  0012               	return	
 27912  006B02                     i1l1531:
 27913  006B02  0060  F138  F04F   	movff	i1___ftdiv@f2+2,??i1___ftdiv
 27914  006B08  6A50               	clrf	(??i1___ftdiv+1)& (0+255),c
 27915  006B0A  6A51               	clrf	(??i1___ftdiv+2)& (0+255),c
 27916  006B0C  344D               	rlcf	i1___ftdiv@f2+1,w,c
 27917  006B0E  364F               	rlcf	??i1___ftdiv& (0+255),f,c
 27918  006B10  E301               	bnc	u1407_21
 27919  006B12  8050               	bsf	(??i1___ftdiv+1)& (0+255),0,c
 27920  006B14                     u1407_21:
 27921  006B14  504F               	movf	??i1___ftdiv,w,c
 27922  006B16  6E57               	movwf	i1___ftdiv@sign,c
 27923  006B18  5057               	movf	i1___ftdiv@sign,w,c
 27924  006B1A  A4D8               	btfss	16344,2,c
 27925  006B1C  D007               	goto	i1l1533
 27926  006B1E  0E00               	movlw	0
 27927  006B20  6E49               	movwf	?i1___ftdiv,c
 27928  006B22  0E00               	movlw	0
 27929  006B24  6E4A               	movwf	?i1___ftdiv+1,c
 27930  006B26  0E00               	movlw	0
 27931  006B28  6E4B               	movwf	?i1___ftdiv+2,c
 27932  006B2A  0012               	return	
 27933  006B2C                     i1l1533:
 27934  006B2C  0E00               	movlw	0
 27935  006B2E  6E53               	movwf	i1___ftdiv@f3,c
 27936  006B30  0E00               	movlw	0
 27937  006B32  6E54               	movwf	i1___ftdiv@f3+1,c
 27938  006B34  0E00               	movlw	0
 27939  006B36  6E55               	movwf	i1___ftdiv@f3+2,c
 27940  006B38  5057               	movf	i1___ftdiv@sign,w,c
 27941  006B3A  0F89               	addlw	137
 27942  006B3C  5E56               	subwf	i1___ftdiv@exp,f,c
 27943  006B3E  0060  F12C  F057   	movff	i1___ftdiv@f1+2,i1___ftdiv@sign
 27944  006B44  504E               	movf	i1___ftdiv@f2+2,w,c
 27945  006B46  1A57               	xorwf	i1___ftdiv@sign,f,c
 27946  006B48  0E80               	movlw	128
 27947  006B4A  1657               	andwf	i1___ftdiv@sign,f,c
 27948  006B4C  8E4A               	bsf	i1___ftdiv@f1+1,7,c
 27949  006B4E  0EFF               	movlw	255
 27950  006B50  1649               	andwf	i1___ftdiv@f1,f,c
 27951  006B52  0EFF               	movlw	255
 27952  006B54  164A               	andwf	i1___ftdiv@f1+1,f,c
 27953  006B56  0E00               	movlw	0
 27954  006B58  164B               	andwf	i1___ftdiv@f1+2,f,c
 27955  006B5A  8E4D               	bsf	i1___ftdiv@f2+1,7,c
 27956  006B5C  0EFF               	movlw	255
 27957  006B5E  164C               	andwf	i1___ftdiv@f2,f,c
 27958  006B60  0EFF               	movlw	255
 27959  006B62  164D               	andwf	i1___ftdiv@f2+1,f,c
 27960  006B64  0E00               	movlw	0
 27961  006B66  164E               	andwf	i1___ftdiv@f2+2,f,c
 27962  006B68  0E18               	movlw	24
 27963  006B6A  6E52               	movwf	i1___ftdiv@cntr,c
 27964  006B6C  90D8               	bcf	16344,0,c
 27965  006B6E  3653               	rlcf	i1___ftdiv@f3,f,c
 27966  006B70  3654               	rlcf	i1___ftdiv@f3+1,f,c
 27967  006B72  3655               	rlcf	i1___ftdiv@f3+2,f,c
 27968  006B74  504C               	movf	i1___ftdiv@f2,w,c
 27969  006B76  5C49               	subwf	i1___ftdiv@f1,w,c
 27970  006B78  504D               	movf	i1___ftdiv@f2+1,w,c
 27971  006B7A  584A               	subwfb	i1___ftdiv@f1+1,w,c
 27972  006B7C  504E               	movf	i1___ftdiv@f2+2,w,c
 27973  006B7E  584B               	subwfb	i1___ftdiv@f1+2,w,c
 27974  006B80  A0D8               	btfss	16344,0,c
 27975  006B82  D007               	goto	i1l1535
 27976  006B84  504C               	movf	i1___ftdiv@f2,w,c
 27977  006B86  5E49               	subwf	i1___ftdiv@f1,f,c
 27978  006B88  504D               	movf	i1___ftdiv@f2+1,w,c
 27979  006B8A  5A4A               	subwfb	i1___ftdiv@f1+1,f,c
 27980  006B8C  504E               	movf	i1___ftdiv@f2+2,w,c
 27981  006B8E  5A4B               	subwfb	i1___ftdiv@f1+2,f,c
 27982  006B90  8053               	bsf	i1___ftdiv@f3,0,c
 27983  006B92                     i1l1535:
 27984  006B92  90D8               	bcf	16344,0,c
 27985  006B94  3649               	rlcf	i1___ftdiv@f1,f,c
 27986  006B96  364A               	rlcf	i1___ftdiv@f1+1,f,c
 27987  006B98  364B               	rlcf	i1___ftdiv@f1+2,f,c
 27988  006B9A  2E52               	decfsz	i1___ftdiv@cntr,f,c
 27989  006B9C  D7E7               	goto	i1l1534
 27990  006B9E  0060  F14C  F004   	movff	i1___ftdiv@f3,i1___ftpack@arg
 27991  006BA4  0060  F150  F005   	movff	i1___ftdiv@f3+1,i1___ftpack@arg+1
 27992  006BAA  0060  F154  F006   	movff	i1___ftdiv@f3+2,i1___ftpack@arg+2
 27993  006BB0  0060  F158  F007   	movff	i1___ftdiv@exp,i1___ftpack@exp
 27994  006BB6  0060  F15C  F008   	movff	i1___ftdiv@sign,i1___ftpack@sign
 27995  006BBC  EC3B  F03A         	call	i1___ftpack	;wreg free
 27996  006BC0  0060  F010  F049   	movff	?i1___ftpack,?i1___ftdiv
 27997  006BC6  0060  F014  F04A   	movff	?i1___ftpack+1,?i1___ftdiv+1
 27998  006BCC  0060  F018  F04B   	movff	?i1___ftpack+2,?i1___ftdiv+2
 27999  006BD2  0012               	return	
 28000  006BD4                     __end_ofi1___ftdiv:
 28001                           	opt stack 0
 28002                           
 28003 ;; *************** function i1___ftpack *****************
 28004 ;; Defined at:
 28005 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 28006 ;; Parameters:    Size  Location     Type
 28007 ;;  arg             3    3[COMRAM] unsigned um
 28008 ;;  exp             1    6[COMRAM] unsigned char 
 28009 ;;  sign            1    7[COMRAM] unsigned char 
 28010 ;; Auto vars:     Size  Location     Type
 28011 ;;		None
 28012 ;; Return value:  Size  Location     Type
 28013 ;;                  3    3[COMRAM] float 
 28014 ;; Registers used:
 28015 ;;		wreg, status,2, status,0
 28016 ;; Tracked objects:
 28017 ;;		On entry : 0/0
 28018 ;;		On exit  : 0/0
 28019 ;;		Unchanged: 0/0
 28020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28021 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28023 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28024 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28025 ;;Total ram usage:        8 bytes
 28026 ;; Hardware stack levels used:    1
 28027 ;; This function calls:
 28028 ;;		Nothing
 28029 ;; This function is called by:
 28030 ;;		i1___ftadd
 28031 ;;		i1___ftdiv
 28032 ;;		i1___ftmul
 28033 ;;		i1___lltoft
 28034 ;; This function uses a non-reentrant model
 28035 ;;
 28036                           
 28037                           	psect	text102
 28038  007476                     __ptext102:
 28039                           	opt stack 0
 28040  007476                     i1___ftpack:
 28041                           	opt stack 16
 28042                           
 28043                           ;incstack = 0
 28044  007476  5007               	movf	i1___ftpack@exp,w,c
 28045  007478  B4D8               	btfsc	16344,2,c
 28046  00747A  D005               	goto	i1u1334_20
 28047  00747C  5004               	movf	i1___ftpack@arg,w,c
 28048  00747E  1005               	iorwf	i1___ftpack@arg+1,w,c
 28049  007480  1006               	iorwf	i1___ftpack@arg+2,w,c
 28050  007482  A4D8               	btfss	16344,2,c
 28051  007484  D00C               	goto	i1l1467
 28052  007486                     i1u1334_20:
 28053  007486  0E00               	movlw	0
 28054  007488  6E04               	movwf	?i1___ftpack,c
 28055  00748A  0E00               	movlw	0
 28056  00748C  6E05               	movwf	?i1___ftpack+1,c
 28057  00748E  0E00               	movlw	0
 28058  007490  6E06               	movwf	?i1___ftpack+2,c
 28059  007492  0012               	return	
 28060  007494  2A07               	incf	i1___ftpack@exp,f,c
 28061  007496  90D8               	bcf	16344,0,c
 28062  007498  3206               	rrcf	i1___ftpack@arg+2,f,c
 28063  00749A  3205               	rrcf	i1___ftpack@arg+1,f,c
 28064  00749C  3204               	rrcf	i1___ftpack@arg,f,c
 28065  00749E                     i1l1467:
 28066  00749E  0E00               	movlw	0
 28067  0074A0  1404               	andwf	i1___ftpack@arg,w,c
 28068  0074A2  6E09               	movwf	??i1___ftpack& (0+255),c
 28069  0074A4  0E00               	movlw	0
 28070  0074A6  1405               	andwf	i1___ftpack@arg+1,w,c
 28071  0074A8  6E0A               	movwf	(??i1___ftpack+1)& (0+255),c
 28072  0074AA  0EFE               	movlw	254
 28073  0074AC  1406               	andwf	i1___ftpack@arg+2,w,c
 28074  0074AE  6E0B               	movwf	(??i1___ftpack+2)& (0+255),c
 28075  0074B0  5009               	movf	??i1___ftpack,w,c
 28076  0074B2  100A               	iorwf	??i1___ftpack+1,w,c
 28077  0074B4  100B               	iorwf	??i1___ftpack+2,w,c
 28078  0074B6  B4D8               	btfsc	16344,2,c
 28079  0074B8  D00C               	goto	i1l1470
 28080  0074BA  D7EC               	goto	i1l1468
 28081  0074BC  2A07               	incf	i1___ftpack@exp,f,c
 28082  0074BE  0E01               	movlw	1
 28083  0074C0  2604               	addwf	i1___ftpack@arg,f,c
 28084  0074C2  0E00               	movlw	0
 28085  0074C4  2205               	addwfc	i1___ftpack@arg+1,f,c
 28086  0074C6  0E00               	movlw	0
 28087  0074C8  2206               	addwfc	i1___ftpack@arg+2,f,c
 28088  0074CA  90D8               	bcf	16344,0,c
 28089  0074CC  3206               	rrcf	i1___ftpack@arg+2,f,c
 28090  0074CE  3205               	rrcf	i1___ftpack@arg+1,f,c
 28091  0074D0  3204               	rrcf	i1___ftpack@arg,f,c
 28092  0074D2                     i1l1470:
 28093  0074D2  0E00               	movlw	0
 28094  0074D4  1404               	andwf	i1___ftpack@arg,w,c
 28095  0074D6  6E09               	movwf	??i1___ftpack& (0+255),c
 28096  0074D8  0E00               	movlw	0
 28097  0074DA  1405               	andwf	i1___ftpack@arg+1,w,c
 28098  0074DC  6E0A               	movwf	(??i1___ftpack+1)& (0+255),c
 28099  0074DE  0EFF               	movlw	255
 28100  0074E0  1406               	andwf	i1___ftpack@arg+2,w,c
 28101  0074E2  6E0B               	movwf	(??i1___ftpack+2)& (0+255),c
 28102  0074E4  5009               	movf	??i1___ftpack,w,c
 28103  0074E6  100A               	iorwf	??i1___ftpack+1,w,c
 28104  0074E8  100B               	iorwf	??i1___ftpack+2,w,c
 28105  0074EA  B4D8               	btfsc	16344,2,c
 28106  0074EC  D006               	goto	i1l1473
 28107  0074EE  D7E6               	goto	i1l1471
 28108  0074F0  0607               	decf	i1___ftpack@exp,f,c
 28109  0074F2  90D8               	bcf	16344,0,c
 28110  0074F4  3604               	rlcf	i1___ftpack@arg,f,c
 28111  0074F6  3605               	rlcf	i1___ftpack@arg+1,f,c
 28112  0074F8  3606               	rlcf	i1___ftpack@arg+2,f,c
 28113  0074FA                     i1l1473:
 28114  0074FA  BE05               	btfsc	i1___ftpack@arg+1,7,c
 28115  0074FC  D003               	goto	i1u1338_20
 28116  0074FE  0E02               	movlw	2
 28117  007500  6007               	cpfslt	i1___ftpack@exp,c
 28118  007502  D7F6               	goto	i1l1474
 28119  007504                     i1u1338_20:
 28120  007504  A007               	btfss	i1___ftpack@exp,0,c
 28121  007506  9E05               	bcf	i1___ftpack@arg+1,7,c
 28122  007508  90D8               	bcf	16344,0,c
 28123  00750A  3207               	rrcf	i1___ftpack@exp,f,c
 28124  00750C  5007               	movf	i1___ftpack@exp,w,c
 28125  00750E  1206               	iorwf	i1___ftpack@arg+2,f,c
 28126  007510  5008               	movf	i1___ftpack@sign,w,c
 28127  007512  A4D8               	btfss	16344,2,c
 28128  007514  8E06               	bsf	i1___ftpack@arg+2,7,c
 28129  007516  0060  F010  F004   	movff	i1___ftpack@arg,?i1___ftpack
 28130  00751C  0060  F014  F005   	movff	i1___ftpack@arg+1,?i1___ftpack+1
 28131  007522  0060  F018  F006   	movff	i1___ftpack@arg+2,?i1___ftpack+2
 28132  007528  0012               	return	
 28133  00752A                     __end_ofi1___ftpack:
 28134                           	opt stack 0
 28135                           
 28136                           ;
 28137                           ; Interrupt Vector Table @ 0x8
 28138                           ;
 28139                           
 28140                           	psect	ivt0x8
 28141  000008                     __pivt0x8:
 28142                           	opt stack 0
 28143  000008                     ivt0x8_base:
 28144                           	opt stack 0
 28145                           
 28146                           ; Vector 0 : SWINT
 28147  000008  002B               	dw	ivt0x8_undefint shr (0+2)
 28148                           
 28149                           ; Vector 1 : HLVD
 28150  00000A  002B               	dw	ivt0x8_undefint shr (0+2)
 28151                           
 28152                           ; Vector 2 : OSF
 28153  00000C  002B               	dw	ivt0x8_undefint shr (0+2)
 28154                           
 28155                           ; Vector 3 : CSW
 28156  00000E  002B               	dw	ivt0x8_undefint shr (0+2)
 28157                           
 28158                           ; Vector 4 : NVM
 28159  000010  002B               	dw	ivt0x8_undefint shr (0+2)
 28160                           
 28161                           ; Vector 5 : SCAN
 28162  000012  002B               	dw	ivt0x8_undefint shr (0+2)
 28163                           
 28164                           ; Vector 6 : CRC
 28165  000014  002B               	dw	ivt0x8_undefint shr (0+2)
 28166                           
 28167                           ; Vector 7 : IOC
 28168  000016  002B               	dw	ivt0x8_undefint shr (0+2)
 28169                           
 28170                           ; Vector 8 : INT0
 28171  000018  002B               	dw	ivt0x8_undefint shr (0+2)
 28172                           
 28173                           ; Vector 9 : ZCD
 28174  00001A  002B               	dw	ivt0x8_undefint shr (0+2)
 28175                           
 28176                           ; Vector 10 : AD
 28177  00001C  002B               	dw	ivt0x8_undefint shr (0+2)
 28178                           
 28179                           ; Vector 11 : ADT
 28180  00001E  002B               	dw	ivt0x8_undefint shr (0+2)
 28181                           
 28182                           ; Vector 12 : CMP1
 28183  000020  002B               	dw	ivt0x8_undefint shr (0+2)
 28184                           
 28185                           ; Vector 13 : SMT1
 28186  000022  002B               	dw	ivt0x8_undefint shr (0+2)
 28187                           
 28188                           ; Vector 14 : SMT1PRA
 28189  000024  002B               	dw	ivt0x8_undefint shr (0+2)
 28190                           
 28191                           ; Vector 15 : SMT1PRW
 28192  000026  002B               	dw	ivt0x8_undefint shr (0+2)
 28193                           
 28194                           ; Vector 16 : DMA1SCNT
 28195  000028  002B               	dw	ivt0x8_undefint shr (0+2)
 28196                           
 28197                           ; Vector 17 : DMA1DCNT
 28198  00002A  002B               	dw	ivt0x8_undefint shr (0+2)
 28199                           
 28200                           ; Vector 18 : DMA1OR
 28201  00002C  002B               	dw	ivt0x8_undefint shr (0+2)
 28202                           
 28203                           ; Vector 19 : DMA1A
 28204  00002E  002B               	dw	ivt0x8_undefint shr (0+2)
 28205                           
 28206                           ; Vector 20 : SPI1RX
 28207  000030  002B               	dw	ivt0x8_undefint shr (0+2)
 28208                           
 28209                           ; Vector 21 : SPI1TX
 28210  000032  002B               	dw	ivt0x8_undefint shr (0+2)
 28211                           
 28212                           ; Vector 22 : SPI1
 28213  000034  002B               	dw	ivt0x8_undefint shr (0+2)
 28214                           
 28215                           ; Vector 23 : I2C1RX
 28216  000036  002B               	dw	ivt0x8_undefint shr (0+2)
 28217                           
 28218                           ; Vector 24 : I2C1TX
 28219  000038  002B               	dw	ivt0x8_undefint shr (0+2)
 28220                           
 28221                           ; Vector 25 : I2C1
 28222  00003A  002B               	dw	ivt0x8_undefint shr (0+2)
 28223                           
 28224                           ; Vector 26 : I2C1E
 28225  00003C  002B               	dw	ivt0x8_undefint shr (0+2)
 28226                           
 28227                           ; Vector 27 : U1RX
 28228  00003E  2277               	dw	_Interrupt_USB_485 shr (0+2)
 28229                           
 28230                           ; Vector 28 : U1TX
 28231  000040  002B               	dw	ivt0x8_undefint shr (0+2)
 28232                           
 28233                           ; Vector 29 : U1E
 28234  000042  002B               	dw	ivt0x8_undefint shr (0+2)
 28235                           
 28236                           ; Vector 30 : U1
 28237  000044  002B               	dw	ivt0x8_undefint shr (0+2)
 28238                           
 28239                           ; Vector 31 : TMR0
 28240  000046  002B               	dw	ivt0x8_undefint shr (0+2)
 28241                           
 28242                           ; Vector 32 : TMR1
 28243  000048  002B               	dw	ivt0x8_undefint shr (0+2)
 28244                           
 28245                           ; Vector 33 : TMR1G
 28246  00004A  002B               	dw	ivt0x8_undefint shr (0+2)
 28247                           
 28248                           ; Vector 34 : TMR2
 28249  00004C  002B               	dw	ivt0x8_undefint shr (0+2)
 28250                           
 28251                           ; Vector 35 : CCP1
 28252  00004E  002B               	dw	ivt0x8_undefint shr (0+2)
 28253                           
 28254                           ; Vector 36 : Undefined
 28255  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 28256                           
 28257                           ; Vector 37 : NCO1
 28258  000052  002B               	dw	ivt0x8_undefint shr (0+2)
 28259                           
 28260                           ; Vector 38 : CWG1
 28261  000054  002B               	dw	ivt0x8_undefint shr (0+2)
 28262                           
 28263                           ; Vector 39 : CLC1
 28264  000056  002B               	dw	ivt0x8_undefint shr (0+2)
 28265                           
 28266                           ; Vector 40 : INT1
 28267  000058  002B               	dw	ivt0x8_undefint shr (0+2)
 28268                           
 28269                           ; Vector 41 : CMP2
 28270  00005A  002B               	dw	ivt0x8_undefint shr (0+2)
 28271                           
 28272                           ; Vector 42 : DMA2SCNT
 28273  00005C  002B               	dw	ivt0x8_undefint shr (0+2)
 28274                           
 28275                           ; Vector 43 : DMA2DCNT
 28276  00005E  002B               	dw	ivt0x8_undefint shr (0+2)
 28277                           
 28278                           ; Vector 44 : DMA2OR
 28279  000060  002B               	dw	ivt0x8_undefint shr (0+2)
 28280                           
 28281                           ; Vector 45 : DMA2A
 28282  000062  002B               	dw	ivt0x8_undefint shr (0+2)
 28283                           
 28284                           ; Vector 46 : I2C2RX
 28285  000064  002B               	dw	ivt0x8_undefint shr (0+2)
 28286                           
 28287                           ; Vector 47 : I2C2TX
 28288  000066  002B               	dw	ivt0x8_undefint shr (0+2)
 28289                           
 28290                           ; Vector 48 : I2C2
 28291  000068  002B               	dw	ivt0x8_undefint shr (0+2)
 28292                           
 28293                           ; Vector 49 : I2C2E
 28294  00006A  002B               	dw	ivt0x8_undefint shr (0+2)
 28295                           
 28296                           ; Vector 50 : U2RX
 28297  00006C  206D               	dw	_Interrupt_WIFI_GSM shr (0+2)
 28298                           
 28299                           ; Vector 51 : U2TX
 28300  00006E  002B               	dw	ivt0x8_undefint shr (0+2)
 28301                           
 28302                           ; Vector 52 : U2E
 28303  000070  002B               	dw	ivt0x8_undefint shr (0+2)
 28304                           
 28305                           ; Vector 53 : U2
 28306  000072  002B               	dw	ivt0x8_undefint shr (0+2)
 28307                           
 28308                           ; Vector 54 : TMR3
 28309  000074  002B               	dw	ivt0x8_undefint shr (0+2)
 28310                           
 28311                           ; Vector 55 : TMR3G
 28312  000076  002B               	dw	ivt0x8_undefint shr (0+2)
 28313                           
 28314                           ; Vector 56 : TMR4
 28315  000078  002B               	dw	ivt0x8_undefint shr (0+2)
 28316                           
 28317                           ; Vector 57 : CCP2
 28318  00007A  002B               	dw	ivt0x8_undefint shr (0+2)
 28319                           
 28320                           ; Vector 58 : Undefined
 28321  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 28322                           
 28323                           ; Vector 59 : CWG2
 28324  00007E  002B               	dw	ivt0x8_undefint shr (0+2)
 28325                           
 28326                           ; Vector 60 : CLC2
 28327  000080  002B               	dw	ivt0x8_undefint shr (0+2)
 28328                           
 28329                           ; Vector 61 : INT2
 28330  000082  002B               	dw	ivt0x8_undefint shr (0+2)
 28331                           
 28332                           ; Vector 62 : Undefined
 28333  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 28334                           
 28335                           ; Vector 63 : Undefined
 28336  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 28337                           
 28338                           ; Vector 64 : Undefined
 28339  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 28340                           
 28341                           ; Vector 65 : Undefined
 28342  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 28343                           
 28344                           ; Vector 66 : Undefined
 28345  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 28346                           
 28347                           ; Vector 67 : Undefined
 28348  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 28349                           
 28350                           ; Vector 68 : Undefined
 28351  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 28352                           
 28353                           ; Vector 69 : Undefined
 28354  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 28355                           
 28356                           ; Vector 70 : TMR5
 28357  000094  002B               	dw	ivt0x8_undefint shr (0+2)
 28358                           
 28359                           ; Vector 71 : TMR5G
 28360  000096  002B               	dw	ivt0x8_undefint shr (0+2)
 28361                           
 28362                           ; Vector 72 : TMR6
 28363  000098  002B               	dw	ivt0x8_undefint shr (0+2)
 28364                           
 28365                           ; Vector 73 : CCP3
 28366  00009A  002B               	dw	ivt0x8_undefint shr (0+2)
 28367                           
 28368                           ; Vector 74 : CWG3
 28369  00009C  002B               	dw	ivt0x8_undefint shr (0+2)
 28370                           
 28371                           ; Vector 75 : CLC3
 28372  00009E  002B               	dw	ivt0x8_undefint shr (0+2)
 28373                           
 28374                           ; Vector 76 : Undefined
 28375  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 28376                           
 28377                           ; Vector 77 : Undefined
 28378  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 28379                           
 28380                           ; Vector 78 : Undefined
 28381  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 28382                           
 28383                           ; Vector 79 : Undefined
 28384  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 28385                           
 28386                           ; Vector 80 : CCP4
 28387  0000A8  002B               	dw	ivt0x8_undefint shr (0+2)
 28388                           
 28389                           ; Vector 81 : CLC4
 28390  0000AA  002B               	dw	ivt0x8_undefint shr (0+2)
 28391  0000AC                     ivt0x8_undefint:
 28392                           	opt stack 0
 28393  0000AC  00C0               	trap
 28394                           
 28395                           	psect	text103
 28396  000000                     __ptext103:
 28397                           	opt stack 0
 28398                           
 28399                           	psect	rparam


Data Sizes:
    Strings     1168
    Constant    150
    Data        63
    BSS         2654
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      92
    BANK0           160    104     158
    BANK1           256    205     237
    BANK2           256    148     256
    BANK3           256     24     256
    BANK4           256      0     240
    BANK5           256      0     220
    BANK6           256      0     150
    BANK7           256      0     150
    BANK8           256      0     120
    BANK9           256      0     150
    BANK10          256      0     150
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    i1_append_Arquivo_Json$3040	PTR const unsigned char  size(2) Largest target is 1110
		 -> frameId(BIGRAM[1110]), 

    sp_Absolute function	PTR void  size(2) Largest target is 0

    sp_Aguarda_dado@ff	PTR void  size(2) Largest target is 0

    append_Arquivo_Json$2788	PTR const unsigned char  size(2) Largest target is 1110
		 -> frameId(BIGRAM[1110]), 

    Aguarda_dado@error	PTR unsigned char  size(2) Largest target is 7
		 -> STR_106(CODE[1]), STR_102(CODE[1]), STR_97(CODE[1]), STR_94(CODE[1]), 
		 -> STR_84(CODE[7]), STR_81(CODE[1]), STR_75(CODE[7]), STR_68(CODE[1]), 
		 -> STR_65(CODE[1]), STR_62(CODE[1]), STR_59(CODE[1]), STR_56(CODE[1]), 
		 -> STR_53(CODE[1]), STR_50(CODE[1]), STR_47(CODE[1]), STR_42(CODE[1]), 
		 -> STR_38(CODE[1]), STR_33(CODE[1]), STR_29(CODE[1]), STR_24(CODE[1]), 
		 -> STR_21(CODE[1]), STR_5(CODE[1]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 1110
		 -> STR_108(CODE[7]), sprintf@c(BANK1[1]), STR_105(CODE[2]), STR_104(CODE[7]), 
		 -> STR_101(CODE[3]), STR_100(CODE[10]), STR_96(CODE[2]), STR_95(CODE[4]), 
		 -> STR_93(CODE[2]), STR_92(CODE[7]), STR_83(CODE[7]), STR_82(CODE[7]), 
		 -> STR_80(CODE[3]), STR_79(CODE[2]), STR_74(CODE[2]), STR_73(CODE[17]), 
		 -> STR_67(CODE[2]), STR_66(CODE[3]), STR_64(CODE[3]), STR_63(CODE[6]), 
		 -> STR_61(CODE[2]), STR_60(CODE[7]), STR_58(CODE[2]), STR_57(CODE[6]), 
		 -> STR_55(CODE[2]), STR_54(CODE[7]), STR_52(CODE[3]), STR_51(CODE[8]), 
		 -> STR_49(CODE[2]), STR_48(CODE[10]), STR_46(CODE[2]), STR_45(CODE[2]), 
		 -> STR_41(CODE[2]), STR_40(CODE[2]), STR_37(CODE[2]), STR_36(CODE[10]), 
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_20(CODE[2]), STR_19(CODE[3]), 
		 -> frameId(BIGRAM[1110]), append_Arquivo_Json@resultado(BANK2[6]), append_Arquivo_Json@virgula(BANK2[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[10]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 61
		 -> STR_107(CODE[14]), STR_77(CODE[3]), STR_76(CODE[3]), STR_13(CODE[61]), 
		 -> STR_12(CODE[6]), STR_11(CODE[5]), STR_10(CODE[6]), STR_7(CODE[5]), 
		 -> STR_2(CODE[13]), STR_1(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 120
		 -> Verifica_Analogica@valoradstr(BANK1[10]), append_Arquivo_Json@linhaArquivo(BANK2[120]), append_Arquivo_Json@resultado(BANK2[6]), append_Arquivo_Json@valorMem_Char(BANK2[10]), 
		 -> cria_Arquivo@tamanho(BANK1[15]), Aguarda_end(BANK3[10]), Aguarda_str(BANK3[20]), main@motivo(BANK3[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i1_sprintf(BANK0[2]), ?_sprintf(BANK1[2]), 

    Aguarda_dado@ff	PTR FTN()PTR void  size(2) Largest target is 3
		 -> SOCKET_RX(), WIND(), TASK_POST(), SETMACAddr(), 
		 -> Absolute function(), recebeSIZE(), recebeADDRESS(), recebeFUNCTIONCODE(), 
		 -> recebeNODEID(), recebeNETWORKID(), recebeFRAMEID(), recebeFRAMES(), 
		 -> recebe(), Post2(), nada(), Post(), 
		 -> GETMACAddr(), 

    Aguarda_dado@fim	PTR unsigned char  size(2) Largest target is 7
		 -> STR_105(CODE[2]), STR_101(CODE[3]), STR_96(CODE[2]), STR_93(CODE[2]), 
		 -> STR_83(CODE[7]), STR_80(CODE[3]), STR_74(CODE[2]), STR_67(CODE[2]), 
		 -> STR_64(CODE[3]), STR_61(CODE[2]), STR_58(CODE[2]), STR_55(CODE[2]), 
		 -> STR_52(CODE[3]), STR_49(CODE[2]), STR_46(CODE[2]), STR_41(CODE[2]), 
		 -> STR_37(CODE[2]), STR_32(CODE[3]), STR_28(CODE[3]), STR_23(CODE[2]), 
		 -> STR_20(CODE[2]), STR_4(CODE[2]), 

    Aguarda_dado@inicio	PTR unsigned char  size(2) Largest target is 17
		 -> STR_104(CODE[7]), STR_100(CODE[10]), STR_95(CODE[4]), STR_92(CODE[7]), 
		 -> STR_82(CODE[7]), STR_79(CODE[2]), STR_73(CODE[17]), STR_66(CODE[3]), 
		 -> STR_63(CODE[6]), STR_60(CODE[7]), STR_57(CODE[6]), STR_54(CODE[7]), 
		 -> STR_51(CODE[8]), STR_48(CODE[10]), STR_45(CODE[2]), STR_40(CODE[2]), 
		 -> STR_36(CODE[10]), STR_31(CODE[3]), STR_27(CODE[3]), STR_22(CODE[2]), 
		 -> STR_19(CODE[3]), STR_3(CODE[10]), 

    length@dado	PTR unsigned char  size(2) Largest target is 120
		 -> STR_16(CODE[4]), append_Arquivo_Json@linhaArquivo(BANK2[120]), STR_9(CODE[51]), 

    cria_Arquivo@dado	PTR unsigned char  size(2) Largest target is 120
		 -> STR_16(CODE[4]), append_Arquivo_Json@linhaArquivo(BANK2[120]), STR_9(CODE[51]), 

    cria_Arquivo@nome	PTR unsigned char  size(2) Largest target is 12
		 -> STR_15(CODE[12]), STR_14(CODE[12]), STR_8(CODE[12]), 

    Aguarda_Funcao	PTR FTN()void  size(2) Largest target is 3
		 -> SOCKET_RX(), WIND(), TASK_POST(), SETMACAddr(), 
		 -> Absolute function(), recebeSIZE(), recebeADDRESS(), recebeFUNCTIONCODE(), 
		 -> recebeNODEID(), recebeNETWORKID(), recebeFRAMEID(), recebeFRAMES(), 
		 -> recebe(), Post2(), nada(), Post(), 
		 -> GETMACAddr(), 

    Buffer_Escrita_COMM_Add_String@dado	PTR unsigned char  size(2) Largest target is 136
		 -> STR_103(CODE[15]), STR_99(CODE[15]), STR_91(CODE[136]), STR_90(CODE[24]), 
		 -> STR_89(CODE[44]), STR_88(CODE[31]), STR_87(CODE[30]), STR_86(CODE[19]), 
		 -> STR_78(CODE[91]), STR_72(CODE[28]), STR_39(CODE[70]), STR_35(CODE[8]), 
		 -> STR_34(CODE[25]), STR_30(CODE[84]), STR_26(CODE[31]), STR_17(CODE[22]), 
		 -> STR_16(CODE[4]), STR_15(CODE[12]), STR_14(CODE[12]), append_Arquivo_Json@linhaArquivo(BANK2[120]), 
		 -> STR_9(CODE[51]), STR_8(CODE[12]), cria_Arquivo@tamanho(BANK1[15]), STR_6(CODE[10]), 

    Buffer_Escrita_USB_Add_String@dado	PTR unsigned char  size(2) Largest target is 27
		 -> Verifica_Analogica@valoradstr(BANK1[10]), STR_98(CODE[2]), STR_85(CODE[17]), STR_71(CODE[20]), 
		 -> STR_70(CODE[5]), STR_69(CODE[11]), MACAddress(BANK3[18]), STR_44(CODE[25]), 
		 -> STR_43(CODE[27]), STR_25(CODE[10]), STR_18(CODE[24]), main@motivo(BANK3[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interrupt_USB_485 in COMRAM

    None.

Critical Paths under _Interrupt_WIFI_GSM in COMRAM

    _AguardaINT->_GETMACAddr
    _AguardaINT->_SOCKET_RX
    _AguardaINT->_recebeADDRESS
    _AguardaINT->_recebeFRAMES
    _AguardaINT->_recebeFUNCTIONCODE
    _AguardaINT->_recebeNETWORKID
    _AguardaINT->_recebeNODEID
    _AguardaINT->_recebeSIZE
    _Aguarda->_verificaERRO
    _SETMACAddr->i1_Buffer_Escrita_USB_Add_String
    i1_append_Arquivo_Json->i1_cria_Arquivo
    i1_Buffer_Escrita_USB_Add_String->i1_TransmiteBuffer_USB
    i1_Buffer_Escrita_COMM_Add_String->i1_TransmiteBuffer_COMM
    i1_sprintf->i1___ftadd
    i1_sprintf->i1___ftdiv
    i1_scale->i1___ftmul
    i1_fround->i1___ftmul
    i1___wmul->i1___awdiv
    i1___ftmul->i1___ftneg
    i1___awdiv->i1___awmod
    i1___lltoft->i1___fttol
    i1___llmod->i1___lldiv
    i1___fttol->i1___wmul
    i1___ftsub->i1___ftadd
    i1___ftadd->i1_fround
    i1___ftneg->i1___lltoft
    i1___ftge->i1___ftadd
    i1___ftdiv->i1_scale

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt_USB_485 in BANK0

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK0

    _Interrupt_WIFI_GSM->_AguardaINT
    _AguardaINT->_recebeFRAMEID
    _recebeFRAMES->i1_Aguarda_dado
    _recebeSIZE->i1_Aguarda_dado
    _recebeNODEID->i1_Aguarda_dado
    _recebeNETWORKID->i1_Aguarda_dado
    _recebeFUNCTIONCODE->i1_Aguarda_dado
    _recebeFRAMEID->i1_Aguarda_dado
    _recebeADDRESS->i1_Aguarda_dado
    _recebe->i1_Aguarda_dado
    _WIND->i1_Aguarda_dado
    _TASK_POST->i1_Aguarda_dado
    _SOCKET_RX->i1_Aguarda_dado
    i1_inicia_Post->i1_Aguarda_dado
    i1_inicia_Post->i1_append_Arquivo_Json
    i1_append_Arquivo_Json->i1_cria_Arquivo
    i1_cria_Arquivo->i1_sprintf
    _Post2->i1_Aguarda_dado
    _Post->i1_Aguarda_dado
    _GETMACAddr->i1_Aguarda_dado
    i1_Aguarda_dado->i1_sprintf
    i1_sprintf->i1___ftge

Critical Paths under _main in BANK1

    _main->_inicia_Post
    _inicia_Post->_append_Arquivo_Json
    _append_Arquivo_Json->_cria_Arquivo
    _cria_Arquivo->_sprintf
    _Buffer_Escrita_COMM_Add_String->_TransmiteBuffer_COMM
    _Aguarda_dado->_sprintf
    _Verifica_Analogica->_sprintf
    _sprintf->___ftge
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___fttol
    ___llmod->___lldiv
    ___ftsub->___ftadd
    ___ftneg->___lltoft
    ___ftge->___ftadd
    _ajusta_escala->_Calcula_Fator_m
    _Calcula_Fator_m->___ftdiv
    ___ftdiv->_scale
    _Converte_Escala->___ftadd
    ___fttol->___wmul
    ___ftmul->___ftneg
    ___ftadd->_fround
    ___awtoft->___ftpack
    ___altoft->___ftmul
    _Buffer_Escrita_USB_Add_String->_TransmiteBuffer_USB
    _Abre_Porta_COMM->_Calcula_BaudRate
    _Abre_Porta_1->_Calcula_BaudRate
    _Calcula_BaudRate->___aldiv

Critical Paths under _Interrupt_USB_485 in BANK1

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK1

    i1_inicia_Post->i1_append_Arquivo_Json
    i1_append_Arquivo_Json->i1_cria_Arquivo

Critical Paths under _main in BANK2

    _inicia_Post->_append_Arquivo_Json

Critical Paths under _Interrupt_USB_485 in BANK2

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt_USB_485 in BANK3

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt_USB_485 in BANK4

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt_USB_485 in BANK5

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt_USB_485 in BANK6

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt_USB_485 in BANK7

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt_USB_485 in BANK8

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt_USB_485 in BANK9

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt_USB_485 in BANK10

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt_USB_485 in BANK11

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt_USB_485 in BANK12

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt_USB_485 in BANK13

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt_USB_485 in BANK14

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt_USB_485 in BANK15

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0  650192
                                            203 BANK1      2     2      0
                                              0 BANK3     24    24      0
                       _Abre_Porta_1
                    _Abre_Porta_COMM
                       _Aguarda_dado
      _Buffer_Escrita_USB_Add_String
                    _Calcula_Fator_m
                     _InicializaWifi
               _TransmiteBuffer_COMM
                _TransmiteBuffer_USB
                 _Verifica_Analogica
                        _inicia_Post
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _inicia_Post                                          2     2      0  304964
                                            201 BANK1      2     2      0
                       _Aguarda_dado
     _Buffer_Escrita_COMM_Add_String
      _Buffer_Escrita_USB_Add_String
                _append_Arquivo_Json
 ---------------------------------------------------------------------------------
 (2) _append_Arquivo_Json                                152   152      0  199823
                                            197 BANK1      4     4      0
                                              0 BANK2    148   148      0
                             ___wmul
                       _cria_Arquivo
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _cria_Arquivo                                        22    18      4   98850
                                            175 BANK1     22    18      4
     _Buffer_Escrita_COMM_Add_String
                             _length
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _length                                               6     4      2     189
                                              5 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _Buffer_Escrita_COMM_Add_String                       8     4      4    3333
                                              7 BANK1      8     4      4
       _Buffer_Escrita_COMM_Add_Char
               _TransmiteBuffer_COMM
 ---------------------------------------------------------------------------------
 (5) _TransmiteBuffer_COMM                                 2     0      2       0
                                              5 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (5) _Buffer_Escrita_COMM_Add_Char                         1     1      0      31
                                              5 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Aguarda_dado                                         8     0      8   99805
                                            175 BANK1      8     0      8
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Verifica_Analogica                                  14    14      0  133012
                                            175 BANK1     14    14      0
      _Buffer_Escrita_USB_Add_String
                    _Converte_Escala
                            ___lldiv
                      _ajusta_escala
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             78    52     26   94032
                                             98 BANK1     77    51     26
                            ___awdiv
                            ___awmod
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                7     4      3   17306
                                             67 BANK1      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                              5 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              10     7      3   17027
                                             67 BANK1     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    4418
                                             19 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    2233
                                              5 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2425
                                             11 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     634
                                              5 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     904
                                              5 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3385
                                             40 BANK1      9     5      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1672
                                             18 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1861
                                              5 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    7134
                                             89 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     605
                                             49 BANK1      3     0      3
                            ___fttol (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     918
                                             89 BANK1      9     3      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _ajusta_escala                                        3     1      2   10647
                                             97 BANK1      3     1      2
                    _Calcula_Fator_m
 ---------------------------------------------------------------------------------
 (3) _Calcula_Fator_m                                      8     8      0    9937
                                             89 BANK1      8     8      0
                           ___awtoft
                            ___ftdiv
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    5193
                                             74 BANK1     15     9      6
                           ___ftpack
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) _Converte_Escala                                      4     4      0   23843
                                             89 BANK1      4     4      0
                           ___altoft
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4    1541
                                             25 BANK1     15    11      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    7601
                                             52 BANK1     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                            ___fttol (ARG)
                           ___lltoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    6718
                                             77 BANK1     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                            ___fttol (ARG)
                           ___lltoft (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    4676
                                             13 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    3307
                                             67 BANK1     10     6      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3013
                                              5 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) _Buffer_Escrita_USB_Add_String                        8     4      4    2003
                                              7 BANK1      8     4      4
        _Buffer_Escrita_USB_Add_Char
                _TransmiteBuffer_USB
 ---------------------------------------------------------------------------------
 (3) _TransmiteBuffer_USB                                  2     0      2       0
                                              5 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _Buffer_Escrita_USB_Add_Char                          1     1      0      31
                                              5 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _InicializaWifi                                       1     1      0       0
                                              5 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Abre_Porta_COMM                                      8     4      4    2798
                                             27 BANK1      8     4      4
                   _Calcula_BaudRate
                            ___aldiv
                           _lock_PPS
                         _unLock_PPS
 ---------------------------------------------------------------------------------
 (1) _Abre_Porta_1                                        10     4      6    2950
                                             27 BANK1     10     4      6
                   _Calcula_BaudRate
                            ___aldiv
                           _lock_PPS
                         _unLock_PPS
 ---------------------------------------------------------------------------------
 (2) _unLock_PPS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lock_PPS                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Calcula_BaudRate                                     8     4      4    1447
                                             19 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    1165
                                              5 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Interrupt_USB_485                                    2     2      0      96
                                              1 COMRAM     2     2      0
        _Buffer_Leitura_USB_Add_Char
                             _Recebe
     i1_Buffer_Escrita_COMM_Add_Char
 ---------------------------------------------------------------------------------
 (12) i1_Buffer_Escrita_COMM_Add_Char                      1     1      0      31
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _Recebe                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _Buffer_Leitura_USB_Add_Char                          1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Interrupt_WIFI_GSM                                   6     6      0 1062466
                                            103 BANK0      1     1      0
                                              0 BANK1      5     5      0
                         _AguardaINT
                        _Recebe_COMM
      i1_Buffer_Escrita_USB_Add_Char
 ---------------------------------------------------------------------------------
 (9) _Recebe_COMM                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _AguardaINT                                           3     3      0 1062370
                                            100 BANK0      3     3      0
                   Absolute function *
                         _GETMACAddr *
                               _Post *
                              _Post2 *
                         _SETMACAddr *
                          _SOCKET_RX *
                          _TASK_POST *
                               _WIND *
                               _nada *
                             _recebe *
                      _recebeADDRESS *
                      _recebeFRAMEID *
                       _recebeFRAMES *
                 _recebeFUNCTIONCODE *
                    _recebeNETWORKID *
                       _recebeNODEID *
                         _recebeSIZE *
                       _verificaERRO
 ---------------------------------------------------------------------------------
 (10) _recebeFRAMES                                        2     2      0  321374
                                             87 COMRAM     2     2      0
                            _Aguarda
                      _recebeADDRESS
                      _recebeFRAMEID
                 _recebeFUNCTIONCODE
                    _recebeNETWORKID
                       _recebeNODEID
                         _recebeSIZE
                     i1_Aguarda_dado
    i1_Buffer_Escrita_USB_Add_String
 ---------------------------------------------------------------------------------
 (10) _recebeSIZE                                          2     2      0   45489
                                             87 COMRAM     2     2      0
                     i1_Aguarda_dado
 ---------------------------------------------------------------------------------
 (10) _recebeNODEID                                        2     2      0   45489
                                             87 COMRAM     2     2      0
                     i1_Aguarda_dado
 ---------------------------------------------------------------------------------
 (10) _recebeNETWORKID                                     6     6      0   47321
                                             87 COMRAM     2     2      0
                                             94 BANK0      4     4      0
                     i1_Aguarda_dado
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) _recebeFUNCTIONCODE                                  2     2      0   45489
                                             87 COMRAM     2     2      0
                     i1_Aguarda_dado
 ---------------------------------------------------------------------------------
 (11) _recebeFRAMEID                                       6     6      0   45489
                                             94 BANK0      6     6      0
                     i1_Aguarda_dado
 ---------------------------------------------------------------------------------
 (11) _recebeADDRESS                                       2     2      0   45489
                                             87 COMRAM     2     2      0
                     i1_Aguarda_dado
 ---------------------------------------------------------------------------------
 (11) _Aguarda                                             5     3      2     226
                                             11 COMRAM     5     3      2
                       _verificaERRO
                   _verificaFimFrame
 ---------------------------------------------------------------------------------
 (12) _verificaFimFrame                                    5     5      0      46
                                              3 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (10) _verificaERRO                                        8     8      0      69
                                              3 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (10) _recebe                                              0     0      0   46552
                     i1_Aguarda_dado
   i1_Buffer_Escrita_COMM_Add_String
 ---------------------------------------------------------------------------------
 (10) _nada                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _WIND                                                0     0      0   46342
                     i1_Aguarda_dado
    i1_Buffer_Escrita_USB_Add_String
 ---------------------------------------------------------------------------------
 (10) _TASK_POST                                           0     0      0   46552
                     i1_Aguarda_dado
   i1_Buffer_Escrita_COMM_Add_String
 ---------------------------------------------------------------------------------
 (10) _SOCKET_RX                                           2     2      0   46651
                                             87 COMRAM     2     2      0
                     i1_Aguarda_dado
     i1_Buffer_Escrita_COMM_Add_Char
   i1_Buffer_Escrita_COMM_Add_String
             i1_TransmiteBuffer_COMM
 ---------------------------------------------------------------------------------
 (10) _SETMACAddr                                          2     2      0  138578
                                             13 COMRAM     2     2      0
          _limpa_Buffer_Escrita_COMM
           _limpa_Buffer_Escrita_USB
    i1_Buffer_Escrita_USB_Add_String
                      i1_inicia_Post
 ---------------------------------------------------------------------------------
 (11) i1_inicia_Post                                       2     2      0  137503
                                             94 BANK0      2     2      0
                     i1_Aguarda_dado
   i1_Buffer_Escrita_COMM_Add_String
    i1_Buffer_Escrita_USB_Add_String
              i1_append_Arquivo_Json
 ---------------------------------------------------------------------------------
 (12) i1_append_Arquivo_Json                             152   152      0   90098
                                             90 BANK0      4     4      0
                                             17 BANK1    148   148      0
                           i1___wmul
                     i1_cria_Arquivo
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (13) i1_cria_Arquivo                                     22    18      4   44615
                                             87 COMRAM     1     1      0
                                             86 BANK0      4     0      4
                                              0 BANK1     17    17      0
   i1_Buffer_Escrita_COMM_Add_String
                           i1_length
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (14) i1_length                                            6     4      2     134
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (11) _limpa_Buffer_Escrita_USB                            2     2      0      46
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _limpa_Buffer_Escrita_COMM                           2     2      0      46
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _Post2                                               0     0      0   46552
                     i1_Aguarda_dado
   i1_Buffer_Escrita_COMM_Add_String
 ---------------------------------------------------------------------------------
 (10) _Post                                                0     0      0   47405
                     i1_Aguarda_dado
   i1_Buffer_Escrita_COMM_Add_String
    i1_Buffer_Escrita_USB_Add_String
 ---------------------------------------------------------------------------------
 (10) _GETMACAddr                                          2     2      0   47405
                                             87 COMRAM     2     2      0
                     i1_Aguarda_dado
   i1_Buffer_Escrita_COMM_Add_String
    i1_Buffer_Escrita_USB_Add_String
 ---------------------------------------------------------------------------------
 (11) i1_Buffer_Escrita_USB_Add_String                     8     4      4     853
                                              5 COMRAM     8     4      4
      i1_Buffer_Escrita_USB_Add_Char
              i1_TransmiteBuffer_USB
 ---------------------------------------------------------------------------------
 (12) i1_TransmiteBuffer_USB                               2     0      2       0
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i1_Buffer_Escrita_USB_Add_Char                        1     1      0      31
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) i1_Buffer_Escrita_COMM_Add_String                    8     4      4    1063
                                              5 COMRAM     8     4      4
     i1_Buffer_Escrita_COMM_Add_Char
             i1_TransmiteBuffer_COMM
 ---------------------------------------------------------------------------------
 (12) i1_TransmiteBuffer_COMM                              2     0      2       0
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i1_Buffer_Escrita_COMM_Add_Char                      1     1      0      31
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) i1_Aguarda_dado                                      8     0      8   45489
                                             86 BANK0      8     0      8
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (12) i1_sprintf                                          78    52     26   43016
                                              9 BANK0     77    51     26
                          i1___awdiv
                          i1___awmod
                          i1___ftadd
                          i1___ftdiv
                           i1___ftge
                          i1___ftmul
                          i1___ftneg
                          i1___ftsub
                          i1___fttol
                          i1___lldiv
                          i1___llmod
                         i1___lltoft
                           i1___wmul
                       i1__div_to_l_
                      i1__tdiv_to_l_
                           i1_fround
                          i1_isdigit
                            i1_scale
 ---------------------------------------------------------------------------------
 (13) i1_scale                                             7     4      3    7114
                                             65 COMRAM     7     4      3
                          i1___awdiv
                          i1___awmod
                          i1___ftmul
                          i1___fttol (ARG)
                           i1___wmul
 ---------------------------------------------------------------------------------
 (13) i1_isdigit                                           3     3      0      99
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) i1_fround                                           10     7      3    6835
                                             65 COMRAM    10     7      3
                          i1___awdiv
                          i1___awmod
                          i1___ftmul
                           i1___wmul
 ---------------------------------------------------------------------------------
 (14) i1___wmul                                            6     2      4    1696
                                             17 COMRAM     6     2      4
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (14) i1___ftmul                                          15     9      6    2441
                                             50 COMRAM    15     9      6
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
                          i1___ftneg (ARG)
                         i1___ftpack
                         i1___ftpack (ARG)
                          i1___fttol (ARG)
                         i1___lltoft (ARG)
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (14) i1___awmod                                           6     2      4    1133
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (14) i1___awdiv                                           8     4      4    1215
                                              9 COMRAM     8     4      4
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (13) i1__tdiv_to_l_                                      15     9      6     524
                                              3 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (13) i1__div_to_l_                                       12     6      6     692
                                              3 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (13) i1___lltoft                                          9     5      4     970
                                             38 COMRAM     9     5      4
                         i1___ftpack
                          i1___fttol (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___llmod                                           9     1      8     792
                                             16 COMRAM     9     1      8
                          i1___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___lldiv                                          13     5      8     801
                                              3 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (13) i1___fttol                                          15    11      4     721
                                             23 COMRAM    15    11      4
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
                         i1___ftpack (ARG)
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___ftsub                                           6     0      6    2574
                                              0 BANK0      6     0      6
                          i1___ftadd
                         i1___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (14) i1___ftadd                                          12     6      6    2408
                                             75 COMRAM    12     6      6
                          i1___ftmul (ARG)
                          i1___ftneg (ARG)
                         i1___ftpack
                          i1___fttol (ARG)
                         i1___lltoft (ARG)
                           i1_fround (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___ftneg                                           3     0      3     170
                                             47 COMRAM     3     0      3
                          i1___fttol (ARG)
                         i1___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___ftge                                            9     3      6     478
                                              0 BANK0      9     3      6
                          i1___ftadd (ARG)
                          i1___ftneg (ARG)
                          i1___fttol (ARG)
                         i1___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___ftdiv                                          15     9      6    1323
                                             72 COMRAM    15     9      6
                         i1___ftpack
                            i1_scale (ARG)
 ---------------------------------------------------------------------------------
 (15) i1___ftpack                                          8     3      5     763
                                              3 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Abre_Porta_1
     _Calcula_BaudRate
       ___aldiv
     ___aldiv
     _lock_PPS
     _unLock_PPS
   _Abre_Porta_COMM
     _Calcula_BaudRate
       ___aldiv
     ___aldiv
     _lock_PPS
     _unLock_PPS
   _Aguarda_dado
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftneg (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___ftsub
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___fttol
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _Buffer_Escrita_USB_Add_String
     _Buffer_Escrita_USB_Add_Char
     _TransmiteBuffer_USB
   _Calcula_Fator_m
     ___awtoft
       ___ftpack
     ___ftdiv
       ___ftpack
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _InicializaWifi
   _TransmiteBuffer_COMM
   _TransmiteBuffer_USB
   _Verifica_Analogica
     _Buffer_Escrita_USB_Add_String
       _Buffer_Escrita_USB_Add_Char
       _TransmiteBuffer_USB
     _Converte_Escala
       ___altoft
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     _ajusta_escala
       _Calcula_Fator_m
         ___awtoft
           ___ftpack
         ___ftdiv
           ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftneg (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___ftsub
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___fttol
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _inicia_Post
     _Aguarda_dado
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftdiv
           ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___lltoft (ARG)
                     ___ftpack
                     ___fttol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___lltoft (ARG)
                     ___ftpack
                     ___fttol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___fttol
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _Buffer_Escrita_COMM_Add_String
       _Buffer_Escrita_COMM_Add_Char
       _TransmiteBuffer_COMM
     _Buffer_Escrita_USB_Add_String
       _Buffer_Escrita_USB_Add_Char
       _TransmiteBuffer_USB
     _append_Arquivo_Json
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _cria_Arquivo
         _Buffer_Escrita_COMM_Add_String
           _Buffer_Escrita_COMM_Add_Char
           _TransmiteBuffer_COMM
         _length
         _sprintf
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___lltoft (ARG)
                     ___ftpack
                     ___fttol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftdiv
             ___ftpack
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___lltoft (ARG)
                     ___ftpack
                     ___fttol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___lltoft (ARG)
                     ___ftpack
                     ___fttol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___fttol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___lltoft (ARG)
                       ___ftpack
                       ___fttol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___lltoft (ARG)
                     ___ftpack
                     ___fttol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftsub
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___lltoft (ARG)
                     ___ftpack
                     ___fttol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___fttol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___lltoft (ARG)
                       ___ftpack
                       ___fttol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___lltoft (ARG)
                     ___ftpack
                     ___fttol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___fttol
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftdiv
           ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___lltoft (ARG)
                     ___ftpack
                     ___fttol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___lltoft (ARG)
                     ___ftpack
                     ___fttol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___fttol
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___awmod
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___ftpack (ARG)
       ___fttol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftdiv
       ___ftpack
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftneg (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___fttol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___fttol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
       ___fttol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     ___fttol
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
       ___fttol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _Interrupt_USB_485 (ROOT)
   _Buffer_Leitura_USB_Add_Char
   _Recebe
   i1_Buffer_Escrita_COMM_Add_Char

 _Interrupt_WIFI_GSM (ROOT)
   _AguardaINT
     Absolute function(Fake) *
     _GETMACAddr *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
       i1_Buffer_Escrita_COMM_Add_String
         i1_Buffer_Escrita_COMM_Add_Char
         i1_TransmiteBuffer_COMM
       i1_Buffer_Escrita_USB_Add_String
         i1_Buffer_Escrita_USB_Add_Char
         i1_TransmiteBuffer_USB
     _Post *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
       i1_Buffer_Escrita_COMM_Add_String
         i1_Buffer_Escrita_COMM_Add_Char
         i1_TransmiteBuffer_COMM
       i1_Buffer_Escrita_USB_Add_String
         i1_Buffer_Escrita_USB_Add_Char
         i1_TransmiteBuffer_USB
     _Post2 *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
       i1_Buffer_Escrita_COMM_Add_String
         i1_Buffer_Escrita_COMM_Add_Char
         i1_TransmiteBuffer_COMM
     _SETMACAddr *
       _limpa_Buffer_Escrita_COMM
       _limpa_Buffer_Escrita_USB
       i1_Buffer_Escrita_USB_Add_String
         i1_Buffer_Escrita_USB_Add_Char
         i1_TransmiteBuffer_USB
       i1_inicia_Post
         i1_Aguarda_dado
           i1_sprintf
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftdiv
               i1___ftpack
               i1_scale (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftge
               i1___ftadd (ARG)
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftsub
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lldiv
             i1___llmod
               i1___lldiv (ARG)
             i1___lltoft
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
             i1__div_to_l_
             i1__tdiv_to_l_
             i1_fround
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1_isdigit
             i1_scale
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
         i1_Buffer_Escrita_COMM_Add_String
           i1_Buffer_Escrita_COMM_Add_Char
           i1_TransmiteBuffer_COMM
         i1_Buffer_Escrita_USB_Add_String
           i1_Buffer_Escrita_USB_Add_Char
           i1_TransmiteBuffer_USB
         i1_append_Arquivo_Json
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1_cria_Arquivo
             i1_Buffer_Escrita_COMM_Add_String
               i1_Buffer_Escrita_COMM_Add_Char
               i1_TransmiteBuffer_COMM
             i1_length
             i1_sprintf
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftdiv
                 i1___ftpack
                 i1_scale (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftge
                 i1___ftadd (ARG)
                   i1___ftmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1_fround (ARG)
                     i1___awdiv
                       i1___awmod (ARG)
                     i1___awmod
                     i1___ftmul
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftneg (ARG)
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                         i1___lltoft (ARG)
                           i1___ftpack
                           i1___fttol (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                             i1___ftpack (ARG)
                             i1___wmul (ARG)
                               i1___awdiv (ARG)
                                 i1___awmod (ARG)
                               i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___ftpack (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___wmul
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftsub
                 i1___ftadd
                   i1___ftmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1_fround (ARG)
                     i1___awdiv
                       i1___awmod (ARG)
                     i1___awmod
                     i1___ftmul
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftneg (ARG)
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                         i1___lltoft (ARG)
                           i1___ftpack
                           i1___fttol (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                             i1___ftpack (ARG)
                             i1___wmul (ARG)
                               i1___awdiv (ARG)
                                 i1___awmod (ARG)
                               i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___ftpack (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___wmul
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lldiv
               i1___llmod
                 i1___lldiv (ARG)
               i1___lltoft
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
               i1__div_to_l_
               i1__tdiv_to_l_
               i1_fround
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1_isdigit
               i1_scale
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1_sprintf
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftdiv
               i1___ftpack
               i1_scale (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftge
               i1___ftadd (ARG)
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftsub
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lldiv
             i1___llmod
               i1___lldiv (ARG)
             i1___lltoft
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
             i1__div_to_l_
             i1__tdiv_to_l_
             i1_fround
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1_isdigit
             i1_scale
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
     _SOCKET_RX *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
       i1_Buffer_Escrita_COMM_Add_Char
       i1_Buffer_Escrita_COMM_Add_String
         i1_Buffer_Escrita_COMM_Add_Char
         i1_TransmiteBuffer_COMM
       i1_TransmiteBuffer_COMM
     _TASK_POST *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
       i1_Buffer_Escrita_COMM_Add_String
         i1_Buffer_Escrita_COMM_Add_Char
         i1_TransmiteBuffer_COMM
     _WIND *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
       i1_Buffer_Escrita_USB_Add_String
         i1_Buffer_Escrita_USB_Add_Char
         i1_TransmiteBuffer_USB
     _nada *
     _recebe *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
       i1_Buffer_Escrita_COMM_Add_String
         i1_Buffer_Escrita_COMM_Add_Char
         i1_TransmiteBuffer_COMM
     _recebeADDRESS *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
     _recebeFRAMEID *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
     _recebeFRAMES *
       _Aguarda
         _verificaERRO
         _verificaFimFrame
       _recebeADDRESS
         i1_Aguarda_dado
           i1_sprintf
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftdiv
               i1___ftpack
               i1_scale (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftge
               i1___ftadd (ARG)
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftsub
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lldiv
             i1___llmod
               i1___lldiv (ARG)
             i1___lltoft
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
             i1__div_to_l_
             i1__tdiv_to_l_
             i1_fround
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1_isdigit
             i1_scale
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
       _recebeFRAMEID
         i1_Aguarda_dado
           i1_sprintf
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftdiv
               i1___ftpack
               i1_scale (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftge
               i1___ftadd (ARG)
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftsub
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lldiv
             i1___llmod
               i1___lldiv (ARG)
             i1___lltoft
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
             i1__div_to_l_
             i1__tdiv_to_l_
             i1_fround
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1_isdigit
             i1_scale
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
       _recebeFUNCTIONCODE
         i1_Aguarda_dado
           i1_sprintf
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftdiv
               i1___ftpack
               i1_scale (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftge
               i1___ftadd (ARG)
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftsub
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lldiv
             i1___llmod
               i1___lldiv (ARG)
             i1___lltoft
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
             i1__div_to_l_
             i1__tdiv_to_l_
             i1_fround
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1_isdigit
             i1_scale
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
       _recebeNETWORKID
         i1_Aguarda_dado
           i1_sprintf
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftdiv
               i1___ftpack
               i1_scale (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftge
               i1___ftadd (ARG)
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftsub
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lldiv
             i1___llmod
               i1___lldiv (ARG)
             i1___lltoft
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
             i1__div_to_l_
             i1__tdiv_to_l_
             i1_fround
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1_isdigit
             i1_scale
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
         i1___wmul
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       _recebeNODEID
         i1_Aguarda_dado
           i1_sprintf
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftdiv
               i1___ftpack
               i1_scale (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftge
               i1___ftadd (ARG)
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftsub
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lldiv
             i1___llmod
               i1___lldiv (ARG)
             i1___lltoft
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
             i1__div_to_l_
             i1__tdiv_to_l_
             i1_fround
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1_isdigit
             i1_scale
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
       _recebeSIZE
         i1_Aguarda_dado
           i1_sprintf
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftdiv
               i1___ftpack
               i1_scale (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftge
               i1___ftadd (ARG)
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftsub
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lldiv
             i1___llmod
               i1___lldiv (ARG)
             i1___lltoft
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
             i1__div_to_l_
             i1__tdiv_to_l_
             i1_fround
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1_isdigit
             i1_scale
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
       i1_Buffer_Escrita_USB_Add_String
         i1_Buffer_Escrita_USB_Add_Char
         i1_TransmiteBuffer_USB
     _recebeFUNCTIONCODE *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
     _recebeNETWORKID *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
       i1___wmul
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
     _recebeNODEID *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
     _recebeSIZE *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
     _verificaERRO *
   _Recebe_COMM
   i1_Buffer_Escrita_USB_Add_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     456      37       27.1%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0      96      24       58.6%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0      96      23       58.6%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0      78      21       46.9%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      96      19       58.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      96      17       58.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DC      15       85.9%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      F0      13       93.8%
BITBANK3           100      0       0      10        0.0%
BANK3              100     18     100      11      100.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     94     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     CD      ED       7       92.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     68      9E       5       98.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      5C       1       96.8%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     883      32        0.0%
DATA                 0      0     CD9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Aug 13 15:55:58 2018

                             ___altoft@exp 014B                                          _b 00D3  
                                        _m 00CC                                 i1___ftpack 7476  
                              __CFG_CP$OFF 000000                      __size_ofi1__div_to_l_ 0130  
                            ___altoft@sign 014C                                 i1___lltoft 7FBA  
                             ___awdiv@sign 0110                        ___wmul@multiplicand 0115  
               ?_limpa_Buffer_Escrita_COMM 0001                           i1___wmul@product 0016  
                  trataRespostaHTTP@F20030 02F5                    trataRespostaHTTP@F20032 03FC  
                  trataRespostaHTTP@F20034 03F8                               ___ftadd@exp1 0158  
                             ___ftadd@exp2 0157                                __CFG_LVP$ON 000000  
                             ___ftadd@sign 0156                                        l130 4660  
                                      l131 467E                                        l132 46BE  
                                      l301 8880                                        l133 46FC  
                                      l135 4710                                        l127 460A  
                                      l136 4736                                        l137 4742  
                                      l129 4646                                        l306 6EE0  
                                      l307 6E8E                                        l139 47AE  
                                      l308 6EA0                                        l253 6D6A  
                                      l309 6F38                                        l254 6D90  
                                      l270 82DC                                        l272 830C  
                                      l432 52DA                                        l433 510C  
                                      l434 51CE                                        l435 51D6  
                                      l276 8280                                        l436 5208  
                                      l285 6FAE                                        l437 521E  
                                      l286 6F5C                                        l278 82B0  
                                      l454 8224                                        l287 6F6E  
                                      l455 821E                                        l296 88B4  
                                      l288 7006                                        l900 5C2A  
                                      l910 4FA6                                        l911 4FEE  
                                      l912 5036                                        l904 4DF6  
                                      l913 5082                                        l905 4E3E  
                                      l906 4E86                                        l907 4ECE  
                                      l908 4F16                                        l909 4F5E  
                                      l952 3CA4                                        l953 3B98  
                             i1___ftadd@f1 004C                                        l946 4964  
                                      l970 0100                               i1___ftadd@f2 004F  
                                      l971 0106                                        l963 00C0  
                                      l956 3C72                                        l980 0270  
                                      l972 010C                                        l964 00E2  
                                      l949 4A6C                                        l957 3E1A  
                                      l981 0254                                        l990 0282  
                                      l982 0210                                        l966 0114  
                                      l959 3EF4                                        l991 0494  
                                      l967 00F4                                        l992 0286  
                                      l993 0288                                        l969 00FA  
                                      l986 042A                                        l994 028C  
                                      l978 0172                                        l995 028E  
                                      l899 5C24                                        l989 027E  
                                      l998 0292                                        l999 0296  
                             i1___ftge@ff1 0060                               i1___ftge@ff2 0063  
                                      _iii 02E7                                        _low 01EB  
                             i1___ftdiv@f1 0049                               i1___ftdiv@f2 004C  
                             i1___ftdiv@f3 0053                               ___awmod@sign 010A  
                                      prod 003FF3                               i1___ftneg@f1 0030  
                                      tosl 003FFD                                        wreg 003FE8  
                  ??i1_TransmiteBuffer_USB 0006                  __end_of_Interrupt_USB_485 8A06  
                             i1___ftmul@f1 0033                               i1___ftmul@f2 0036  
                            __CFG_BBEN$OFF 000000                               i1___ftsub@f1 0060  
                             i1___ftsub@f2 0063                               i1___fttol@f1 0018  
                    __size_of_Abre_Porta_1 00DA          i1Buffer_Escrita_COMM_Add_String@i 000C  
          Buffer_Escrita_COMM_Add_String@i 010D                               __CFG_ZCD$OFF 000000  
                             ___ftdiv@cntr 0153                               ___ftdiv@sign 0158  
                                     l1000 02C6                                       l1001 02D6  
                                     l1010 0358                                       l1002 02D0  
                                     l1020 0418                                       l1012 03C0  
                                     l1101 0FB4                                       l1021 17A8  
                                     l1013 037E                                       l1005 0334  
                                     l1102 10E0                                       l1030 067A  
                                     l1022 04AA                                       l1006 034A  
                                     l1103 1092                                       l1031 0ECA  
                                     l1023 0502                                       l1007 0352  
                                     l1200 1A58                                       l1112 11F0  
                                     l1040 07EE                                       l1016 03EC  
                                     l1041 0892                                       l1025 05AE  
                                     l1017 03D8                                       l1009 036C  
                                     l1202 1A3C                                       l1122 1366  
                                     l1026 0634                                       l1051 0A5A  
                                     l1043 0918                                       l1019 0400  
                                     l1300 6E52                                       l1140 13FA  
                                     l1108 1176                                       l1052 0A82  
                                     l1036 06BA                                       l1028 0660  
                                     l1125 1380                                       l1109 1260  
                                     l1045 0936                                       l1037 06CC  
                                     l1029 0674                                       l1222 1B52  
                                     l1206 1A6C                                       l1150 1462  
                                     l1142 144E                                       l1134 13E4  
                                     l1126 13F4                                       l1118 12EE  
                                     l1070 0B16                                       l1046 09B2  
                                     l1038 06D2                                       l1135 13CA  
                                     l1127 13B0                                       l1055 0A9C  
                                     l1047 0966                                       l1320 79AE  
                                     l1224 1CF4                                       l1216 1B3A  
                                     l1208 1ABE                                       l1160 1746  
                                     l1152 154E                                       l1144 1432  
                                     l1072 0B6A                                       l1064 0B00  
                                     l1056 0B10                           cria_Arquivo@dado 01B1  
                                     l1321 79A2                                       l1161 1612  
                                     l1153 1534                                       l1129 1394  
                                     l1065 0AE6                                       l1057 0ACC  
                                     l1410 7958                                       l1226 1CCE  
                                     l1218 1B1E                                       l1170 17D8  
                                     l1082 0DAA                                       l1074 0B4E  
                                     l1411 7962                                       l1403 790A  
                                     l1227 1BA2                                       l1163 176C  
                                     l1155 1572                                       l1139 1414  
                                     l1091 0E1C                                       l1083 0CB6  
                                     l1059 0AB0                                       l1412 7970  
                                     l1404 791A                                       l1420 7D40  
                                     l1228 1CDE                                       l1164 1752  
                                     l1156 1578                                       l1084 0CD6  
                                     l1229 1C40                                       l1157 15A2  
                                     l1149 152A                                       l1069 0B30  
                                     l1502 5618                                       l1406 7938  
                                     l1190 1986                                       l1182 1926  
                                     l1174 1848                                       l1086 0DD0  
                                     l1078 0B82                                       l1431 8722  
                                     l1407 7930                                       l1423 7D60  
                                     l1183 18D4                                       l1175 1878  
                                     l1087 0DB6                                       l1512 5676  
                                     l1424 7D6A                                       l1416 7D26  
                                     l1192 19A8                                       l1096 1126  
                                     l1521 56B6                                       l1513 566C  
                                     l1441 622E                                       l1425 7D78  
                                     l1417 7D32                                       l1193 19B0  
                                     l1177 1916                                       l1169 181C  
                                     l1097 0EE6                                       l1089 0DEC  
                                     l1522 56AC                                       l1442 621E  
                                     l1178 1892                                       l1291 6DB4  
                                     l1507 5680                                       l1531 6A06  
                                     l1435 6160                                       l1419 7D48  
                                     l1195 19F4                                       l1187 1944  
                                     l1292 6DCC                                       l1524 56DA  
                                     l1196 19FC                                       l1525 56F6  
                                     l1533 6A30                                       l1437 617E  
                                     l1541 5DE8                                       l1197 1A20  
                                     l1189 1964                                       l1294 6DFA  
                                     l1470 741E                                       l1526 5726  
                                     l1534 6A70                                       l1630 78DA  
                                     l1438 61C0                                       l1542 5E22  
                                     l1198 1A28                                       l1295 6DEE  
                                     l1471 7408                                       l1535 6A96  
                                     l1447 6252                                       l1439 61F0  
                                     l1551 5EAA                                       l1543 5E4A  
                                     l1199 1AE2                               i1___lltoft@c 0027  
                                     l1640 7EC6                                       l1448 6246  
                                     l1552 5E9E                                       l1473 7446  
                                     l1625 7898                                       l1545 5E86  
                                     l1298 6E2E                                       l1474 743C  
                                     l1570 6576                                       l1626 788C  
                                     l1546 5E76                                       l1299 6E3C  
                                     l1467 73EA                                       l1563 64E0  
                                     l1635 7E90                                       l1539 5DBA  
                                     l1468 73E0                                       l1556 7764  
                                     l1580 844A                                       l1636 7E84  
                                     l1565 650A                                       l1557 779A  
                                     l1629 78CC                                       l1566 653E  
                                     l1574 89C6                                       l1646 7F62  
                                     l1567 654E                                       l1639 7EB8  
                                     l1647 7F56                                       l1592 679C  
                                     l1584 66FA                                       l1569 6566  
                                     l1593 6790                                       l1498 55E8  
                                     l1586 6778                                       l1595 67B8  
                                     l1587 6768                                       l1599 8A4A  
                                     STR_1 FEBA                               __CFG_WDTE$ON 000000  
                                     STR_2 FF2B                                       STR_3 FF81  
                                     STR_4 FDC4                                       STR_5 FE64  
                                     STR_6 FF77                                       STR_7 FFD5  
                                     STR_8 FF38                                       STR_9 FD29  
                         cria_Arquivo@nome 01AF                                       _WIND 8152  
                           _InicializaWifi 88BA                                       _Post 7D86  
                                     _high 01EC                                       _nada 8AF2  
                        i1___lldiv@divisor 0008                                       _main 4406  
                             ___ftpack@arg 0105                               ___ftpack@exp 0108  
                               _AguardaINT 67D2                                       _size 0564  
                                     _text 038C                                       fsr0h 003FEA  
                                     fsr1h 003FE2                                       indf0 003FEF  
                                     fsr2h 003FDA                                       fsr0l 003FE9  
                                     indf1 003FE7                                       indf2 003FDF  
                                     fsr1l 003FE1                                       fsr2l 003FD9  
                        i1___lldiv@counter 0010                               ?_inicia_Post 0001  
                            i1___ftdiv@exp 0056                          ??_recebeNETWORKID 0058  
                                     prodh 003FF4                                       prodl 003FF3  
                                     start 00AE                               i1__div_to_l_ 6272  
                          __end_ofi1_scale 4406             ??_Buffer_Escrita_COMM_Add_Char 0105  
                          __end_of_Aguarda 64B4                               _sprintf$2180 0190  
                             _sprintf$2173 0186                               _sprintf$2174 0188  
                             _sprintf$2177 018A                               _sprintf$2178 018C  
                             _sprintf$2179 018E                   ??i1_TransmiteBuffer_COMM 0006  
                             _sprintf$2795 0182                              __CFG_CSWEN$ON 000000  
                            _EstadoInterno 02E3                               ___ftmul@cntr 0141  
                             ___param_bank 000000                               ___ftmul@sign 0142  
                              ?_SETMACAddr 0001                              i1___ftmul@exp 003C  
                          ??_ajusta_escala 0163                         _Verifica_Analogica 5AB0  
                      __size_of_GETMACAddr 0068                               ___fttol@exp1 0127  
                  ??i1_append_Arquivo_Json 00BA                               ___fttol@lval 0123  
                                    ?_WIND 0001                    i1___ftmul@f3_as_product 003D  
                                    ?_Post 0001                                      l13014 11C4  
                                    l13006 1176                                      l10480 77C6  
                 Calcula_BaudRate@BaudRate 0113                                      l13034 12F2  
                                    l13204 1896                                      l14022 6D90  
                                    l13118 1534                                      l13218 18D8  
                                    l13074 13C4                                      l13076 13CA  
                                    l13326 1B4E                                      l13166 1784  
                                    l13086 13FA                                      l12702 03D8  
                                    l13344 1CCE                                      l13264 19FC  
                                    l13354 1D14                                      l13348 1CF0  
                                    l13296 1ABE                                      l12692 037E  
                                    l12686 0358                                      l12960 0EA4  
                                    l12856 0AE0                                      l12858 0AE6  
                                    l12868 0B16                                      l12974 0F1A  
                                    l12888 0B7E                            __end_of___aldiv 6E6C  
                                    ?_nada 0001                                      _ADCAP 003EF5  
                             _Abre_Porta_1 6CBC                                      ?_main 0001  
                           i1___awdiv@sign 000F                                      _ADPCH 003EF1  
                          __end_of___awdiv 797E                            __end_of___ftadd 575C  
                                    STR_10 FFCF                                      STR_11 FFDA  
                                    STR_20 FDC4                                      STR_12 FFC9  
                                    STR_21 FE64                                      STR_13 FCEC  
                                    STR_14 FF38                                      STR_22 FFFD  
                                    STR_30 FC52                                      STR_23 FFFD  
                                    STR_31 FFF6                                      STR_15 FF38  
                                    STR_24 FE64                                      STR_40 FFFD  
                                    STR_32 FFF0                                      STR_16 FFE3  
                                    STR_33 FE64                                      STR_41 FFFD  
                                    STR_25 FF63                                      STR_17 FE7D  
                                    STR_42 FE64                                      STR_18 FE65  
                                    STR_34 FE34                                      STR_26 FDA7  
                                    STR_35 FDBE                                      STR_27 FFF6  
                                    STR_19 FFF3                                      STR_51 FF8B  
                                    STR_43 FE00                                      STR_28 FFF0  
                                    STR_52 FFEA                                      STR_60 FFA8  
                                    STR_36 FF6D                                      STR_44 FE1B  
                          __end_of___awmod 7D86                                      STR_53 FE64  
                                    STR_29 FE64                                      STR_37 FDC4  
                                    STR_45 FFFD                                      STR_61 FFEB  
                                    STR_62 FE64                                      STR_38 FE64  
                                    STR_70 FE60                                      STR_46 FFFD  
                                    STR_54 FFA1                          ?_verificaFimFrame 0001  
                                    STR_47 FE64                                      STR_55 FFEB  
                                    STR_63 FFC3                                      STR_71 FE93  
                                    STR_39 FCA6                                      STR_56 FE64  
                                    STR_64 FFEA                                      STR_80 FFE7  
                                    STR_48 FF4F                                      STR_72 FDE4  
                                    STR_81 FE64                                      STR_65 FE64  
                                    STR_57 FFBD                                      STR_73 FEEE  
                                    STR_74 FDC4                                      STR_58 FFEB  
                                    STR_66 FFC0                                      STR_82 FF9A  
                                    STR_90 FE4D                                      STR_59 FE64  
                                    STR_67 FFEB                                      STR_75 FFB6  
                                    STR_91 FB6F                                      STR_68 FE64  
                                    STR_76 FFED                                      STR_92 FFAF  
                                    STR_77 FFED                                      STR_69 FF44  
                                    STR_85 FEDD                                      STR_86 FEA7  
                                    STR_78 FBF7                                      STR_79 FFFB  
                                    STR_95 FFDF                                      STR_87 FDC6  
                      ?_Verifica_Analogica 0001                                      STR_96 FDC4  
                                    STR_88 FD88                                      STR_97 FE64  
                                    STR_89 FD5C                                      STR_98 FFF9  
                                    STR_99 FEFF                            __end_of___ftdiv 6AD8  
          ??i1_Buffer_Escrita_USB_Add_Char 0004                            __end_of___ftneg 89DA  
                          __end_of___lldiv 78F4                            __end_of___ftmul 65C0  
                          ___awdiv@divisor 010D                            __end_of___llmod 7EE0  
                          __end_of___ftsub 8486                            __end_of___fttol 67D2  
                                    u14411 559E                                      u14421 55B4  
                                    u14510 5648                                      u13810 73D2  
                                    u14450 55D4                                      u17010 030C  
                                    u17020 0312                                      u14621 64C8  
                                    u14550 5688                                      u14710 793C  
                                    u14480 5604                                      u18000 1784  
                                    u17200 066E                                      u14641 64F2  
                                    u17017 02FE                                      u13850 7450  
                                    u14580 56BE                                      u17230 0694  
                                    u16511 5DCC                                      u17240 06AA  
                                    u17160 0542                                      u17080 03B4  
                                    u14770 7D4C                                      u18210 19EA  
                                    u16370 8876                                      u17340 092E  
                                    u17165 0538                                      u18310 1AEC  
                                    u17270 06C6                             __CFG_DEBUG$OFF 000000  
                                    u17087 03A6                                      u16640 6258  
                                    u18400 1D36                                      u18320 1B0E  
                                    u17600 0EA4                                      u17520 0C94  
                                    u17360 09FA                                      u16810 67A2  
                                    u16570 5EB0                                      u18410 1D58  
                                    u16651 69EE                                      u16491 5D9E  
                                    u17700 1136                                      u19300 5B28  
                                    u17710 1188                                      u17470 0B3E  
                                    u17390 0A7C                                      u19310 5BF6  
                                    u18430 6ED6                                      u16751 66DE  
                                    u16671 6A18                                      u18600 88AA  
                                    u16840 789C                                      u17800 1360  
                                    u17560 0DD8                                      u18440 6F18  
                                    u18361 1B7A                                      u16770 671E  
                       ajusta_escala@valor 0161                                      u17740 11C4  
                                    u17660 0F58                                      u18460 6F28  
                                    u19500 4778                                      u18437 6EC8  
                                    u19190 5D78                                      u16870 7E94  
                                    u18390 1D14                                      u17670 0F74  
                                    u19318 5BFA                                      u16775 6716  
                                    u18447 6F0A                                      u18480 825A  
                                    u17930 155C                                      u16970 01E6  
                                    u19355 4620                                      u17940 156C  
                                    u17780 1330                                      u19460 46E4  
                                    u19365 462C                                      u19357 4624  
                                    u18750 6FA4                         __size_of_TASK_POST 003C  
                                    u19607 88DC                                      u18487 824C  
                                    u19367 4630                                      u18760 6FE6  
                                    u17960 158E                                      u17880 1422  
                                    u19480 4720                                      i1l121 81F2  
                                    u18690 6DFE                                      i1l115 89FE  
                                    u18780 6FF6                                      i1l301 8918  
                                    u18757 6F96                                      u18767 6FD8  
                                    u19567 4482                                      u19577 4788  
                                    i1l306 713C                                      i1l322 6856  
                                    _U1RXB 003DE8                                      i1l307 70EE  
                                    i1l331 6414                                      u19587 7B4A  
                                    i1l308 70FE                                      i1l332 640A  
                                    i1l309 718E                                      i1l317 682E  
                                    u19597 71A2                                      i1l270 8336  
                                    i1l350 85C6                                      i1l342 8574  
                                    i1l318 6824                                      i1l272 8366  
                                    i1l432 5556                                      i1l328 63B4  
                                    i1l433 5390                                      i1l337 64A6  
                                    i1l329 63BE                                      i1l362 87C6  
                                    i1l434 5452                                      _U2RXB 003DD0  
                                    _U1TXB 003DEA                                      i1l363 87B2  
                                    i1l435 545A                                      i1l276 8390  
                                    i1l356 8782                                      i1l436 548C  
                                    i1l612 7CEA                                      i1l285 7078  
                                    i1l365 87D8                                      i1l357 876E  
                                    i1l437 54A2                                      i1l278 83C0  
                                    i1l286 702A                                      i1l454 83E8  
                                    i1l287 703A                                      i1l359 8794  
                                    i1l455 83E4                                      i1l296 894A  
                                    i1l288 70CA                                      i1l560 5978  
                                    i1l616 6C4A                                      _PCON0 003FF0  
                                    i1l561 5A7A                                      i1l617 6BE0  
                                    _PCON1 003FF1                                      i1l562 59A2  
                                    i1l618 6BFE                                      _U2TXB 003DD2  
                                    i1l635 76B8                                      i1l572 5A00  
                                    i1l564 59B4                                      i1l636 7696  
                                    i1l581 5A42                                      i1l565 59DA  
                                    i1l575 5A16                                      i1l584 5A58  
                                    i1l656 818A                                      i1l672 7BCE  
                                    i1l569 59EA                                      i1l673 7BB8  
                                    i1l578 5A2C                                      i1l676 7BE6  
                                    i1l952 419A                                      i1l953 4098  
                                    i1l946 4C56                                      i1l970 1DB8  
                                    i1l971 1DBE                                      i1l963 1D78  
                                    i1l956 416A                                      i1l980 1F24  
                                    i1l972 1DC4                                      i1l964 1D9A  
                            ??_Recebe_COMM 0004                                      i1l949 4D54  
                                    i1l957 4304                                      i1l981 1F08  
                                    i1l990 1F36                                      i1l982 1EC6  
                                    i1l966 1DCC                                      i1l959 43D6  
                                    i1l991 2148                                      i1l967 1DAC  
                                    i1l992 1F3A                                      i1l993 1F3C  
                                    i1l969 1DB2                                      i1l986 20DE  
                                    i1l994 1F40                                      i1l978 1E2A  
                                    i1l995 1F42                                      i1l989 1F32  
                                    i1l998 1F46                                      i1l999 1F4A  
                          ___awdiv@counter 010F                         __size_of_SOCKET_RX 0080  
                           i1___ftadd@exp1 0057                             i1___ftadd@exp2 0056  
                           i1___ftadd@sign 0055                                 i1isdigit@c 0006  
                       ??_verificaFimFrame 0004                         i1__tdiv_to_l_@exp1 0012  
                       i1__tdiv_to_l_@cntr 0011                            _Calcula_Fator_m 724C  
                               i1scale@scl 0048                          Calcula_Fator_m@mX 015B  
                        Calcula_Fator_m@mY 015E                               ___lltoft@exp 0130  
                       i1__tdiv_to_l_@quot 000D                             __CFG_FCMEN$OFF 000000  
                                    _Post2 8816                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                           i1___awmod@sign 0009                         i1___lldiv@dividend 0004  
                  __size_ofi1_Aguarda_dado 0062                              ___awtoft@sign 0110  
                  Abre_Porta_COMM@BaudRate 011B                            __end_of_dpowers FB01  
                                    _conta 02C4                                      _index 005A  
                                    _saida 02BC                                      _scale 3A16  
                   __end_of_InicializaWifi 88EC                            __end_of_isdigit 8A54  
                                    _mudou 02D1         i1append_Arquivo_Json@valorMem_Char 018F  
         append_Arquivo_Json@valorMem_Char 0284                         __CFG_MCLRE$EXTMCLR 000000  
                            ___ftpack@sign 0109                                      _value 0800  
                                    _valor 00D7                                      _tempo 02ED  
                         __end_ofi1___ftge 7868                                      pclath 003FFA  
                                    tablat 003FF5                          i1cria_Arquivo@tam 010F  
                              _Aguarda_end 03D0                           __end_ofi1___wmul 89AE  
                           i1___ftdiv@cntr 0052                                _Aguarda_str 03AA  
                           i1___ftdiv@sign 0057                                      plusw1 003FE3  
                                    plusw2 003FDB                                      status 003FD8  
                     ??_Verifica_Analogica 01AF                        i1___wmul@multiplier 0012  
                               _Max_Saida1 00FC                                 _Max_Saida2 00F8  
                               _Max_Saida3 00F6                                 _Max_Saida4 00F4  
                               _Max_Saida5 00F2                            __end_of_sprintf 1D6A  
                               _Max_Saida6 00F0                                 _Max_Saida7 00EE  
                               _Max_Saida8 00EC                                 _Max_Saida9 00EA  
                         __end_ofi1_length 8432                         __size_ofi1___awdiv 0088  
                       __size_ofi1___ftadd 01D0                         __size_ofi1___awmod 0074  
                         __end_ofi1_fround 4DA6                         __size_ofi1___ftdiv 00FC  
                       __size_ofi1___ftneg 002A                         __size_ofi1___lldiv 008A  
                   __size_ofi1__tdiv_to_l_ 013E                         __size_ofi1___ftmul 010A  
                       __size_ofi1___llmod 006E                         __size_ofi1___ftsub 0054  
                       __size_ofi1___fttol 0104                             i1___ftpack@arg 0004  
                           i1___ftpack@exp 0007                               __end_of_WIND 81B2  
                               _Min_Saida1 02DB                            __initialization 6008  
                             __end_of_Post 7DFC                               __end_of_nada 8AF4  
                             __end_of_main 47BC                             i1_sprintf$2180 0097  
                           i1_sprintf$3044 0089                             i1_sprintf$2173 008D  
                           i1_sprintf$2174 008F                             i1_sprintf$2177 0091  
                           i1_sprintf$2178 0093                             i1_sprintf$2179 0095  
                              ?i1___ftpack 0004                             i1___ftmul@cntr 0040  
                       __size_ofi1_isdigit 0020                             __CFG_SAFEN$OFF 000000  
                           i1___ftmul@sign 0041                 ??_limpa_Buffer_Escrita_USB 0004  
                       i1___lldiv@quotient 000C                                ?i1___lltoft 0027  
                                   ??_WIND 0058                                 i1sprintf@c 00B3  
                               i1sprintf@f 006B                             i1___fttol@exp1 0026  
                                   ??_Post 0058                             i1___fttol@lval 0022  
              append_Arquivo_Json@valorMem 0278                                     ??_nada 0004  
                                   ??_main 01CB                              ___fttol@sign1 0122  
                           __CFG_PR1WAY$ON 000000                         __size_ofi1_sprintf 1CAC  
              append_Arquivo_Json@primeiro 027E                              __activetblptr 000003  
                           __CFG_MVECEN$ON 000000                       __size_of__tdiv_to_l_ 0140  
                             i1_scale$3043 0045                                     ?_Post2 0001  
               __size_of_Interrupt_USB_485 002A                       __end_of_cria_Arquivo 724C  
        i1Buffer_Escrita_USB_Add_Char@dado 0004            Buffer_Escrita_USB_Add_Char@dado 0105  
                                   _ADACQH 003EF4                                     _ADACQL 003EF3  
                           i1___lltoft@exp 002F                           __end_of___altoft 7A08  
                      __size_of_SETMACAddr 00A4                           ___llmod@dividend 0112  
                                   ?_scale 0143                                     STR_100 FF59  
                                   STR_103 FF0E                                     STR_104 FFAF  
                                   STR_105 FFC1                                     STR_106 FE64  
                                   _ADRESH 003EF0                                     STR_107 FF1D  
                                   STR_108 FF93                                     STR_109 FECC  
                                   _ADRESL 003EEF                                     _ADPREH 003EF7  
                                   _ADPREL 003EF6                            ?_InicializaWifi 0001  
                         ___awdiv@dividend 010B                        __end_of_Recebe_COMM 8AF0  
                         __end_of___awtoft 8752                           __end_of___ftpack 7476  
                                   _U1BRGH 003DF6                                     _U1BRGL 003DF5  
                    __size_of_Aguarda_dado 0064                                     _U2BRGH 003DDE  
                                   _U2BRGL 003DDD                                     _RB1PPS 003A09  
                                   _RC0PPS 003A10                           __end_of___lltoft 7FBA  
                                   i1l1000 1F7A                                     i1l1001 1F8A  
                                   i1l1010 200C                                     i1l1002 1F84  
                                   i1l1020 20CC                                     i1l1012 2074  
                                   i1l1101 2C66                                     i1l1021 3456  
                                   i1l1013 2032                                     i1l1005 1FE8  
                                   i1l1102 2D90                                     i1l1030 232C  
                                   i1l1022 215E                                     i1l1006 1FFE  
                                   i1l1103 2D44                                     i1l1031 2B7C  
                                   i1l1023 21B6                                     i1l1007 2006  
                                   i1l1200 3706                                     i1l1112 2EA2  
                                   i1l1040 24A0                                     i1l1016 20A0  
                                   i1l1041 2542                                     i1l1025 2260  
                                   i1l1017 208C                                     i1l1009 2020  
                                   i1l1202 36EA                                     i1l1122 3018  
                                   i1l1026 22E6                                     i1l1051 270C  
                                   i1l1043 25C8                                     i1l1019 20B4  
                                   i1l1140 30AC                                     i1l1108 2E26  
                                   i1l1052 2734                                     i1l1036 236C  
                                   i1l1028 2312                                     i1l1125 3032  
                                   i1l1109 2F12                                     i1l1045 25E8  
                                   i1l1037 237E                                     i1l1029 2326  
                                   i1l1222 3800                                     i1l1206 371A  
                                   i1l1150 3114                                     i1l1142 3100  
                                   i1l1134 3096                                     i1l1126 30A6  
                                   i1l1118 2FA0                                     i1l1070 27C8  
                                   i1l1046 2664                                     i1l1038 2384  
                                   i1l1135 307C                                     i1l1127 3062  
                                   i1l1055 274E                                     i1l1047 2618  
                                   i1l1224 39A0                                     i1l1216 37E8  
                                   i1l1208 376C                                     i1l1160 33F4  
                                   i1l1152 31FE                                     i1l1144 30E4  
                                   i1l1072 281C                                     i1l1064 27B2  
                                   i1l1056 27C2                                     i1l1161 32C2  
                                   i1l1153 31E4                                     i1l1129 3046  
                                   i1l1065 2798                                     i1l1057 277E  
                                   i1l1410 7AF4                                     i1l1226 397A  
                                   i1l1218 37CC                                     i1l1170 3486  
                                   i1l1082 2A5C                                     i1l1074 2800  
                                   i1l1411 7AFE                                     i1l1403 7AA6  
                                   i1l1227 3850                                     i1l1163 341A  
                                   i1l1155 3222                                     i1l1139 30C6  
                                   i1l1091 2ACE                                     i1l1083 2968  
                                   i1l1059 2762                                     _RC5PPS 003A15  
                                   i1l1412 7B0C                                     i1l1404 7AB6  
                                   i1l1420 7E2A                                     i1l1228 398A  
                                   i1l1164 3400                                     i1l1156 3228  
                                   i1l1084 2988                                     i1l1229 38EC  
                                   i1l1157 3252                                     i1l1149 31DA  
                                   i1l1069 27E2                                     i1l1502 57E8  
                                   i1l1406 7AD4                                     i1l1190 3634  
                                   i1l1182 35D4                                     i1l1174 34F6  
                                   i1l1086 2A82                                     i1l1078 2834  
                                   i1l1407 7ACC                                     i1l1423 7E4A  
                                   i1l1183 3582                                     i1l1175 3526  
                                   i1l1087 2A68                                     i1l1512 5846  
                                   i1l1424 7E54                                     i1l1416 7E10  
                                   i1l1192 3656                                     i1l1096 2DD4  
                                   i1l1521 5886                                     i1l1513 583C  
                                   i1l1441 635E                                     i1l1425 7E62  
                                   i1l1417 7E1C                                     i1l1193 365E  
                                   i1l1177 35C4                                     i1l1169 34CA  
                                   i1l1097 2B98                                     i1l1089 2A9E  
                                   i1l1522 587C                                     i1l1442 634E  
                                   i1l1178 3540                                     i1l1531 6B02  
                                   i1l1507 5850                                     i1l1435 6290  
                                   i1l1419 7E32                                     i1l1195 36A2  
                                   i1l1187 35F2                                     i1l1524 58AA  
                                   i1l1196 36AA                                     i1l1533 6B2C  
                                   i1l1525 58C6                                     i1l1437 62AE  
                                   i1l1541 5F26                                     i1l1197 36CE  
                                   i1l1189 3612                                     i1l1470 74D2  
                                   i1l1534 6B6C                                     i1l1526 58F6  
                                   i1l1630 7A78                                     i1l1438 62F0  
                                   i1l1542 5F60                                     i1l1198 36D6  
                                   i1l1471 74BC                                     i1l1535 6B92  
                                   i1l1447 6382                                     i1l1439 6320  
                                   i1l1551 5FE8                                     i1l1543 5F88  
                                   i1l1199 3790                          i1___llmod@divisor 0015  
                                   i1l1640 7F34                                     i1l1448 6376  
                                   i1l1552 5FDC                                     i1l1473 74FA  
                                   i1l1625 7A36                                     i1l1545 5FC4  
                                   i1l1474 74F0                                     i1l1626 7A2A  
                                   i1l1546 5FB4                                     i1l1570 6680  
                                   i1l1467 749E                                     i1l1635 7EFE  
                                   i1l1539 5EF8                                     i1l1563 65EA  
                                   i1l1468 7494                                     i1l1556 7802  
                                   i1l1580 84F2                                     i1l1636 7EF2  
                                   i1l1557 7838                                     i1l1629 7A6A  
                                   i1l1565 6614                                     i1l1574 8A1C  
                                   i1l1646 7FCC                                     i1l1566 6648  
                                   i1l1639 7F26                                     i1l1647 7FC0  
                                   i1l1567 6658                                     i1l1592 69A4  
                                   i1l1584 6904                                     i1l1593 6998  
                                   i1l1569 6670                                     i1l1498 57B8  
                                   i1l1586 6980                                     i1l1595 69C0  
                                   i1l1587 6970                                     i1l1599 8A6A  
                         _Calcula_BaudRate 7308                             __CFG_WDTCCS$SC 000000  
                                   _U1RXIF 01CD1B                                     _U2RXIF 01CD32  
                                ??i1_scale 0045                                  ??_Aguarda 000E  
                        i1___llmod@counter 0019                        _TransmiteBuffer_USB 82CA  
                              ?_AguardaINT 0001                              i1sprintf@flag 00B4  
          Buffer_Leitura_USB_Add_Char@dado 0001                              i1sprintf@fval 00AE  
                            ?_recebeFRAMES 0001                              i1sprintf@prec 00B1  
                            i1sprintf@temp 0099                          __end_of_TASK_POST 8816  
                            ?_recebeNODEID 0001                          __end_of_SOCKET_RX 7C1A  
                                   _LowCRC 00E5                                     _Recebe 8AE4  
             __end_of_TransmiteBuffer_COMM 82CA                             __CFG_XINST$OFF 000000  
                         __end_of__powers_ FB28            __size_ofi1_TransmiteBuffer_COMM 005A  
                                   ___ftge 772C                                  ??___aldiv 010D  
                                   ___wmul 8950                                  ??___awdiv 010F  
                                ??___ftadd 0153                             __CFG_STVREN$ON 000000  
                                ??___awmod 0109                                  ??___ftdiv 0150  
                   __size_of_recebeADDRESS 004E                                  ??___ftneg 0134  
                                ??___lldiv 010D                                  ??___ftmul 013A  
                                ??___llmod 011A                                  ??___ftsub 015F  
                                ??___fttol 011D                           __end_of_lock_PPS 8AA4  
                                   _length 8212                                     _nodeId 0400  
                                   _recebe 85D2                                     _fround 47BC  
                                   _offset 02CC                    __end_of_Calcula_Fator_m 7308  
                                   clear_0 6098                                     clear_1 60AA  
                                   clear_2 60B6                                     clear_3 60C2  
                                   clear_4 60CE                                     clear_5 60DA  
                                   clear_6 60E6                                     clear_7 60F2  
                                   clear_8 60FE                                     clear_9 610A  
                         ___awdiv@quotient 0111                            ___awmod@divisor 0107  
                      i1Aguarda_dado@error 00BA                       ?_TransmiteBuffer_USB 0105  
                                   _result 0478                            ___awmod@counter 0109  
                   __size_of_recebeFRAMEID 007A      __end_of_Buffer_Escrita_USB_Add_String 7008  
   __size_of_Buffer_Escrita_USB_Add_String 00CE              _Buffer_Escrita_USB_Add_String 6F3A  
                                   main@i2 03DA                              i1__tdiv_to_l_ 5ECA  
                    ___ftmul@f3_as_product 013E                          __end_ofi1___awdiv 7B1A  
                        __end_ofi1___ftadd 592C                          __end_ofi1___awmod 7E70  
                        __end_ofi1___ftdiv 6BD4                          __end_ofi1___ftneg 8A30  
                        __end_ofi1___lldiv 7A92                          __end_ofi1___ftmul 66CA  
                        __end_ofi1___llmod 7F4E                          __end_ofi1___ftsub 852E  
                        __end_ofi1___fttol 69DA                         i1cria_Arquivo@dado 00B8  
                                ??_isdigit 0105                               _Aguarda_dado 808C  
                      _append_Arquivo_Json 5088                         i1cria_Arquivo@nome 00B6  
                   __size_ofi1_inicia_Post 007C                               __mediumconst FAD8  
                         verificaERRO@ERRO 0005                                     tblptrh 003FF7  
                                   tblptrl 003FF6                                     tblptru 003FF8  
                             ??_GETMACAddr 0058                       verificaFimFrame@dado 0008  
                         verificaERRO@dado 000B                           recebeFRAMES@exit 0058  
                              _Max_Entrada 00CF                                _Max_Saida10 02FC  
                                ??_sprintf 017C                          __end_ofi1_isdigit 8A74  
                      __size_ofi1___ftpack 00B4                        __size_ofi1___lltoft 006A  
                               __accesstop 0060                    __end_of__initialization 613A  
                               ___altoft@c 0143                             ??_recebeFRAMES 0058  
                               ___ftadd@f1 014D                                 ___ftadd@f2 0150  
                          __CFG_FEXTOSC$HS 000000                                 ___ftge@ff1 0159  
                               ___ftge@ff2 015C        __end_of_Buffer_Escrita_USB_Add_Char 88BA  
              _Buffer_Escrita_USB_Add_Char 8886                            i1___ftpack@sign 0008  
                           ??_recebeNODEID 0058                          __end_ofi1_sprintf 3A16  
                            ___rparam_used 000001                       _Aguarda_End_Ponteiro 00E1  
                 __size_of_Converte_Escala 015A                                 ___ftdiv@f1 014A  
                               ___ftdiv@f2 014D                                 ___ftdiv@f3 0154  
 __end_ofi1_Buffer_Escrita_COMM_Add_String 7190  __size_ofi1_Buffer_Escrita_COMM_Add_String 00C4  
       ??i1_Buffer_Escrita_COMM_Add_String 000A          ?i1_Buffer_Escrita_COMM_Add_String 0006  
         ??_Buffer_Escrita_COMM_Add_String 010B            ?_Buffer_Escrita_COMM_Add_String 0107  
         i1_Buffer_Escrita_COMM_Add_String 70CC                       ?_append_Arquivo_Json 0001  
                               ___ftneg@f1 0131                                 ___awtoft@c 010D  
                              _Min_Entrada 02D7                                 ___ftmul@f1 0134  
                               ___ftmul@f2 0137                   _append_Arquivo_Json$2788 027C  
                     __size_of_inicia_Post 0080                                 ___ftsub@f1 0159  
                               ___ftsub@f2 015C                                 ___fttol@f1 0119  
                           __pcstackCOMRAM 0001                              __end_of_Post2 8852  
                           AguardaINT@dado 00C6                               __pidataBANK0 8AA4  
                             __pidataBANK1 8ABA                               __pidataBANK2 8ADA  
                             __pidataBANK3 8ACC                                 ___lltoft@c 0128  
                       __end_of_GETMACAddr 808C                             ivt0x8_undefint 00AC  
                            __end_of_scale 3F26                    __size_ofi1_cria_Arquivo 00B0  
                    ??_TransmiteBuffer_USB 0107                ??_limpa_Buffer_Escrita_COMM 0004  
                           ?i1__tdiv_to_l_ 0004                                  ?i1___ftge 0060  
                       _recebeFUNCTIONCODE 8670                                  ?i1___wmul 0012  
                               __div_to_l_ 6140                        __size_of_AguardaINT 0104  
                              _Recebe_COMM 8AEA                                  ?i1_length 0004  
                 __size_of_Abre_Porta_COMM 00AE                                  ?i1_fround 0042  
                              i1sprintf@ap 00A0                                i1sprintf@cp 009C  
                   i1_TransmiteBuffer_COMM 8380                                i1sprintf@sp 0069  
                        _Aguarda_end_frame 0396                                    ??_Post2 0058  
                          i1___fttol@sign1 0021                             i1_Aguarda_dado 80F0  
                      ?_recebeFUNCTIONCODE 0001                            _recebeNETWORKID 6BD4  
                        i1Aguarda_dado@fim 00B8          i1append_Arquivo_Json@linhaArquivo 0111  
          append_Arquivo_Json@linhaArquivo 0200                            __div_to_l_@exp1 0110  
                          __div_to_l_@cntr 010F                              _recebeADDRESS 8622  
           __size_ofi1_TransmiteBuffer_USB 005A                                    ??_scale 0146  
            __end_ofi1_TransmiteBuffer_USB 8380                            __div_to_l_@quot 010B  
             append_Arquivo_Json@resultado 028E                            __CFG_IVT1WAY$ON 000000  
                             sprintf@width 01A1                                SETMACAddr@i 000E  
                               __pbssBANK0 00C8                                 __pbssBANK1 01DF  
                               __pbssBANK2 0294                                 __pbssBANK3 0300  
                               __pbssBANK4 0400                                 __pbssBANK5 0500  
                               __pbssBANK6 0600                                 __pbssBANK7 0700  
                               __pbssBANK8 0800                                 __pbssBANK9 0900  
               i1_append_Arquivo_Json$3040 019F                              _recebeFRAMEID 7C96  
                     _ponteiro_escrita_USB 01E5                       Calcula_BaudRate@baud 0117  
                      Abre_Porta_COMM@baud 011F                      ??_append_Arquivo_Json 01C5  
                            __div_to_l_@f1 0105                              __div_to_l_@f2 0108  
                                  IVTBASEH 003FD6                                    IVTBASEL 003FD5  
                                  IVTBASEU 003FD7                              i1_inicia_Post 7C1A  
   i1Buffer_Escrita_USB_Add_String@aguarda 0008       Buffer_Escrita_USB_Add_String@aguarda 0109  
                                  ?_Recebe 0001                __size_of_Interrupt_WIFI_GSM 005E  
                     ??_recebeFUNCTIONCODE 0058                               ??_SETMACAddr 000E  
                                  ?___ftge 0159           __end_of_limpa_Buffer_Escrita_USB 8796  
                                  ?___wmul 0113                            __CFG_PPS1WAY$ON 000000  
                                  ?_length 0105                                  ?___altoft 0143  
                                  ?_recebe 0001                                    ?_fround 0143  
           Buffer_Escrita_USB_Add_String@i 010D             __size_ofi1_append_Arquivo_Json 0280  
                                ?___awtoft 010D                                  ?___ftpack 0105  
                         ?_Calcula_Fator_m 0001              __end_ofi1_append_Arquivo_Json 558A  
                               ??i1___ftge 0066                                  ?___lltoft 0128  
                    __size_of_cria_Arquivo 00BC                                 ??i1___wmul 0016  
                    Interrupt_USB_485@lido 0003                              i1_fround$3041 0048  
                            i1_fround$3042 0045                             Aguarda_dado@ff 01B5  
                             i1length@dado 0004                                    u1410_21 5EDC  
                       i1___llmod@dividend 0011                                    u1412_21 5F0A  
                                  u1405_21 6AEA                                    u1407_21 6B14  
                                  u1424_21 68E8                                    u1353_21 576E  
                                  u1354_21 5784                                    i1l12006 3586  
                       i1___awdiv@dividend 000A                                    i1l12114 37FC  
                                  i1l12132 397A                                    i1l12052 36AA  
                                  i1l12142 39C0                                    i1l12136 399C  
                                  u1374_21 65D2                                    i1l10476 7864  
                                  i1l12084 376C                                    i1l11480 2032  
                                  i1l11802 2E76                                    i1l11490 208C  
                                  i1l11474 200C                                    i1l11644 2792  
                                  i1l11822 2FA4                                    i1l11646 2798  
                                  i1l11656 27C8                                    u1376_21 65FC  
                                  i1l11906 31E4                                    i1l11762 2BCC  
                                  i1l11748 2B56                                    i1l11676 2830  
                                  i1l11862 3076                        cria_Arquivo@tamanho 01B6  
                                  i1l11864 307C                                    i1l11954 3432  
                                  i1l11874 30AC                                    i1l11794 2E26  
                                  i1l11992 3544                        __CFG_PWRTS$PWRT_OFF 000000  
                   __end_ofi1_Aguarda_dado 8152                                    _MEMORIA 0294  
                               ??i1_length 0006                                    _U1RXPPS 003AE5  
                               ??i1_fround 0045                                    _U2RXPPS 003AE8  
  __end_ofi1_Buffer_Escrita_USB_Add_String 70CC   __size_ofi1_Buffer_Escrita_USB_Add_String 00C4  
        ??i1_Buffer_Escrita_USB_Add_String 000A           ?i1_Buffer_Escrita_USB_Add_String 0006  
           ?_Buffer_Escrita_USB_Add_String 0107            i1_Buffer_Escrita_USB_Add_String 7008  
                     _TransmiteBuffer_COMM 826E                             ?_recebeADDRESS 0001  
                         recebeNETWORKID@i 00C0                                    _PPSLOCK 003ABF  
                       __end_of_SETMACAddr 772C                             ?_recebeFRAMEID 0001  
                _limpa_Buffer_Escrita_COMM 8796                                    i1_scale 3F26  
                                _ADCLKbits 003EFF        __end_of_Buffer_Leitura_USB_Add_Char 8AF2  
              _Buffer_Leitura_USB_Add_Char 8AF0                                    _Aguarda 63A2  
                           i1sprintf@width 00A8                                    _HighCRC 005C  
                __size_of_verificaFimFrame 0052                                  ?_lock_PPS 0001  
                           ?i1_inicia_Post 0001                                  _ADREFbits 003EFD  
                             i1fround@prec 004B                          __end_of__npowers_ FB4F  
                                  __Hparam 0000                                 _scale$2794 0146  
                                  __Lparam 0000                         i1___awdiv@quotient 0010  
                          __size_of_Recebe 0006                               _cria_Arquivo 7190  
                                  ___aldiv 6D96                            __size_of___ftge 009E  
                             ??i1___ftpack 0009                                    ___awdiv 78F4  
                                  ___ftadd 558A                                    ___awmod 7D10  
                                  ___ftdiv 69DA                                    ___ftneg 89AE  
                                  ___lldiv 7868                            __size_of___wmul 0030  
                                  ___ftmul 64B4                                    ___llmod 7E70  
                                  ___ftsub 8432                                    ___fttol 66CA  
                             ??i1___lltoft 002B                          ??_Converte_Escala 0159  
                   i1append_Arquivo_Json@i 01A3                            ??i1__tdiv_to_l_ 000A  
                    __end_of_ajusta_escala 5088                                    _address 04B4  
                               ??___altoft 0147                   __end_of_Calcula_BaudRate 73C0  
                                  __pcinit 6008                            __size_of_length 005C  
                               ??___awtoft 0110                                 ??___ftpack 010A  
                          __size_of_recebe 0050                            __size_of_fround 0304  
                                  __ramtop 1000                                 _recebeSIZE 8486  
                               ??___lltoft 012C                                    __ptext0 4406  
                                  __ptext1 7B1A                                    __ptext2 5088  
                                  __ptext3 7190                                    __ptext4 8212  
                                  __ptext5 6E6C                                    __ptext6 826E  
                                  __ptext7 8852                                    __ptext8 808C  
                                  __ptext9 5AB0                    __end_of_recebeNETWORKID 6CBC  
                                  _frameId 0A96                            __CFG_WRTAPP$OFF 000000  
                     __end_of_recebeFRAMES 5AB0                          __end_of_hexpowers FB6F  
                              ?__div_to_l_ 0105                                    _dpowers FAD9  
                         ??_InicializaWifi 0105                       __end_of_recebeNODEID 870C  
                limpa_Buffer_Escrita_USB@i 0004                                    _isdigit 8A30  
                          ?i1_Aguarda_dado 00B6                                    clear_10 6116  
                                  clear_11 6122                           ___awmod@dividend 0105  
                         ___aldiv@dividend 0105                       i1Aguarda_dado@inicio 00B6  
                          __CFG_WRTSAF$OFF 000000                                    _samples 0500  
                    ?_TransmiteBuffer_COMM 0105                 limpa_Buffer_Escrita_COMM@i 0004  
                                  _sprintf 00B2                       end_of_initialization 613A  
                        ??_Abre_Porta_COMM 011F                              _AguardaFrames 02F3  
                               _unLock_PPS 8A74                                    length@i 0109  
                       __end_ofi1___ftpack 752A                                 ??_lock_PPS 0105  
                       __end_ofi1___lltoft 8024                                  i1u1404_20 6388  
                             ??_AguardaINT 00C4                                  i1u1334_20 7486  
                                i1u1430_20 69AA                                  i1u1350_20 7E36  
                                i1u1182_21 858C                                  i1u1511_20 21F6  
                                i1u1503_20 2068                                  i1u1511_25 21EC  
                                i1u1503_27 205A                                  i1u1360_20 57D4  
                                i1u1344_20 7AD8                                  i1u1338_20 7504  
                                i1u1370_20 588E                                  i1u1426_20 6928  
                                i1u1418_20 5FEE                                  i1u1522_20 2378  
                                i1u1186_20 8568                                  i1u1426_25 6920  
                                i1u1363_20 5818                                  i1u1435_20 7A3A  
                                i1u1531_20 26AA                                  i1u1515_20 2320  
                                i1u1357_20 57A4                                  i1u1438_20 7F02  
                                i1u1542_20 27F0                                  i1u1534_20 272E  
                                i1u1518_20 2346                                  i1u1390_20 890E  
                                i1u1367_20 5858                                  i1u1551_20 2A8A  
                                i1u1519_20 235C                                  i1u1631_21 3828  
                                i1u1616_20 3698                                  i1u1561_20 2C0A  
                                i1u1529_20 25E0                                  i1u1481_20 7134  
                     Abre_Porta_1@BaudRate 011D                                  i1u1481_27 7126  
                                i1u1634_20 39C0                                  i1u1626_20 379A  
                                i1u1562_20 2C26                                  i1u1482_20 7172  
                                i1u1482_27 7164                                  i1u1635_20 39E2  
                                i1u1627_20 37BC                                  i1u1555_20 2B56  
                                i1u1547_20 2946                __size_of_Verifica_Analogica 0180  
                                i1u1636_20 3A04                                  i1u1492_20 1E9C  
                                i1u1484_20 7180                                  i1u1573_20 2FE2  
                                i1u1565_20 2DE6                                  i1u1566_20 2E38  
                                i1u1486_20 841E                                  i1u1486_27 8410  
                                i1u1591_20 323E                                  i1u1583_20 30D4  
                                i1u1575_20 3012                                  i1u1496_20 1FC0  
                                i1u1496_27 1FB2                                  i1u1569_20 2E76  
                                i1u1497_20 1FC6                                  i1u1595_20 3432  
                                i1u1588_20 320C                                  i1u1692_20 8940  
                                i1u1852_20 7070                                  _SELECIONA 02CF  
                                i1u1852_27 7062                                  i1u1589_20 321C  
                                i1u1853_20 70AE                                  i1u1853_27 70A0  
                                i1u1855_20 70BC                                  i1u1863_20 7CA6  
                                i1u1926_28 68C2                                  i1u1864_20 6BEE  
                                i1u1961_27 8042                                  i1u1962_27 7C48  
                                i1u1963_27 753A                              _Aguarda_error 03A0  
                          ___lldiv@divisor 0109                            ___lldiv@counter 0111  
                         ___aldiv@quotient 010F                                  _TASK_POST 87DA  
                                  postdec1 003FE5                                    postdec2 003FDD  
                                  postinc0 003FEE                                    postinc2 003FDE  
                          i1__div_to_l_@f1 0004                            i1__div_to_l_@f2 0007  
                                _SOCKET_RX 7B9A                             i1_cria_Arquivo 752A  
                           __tdiv_to_l_@f1 0105                             __tdiv_to_l_@f2 0108  
                             _Max_Entrada1 01DD                               _Max_Entrada2 01DB  
                             _Max_Entrada3 01D9                               _Max_Entrada4 01D7  
                             _Max_Entrada5 01D5                               _Max_Entrada6 01D3  
                             _Max_Entrada7 01D1                               _Max_Entrada8 01CF  
                             _Max_Entrada9 01CD                      i1___wmul@multiplicand 0014  
                    __CFG_WDTCPS$WDTCPS_31 000000                       append_Arquivo_Json@i 0282  
                            ??__tdiv_to_l_ 010B                                  _PORTAbits 003FCA  
                                _PORTBbits 003FCB                                  _PORTEbits 003FCE  
                          ??_recebeADDRESS 0058                         __end_of_AguardaINT 68D6  
                                _TRISAbits 003FC2                                  _TRISBbits 003FC3  
                                _TRISCbits 003FC4                                  _TRISDbits 003FC5  
                                _TRISEbits 003FC6                                  _TRISFbits 003FC7  
                                i1___awdiv 7A92                              ?_verificaERRO 0001  
                                i1___ftadd 575C                                  i1___awmod 7DFC  
                                i1___ftdiv 6AD8                                  i1___ftneg 8A06  
                                i1___lldiv 7A08                                  i1___ftmul 65C0  
                                i1___llmod 7EE0                                  i1___ftsub 84DA  
                                i1___fttol 68D6                            ??_recebeFRAMEID 00BE  
        __size_of_limpa_Buffer_Escrita_USB 0044                  ?_limpa_Buffer_Escrita_USB 0001  
                          ??i1_inicia_Post 00BE                                ___ftdiv@exp 0157  
                          cria_Arquivo@tam 01B4                                  i1_isdigit 8A54  
                               main@motivo 03DE                        __size_of__div_to_l_ 0132  
                             _Min_Entrada1 00FA                                ___ftmul@exp 013D  
                   __end_ofi1_cria_Arquivo 75DA                                  i1_sprintf 1D6A  
                           __end_of_Recebe 8AEA                                 ?_TASK_POST 0001  
                               ?_SOCKET_RX 0001              i1append_Arquivo_Json@valorMem 0199  
                           __end_of___ftge 77CA                                  i1length@i 0008  
            i1append_Arquivo_Json@primeiro 01A1                             __end_of___wmul 8980  
                              ?_recebeSIZE 0001         i1Buffer_Escrita_COMM_Add_Char@dado 0004  
         Buffer_Escrita_COMM_Add_Char@dado 0105       __size_of_Buffer_Escrita_USB_Add_Char 0034  
                           __end_of_length 826E                    ?i1_TransmiteBuffer_COMM 0004  
                           __end_of_recebe 8622                             __end_of_fround 4AC0  
                         ?_recebeNETWORKID 0001                               ?_Recebe_COMM 0001  
                   ??_TransmiteBuffer_COMM 0107                                  _Max_Saida 00D1  
                        __size_ofi1___ftge 009E                        start_initialization 6008  
                        __size_ofi1___wmul 002E                             ??_verificaERRO 0004  
                                _Min_Saida 02D9                        __end_of__tdiv_to_l_ 5ECA  
                               ?i1___awdiv 000A                                 ?i1___ftadd 004C  
                               ?i1___awmod 0004                                 ?i1___ftdiv 0049  
                        __size_ofi1_length 0058                                 ?i1___ftneg 0030  
                               ?i1___lldiv 0004                                 ?i1___ftmul 0033  
                               ?i1___llmod 0011                                 ?i1___ftsub 0060  
                               ?i1___fttol 0018                          __size_ofi1_fround 02E6  
                               ivt0x8_base 0008                                ?_unLock_PPS 0001  
               append_Arquivo_Json@virgula 0280                           _verificaFimFrame 852E  
                               length@dado 0105                            ___llmod@divisor 0116  
                            ??_inicia_Post 01C9                                 ?i1_isdigit 0001  
                                _Registros 0364                            ___llmod@counter 011A  
                            ?i1__div_to_l_ 0004                               i1sprintf@idx 008C  
                             i1sprintf@len 009E                               i1sprintf@exp 00A6  
                             i1sprintf@val 00AA                                   ??_Recebe 0001  
                         __CFG_LPBOREN$OFF 000000                __end_of_TransmiteBuffer_USB 8326  
       __size_of_limpa_Buffer_Escrita_COMM 0044                            ?i1_cria_Arquivo 00B6  
                               ?i1_sprintf 0069                                   ??___ftge 015F  
                                 ??___wmul 0117                      __size_of_recebeFRAMES 0184  
                              __pdataBANK0 00E8                                __pdataBANK1 01CD  
                              __pdataBANK2 02F5                                __pdataBANK3 03F2  
                       i1___awmod@dividend 0004                      __size_of_recebeNODEID 004E  
                                 ??_length 0107                           _Aguarda_Resposta 0300  
           __end_ofi1_TransmiteBuffer_COMM 83DA                                   ??_recebe 0058  
                      verificaFimFrame@FIM 0005                                   ??_fround 0146  
                         _Aguarda_Ponteiro 00E3                              _sample_result 00C8  
                            ?_Abre_Porta_1 011B                              sprintf@tmpval 019B  
   __end_ofi1_Buffer_Escrita_COMM_Add_Char 891E    __size_ofi1_Buffer_Escrita_COMM_Add_Char 0032  
           i1_Buffer_Escrita_COMM_Add_Char 88EC                          __size_of___altoft 008A  
                              __pbssBANK10 0A00                                 fround@prec 014C  
                        __size_of___awtoft 0046                          __size_of___ftpack 00B6  
                              __pbssBIGRAM 0A96                     Interrupt_WIFI_GSM@lido 00C7  
                        __size_of___lltoft 006C                                __pbssCOMRAM 005A  
                            __pcstackBANK0 0060                              __pcstackBANK1 0100  
                            __pcstackBANK2 0200                              __pcstackBANK3 03DA  
                    _ponteiro_escrita_COMM 01E7                       _endereco_dispositivo 02E1  
                             _isdigit$2408 0106                __end_of_append_Arquivo_Json 530A  
         i1Buffer_Escrita_USB_Add_String@i 000C      __end_ofi1_Buffer_Escrita_USB_Add_Char 8950  
   __size_ofi1_Buffer_Escrita_USB_Add_Char 0032              i1_Buffer_Escrita_USB_Add_Char 891E  
                                 ?i1_scale 0042                                   ?_Aguarda 000C  
                    i1_TransmiteBuffer_USB 8326                           i1Aguarda_dado@ff 00BC  
                              sprintf@flag 01AD                                sprintf@fval 01A7  
                              sprintf@prec 01AA                            _Converte_Escala 5C30  
                              sprintf@temp 0192                             ??i1__div_to_l_ 000A  
                      __size_of_recebeSIZE 0054                 __end_of_Interrupt_WIFI_GSM 8212  
                                __pnvBANK2 02FE                               _recebeFRAMES 592C  
                      _buffer_escrita_comm 0600            ??_Buffer_Escrita_USB_Add_String 010B  
                        __size_of_lock_PPS 0018                               _recebeNODEID 86BE  
              __size_of_recebeFUNCTIONCODE 004E                                ??_TASK_POST 0058  
                            __pmediumconst FAD8                                   ?___aldiv 0105  
                                 ?___awdiv 010B                                  __ptext100 77CA  
                                __ptext101 6AD8                                  __ptext102 7476  
                      __end_of_inicia_Post 7B9A                                  __ptext103 0000  
                                 ?___ftadd 014D                                ??_SOCKET_RX 0058  
                                 ?___awmod 0105                                   ?___ftdiv 014A  
                                 ?___ftneg 0131                                   ?___lldiv 0105  
                                 ?___ftmul 0134                                   ?___llmod 0112  
                                 ?___ftsub 0159                                  __npowers_ FB28  
                                 ?___fttol 0119          __end_of_limpa_Buffer_Escrita_COMM 87DA  
     __size_of_Buffer_Leitura_USB_Add_Char 0002             i1append_Arquivo_Json@resultado 0189  
                         ??i1_Aguarda_dado 0058                          i1___awdiv@divisor 000C  
                               SOCKET_RX@i 0058                             ??_Abre_Porta_1 0121  
                        i1___awdiv@counter 000E                               _functionCode 05A0  
                      __size_of_unLock_PPS 0018                          ?_Calcula_BaudRate 0113  
                              __tdiv_to_l_ 5D8A                                  _contaLoop 02C8  
                          _Abre_Porta_COMM 75DA                               ??__div_to_l_ 010B  
                   __CFG_BBSIZE$BBSIZE_512 000000                         ??_Calcula_BaudRate 0117  
                    i1_append_Arquivo_Json 530A                                   ?_isdigit 0001  
                       Aguarda_dado@inicio 01AF                             __size_of_Post2 003C  
                              ??i1___awdiv 000E                                ??i1___ftadd 0052  
                 __size_of_Calcula_Fator_m 00BC                                ??i1___awmod 0008  
                              ??i1___ftdiv 004F                                  _hexpowers FB4F  
                              ??i1___ftneg 0033                                ??i1___lldiv 000C  
                              ??i1___ftmul 0039                                ??i1___llmod 0019  
                              ??i1___ftsub 0058                                ??i1___fttol 001C  
                                 ?_sprintf 0162                        _resultado_polinomio 02D3  
                           __size_of_scale 0510                                  _tamFrames 02E9  
                              _U1ERRIRbits 003DF9                            Aguarda_dado@fim 01B1  
                           i1_isdigit$2408 0005                            ___aldiv@divisor 0109  
                              _U2ERRIRbits 003DE1                            ___aldiv@counter 010D  
                           ___wmul@product 0117                                   _LATAbits 003FBA  
                                 _LATDbits 003FBD                                   _LATEbits 003FBE  
                                 _LATFbits 003FBF                                ??i1_isdigit 0004  
                          _ponteiro_analog 02D5                                   _PIE3bits 003993  
                                _networkId 043C                                   _PIE6bits 003996  
                      __CFG_BORV$VBOR_2P45 000000                         __end_of__div_to_l_ 6272  
                              ??i1_sprintf 0083                       __end_of_verificaERRO 85D2  
                      _buffer_leitura_comm 0900                                  _strBuffer 00E6  
                    __end_ofi1__tdiv_to_l_ 6008                                   i1___ftge 77CA  
                               _ADCON0bits 003EF8                          ___wmul@multiplier 0113  
                                 i1___wmul 8980                              _Ponteiro_ERRO 00DD  
                            ?_Aguarda_dado 01AF                                   i1_length 83DA  
                                 i1_fround 4AC0                            i1sprintf@tmpval 00A2  
                     __size_of_Recebe_COMM 0006                    __end_of_Converte_Escala 5D8A  
                         i1__tdiv_to_l_@f1 0004                           i1__tdiv_to_l_@f2 0007  
                              _INTCON0bits 003FD2                                  copy_data0 601C  
                                copy_data1 603E                                  copy_data2 6060  
                                copy_data3 6082               i1append_Arquivo_Json@virgula 019D  
                   ?i1_TransmiteBuffer_USB 0004    i1Buffer_Escrita_COMM_Add_String@aguarda 0008  
    Buffer_Escrita_COMM_Add_String@aguarda 0109                 __end_of_Verifica_Analogica 5C30  
                   __size_of_ajusta_escala 02E2                           __size_ofi1_scale 04E0  
                              Aguarda@dado 0010                           __size_of_Aguarda 0112  
                              _inicia_Post 7B1A             ?i1_Buffer_Escrita_USB_Add_Char 0001  
             ?_Buffer_Escrita_USB_Add_Char 0001                                   __Hrparam 0000  
                  __CFG_RSTOSC$EXTOSC_4PLL 000000                                   __Lrparam 0000  
                       __CFG_BOREN$SBORDIS 000000                          _TimeOut_Threshold 02DD  
                        Abre_Porta_1@PORTA 011B                    __end_of_Abre_Porta_COMM 7688  
                                 _Postando 02FE                          i1___awmod@divisor 0006  
                        i1___awmod@counter 0008                           __size_of___aldiv 00D6  
                         __size_of___awdiv 008A                              _breakpoint_sw 02EB  
                         __size_of___ftadd 01D2                           __size_of___awmod 0076  
                         __size_of___ftdiv 00FE                           __size_of___ftneg 002C  
                         __size_of___lldiv 008C                                   ___altoft 797E  
                         __size_of___ftmul 010C                           __size_of___llmod 0070  
                         __size_of___ftsub 0054                           __size_of___fttol 0108  
                             ??_recebeSIZE 0058                                   ___awtoft 870C  
                                 ___ftpack 73C0                   __end_of_verificaFimFrame 8580  
                              _fround$2792 0149                                _fround$2793 0146  
                                 ___lltoft 7F4E                     ?i1_append_Arquivo_Json 0001  
                               _ANSELAbits 003A40                             ??_Aguarda_dado 01B7  
                               _ANSELBbits 003A50                                 _ANSELCbits 003A60  
                               _ANSELDbits 003A70                                 _ANSELEbits 003A80  
                    i1cria_Arquivo@tamanho 0100                       __end_ofi1__div_to_l_ 63A2  
                               sprintf@idx 0185                                 sprintf@len 0197  
                               sprintf@exp 019F                                 sprintf@val 01A3  
                       _buffer_escrita_USB 0700                           __size_of_isdigit 0024  
                                 __pivt0x8 0008                                 _GETMACAddr 8024  
                               _BORCONbits 0039D0                      __end_of_recebeADDRESS 8670  
                                 __ptext10 00B2                                   __ptext11 3A16  
                                 __ptext20 7E70                                   __ptext12 8A30  
                                 __ptext21 7868                                   __ptext13 47BC  
                                 __ptext30 64B4                                   __ptext22 8432  
                                 __ptext14 8950                                   __ptext31 558A  
                                 __ptext23 89AE                                   __ptext15 7D10  
                                 __ptext40 6CBC                                   __ptext32 870C  
                                 __ptext24 772C                                   __ptext16 78F4  
                                 __ptext41 8A74                                   __ptext33 797E  
                                 __ptext25 4DA6                                   __ptext17 5D8A  
                                 __ptext50 8AEA                                   __ptext42 8A8C  
                                 __ptext34 73C0                                   __ptext26 724C  
                                 __ptext18 6140                                   __ptext51 67D2  
                                 __ptext43 7308                                   __ptext35 6F3A  
                                 __ptext27 69DA                                   __ptext19 7F4E  
                                 __ptext60 6BD4                                   __ptext52 87DA  
                                 __ptext44 6D96                                   __ptext36 82CA  
                                 __ptext28 5C30                                   __ptext61 7C96  
                                 __ptext53 7688                                   __ptext45 89DC  
                                 __ptext37 8886                                   __ptext29 66CA  
                                 __ptext70 8580                                   __ptext62 85D2  
                                 __ptext54 7B9A                                   __ptext46 88EC  
                                 __ptext38 88BA                                   __ptext71 7C1A  
                                 __ptext63 8816                                   __ptext55 8152  
                                 __ptext47 8AE4                                   __ptext39 75DA  
                                 __ptext80 70CC                                   __ptext72 530A  
                                 __ptext64 8AF2                                   __ptext56 8486  
                                 __ptext48 8AF0                                   __ptext81 8380  
                                 __ptext73 752A                                   __ptext65 7D86  
                                 __ptext57 8622                                   __ptext49 81B4  
                                 __ptext90 7A92                                   __ptext82 80F0  
                                 __ptext74 83DA                                   __ptext66 8024  
                                 __ptext58 8670                                   __ptext91 5ECA  
                                 __ptext83 1D6A                                   __ptext75 8752  
                                 __ptext67 592C                                   __ptext59 86BE  
                                 __ptext92 6272                                   __ptext84 3F26  
                                 __ptext76 8796                                   __ptext68 63A2  
                                 __ptext93 7FBA                                   __ptext85 8A54  
                                 __ptext77 7008                                   __ptext69 852E  
                                 __ptext94 7EE0                                   __ptext86 4AC0  
                                 __ptext78 8326                                   __ptext95 7A08  
                                 __ptext87 8980                                   __ptext79 891E  
                                 __ptext96 68D6                                   __ptext88 65C0  
                                 __ptext97 84DA                                   __ptext89 7DFC  
                                 __ptext98 575C                                   __ptext99 8A06  
                                 __powers_ FB01       __end_of_Buffer_Escrita_COMM_Add_Char 8886  
    __size_of_Buffer_Escrita_COMM_Add_Char 0034               _Buffer_Escrita_COMM_Add_Char 8852  
                               _U1CON0bits 003DF2                                 _U1CON1bits 003DF3  
                                 _contaLed 02C0                               ??_unLock_PPS 0105  
                         __size_of_sprintf 1CB8                                 _U2CON0bits 003DDA  
                               _U2CON1bits 003DDB                      __end_of_recebeFRAMEID 7D10  
     i1Buffer_Escrita_COMM_Add_String@dado 0006         Buffer_Escrita_COMM_Add_String@dado 0107  
                            __size_of_WIND 0060                                _recebeu_r_n 02EF  
                        Aguarda_dado@error 01B3                       __end_of_Abre_Porta_1 6D96  
                            __size_of_Post 0076                    __size_of_InicializaWifi 0032  
                                 _lock_PPS 8A8C                             _ponteiroFrames 00D9  
                            __size_of_nada 0002                          ??_Calcula_Fator_m 0159  
                            __size_of_main 03B6                                 _MACAddress 03BE  
                         ??i1_cria_Arquivo 0058                      __end_ofi1_inicia_Post 7C96  
                       __end_of_recebeSIZE 84DA                       __CFG_WDTCWS$WDTCWS_7 000000  
            ??_Buffer_Escrita_USB_Add_Char 0105                                   _valor_AD 01DF  
                       _buffer_leitura_USB 0A00                               _TimeoutCount 02DF  
                          _RecebendoFrames 02E5                                   _primeiro 01E9  
                                 _ponteiro 00D5                               _Ponteiro_FIM 00DB  
                            _ajusta_escala 4DA6                         __end_of_unLock_PPS 8A8C  
                   verificaFimFrame@F19980 02F9                   _limpa_Buffer_Escrita_USB 8752  
                        i1__div_to_l_@exp1 000F                          i1__div_to_l_@cntr 000E  
                               _FVRCONbits 003EC1                             _Aguarda_Funcao 02F1  
                        i1__div_to_l_@quot 000A              __size_of_TransmiteBuffer_COMM 005C  
                                 isdigit@c 0107                                   scale@scl 0149  
                         ?_Converte_Escala 0001                   __size_of_recebeNETWORKID 00E8  
                         Abre_Porta_1@baud 0121                         verificaERRO@F19983 03F2  
                                 intlevel1 0000                                  sprintf@ap 0199  
                                sprintf@cp 0195                           __tdiv_to_l_@exp1 0113  
                                sprintf@sp 0162                           __tdiv_to_l_@cntr 0112  
         ??i1_Buffer_Escrita_COMM_Add_Char 0004            ?i1_Buffer_Escrita_COMM_Add_Char 0001  
            ?_Buffer_Escrita_COMM_Add_Char 0001                           __tdiv_to_l_@quot 010E  
      i1Buffer_Escrita_USB_Add_String@dado 0006          Buffer_Escrita_USB_Add_String@dado 0107  
             ?_Buffer_Leitura_USB_Add_Char 0001                           ___lldiv@dividend 0105  
                           _Aguarda_str_OK 00DF                      __size_of_verificaERRO 0052  
                        __CFG_CLKOUTEN$OFF 000000                              _ponteiro_COMM 01E3  
                              _WDTCON0bits 00395B               Verifica_Analogica@valoradstr 01B3  
                            ?_cria_Arquivo 01AF                                 _SETMACAddr 7688  
                         ?_Abre_Porta_COMM 011B                             ?_ajusta_escala 0161  
                       _Interrupt_WIFI_GSM 81B4                               ?__tdiv_to_l_ 0105  
             __size_of_TransmiteBuffer_USB 005C                              _Max_Entrada10 00E8  
                                 sprintf@c 01AC                                   sprintf@f 0164  
                      recebeNETWORKID@para 00BE                           ___lldiv@quotient 010D  
                             _ponteiro_USB 01E1                        ?_Interrupt_WIFI_GSM 0001  
   __end_of_Buffer_Escrita_COMM_Add_String 6F3A    __size_of_Buffer_Escrita_COMM_Add_String 00CE  
           _Buffer_Escrita_COMM_Add_String 6E6C                               ___aldiv@sign 010E  
                              ?_GETMACAddr 0001                               _verificaERRO 8580  
                        _Interrupt_USB_485 89DC                  __size_of_Calcula_BaudRate 00B8  
                       ?_Interrupt_USB_485 0001                       __end_of_Aguarda_dado 80F0  
            ??_Buffer_Leitura_USB_Add_Char 0001                 __end_of_recebeFUNCTIONCODE 86BE  
             __size_of_append_Arquivo_Json 0282                       ??_Interrupt_WIFI_GSM 0100  
                           ??_cria_Arquivo 01B3                        ??_Interrupt_USB_485 0002  
