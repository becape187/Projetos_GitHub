

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu May 03 12:26:42 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F56K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    25                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    26                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    29                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	text0,global,reloc=2,class=CODE,delta=1
    31                           	psect	text1,global,reloc=2,class=CODE,delta=1
    32                           	psect	text2,global,reloc=2,class=CODE,delta=1
    33                           	psect	text3,global,reloc=2,class=CODE,delta=1
    34                           	psect	text4,global,reloc=2,class=CODE,delta=1
    35                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text7,global,reloc=2,class=CODE,delta=1
    38                           	psect	text8,global,reloc=2,class=CODE,delta=1
    39                           	psect	text9,global,reloc=2,class=CODE,delta=1
    40                           	psect	text10,global,reloc=2,class=CODE,delta=1
    41                           	psect	text11,global,reloc=2,class=CODE,delta=1
    42                           	psect	text12,global,reloc=2,class=CODE,delta=1
    43                           	psect	text13,global,reloc=2,class=CODE,delta=1
    44                           	psect	text14,global,reloc=2,class=CODE,delta=1
    45                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text16,global,reloc=2,class=CODE,delta=1
    47                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text33,global,reloc=2,class=CODE,delta=1
    64                           	psect	text34,global,reloc=2,class=CODE,delta=1
    65                           	psect	text35,global,reloc=2,class=CODE,delta=1
    66                           	psect	text36,global,reloc=2,class=CODE,delta=1
    67                           	psect	text37,global,reloc=2,class=CODE,delta=1
    68                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text39,global,reloc=4,class=CODE,delta=1
    70                           	psect	text40,global,reloc=2,class=CODE,delta=1
    71                           	psect	text41,global,reloc=2,class=CODE,delta=1
    72                           	psect	text42,global,reloc=2,class=CODE,delta=1
    73                           	psect	text43,global,reloc=4,class=CODE,delta=1
    74                           	psect	text44,global,reloc=2,class=CODE,delta=1
    75                           	psect	text45,global,reloc=2,class=CODE,delta=1
    76                           	psect	text46,global,reloc=2,class=CODE,delta=1
    77                           	psect	text47,global,reloc=2,class=CODE,delta=1
    78                           	psect	text48,global,reloc=2,class=CODE,delta=1
    79                           	psect	text49,global,reloc=2,class=CODE,delta=1
    80                           	psect	text50,global,reloc=2,class=CODE,delta=1
    81                           	psect	text51,global,reloc=2,class=CODE,delta=1
    82                           	psect	text52,global,reloc=2,class=CODE,delta=1
    83                           	psect	text53,global,reloc=2,class=CODE,delta=1
    84                           	psect	text54,global,reloc=2,class=CODE,delta=1
    85                           	psect	text55,global,reloc=2,class=CODE,delta=1
    86                           	psect	text56,global,reloc=2,class=CODE,delta=1
    87                           	psect	text57,global,reloc=2,class=CODE,delta=1
    88                           	psect	text58,global,reloc=2,class=CODE,delta=1
    89                           	psect	text59,global,reloc=2,class=CODE,delta=1
    90                           	psect	text60,global,reloc=2,class=CODE,delta=1
    91                           	psect	text61,global,reloc=2,class=CODE,delta=1
    92                           	psect	text62,global,reloc=2,class=CODE,delta=1
    93                           	psect	text63,global,reloc=2,class=CODE,delta=1
    94                           	psect	text64,global,reloc=2,class=CODE,delta=1
    95                           	psect	text65,global,reloc=2,class=CODE,delta=1
    96                           	psect	text66,global,reloc=2,class=CODE,delta=1
    97                           	psect	text67,global,reloc=2,class=CODE,delta=1
    98                           	psect	text68,global,reloc=2,class=CODE,delta=1
    99                           	psect	text69,global,reloc=2,class=CODE,delta=1
   100                           	psect	text70,global,reloc=2,class=CODE,delta=1
   101                           	psect	text71,global,reloc=2,class=CODE,delta=1
   102                           	psect	text72,global,reloc=2,class=CODE,delta=1
   103                           	psect	text73,global,reloc=2,class=CODE,delta=1
   104                           	psect	text74,global,reloc=2,class=CODE,delta=1
   105                           	psect	text75,global,reloc=2,class=CODE,delta=1
   106                           	psect	text76,global,reloc=2,class=CODE,delta=1
   107                           	psect	text77,global,reloc=2,class=CODE,delta=1
   108                           	psect	text78,global,reloc=2,class=CODE,delta=1
   109                           	psect	text79,global,reloc=2,class=CODE,delta=1
   110                           	psect	text80,global,reloc=2,class=CODE,delta=1
   111                           	psect	text81,global,reloc=2,class=CODE,delta=1
   112                           	psect	text82,global,reloc=2,class=CODE,delta=1
   113                           	psect	text83,global,reloc=2,class=CODE,delta=1
   114                           	psect	text84,global,reloc=2,class=CODE,delta=1
   115                           	psect	text85,global,reloc=2,class=CODE,delta=1
   116                           	psect	text86,global,reloc=2,class=CODE,delta=1
   117                           	psect	text87,global,reloc=2,class=CODE,delta=1
   118                           	psect	text88,global,reloc=2,class=CODE,delta=1
   119                           	psect	text89,global,reloc=2,class=CODE,delta=1
   120                           	psect	text90,global,reloc=2,class=CODE,delta=1
   121                           	psect	text91,global,reloc=2,class=CODE,delta=1
   122                           	psect	text92,global,reloc=2,class=CODE,delta=1
   123                           	psect	text93,global,reloc=2,class=CODE,delta=1
   124                           	psect	text94,global,reloc=2,class=CODE,delta=1
   125                           	psect	text95,global,reloc=2,class=CODE,delta=1
   126                           	psect	text96,global,reloc=2,class=CODE,delta=1
   127                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   128                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   129                           	psect	text97,global,reloc=2,class=CODE,delta=1
   130                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   131  0000                     
   132                           ; Version 1.45
   133                           ; Generated 16/11/2017 GMT
   134                           ; 
   135                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   136                           ; All rights reserved.
   137                           ; 
   138                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   139                           ; 
   140                           ; Redistribution and use in source and binary forms, with or without modification, are
   141                           ; permitted provided that the following conditions are met:
   142                           ; 
   143                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   144                           ;        conditions and the following disclaimer.
   145                           ; 
   146                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   147                           ;        of conditions and the following disclaimer in the documentation and/or other
   148                           ;        materials provided with the distribution.
   149                           ; 
   150                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   151                           ;        software without specific prior written permission.
   152                           ; 
   153                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   154                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   155                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   156                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   157                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   158                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   159                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   160                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   161                           ; 
   162                           ; 
   163                           ; Code-generator required, PIC18F56K42 Definitions
   164                           ; 
   165                           ; SFR Addresses
   166  0000                     
   167                           	psect	idataBANK1
   168  0084DC                     __pidataBANK1:
   169                           	opt stack 0
   170                           
   171                           ;initializer for verificaERRO@F19991
   172  0084DC  45                 	db	69
   173  0084DD  52                 	db	82
   174  0084DE  52                 	db	82
   175  0084DF  4F                 	db	79
   176  0084E0  3A                 	db	58
   177  0084E1  00                 	db	0
   178                           
   179                           ;initializer for trataRespostaHTTP@F20043
   180  0084E2  34                 	db	52
   181  0084E3  30                 	db	48
   182  0084E4  34                 	db	52
   183  0084E5  00                 	db	0
   184                           
   185                           ;initializer for trataRespostaHTTP@F20041
   186  0084E6  32                 	db	50
   187  0084E7  30                 	db	48
   188  0084E8  34                 	db	52
   189  0084E9  00                 	db	0
   190                           
   191                           ;initializer for trataRespostaHTTP@F20039
   192  0084EA  32                 	db	50
   193  0084EB  30                 	db	48
   194  0084EC  30                 	db	48
   195  0084ED  00                 	db	0
   196                           
   197                           ;initializer for verificaFimFrame@F19988
   198  0084EE  7D                 	db	125
   199  0084EF  5D                 	db	93
   200  0084F0  00                 	db	0
   201                           
   202                           ;initializer for _Max_Saida10
   203  0084F1  03E8               	dw	1000
   204                           
   205                           	psect	idataBANK2
   206  008440                     __pidataBANK2:
   207                           	opt stack 0
   208                           
   209                           ;initializer for _Max_Entrada10
   210  008440  0B16               	dw	2838
   211                           
   212                           ;initializer for _Max_Entrada9
   213  008442  0A34               	dw	2612
   214                           
   215                           ;initializer for _Max_Saida9
   216  008444  0384               	dw	900
   217                           
   218                           ;initializer for _Max_Entrada8
   219  008446  091A               	dw	2330
   220                           
   221                           ;initializer for _Max_Saida8
   222  008448  0320               	dw	800
   223                           
   224                           ;initializer for _Max_Entrada7
   225  00844A  0838               	dw	2104
   226                           
   227                           ;initializer for _Max_Saida7
   228  00844C  02BC               	dw	700
   229                           
   230                           ;initializer for _Max_Entrada6
   231  00844E  06F8               	dw	1784
   232                           
   233                           ;initializer for _Max_Saida6
   234  008450  0258               	dw	600
   235                           
   236                           ;initializer for _Max_Entrada5
   237  008452  05FC               	dw	1532
   238                           
   239                           ;initializer for _Max_Saida5
   240  008454  01F4               	dw	500
   241                           
   242                           ;initializer for _Max_Entrada4
   243  008456  04D7               	dw	1239
   244                           
   245                           ;initializer for _Max_Saida4
   246  008458  0190               	dw	400
   247                           
   248                           ;initializer for _Max_Entrada3
   249  00845A  03C8               	dw	968
   250                           
   251                           ;initializer for _Max_Saida3
   252  00845C  012C               	dw	300
   253                           
   254                           ;initializer for _Max_Entrada2
   255  00845E  02AF               	dw	687
   256                           
   257                           ;initializer for _Max_Saida2
   258  008460  00C8               	dw	200
   259                           
   260                           ;initializer for _Min_Entrada1
   261  008462  00BA               	dw	186
   262                           
   263                           ;initializer for _Max_Entrada1
   264  008464  01C9               	dw	457
   265                           
   266                           ;initializer for _Max_Saida1
   267  008466  0064               	dw	100
   268                           
   269                           	psect	mediumconst
   270  00FABE                     __pmediumconst:
   271                           	opt stack 0
   272  00FABE  00                 	db	0
   273  00FABF                     _dpowers:
   274                           	opt stack 0
   275  00FABF  0001               	dw	1
   276  00FAC1  0000               	dw	0
   277  00FAC3  000A               	dw	10
   278  00FAC5  0000               	dw	0
   279  00FAC7  0064               	dw	100
   280  00FAC9  0000               	dw	0
   281  00FACB  03E8               	dw	1000
   282  00FACD  0000               	dw	0
   283  00FACF  2710               	dw	10000
   284  00FAD1  0000               	dw	0
   285  00FAD3  86A0               	dw	34464
   286  00FAD5  0001               	dw	1
   287  00FAD7  4240               	dw	16960
   288  00FAD9  000F               	dw	15
   289  00FADB  9680               	dw	38528
   290  00FADD  0098               	dw	152
   291  00FADF  E100               	dw	57600
   292  00FAE1  05F5               	dw	1525
   293  00FAE3  CA00               	dw	51712
   294  00FAE5  3B9A               	dw	15258
   295  00FAE7                     __end_of_dpowers:
   296                           	opt stack 0
   297  00FAE7                     __powers_:
   298                           	opt stack 0
   299  00FAE7  00                 	db	0
   300  00FAE8  80                 	db	128
   301  00FAE9  3F                 	db	63
   302  00FAEA  00                 	db	0
   303  00FAEB  20                 	db	32
   304  00FAEC  41                 	db	65
   305  00FAED  00                 	db	0
   306  00FAEE  C8                 	db	200
   307  00FAEF  42                 	db	66
   308  00FAF0  00                 	db	0
   309  00FAF1  7A                 	db	122
   310  00FAF2  44                 	db	68
   311  00FAF3  40                 	db	64
   312  00FAF4  1C                 	db	28
   313  00FAF5  46                 	db	70
   314  00FAF6  50                 	db	80
   315  00FAF7  C3                 	db	195
   316  00FAF8  47                 	db	71
   317  00FAF9  24                 	db	36
   318  00FAFA  74                 	db	116
   319  00FAFB  49                 	db	73
   320  00FAFC  97                 	db	151
   321  00FAFD  18                 	db	24
   322  00FAFE  4B                 	db	75
   323  00FAFF  BC                 	db	188
   324  00FB00  BE                 	db	190
   325  00FB01  4C                 	db	76
   326  00FB02  6B                 	db	107
   327  00FB03  6E                 	db	110
   328  00FB04  4E                 	db	78
   329  00FB05  03                 	db	3
   330  00FB06  15                 	db	21
   331  00FB07  50                 	db	80
   332  00FB08  79                 	db	121
   333  00FB09  AD                 	db	173
   334  00FB0A  60                 	db	96
   335  00FB0B  F3                 	db	243
   336  00FB0C  49                 	db	73
   337  00FB0D  71                 	db	113
   338  00FB0E                     __end_of__powers_:
   339                           	opt stack 0
   340  00FB0E                     __npowers_:
   341                           	opt stack 0
   342  00FB0E  00                 	db	0
   343  00FB0F  80                 	db	128
   344  00FB10  3F                 	db	63
   345  00FB11  CD                 	db	205
   346  00FB12  CC                 	db	204
   347  00FB13  3D                 	db	61
   348  00FB14  D7                 	db	215
   349  00FB15  23                 	db	35
   350  00FB16  3C                 	db	60
   351  00FB17  12                 	db	18
   352  00FB18  83                 	db	131
   353  00FB19  3A                 	db	58
   354  00FB1A  B7                 	db	183
   355  00FB1B  D1                 	db	209
   356  00FB1C  38                 	db	56
   357  00FB1D  C6                 	db	198
   358  00FB1E  27                 	db	39
   359  00FB1F  37                 	db	55
   360  00FB20  38                 	db	56
   361  00FB21  86                 	db	134
   362  00FB22  35                 	db	53
   363  00FB23  C0                 	db	192
   364  00FB24  D6                 	db	214
   365  00FB25  33                 	db	51
   366  00FB26  CC                 	db	204
   367  00FB27  2B                 	db	43
   368  00FB28  32                 	db	50
   369  00FB29  70                 	db	112
   370  00FB2A  89                 	db	137
   371  00FB2B  30                 	db	48
   372  00FB2C  E7                 	db	231
   373  00FB2D  DB                 	db	219
   374  00FB2E  2E                 	db	46
   375  00FB2F  E5                 	db	229
   376  00FB30  3C                 	db	60
   377  00FB31  1E                 	db	30
   378  00FB32  42                 	db	66
   379  00FB33  A2                 	db	162
   380  00FB34  0D                 	db	13
   381  00FB35                     __end_of__npowers_:
   382                           	opt stack 0
   383  00FB35                     _hexpowers:
   384                           	opt stack 0
   385  00FB35  0001               	dw	1
   386  00FB37  0000               	dw	0
   387  00FB39  0010               	dw	16
   388  00FB3B  0000               	dw	0
   389  00FB3D  0100               	dw	256
   390  00FB3F  0000               	dw	0
   391  00FB41  1000               	dw	4096
   392  00FB43  0000               	dw	0
   393  00FB45  0000               	dw	0
   394  00FB47  0001               	dw	1
   395  00FB49  0000               	dw	0
   396  00FB4B  0010               	dw	16
   397  00FB4D  0000               	dw	0
   398  00FB4F  0100               	dw	256
   399  00FB51  0000               	dw	0
   400  00FB53  1000               	dw	4096
   401  00FB55                     __end_of_hexpowers:
   402                           	opt stack 0
   403  00FB55                     
   404                           ; BSR set to: 2
   405  00FB55  7B                 	db	123
   406  00FB56  22                 	db	34
   407  00FB57  63                 	db	99	;'c'
   408  00FB58  6F                 	db	111	;'o'
   409  00FB59  64                 	db	100	;'d'
   410  00FB5A  65                 	db	101	;'e'
   411  00FB5B  22                 	db	34
   412  00FB5C  3A                 	db	58	;':'
   413  00FB5D  22                 	db	34
   414  00FB5E  31                 	db	49	;'1'
   415  00FB5F  31                 	db	49	;'1'
   416  00FB60  3A                 	db	58	;':'
   417  00FB61  32                 	db	50	;'2'
   418  00FB62  32                 	db	50	;'2'
   419  00FB63  3A                 	db	58	;':'
   420  00FB64  33                 	db	51	;'3'
   421  00FB65  33                 	db	51	;'3'
   422  00FB66  3A                 	db	58	;':'
   423  00FB67  34                 	db	52	;'4'
   424  00FB68  34                 	db	52	;'4'
   425  00FB69  3A                 	db	58	;':'
   426  00FB6A  35                 	db	53	;'5'
   427  00FB6B  35                 	db	53	;'5'
   428  00FB6C  3A                 	db	58	;':'
   429  00FB6D  36                 	db	54	;'6'
   430  00FB6E  36                 	db	54	;'6'
   431  00FB6F  22                 	db	34
   432  00FB70  2C                 	db	44
   433  00FB71  22                 	db	34
   434  00FB72  74                 	db	116	;'t'
   435  00FB73  61                 	db	97	;'a'
   436  00FB74  73                 	db	115	;'s'
   437  00FB75  6B                 	db	107	;'k'
   438  00FB76  52                 	db	82	;'R'
   439  00FB77  65                 	db	101	;'e'
   440  00FB78  73                 	db	115	;'s'
   441  00FB79  70                 	db	112	;'p'
   442  00FB7A  6F                 	db	111	;'o'
   443  00FB7B  6E                 	db	110	;'n'
   444  00FB7C  73                 	db	115	;'s'
   445  00FB7D  65                 	db	101	;'e'
   446  00FB7E  46                 	db	70	;'F'
   447  00FB7F  72                 	db	114	;'r'
   448  00FB80  61                 	db	97	;'a'
   449  00FB81  6D                 	db	109	;'m'
   450  00FB82  65                 	db	101	;'e'
   451  00FB83  73                 	db	115	;'s'
   452  00FB84  22                 	db	34
   453  00FB85  3A                 	db	58	;':'
   454  00FB86  5B                 	db	91	;'['
   455  00FB87  7B                 	db	123
   456  00FB88  22                 	db	34
   457  00FB89  66                 	db	102	;'f'
   458  00FB8A  72                 	db	114	;'r'
   459  00FB8B  61                 	db	97	;'a'
   460  00FB8C  6D                 	db	109	;'m'
   461  00FB8D  65                 	db	101	;'e'
   462  00FB8E  49                 	db	73	;'I'
   463  00FB8F  64                 	db	100	;'d'
   464  00FB90  22                 	db	34
   465  00FB91  3A                 	db	58	;':'
   466  00FB92  22                 	db	34
   467  00FB93  63                 	db	99	;'c'
   468  00FB94  35                 	db	53	;'5'
   469  00FB95  38                 	db	56	;'8'
   470  00FB96  65                 	db	101	;'e'
   471  00FB97  66                 	db	102	;'f'
   472  00FB98  63                 	db	99	;'c'
   473  00FB99  37                 	db	55	;'7'
   474  00FB9A  63                 	db	99	;'c'
   475  00FB9B  2D                 	db	45
   476  00FB9C  63                 	db	99	;'c'
   477  00FB9D  31                 	db	49	;'1'
   478  00FB9E  63                 	db	99	;'c'
   479  00FB9F  30                 	db	48	;'0'
   480  00FBA0  2D                 	db	45
   481  00FBA1  34                 	db	52	;'4'
   482  00FBA2  38                 	db	56	;'8'
   483  00FBA3  65                 	db	101	;'e'
   484  00FBA4  34                 	db	52	;'4'
   485  00FBA5  2D                 	db	45
   486  00FBA6  39                 	db	57	;'9'
   487  00FBA7  35                 	db	53	;'5'
   488  00FBA8  36                 	db	54	;'6'
   489  00FBA9  63                 	db	99	;'c'
   490  00FBAA  2D                 	db	45
   491  00FBAB  32                 	db	50	;'2'
   492  00FBAC  33                 	db	51	;'3'
   493  00FBAD  32                 	db	50	;'2'
   494  00FBAE  38                 	db	56	;'8'
   495  00FBAF  31                 	db	49	;'1'
   496  00FBB0  37                 	db	55	;'7'
   497  00FBB1  37                 	db	55	;'7'
   498  00FBB2  37                 	db	55	;'7'
   499  00FBB3  32                 	db	50	;'2'
   500  00FBB4  37                 	db	55	;'7'
   501  00FBB5  30                 	db	48	;'0'
   502  00FBB6  30                 	db	48	;'0'
   503  00FBB7  22                 	db	34
   504  00FBB8  2C                 	db	44
   505  00FBB9  22                 	db	34
   506  00FBBA  76                 	db	118	;'v'
   507  00FBBB  61                 	db	97	;'a'
   508  00FBBC  6C                 	db	108	;'l'
   509  00FBBD  75                 	db	117	;'u'
   510  00FBBE  65                 	db	101	;'e'
   511  00FBBF  22                 	db	34
   512  00FBC0  3A                 	db	58	;':'
   513  00FBC1  22                 	db	34
   514  00FBC2  34                 	db	52	;'4'
   515  00FBC3  33                 	db	51	;'3'
   516  00FBC4  32                 	db	50	;'2'
   517  00FBC5  31                 	db	49	;'1'
   518  00FBC6  22                 	db	34
   519  00FBC7  2C                 	db	44
   520  00FBC8  22                 	db	34
   521  00FBC9  72                 	db	114	;'r'
   522  00FBCA  65                 	db	101	;'e'
   523  00FBCB  73                 	db	115	;'s'
   524  00FBCC  75                 	db	117	;'u'
   525  00FBCD  6C                 	db	108	;'l'
   526  00FBCE  74                 	db	116	;'t'
   527  00FBCF  22                 	db	34
   528  00FBD0  3A                 	db	58	;':'
   529  00FBD1  74                 	db	116	;'t'
   530  00FBD2  72                 	db	114	;'r'
   531  00FBD3  75                 	db	117	;'u'
   532  00FBD4  65                 	db	101	;'e'
   533  00FBD5  7D                 	db	125
   534  00FBD6  5D                 	db	93	;']'
   535  00FBD7  7D                 	db	125
   536  00FBD8  0D                 	db	13
   537  00FBD9  0A                 	db	10
   538  00FBDA  0D                 	db	13
   539  00FBDB  0A                 	db	10
   540  00FBDC  00                 	db	0
   541  00FBDD                     STR_82:
   542                           
   543                           ; BSR set to: 2
   544  00FBDD  41                 	db	65	;'A'
   545  00FBDE  54                 	db	84	;'T'
   546  00FBDF  2B                 	db	43
   547  00FBE0  53                 	db	83	;'S'
   548  00FBE1  2E                 	db	46
   549  00FBE2  48                 	db	72	;'H'
   550  00FBE3  54                 	db	84	;'T'
   551  00FBE4  54                 	db	84	;'T'
   552  00FBE5  50                 	db	80	;'P'
   553  00FBE6  50                 	db	80	;'P'
   554  00FBE7  4F                 	db	79	;'O'
   555  00FBE8  53                 	db	83	;'S'
   556  00FBE9  54                 	db	84	;'T'
   557  00FBEA  3D                 	db	61	;'='
   558  00FBEB  73                 	db	115	;'s'
   559  00FBEC  65                 	db	101	;'e'
   560  00FBED  72                 	db	114	;'r'
   561  00FBEE  76                 	db	118	;'v'
   562  00FBEF  69                 	db	105	;'i'
   563  00FBF0  63                 	db	99	;'c'
   564  00FBF1  65                 	db	101	;'e'
   565  00FBF2  73                 	db	115	;'s'
   566  00FBF3  2E                 	db	46
   567  00FBF4  67                 	db	103	;'g'
   568  00FBF5  65                 	db	101	;'e'
   569  00FBF6  72                 	db	114	;'r'
   570  00FBF7  72                 	db	114	;'r'
   571  00FBF8  65                 	db	101	;'e'
   572  00FBF9  78                 	db	120	;'x'
   573  00FBFA  2E                 	db	46
   574  00FBFB  63                 	db	99	;'c'
   575  00FBFC  6F                 	db	111	;'o'
   576  00FBFD  6D                 	db	109	;'m'
   577  00FBFE  2E                 	db	46
   578  00FBFF  62                 	db	98	;'b'
   579  00FC00  72                 	db	114	;'r'
   580  00FC01  2C                 	db	44
   581  00FC02  2F                 	db	47
   582  00FC03  73                 	db	115	;'s'
   583  00FC04  65                 	db	101	;'e'
   584  00FC05  72                 	db	114	;'r'
   585  00FC06  76                 	db	118	;'v'
   586  00FC07  69                 	db	105	;'i'
   587  00FC08  63                 	db	99	;'c'
   588  00FC09  65                 	db	101	;'e'
   589  00FC0A  2F                 	db	47
   590  00FC0B  74                 	db	116	;'t'
   591  00FC0C  61                 	db	97	;'a'
   592  00FC0D  73                 	db	115	;'s'
   593  00FC0E  6B                 	db	107	;'k'
   594  00FC0F  2C                 	db	44
   595  00FC10  38                 	db	56	;'8'
   596  00FC11  30                 	db	48	;'0'
   597  00FC12  2C                 	db	44
   598  00FC13  2C                 	db	44
   599  00FC14  2C                 	db	44
   600  00FC15  2C                 	db	44
   601  00FC16  67                 	db	103	;'g'
   602  00FC17  65                 	db	101	;'e'
   603  00FC18  72                 	db	114	;'r'
   604  00FC19  72                 	db	114	;'r'
   605  00FC1A  65                 	db	101	;'e'
   606  00FC1B  78                 	db	120	;'x'
   607  00FC1C  5F                 	db	95	;'_'
   608  00FC1D  72                 	db	114	;'r'
   609  00FC1E  65                 	db	101	;'e'
   610  00FC1F  73                 	db	115	;'s'
   611  00FC20  70                 	db	112	;'p'
   612  00FC21  6F                 	db	111	;'o'
   613  00FC22  6E                 	db	110	;'n'
   614  00FC23  73                 	db	115	;'s'
   615  00FC24  65                 	db	101	;'e'
   616  00FC25  2E                 	db	46
   617  00FC26  6A                 	db	106	;'j'
   618  00FC27  73                 	db	115	;'s'
   619  00FC28  6F                 	db	111	;'o'
   620  00FC29  6E                 	db	110	;'n'
   621  00FC2A  2C                 	db	44
   622  00FC2B  67                 	db	103	;'g'
   623  00FC2C  65                 	db	101	;'e'
   624  00FC2D  72                 	db	114	;'r'
   625  00FC2E  72                 	db	114	;'r'
   626  00FC2F  65                 	db	101	;'e'
   627  00FC30  78                 	db	120	;'x'
   628  00FC31  2E                 	db	46
   629  00FC32  6A                 	db	106	;'j'
   630  00FC33  73                 	db	115	;'s'
   631  00FC34  6F                 	db	111	;'o'
   632  00FC35  6E                 	db	110	;'n'
   633  00FC36  0D                 	db	13
   634  00FC37  00                 	db	0
   635  00FC38                     STR_30:
   636                           
   637                           ; BSR set to: 2
   638  00FC38  41                 	db	65	;'A'
   639  00FC39  54                 	db	84	;'T'
   640  00FC3A  2B                 	db	43
   641  00FC3B  53                 	db	83	;'S'
   642  00FC3C  2E                 	db	46
   643  00FC3D  48                 	db	72	;'H'
   644  00FC3E  54                 	db	84	;'T'
   645  00FC3F  54                 	db	84	;'T'
   646  00FC40  50                 	db	80	;'P'
   647  00FC41  50                 	db	80	;'P'
   648  00FC42  4F                 	db	79	;'O'
   649  00FC43  53                 	db	83	;'S'
   650  00FC44  54                 	db	84	;'T'
   651  00FC45  3D                 	db	61	;'='
   652  00FC46  73                 	db	115	;'s'
   653  00FC47  65                 	db	101	;'e'
   654  00FC48  72                 	db	114	;'r'
   655  00FC49  76                 	db	118	;'v'
   656  00FC4A  69                 	db	105	;'i'
   657  00FC4B  63                 	db	99	;'c'
   658  00FC4C  65                 	db	101	;'e'
   659  00FC4D  73                 	db	115	;'s'
   660  00FC4E  2E                 	db	46
   661  00FC4F  67                 	db	103	;'g'
   662  00FC50  65                 	db	101	;'e'
   663  00FC51  72                 	db	114	;'r'
   664  00FC52  72                 	db	114	;'r'
   665  00FC53  65                 	db	101	;'e'
   666  00FC54  78                 	db	120	;'x'
   667  00FC55  2E                 	db	46
   668  00FC56  63                 	db	99	;'c'
   669  00FC57  6F                 	db	111	;'o'
   670  00FC58  6D                 	db	109	;'m'
   671  00FC59  2E                 	db	46
   672  00FC5A  62                 	db	98	;'b'
   673  00FC5B  72                 	db	114	;'r'
   674  00FC5C  2C                 	db	44
   675  00FC5D  2F                 	db	47
   676  00FC5E  73                 	db	115	;'s'
   677  00FC5F  65                 	db	101	;'e'
   678  00FC60  72                 	db	114	;'r'
   679  00FC61  76                 	db	118	;'v'
   680  00FC62  69                 	db	105	;'i'
   681  00FC63  63                 	db	99	;'c'
   682  00FC64  65                 	db	101	;'e'
   683  00FC65  2F                 	db	47
   684  00FC66  74                 	db	116	;'t'
   685  00FC67  61                 	db	97	;'a'
   686  00FC68  73                 	db	115	;'s'
   687  00FC69  6B                 	db	107	;'k'
   688  00FC6A  2C                 	db	44
   689  00FC6B  38                 	db	56	;'8'
   690  00FC6C  30                 	db	48	;'0'
   691  00FC6D  2C                 	db	44
   692  00FC6E  2C                 	db	44
   693  00FC6F  2C                 	db	44
   694  00FC70  2C                 	db	44
   695  00FC71  72                 	db	114	;'r'
   696  00FC72  65                 	db	101	;'e'
   697  00FC73  74                 	db	116	;'t'
   698  00FC74  6F                 	db	111	;'o'
   699  00FC75  72                 	db	114	;'r'
   700  00FC76  6E                 	db	110	;'n'
   701  00FC77  6F                 	db	111	;'o'
   702  00FC78  2E                 	db	46
   703  00FC79  6A                 	db	106	;'j'
   704  00FC7A  73                 	db	115	;'s'
   705  00FC7B  6F                 	db	111	;'o'
   706  00FC7C  6E                 	db	110	;'n'
   707  00FC7D  2C                 	db	44
   708  00FC7E  67                 	db	103	;'g'
   709  00FC7F  65                 	db	101	;'e'
   710  00FC80  72                 	db	114	;'r'
   711  00FC81  72                 	db	114	;'r'
   712  00FC82  65                 	db	101	;'e'
   713  00FC83  78                 	db	120	;'x'
   714  00FC84  2E                 	db	46
   715  00FC85  6A                 	db	106	;'j'
   716  00FC86  73                 	db	115	;'s'
   717  00FC87  6F                 	db	111	;'o'
   718  00FC88  6E                 	db	110	;'n'
   719  00FC89  0D                 	db	13
   720  00FC8A  0A                 	db	10
   721  00FC8B  00                 	db	0
   722  00FC8C                     
   723                           ; BSR set to: 2
   724  00FC8C  41                 	db	65	;'A'
   725  00FC8D  54                 	db	84	;'T'
   726  00FC8E  2B                 	db	43
   727  00FC8F  53                 	db	83	;'S'
   728  00FC90  2E                 	db	46
   729  00FC91  48                 	db	72	;'H'
   730  00FC92  54                 	db	84	;'T'
   731  00FC93  54                 	db	84	;'T'
   732  00FC94  50                 	db	80	;'P'
   733  00FC95  47                 	db	71	;'G'
   734  00FC96  45                 	db	69	;'E'
   735  00FC97  54                 	db	84	;'T'
   736  00FC98  3D                 	db	61	;'='
   737  00FC99  73                 	db	115	;'s'
   738  00FC9A  65                 	db	101	;'e'
   739  00FC9B  72                 	db	114	;'r'
   740  00FC9C  76                 	db	118	;'v'
   741  00FC9D  69                 	db	105	;'i'
   742  00FC9E  63                 	db	99	;'c'
   743  00FC9F  65                 	db	101	;'e'
   744  00FCA0  73                 	db	115	;'s'
   745  00FCA1  2E                 	db	46
   746  00FCA2  67                 	db	103	;'g'
   747  00FCA3  65                 	db	101	;'e'
   748  00FCA4  72                 	db	114	;'r'
   749  00FCA5  72                 	db	114	;'r'
   750  00FCA6  65                 	db	101	;'e'
   751  00FCA7  78                 	db	120	;'x'
   752  00FCA8  2E                 	db	46
   753  00FCA9  63                 	db	99	;'c'
   754  00FCAA  6F                 	db	111	;'o'
   755  00FCAB  6D                 	db	109	;'m'
   756  00FCAC  2E                 	db	46
   757  00FCAD  62                 	db	98	;'b'
   758  00FCAE  72                 	db	114	;'r'
   759  00FCAF  2C                 	db	44
   760  00FCB0  2F                 	db	47
   761  00FCB1  73                 	db	115	;'s'
   762  00FCB2  65                 	db	101	;'e'
   763  00FCB3  72                 	db	114	;'r'
   764  00FCB4  76                 	db	118	;'v'
   765  00FCB5  69                 	db	105	;'i'
   766  00FCB6  63                 	db	99	;'c'
   767  00FCB7  65                 	db	101	;'e'
   768  00FCB8  2F                 	db	47
   769  00FCB9  74                 	db	116	;'t'
   770  00FCBA  61                 	db	97	;'a'
   771  00FCBB  73                 	db	115	;'s'
   772  00FCBC  6B                 	db	107	;'k'
   773  00FCBD  2F                 	db	47
   774  00FCBE  31                 	db	49	;'1'
   775  00FCBF  31                 	db	49	;'1'
   776  00FCC0  3A                 	db	58	;':'
   777  00FCC1  32                 	db	50	;'2'
   778  00FCC2  32                 	db	50	;'2'
   779  00FCC3  3A                 	db	58	;':'
   780  00FCC4  33                 	db	51	;'3'
   781  00FCC5  33                 	db	51	;'3'
   782  00FCC6  3A                 	db	58	;':'
   783  00FCC7  34                 	db	52	;'4'
   784  00FCC8  34                 	db	52	;'4'
   785  00FCC9  3A                 	db	58	;':'
   786  00FCCA  35                 	db	53	;'5'
   787  00FCCB  35                 	db	53	;'5'
   788  00FCCC  3A                 	db	58	;':'
   789  00FCCD  36                 	db	54	;'6'
   790  00FCCE  36                 	db	54	;'6'
   791  00FCCF  0D                 	db	13
   792  00FCD0  0A                 	db	10
   793  00FCD1  00                 	db	0
   794  00FCD2                     STR_13:
   795                           
   796                           ; BSR set to: 2
   797  00FCD2  25                 	db	37
   798  00FCD3  73                 	db	115	;'s'
   799  00FCD4  7B                 	db	123
   800  00FCD5  22                 	db	34
   801  00FCD6  66                 	db	102	;'f'
   802  00FCD7  72                 	db	114	;'r'
   803  00FCD8  61                 	db	97	;'a'
   804  00FCD9  6D                 	db	109	;'m'
   805  00FCDA  65                 	db	101	;'e'
   806  00FCDB  49                 	db	73	;'I'
   807  00FCDC  64                 	db	100	;'d'
   808  00FCDD  22                 	db	34
   809  00FCDE  3A                 	db	58	;':'
   810  00FCDF  22                 	db	34
   811  00FCE0  25                 	db	37
   812  00FCE1  73                 	db	115	;'s'
   813  00FCE2  22                 	db	34
   814  00FCE3  2C                 	db	44
   815  00FCE4  22                 	db	34
   816  00FCE5  76                 	db	118	;'v'
   817  00FCE6  61                 	db	97	;'a'
   818  00FCE7  6C                 	db	108	;'l'
   819  00FCE8  75                 	db	117	;'u'
   820  00FCE9  65                 	db	101	;'e'
   821  00FCEA  22                 	db	34
   822  00FCEB  3A                 	db	58	;':'
   823  00FCEC  22                 	db	34
   824  00FCED  25                 	db	37
   825  00FCEE  63                 	db	99	;'c'
   826  00FCEF  25                 	db	37
   827  00FCF0  63                 	db	99	;'c'
   828  00FCF1  2C                 	db	44
   829  00FCF2  25                 	db	37
   830  00FCF3  63                 	db	99	;'c'
   831  00FCF4  25                 	db	37
   832  00FCF5  63                 	db	99	;'c'
   833  00FCF6  2C                 	db	44
   834  00FCF7  25                 	db	37
   835  00FCF8  63                 	db	99	;'c'
   836  00FCF9  25                 	db	37
   837  00FCFA  63                 	db	99	;'c'
   838  00FCFB  2C                 	db	44
   839  00FCFC  25                 	db	37
   840  00FCFD  63                 	db	99	;'c'
   841  00FCFE  25                 	db	37
   842  00FCFF  63                 	db	99	;'c'
   843  00FD00  22                 	db	34
   844  00FD01  2C                 	db	44
   845  00FD02  22                 	db	34
   846  00FD03  72                 	db	114	;'r'
   847  00FD04  65                 	db	101	;'e'
   848  00FD05  73                 	db	115	;'s'
   849  00FD06  75                 	db	117	;'u'
   850  00FD07  6C                 	db	108	;'l'
   851  00FD08  74                 	db	116	;'t'
   852  00FD09  22                 	db	34
   853  00FD0A  3A                 	db	58	;':'
   854  00FD0B  25                 	db	37
   855  00FD0C  73                 	db	115	;'s'
   856  00FD0D  7D                 	db	125
   857  00FD0E  00                 	db	0
   858  00FD0F                     STR_9:
   859                           
   860                           ; BSR set to: 2
   861  00FD0F  7B                 	db	123
   862  00FD10  22                 	db	34
   863  00FD11  63                 	db	99	;'c'
   864  00FD12  6F                 	db	111	;'o'
   865  00FD13  64                 	db	100	;'d'
   866  00FD14  65                 	db	101	;'e'
   867  00FD15  22                 	db	34
   868  00FD16  3A                 	db	58	;':'
   869  00FD17  22                 	db	34
   870  00FD18  30                 	db	48	;'0'
   871  00FD19  30                 	db	48	;'0'
   872  00FD1A  3A                 	db	58	;':'
   873  00FD1B  38                 	db	56	;'8'
   874  00FD1C  30                 	db	48	;'0'
   875  00FD1D  3A                 	db	58	;':'
   876  00FD1E  45                 	db	69	;'E'
   877  00FD1F  31                 	db	49	;'1'
   878  00FD20  3A                 	db	58	;':'
   879  00FD21  42                 	db	66	;'B'
   880  00FD22  46                 	db	70	;'F'
   881  00FD23  3A                 	db	58	;':'
   882  00FD24  45                 	db	69	;'E'
   883  00FD25  33                 	db	51	;'3'
   884  00FD26  3A                 	db	58	;':'
   885  00FD27  43                 	db	67	;'C'
   886  00FD28  38                 	db	56	;'8'
   887  00FD29  22                 	db	34
   888  00FD2A  2C                 	db	44
   889  00FD2B  22                 	db	34
   890  00FD2C  74                 	db	116	;'t'
   891  00FD2D  61                 	db	97	;'a'
   892  00FD2E  73                 	db	115	;'s'
   893  00FD2F  6B                 	db	107	;'k'
   894  00FD30  52                 	db	82	;'R'
   895  00FD31  65                 	db	101	;'e'
   896  00FD32  73                 	db	115	;'s'
   897  00FD33  70                 	db	112	;'p'
   898  00FD34  6F                 	db	111	;'o'
   899  00FD35  6E                 	db	110	;'n'
   900  00FD36  73                 	db	115	;'s'
   901  00FD37  65                 	db	101	;'e'
   902  00FD38  46                 	db	70	;'F'
   903  00FD39  72                 	db	114	;'r'
   904  00FD3A  61                 	db	97	;'a'
   905  00FD3B  6D                 	db	109	;'m'
   906  00FD3C  65                 	db	101	;'e'
   907  00FD3D  73                 	db	115	;'s'
   908  00FD3E  22                 	db	34
   909  00FD3F  3A                 	db	58	;':'
   910  00FD40  5B                 	db	91	;'['
   911  00FD41  00                 	db	0
   912  00FD42                     
   913                           ; BSR set to: 2
   914  00FD42  43                 	db	67	;'C'
   915  00FD43  6F                 	db	111	;'o'
   916  00FD44  6E                 	db	110	;'n'
   917  00FD45  74                 	db	116	;'t'
   918  00FD46  65                 	db	101	;'e'
   919  00FD47  6E                 	db	110	;'n'
   920  00FD48  74                 	db	116	;'t'
   921  00FD49  2D                 	db	45
   922  00FD4A  54                 	db	84	;'T'
   923  00FD4B  79                 	db	121	;'y'
   924  00FD4C  70                 	db	112	;'p'
   925  00FD4D  65                 	db	101	;'e'
   926  00FD4E  3A                 	db	58	;':'
   927  00FD4F  20                 	db	32
   928  00FD50  61                 	db	97	;'a'
   929  00FD51  70                 	db	112	;'p'
   930  00FD52  70                 	db	112	;'p'
   931  00FD53  6C                 	db	108	;'l'
   932  00FD54  69                 	db	105	;'i'
   933  00FD55  63                 	db	99	;'c'
   934  00FD56  61                 	db	97	;'a'
   935  00FD57  74                 	db	116	;'t'
   936  00FD58  69                 	db	105	;'i'
   937  00FD59  6F                 	db	111	;'o'
   938  00FD5A  6E                 	db	110	;'n'
   939  00FD5B  2F                 	db	47
   940  00FD5C  6A                 	db	106	;'j'
   941  00FD5D  73                 	db	115	;'s'
   942  00FD5E  6F                 	db	111	;'o'
   943  00FD5F  6E                 	db	110	;'n'
   944  00FD60  2D                 	db	45
   945  00FD61  70                 	db	112	;'p'
   946  00FD62  61                 	db	97	;'a'
   947  00FD63  74                 	db	116	;'t'
   948  00FD64  63                 	db	99	;'c'
   949  00FD65  68                 	db	104	;'h'
   950  00FD66  2B                 	db	43
   951  00FD67  6A                 	db	106	;'j'
   952  00FD68  73                 	db	115	;'s'
   953  00FD69  6F                 	db	111	;'o'
   954  00FD6A  6E                 	db	110	;'n'
   955  00FD6B  0D                 	db	13
   956  00FD6C  0A                 	db	10
   957  00FD6D  00                 	db	0
   958  00FD6E                     
   959                           ; BSR set to: 2
   960  00FD6E  48                 	db	72	;'H'
   961  00FD6F  6F                 	db	111	;'o'
   962  00FD70  73                 	db	115	;'s'
   963  00FD71  74                 	db	116	;'t'
   964  00FD72  3A                 	db	58	;':'
   965  00FD73  20                 	db	32
   966  00FD74  73                 	db	115	;'s'
   967  00FD75  65                 	db	101	;'e'
   968  00FD76  72                 	db	114	;'r'
   969  00FD77  76                 	db	118	;'v'
   970  00FD78  69                 	db	105	;'i'
   971  00FD79  63                 	db	99	;'c'
   972  00FD7A  65                 	db	101	;'e'
   973  00FD7B  73                 	db	115	;'s'
   974  00FD7C  2E                 	db	46
   975  00FD7D  67                 	db	103	;'g'
   976  00FD7E  65                 	db	101	;'e'
   977  00FD7F  72                 	db	114	;'r'
   978  00FD80  72                 	db	114	;'r'
   979  00FD81  65                 	db	101	;'e'
   980  00FD82  78                 	db	120	;'x'
   981  00FD83  2E                 	db	46
   982  00FD84  63                 	db	99	;'c'
   983  00FD85  6F                 	db	111	;'o'
   984  00FD86  6D                 	db	109	;'m'
   985  00FD87  2E                 	db	46
   986  00FD88  62                 	db	98	;'b'
   987  00FD89  72                 	db	114	;'r'
   988  00FD8A  0D                 	db	13
   989  00FD8B  0A                 	db	10
   990  00FD8C  00                 	db	0
   991  00FD8D                     STR_26:
   992                           
   993                           ; BSR set to: 2
   994  00FD8D  41                 	db	65	;'A'
   995  00FD8E  54                 	db	84	;'T'
   996  00FD8F  2B                 	db	43
   997  00FD90  53                 	db	83	;'S'
   998  00FD91  2E                 	db	46
   999  00FD92  46                 	db	70	;'F'
  1000  00FD93  53                 	db	83	;'S'
  1001  00FD94  50                 	db	80	;'P'
  1002  00FD95  3D                 	db	61	;'='
  1003  00FD96  67                 	db	103	;'g'
  1004  00FD97  65                 	db	101	;'e'
  1005  00FD98  72                 	db	114	;'r'
  1006  00FD99  72                 	db	114	;'r'
  1007  00FD9A  65                 	db	101	;'e'
  1008  00FD9B  78                 	db	120	;'x'
  1009  00FD9C  2E                 	db	46
  1010  00FD9D  6A                 	db	106	;'j'
  1011  00FD9E  73                 	db	115	;'s'
  1012  00FD9F  6F                 	db	111	;'o'
  1013  00FDA0  6E                 	db	110	;'n'
  1014  00FDA1  2C                 	db	44
  1015  00FDA2  30                 	db	48	;'0'
  1016  00FDA3  2C                 	db	44
  1017  00FDA4  31                 	db	49	;'1'
  1018  00FDA5  30                 	db	48	;'0'
  1019  00FDA6  30                 	db	48	;'0'
  1020  00FDA7  30                 	db	48	;'0'
  1021  00FDA8  30                 	db	48	;'0'
  1022  00FDA9  30                 	db	48	;'0'
  1023  00FDAA  0D                 	db	13
  1024  00FDAB  00                 	db	0
  1025  00FDAC                     
  1026                           ; BSR set to: 2
  1027  00FDAC  50                 	db	80	;'P'
  1028  00FDAD  4F                 	db	79	;'O'
  1029  00FDAE  53                 	db	83	;'S'
  1030  00FDAF  54                 	db	84	;'T'
  1031  00FDB0  20                 	db	32
  1032  00FDB1  2F                 	db	47
  1033  00FDB2  73                 	db	115	;'s'
  1034  00FDB3  65                 	db	101	;'e'
  1035  00FDB4  72                 	db	114	;'r'
  1036  00FDB5  76                 	db	118	;'v'
  1037  00FDB6  69                 	db	105	;'i'
  1038  00FDB7  63                 	db	99	;'c'
  1039  00FDB8  65                 	db	101	;'e'
  1040  00FDB9  2F                 	db	47
  1041  00FDBA  74                 	db	116	;'t'
  1042  00FDBB  61                 	db	97	;'a'
  1043  00FDBC  73                 	db	115	;'s'
  1044  00FDBD  6B                 	db	107	;'k'
  1045  00FDBE  20                 	db	32
  1046  00FDBF  48                 	db	72	;'H'
  1047  00FDC0  54                 	db	84	;'T'
  1048  00FDC1  54                 	db	84	;'T'
  1049  00FDC2  50                 	db	80	;'P'
  1050  00FDC3  2F                 	db	47
  1051  00FDC4  31                 	db	49	;'1'
  1052  00FDC5  2E                 	db	46
  1053  00FDC6  31                 	db	49	;'1'
  1054  00FDC7  0D                 	db	13
  1055  00FDC8  0A                 	db	10
  1056  00FDC9  00                 	db	0
  1057  00FDCA                     STR_76:
  1058                           
  1059                           ; BSR set to: 2
  1060  00FDCA  41                 	db	65	;'A'
  1061  00FDCB  54                 	db	84	;'T'
  1062  00FDCC  2B                 	db	43
  1063  00FDCD  53                 	db	83	;'S'
  1064  00FDCE  2E                 	db	46
  1065  00FDCF  47                 	db	71	;'G'
  1066  00FDD0  43                 	db	67	;'C'
  1067  00FDD1  46                 	db	70	;'F'
  1068  00FDD2  47                 	db	71	;'G'
  1069  00FDD3  3D                 	db	61	;'='
  1070  00FDD4  6E                 	db	110	;'n'
  1071  00FDD5  76                 	db	118	;'v'
  1072  00FDD6  5F                 	db	95	;'_'
  1073  00FDD7  77                 	db	119	;'w'
  1074  00FDD8  69                 	db	105	;'i'
  1075  00FDD9  66                 	db	102	;'f'
  1076  00FDDA  69                 	db	105	;'i'
  1077  00FDDB  5F                 	db	95	;'_'
  1078  00FDDC  6D                 	db	109	;'m'
  1079  00FDDD  61                 	db	97	;'a'
  1080  00FDDE  63                 	db	99	;'c'
  1081  00FDDF  61                 	db	97	;'a'
  1082  00FDE0  64                 	db	100	;'d'
  1083  00FDE1  64                 	db	100	;'d'
  1084  00FDE2  72                 	db	114	;'r'
  1085  00FDE3  0D                 	db	13
  1086  00FDE4  0A                 	db	10
  1087  00FDE5  00                 	db	0
  1088  00FDE6                     STR_43:
  1089                           
  1090                           ; BSR set to: 2
  1091  00FDE6  0D                 	db	13
  1092  00FDE7  0A                 	db	10
  1093  00FDE8  3E                 	db	62	;'>'
  1094  00FDE9  3E                 	db	62	;'>'
  1095  00FDEA  3E                 	db	62	;'>'
  1096  00FDEB  3E                 	db	62	;'>'
  1097  00FDEC  3E                 	db	62	;'>'
  1098  00FDED  3E                 	db	62	;'>'
  1099  00FDEE  20                 	db	32
  1100  00FDEF  4E                 	db	78	;'N'
  1101  00FDF0  6F                 	db	111	;'o'
  1102  00FDF1  20                 	db	32
  1103  00FDF2  49                 	db	73	;'I'
  1104  00FDF3  6E                 	db	110	;'n'
  1105  00FDF4  73                 	db	115	;'s'
  1106  00FDF5  74                 	db	116	;'t'
  1107  00FDF6  72                 	db	114	;'r'
  1108  00FDF7  75                 	db	117	;'u'
  1109  00FDF8  63                 	db	99	;'c'
  1110  00FDF9  74                 	db	116	;'t'
  1111  00FDFA  69                 	db	105	;'i'
  1112  00FDFB  6F                 	db	111	;'o'
  1113  00FDFC  6E                 	db	110	;'n'
  1114  00FDFD  73                 	db	115	;'s'
  1115  00FDFE  0D                 	db	13
  1116  00FDFF  0A                 	db	10
  1117  00FE00  00                 	db	0
  1118  00FE01                     STR_48:
  1119                           
  1120                           ; BSR set to: 2
  1121  00FE01  41                 	db	65	;'A'
  1122  00FE02  54                 	db	84	;'T'
  1123  00FE03  2B                 	db	43
  1124  00FE04  53                 	db	83	;'S'
  1125  00FE05  2E                 	db	46
  1126  00FE06  53                 	db	83	;'S'
  1127  00FE07  43                 	db	67	;'C'
  1128  00FE08  46                 	db	70	;'F'
  1129  00FE09  47                 	db	71	;'G'
  1130  00FE0A  3D                 	db	61	;'='
  1131  00FE0B  73                 	db	115	;'s'
  1132  00FE0C  74                 	db	116	;'t'
  1133  00FE0D  61                 	db	97	;'a'
  1134  00FE0E  6E                 	db	110	;'n'
  1135  00FE0F  64                 	db	100	;'d'
  1136  00FE10  62                 	db	98	;'b'
  1137  00FE11  79                 	db	121	;'y'
  1138  00FE12  5F                 	db	95	;'_'
  1139  00FE13  74                 	db	116	;'t'
  1140  00FE14  69                 	db	105	;'i'
  1141  00FE15  6D                 	db	109	;'m'
  1142  00FE16  65                 	db	101	;'e'
  1143  00FE17  2C                 	db	44
  1144  00FE18  36                 	db	54	;'6'
  1145  00FE19  30                 	db	48	;'0'
  1146  00FE1A  0D                 	db	13
  1147  00FE1B  00                 	db	0
  1148  00FE1C                     STR_44:
  1149                           
  1150                           ; BSR set to: 2
  1151  00FE1C  0D                 	db	13
  1152  00FE1D  0A                 	db	10
  1153  00FE1E  2D                 	db	45
  1154  00FE1F  2D                 	db	45
  1155  00FE20  46                 	db	70	;'F'
  1156  00FE21  52                 	db	82	;'R'
  1157  00FE22  41                 	db	65	;'A'
  1158  00FE23  4D                 	db	77	;'M'
  1159  00FE24  45                 	db	69	;'E'
  1160  00FE25  53                 	db	83	;'S'
  1161  00FE26  20                 	db	32
  1162  00FE27  52                 	db	82	;'R'
  1163  00FE28  45                 	db	69	;'E'
  1164  00FE29  43                 	db	67	;'C'
  1165  00FE2A  45                 	db	69	;'E'
  1166  00FE2B  42                 	db	66	;'B'
  1167  00FE2C  49                 	db	73	;'I'
  1168  00FE2D  44                 	db	68	;'D'
  1169  00FE2E  4F                 	db	79	;'O'
  1170  00FE2F  53                 	db	83	;'S'
  1171  00FE30  2D                 	db	45
  1172  00FE31  2D                 	db	45
  1173  00FE32  0D                 	db	13
  1174  00FE33  0A                 	db	10
  1175  00FE34  00                 	db	0
  1176  00FE35                     STR_34:
  1177                           
  1178                           ; BSR set to: 2
  1179  00FE35  41                 	db	65	;'A'
  1180  00FE36  54                 	db	84	;'T'
  1181  00FE37  2B                 	db	43
  1182  00FE38  53                 	db	83	;'S'
  1183  00FE39  2E                 	db	46
  1184  00FE3A  46                 	db	70	;'F'
  1185  00FE3B  53                 	db	83	;'S'
  1186  00FE3C  50                 	db	80	;'P'
  1187  00FE3D  3D                 	db	61	;'='
  1188  00FE3E  72                 	db	114	;'r'
  1189  00FE3F  65                 	db	101	;'e'
  1190  00FE40  74                 	db	116	;'t'
  1191  00FE41  6F                 	db	111	;'o'
  1192  00FE42  72                 	db	114	;'r'
  1193  00FE43  6E                 	db	110	;'n'
  1194  00FE44  6F                 	db	111	;'o'
  1195  00FE45  2E                 	db	46
  1196  00FE46  6A                 	db	106	;'j'
  1197  00FE47  73                 	db	115	;'s'
  1198  00FE48  6F                 	db	111	;'o'
  1199  00FE49  6E                 	db	110	;'n'
  1200  00FE4A  2C                 	db	44
  1201  00FE4B  30                 	db	48	;'0'
  1202  00FE4C  2C                 	db	44
  1203  00FE4D  00                 	db	0
  1204  00FE4E                     STR_94:
  1205                           
  1206                           ; BSR set to: 2
  1207  00FE4E  43                 	db	67	;'C'
  1208  00FE4F  6F                 	db	111	;'o'
  1209  00FE50  6E                 	db	110	;'n'
  1210  00FE51  74                 	db	116	;'t'
  1211  00FE52  65                 	db	101	;'e'
  1212  00FE53  6E                 	db	110	;'n'
  1213  00FE54  74                 	db	116	;'t'
  1214  00FE55  2D                 	db	45
  1215  00FE56  4C                 	db	76	;'L'
  1216  00FE57  65                 	db	101	;'e'
  1217  00FE58  6E                 	db	110	;'n'
  1218  00FE59  67                 	db	103	;'g'
  1219  00FE5A  74                 	db	116	;'t'
  1220  00FE5B  68                 	db	104	;'h'
  1221  00FE5C  3A                 	db	58	;':'
  1222  00FE5D  20                 	db	32
  1223  00FE5E  31                 	db	49	;'1'
  1224  00FE5F  33                 	db	51	;'3'
  1225  00FE60  31                 	db	49	;'1'
  1226  00FE61  0D                 	db	13
  1227  00FE62  0A                 	db	10
  1228  00FE63  0D                 	db	13
  1229  00FE64  0A                 	db	10
  1230  00FE65  00                 	db	0
  1231  00FE66                     STR_18:
  1232                           
  1233                           ; BSR set to: 2
  1234  00FE66  49                 	db	73	;'I'
  1235  00FE67  6E                 	db	110	;'n'
  1236  00FE68  69                 	db	105	;'i'
  1237  00FE69  63                 	db	99	;'c'
  1238  00FE6A  69                 	db	105	;'i'
  1239  00FE6B  61                 	db	97	;'a'
  1240  00FE6C  5F                 	db	95	;'_'
  1241  00FE6D  41                 	db	65	;'A'
  1242  00FE6E  72                 	db	114	;'r'
  1243  00FE6F  71                 	db	113	;'q'
  1244  00FE70  75                 	db	117	;'u'
  1245  00FE71  69                 	db	105	;'i'
  1246  00FE72  76                 	db	118	;'v'
  1247  00FE73  6F                 	db	111	;'o'
  1248  00FE74  5F                 	db	95	;'_'
  1249  00FE75  47                 	db	71	;'G'
  1250  00FE76  65                 	db	101	;'e'
  1251  00FE77  72                 	db	114	;'r'
  1252  00FE78  72                 	db	114	;'r'
  1253  00FE79  65                 	db	101	;'e'
  1254  00FE7A  78                 	db	120	;'x'
  1255  00FE7B  0D                 	db	13
  1256  00FE7C  0A                 	db	10
  1257  00FE7D  00                 	db	0
  1258  00FE7E                     STR_17:
  1259                           
  1260                           ; BSR set to: 2
  1261  00FE7E  41                 	db	65	;'A'
  1262  00FE7F  54                 	db	84	;'T'
  1263  00FE80  2B                 	db	43
  1264  00FE81  53                 	db	83	;'S'
  1265  00FE82  2E                 	db	46
  1266  00FE83  46                 	db	70	;'F'
  1267  00FE84  53                 	db	83	;'S'
  1268  00FE85  44                 	db	68	;'D'
  1269  00FE86  3D                 	db	61	;'='
  1270  00FE87  67                 	db	103	;'g'
  1271  00FE88  65                 	db	101	;'e'
  1272  00FE89  72                 	db	114	;'r'
  1273  00FE8A  72                 	db	114	;'r'
  1274  00FE8B  65                 	db	101	;'e'
  1275  00FE8C  78                 	db	120	;'x'
  1276  00FE8D  2E                 	db	46
  1277  00FE8E  6A                 	db	106	;'j'
  1278  00FE8F  73                 	db	115	;'s'
  1279  00FE90  6F                 	db	111	;'o'
  1280  00FE91  6E                 	db	110	;'n'
  1281  00FE92  0D                 	db	13
  1282  00FE93  00                 	db	0
  1283  00FE94                     
  1284                           ; BSR set to: 2
  1285  00FE94  41                 	db	65	;'A'
  1286  00FE95  54                 	db	84	;'T'
  1287  00FE96  2B                 	db	43
  1288  00FE97  53                 	db	83	;'S'
  1289  00FE98  2E                 	db	46
  1290  00FE99  53                 	db	83	;'S'
  1291  00FE9A  4F                 	db	79	;'O'
  1292  00FE9B  43                 	db	67	;'C'
  1293  00FE9C  4B                 	db	75	;'K'
  1294  00FE9D  57                 	db	87	;'W'
  1295  00FE9E  3D                 	db	61	;'='
  1296  00FE9F  30                 	db	48	;'0'
  1297  00FEA0  30                 	db	48	;'0'
  1298  00FEA1  2C                 	db	44
  1299  00FEA2  32                 	db	50	;'2'
  1300  00FEA3  35                 	db	53	;'5'
  1301  00FEA4  37                 	db	55	;'7'
  1302  00FEA5  0D                 	db	13
  1303  00FEA6  00                 	db	0
  1304  00FEA7                     STR_3:
  1305                           
  1306                           ; BSR set to: 2
  1307  00FEA7  2B                 	db	43
  1308  00FEA8  57                 	db	87	;'W'
  1309  00FEA9  49                 	db	73	;'I'
  1310  00FEAA  4E                 	db	78	;'N'
  1311  00FEAB  44                 	db	68	;'D'
  1312  00FEAC  3A                 	db	58	;':'
  1313  00FEAD  32                 	db	50	;'2'
  1314  00FEAE  34                 	db	52	;'4'
  1315  00FEAF  3A                 	db	58	;':'
  1316  00FEB0  57                 	db	87	;'W'
  1317  00FEB1  69                 	db	105	;'i'
  1318  00FEB2  46                 	db	70	;'F'
  1319  00FEB3  69                 	db	105	;'i'
  1320  00FEB4  20                 	db	32
  1321  00FEB5  55                 	db	85	;'U'
  1322  00FEB6  70                 	db	112	;'p'
  1323  00FEB7  3A                 	db	58	;':'
  1324  00FEB8  30                 	db	48	;'0'
  1325  00FEB9  00                 	db	0
  1326  00FEBA                     STR_1:
  1327                           
  1328                           ; BSR set to: 2
  1329  00FEBA  0D                 	db	13
  1330  00FEBB  0A                 	db	10
  1331  00FEBC  0D                 	db	13
  1332  00FEBD  0A                 	db	10
  1333  00FEBE  0D                 	db	13
  1334  00FEBF  0A                 	db	10
  1335  00FEC0  50                 	db	80	;'P'
  1336  00FEC1  43                 	db	67	;'C'
  1337  00FEC2  4F                 	db	79	;'O'
  1338  00FEC3  4E                 	db	78	;'N'
  1339  00FEC4  30                 	db	48	;'0'
  1340  00FEC5  20                 	db	32
  1341  00FEC6  3E                 	db	62	;'>'
  1342  00FEC7  25                 	db	37
  1343  00FEC8  69                 	db	105	;'i'
  1344  00FEC9  0D                 	db	13
  1345  00FECA  0A                 	db	10
  1346  00FECB  00                 	db	0
  1347  00FECC                     STR_113:
  1348                           
  1349                           ; BSR set to: 2
  1350  00FECC  30                 	db	48	;'0'
  1351  00FECD  31                 	db	49	;'1'
  1352  00FECE  32                 	db	50	;'2'
  1353  00FECF  33                 	db	51	;'3'
  1354  00FED0  34                 	db	52	;'4'
  1355  00FED1  35                 	db	53	;'5'
  1356  00FED2  36                 	db	54	;'6'
  1357  00FED3  37                 	db	55	;'7'
  1358  00FED4  38                 	db	56	;'8'
  1359  00FED5  39                 	db	57	;'9'
  1360  00FED6  61                 	db	97	;'a'
  1361  00FED7  62                 	db	98	;'b'
  1362  00FED8  63                 	db	99	;'c'
  1363  00FED9  64                 	db	100	;'d'
  1364  00FEDA  65                 	db	101	;'e'
  1365  00FEDB  66                 	db	102	;'f'
  1366  00FEDC  00                 	db	0
  1367  00FEDD                     
  1368                           ; BSR set to: 2
  1369  00FEDD  0D                 	db	13
  1370  00FEDE  0A                 	db	10
  1371  00FEDF  45                 	db	69	;'E'
  1372  00FEE0  6E                 	db	110	;'n'
  1373  00FEE1  76                 	db	118	;'v'
  1374  00FEE2  69                 	db	105	;'i'
  1375  00FEE3  61                 	db	97	;'a'
  1376  00FEE4  6E                 	db	110	;'n'
  1377  00FEE5  64                 	db	100	;'d'
  1378  00FEE6  6F                 	db	111	;'o'
  1379  00FEE7  2D                 	db	45
  1380  00FEE8  2D                 	db	45
  1381  00FEE9  2D                 	db	45
  1382  00FEEA  3E                 	db	62	;'>'
  1383  00FEEB  0D                 	db	13
  1384  00FEEC  0A                 	db	10
  1385  00FEED  00                 	db	0
  1386  00FEEE                     STR_77:
  1387                           
  1388                           ; BSR set to: 2
  1389  00FEEE  6E                 	db	110	;'n'
  1390  00FEEF  76                 	db	118	;'v'
  1391  00FEF0  5F                 	db	95	;'_'
  1392  00FEF1  77                 	db	119	;'w'
  1393  00FEF2  69                 	db	105	;'i'
  1394  00FEF3  66                 	db	102	;'f'
  1395  00FEF4  69                 	db	105	;'i'
  1396  00FEF5  5F                 	db	95	;'_'
  1397  00FEF6  6D                 	db	109	;'m'
  1398  00FEF7  61                 	db	97	;'a'
  1399  00FEF8  63                 	db	99	;'c'
  1400  00FEF9  61                 	db	97	;'a'
  1401  00FEFA  64                 	db	100	;'d'
  1402  00FEFB  64                 	db	100	;'d'
  1403  00FEFC  72                 	db	114	;'r'
  1404  00FEFD  3D                 	db	61	;'='
  1405  00FEFE  00                 	db	0
  1406  00FEFF                     
  1407                           ; BSR set to: 2
  1408  00FEFF  41                 	db	65	;'A'
  1409  00FF00  54                 	db	84	;'T'
  1410  00FF01  2B                 	db	43
  1411  00FF02  53                 	db	83	;'S'
  1412  00FF03  2E                 	db	46
  1413  00FF04  53                 	db	83	;'S'
  1414  00FF05  4F                 	db	79	;'O'
  1415  00FF06  43                 	db	67	;'C'
  1416  00FF07  4B                 	db	75	;'K'
  1417  00FF08  51                 	db	81	;'Q'
  1418  00FF09  3D                 	db	61	;'='
  1419  00FF0A  30                 	db	48	;'0'
  1420  00FF0B  30                 	db	48	;'0'
  1421  00FF0C  0D                 	db	13
  1422  00FF0D  00                 	db	0
  1423  00FF0E                     STR_107:
  1424                           
  1425                           ; BSR set to: 2
  1426  00FF0E  41                 	db	65	;'A'
  1427  00FF0F  54                 	db	84	;'T'
  1428  00FF10  2B                 	db	43
  1429  00FF11  53                 	db	83	;'S'
  1430  00FF12  2E                 	db	46
  1431  00FF13  53                 	db	83	;'S'
  1432  00FF14  4F                 	db	79	;'O'
  1433  00FF15  43                 	db	67	;'C'
  1434  00FF16  4B                 	db	75	;'K'
  1435  00FF17  52                 	db	82	;'R'
  1436  00FF18  3D                 	db	61	;'='
  1437  00FF19  30                 	db	48	;'0'
  1438  00FF1A  30                 	db	48	;'0'
  1439  00FF1B  2C                 	db	44
  1440  00FF1C  00                 	db	0
  1441  00FF1D                     STR_2:
  1442                           
  1443                           ; BSR set to: 2
  1444  00FF1D  50                 	db	80	;'P'
  1445  00FF1E  43                 	db	67	;'C'
  1446  00FF1F  4F                 	db	79	;'O'
  1447  00FF20  4E                 	db	78	;'N'
  1448  00FF21  30                 	db	48	;'0'
  1449  00FF22  31                 	db	49	;'1'
  1450  00FF23  20                 	db	32
  1451  00FF24  3E                 	db	62	;'>'
  1452  00FF25  25                 	db	37
  1453  00FF26  69                 	db	105	;'i'
  1454  00FF27  0D                 	db	13
  1455  00FF28  0A                 	db	10
  1456  00FF29  00                 	db	0
  1457  00FF2A                     STR_111:
  1458                           
  1459                           ; BSR set to: 2
  1460  00FF2A  25                 	db	37
  1461  00FF2B  69                 	db	105	;'i'
  1462  00FF2C  20                 	db	32
  1463  00FF2D  2D                 	db	45
  1464  00FF2E  3E                 	db	62	;'>'
  1465  00FF2F  20                 	db	32
  1466  00FF30  25                 	db	37
  1467  00FF31  69                 	db	105	;'i'
  1468  00FF32  20                 	db	32
  1469  00FF33  0D                 	db	13
  1470  00FF34  0A                 	db	10
  1471  00FF35  00                 	db	0
  1472  00FF36                     STR_49:
  1473                           
  1474                           ; BSR set to: 2
  1475  00FF36  41                 	db	65	;'A'
  1476  00FF37  54                 	db	84	;'T'
  1477  00FF38  2B                 	db	43
  1478  00FF39  53                 	db	83	;'S'
  1479  00FF3A  2E                 	db	46
  1480  00FF3B  50                 	db	80	;'P'
  1481  00FF3C  4D                 	db	77	;'M'
  1482  00FF3D  53                 	db	83	;'S'
  1483  00FF3E  3D                 	db	61	;'='
  1484  00FF3F  33                 	db	51	;'3'
  1485  00FF40  0D                 	db	13
  1486  00FF41  00                 	db	0
  1487  00FF42                     STR_8:
  1488                           
  1489                           ; BSR set to: 2
  1490  00FF42  67                 	db	103	;'g'
  1491  00FF43  65                 	db	101	;'e'
  1492  00FF44  72                 	db	114	;'r'
  1493  00FF45  72                 	db	114	;'r'
  1494  00FF46  65                 	db	101	;'e'
  1495  00FF47  78                 	db	120	;'x'
  1496  00FF48  2E                 	db	46
  1497  00FF49  6A                 	db	106	;'j'
  1498  00FF4A  73                 	db	115	;'s'
  1499  00FF4B  6F                 	db	111	;'o'
  1500  00FF4C  6E                 	db	110	;'n'
  1501  00FF4D  00                 	db	0
  1502  00FF4E                     STR_74:
  1503                           
  1504                           ; BSR set to: 2
  1505  00FF4E  0D                 	db	13
  1506  00FF4F  0A                 	db	10
  1507  00FF50  0D                 	db	13
  1508  00FF51  0A                 	db	10
  1509  00FF52  3E                 	db	62	;'>'
  1510  00FF53  4D                 	db	77	;'M'
  1511  00FF54  41                 	db	65	;'A'
  1512  00FF55  43                 	db	67	;'C'
  1513  00FF56  3A                 	db	58	;':'
  1514  00FF57  20                 	db	32
  1515  00FF58  00                 	db	0
  1516  00FF59                     STR_53:
  1517                           
  1518                           ; BSR set to: 2
  1519  00FF59  48                 	db	72	;'H'
  1520  00FF5A  54                 	db	84	;'T'
  1521  00FF5B  54                 	db	84	;'T'
  1522  00FF5C  50                 	db	80	;'P'
  1523  00FF5D  2F                 	db	47
  1524  00FF5E  31                 	db	49	;'1'
  1525  00FF5F  2E                 	db	46
  1526  00FF60  31                 	db	49	;'1'
  1527  00FF61  20                 	db	32
  1528  00FF62  00                 	db	0
  1529  00FF63                     
  1530                           ; BSR set to: 2
  1531  00FF63  44                 	db	68	;'D'
  1532  00FF64  41                 	db	65	;'A'
  1533  00FF65  54                 	db	84	;'T'
  1534  00FF66  41                 	db	65	;'A'
  1535  00FF67  4C                 	db	76	;'L'
  1536  00FF68  45                 	db	69	;'E'
  1537  00FF69  4E                 	db	78	;'N'
  1538  00FF6A  3A                 	db	58	;':'
  1539  00FF6B  20                 	db	32
  1540  00FF6C  00                 	db	0
  1541  00FF6D                     STR_25:
  1542                           
  1543                           ; BSR set to: 2
  1544  00FF6D  50                 	db	80	;'P'
  1545  00FF6E  6F                 	db	111	;'o'
  1546  00FF6F  73                 	db	115	;'s'
  1547  00FF70  74                 	db	116	;'t'
  1548  00FF71  2E                 	db	46
  1549  00FF72  2E                 	db	46
  1550  00FF73  2E                 	db	46
  1551  00FF74  0D                 	db	13
  1552  00FF75  0A                 	db	10
  1553  00FF76  00                 	db	0
  1554  00FF77                     STR_36:
  1555                           
  1556                           ; BSR set to: 2
  1557  00FF77  52                 	db	82	;'R'
  1558  00FF78  65                 	db	101	;'e'
  1559  00FF79  61                 	db	97	;'a'
  1560  00FF7A  64                 	db	100	;'d'
  1561  00FF7B  20                 	db	32
  1562  00FF7C  43                 	db	67	;'C'
  1563  00FF7D  61                 	db	97	;'a'
  1564  00FF7E  70                 	db	112	;'p'
  1565  00FF7F  3A                 	db	58	;':'
  1566  00FF80  00                 	db	0
  1567  00FF81                     STR_6:
  1568                           
  1569                           ; BSR set to: 2
  1570  00FF81  41                 	db	65	;'A'
  1571  00FF82  54                 	db	84	;'T'
  1572  00FF83  2B                 	db	43
  1573  00FF84  53                 	db	83	;'S'
  1574  00FF85  2E                 	db	46
  1575  00FF86  46                 	db	70	;'F'
  1576  00FF87  53                 	db	83	;'S'
  1577  00FF88  43                 	db	67	;'C'
  1578  00FF89  3D                 	db	61	;'='
  1579  00FF8A  00                 	db	0
  1580  00FF8B                     STR_56:
  1581                           
  1582                           ; BSR set to: 2
  1583  00FF8B  6D                 	db	109	;'m'
  1584  00FF8C  65                 	db	101	;'e'
  1585  00FF8D  49                 	db	73	;'I'
  1586  00FF8E  64                 	db	100	;'d'
  1587  00FF8F  22                 	db	34
  1588  00FF90  3A                 	db	58	;':'
  1589  00FF91  22                 	db	34
  1590  00FF92  00                 	db	0
  1591  00FF93                     STR_112:
  1592                           
  1593                           ; BSR set to: 2
  1594  00FF93  28                 	db	40
  1595  00FF94  6E                 	db	110	;'n'
  1596  00FF95  75                 	db	117	;'u'
  1597  00FF96  6C                 	db	108	;'l'
  1598  00FF97  6C                 	db	108	;'l'
  1599  00FF98  29                 	db	41
  1600  00FF99  00                 	db	0
  1601  00FF9A                     STR_86:
  1602                           
  1603                           ; BSR set to: 2
  1604  00FF9A  5C                 	db	92	;'\'
  1605  00FF9B  30                 	db	48	;'0'
  1606  00FF9C  5C                 	db	92	;'\'
  1607  00FF9D  30                 	db	48	;'0'
  1608  00FF9E  5C                 	db	92	;'\'
  1609  00FF9F  30                 	db	48	;'0'
  1610  00FFA0  00                 	db	0
  1611  00FFA1                     STR_59:
  1612                           
  1613                           ; BSR set to: 2
  1614  00FFA1  72                 	db	114	;'r'
  1615  00FFA2  6B                 	db	107	;'k'
  1616  00FFA3  49                 	db	73	;'I'
  1617  00FFA4  64                 	db	100	;'d'
  1618  00FFA5  22                 	db	34
  1619  00FFA6  3A                 	db	58	;':'
  1620  00FFA7  00                 	db	0
  1621  00FFA8                     STR_65:
  1622                           
  1623                           ; BSR set to: 2
  1624  00FFA8  43                 	db	67	;'C'
  1625  00FFA9  6F                 	db	111	;'o'
  1626  00FFAA  64                 	db	100	;'d'
  1627  00FFAB  65                 	db	101	;'e'
  1628  00FFAC  22                 	db	34
  1629  00FFAD  3A                 	db	58	;':'
  1630  00FFAE  00                 	db	0
  1631  00FFAF                     STR_96:
  1632                           
  1633                           ; BSR set to: 2
  1634  00FFAF  2B                 	db	43
  1635  00FFB0  57                 	db	87	;'W'
  1636  00FFB1  49                 	db	73	;'I'
  1637  00FFB2  4E                 	db	78	;'N'
  1638  00FFB3  44                 	db	68	;'D'
  1639  00FFB4  3A                 	db	58	;':'
  1640  00FFB5  00                 	db	0
  1641  00FFB6                     STR_79:
  1642                           
  1643                           ; BSR set to: 2
  1644  00FFB6  45                 	db	69	;'E'
  1645  00FFB7  52                 	db	82	;'R'
  1646  00FFB8  52                 	db	82	;'R'
  1647  00FFB9  4F                 	db	79	;'O'
  1648  00FFBA  52                 	db	82	;'R'
  1649  00FFBB  3A                 	db	58	;':'
  1650  00FFBC  00                 	db	0
  1651  00FFBD                     STR_62:
  1652                           
  1653                           ; BSR set to: 2
  1654  00FFBD  65                 	db	101	;'e'
  1655  00FFBE  49                 	db	73	;'I'
  1656  00FFBF  64                 	db	100	;'d'
  1657  00FFC0  22                 	db	34
  1658  00FFC1  3A                 	db	58	;':'
  1659  00FFC2  00                 	db	0
  1660  00FFC3                     STR_68:
  1661                           
  1662                           ; BSR set to: 2
  1663  00FFC3  65                 	db	101	;'e'
  1664  00FFC4  73                 	db	115	;'s'
  1665  00FFC5  73                 	db	115	;'s'
  1666  00FFC6  22                 	db	34
  1667  00FFC7  3A                 	db	58	;':'
  1668  00FFC8  00                 	db	0
  1669  00FFC9                     STR_12:
  1670                           
  1671                           ; BSR set to: 2
  1672  00FFC9  66                 	db	102	;'f'
  1673  00FFCA  61                 	db	97	;'a'
  1674  00FFCB  6C                 	db	108	;'l'
  1675  00FFCC  73                 	db	115	;'s'
  1676  00FFCD  65                 	db	101	;'e'
  1677  00FFCE  00                 	db	0
  1678  00FFCF                     STR_10:
  1679                           
  1680                           ; BSR set to: 2
  1681  00FFCF  25                 	db	37
  1682  00FFD0  30                 	db	48	;'0'
  1683  00FFD1  38                 	db	56	;'8'
  1684  00FFD2  6C                 	db	108	;'l'
  1685  00FFD3  78                 	db	120	;'x'
  1686  00FFD4  00                 	db	0
  1687  00FFD5                     STR_7:
  1688                           
  1689                           ; BSR set to: 2
  1690  00FFD5  2C                 	db	44
  1691  00FFD6  25                 	db	37
  1692  00FFD7  69                 	db	105	;'i'
  1693  00FFD8  0D                 	db	13
  1694  00FFD9  00                 	db	0
  1695  00FFDA                     STR_11:
  1696                           
  1697                           ; BSR set to: 2
  1698  00FFDA  74                 	db	116	;'t'
  1699  00FFDB  72                 	db	114	;'r'
  1700  00FFDC  75                 	db	117	;'u'
  1701  00FFDD  65                 	db	101	;'e'
  1702  00FFDE  00                 	db	0
  1703  00FFDF                     STR_99:
  1704                           
  1705                           ; BSR set to: 2
  1706  00FFDF  3A                 	db	58	;':'
  1707  00FFE0  30                 	db	48	;'0'
  1708  00FFE1  3A                 	db	58	;':'
  1709  00FFE2  00                 	db	0
  1710  00FFE3                     STR_16:
  1711                           
  1712                           ; BSR set to: 2
  1713  00FFE3  5D                 	db	93	;']'
  1714  00FFE4  7D                 	db	125
  1715  00FFE5  0D                 	db	13
  1716  00FFE6  00                 	db	0
  1717  00FFE7                     STR_84:
  1718                           
  1719                           ; BSR set to: 2
  1720  00FFE7  4B                 	db	75	;'K'
  1721  00FFE8  0D                 	db	13
  1722  00FFE9  00                 	db	0
  1723  00FFEA                     STR_57:
  1724                           
  1725                           ; BSR set to: 2
  1726  00FFEA  22                 	db	34
  1727  00FFEB  2C                 	db	44
  1728  00FFEC  00                 	db	0
  1729  00FFED                     STR_80:
  1730                           
  1731                           ; BSR set to: 2
  1732  00FFED  25                 	db	37
  1733  00FFEE  73                 	db	115	;'s'
  1734  00FFEF  00                 	db	0
  1735  00FFF0                     STR_28:
  1736                           
  1737                           ; BSR set to: 2
  1738  00FFF0  4F                 	db	79	;'O'
  1739  00FFF1  4B                 	db	75	;'K'
  1740  00FFF2  00                 	db	0
  1741  00FFF3                     STR_19:
  1742                           
  1743                           ; BSR set to: 2
  1744  00FFF3  2D                 	db	45
  1745  00FFF4  53                 	db	83	;'S'
  1746  00FFF5  00                 	db	0
  1747  00FFF6                     STR_27:
  1748                           
  1749                           ; BSR set to: 2
  1750  00FFF6  41                 	db	65	;'A'
  1751  00FFF7  54                 	db	84	;'T'
  1752  00FFF8  00                 	db	0
  1753  00FFF9                     STR_102:
  1754                           
  1755                           ; BSR set to: 2
  1756  00FFF9  23                 	db	35
  1757  00FFFA  00                 	db	0
  1758  00FFFB                     STR_83:
  1759                           
  1760                           ; BSR set to: 2
  1761  00FFFB  41                 	db	65	;'A'
  1762  00FFFC  00                 	db	0
  1763  00FFFD                     STR_22:
  1764                           
  1765                           ; BSR set to: 2
  1766  00FFFD  2A                 	db	42
  1767  00FFFE  00                 	db	0
  1768  0000                     
  1769                           ; #config settings
  1770  00FFFF  00                 	db	0	; dummy byte at the end
  1771  0000                     
  1772                           	psect	nvBANK3
  1773  0003F2                     __pnvBANK3:
  1774                           	opt stack 0
  1775  0003F2                     ___DCDelay:
  1776                           	opt stack 0
  1777  0003F2                     	ds	1
  1778  0003F3                     ___DCByte:
  1779                           	opt stack 0
  1780  0003F3                     	ds	1
  1781  0000                     _PIE6bits	set	14742
  1782  0000                     _PIE3bits	set	14739
  1783  0000                     _BORCONbits	set	14800
  1784  0000                     _WDTCON0bits	set	14683
  1785  0000                     _U2RXIF	set	118066
  1786  0000                     _U1RXIF	set	118043
  1787  0000                     _ANSELAbits	set	14912
  1788  0000                     _ANSELEbits	set	14976
  1789  0000                     _PPSLOCK	set	15039
  1790  0000                     _ANSELBbits	set	14928
  1791  0000                     _U2RXPPS	set	15080
  1792  0000                     _RB1PPS	set	14857
  1793  0000                     _RC5PPS	set	14869
  1794  0000                     _ANSELCbits	set	14944
  1795  0000                     _U1RXPPS	set	15077
  1796  0000                     _RC0PPS	set	14864
  1797  0000                     _ANSELDbits	set	14960
  1798  0000                     _U2TXB	set	15826
  1799  0000                     _U2ERRIRbits	set	15841
  1800  0000                     _U1TXB	set	15850
  1801  0000                     _U1ERRIRbits	set	15865
  1802  0000                     _U2RXB	set	15824
  1803  0000                     _U1RXB	set	15848
  1804  0000                     _U2CON1bits	set	15835
  1805  0000                     _U2CON0bits	set	15834
  1806  0000                     _U2BRGL	set	15837
  1807  0000                     _U2BRGH	set	15838
  1808  0000                     _U1CON1bits	set	15859
  1809  0000                     _U1BRGL	set	15861
  1810  0000                     _U1BRGH	set	15862
  1811  0000                     _U1CON0bits	set	15858
  1812  0000                     _ADRESL	set	16111
  1813  0000                     _ADRESH	set	16112
  1814  0000                     _ADPCH	set	16113
  1815  0000                     _ADREFbits	set	16125
  1816  0000                     _ADCON0bits	set	16120
  1817  0000                     _ADCLKbits	set	16127
  1818  0000                     _ADACQH	set	16116
  1819  0000                     _ADACQL	set	16115
  1820  0000                     _ADPREL	set	16118
  1821  0000                     _ADPREH	set	16119
  1822  0000                     _ADCAP	set	16117
  1823  0000                     _FVRCONbits	set	16065
  1824  0000                     _LATAbits	set	16314
  1825  0000                     _TRISAbits	set	16322
  1826  0000                     _TRISEbits	set	16326
  1827  0000                     _TRISBbits	set	16323
  1828  0000                     _TRISCbits	set	16324
  1829  0000                     _PORTEbits	set	16334
  1830  0000                     _PORTAbits	set	16330
  1831  0000                     _LATEbits	set	16318
  1832  0000                     _PORTBbits	set	16331
  1833  0000                     _PCON1	set	16369
  1834  0000                     _PCON0	set	16368
  1835  0000                     _LATDbits	set	16317
  1836  0000                     _TRISDbits	set	16325
  1837  0000                     _LATFbits	set	16319
  1838  0000                     _TRISFbits	set	16327
  1839  0000                     _INTCON0bits	set	16338
  1840                           
  1841                           	psect	cinit
  1842  0067BE                     __pcinit:
  1843                           	opt stack 0
  1844  0067BE                     start_initialization:
  1845                           	opt stack 0
  1846  0067BE                     __initialization:
  1847                           	opt stack 0
  1848                           
  1849                           ; Initialize objects allocated to BANK2 (40 bytes)
  1850                           ; load TBLPTR registers with __pidataBANK2
  1851  0067BE  0E40               	movlw	low __pidataBANK2
  1852  0067C0  6EF6               	movwf	16374,c
  1853  0067C2  0E84               	movlw	high __pidataBANK2
  1854  0067C4  6EF7               	movwf	16375,c
  1855  0067C6  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1856  0067C8  6EF8               	movwf	16376,c
  1857  0067CA  EE00  F2B0         	lfsr	0,__pdataBANK2
  1858  0067CE  EE10 F028          	lfsr	1,40
  1859  0067D2                     copy_data0:
  1860  0067D2  0009               	tblrd		*+
  1861  0067D4  006F FFD7 FFEE     	movff	16373,16366
  1862  0067DA  50E5               	movf	16357,w,c
  1863  0067DC  50E1               	movf	16353,w,c
  1864  0067DE  E1F9               	bnz	copy_data0
  1865                           
  1866                           ; Initialize objects allocated to BANK1 (23 bytes)
  1867                           ; load TBLPTR registers with __pidataBANK1
  1868  0067E0  0EDC               	movlw	low __pidataBANK1
  1869  0067E2  6EF6               	movwf	16374,c
  1870  0067E4  0E84               	movlw	high __pidataBANK1
  1871  0067E6  6EF7               	movwf	16375,c
  1872  0067E8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1873  0067EA  6EF8               	movwf	16376,c
  1874  0067EC  EE00  F1E9         	lfsr	0,__pdataBANK1
  1875  0067F0  EE10 F017          	lfsr	1,23
  1876  0067F4                     copy_data1:
  1877  0067F4  0009               	tblrd		*+
  1878  0067F6  006F FFD7 FFEE     	movff	16373,16366
  1879  0067FC  50E5               	movf	16357,w,c
  1880  0067FE  50E1               	movf	16353,w,c
  1881  006800  E1F9               	bnz	copy_data1
  1882                           
  1883                           ; Clear objects allocated to BIGRAM (1110 bytes)
  1884  006802  EE02  F296         	lfsr	0,__pbssBIGRAM
  1885  006806  EE11 F056          	lfsr	1,1110
  1886  00680A                     clear_0:
  1887  00680A  6AEE               	clrf	16366,c
  1888  00680C  50E5               	movf	16357,w,c
  1889  00680E  50E1               	movf	16353,w,c
  1890  006810  E1FC               	bnz	clear_0
  1891  006812  50E2               	movf	16354,w,c
  1892  006814  E1FA               	bnz	clear_0
  1893                           
  1894                           ; Clear objects allocated to BANK10 (150 bytes)
  1895  006816  EE02  F200         	lfsr	0,__pbssBANK10
  1896  00681A  0E96               	movlw	150
  1897  00681C                     clear_1:
  1898  00681C  6AEE               	clrf	16366,c
  1899  00681E  06E8               	decf	16360,f,c
  1900  006820  E1FD               	bnz	clear_1
  1901                           
  1902                           ; Clear objects allocated to BANK9 (150 bytes)
  1903  006822  EE02  F100         	lfsr	0,__pbssBANK9
  1904  006826  0E96               	movlw	150
  1905  006828                     clear_2:
  1906  006828  6AEE               	clrf	16366,c
  1907  00682A  06E8               	decf	16360,f,c
  1908  00682C  E1FD               	bnz	clear_2
  1909                           
  1910                           ; Clear objects allocated to BANK8 (120 bytes)
  1911  00682E  EE02  F000         	lfsr	0,__pbssBANK8
  1912  006832  0E78               	movlw	120
  1913  006834                     clear_3:
  1914  006834  6AEE               	clrf	16366,c
  1915  006836  06E8               	decf	16360,f,c
  1916  006838  E1FD               	bnz	clear_3
  1917                           
  1918                           ; Clear objects allocated to BANK7 (150 bytes)
  1919  00683A  EE01  F300         	lfsr	0,__pbssBANK7
  1920  00683E  0E96               	movlw	150
  1921  006840                     clear_4:
  1922  006840  6AEE               	clrf	16366,c
  1923  006842  06E8               	decf	16360,f,c
  1924  006844  E1FD               	bnz	clear_4
  1925                           
  1926                           ; Clear objects allocated to BANK6 (150 bytes)
  1927  006846  EE01  F200         	lfsr	0,__pbssBANK6
  1928  00684A  0E96               	movlw	150
  1929  00684C                     clear_5:
  1930  00684C  6AEE               	clrf	16366,c
  1931  00684E  06E8               	decf	16360,f,c
  1932  006850  E1FD               	bnz	clear_5
  1933                           
  1934                           ; Clear objects allocated to BANK5 (220 bytes)
  1935  006852  EE01  F100         	lfsr	0,__pbssBANK5
  1936  006856  0EDC               	movlw	220
  1937  006858                     clear_6:
  1938  006858  6AEE               	clrf	16366,c
  1939  00685A  06E8               	decf	16360,f,c
  1940  00685C  E1FD               	bnz	clear_6
  1941                           
  1942                           ; Clear objects allocated to BANK4 (240 bytes)
  1943  00685E  EE01  F000         	lfsr	0,__pbssBANK4
  1944  006862  0EF0               	movlw	240
  1945  006864                     clear_7:
  1946  006864  6AEE               	clrf	16366,c
  1947  006866  06E8               	decf	16360,f,c
  1948  006868  E1FD               	bnz	clear_7
  1949                           
  1950                           ; Clear objects allocated to BANK3 (218 bytes)
  1951  00686A  EE00  F300         	lfsr	0,__pbssBANK3
  1952  00686E  0EDA               	movlw	218
  1953  006870                     clear_8:
  1954  006870  6AEE               	clrf	16366,c
  1955  006872  06E8               	decf	16360,f,c
  1956  006874  E1FD               	bnz	clear_8
  1957                           
  1958                           ; Clear objects allocated to BANK2 (21 bytes)
  1959  006876  EE00  F2D8         	lfsr	0,__pbssBANK2
  1960  00687A  0E15               	movlw	21
  1961  00687C                     clear_9:
  1962  00687C  6AEE               	clrf	16366,c
  1963  00687E  06E8               	decf	16360,f,c
  1964  006880  E1FD               	bnz	clear_9
  1965                           
  1966                           ; Clear objects allocated to BANK1 (85 bytes)
  1967  006882  EE00  F194         	lfsr	0,__pbssBANK1
  1968  006886  0E55               	movlw	85
  1969  006888                     clear_10:
  1970  006888  6AEE               	clrf	16366,c
  1971  00688A  06E8               	decf	16360,f,c
  1972  00688C  E1FD               	bnz	clear_10
  1973                           
  1974                           ; Clear objects allocated to BANK0 (39 bytes)
  1975  00688E  EE00  F0D7         	lfsr	0,__pbssBANK0
  1976  006892  0E27               	movlw	39
  1977  006894                     clear_11:
  1978  006894  6AEE               	clrf	16366,c
  1979  006896  06E8               	decf	16360,f,c
  1980  006898  E1FD               	bnz	clear_11
  1981                           
  1982                           ; Clear objects allocated to COMRAM (3 bytes)
  1983  00689A  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1984  00689C  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1985  00689E  6A5A               	clrf	__pbssCOMRAM& (0+255),c
  1986                           
  1987                           ;
  1988                           ; Setup IVTBASE
  1989                           ;
  1990  0068A0  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1991  0068A2  6ED5               	movwf	213,c
  1992  0068A4  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1993  0068A6  6ED6               	movwf	214,c
  1994  0068A8  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1995  0068AA  6ED7               	movwf	215,c
  1996  0068AC                     end_of_initialization:
  1997                           	opt stack 0
  1998  0068AC                     __end_of__initialization:
  1999                           	opt stack 0
  2000  0068AC  0100               	movlb	0
  2001  0068AE  EF03  F022         	goto	_main	;jump to C main() function
  2002                           
  2003                           	psect	bssCOMRAM
  2004  00005A                     __pbssCOMRAM:
  2005                           	opt stack 0
  2006  00005A                     _index:
  2007                           	opt stack 0
  2008  00005A                     	ds	2
  2009  00005C                     _HighCRC:
  2010                           	opt stack 0
  2011  00005C                     	ds	1
  2012                           
  2013                           	psect	bssBANK0
  2014  0000D7                     __pbssBANK0:
  2015                           	opt stack 0
  2016  0000D7                     _saida:
  2017                           	opt stack 0
  2018  0000D7                     	ds	4
  2019  0000DB                     _sample_result:
  2020                           	opt stack 0
  2021  0000DB                     	ds	4
  2022  0000DF                     _b:
  2023                           	opt stack 0
  2024  0000DF                     	ds	2
  2025  0000E1                     _ponteiro:
  2026                           	opt stack 0
  2027  0000E1                     	ds	2
  2028  0000E3                     _valor:
  2029                           	opt stack 0
  2030  0000E3                     	ds	2
  2031  0000E5                     _ponteiroFrames:
  2032                           	opt stack 0
  2033  0000E5                     	ds	2
  2034  0000E7                     _Ponteiro_FIM:
  2035                           	opt stack 0
  2036  0000E7                     	ds	2
  2037  0000E9                     _Ponteiro_ERRO:
  2038                           	opt stack 0
  2039  0000E9                     	ds	2
  2040  0000EB                     _Aguarda_Funcao:
  2041                           	opt stack 0
  2042  0000EB                     	ds	2
  2043  0000ED                     _Aguarda_str_OK:
  2044                           	opt stack 0
  2045  0000ED                     	ds	2
  2046  0000EF                     _Aguarda_End_Ponteiro:
  2047                           	opt stack 0
  2048  0000EF                     	ds	2
  2049  0000F1                     _Aguarda_Ponteiro:
  2050                           	opt stack 0
  2051  0000F1                     	ds	2
  2052  0000F3                     _AguardaFrames:
  2053                           	opt stack 0
  2054  0000F3                     	ds	2
  2055  0000F5                     __IT_SAVE_STATUS:
  2056                           	opt stack 0
  2057  0000F5                     	ds	1
  2058  0000F6                     __IT_SAVE_WREG:
  2059                           	opt stack 0
  2060  0000F6                     	ds	1
  2061  0000F7                     __IT_SAVE_BSR:
  2062                           	opt stack 0
  2063  0000F7                     	ds	1
  2064  0000F8                     __IT_INT_MASK:
  2065                           	opt stack 0
  2066  0000F8                     	ds	1
  2067  0000F9                     __IT_DATA:
  2068                           	opt stack 0
  2069  0000F9                     	ds	1
  2070  0000FA                     __IT_ID:
  2071                           	opt stack 0
  2072  0000FA                     	ds	1
  2073  0000FB                     _LowCRC:
  2074                           	opt stack 0
  2075  0000FB                     	ds	1
  2076  0000FC                     _strBuffer:
  2077                           	opt stack 0
  2078  0000FC                     	ds	2
  2079                           
  2080                           	psect	bssBANK1
  2081  000194                     __pbssBANK1:
  2082                           	opt stack 0
  2083  000194                     _MEMORIA:
  2084                           	opt stack 0
  2085  000194                     	ds	40
  2086  0001BC                     _contaLed:
  2087                           	opt stack 0
  2088  0001BC                     	ds	4
  2089  0001C0                     _conta:
  2090                           	opt stack 0
  2091  0001C0                     	ds	4
  2092  0001C4                     _offset:
  2093                           	opt stack 0
  2094  0001C4                     	ds	3
  2095  0001C7                     _SELECIONA:
  2096                           	opt stack 0
  2097  0001C7                     	ds	2
  2098  0001C9                     _mudou:
  2099                           	opt stack 0
  2100  0001C9                     	ds	2
  2101  0001CB                     _resultado_polinomio:
  2102                           	opt stack 0
  2103  0001CB                     	ds	2
  2104  0001CD                     _ponteiro_analog:
  2105                           	opt stack 0
  2106  0001CD                     	ds	2
  2107  0001CF                     _Min_Entrada:
  2108                           	opt stack 0
  2109  0001CF                     	ds	2
  2110  0001D1                     _Min_Saida:
  2111                           	opt stack 0
  2112  0001D1                     	ds	2
  2113  0001D3                     _Min_Saida1:
  2114                           	opt stack 0
  2115  0001D3                     	ds	2
  2116  0001D5                     _TimeOut_Threshold:
  2117                           	opt stack 0
  2118  0001D5                     	ds	2
  2119  0001D7                     _TimeoutCount:
  2120                           	opt stack 0
  2121  0001D7                     	ds	2
  2122  0001D9                     _endereco_dispositivo:
  2123                           	opt stack 0
  2124  0001D9                     	ds	2
  2125  0001DB                     _EstadoInterno:
  2126                           	opt stack 0
  2127  0001DB                     	ds	2
  2128  0001DD                     _RecebendoFrames:
  2129                           	opt stack 0
  2130  0001DD                     	ds	2
  2131  0001DF                     _iii:
  2132                           	opt stack 0
  2133  0001DF                     	ds	2
  2134  0001E1                     _tamFrames:
  2135                           	opt stack 0
  2136  0001E1                     	ds	2
  2137  0001E3                     _breakpoint_sw:
  2138                           	opt stack 0
  2139  0001E3                     	ds	2
  2140  0001E5                     _tempo:
  2141                           	opt stack 0
  2142  0001E5                     	ds	2
  2143  0001E7                     _recebeu_r_n:
  2144                           	opt stack 0
  2145  0001E7                     	ds	2
  2146                           
  2147                           	psect	dataBANK1
  2148  0001E9                     __pdataBANK1:
  2149                           	opt stack 0
  2150  0001E9                     verificaERRO@F19991:
  2151                           	opt stack 0
  2152  0001E9                     	ds	6
  2153  0001EF                     trataRespostaHTTP@F20043:
  2154                           	opt stack 0
  2155  0001EF                     	ds	4
  2156  0001F3                     trataRespostaHTTP@F20041:
  2157                           	opt stack 0
  2158  0001F3                     	ds	4
  2159  0001F7                     trataRespostaHTTP@F20039:
  2160                           	opt stack 0
  2161  0001F7                     	ds	4
  2162  0001FB                     verificaFimFrame@F19988:
  2163                           	opt stack 0
  2164  0001FB                     	ds	3
  2165  0001FE                     _Max_Saida10:
  2166                           	opt stack 0
  2167  0001FE                     	ds	2
  2168                           
  2169                           	psect	bssBANK2
  2170  0002D8                     __pbssBANK2:
  2171                           	opt stack 0
  2172  0002D8                     _m:
  2173                           	opt stack 0
  2174  0002D8                     	ds	3
  2175  0002DB                     _valor_AD:
  2176                           	opt stack 0
  2177  0002DB                     	ds	2
  2178  0002DD                     _Max_Entrada:
  2179                           	opt stack 0
  2180  0002DD                     	ds	2
  2181  0002DF                     _Max_Saida:
  2182                           	opt stack 0
  2183  0002DF                     	ds	2
  2184  0002E1                     _ponteiro_USB:
  2185                           	opt stack 0
  2186  0002E1                     	ds	2
  2187  0002E3                     _ponteiro_COMM:
  2188                           	opt stack 0
  2189  0002E3                     	ds	2
  2190  0002E5                     _ponteiro_escrita_USB:
  2191                           	opt stack 0
  2192  0002E5                     	ds	2
  2193  0002E7                     _ponteiro_escrita_COMM:
  2194                           	opt stack 0
  2195  0002E7                     	ds	2
  2196  0002E9                     _primeiro:
  2197                           	opt stack 0
  2198  0002E9                     	ds	2
  2199  0002EB                     _low:
  2200                           	opt stack 0
  2201  0002EB                     	ds	1
  2202  0002EC                     _high:
  2203                           	opt stack 0
  2204  0002EC                     	ds	1
  2205                           
  2206                           	psect	dataBANK2
  2207  0002B0                     __pdataBANK2:
  2208                           	opt stack 0
  2209  0002B0                     _Max_Entrada10:
  2210                           	opt stack 0
  2211  0002B0                     	ds	2
  2212  0002B2                     _Max_Entrada9:
  2213                           	opt stack 0
  2214  0002B2                     	ds	2
  2215  0002B4                     _Max_Saida9:
  2216                           	opt stack 0
  2217  0002B4                     	ds	2
  2218  0002B6                     _Max_Entrada8:
  2219                           	opt stack 0
  2220  0002B6                     	ds	2
  2221  0002B8                     _Max_Saida8:
  2222                           	opt stack 0
  2223  0002B8                     	ds	2
  2224  0002BA                     _Max_Entrada7:
  2225                           	opt stack 0
  2226  0002BA                     	ds	2
  2227  0002BC                     _Max_Saida7:
  2228                           	opt stack 0
  2229  0002BC                     	ds	2
  2230  0002BE                     _Max_Entrada6:
  2231                           	opt stack 0
  2232  0002BE                     	ds	2
  2233  0002C0                     _Max_Saida6:
  2234                           	opt stack 0
  2235  0002C0                     	ds	2
  2236  0002C2                     _Max_Entrada5:
  2237                           	opt stack 0
  2238  0002C2                     	ds	2
  2239  0002C4                     _Max_Saida5:
  2240                           	opt stack 0
  2241  0002C4                     	ds	2
  2242  0002C6                     _Max_Entrada4:
  2243                           	opt stack 0
  2244  0002C6                     	ds	2
  2245  0002C8                     _Max_Saida4:
  2246                           	opt stack 0
  2247  0002C8                     	ds	2
  2248  0002CA                     _Max_Entrada3:
  2249                           	opt stack 0
  2250  0002CA                     	ds	2
  2251  0002CC                     _Max_Saida3:
  2252                           	opt stack 0
  2253  0002CC                     	ds	2
  2254  0002CE                     _Max_Entrada2:
  2255                           	opt stack 0
  2256  0002CE                     	ds	2
  2257  0002D0                     _Max_Saida2:
  2258                           	opt stack 0
  2259  0002D0                     	ds	2
  2260  0002D2                     _Min_Entrada1:
  2261                           	opt stack 0
  2262  0002D2                     	ds	2
  2263  0002D4                     _Max_Entrada1:
  2264                           	opt stack 0
  2265  0002D4                     	ds	2
  2266  0002D6                     _Max_Saida1:
  2267                           	opt stack 0
  2268  0002D6                     	ds	2
  2269                           
  2270                           	psect	bssBANK3
  2271  000300                     __pbssBANK3:
  2272                           	opt stack 0
  2273  000300                     _Aguarda_Resposta:
  2274                           	opt stack 0
  2275  000300                     	ds	100
  2276  000364                     _Registros:
  2277                           	opt stack 0
  2278  000364                     	ds	40
  2279  00038C                     _text:
  2280                           	opt stack 0
  2281  00038C                     	ds	10
  2282  000396                     _Aguarda_end_frame:
  2283                           	opt stack 0
  2284  000396                     	ds	10
  2285  0003A0                     _Aguarda_error:
  2286                           	opt stack 0
  2287  0003A0                     	ds	10
  2288  0003AA                     _Aguarda_str:
  2289                           	opt stack 0
  2290  0003AA                     	ds	20
  2291  0003BE                     _MACAddress:
  2292                           	opt stack 0
  2293  0003BE                     	ds	18
  2294  0003D0                     _Aguarda_end:
  2295                           	opt stack 0
  2296  0003D0                     	ds	10
  2297                           
  2298                           	psect	bssBANK4
  2299  000400                     __pbssBANK4:
  2300                           	opt stack 0
  2301  000400                     _nodeId:
  2302                           	opt stack 0
  2303  000400                     	ds	60
  2304  00043C                     _networkId:
  2305                           	opt stack 0
  2306  00043C                     	ds	60
  2307  000478                     _result:
  2308                           	opt stack 0
  2309  000478                     	ds	60
  2310  0004B4                     _address:
  2311                           	opt stack 0
  2312  0004B4                     	ds	60
  2313                           
  2314                           	psect	bssBANK5
  2315  000500                     __pbssBANK5:
  2316                           	opt stack 0
  2317  000500                     _samples:
  2318                           	opt stack 0
  2319  000500                     	ds	100
  2320  000564                     _size:
  2321                           	opt stack 0
  2322  000564                     	ds	60
  2323  0005A0                     _functionCode:
  2324                           	opt stack 0
  2325  0005A0                     	ds	60
  2326                           
  2327                           	psect	bssBANK6
  2328  000600                     __pbssBANK6:
  2329                           	opt stack 0
  2330  000600                     _buffer_escrita_USB:
  2331                           	opt stack 0
  2332  000600                     	ds	150
  2333                           
  2334                           	psect	bssBANK7
  2335  000700                     __pbssBANK7:
  2336                           	opt stack 0
  2337  000700                     _buffer_escrita_comm:
  2338                           	opt stack 0
  2339  000700                     	ds	150
  2340                           
  2341                           	psect	bssBANK8
  2342  000800                     __pbssBANK8:
  2343                           	opt stack 0
  2344  000800                     _value:
  2345                           	opt stack 0
  2346  000800                     	ds	120
  2347                           
  2348                           	psect	bssBANK9
  2349  000900                     __pbssBANK9:
  2350                           	opt stack 0
  2351  000900                     _buffer_leitura_comm:
  2352                           	opt stack 0
  2353  000900                     	ds	150
  2354                           
  2355                           	psect	bssBANK10
  2356  000A00                     __pbssBANK10:
  2357                           	opt stack 0
  2358  000A00                     _buffer_leitura_USB:
  2359                           	opt stack 0
  2360  000A00                     	ds	150
  2361                           
  2362                           	psect	bssBIGRAM
  2363  000A96                     __pbssBIGRAM:
  2364                           	opt stack 0
  2365  000A96                     _frameId:
  2366                           	opt stack 0
  2367  000A96                     	ds	1110
  2368                           
  2369                           	psect	cstackBANK3
  2370  0003DA                     __pcstackBANK3:
  2371                           	opt stack 0
  2372  0003DA                     main@i2:
  2373                           	opt stack 0
  2374                           
  2375                           ; 4 bytes @ 0x0
  2376  0003DA                     	ds	4
  2377  0003DE                     main@motivo:
  2378                           	opt stack 0
  2379                           
  2380                           ; 20 bytes @ 0x4
  2381  0003DE                     	ds	20
  2382                           
  2383                           	psect	cstackBANK2
  2384  000200                     __pcstackBANK2:
  2385                           	opt stack 0
  2386  000200                     ??_Interrupt_WIFI_GSM:
  2387                           
  2388                           ; 1 bytes @ 0x0
  2389  000200                     	ds	5
  2390  000205                     ??_InicializaWifi:
  2391  000205                     ??_isdigit:
  2392  000205                     ?_TransmiteBuffer_COMM:
  2393                           	opt stack 0
  2394  000205                     ?_TransmiteBuffer_USB:
  2395                           	opt stack 0
  2396  000205                     ?___awmod:
  2397                           	opt stack 0
  2398  000205                     ?___ftpack:
  2399                           	opt stack 0
  2400  000205                     ?__tdiv_to_l_:
  2401                           	opt stack 0
  2402  000205                     ?__div_to_l_:
  2403                           	opt stack 0
  2404  000205                     ?___aldiv:
  2405                           	opt stack 0
  2406  000205                     ?___lldiv:
  2407                           	opt stack 0
  2408  000205                     Buffer_Escrita_USB_Add_Char@dado:
  2409                           	opt stack 0
  2410  000205                     ___awmod@dividend:
  2411                           	opt stack 0
  2412  000205                     __div_to_l_@f1:
  2413                           	opt stack 0
  2414  000205                     ___ftpack@arg:
  2415                           	opt stack 0
  2416  000205                     __tdiv_to_l_@f1:
  2417                           	opt stack 0
  2418  000205                     ___aldiv@dividend:
  2419                           	opt stack 0
  2420  000205                     ___lldiv@dividend:
  2421                           	opt stack 0
  2422                           
  2423                           ; 4 bytes @ 0x5
  2424  000205                     	ds	1
  2425  000206                     _isdigit$2412:
  2426                           	opt stack 0
  2427                           
  2428                           ; 1 bytes @ 0x6
  2429  000206                     	ds	1
  2430  000207                     isdigit@c:
  2431                           	opt stack 0
  2432  000207                     Buffer_Escrita_USB_Add_String@dado:
  2433                           	opt stack 0
  2434  000207                     ___awmod@divisor:
  2435                           	opt stack 0
  2436                           
  2437                           ; 2 bytes @ 0x7
  2438  000207                     	ds	1
  2439  000208                     ___ftpack@exp:
  2440                           	opt stack 0
  2441  000208                     __div_to_l_@f2:
  2442                           	opt stack 0
  2443  000208                     __tdiv_to_l_@f2:
  2444                           	opt stack 0
  2445                           
  2446                           ; 3 bytes @ 0x8
  2447  000208                     	ds	1
  2448  000209                     ___awmod@counter:
  2449                           	opt stack 0
  2450  000209                     ___ftpack@sign:
  2451                           	opt stack 0
  2452  000209                     Buffer_Escrita_USB_Add_String@aguarda:
  2453                           	opt stack 0
  2454  000209                     ___aldiv@divisor:
  2455                           	opt stack 0
  2456  000209                     ___lldiv@divisor:
  2457                           	opt stack 0
  2458                           
  2459                           ; 4 bytes @ 0x9
  2460  000209                     	ds	1
  2461  00020A                     ??___ftpack:
  2462  00020A                     ___awmod@sign:
  2463                           	opt stack 0
  2464                           
  2465                           ; 1 bytes @ 0xA
  2466  00020A                     	ds	1
  2467  00020B                     ??_Buffer_Escrita_USB_Add_String:
  2468  00020B                     ??__tdiv_to_l_:
  2469  00020B                     ?___awdiv:
  2470                           	opt stack 0
  2471  00020B                     ___awdiv@dividend:
  2472                           	opt stack 0
  2473  00020B                     __div_to_l_@quot:
  2474                           	opt stack 0
  2475                           
  2476                           ; 4 bytes @ 0xB
  2477  00020B                     	ds	2
  2478  00020D                     ?___awtoft:
  2479                           	opt stack 0
  2480  00020D                     ___aldiv@counter:
  2481                           	opt stack 0
  2482  00020D                     Buffer_Escrita_USB_Add_String@i:
  2483                           	opt stack 0
  2484  00020D                     ___awdiv@divisor:
  2485                           	opt stack 0
  2486  00020D                     ___awtoft@c:
  2487                           	opt stack 0
  2488  00020D                     ___lldiv@quotient:
  2489                           	opt stack 0
  2490                           
  2491                           ; 4 bytes @ 0xD
  2492  00020D                     	ds	1
  2493  00020E                     ___aldiv@sign:
  2494                           	opt stack 0
  2495  00020E                     __tdiv_to_l_@quot:
  2496                           	opt stack 0
  2497                           
  2498                           ; 4 bytes @ 0xE
  2499  00020E                     	ds	1
  2500  00020F                     ___awdiv@counter:
  2501                           	opt stack 0
  2502  00020F                     __div_to_l_@cntr:
  2503                           	opt stack 0
  2504  00020F                     ___aldiv@quotient:
  2505                           	opt stack 0
  2506                           
  2507                           ; 4 bytes @ 0xF
  2508  00020F                     	ds	1
  2509  000210                     ___awdiv@sign:
  2510                           	opt stack 0
  2511  000210                     ___awtoft@sign:
  2512                           	opt stack 0
  2513  000210                     __div_to_l_@exp1:
  2514                           	opt stack 0
  2515                           
  2516                           ; 1 bytes @ 0x10
  2517  000210                     	ds	1
  2518  000211                     ___lldiv@counter:
  2519                           	opt stack 0
  2520  000211                     ___awdiv@quotient:
  2521                           	opt stack 0
  2522                           
  2523                           ; 2 bytes @ 0x11
  2524  000211                     	ds	1
  2525  000212                     ?___llmod:
  2526                           	opt stack 0
  2527  000212                     __tdiv_to_l_@cntr:
  2528                           	opt stack 0
  2529  000212                     ___llmod@dividend:
  2530                           	opt stack 0
  2531                           
  2532                           ; 4 bytes @ 0x12
  2533  000212                     	ds	1
  2534  000213                     ?___wmul:
  2535                           	opt stack 0
  2536  000213                     ?_Calcula_BaudRate:
  2537                           	opt stack 0
  2538  000213                     __tdiv_to_l_@exp1:
  2539                           	opt stack 0
  2540  000213                     ___wmul@multiplier:
  2541                           	opt stack 0
  2542  000213                     Calcula_BaudRate@BaudRate:
  2543                           	opt stack 0
  2544                           
  2545                           ; 4 bytes @ 0x13
  2546  000213                     	ds	2
  2547  000215                     ___wmul@multiplicand:
  2548                           	opt stack 0
  2549                           
  2550                           ; 2 bytes @ 0x15
  2551  000215                     	ds	1
  2552  000216                     ___llmod@divisor:
  2553                           	opt stack 0
  2554                           
  2555                           ; 4 bytes @ 0x16
  2556  000216                     	ds	1
  2557  000217                     ___wmul@product:
  2558                           	opt stack 0
  2559  000217                     Calcula_BaudRate@baud:
  2560                           	opt stack 0
  2561                           
  2562                           ; 4 bytes @ 0x17
  2563  000217                     	ds	2
  2564  000219                     ?___ftmul:
  2565                           	opt stack 0
  2566  000219                     ___ftmul@f1:
  2567                           	opt stack 0
  2568                           
  2569                           ; 3 bytes @ 0x19
  2570  000219                     	ds	1
  2571  00021A                     ___llmod@counter:
  2572                           	opt stack 0
  2573                           
  2574                           ; 1 bytes @ 0x1A
  2575  00021A                     	ds	1
  2576  00021B                     Abre_Porta_1@PORTA:
  2577                           	opt stack 0
  2578  00021B                     Abre_Porta_COMM@BaudRate:
  2579                           	opt stack 0
  2580                           
  2581                           ; 4 bytes @ 0x1B
  2582  00021B                     	ds	1
  2583  00021C                     ___ftmul@f2:
  2584                           	opt stack 0
  2585                           
  2586                           ; 3 bytes @ 0x1C
  2587  00021C                     	ds	1
  2588  00021D                     Abre_Porta_1@BaudRate:
  2589                           	opt stack 0
  2590                           
  2591                           ; 4 bytes @ 0x1D
  2592  00021D                     	ds	2
  2593  00021F                     ??___ftmul:
  2594  00021F                     Abre_Porta_COMM@baud:
  2595                           	opt stack 0
  2596                           
  2597                           ; 4 bytes @ 0x1F
  2598  00021F                     	ds	2
  2599  000221                     Abre_Porta_1@baud:
  2600                           	opt stack 0
  2601                           
  2602                           ; 4 bytes @ 0x21
  2603  000221                     	ds	1
  2604  000222                     ___ftmul@exp:
  2605                           	opt stack 0
  2606                           
  2607                           ; 1 bytes @ 0x22
  2608  000222                     	ds	1
  2609  000223                     ___ftmul@f3_as_product:
  2610                           	opt stack 0
  2611                           
  2612                           ; 3 bytes @ 0x23
  2613  000223                     	ds	3
  2614  000226                     ___ftmul@cntr:
  2615                           	opt stack 0
  2616                           
  2617                           ; 1 bytes @ 0x26
  2618  000226                     	ds	1
  2619  000227                     ___ftmul@sign:
  2620                           	opt stack 0
  2621                           
  2622                           ; 1 bytes @ 0x27
  2623  000227                     	ds	1
  2624  000228                     ?_fround:
  2625                           	opt stack 0
  2626  000228                     ?_scale:
  2627                           	opt stack 0
  2628                           
  2629                           ; 3 bytes @ 0x28
  2630  000228                     	ds	3
  2631  00022B                     _fround$2799:
  2632                           	opt stack 0
  2633  00022B                     _scale$2800:
  2634                           	opt stack 0
  2635                           
  2636                           ; 3 bytes @ 0x2B
  2637  00022B                     	ds	3
  2638  00022E                     scale@scl:
  2639                           	opt stack 0
  2640  00022E                     _fround$2798:
  2641                           	opt stack 0
  2642                           
  2643                           ; 3 bytes @ 0x2E
  2644  00022E                     	ds	1
  2645  00022F                     ?___ftdiv:
  2646                           	opt stack 0
  2647  00022F                     ___ftdiv@f1:
  2648                           	opt stack 0
  2649                           
  2650                           ; 3 bytes @ 0x2F
  2651  00022F                     	ds	2
  2652  000231                     fround@prec:
  2653                           	opt stack 0
  2654                           
  2655                           ; 1 bytes @ 0x31
  2656  000231                     	ds	1
  2657  000232                     ?___ftadd:
  2658                           	opt stack 0
  2659  000232                     ___ftadd@f1:
  2660                           	opt stack 0
  2661  000232                     ___ftdiv@f2:
  2662                           	opt stack 0
  2663                           
  2664                           ; 3 bytes @ 0x32
  2665  000232                     	ds	3
  2666  000235                     ??___ftdiv:
  2667  000235                     ___ftadd@f2:
  2668                           	opt stack 0
  2669                           
  2670                           ; 3 bytes @ 0x35
  2671  000235                     	ds	3
  2672  000238                     ??___ftadd:
  2673  000238                     ___ftdiv@cntr:
  2674                           	opt stack 0
  2675                           
  2676                           ; 1 bytes @ 0x38
  2677  000238                     	ds	1
  2678  000239                     ___ftdiv@f3:
  2679                           	opt stack 0
  2680                           
  2681                           ; 3 bytes @ 0x39
  2682  000239                     	ds	2
  2683  00023B                     ___ftadd@sign:
  2684                           	opt stack 0
  2685                           
  2686                           ; 1 bytes @ 0x3B
  2687  00023B                     	ds	1
  2688  00023C                     ___ftadd@exp2:
  2689                           	opt stack 0
  2690  00023C                     ___ftdiv@exp:
  2691                           	opt stack 0
  2692                           
  2693                           ; 1 bytes @ 0x3C
  2694  00023C                     	ds	1
  2695  00023D                     ___ftadd@exp1:
  2696                           	opt stack 0
  2697  00023D                     ___ftdiv@sign:
  2698                           	opt stack 0
  2699                           
  2700                           ; 1 bytes @ 0x3D
  2701  00023D                     	ds	1
  2702  00023E                     ??_Calcula_Fator_m:
  2703  00023E                     ?___fttol:
  2704                           	opt stack 0
  2705  00023E                     ___fttol@f1:
  2706                           	opt stack 0
  2707                           
  2708                           ; 3 bytes @ 0x3E
  2709  00023E                     	ds	2
  2710  000240                     Calcula_Fator_m@mX:
  2711                           	opt stack 0
  2712                           
  2713                           ; 3 bytes @ 0x40
  2714  000240                     	ds	2
  2715  000242                     ??___fttol:
  2716                           
  2717                           ; 1 bytes @ 0x42
  2718  000242                     	ds	1
  2719  000243                     Calcula_Fator_m@mY:
  2720                           	opt stack 0
  2721                           
  2722                           ; 3 bytes @ 0x43
  2723  000243                     	ds	3
  2724  000246                     ajusta_escala@valor:
  2725                           	opt stack 0
  2726                           
  2727                           ; 2 bytes @ 0x46
  2728  000246                     	ds	1
  2729  000247                     ___fttol@sign1:
  2730                           	opt stack 0
  2731                           
  2732                           ; 1 bytes @ 0x47
  2733  000247                     	ds	1
  2734  000248                     ??_ajusta_escala:
  2735  000248                     ___fttol@lval:
  2736                           	opt stack 0
  2737                           
  2738                           ; 4 bytes @ 0x48
  2739  000248                     	ds	4
  2740  00024C                     ___fttol@exp1:
  2741                           	opt stack 0
  2742                           
  2743                           ; 1 bytes @ 0x4C
  2744  00024C                     	ds	1
  2745  00024D                     ?___altoft:
  2746                           	opt stack 0
  2747  00024D                     ?___lltoft:
  2748                           	opt stack 0
  2749  00024D                     ___altoft@c:
  2750                           	opt stack 0
  2751  00024D                     ___lltoft@c:
  2752                           	opt stack 0
  2753                           
  2754                           ; 4 bytes @ 0x4D
  2755  00024D                     	ds	4
  2756  000251                     ??___altoft:
  2757  000251                     ??___lltoft:
  2758                           
  2759                           ; 1 bytes @ 0x51
  2760  000251                     	ds	4
  2761  000255                     ___altoft@exp:
  2762                           	opt stack 0
  2763  000255                     ___lltoft@exp:
  2764                           	opt stack 0
  2765                           
  2766                           ; 1 bytes @ 0x55
  2767  000255                     	ds	1
  2768  000256                     ?___ftsub:
  2769                           	opt stack 0
  2770  000256                     ?___ftneg:
  2771                           	opt stack 0
  2772  000256                     ___altoft@sign:
  2773                           	opt stack 0
  2774  000256                     ___ftneg@f1:
  2775                           	opt stack 0
  2776  000256                     ___ftsub@f1:
  2777                           	opt stack 0
  2778                           
  2779                           ; 3 bytes @ 0x56
  2780  000256                     	ds	1
  2781  000257                     ??_Converte_Escala:
  2782                           
  2783                           ; 1 bytes @ 0x57
  2784  000257                     	ds	2
  2785  000259                     ___ftge@ff1:
  2786                           	opt stack 0
  2787  000259                     ___ftsub@f2:
  2788                           	opt stack 0
  2789                           
  2790                           ; 3 bytes @ 0x59
  2791  000259                     	ds	3
  2792  00025C                     ___ftge@ff2:
  2793                           	opt stack 0
  2794                           
  2795                           ; 3 bytes @ 0x5C
  2796  00025C                     	ds	3
  2797  00025F                     ??___ftge:
  2798                           
  2799                           ; 1 bytes @ 0x5F
  2800  00025F                     	ds	3
  2801  000262                     ?_sprintf:
  2802                           	opt stack 0
  2803  000262                     sprintf@sp:
  2804                           	opt stack 0
  2805                           
  2806                           ; 2 bytes @ 0x62
  2807  000262                     	ds	2
  2808  000264                     sprintf@f:
  2809                           	opt stack 0
  2810                           
  2811                           ; 2 bytes @ 0x64
  2812  000264                     	ds	9
  2813  00026D                     ??_sprintf:
  2814                           
  2815                           ; 1 bytes @ 0x6D
  2816  00026D                     	ds	6
  2817  000273                     _sprintf$2801:
  2818                           	opt stack 0
  2819                           
  2820                           ; 3 bytes @ 0x73
  2821  000273                     	ds	3
  2822  000276                     sprintf@idx:
  2823                           	opt stack 0
  2824                           
  2825                           ; 1 bytes @ 0x76
  2826  000276                     	ds	1
  2827  000277                     _sprintf$2169:
  2828                           	opt stack 0
  2829                           
  2830                           ; 2 bytes @ 0x77
  2831  000277                     	ds	2
  2832  000279                     _sprintf$2170:
  2833                           	opt stack 0
  2834                           
  2835                           ; 2 bytes @ 0x79
  2836  000279                     	ds	2
  2837  00027B                     _sprintf$2173:
  2838                           	opt stack 0
  2839                           
  2840                           ; 2 bytes @ 0x7B
  2841  00027B                     	ds	2
  2842  00027D                     _sprintf$2174:
  2843                           	opt stack 0
  2844                           
  2845                           ; 2 bytes @ 0x7D
  2846  00027D                     	ds	2
  2847  00027F                     _sprintf$2175:
  2848                           	opt stack 0
  2849                           
  2850                           ; 2 bytes @ 0x7F
  2851  00027F                     	ds	2
  2852  000281                     _sprintf$2176:
  2853                           	opt stack 0
  2854                           
  2855                           ; 2 bytes @ 0x81
  2856  000281                     	ds	2
  2857  000283                     sprintf@temp:
  2858                           	opt stack 0
  2859                           
  2860                           ; 3 bytes @ 0x83
  2861  000283                     	ds	3
  2862  000286                     sprintf@cp:
  2863                           	opt stack 0
  2864                           
  2865                           ; 2 bytes @ 0x86
  2866  000286                     	ds	2
  2867  000288                     sprintf@len:
  2868                           	opt stack 0
  2869                           
  2870                           ; 2 bytes @ 0x88
  2871  000288                     	ds	2
  2872  00028A                     sprintf@ap:
  2873                           	opt stack 0
  2874                           
  2875                           ; 2 bytes @ 0x8A
  2876  00028A                     	ds	2
  2877  00028C                     sprintf@tmpval:
  2878                           	opt stack 0
  2879                           
  2880                           ; 4 bytes @ 0x8C
  2881  00028C                     	ds	4
  2882  000290                     sprintf@exp:
  2883                           	opt stack 0
  2884                           
  2885                           ; 2 bytes @ 0x90
  2886  000290                     	ds	2
  2887  000292                     sprintf@width:
  2888                           	opt stack 0
  2889                           
  2890                           ; 2 bytes @ 0x92
  2891  000292                     	ds	2
  2892  000294                     sprintf@val:
  2893                           	opt stack 0
  2894                           
  2895                           ; 4 bytes @ 0x94
  2896  000294                     	ds	4
  2897  000298                     sprintf@fval:
  2898                           	opt stack 0
  2899                           
  2900                           ; 3 bytes @ 0x98
  2901  000298                     	ds	3
  2902  00029B                     sprintf@prec:
  2903                           	opt stack 0
  2904                           
  2905                           ; 2 bytes @ 0x9B
  2906  00029B                     	ds	2
  2907  00029D                     sprintf@c:
  2908                           	opt stack 0
  2909                           
  2910                           ; 1 bytes @ 0x9D
  2911  00029D                     	ds	1
  2912  00029E                     sprintf@flag:
  2913                           	opt stack 0
  2914                           
  2915                           ; 2 bytes @ 0x9E
  2916  00029E                     	ds	2
  2917  0002A0                     ??_Verifica_Analogica:
  2918  0002A0                     Aguarda_dado@inicio:
  2919                           	opt stack 0
  2920                           
  2921                           ; 2 bytes @ 0xA0
  2922  0002A0                     	ds	2
  2923  0002A2                     Aguarda_dado@fim:
  2924                           	opt stack 0
  2925                           
  2926                           ; 2 bytes @ 0xA2
  2927  0002A2                     	ds	2
  2928  0002A4                     Aguarda_dado@error:
  2929                           	opt stack 0
  2930  0002A4                     Verifica_Analogica@valoradstr:
  2931                           	opt stack 0
  2932                           
  2933                           ; 10 bytes @ 0xA4
  2934  0002A4                     	ds	2
  2935  0002A6                     Aguarda_dado@ff:
  2936                           	opt stack 0
  2937                           
  2938                           ; 2 bytes @ 0xA6
  2939  0002A6                     	ds	2
  2940  0002A8                     
  2941                           ; 1 bytes @ 0xA8
  2942  0002A8                     	ds	6
  2943  0002AE                     ??_main:
  2944                           
  2945                           ; 1 bytes @ 0xAE
  2946  0002AE                     	ds	2
  2947                           
  2948                           	psect	cstackBANK1
  2949  000100                     __pcstackBANK1:
  2950                           	opt stack 0
  2951  000100                     append_Arquivo_Json@linhaArquivo:
  2952                           	opt stack 0
  2953                           
  2954                           ; 120 bytes @ 0x0
  2955  000100                     	ds	120
  2956  000178                     append_Arquivo_Json@valorMem:
  2957                           	opt stack 0
  2958                           
  2959                           ; 4 bytes @ 0x78
  2960  000178                     	ds	4
  2961  00017C                     _append_Arquivo_Json$3004:
  2962                           	opt stack 0
  2963                           
  2964                           ; 2 bytes @ 0x7C
  2965  00017C                     	ds	2
  2966  00017E                     append_Arquivo_Json@primeiro:
  2967                           	opt stack 0
  2968                           
  2969                           ; 2 bytes @ 0x7E
  2970  00017E                     	ds	2
  2971  000180                     append_Arquivo_Json@virgula:
  2972                           	opt stack 0
  2973                           
  2974                           ; 2 bytes @ 0x80
  2975  000180                     	ds	2
  2976  000182                     append_Arquivo_Json@i:
  2977                           	opt stack 0
  2978                           
  2979                           ; 2 bytes @ 0x82
  2980  000182                     	ds	2
  2981  000184                     append_Arquivo_Json@valorMem_Char:
  2982                           	opt stack 0
  2983                           
  2984                           ; 10 bytes @ 0x84
  2985  000184                     	ds	10
  2986  00018E                     append_Arquivo_Json@resultado:
  2987                           	opt stack 0
  2988                           
  2989                           ; 6 bytes @ 0x8E
  2990  00018E                     	ds	6
  2991                           
  2992                           	psect	cstackBANK0
  2993  000060                     __pcstackBANK0:
  2994                           	opt stack 0
  2995  000060                     ?i1___ftsub:
  2996                           	opt stack 0
  2997  000060                     i1___ftge@ff1:
  2998                           	opt stack 0
  2999  000060                     i1___ftsub@f1:
  3000                           	opt stack 0
  3001                           
  3002                           ; 3 bytes @ 0x0
  3003  000060                     	ds	3
  3004  000063                     i1___ftge@ff2:
  3005                           	opt stack 0
  3006  000063                     i1___ftsub@f2:
  3007                           	opt stack 0
  3008                           
  3009                           ; 3 bytes @ 0x3
  3010  000063                     	ds	3
  3011  000066                     ??i1___ftge:
  3012                           
  3013                           ; 1 bytes @ 0x6
  3014  000066                     	ds	3
  3015  000069                     ?i1_sprintf:
  3016                           	opt stack 0
  3017  000069                     i1sprintf@sp:
  3018                           	opt stack 0
  3019                           
  3020                           ; 2 bytes @ 0x9
  3021  000069                     	ds	2
  3022  00006B                     i1sprintf@f:
  3023                           	opt stack 0
  3024                           
  3025                           ; 2 bytes @ 0xB
  3026  00006B                     	ds	24
  3027  000083                     ??i1_sprintf:
  3028                           
  3029                           ; 1 bytes @ 0x23
  3030  000083                     	ds	6
  3031  000089                     i1_sprintf$3008:
  3032                           	opt stack 0
  3033                           
  3034                           ; 3 bytes @ 0x29
  3035  000089                     	ds	3
  3036  00008C                     i1sprintf@idx:
  3037                           	opt stack 0
  3038                           
  3039                           ; 1 bytes @ 0x2C
  3040  00008C                     	ds	1
  3041  00008D                     i1_sprintf$2169:
  3042                           	opt stack 0
  3043                           
  3044                           ; 2 bytes @ 0x2D
  3045  00008D                     	ds	2
  3046  00008F                     i1_sprintf$2170:
  3047                           	opt stack 0
  3048                           
  3049                           ; 2 bytes @ 0x2F
  3050  00008F                     	ds	2
  3051  000091                     i1_sprintf$2173:
  3052                           	opt stack 0
  3053                           
  3054                           ; 2 bytes @ 0x31
  3055  000091                     	ds	2
  3056  000093                     i1_sprintf$2174:
  3057                           	opt stack 0
  3058                           
  3059                           ; 2 bytes @ 0x33
  3060  000093                     	ds	2
  3061  000095                     i1_sprintf$2175:
  3062                           	opt stack 0
  3063                           
  3064                           ; 2 bytes @ 0x35
  3065  000095                     	ds	2
  3066  000097                     i1_sprintf$2176:
  3067                           	opt stack 0
  3068                           
  3069                           ; 2 bytes @ 0x37
  3070  000097                     	ds	2
  3071  000099                     i1sprintf@temp:
  3072                           	opt stack 0
  3073                           
  3074                           ; 3 bytes @ 0x39
  3075  000099                     	ds	3
  3076  00009C                     i1sprintf@cp:
  3077                           	opt stack 0
  3078                           
  3079                           ; 2 bytes @ 0x3C
  3080  00009C                     	ds	2
  3081  00009E                     i1sprintf@len:
  3082                           	opt stack 0
  3083                           
  3084                           ; 2 bytes @ 0x3E
  3085  00009E                     	ds	2
  3086  0000A0                     i1sprintf@ap:
  3087                           	opt stack 0
  3088                           
  3089                           ; 2 bytes @ 0x40
  3090  0000A0                     	ds	2
  3091  0000A2                     i1sprintf@tmpval:
  3092                           	opt stack 0
  3093                           
  3094                           ; 4 bytes @ 0x42
  3095  0000A2                     	ds	4
  3096  0000A6                     i1sprintf@exp:
  3097                           	opt stack 0
  3098                           
  3099                           ; 2 bytes @ 0x46
  3100  0000A6                     	ds	2
  3101  0000A8                     i1sprintf@width:
  3102                           	opt stack 0
  3103                           
  3104                           ; 2 bytes @ 0x48
  3105  0000A8                     	ds	2
  3106  0000AA                     i1sprintf@val:
  3107                           	opt stack 0
  3108                           
  3109                           ; 4 bytes @ 0x4A
  3110  0000AA                     	ds	4
  3111  0000AE                     i1sprintf@fval:
  3112                           	opt stack 0
  3113                           
  3114                           ; 3 bytes @ 0x4E
  3115  0000AE                     	ds	3
  3116  0000B1                     i1sprintf@prec:
  3117                           	opt stack 0
  3118                           
  3119                           ; 2 bytes @ 0x51
  3120  0000B1                     	ds	2
  3121  0000B3                     i1sprintf@c:
  3122                           	opt stack 0
  3123                           
  3124                           ; 1 bytes @ 0x53
  3125  0000B3                     	ds	1
  3126  0000B4                     i1sprintf@flag:
  3127                           	opt stack 0
  3128                           
  3129                           ; 2 bytes @ 0x54
  3130  0000B4                     	ds	2
  3131  0000B6                     cria_Arquivo@nome:
  3132                           	opt stack 0
  3133  0000B6                     i1Aguarda_dado@inicio:
  3134                           	opt stack 0
  3135                           
  3136                           ; 2 bytes @ 0x56
  3137  0000B6                     	ds	2
  3138  0000B8                     cria_Arquivo@dado:
  3139                           	opt stack 0
  3140  0000B8                     i1Aguarda_dado@fim:
  3141                           	opt stack 0
  3142                           
  3143                           ; 2 bytes @ 0x58
  3144  0000B8                     	ds	2
  3145  0000BA                     cria_Arquivo@tam:
  3146                           	opt stack 0
  3147  0000BA                     i1Aguarda_dado@error:
  3148                           	opt stack 0
  3149                           
  3150                           ; 2 bytes @ 0x5A
  3151  0000BA                     	ds	2
  3152  0000BC                     i1Aguarda_dado@ff:
  3153                           	opt stack 0
  3154  0000BC                     cria_Arquivo@tamanho:
  3155                           	opt stack 0
  3156                           
  3157                           ; 15 bytes @ 0x5C
  3158  0000BC                     	ds	2
  3159  0000BE                     ??_recebeFRAMEID:
  3160  0000BE                     recebeNETWORKID@para:
  3161                           	opt stack 0
  3162                           
  3163                           ; 2 bytes @ 0x5E
  3164  0000BE                     	ds	2
  3165  0000C0                     recebeNETWORKID@i:
  3166                           	opt stack 0
  3167                           
  3168                           ; 2 bytes @ 0x60
  3169  0000C0                     	ds	11
  3170  0000CB                     ??_append_Arquivo_Json:
  3171                           
  3172                           ; 1 bytes @ 0x6B
  3173  0000CB                     	ds	4
  3174  0000CF                     ??_inicia_Post:
  3175                           
  3176                           ; 1 bytes @ 0x6F
  3177  0000CF                     	ds	2
  3178  0000D1                     SETMACAddr@i:
  3179                           	opt stack 0
  3180                           
  3181                           ; 2 bytes @ 0x71
  3182  0000D1                     	ds	2
  3183  0000D3                     ??_AguardaINT:
  3184                           
  3185                           ; 1 bytes @ 0x73
  3186  0000D3                     	ds	2
  3187  0000D5                     AguardaINT@dado:
  3188                           	opt stack 0
  3189                           
  3190                           ; 1 bytes @ 0x75
  3191  0000D5                     	ds	1
  3192  0000D6                     Interrupt_WIFI_GSM@lido:
  3193                           	opt stack 0
  3194                           
  3195                           ; 1 bytes @ 0x76
  3196  0000D6                     	ds	1
  3197                           
  3198                           	psect	cstackCOMRAM
  3199  000001                     __pcstackCOMRAM:
  3200                           	opt stack 0
  3201  000001                     
  3202                           ; 1 bytes @ 0x0
  3203  000001                     	ds	1
  3204  000002                     ??_Interrupt_USB_485:
  3205                           
  3206                           ; 1 bytes @ 0x1
  3207  000002                     	ds	1
  3208  000003                     Interrupt_USB_485@lido:
  3209                           	opt stack 0
  3210                           
  3211                           ; 1 bytes @ 0x2
  3212  000003                     	ds	1
  3213  000004                     ??i1_isdigit:
  3214  000004                     ?_length:
  3215                           	opt stack 0
  3216  000004                     ?i1_TransmiteBuffer_USB:
  3217                           	opt stack 0
  3218  000004                     ?i1_TransmiteBuffer_COMM:
  3219                           	opt stack 0
  3220  000004                     ?i1___awmod:
  3221                           	opt stack 0
  3222  000004                     ?i1___ftpack:
  3223                           	opt stack 0
  3224  000004                     ?i1__div_to_l_:
  3225                           	opt stack 0
  3226  000004                     ?i1__tdiv_to_l_:
  3227                           	opt stack 0
  3228  000004                     ?i1___lldiv:
  3229                           	opt stack 0
  3230  000004                     Buffer_Escrita_COMM_Add_Char@dado:
  3231                           	opt stack 0
  3232  000004                     i1Buffer_Escrita_USB_Add_Char@dado:
  3233                           	opt stack 0
  3234  000004                     limpa_Buffer_Escrita_USB@i:
  3235                           	opt stack 0
  3236  000004                     limpa_Buffer_Escrita_COMM@i:
  3237                           	opt stack 0
  3238  000004                     length@dado:
  3239                           	opt stack 0
  3240  000004                     i1___awmod@dividend:
  3241                           	opt stack 0
  3242  000004                     i1__div_to_l_@f1:
  3243                           	opt stack 0
  3244  000004                     i1___ftpack@arg:
  3245                           	opt stack 0
  3246  000004                     i1__tdiv_to_l_@f1:
  3247                           	opt stack 0
  3248  000004                     i1___lldiv@dividend:
  3249                           	opt stack 0
  3250                           
  3251                           ; 4 bytes @ 0x3
  3252  000004                     	ds	1
  3253  000005                     i1_isdigit$2412:
  3254                           	opt stack 0
  3255  000005                     verificaFimFrame@FIM:
  3256                           	opt stack 0
  3257  000005                     verificaERRO@ERRO:
  3258                           	opt stack 0
  3259                           
  3260                           ; 6 bytes @ 0x4
  3261  000005                     	ds	1
  3262  000006                     ??_length:
  3263  000006                     i1isdigit@c:
  3264                           	opt stack 0
  3265  000006                     Buffer_Escrita_COMM_Add_String@dado:
  3266                           	opt stack 0
  3267  000006                     i1Buffer_Escrita_USB_Add_String@dado:
  3268                           	opt stack 0
  3269  000006                     i1___awmod@divisor:
  3270                           	opt stack 0
  3271                           
  3272                           ; 2 bytes @ 0x5
  3273  000006                     	ds	1
  3274  000007                     i1___ftpack@exp:
  3275                           	opt stack 0
  3276  000007                     i1__div_to_l_@f2:
  3277                           	opt stack 0
  3278  000007                     i1__tdiv_to_l_@f2:
  3279                           	opt stack 0
  3280                           
  3281                           ; 3 bytes @ 0x6
  3282  000007                     	ds	1
  3283  000008                     verificaFimFrame@dado:
  3284                           	opt stack 0
  3285  000008                     i1___awmod@counter:
  3286                           	opt stack 0
  3287  000008                     i1___ftpack@sign:
  3288                           	opt stack 0
  3289  000008                     Buffer_Escrita_COMM_Add_String@aguarda:
  3290                           	opt stack 0
  3291  000008                     length@i:
  3292                           	opt stack 0
  3293  000008                     i1Buffer_Escrita_USB_Add_String@aguarda:
  3294                           	opt stack 0
  3295  000008                     i1___lldiv@divisor:
  3296                           	opt stack 0
  3297                           
  3298                           ; 4 bytes @ 0x7
  3299  000008                     	ds	1
  3300  000009                     ??i1___ftpack:
  3301  000009                     i1___awmod@sign:
  3302                           	opt stack 0
  3303                           
  3304                           ; 1 bytes @ 0x8
  3305  000009                     	ds	1
  3306  00000A                     ??_Buffer_Escrita_COMM_Add_String:
  3307  00000A                     ??i1_Buffer_Escrita_USB_Add_String:
  3308  00000A                     ??i1__tdiv_to_l_:
  3309  00000A                     ?i1___awdiv:
  3310                           	opt stack 0
  3311  00000A                     i1___awdiv@dividend:
  3312                           	opt stack 0
  3313  00000A                     i1__div_to_l_@quot:
  3314                           	opt stack 0
  3315                           
  3316                           ; 4 bytes @ 0x9
  3317  00000A                     	ds	1
  3318  00000B                     verificaERRO@dado:
  3319                           	opt stack 0
  3320                           
  3321                           ; 1 bytes @ 0xA
  3322  00000B                     	ds	1
  3323  00000C                     ?_Aguarda:
  3324                           	opt stack 0
  3325  00000C                     Buffer_Escrita_COMM_Add_String@i:
  3326                           	opt stack 0
  3327  00000C                     i1Buffer_Escrita_USB_Add_String@i:
  3328                           	opt stack 0
  3329  00000C                     i1___awdiv@divisor:
  3330                           	opt stack 0
  3331  00000C                     i1___lldiv@quotient:
  3332                           	opt stack 0
  3333                           
  3334                           ; 4 bytes @ 0xB
  3335  00000C                     	ds	1
  3336  00000D                     i1__tdiv_to_l_@quot:
  3337                           	opt stack 0
  3338                           
  3339                           ; 4 bytes @ 0xC
  3340  00000D                     	ds	1
  3341  00000E                     ??_Aguarda:
  3342  00000E                     i1___awdiv@counter:
  3343                           	opt stack 0
  3344  00000E                     i1__div_to_l_@cntr:
  3345                           	opt stack 0
  3346                           
  3347                           ; 1 bytes @ 0xD
  3348  00000E                     	ds	1
  3349  00000F                     i1___awdiv@sign:
  3350                           	opt stack 0
  3351  00000F                     i1__div_to_l_@exp1:
  3352                           	opt stack 0
  3353                           
  3354                           ; 1 bytes @ 0xE
  3355  00000F                     	ds	1
  3356  000010                     Aguarda@dado:
  3357                           	opt stack 0
  3358  000010                     i1___lldiv@counter:
  3359                           	opt stack 0
  3360  000010                     i1___awdiv@quotient:
  3361                           	opt stack 0
  3362                           
  3363                           ; 2 bytes @ 0xF
  3364  000010                     	ds	1
  3365  000011                     ?i1___llmod:
  3366                           	opt stack 0
  3367  000011                     i1__tdiv_to_l_@cntr:
  3368                           	opt stack 0
  3369  000011                     i1___llmod@dividend:
  3370                           	opt stack 0
  3371                           
  3372                           ; 4 bytes @ 0x10
  3373  000011                     	ds	1
  3374  000012                     ?i1___wmul:
  3375                           	opt stack 0
  3376  000012                     i1__tdiv_to_l_@exp1:
  3377                           	opt stack 0
  3378  000012                     i1___wmul@multiplier:
  3379                           	opt stack 0
  3380                           
  3381                           ; 2 bytes @ 0x11
  3382  000012                     	ds	2
  3383  000014                     i1___wmul@multiplicand:
  3384                           	opt stack 0
  3385                           
  3386                           ; 2 bytes @ 0x13
  3387  000014                     	ds	1
  3388  000015                     i1___llmod@divisor:
  3389                           	opt stack 0
  3390                           
  3391                           ; 4 bytes @ 0x14
  3392  000015                     	ds	1
  3393  000016                     i1___wmul@product:
  3394                           	opt stack 0
  3395                           
  3396                           ; 2 bytes @ 0x15
  3397  000016                     	ds	2
  3398  000018                     ?i1___fttol:
  3399                           	opt stack 0
  3400  000018                     i1___fttol@f1:
  3401                           	opt stack 0
  3402                           
  3403                           ; 3 bytes @ 0x17
  3404  000018                     	ds	1
  3405  000019                     i1___llmod@counter:
  3406                           	opt stack 0
  3407                           
  3408                           ; 1 bytes @ 0x18
  3409  000019                     	ds	3
  3410  00001C                     ??i1___fttol:
  3411                           
  3412                           ; 1 bytes @ 0x1B
  3413  00001C                     	ds	5
  3414  000021                     i1___fttol@sign1:
  3415                           	opt stack 0
  3416                           
  3417                           ; 1 bytes @ 0x20
  3418  000021                     	ds	1
  3419  000022                     i1___fttol@lval:
  3420                           	opt stack 0
  3421                           
  3422                           ; 4 bytes @ 0x21
  3423  000022                     	ds	4
  3424  000026                     i1___fttol@exp1:
  3425                           	opt stack 0
  3426                           
  3427                           ; 1 bytes @ 0x25
  3428  000026                     	ds	1
  3429  000027                     ?i1___lltoft:
  3430                           	opt stack 0
  3431  000027                     i1___lltoft@c:
  3432                           	opt stack 0
  3433                           
  3434                           ; 4 bytes @ 0x26
  3435  000027                     	ds	4
  3436  00002B                     ??i1___lltoft:
  3437                           
  3438                           ; 1 bytes @ 0x2A
  3439  00002B                     	ds	4
  3440  00002F                     i1___lltoft@exp:
  3441                           	opt stack 0
  3442                           
  3443                           ; 1 bytes @ 0x2E
  3444  00002F                     	ds	1
  3445  000030                     ?i1___ftneg:
  3446                           	opt stack 0
  3447  000030                     i1___ftneg@f1:
  3448                           	opt stack 0
  3449                           
  3450                           ; 3 bytes @ 0x2F
  3451  000030                     	ds	3
  3452  000033                     ?i1___ftmul:
  3453                           	opt stack 0
  3454  000033                     i1___ftmul@f1:
  3455                           	opt stack 0
  3456                           
  3457                           ; 3 bytes @ 0x32
  3458  000033                     	ds	3
  3459  000036                     i1___ftmul@f2:
  3460                           	opt stack 0
  3461                           
  3462                           ; 3 bytes @ 0x35
  3463  000036                     	ds	3
  3464  000039                     ??i1___ftmul:
  3465                           
  3466                           ; 1 bytes @ 0x38
  3467  000039                     	ds	3
  3468  00003C                     i1___ftmul@exp:
  3469                           	opt stack 0
  3470                           
  3471                           ; 1 bytes @ 0x3B
  3472  00003C                     	ds	1
  3473  00003D                     i1___ftmul@f3_as_product:
  3474                           	opt stack 0
  3475                           
  3476                           ; 3 bytes @ 0x3C
  3477  00003D                     	ds	3
  3478  000040                     i1___ftmul@cntr:
  3479                           	opt stack 0
  3480                           
  3481                           ; 1 bytes @ 0x3F
  3482  000040                     	ds	1
  3483  000041                     i1___ftmul@sign:
  3484                           	opt stack 0
  3485                           
  3486                           ; 1 bytes @ 0x40
  3487  000041                     	ds	1
  3488  000042                     ?i1_fround:
  3489                           	opt stack 0
  3490  000042                     ?i1_scale:
  3491                           	opt stack 0
  3492                           
  3493                           ; 3 bytes @ 0x41
  3494  000042                     	ds	3
  3495  000045                     i1_fround$3006:
  3496                           	opt stack 0
  3497  000045                     i1_scale$3007:
  3498                           	opt stack 0
  3499                           
  3500                           ; 3 bytes @ 0x44
  3501  000045                     	ds	3
  3502  000048                     i1scale@scl:
  3503                           	opt stack 0
  3504  000048                     i1_fround$3005:
  3505                           	opt stack 0
  3506                           
  3507                           ; 3 bytes @ 0x47
  3508  000048                     	ds	1
  3509  000049                     ?i1___ftdiv:
  3510                           	opt stack 0
  3511  000049                     i1___ftdiv@f1:
  3512                           	opt stack 0
  3513                           
  3514                           ; 3 bytes @ 0x48
  3515  000049                     	ds	2
  3516  00004B                     i1fround@prec:
  3517                           	opt stack 0
  3518                           
  3519                           ; 1 bytes @ 0x4A
  3520  00004B                     	ds	1
  3521  00004C                     ?i1___ftadd:
  3522                           	opt stack 0
  3523  00004C                     i1___ftadd@f1:
  3524                           	opt stack 0
  3525  00004C                     i1___ftdiv@f2:
  3526                           	opt stack 0
  3527                           
  3528                           ; 3 bytes @ 0x4B
  3529  00004C                     	ds	3
  3530  00004F                     ??i1___ftdiv:
  3531  00004F                     i1___ftadd@f2:
  3532                           	opt stack 0
  3533                           
  3534                           ; 3 bytes @ 0x4E
  3535  00004F                     	ds	3
  3536  000052                     ??i1___ftadd:
  3537  000052                     i1___ftdiv@cntr:
  3538                           	opt stack 0
  3539                           
  3540                           ; 1 bytes @ 0x51
  3541  000052                     	ds	1
  3542  000053                     i1___ftdiv@f3:
  3543                           	opt stack 0
  3544                           
  3545                           ; 3 bytes @ 0x52
  3546  000053                     	ds	2
  3547  000055                     i1___ftadd@sign:
  3548                           	opt stack 0
  3549                           
  3550                           ; 1 bytes @ 0x54
  3551  000055                     	ds	1
  3552  000056                     i1___ftadd@exp2:
  3553                           	opt stack 0
  3554  000056                     i1___ftdiv@exp:
  3555                           	opt stack 0
  3556                           
  3557                           ; 1 bytes @ 0x55
  3558  000056                     	ds	1
  3559  000057                     i1___ftadd@exp1:
  3560                           	opt stack 0
  3561  000057                     i1___ftdiv@sign:
  3562                           	opt stack 0
  3563                           
  3564                           ; 1 bytes @ 0x56
  3565  000057                     	ds	1
  3566  000058                     ??_GETMACAddr:
  3567  000058                     ??_recebeNETWORKID:
  3568  000058                     ??_recebeNODEID:
  3569  000058                     ??_recebeFUNCTIONCODE:
  3570  000058                     ??_recebeADDRESS:
  3571  000058                     ??_recebeSIZE:
  3572  000058                     ??_cria_Arquivo:
  3573  000058                     recebeFRAMES@exit:
  3574                           	opt stack 0
  3575  000058                     SOCKET_RX@i:
  3576                           	opt stack 0
  3577                           
  3578                           ; 2 bytes @ 0x57
  3579  000058                     	ds	1
  3580  000059                     
  3581                           ; 1 bytes @ 0x58
  3582  000059                     	ds	1
  3583                           
  3584 ;;
  3585 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3586 ;;
  3587 ;; *************** function _main *****************
  3588 ;; Defined at:
  3589 ;;		line 56 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Main.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  motivo         20    4[BANK3 ] unsigned char [20]
  3594 ;;  i2              4    0[BANK3 ] unsigned long 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1    wreg      void 
  3597 ;; Registers used:
  3598 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3605 ;;      Locals:         0       0       0       0      24       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3606 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3607 ;;      Totals:         0       0       0       2      24       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;Total ram usage:       26 bytes
  3609 ;; Hardware stack levels required when called:   15
  3610 ;; This function calls:
  3611 ;;		_Abre_Porta_1
  3612 ;;		_Abre_Porta_COMM
  3613 ;;		_Aguarda_dado
  3614 ;;		_Buffer_Escrita_USB_Add_String
  3615 ;;		_Calcula_Fator_m
  3616 ;;		_InicializaWifi
  3617 ;;		_TransmiteBuffer_COMM
  3618 ;;		_TransmiteBuffer_USB
  3619 ;;		_Verifica_Analogica
  3620 ;;		_sprintf
  3621 ;; This function is called by:
  3622 ;;		Startup code after reset
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text0
  3627  004406                     __ptext0:
  3628                           	opt stack 0
  3629  004406                     _main:
  3630                           	opt stack 16
  3631                           
  3632                           ;Main.c: 57: WDTCON0bits.WDTPS = 0b01111;
  3633                           
  3634                           ;incstack = 0
  3635  004406  0139               	movlb	57	; () banked
  3636  004408  835B               	bsf	91,1,b	;volatile
  3637  00440A  855B               	bsf	91,2,b	;volatile
  3638  00440C  875B               	bsf	91,3,b	;volatile
  3639  00440E  895B               	bsf	91,4,b	;volatile
  3640  004410  9B5B               	bcf	91,5,b	;volatile
  3641                           
  3642                           ; BSR set to: 57
  3643                           ;Main.c: 58: unsigned long i2 = 0;
  3644  004412  0E00               	movlw	0
  3645  004414  0103               	movlb	3	; () banked
  3646  004416  6FDA               	movwf	main@i2& (0+255),b
  3647  004418  0E00               	movlw	0
  3648  00441A  6FDB               	movwf	(main@i2+1)& (0+255),b
  3649  00441C  0E00               	movlw	0
  3650  00441E  6FDC               	movwf	(main@i2+2)& (0+255),b
  3651  004420  0E00               	movlw	0
  3652  004422  6FDD               	movwf	(main@i2+3)& (0+255),b
  3653                           
  3654                           ; BSR set to: 3
  3655                           ;Main.c: 59: INTCON0bits.GIE = 1;
  3656  004424  013F               	movlb	63	; () banked
  3657  004426  8FD2               	bsf	210,7,b	;volatile
  3658                           
  3659                           ; BSR set to: 63
  3660                           ;Main.c: 60: INTCON0bits.IPEN = 1;
  3661  004428  8BD2               	bsf	210,5,b	;volatile
  3662                           
  3663                           ; BSR set to: 63
  3664                           ;Main.c: 63: Abre_Porta_1(0x100, 115200);
  3665  00442A  0E01               	movlw	1
  3666  00442C  0102               	movlb	2	; () banked
  3667  00442E  6F1C               	movwf	(Abre_Porta_1@PORTA+1)& (0+255),b
  3668  004430  0E00               	movlw	0
  3669  004432  6F1B               	movwf	Abre_Porta_1@PORTA& (0+255),b
  3670  004434  0E00               	movlw	0
  3671  004436  6F1D               	movwf	Abre_Porta_1@BaudRate& (0+255),b
  3672  004438  0EC2               	movlw	194
  3673  00443A  6F1E               	movwf	(Abre_Porta_1@BaudRate+1)& (0+255),b
  3674  00443C  0E01               	movlw	1
  3675  00443E  6F1F               	movwf	(Abre_Porta_1@BaudRate+2)& (0+255),b
  3676  004440  0E00               	movlw	0
  3677  004442  6F20               	movwf	(Abre_Porta_1@BaudRate+3)& (0+255),b
  3678  004444  ECCD  F034         	call	_Abre_Porta_1	;wreg free
  3679                           
  3680                           ;Main.c: 64: Abre_Porta_COMM(115200);
  3681  004448  0E00               	movlw	0
  3682  00444A  0102               	movlb	2	; () banked
  3683  00444C  6F1B               	movwf	Abre_Porta_COMM@BaudRate& (0+255),b
  3684  00444E  0EC2               	movlw	194
  3685  004450  6F1C               	movwf	(Abre_Porta_COMM@BaudRate+1)& (0+255),b
  3686  004452  0E01               	movlw	1
  3687  004454  6F1D               	movwf	(Abre_Porta_COMM@BaudRate+2)& (0+255),b
  3688  004456  0E00               	movlw	0
  3689  004458  6F1E               	movwf	(Abre_Porta_COMM@BaudRate+3)& (0+255),b
  3690  00445A  EC39  F038         	call	_Abre_Porta_COMM	;wreg free
  3691                           
  3692                           ;Main.c: 66: TRISFbits.TRISF7 = 0;
  3693  00445E  013F               	movlb	63	; () banked
  3694  004460  9FC7               	bcf	199,7,b	;volatile
  3695                           
  3696                           ; BSR set to: 63
  3697                           ;Main.c: 67: TRISFbits.TRISF5 = 0;
  3698  004462  9BC7               	bcf	199,5,b	;volatile
  3699                           
  3700                           ; BSR set to: 63
  3701                           ;Main.c: 68: TRISFbits.TRISF6 = 0;
  3702  004464  9DC7               	bcf	199,6,b	;volatile
  3703                           
  3704                           ; BSR set to: 63
  3705                           ;Main.c: 73: LATFbits.LATF7 = 0;
  3706  004466  9FBF               	bcf	191,7,b	;volatile
  3707                           
  3708                           ; BSR set to: 63
  3709                           ;Main.c: 74: LATFbits.LATF5 = 0;
  3710  004468  9BBF               	bcf	191,5,b	;volatile
  3711                           
  3712                           ; BSR set to: 63
  3713                           ;Main.c: 75: LATFbits.LATF6 = 0;
  3714  00446A  9DBF               	bcf	191,6,b	;volatile
  3715                           
  3716                           ; BSR set to: 63
  3717                           ;Main.c: 77: _delay((unsigned long)((1000)*(40000000/4000.0)));
  3718  00446C  0E33               	movlw	51
  3719  00446E  0102               	movlb	2	; () banked
  3720  004470  6FAF               	movwf	(??_main+1)& (0+255),b
  3721  004472  0EBB               	movlw	187
  3722  004474  6FAE               	movwf	??_main& (0+255),b
  3723  004476  0EDF               	movlw	223
  3724  004478                     u19027:
  3725  004478  2EE8               	decfsz	16360,f,c
  3726  00447A  D7FE               	bra	u19027
  3727  00447C  2FAE               	decfsz	??_main& (0+255),f,b
  3728  00447E  D7FC               	bra	u19027
  3729  004480  2FAF               	decfsz	(??_main+1)& (0+255),f,b
  3730  004482  D7FA               	bra	u19027
  3731  004484  D000               	nop2	
  3732                           
  3733                           ;Main.c: 79: InicializaWifi();
  3734  004486  EC66  F041         	call	_InicializaWifi	;wreg free
  3735                           
  3736                           ;Main.c: 81: FVRCONbits.ADFVR = 0b10;
  3737  00448A  013E               	movlb	62	; () banked
  3738  00448C  51C1               	movf	193,w,b	;volatile
  3739  00448E  0BFC               	andlw	-4
  3740  004490  0902               	iorlw	2
  3741  004492  6FC1               	movwf	193,b	;volatile
  3742                           
  3743                           ; BSR set to: 62
  3744                           ;Main.c: 82: FVRCONbits.CDAFVR = 0b10;
  3745  004494  51C1               	movf	193,w,b	;volatile
  3746  004496  0BF3               	andlw	-13
  3747  004498  0908               	iorlw	8
  3748  00449A  6FC1               	movwf	193,b	;volatile
  3749                           
  3750                           ; BSR set to: 62
  3751                           ;Main.c: 83: FVRCONbits.EN = 1;
  3752  00449C  8FC1               	bsf	193,7,b	;volatile
  3753                           
  3754                           ; BSR set to: 62
  3755                           ;Main.c: 85: ADCAP = 0b11111;
  3756  00449E  0E1F               	movlw	31
  3757  0044A0  6FF5               	movwf	245,b	;volatile
  3758                           
  3759                           ; BSR set to: 62
  3760                           ;Main.c: 86: ADPREH = 0b11111;
  3761  0044A2  0E1F               	movlw	31
  3762  0044A4  6FF7               	movwf	247,b	;volatile
  3763                           
  3764                           ; BSR set to: 62
  3765                           ;Main.c: 87: ADPREL = 0b11111111;
  3766  0044A6  69F6               	setf	246,b	;volatile
  3767                           
  3768                           ; BSR set to: 62
  3769                           ;Main.c: 89: ADACQL = 0b11111111;
  3770  0044A8  69F3               	setf	243,b	;volatile
  3771                           
  3772                           ; BSR set to: 62
  3773                           ;Main.c: 90: ADACQH = 0b11111;
  3774  0044AA  0E1F               	movlw	31
  3775  0044AC  6FF4               	movwf	244,b	;volatile
  3776                           
  3777                           ; BSR set to: 62
  3778                           ;Main.c: 92: ADCLKbits.CS = 0b000011;
  3779  0044AE  81FF               	bsf	255,0,b	;volatile
  3780  0044B0  83FF               	bsf	255,1,b	;volatile
  3781  0044B2  95FF               	bcf	255,2,b	;volatile
  3782  0044B4  97FF               	bcf	255,3,b	;volatile
  3783  0044B6  99FF               	bcf	255,4,b	;volatile
  3784  0044B8  9BFF               	bcf	255,5,b	;volatile
  3785                           
  3786                           ; BSR set to: 62
  3787                           ;Main.c: 94: ADCON0bits.CS = 0;
  3788  0044BA  99F8               	bcf	248,4,b	;volatile
  3789                           
  3790                           ; BSR set to: 62
  3791                           ;Main.c: 95: ADCON0bits.FM = 1;
  3792  0044BC  51F8               	movf	248,w,b	;volatile
  3793  0044BE  0BF3               	andlw	-13
  3794  0044C0  0904               	iorlw	4
  3795  0044C2  6FF8               	movwf	248,b	;volatile
  3796                           
  3797                           ; BSR set to: 62
  3798                           ;Main.c: 96: ADREFbits.NREF = 1;
  3799  0044C4  51FD               	movf	253,w,b	;volatile
  3800  0044C6  0B0F               	andlw	-241
  3801  0044C8  0910               	iorlw	16
  3802  0044CA  6FFD               	movwf	253,b	;volatile
  3803                           
  3804                           ; BSR set to: 62
  3805                           ;Main.c: 97: ADREFbits.PREF = 0b10;
  3806  0044CC  51FD               	movf	253,w,b	;volatile
  3807  0044CE  0BF0               	andlw	-16
  3808  0044D0  0902               	iorlw	2
  3809  0044D2  6FFD               	movwf	253,b	;volatile
  3810                           
  3811                           ; BSR set to: 62
  3812                           ;Main.c: 98: ADPCH = 0b011111;
  3813  0044D4  0E1F               	movlw	31
  3814  0044D6  6FF1               	movwf	241,b	;volatile
  3815                           
  3816                           ; BSR set to: 62
  3817                           ;Main.c: 101: TRISDbits.TRISD7 = 1;
  3818  0044D8  013F               	movlb	63	; () banked
  3819  0044DA  8FC5               	bsf	197,7,b	;volatile
  3820                           
  3821                           ; BSR set to: 63
  3822                           ;Main.c: 102: ANSELDbits.ANSELD7 = 1;
  3823  0044DC  013A               	movlb	58	; () banked
  3824  0044DE  8F70               	bsf	112,7,b	;volatile
  3825                           
  3826                           ; BSR set to: 58
  3827                           ;Main.c: 103: ADCON0bits.ON = 1;
  3828  0044E0  013E               	movlb	62	; () banked
  3829  0044E2  8FF8               	bsf	248,7,b	;volatile
  3830                           
  3831                           ; BSR set to: 62
  3832                           ;Main.c: 105: TRISDbits.TRISD3 = 0;
  3833  0044E4  013F               	movlb	63	; () banked
  3834  0044E6  97C5               	bcf	197,3,b	;volatile
  3835                           
  3836                           ; BSR set to: 63
  3837                           ;Main.c: 106: TRISDbits.TRISD4 = 0;
  3838  0044E8  99C5               	bcf	197,4,b	;volatile
  3839                           
  3840                           ; BSR set to: 63
  3841                           ;Main.c: 109: LATDbits.LATD4 = 1;
  3842  0044EA  89BD               	bsf	189,4,b	;volatile
  3843                           
  3844                           ; BSR set to: 63
  3845                           ;Main.c: 111: Calcula_Fator_m();
  3846  0044EC  EC90  F038         	call	_Calcula_Fator_m	;wreg free
  3847                           
  3848                           ;Main.c: 114: char motivo [20];
  3849                           ;Main.c: 116: sprintf(motivo, "\r\n\r\n\r\nPCON0 >%i\r\n", PCON0);
  3850  0044F0  0EDE               	movlw	low main@motivo
  3851  0044F2  0102               	movlb	2	; () banked
  3852  0044F4  6F62               	movwf	sprintf@sp& (0+255),b
  3853  0044F6  0E03               	movlw	high main@motivo
  3854  0044F8  6F63               	movwf	(sprintf@sp+1)& (0+255),b
  3855  0044FA  0EBA               	movlw	low STR_1
  3856  0044FC  6F64               	movwf	sprintf@f& (0+255),b
  3857  0044FE  0EFE               	movlw	high STR_1
  3858  004500  6F65               	movwf	(sprintf@f+1)& (0+255),b
  3859  004502  006F FFC0  F266    	movff	16368,?_sprintf+4	;volatile
  3860  004508  6B67               	clrf	(?_sprintf+5)& (0+255),b
  3861  00450A  EC59  F000         	call	_sprintf	;wreg free
  3862                           
  3863                           ;Main.c: 117: Buffer_Escrita_USB_Add_String(motivo, 1);
  3864  00450E  0EDE               	movlw	low main@motivo
  3865  004510  0102               	movlb	2	; () banked
  3866  004512  6F07               	movwf	Buffer_Escrita_USB_Add_String@dado& (0+255),b
  3867  004514  0E03               	movlw	high main@motivo
  3868  004516  6F08               	movwf	(Buffer_Escrita_USB_Add_String@dado+1)& (0+255),b
  3869  004518  0E00               	movlw	0
  3870  00451A  6F0A               	movwf	(Buffer_Escrita_USB_Add_String@aguarda+1)& (0+255),b
  3871  00451C  0E01               	movlw	1
  3872  00451E  6F09               	movwf	Buffer_Escrita_USB_Add_String@aguarda& (0+255),b
  3873  004520  ECA5  F035         	call	_Buffer_Escrita_USB_Add_String	;wreg free
  3874                           
  3875                           ;Main.c: 118: sprintf(motivo, "PCON01 >%i\r\n", PCON1);
  3876  004524  0EDE               	movlw	low main@motivo
  3877  004526  0102               	movlb	2	; () banked
  3878  004528  6F62               	movwf	sprintf@sp& (0+255),b
  3879  00452A  0E03               	movlw	high main@motivo
  3880  00452C  6F63               	movwf	(sprintf@sp+1)& (0+255),b
  3881  00452E  0E1D               	movlw	low STR_2
  3882  004530  6F64               	movwf	sprintf@f& (0+255),b
  3883  004532  0EFF               	movlw	high STR_2
  3884  004534  6F65               	movwf	(sprintf@f+1)& (0+255),b
  3885  004536  006F FFC4  F266    	movff	16369,?_sprintf+4	;volatile
  3886  00453C  6B67               	clrf	(?_sprintf+5)& (0+255),b
  3887  00453E  EC59  F000         	call	_sprintf	;wreg free
  3888                           
  3889                           ;Main.c: 119: Buffer_Escrita_USB_Add_String(motivo, 1);
  3890  004542  0EDE               	movlw	low main@motivo
  3891  004544  0102               	movlb	2	; () banked
  3892  004546  6F07               	movwf	Buffer_Escrita_USB_Add_String@dado& (0+255),b
  3893  004548  0E03               	movlw	high main@motivo
  3894  00454A  6F08               	movwf	(Buffer_Escrita_USB_Add_String@dado+1)& (0+255),b
  3895  00454C  0E00               	movlw	0
  3896  00454E  6F0A               	movwf	(Buffer_Escrita_USB_Add_String@aguarda+1)& (0+255),b
  3897  004550  0E01               	movlw	1
  3898  004552  6F09               	movwf	Buffer_Escrita_USB_Add_String@aguarda& (0+255),b
  3899  004554  ECA5  F035         	call	_Buffer_Escrita_USB_Add_String	;wreg free
  3900                           
  3901                           ;Main.c: 121: BORCONbits.SBOREN = 0;
  3902  004558  0139               	movlb	57	; () banked
  3903  00455A  9FD0               	bcf	208,7,b	;volatile
  3904                           
  3905                           ; BSR set to: 57
  3906                           ;Main.c: 122: BORCONbits.BORRDY = 0;
  3907  00455C  91D0               	bcf	208,0,b	;volatile
  3908                           
  3909                           ; BSR set to: 57
  3910                           ;Main.c: 124: MEMORIA[0] = 0;
  3911  00455E  0E00               	movlw	0
  3912  004560  0101               	movlb	1	; () banked
  3913  004562  6F94               	movwf	_MEMORIA& (0+255),b
  3914  004564  0E00               	movlw	0
  3915  004566  6F95               	movwf	(_MEMORIA+1)& (0+255),b
  3916  004568  0E00               	movlw	0
  3917  00456A  6F96               	movwf	(_MEMORIA+2)& (0+255),b
  3918  00456C  0E00               	movlw	0
  3919  00456E  6F97               	movwf	(_MEMORIA+3)& (0+255),b
  3920                           
  3921                           ; BSR set to: 1
  3922                           ;Main.c: 125: MEMORIA[1] = 0;
  3923  004570  0E00               	movlw	0
  3924  004572  6F98               	movwf	(_MEMORIA+4)& (0+255),b
  3925  004574  0E00               	movlw	0
  3926  004576  6F99               	movwf	(_MEMORIA+5)& (0+255),b
  3927  004578  0E00               	movlw	0
  3928  00457A  6F9A               	movwf	(_MEMORIA+6)& (0+255),b
  3929  00457C  0E00               	movlw	0
  3930  00457E  6F9B               	movwf	(_MEMORIA+7)& (0+255),b
  3931                           
  3932                           ; BSR set to: 1
  3933                           ;Main.c: 126: MEMORIA[2] = 0;
  3934  004580  0E00               	movlw	0
  3935  004582  6F9C               	movwf	(_MEMORIA+8)& (0+255),b
  3936  004584  0E00               	movlw	0
  3937  004586  6F9D               	movwf	(_MEMORIA+9)& (0+255),b
  3938  004588  0E00               	movlw	0
  3939  00458A  6F9E               	movwf	(_MEMORIA+10)& (0+255),b
  3940  00458C  0E00               	movlw	0
  3941  00458E  6F9F               	movwf	(_MEMORIA+11)& (0+255),b
  3942                           
  3943                           ; BSR set to: 1
  3944                           ;Main.c: 127: MEMORIA[3] = 0;
  3945  004590  0E00               	movlw	0
  3946  004592  6FA0               	movwf	(_MEMORIA+12)& (0+255),b
  3947  004594  0E00               	movlw	0
  3948  004596  6FA1               	movwf	(_MEMORIA+13)& (0+255),b
  3949  004598  0E00               	movlw	0
  3950  00459A  6FA2               	movwf	(_MEMORIA+14)& (0+255),b
  3951  00459C  0E00               	movlw	0
  3952  00459E  6FA3               	movwf	(_MEMORIA+15)& (0+255),b
  3953                           
  3954                           ; BSR set to: 1
  3955                           ;Main.c: 128: MEMORIA[4] = 0;
  3956  0045A0  0E00               	movlw	0
  3957  0045A2  6FA4               	movwf	(_MEMORIA+16)& (0+255),b
  3958  0045A4  0E00               	movlw	0
  3959  0045A6  6FA5               	movwf	(_MEMORIA+17)& (0+255),b
  3960  0045A8  0E00               	movlw	0
  3961  0045AA  6FA6               	movwf	(_MEMORIA+18)& (0+255),b
  3962  0045AC  0E00               	movlw	0
  3963  0045AE  6FA7               	movwf	(_MEMORIA+19)& (0+255),b
  3964                           
  3965                           ; BSR set to: 1
  3966                           ;Main.c: 129: MEMORIA[5] = 0;
  3967  0045B0  0E00               	movlw	0
  3968  0045B2  6FA8               	movwf	(_MEMORIA+20)& (0+255),b
  3969  0045B4  0E00               	movlw	0
  3970  0045B6  6FA9               	movwf	(_MEMORIA+21)& (0+255),b
  3971  0045B8  0E00               	movlw	0
  3972  0045BA  6FAA               	movwf	(_MEMORIA+22)& (0+255),b
  3973  0045BC  0E00               	movlw	0
  3974  0045BE  6FAB               	movwf	(_MEMORIA+23)& (0+255),b
  3975                           
  3976                           ; BSR set to: 1
  3977                           ;Main.c: 130: MEMORIA[6] = 0;
  3978  0045C0  0E00               	movlw	0
  3979  0045C2  6FAC               	movwf	(_MEMORIA+24)& (0+255),b
  3980  0045C4  0E00               	movlw	0
  3981  0045C6  6FAD               	movwf	(_MEMORIA+25)& (0+255),b
  3982  0045C8  0E00               	movlw	0
  3983  0045CA  6FAE               	movwf	(_MEMORIA+26)& (0+255),b
  3984  0045CC  0E00               	movlw	0
  3985  0045CE  6FAF               	movwf	(_MEMORIA+27)& (0+255),b
  3986                           
  3987                           ; BSR set to: 1
  3988                           ;Main.c: 131: MEMORIA[7] = 0;
  3989  0045D0  0E00               	movlw	0
  3990  0045D2  6FB0               	movwf	(_MEMORIA+28)& (0+255),b
  3991  0045D4  0E00               	movlw	0
  3992  0045D6  6FB1               	movwf	(_MEMORIA+29)& (0+255),b
  3993  0045D8  0E00               	movlw	0
  3994  0045DA  6FB2               	movwf	(_MEMORIA+30)& (0+255),b
  3995  0045DC  0E00               	movlw	0
  3996  0045DE  6FB3               	movwf	(_MEMORIA+31)& (0+255),b
  3997                           
  3998                           ; BSR set to: 1
  3999                           ;Main.c: 132: MEMORIA[8] = 0;
  4000  0045E0  0E00               	movlw	0
  4001  0045E2  6FB4               	movwf	(_MEMORIA+32)& (0+255),b
  4002  0045E4  0E00               	movlw	0
  4003  0045E6  6FB5               	movwf	(_MEMORIA+33)& (0+255),b
  4004  0045E8  0E00               	movlw	0
  4005  0045EA  6FB6               	movwf	(_MEMORIA+34)& (0+255),b
  4006  0045EC  0E00               	movlw	0
  4007  0045EE  6FB7               	movwf	(_MEMORIA+35)& (0+255),b
  4008                           
  4009                           ; BSR set to: 1
  4010                           ;Main.c: 133: MEMORIA[9] = 0;
  4011  0045F0  0E00               	movlw	0
  4012  0045F2  6FB8               	movwf	(_MEMORIA+36)& (0+255),b
  4013  0045F4  0E00               	movlw	0
  4014  0045F6  6FB9               	movwf	(_MEMORIA+37)& (0+255),b
  4015  0045F8  0E00               	movlw	0
  4016  0045FA  6FBA               	movwf	(_MEMORIA+38)& (0+255),b
  4017  0045FC  0E00               	movlw	0
  4018  0045FE  6FBB               	movwf	(_MEMORIA+39)& (0+255),b
  4019  004600                     
  4020                           ;Main.c: 141: PORTBbits.RB2 = 0;
  4021                           
  4022                           ; BSR set to: 1
  4023  004600  013F               	movlb	63	; () banked
  4024  004602  95CB               	bcf	203,2,b	;volatile
  4025  004604  0004               	clrwdt		;# 
  4026                           
  4027                           ;Main.c: 143: if (LATEbits.LATE2 == 1) {
  4028  004606  013F               	movlb	63	; () banked
  4029  004608  A5BE               	btfss	190,2,b	;volatile
  4030  00460A  D00D               	goto	u18847
  4031                           
  4032                           ; BSR set to: 63
  4033                           ;Main.c: 144: LATFbits.LATF7 ^= 1;
  4034  00460C  7FBF               	btg	191,7,b	;volatile
  4035                           
  4036                           ; BSR set to: 63
  4037                           ;Main.c: 145: LATFbits.LATF5 = PORTAbits.RA4;
  4038  00460E  A9CA               	btfss	202,4,b	;volatile
  4039  004610  D002               	bra	u18835
  4040  004612  8BBF               	bsf	191,5,b	;volatile
  4041  004614  D002               	bra	u18837
  4042  004616                     u18835:
  4043  004616  013F               	movlb	63	; () banked
  4044  004618  9BBF               	bcf	191,5,b	;volatile
  4045  00461A                     u18837:
  4046                           
  4047                           ; BSR set to: 63
  4048                           ;Main.c: 146: LATFbits.LATF6 = PORTEbits.RE1;
  4049  00461A  A3CE               	btfss	206,1,b	;volatile
  4050  00461C  D002               	bra	u18845
  4051  00461E  8DBF               	bsf	191,6,b	;volatile
  4052  004620  D002               	bra	u18847
  4053  004622                     u18845:
  4054  004622  013F               	movlb	63	; () banked
  4055  004624  9DBF               	bcf	191,6,b	;volatile
  4056  004626                     u18847:
  4057                           
  4058                           ; BSR set to: 63
  4059                           ;Main.c: 147: }
  4060                           ;Main.c: 150: if (PORTAbits.RA4 && primeiro == 0) primeiro = 1;
  4061                           
  4062                           ; BSR set to: 63
  4063  004626  A9CA               	btfss	202,4,b	;volatile
  4064  004628  D009               	goto	l123
  4065                           
  4066                           ; BSR set to: 63
  4067  00462A  0102               	movlb	2	; () banked
  4068  00462C  51E9               	movf	_primeiro& (0+255),w,b
  4069  00462E  11EA               	iorwf	(_primeiro+1)& (0+255),w,b
  4070  004630  A4D8               	btfss	16344,2,c
  4071  004632  D004               	goto	l123
  4072                           
  4073                           ; BSR set to: 2
  4074  004634  0E00               	movlw	0
  4075  004636  6FEA               	movwf	(_primeiro+1)& (0+255),b
  4076  004638  0E01               	movlw	1
  4077  00463A  6FE9               	movwf	_primeiro& (0+255),b
  4078  00463C                     l123:
  4079                           
  4080                           ;Main.c: 151: if (primeiro == 1 && PORTAbits.RA4 == 0) primeiro = 2;
  4081                           
  4082                           ; BSR set to: 2
  4083  00463C  0102               	movlb	2	; () banked
  4084  00463E  05E9               	decf	_primeiro& (0+255),w,b
  4085  004640  11EA               	iorwf	(_primeiro+1)& (0+255),w,b
  4086  004642  A4D8               	btfss	16344,2,c
  4087  004644  D008               	goto	l124
  4088                           
  4089                           ; BSR set to: 2
  4090  004646  013F               	movlb	63	; () banked
  4091  004648  B9CA               	btfsc	202,4,b	;volatile
  4092  00464A  D005               	goto	l124
  4093                           
  4094                           ; BSR set to: 63
  4095  00464C  0E00               	movlw	0
  4096  00464E  0102               	movlb	2	; () banked
  4097  004650  6FEA               	movwf	(_primeiro+1)& (0+255),b
  4098  004652  0E02               	movlw	2
  4099  004654  6FE9               	movwf	_primeiro& (0+255),b
  4100  004656                     l124:
  4101                           
  4102                           ;Main.c: 152: if (primeiro == 2 && PORTEbits.RE1 == 0 && PORTAbits.RA4 == 0)primeiro = 3
      +                          ;
  4103                           
  4104                           ; BSR set to: 2
  4105  004656  0E02               	movlw	2
  4106  004658  0102               	movlb	2	; () banked
  4107  00465A  19E9               	xorwf	_primeiro& (0+255),w,b
  4108  00465C  11EA               	iorwf	(_primeiro+1)& (0+255),w,b
  4109  00465E  A4D8               	btfss	16344,2,c
  4110  004660  D009               	goto	l125
  4111                           
  4112                           ; BSR set to: 2
  4113  004662  013F               	movlb	63	; () banked
  4114  004664  A3CE               	btfss	206,1,b	;volatile
  4115                           
  4116                           ; BSR set to: 63
  4117  004666  B9CA               	btfsc	202,4,b	;volatile
  4118  004668  D005               	goto	l125
  4119                           
  4120                           ; BSR set to: 63
  4121  00466A  0E00               	movlw	0
  4122  00466C  0102               	movlb	2	; () banked
  4123  00466E  6FEA               	movwf	(_primeiro+1)& (0+255),b
  4124  004670  0E03               	movlw	3
  4125  004672  6FE9               	movwf	_primeiro& (0+255),b
  4126  004674                     l125:
  4127                           
  4128                           ;Main.c: 154: if (primeiro == 3 && PORTEbits.RE1 == 0) {
  4129                           
  4130                           ; BSR set to: 2
  4131  004674  0E03               	movlw	3
  4132  004676  0102               	movlb	2	; () banked
  4133  004678  19E9               	xorwf	_primeiro& (0+255),w,b
  4134  00467A  11EA               	iorwf	(_primeiro+1)& (0+255),w,b
  4135  00467C  A4D8               	btfss	16344,2,c
  4136  00467E  D026               	goto	l126
  4137                           
  4138                           ; BSR set to: 2
  4139  004680  013F               	movlb	63	; () banked
  4140  004682  B3CE               	btfsc	206,1,b	;volatile
  4141  004684  D023               	goto	l126
  4142                           
  4143                           ; BSR set to: 63
  4144                           ;Main.c: 155: _delay((unsigned long)((2000)*(40000000/4000.0)));
  4145  004686  0E66               	movlw	102
  4146  004688  0102               	movlb	2	; () banked
  4147  00468A  6FAF               	movwf	(??_main+1)& (0+255),b
  4148  00468C  0E76               	movlw	118
  4149  00468E  6FAE               	movwf	??_main& (0+255),b
  4150  004690  0EC1               	movlw	193
  4151  004692                     u19037:
  4152  004692  2EE8               	decfsz	16360,f,c
  4153  004694  D7FE               	bra	u19037
  4154  004696  2FAE               	decfsz	??_main& (0+255),f,b
  4155  004698  D7FC               	bra	u19037
  4156  00469A  2FAF               	decfsz	(??_main+1)& (0+255),f,b
  4157  00469C  D7FA               	bra	u19037
  4158                           
  4159                           ;Main.c: 156: primeiro = 5;
  4160  00469E  0E00               	movlw	0
  4161  0046A0  0102               	movlb	2	; () banked
  4162  0046A2  6FEA               	movwf	(_primeiro+1)& (0+255),b
  4163  0046A4  0E05               	movlw	5
  4164  0046A6  6FE9               	movwf	_primeiro& (0+255),b
  4165                           
  4166                           ; BSR set to: 2
  4167                           ;Main.c: 157: Aguarda_dado("+WIND:24:WiFi Up:0", "\r", "", GETMACAddr);
  4168  0046A8  0EA7               	movlw	low STR_3
  4169  0046AA  6FA0               	movwf	Aguarda_dado@inicio& (0+255),b
  4170  0046AC  0EFE               	movlw	high STR_3
  4171  0046AE  6FA1               	movwf	(Aguarda_dado@inicio+1)& (0+255),b
  4172  0046B0  0EAA               	movlw	low (STR_26+29)
  4173  0046B2  6FA2               	movwf	Aguarda_dado@fim& (0+255),b
  4174  0046B4  0EFD               	movlw	high (STR_26+29)
  4175  0046B6  6FA3               	movwf	(Aguarda_dado@fim+1)& (0+255),b
  4176  0046B8  0E65               	movlw	low (STR_94+23)
  4177  0046BA  6FA4               	movwf	Aguarda_dado@error& (0+255),b
  4178  0046BC  0EFE               	movlw	high (STR_94+23)
  4179  0046BE  6FA5               	movwf	(Aguarda_dado@error+1)& (0+255),b
  4180  0046C0  0E26               	movlw	low _GETMACAddr
  4181  0046C2  6FA6               	movwf	Aguarda_dado@ff& (0+255),b
  4182  0046C4  0E7F               	movlw	high _GETMACAddr
  4183  0046C6  6FA7               	movwf	(Aguarda_dado@ff+1)& (0+255),b
  4184  0046C8  EC70  F03D         	call	_Aguarda_dado	;wreg free
  4185  0046CC                     l126:
  4186                           
  4187                           ;Main.c: 158: }
  4188                           ;Main.c: 159: TransmiteBuffer_COMM();
  4189  0046CC  EC33  F03E         	call	_TransmiteBuffer_COMM	;wreg free
  4190                           
  4191                           ;Main.c: 160: TransmiteBuffer_USB();
  4192  0046D0  EC61  F03E         	call	_TransmiteBuffer_USB	;wreg free
  4193                           
  4194                           ;Main.c: 163: Verifica_Analogica();
  4195  0046D4  ECEF  F02B         	call	_Verifica_Analogica	;wreg free
  4196                           
  4197                           ;Main.c: 170: if (conta > 0x2fffff) {
  4198  0046D8  0101               	movlb	1	; () banked
  4199  0046DA  BFC3               	btfsc	(_conta+3)& (0+255),7,b
  4200  0046DC  D011               	goto	l127
  4201  0046DE  51C3               	movf	(_conta+3)& (0+255),w,b
  4202  0046E0  E104               	bnz	u18940
  4203  0046E2  0E30               	movlw	48
  4204  0046E4  5DC2               	subwf	(_conta+2)& (0+255),w,b
  4205  0046E6  A0D8               	btfss	16344,0,c
  4206  0046E8  D00B               	goto	l127
  4207  0046EA                     u18940:
  4208                           
  4209                           ; BSR set to: 1
  4210  0046EA  00FF               	reset		;# 
  4211                           
  4212                           ;Main.c: 172: conta = 0;
  4213  0046EC  0E00               	movlw	0
  4214  0046EE  0101               	movlb	1	; () banked
  4215  0046F0  6FC0               	movwf	_conta& (0+255),b
  4216  0046F2  0E00               	movlw	0
  4217  0046F4  6FC1               	movwf	(_conta+1)& (0+255),b
  4218  0046F6  0E00               	movlw	0
  4219  0046F8  6FC2               	movwf	(_conta+2)& (0+255),b
  4220  0046FA  0E00               	movlw	0
  4221  0046FC  6FC3               	movwf	(_conta+3)& (0+255),b
  4222                           
  4223                           ;Main.c: 173: } else {
  4224  0046FE  D006               	goto	l128
  4225  004700                     l127:
  4226                           
  4227                           ; BSR set to: 1
  4228                           ;Main.c: 174: conta++;
  4229                           
  4230                           ; BSR set to: 1
  4231  004700  0E01               	movlw	1
  4232  004702  27C0               	addwf	_conta& (0+255),f,b
  4233  004704  0E00               	movlw	0
  4234  004706  23C1               	addwfc	(_conta+1)& (0+255),f,b
  4235  004708  23C2               	addwfc	(_conta+2)& (0+255),f,b
  4236  00470A  23C3               	addwfc	(_conta+3)& (0+255),f,b
  4237  00470C                     l128:
  4238                           
  4239                           ; BSR set to: 1
  4240  00470C  0004               	clrwdt		;# 
  4241                           
  4242                           ;Main.c: 180: if (LATEbits.LATE2 == 0) {
  4243  00470E  013F               	movlb	63	; () banked
  4244  004710  B5BE               	btfsc	190,2,b	;volatile
  4245  004712  D776               	goto	l121
  4246                           
  4247                           ; BSR set to: 63
  4248                           ;Main.c: 182: LATFbits.LATF7 = 0;
  4249  004714  9FBF               	bcf	191,7,b	;volatile
  4250                           
  4251                           ;Main.c: 183: LATFbits.LATF5 = 0;
  4252  004716  9BBF               	bcf	191,5,b	;volatile
  4253                           
  4254                           ;Main.c: 184: LATFbits.LATF6 = 0;
  4255  004718  9DBF               	bcf	191,6,b	;volatile
  4256                           
  4257                           ; BSR set to: 63
  4258                           ;Main.c: 186: conta = 0;
  4259  00471A  0E00               	movlw	0
  4260  00471C  0101               	movlb	1	; () banked
  4261  00471E  6FC0               	movwf	_conta& (0+255),b
  4262  004720  0E00               	movlw	0
  4263  004722  6FC1               	movwf	(_conta+1)& (0+255),b
  4264  004724  0E00               	movlw	0
  4265  004726  6FC2               	movwf	(_conta+2)& (0+255),b
  4266  004728  0E00               	movlw	0
  4267  00472A  6FC3               	movwf	(_conta+3)& (0+255),b
  4268                           
  4269                           ; BSR set to: 1
  4270                           ;Main.c: 188: if (contaLed > 0x33333) {
  4271  00472C  BFBF               	btfsc	(_contaLed+3)& (0+255),7,b
  4272  00472E  D025               	goto	l130
  4273  004730  51BF               	movf	(_contaLed+3)& (0+255),w,b
  4274  004732  E108               	bnz	u18960
  4275  004734  0E34               	movlw	52
  4276  004736  5DBC               	subwf	_contaLed& (0+255),w,b
  4277  004738  0E33               	movlw	51
  4278  00473A  59BD               	subwfb	(_contaLed+1)& (0+255),w,b
  4279  00473C  0E03               	movlw	3
  4280  00473E  59BE               	subwfb	(_contaLed+2)& (0+255),w,b
  4281  004740  A0D8               	btfss	16344,0,c
  4282  004742  D01B               	goto	l130
  4283  004744                     u18960:
  4284                           
  4285                           ; BSR set to: 1
  4286                           ;Main.c: 189: LATFbits.LATF7 = 1;
  4287  004744  013F               	movlb	63	; () banked
  4288  004746  8FBF               	bsf	191,7,b	;volatile
  4289                           
  4290                           ; BSR set to: 63
  4291                           ;Main.c: 190: _delay((unsigned long)((200)*(40000000/4000.0)));
  4292  004748  0E0B               	movlw	11
  4293  00474A  0102               	movlb	2	; () banked
  4294  00474C  6FAF               	movwf	(??_main+1)& (0+255),b
  4295  00474E  0E26               	movlw	38
  4296  004750  6FAE               	movwf	??_main& (0+255),b
  4297  004752  0E5D               	movlw	93
  4298  004754                     u19047:
  4299  004754  2EE8               	decfsz	16360,f,c
  4300  004756  D7FE               	bra	u19047
  4301  004758  2FAE               	decfsz	??_main& (0+255),f,b
  4302  00475A  D7FC               	bra	u19047
  4303  00475C  2FAF               	decfsz	(??_main+1)& (0+255),f,b
  4304  00475E  D7FA               	bra	u19047
  4305  004760  D000               	nop2	
  4306                           
  4307                           ;Main.c: 191: LATFbits.LATF7 = 0;
  4308  004762  013F               	movlb	63	; () banked
  4309  004764  9FBF               	bcf	191,7,b	;volatile
  4310                           
  4311                           ; BSR set to: 63
  4312                           ;Main.c: 192: contaLed = 0;
  4313  004766  0E00               	movlw	0
  4314  004768  0101               	movlb	1	; () banked
  4315  00476A  6FBC               	movwf	_contaLed& (0+255),b
  4316  00476C  0E00               	movlw	0
  4317  00476E  6FBD               	movwf	(_contaLed+1)& (0+255),b
  4318  004770  0E00               	movlw	0
  4319  004772  6FBE               	movwf	(_contaLed+2)& (0+255),b
  4320  004774  0E00               	movlw	0
  4321  004776  6FBF               	movwf	(_contaLed+3)& (0+255),b
  4322                           
  4323                           ;Main.c: 193: } else {
  4324  004778  D743               	goto	l121
  4325  00477A                     l130:
  4326                           
  4327                           ; BSR set to: 1
  4328                           ;Main.c: 194: contaLed++;
  4329                           
  4330                           ; BSR set to: 1
  4331  00477A  0E01               	movlw	1
  4332  00477C  27BC               	addwf	_contaLed& (0+255),f,b
  4333  00477E  0E00               	movlw	0
  4334  004780  23BD               	addwfc	(_contaLed+1)& (0+255),f,b
  4335  004782  23BE               	addwfc	(_contaLed+2)& (0+255),f,b
  4336  004784  23BF               	addwfc	(_contaLed+3)& (0+255),f,b
  4337                           
  4338                           ; BSR set to: 1
  4339                           ;Main.c: 195: }
  4340                           ;Main.c: 196: }
  4341                           ;Main.c: 198: } while (1);
  4342                           
  4343                           ; BSR set to: 1
  4344  004786  D73C               	goto	l121
  4345  004788                     __end_of_main:
  4346                           	opt stack 0
  4347                           
  4348 ;; *************** function _Verifica_Analogica *****************
  4349 ;; Defined at:
  4350 ;;		line 66 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Conversor_Escalas.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;  valoradstr     10  164[BANK2 ] unsigned char [10]
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  1    wreg      void 
  4357 ;; Registers used:
  4358 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;      Locals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4368 ;;Total ram usage:       14 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:   14
  4371 ;; This function calls:
  4372 ;;		_Converte_Escala
  4373 ;;		___lldiv
  4374 ;;		_ajusta_escala
  4375 ;;		_sprintf
  4376 ;; This function is called by:
  4377 ;;		_main
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text1
  4382  0057DE                     __ptext1:
  4383                           	opt stack 0
  4384  0057DE                     _Verifica_Analogica:
  4385                           	opt stack 16
  4386                           
  4387                           ;Conversor_Escalas.c: 67: char valoradstr [10];
  4388                           ;Conversor_Escalas.c: 69: if (ADCON0bits.GO == 0) {
  4389                           
  4390                           ; BSR set to: 1
  4391                           ;incstack = 0
  4392  0057DE  013E               	movlb	62	; () banked
  4393  0057E0  B1F8               	btfsc	248,0,b	;volatile
  4394  0057E2  0012               	return	
  4395                           
  4396                           ; BSR set to: 62
  4397                           ;Conversor_Escalas.c: 70: high = ADRESH;
  4398  0057E4  006F FBC0  F2EC    	movff	16112,_high	;volatile
  4399                           
  4400                           ;Conversor_Escalas.c: 71: low = ADRESL;
  4401  0057EA  006F FBBC  F2EB    	movff	16111,_low	;volatile
  4402                           
  4403                           ; BSR set to: 62
  4404                           ;Conversor_Escalas.c: 72: valor_AD = (int) (high * 0x100) + low;
  4405  0057F0  0102               	movlb	2	; () banked
  4406  0057F2  51EC               	movf	_high& (0+255),w,b
  4407  0057F4  6FA1               	movwf	(??_Verifica_Analogica+1)& (0+255),b
  4408  0057F6  6BA0               	clrf	??_Verifica_Analogica& (0+255),b
  4409  0057F8  51EB               	movf	_low& (0+255),w,b
  4410  0057FA  25A0               	addwf	??_Verifica_Analogica& (0+255),w,b
  4411  0057FC  6FDB               	movwf	_valor_AD& (0+255),b
  4412  0057FE  0E00               	movlw	0
  4413  005800  21A1               	addwfc	(??_Verifica_Analogica+1)& (0+255),w,b
  4414  005802  6FDC               	movwf	(_valor_AD+1)& (0+255),b
  4415                           
  4416                           ;Conversor_Escalas.c: 74: sample_result = sample_result + valor_AD;
  4417  005804  0060  FB6C  F2A0   	movff	_valor_AD,??_Verifica_Analogica
  4418  00580A  0060  FB70  F2A1   	movff	_valor_AD+1,??_Verifica_Analogica+1
  4419  005810  0E00               	movlw	0
  4420  005812  BFA1               	btfsc	(??_Verifica_Analogica+1)& (0+255),7,b
  4421  005814  0EFF               	movlw	255
  4422  005816  6FA2               	movwf	(??_Verifica_Analogica+2)& (0+255),b
  4423  005818  6FA3               	movwf	(??_Verifica_Analogica+3)& (0+255),b
  4424  00581A  0100               	movlb	0	; () banked
  4425  00581C  51DB               	movf	_sample_result& (0+255),w,b
  4426  00581E  0102               	movlb	2	; () banked
  4427  005820  25A0               	addwf	??_Verifica_Analogica& (0+255),w,b
  4428  005822  0100               	movlb	0	; () banked
  4429  005824  6FDB               	movwf	_sample_result& (0+255),b
  4430  005826  51DC               	movf	(_sample_result+1)& (0+255),w,b
  4431  005828  0102               	movlb	2	; () banked
  4432  00582A  21A1               	addwfc	(??_Verifica_Analogica+1)& (0+255),w,b
  4433  00582C  0100               	movlb	0	; () banked
  4434  00582E  6FDC               	movwf	(_sample_result+1)& (0+255),b
  4435  005830  51DD               	movf	(_sample_result+2)& (0+255),w,b
  4436  005832  0102               	movlb	2	; () banked
  4437  005834  21A2               	addwfc	(??_Verifica_Analogica+2)& (0+255),w,b
  4438  005836  0100               	movlb	0	; () banked
  4439  005838  6FDD               	movwf	(_sample_result+2)& (0+255),b
  4440  00583A  51DE               	movf	(_sample_result+3)& (0+255),w,b
  4441  00583C  0102               	movlb	2	; () banked
  4442  00583E  21A3               	addwfc	(??_Verifica_Analogica+3)& (0+255),w,b
  4443  005840  0100               	movlb	0	; () banked
  4444  005842  6FDE               	movwf	(_sample_result+3)& (0+255),b
  4445                           
  4446                           ;Conversor_Escalas.c: 76: if (ponteiro_analog >= 2000) {
  4447  005844  0101               	movlb	1	; () banked
  4448  005846  BFCE               	btfsc	(_ponteiro_analog+1)& (0+255),7,b
  4449  005848  D07C               	goto	l884
  4450  00584A  0ED0               	movlw	208
  4451  00584C  5DCD               	subwf	_ponteiro_analog& (0+255),w,b
  4452  00584E  0E07               	movlw	7
  4453  005850  59CE               	subwfb	(_ponteiro_analog+1)& (0+255),w,b
  4454  005852  A0D8               	btfss	16344,0,c
  4455  005854  D076               	goto	l884
  4456                           
  4457                           ; BSR set to: 1
  4458                           ;Conversor_Escalas.c: 77: ponteiro_analog = 0;
  4459  005856  0E00               	movlw	0
  4460  005858  6FCE               	movwf	(_ponteiro_analog+1)& (0+255),b
  4461  00585A  0E00               	movlw	0
  4462  00585C  6FCD               	movwf	_ponteiro_analog& (0+255),b
  4463                           
  4464                           ; BSR set to: 1
  4465                           ;Conversor_Escalas.c: 78: sample_result = sample_result / 2000;
  4466  00585E  0060  F36C  F205   	movff	_sample_result,___lldiv@dividend
  4467  005864  0060  F370  F206   	movff	_sample_result+1,___lldiv@dividend+1
  4468  00586A  0060  F374  F207   	movff	_sample_result+2,___lldiv@dividend+2
  4469  005870  0060  F378  F208   	movff	_sample_result+3,___lldiv@dividend+3
  4470  005876  0ED0               	movlw	208
  4471  005878  0102               	movlb	2	; () banked
  4472  00587A  6F09               	movwf	___lldiv@divisor& (0+255),b
  4473  00587C  0E07               	movlw	7
  4474  00587E  6F0A               	movwf	(___lldiv@divisor+1)& (0+255),b
  4475  005880  0E00               	movlw	0
  4476  005882  6F0B               	movwf	(___lldiv@divisor+2)& (0+255),b
  4477  005884  0E00               	movlw	0
  4478  005886  6F0C               	movwf	(___lldiv@divisor+3)& (0+255),b
  4479  005888  ECD7  F039         	call	___lldiv	;wreg free
  4480  00588C  0060  F814  F0DB   	movff	?___lldiv,_sample_result
  4481  005892  0060  F818  F0DC   	movff	?___lldiv+1,_sample_result+1
  4482  005898  0060  F81C  F0DD   	movff	?___lldiv+2,_sample_result+2
  4483  00589E  0060  F820  F0DE   	movff	?___lldiv+3,_sample_result+3
  4484                           
  4485                           ;Conversor_Escalas.c: 79: valor_AD = (int) sample_result;
  4486  0058A4  C0DB  F2DB         	movff	_sample_result,_valor_AD
  4487  0058A8  C0DC  F2DC         	movff	_sample_result+1,_valor_AD+1
  4488                           
  4489                           ;Conversor_Escalas.c: 83: ajusta_escala(valor_AD);
  4490  0058AC  0060  FB6C  F246   	movff	_valor_AD,ajusta_escala@valor
  4491  0058B2  0060  FB70  F247   	movff	_valor_AD+1,ajusta_escala@valor+1
  4492  0058B8  ECB9  F026         	call	_ajusta_escala	;wreg free
  4493  0058BC  0004               	clrwdt		;# 
  4494                           
  4495                           ;Conversor_Escalas.c: 87: Converte_Escala();
  4496  0058BE  ECA7  F02C         	call	_Converte_Escala	;wreg free
  4497                           
  4498                           ;Conversor_Escalas.c: 89: sprintf(valoradstr, "%i -> %i \r\n", valor_AD, (int) saida, m)
      +                          ;
  4499  0058C2  0EA4               	movlw	low Verifica_Analogica@valoradstr
  4500  0058C4  0102               	movlb	2	; () banked
  4501  0058C6  6F62               	movwf	sprintf@sp& (0+255),b
  4502  0058C8  0E02               	movlw	high Verifica_Analogica@valoradstr
  4503  0058CA  6F63               	movwf	(sprintf@sp+1)& (0+255),b
  4504  0058CC  0E2A               	movlw	low STR_111
  4505  0058CE  6F64               	movwf	sprintf@f& (0+255),b
  4506  0058D0  0EFF               	movlw	high STR_111
  4507  0058D2  6F65               	movwf	(sprintf@f+1)& (0+255),b
  4508  0058D4  0060  FB6C  F266   	movff	_valor_AD,?_sprintf+4
  4509  0058DA  0060  FB70  F267   	movff	_valor_AD+1,?_sprintf+5
  4510  0058E0  0060  F35C  F268   	movff	_saida,?_sprintf+6
  4511  0058E6  0060  F360  F269   	movff	_saida+1,?_sprintf+7
  4512  0058EC  0060  FB60  F26A   	movff	_m,?_sprintf+8
  4513  0058F2  0060  FB64  F26B   	movff	_m+1,?_sprintf+9
  4514  0058F8  0060  FB68  F26C   	movff	_m+2,?_sprintf+10
  4515  0058FE  EC59  F000         	call	_sprintf	;wreg free
  4516                           
  4517                           ;Conversor_Escalas.c: 92: MEMORIA[LATDbits.LATD3] = (long) saida;
  4518  005902  013F               	movlb	63	; () banked
  4519  005904  A7BD               	btfss	189,3,b	;volatile
  4520  005906  D004               	goto	u18800
  4521  005908  0102               	movlb	2	; () banked
  4522  00590A  6BA0               	clrf	??_Verifica_Analogica& (0+255),b
  4523  00590C  2BA0               	incf	??_Verifica_Analogica& (0+255),f,b
  4524  00590E  D002               	goto	u18808
  4525  005910                     u18800:
  4526  005910  0102               	movlb	2	; () banked
  4527  005912  6BA0               	clrf	??_Verifica_Analogica& (0+255),b
  4528  005914                     u18808:
  4529  005914  51A0               	movf	??_Verifica_Analogica& (0+255),w,b
  4530  005916  0D04               	mullw	4
  4531  005918  0E94               	movlw	low _MEMORIA
  4532  00591A  24F3               	addwf	16371,w,c
  4533  00591C  6ED9               	movwf	16345,c
  4534  00591E  0E01               	movlw	high _MEMORIA
  4535  005920  20F4               	addwfc	16372,w,c
  4536  005922  6EDA               	movwf	16346,c
  4537  005924  0060  F35F  FFDE   	movff	_saida,16350
  4538  00592A  0060  F363  FFDE   	movff	_saida+1,16350
  4539  005930  0060  F367  FFDE   	movff	_saida+2,16350
  4540  005936  0060  F36B  FFDE   	movff	_saida+3,16350
  4541                           
  4542                           ; BSR set to: 2
  4543                           ;Conversor_Escalas.c: 93: LATDbits.LATD3 ^= 1;
  4544  00593C  013F               	movlb	63	; () banked
  4545  00593E  77BD               	btg	189,3,b	;volatile
  4546                           
  4547                           ;Conversor_Escalas.c: 94: } else {
  4548  005940  D003               	goto	l885
  4549  005942                     l884:
  4550                           
  4551                           ;Conversor_Escalas.c: 95: ponteiro_analog++;
  4552                           
  4553                           ; BSR set to: 63
  4554  005942  0101               	movlb	1	; () banked
  4555  005944  4BCD               	infsnz	_ponteiro_analog& (0+255),f,b
  4556  005946  2BCE               	incf	(_ponteiro_analog+1)& (0+255),f,b
  4557  005948                     l885:
  4558                           
  4559                           ;Conversor_Escalas.c: 96: }
  4560                           ;Conversor_Escalas.c: 97: ADCON0bits.GO = 1;
  4561                           
  4562                           ; BSR set to: 1
  4563  005948  013E               	movlb	62	; () banked
  4564  00594A  81F8               	bsf	248,0,b	;volatile
  4565  00594C  0012               	return	
  4566  00594E                     __end_of_Verifica_Analogica:
  4567                           	opt stack 0
  4568                           
  4569 ;; *************** function _ajusta_escala *****************
  4570 ;; Defined at:
  4571 ;;		line 101 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Conversor_Escalas.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  valor           2   70[BANK2 ] int 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;		None
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      void 
  4578 ;; Registers used:
  4579 ;;		wreg, status,2, status,0, cstack
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4585 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4589 ;;Total ram usage:        3 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:   13
  4592 ;; This function calls:
  4593 ;;		_Calcula_Fator_m
  4594 ;; This function is called by:
  4595 ;;		_Verifica_Analogica
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           	psect	text2
  4600  004D72                     __ptext2:
  4601                           	opt stack 0
  4602  004D72                     _ajusta_escala:
  4603                           	opt stack 16
  4604                           
  4605                           ;Conversor_Escalas.c: 102: if (valor >= Min_Entrada1 && valor <= Max_Entrada1) {
  4606                           
  4607                           ; BSR set to: 62
  4608                           ;incstack = 0
  4609  004D72  0102               	movlb	2	; () banked
  4610  004D74  51D2               	movf	_Min_Entrada1& (0+255),w,b
  4611  004D76  5D46               	subwf	ajusta_escala@valor& (0+255),w,b
  4612  004D78  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  4613  004D7A  0A80               	xorlw	128
  4614  004D7C  6F48               	movwf	??_ajusta_escala& (0+255),b
  4615  004D7E  51D3               	movf	(_Min_Entrada1+1)& (0+255),w,b
  4616  004D80  0A80               	xorlw	128
  4617  004D82  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  4618  004D84  A0D8               	btfss	16344,0,c
  4619  004D86  D01A               	goto	l889
  4620                           
  4621                           ; BSR set to: 2
  4622  004D88  5146               	movf	ajusta_escala@valor& (0+255),w,b
  4623  004D8A  5DD4               	subwf	_Max_Entrada1& (0+255),w,b
  4624  004D8C  51D5               	movf	(_Max_Entrada1+1)& (0+255),w,b
  4625  004D8E  0A80               	xorlw	128
  4626  004D90  6F48               	movwf	??_ajusta_escala& (0+255),b
  4627  004D92  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  4628  004D94  0A80               	xorlw	128
  4629  004D96  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  4630  004D98  A0D8               	btfss	16344,0,c
  4631  004D9A  D010               	goto	l889
  4632                           
  4633                           ; BSR set to: 2
  4634                           ;Conversor_Escalas.c: 103: Max_Saida = Max_Saida1;
  4635  004D9C  C2D6  F2DF         	movff	_Max_Saida1,_Max_Saida
  4636  004DA0  C2D7  F2E0         	movff	_Max_Saida1+1,_Max_Saida+1
  4637                           
  4638                           ;Conversor_Escalas.c: 104: Min_Saida = Min_Saida1;
  4639  004DA4  C1D3  F1D1         	movff	_Min_Saida1,_Min_Saida
  4640  004DA8  C1D4  F1D2         	movff	_Min_Saida1+1,_Min_Saida+1
  4641                           
  4642                           ;Conversor_Escalas.c: 105: Max_Entrada = Max_Entrada1;
  4643  004DAC  C2D4  F2DD         	movff	_Max_Entrada1,_Max_Entrada
  4644  004DB0  C2D5  F2DE         	movff	_Max_Entrada1+1,_Max_Entrada+1
  4645                           
  4646                           ;Conversor_Escalas.c: 106: Min_Entrada = Min_Entrada1;
  4647  004DB4  C2D2  F1CF         	movff	_Min_Entrada1,_Min_Entrada
  4648  004DB8  C2D3  F1D0         	movff	_Min_Entrada1+1,_Min_Entrada+1
  4649  004DBC                     l889:
  4650                           
  4651                           ; BSR set to: 2
  4652                           ;Conversor_Escalas.c: 107: }
  4653                           ;Conversor_Escalas.c: 109: if (valor > Max_Entrada1 && valor <= Max_Entrada2) {
  4654                           
  4655                           ; BSR set to: 2
  4656  004DBC  5146               	movf	ajusta_escala@valor& (0+255),w,b
  4657  004DBE  5DD4               	subwf	_Max_Entrada1& (0+255),w,b
  4658  004DC0  51D5               	movf	(_Max_Entrada1+1)& (0+255),w,b
  4659  004DC2  0A80               	xorlw	128
  4660  004DC4  6F48               	movwf	??_ajusta_escala& (0+255),b
  4661  004DC6  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  4662  004DC8  0A80               	xorlw	128
  4663  004DCA  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  4664  004DCC  B0D8               	btfsc	16344,0,c
  4665  004DCE  D01A               	goto	l890
  4666                           
  4667                           ; BSR set to: 2
  4668  004DD0  5146               	movf	ajusta_escala@valor& (0+255),w,b
  4669  004DD2  5DCE               	subwf	_Max_Entrada2& (0+255),w,b
  4670  004DD4  51CF               	movf	(_Max_Entrada2+1)& (0+255),w,b
  4671  004DD6  0A80               	xorlw	128
  4672  004DD8  6F48               	movwf	??_ajusta_escala& (0+255),b
  4673  004DDA  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  4674  004DDC  0A80               	xorlw	128
  4675  004DDE  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  4676  004DE0  A0D8               	btfss	16344,0,c
  4677  004DE2  D010               	goto	l890
  4678                           
  4679                           ; BSR set to: 2
  4680                           ;Conversor_Escalas.c: 110: Max_Saida = Max_Saida2;
  4681  004DE4  C2D0  F2DF         	movff	_Max_Saida2,_Max_Saida
  4682  004DE8  C2D1  F2E0         	movff	_Max_Saida2+1,_Max_Saida+1
  4683                           
  4684                           ;Conversor_Escalas.c: 111: Min_Saida = Max_Saida1;
  4685  004DEC  C2D6  F1D1         	movff	_Max_Saida1,_Min_Saida
  4686  004DF0  C2D7  F1D2         	movff	_Max_Saida1+1,_Min_Saida+1
  4687                           
  4688                           ;Conversor_Escalas.c: 112: Max_Entrada = Max_Entrada2;
  4689  004DF4  C2CE  F2DD         	movff	_Max_Entrada2,_Max_Entrada
  4690  004DF8  C2CF  F2DE         	movff	_Max_Entrada2+1,_Max_Entrada+1
  4691                           
  4692                           ;Conversor_Escalas.c: 113: Min_Entrada = Max_Entrada1;
  4693  004DFC  C2D4  F1CF         	movff	_Max_Entrada1,_Min_Entrada
  4694  004E00  C2D5  F1D0         	movff	_Max_Entrada1+1,_Min_Entrada+1
  4695  004E04                     l890:
  4696                           
  4697                           ; BSR set to: 2
  4698                           ;Conversor_Escalas.c: 114: }
  4699                           ;Conversor_Escalas.c: 116: if (valor > Max_Entrada2 && valor <= Max_Entrada3) {
  4700                           
  4701                           ; BSR set to: 2
  4702  004E04  5146               	movf	ajusta_escala@valor& (0+255),w,b
  4703  004E06  5DCE               	subwf	_Max_Entrada2& (0+255),w,b
  4704  004E08  51CF               	movf	(_Max_Entrada2+1)& (0+255),w,b
  4705  004E0A  0A80               	xorlw	128
  4706  004E0C  6F48               	movwf	??_ajusta_escala& (0+255),b
  4707  004E0E  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  4708  004E10  0A80               	xorlw	128
  4709  004E12  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  4710  004E14  B0D8               	btfsc	16344,0,c
  4711  004E16  D01A               	goto	l891
  4712                           
  4713                           ; BSR set to: 2
  4714  004E18  5146               	movf	ajusta_escala@valor& (0+255),w,b
  4715  004E1A  5DCA               	subwf	_Max_Entrada3& (0+255),w,b
  4716  004E1C  51CB               	movf	(_Max_Entrada3+1)& (0+255),w,b
  4717  004E1E  0A80               	xorlw	128
  4718  004E20  6F48               	movwf	??_ajusta_escala& (0+255),b
  4719  004E22  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  4720  004E24  0A80               	xorlw	128
  4721  004E26  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  4722  004E28  A0D8               	btfss	16344,0,c
  4723  004E2A  D010               	goto	l891
  4724                           
  4725                           ; BSR set to: 2
  4726                           ;Conversor_Escalas.c: 117: Max_Saida = Max_Saida3;
  4727  004E2C  C2CC  F2DF         	movff	_Max_Saida3,_Max_Saida
  4728  004E30  C2CD  F2E0         	movff	_Max_Saida3+1,_Max_Saida+1
  4729                           
  4730                           ;Conversor_Escalas.c: 118: Min_Saida = Max_Saida2;
  4731  004E34  C2D0  F1D1         	movff	_Max_Saida2,_Min_Saida
  4732  004E38  C2D1  F1D2         	movff	_Max_Saida2+1,_Min_Saida+1
  4733                           
  4734                           ;Conversor_Escalas.c: 119: Max_Entrada = Max_Entrada3;
  4735  004E3C  C2CA  F2DD         	movff	_Max_Entrada3,_Max_Entrada
  4736  004E40  C2CB  F2DE         	movff	_Max_Entrada3+1,_Max_Entrada+1
  4737                           
  4738                           ;Conversor_Escalas.c: 120: Min_Entrada = Max_Entrada2;
  4739  004E44  C2CE  F1CF         	movff	_Max_Entrada2,_Min_Entrada
  4740  004E48  C2CF  F1D0         	movff	_Max_Entrada2+1,_Min_Entrada+1
  4741  004E4C                     l891:
  4742                           
  4743                           ; BSR set to: 2
  4744                           ;Conversor_Escalas.c: 121: }
  4745                           ;Conversor_Escalas.c: 123: if (valor > Max_Entrada3 && valor <= Max_Entrada4) {
  4746                           
  4747                           ; BSR set to: 2
  4748  004E4C  5146               	movf	ajusta_escala@valor& (0+255),w,b
  4749  004E4E  5DCA               	subwf	_Max_Entrada3& (0+255),w,b
  4750  004E50  51CB               	movf	(_Max_Entrada3+1)& (0+255),w,b
  4751  004E52  0A80               	xorlw	128
  4752  004E54  6F48               	movwf	??_ajusta_escala& (0+255),b
  4753  004E56  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  4754  004E58  0A80               	xorlw	128
  4755  004E5A  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  4756  004E5C  B0D8               	btfsc	16344,0,c
  4757  004E5E  D01A               	goto	l892
  4758                           
  4759                           ; BSR set to: 2
  4760  004E60  5146               	movf	ajusta_escala@valor& (0+255),w,b
  4761  004E62  5DC6               	subwf	_Max_Entrada4& (0+255),w,b
  4762  004E64  51C7               	movf	(_Max_Entrada4+1)& (0+255),w,b
  4763  004E66  0A80               	xorlw	128
  4764  004E68  6F48               	movwf	??_ajusta_escala& (0+255),b
  4765  004E6A  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  4766  004E6C  0A80               	xorlw	128
  4767  004E6E  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  4768  004E70  A0D8               	btfss	16344,0,c
  4769  004E72  D010               	goto	l892
  4770                           
  4771                           ; BSR set to: 2
  4772                           ;Conversor_Escalas.c: 124: Max_Saida = Max_Saida4;
  4773  004E74  C2C8  F2DF         	movff	_Max_Saida4,_Max_Saida
  4774  004E78  C2C9  F2E0         	movff	_Max_Saida4+1,_Max_Saida+1
  4775                           
  4776                           ;Conversor_Escalas.c: 125: Min_Saida = Max_Saida3;
  4777  004E7C  C2CC  F1D1         	movff	_Max_Saida3,_Min_Saida
  4778  004E80  C2CD  F1D2         	movff	_Max_Saida3+1,_Min_Saida+1
  4779                           
  4780                           ;Conversor_Escalas.c: 126: Max_Entrada = Max_Entrada4;
  4781  004E84  C2C6  F2DD         	movff	_Max_Entrada4,_Max_Entrada
  4782  004E88  C2C7  F2DE         	movff	_Max_Entrada4+1,_Max_Entrada+1
  4783                           
  4784                           ;Conversor_Escalas.c: 127: Min_Entrada = Max_Entrada3;
  4785  004E8C  C2CA  F1CF         	movff	_Max_Entrada3,_Min_Entrada
  4786  004E90  C2CB  F1D0         	movff	_Max_Entrada3+1,_Min_Entrada+1
  4787  004E94                     l892:
  4788                           
  4789                           ; BSR set to: 2
  4790                           ;Conversor_Escalas.c: 128: }
  4791                           ;Conversor_Escalas.c: 130: if (valor > Max_Entrada4 && valor <= Max_Entrada5) {
  4792                           
  4793                           ; BSR set to: 2
  4794  004E94  5146               	movf	ajusta_escala@valor& (0+255),w,b
  4795  004E96  5DC6               	subwf	_Max_Entrada4& (0+255),w,b
  4796  004E98  51C7               	movf	(_Max_Entrada4+1)& (0+255),w,b
  4797  004E9A  0A80               	xorlw	128
  4798  004E9C  6F48               	movwf	??_ajusta_escala& (0+255),b
  4799  004E9E  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  4800  004EA0  0A80               	xorlw	128
  4801  004EA2  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  4802  004EA4  B0D8               	btfsc	16344,0,c
  4803  004EA6  D01A               	goto	l893
  4804                           
  4805                           ; BSR set to: 2
  4806  004EA8  5146               	movf	ajusta_escala@valor& (0+255),w,b
  4807  004EAA  5DC2               	subwf	_Max_Entrada5& (0+255),w,b
  4808  004EAC  51C3               	movf	(_Max_Entrada5+1)& (0+255),w,b
  4809  004EAE  0A80               	xorlw	128
  4810  004EB0  6F48               	movwf	??_ajusta_escala& (0+255),b
  4811  004EB2  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  4812  004EB4  0A80               	xorlw	128
  4813  004EB6  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  4814  004EB8  A0D8               	btfss	16344,0,c
  4815  004EBA  D010               	goto	l893
  4816                           
  4817                           ; BSR set to: 2
  4818                           ;Conversor_Escalas.c: 131: Max_Saida = Max_Saida5;
  4819  004EBC  C2C4  F2DF         	movff	_Max_Saida5,_Max_Saida
  4820  004EC0  C2C5  F2E0         	movff	_Max_Saida5+1,_Max_Saida+1
  4821                           
  4822                           ;Conversor_Escalas.c: 132: Min_Saida = Max_Saida4;
  4823  004EC4  C2C8  F1D1         	movff	_Max_Saida4,_Min_Saida
  4824  004EC8  C2C9  F1D2         	movff	_Max_Saida4+1,_Min_Saida+1
  4825                           
  4826                           ;Conversor_Escalas.c: 133: Max_Entrada = Max_Entrada5;
  4827  004ECC  C2C2  F2DD         	movff	_Max_Entrada5,_Max_Entrada
  4828  004ED0  C2C3  F2DE         	movff	_Max_Entrada5+1,_Max_Entrada+1
  4829                           
  4830                           ;Conversor_Escalas.c: 134: Min_Entrada = Max_Entrada4;
  4831  004ED4  C2C6  F1CF         	movff	_Max_Entrada4,_Min_Entrada
  4832  004ED8  C2C7  F1D0         	movff	_Max_Entrada4+1,_Min_Entrada+1
  4833  004EDC                     l893:
  4834                           
  4835                           ; BSR set to: 2
  4836                           ;Conversor_Escalas.c: 135: }
  4837                           ;Conversor_Escalas.c: 136: if (valor > Max_Entrada5 && valor <= Max_Entrada6) {
  4838                           
  4839                           ; BSR set to: 2
  4840  004EDC  5146               	movf	ajusta_escala@valor& (0+255),w,b
  4841  004EDE  5DC2               	subwf	_Max_Entrada5& (0+255),w,b
  4842  004EE0  51C3               	movf	(_Max_Entrada5+1)& (0+255),w,b
  4843  004EE2  0A80               	xorlw	128
  4844  004EE4  6F48               	movwf	??_ajusta_escala& (0+255),b
  4845  004EE6  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  4846  004EE8  0A80               	xorlw	128
  4847  004EEA  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  4848  004EEC  B0D8               	btfsc	16344,0,c
  4849  004EEE  D01A               	goto	l894
  4850                           
  4851                           ; BSR set to: 2
  4852  004EF0  5146               	movf	ajusta_escala@valor& (0+255),w,b
  4853  004EF2  5DBE               	subwf	_Max_Entrada6& (0+255),w,b
  4854  004EF4  51BF               	movf	(_Max_Entrada6+1)& (0+255),w,b
  4855  004EF6  0A80               	xorlw	128
  4856  004EF8  6F48               	movwf	??_ajusta_escala& (0+255),b
  4857  004EFA  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  4858  004EFC  0A80               	xorlw	128
  4859  004EFE  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  4860  004F00  A0D8               	btfss	16344,0,c
  4861  004F02  D010               	goto	l894
  4862                           
  4863                           ; BSR set to: 2
  4864                           ;Conversor_Escalas.c: 137: Max_Saida = Max_Saida6;
  4865  004F04  C2C0  F2DF         	movff	_Max_Saida6,_Max_Saida
  4866  004F08  C2C1  F2E0         	movff	_Max_Saida6+1,_Max_Saida+1
  4867                           
  4868                           ;Conversor_Escalas.c: 138: Min_Saida = Max_Saida5;
  4869  004F0C  C2C4  F1D1         	movff	_Max_Saida5,_Min_Saida
  4870  004F10  C2C5  F1D2         	movff	_Max_Saida5+1,_Min_Saida+1
  4871                           
  4872                           ;Conversor_Escalas.c: 139: Max_Entrada = Max_Entrada6;
  4873  004F14  C2BE  F2DD         	movff	_Max_Entrada6,_Max_Entrada
  4874  004F18  C2BF  F2DE         	movff	_Max_Entrada6+1,_Max_Entrada+1
  4875                           
  4876                           ;Conversor_Escalas.c: 140: Min_Entrada = Max_Entrada5;
  4877  004F1C  C2C2  F1CF         	movff	_Max_Entrada5,_Min_Entrada
  4878  004F20  C2C3  F1D0         	movff	_Max_Entrada5+1,_Min_Entrada+1
  4879  004F24                     l894:
  4880                           
  4881                           ; BSR set to: 2
  4882                           ;Conversor_Escalas.c: 141: }
  4883                           ;Conversor_Escalas.c: 142: if (valor > Max_Entrada6 && valor <= Max_Entrada7) {
  4884                           
  4885                           ; BSR set to: 2
  4886  004F24  5146               	movf	ajusta_escala@valor& (0+255),w,b
  4887  004F26  5DBE               	subwf	_Max_Entrada6& (0+255),w,b
  4888  004F28  51BF               	movf	(_Max_Entrada6+1)& (0+255),w,b
  4889  004F2A  0A80               	xorlw	128
  4890  004F2C  6F48               	movwf	??_ajusta_escala& (0+255),b
  4891  004F2E  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  4892  004F30  0A80               	xorlw	128
  4893  004F32  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  4894  004F34  B0D8               	btfsc	16344,0,c
  4895  004F36  D01A               	goto	l895
  4896                           
  4897                           ; BSR set to: 2
  4898  004F38  5146               	movf	ajusta_escala@valor& (0+255),w,b
  4899  004F3A  5DBA               	subwf	_Max_Entrada7& (0+255),w,b
  4900  004F3C  51BB               	movf	(_Max_Entrada7+1)& (0+255),w,b
  4901  004F3E  0A80               	xorlw	128
  4902  004F40  6F48               	movwf	??_ajusta_escala& (0+255),b
  4903  004F42  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  4904  004F44  0A80               	xorlw	128
  4905  004F46  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  4906  004F48  A0D8               	btfss	16344,0,c
  4907  004F4A  D010               	goto	l895
  4908                           
  4909                           ; BSR set to: 2
  4910                           ;Conversor_Escalas.c: 143: Max_Saida = Max_Saida7;
  4911  004F4C  C2BC  F2DF         	movff	_Max_Saida7,_Max_Saida
  4912  004F50  C2BD  F2E0         	movff	_Max_Saida7+1,_Max_Saida+1
  4913                           
  4914                           ;Conversor_Escalas.c: 144: Min_Saida = Max_Saida6;
  4915  004F54  C2C0  F1D1         	movff	_Max_Saida6,_Min_Saida
  4916  004F58  C2C1  F1D2         	movff	_Max_Saida6+1,_Min_Saida+1
  4917                           
  4918                           ;Conversor_Escalas.c: 145: Max_Entrada = Max_Entrada7;
  4919  004F5C  C2BA  F2DD         	movff	_Max_Entrada7,_Max_Entrada
  4920  004F60  C2BB  F2DE         	movff	_Max_Entrada7+1,_Max_Entrada+1
  4921                           
  4922                           ;Conversor_Escalas.c: 146: Min_Entrada = Max_Entrada6;
  4923  004F64  C2BE  F1CF         	movff	_Max_Entrada6,_Min_Entrada
  4924  004F68  C2BF  F1D0         	movff	_Max_Entrada6+1,_Min_Entrada+1
  4925  004F6C                     l895:
  4926                           
  4927                           ; BSR set to: 2
  4928                           ;Conversor_Escalas.c: 147: }
  4929                           ;Conversor_Escalas.c: 149: if (valor > Max_Entrada7 && valor <= Max_Entrada8) {
  4930                           
  4931                           ; BSR set to: 2
  4932  004F6C  5146               	movf	ajusta_escala@valor& (0+255),w,b
  4933  004F6E  5DBA               	subwf	_Max_Entrada7& (0+255),w,b
  4934  004F70  51BB               	movf	(_Max_Entrada7+1)& (0+255),w,b
  4935  004F72  0A80               	xorlw	128
  4936  004F74  6F48               	movwf	??_ajusta_escala& (0+255),b
  4937  004F76  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  4938  004F78  0A80               	xorlw	128
  4939  004F7A  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  4940  004F7C  B0D8               	btfsc	16344,0,c
  4941  004F7E  D01A               	goto	l896
  4942                           
  4943                           ; BSR set to: 2
  4944  004F80  5146               	movf	ajusta_escala@valor& (0+255),w,b
  4945  004F82  5DB6               	subwf	_Max_Entrada8& (0+255),w,b
  4946  004F84  51B7               	movf	(_Max_Entrada8+1)& (0+255),w,b
  4947  004F86  0A80               	xorlw	128
  4948  004F88  6F48               	movwf	??_ajusta_escala& (0+255),b
  4949  004F8A  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  4950  004F8C  0A80               	xorlw	128
  4951  004F8E  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  4952  004F90  A0D8               	btfss	16344,0,c
  4953  004F92  D010               	goto	l896
  4954                           
  4955                           ; BSR set to: 2
  4956                           ;Conversor_Escalas.c: 150: Max_Saida = Max_Saida8;
  4957  004F94  C2B8  F2DF         	movff	_Max_Saida8,_Max_Saida
  4958  004F98  C2B9  F2E0         	movff	_Max_Saida8+1,_Max_Saida+1
  4959                           
  4960                           ;Conversor_Escalas.c: 151: Min_Saida = Max_Saida7;
  4961  004F9C  C2BC  F1D1         	movff	_Max_Saida7,_Min_Saida
  4962  004FA0  C2BD  F1D2         	movff	_Max_Saida7+1,_Min_Saida+1
  4963                           
  4964                           ;Conversor_Escalas.c: 152: Max_Entrada = Max_Entrada8;
  4965  004FA4  C2B6  F2DD         	movff	_Max_Entrada8,_Max_Entrada
  4966  004FA8  C2B7  F2DE         	movff	_Max_Entrada8+1,_Max_Entrada+1
  4967                           
  4968                           ;Conversor_Escalas.c: 153: Min_Entrada = Max_Entrada7;
  4969  004FAC  C2BA  F1CF         	movff	_Max_Entrada7,_Min_Entrada
  4970  004FB0  C2BB  F1D0         	movff	_Max_Entrada7+1,_Min_Entrada+1
  4971  004FB4                     l896:
  4972                           
  4973                           ; BSR set to: 2
  4974                           ;Conversor_Escalas.c: 154: }
  4975                           ;Conversor_Escalas.c: 156: if (valor > Max_Entrada8 && valor <= Max_Entrada9) {
  4976                           
  4977                           ; BSR set to: 2
  4978  004FB4  5146               	movf	ajusta_escala@valor& (0+255),w,b
  4979  004FB6  5DB6               	subwf	_Max_Entrada8& (0+255),w,b
  4980  004FB8  51B7               	movf	(_Max_Entrada8+1)& (0+255),w,b
  4981  004FBA  0A80               	xorlw	128
  4982  004FBC  6F48               	movwf	??_ajusta_escala& (0+255),b
  4983  004FBE  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  4984  004FC0  0A80               	xorlw	128
  4985  004FC2  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  4986  004FC4  B0D8               	btfsc	16344,0,c
  4987  004FC6  D01A               	goto	l897
  4988                           
  4989                           ; BSR set to: 2
  4990  004FC8  5146               	movf	ajusta_escala@valor& (0+255),w,b
  4991  004FCA  5DB2               	subwf	_Max_Entrada9& (0+255),w,b
  4992  004FCC  51B3               	movf	(_Max_Entrada9+1)& (0+255),w,b
  4993  004FCE  0A80               	xorlw	128
  4994  004FD0  6F48               	movwf	??_ajusta_escala& (0+255),b
  4995  004FD2  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  4996  004FD4  0A80               	xorlw	128
  4997  004FD6  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  4998  004FD8  A0D8               	btfss	16344,0,c
  4999  004FDA  D010               	goto	l897
  5000                           
  5001                           ; BSR set to: 2
  5002                           ;Conversor_Escalas.c: 157: Max_Saida = Max_Saida9;
  5003  004FDC  C2B4  F2DF         	movff	_Max_Saida9,_Max_Saida
  5004  004FE0  C2B5  F2E0         	movff	_Max_Saida9+1,_Max_Saida+1
  5005                           
  5006                           ;Conversor_Escalas.c: 158: Min_Saida = Max_Saida8;
  5007  004FE4  C2B8  F1D1         	movff	_Max_Saida8,_Min_Saida
  5008  004FE8  C2B9  F1D2         	movff	_Max_Saida8+1,_Min_Saida+1
  5009                           
  5010                           ;Conversor_Escalas.c: 159: Max_Entrada = Max_Entrada9;
  5011  004FEC  C2B2  F2DD         	movff	_Max_Entrada9,_Max_Entrada
  5012  004FF0  C2B3  F2DE         	movff	_Max_Entrada9+1,_Max_Entrada+1
  5013                           
  5014                           ;Conversor_Escalas.c: 160: Min_Entrada = Max_Entrada8;
  5015  004FF4  C2B6  F1CF         	movff	_Max_Entrada8,_Min_Entrada
  5016  004FF8  C2B7  F1D0         	movff	_Max_Entrada8+1,_Min_Entrada+1
  5017  004FFC                     l897:
  5018                           
  5019                           ; BSR set to: 2
  5020                           ;Conversor_Escalas.c: 161: }
  5021                           ;Conversor_Escalas.c: 163: if (valor > Max_Entrada9 && valor <= Max_Entrada10) {
  5022                           
  5023                           ; BSR set to: 2
  5024  004FFC  5146               	movf	ajusta_escala@valor& (0+255),w,b
  5025  004FFE  5DB2               	subwf	_Max_Entrada9& (0+255),w,b
  5026  005000  51B3               	movf	(_Max_Entrada9+1)& (0+255),w,b
  5027  005002  0A80               	xorlw	128
  5028  005004  6F48               	movwf	??_ajusta_escala& (0+255),b
  5029  005006  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  5030  005008  0A80               	xorlw	128
  5031  00500A  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  5032  00500C  B0D8               	btfsc	16344,0,c
  5033  00500E  D01A               	goto	l898
  5034                           
  5035                           ; BSR set to: 2
  5036  005010  5146               	movf	ajusta_escala@valor& (0+255),w,b
  5037  005012  5DB0               	subwf	_Max_Entrada10& (0+255),w,b
  5038  005014  51B1               	movf	(_Max_Entrada10+1)& (0+255),w,b
  5039  005016  0A80               	xorlw	128
  5040  005018  6F48               	movwf	??_ajusta_escala& (0+255),b
  5041  00501A  5147               	movf	(ajusta_escala@valor+1)& (0+255),w,b
  5042  00501C  0A80               	xorlw	128
  5043  00501E  5948               	subwfb	??_ajusta_escala& (0+255),w,b
  5044  005020  A0D8               	btfss	16344,0,c
  5045  005022  D010               	goto	l898
  5046                           
  5047                           ; BSR set to: 2
  5048                           ;Conversor_Escalas.c: 164: Max_Saida = Max_Saida10;
  5049  005024  C1FE  F2DF         	movff	_Max_Saida10,_Max_Saida
  5050  005028  C1FF  F2E0         	movff	_Max_Saida10+1,_Max_Saida+1
  5051                           
  5052                           ;Conversor_Escalas.c: 165: Min_Saida = Max_Saida9;
  5053  00502C  C2B4  F1D1         	movff	_Max_Saida9,_Min_Saida
  5054  005030  C2B5  F1D2         	movff	_Max_Saida9+1,_Min_Saida+1
  5055                           
  5056                           ;Conversor_Escalas.c: 166: Max_Entrada = Max_Entrada10;
  5057  005034  C2B0  F2DD         	movff	_Max_Entrada10,_Max_Entrada
  5058  005038  C2B1  F2DE         	movff	_Max_Entrada10+1,_Max_Entrada+1
  5059                           
  5060                           ;Conversor_Escalas.c: 167: Min_Entrada = Max_Entrada9;
  5061  00503C  C2B2  F1CF         	movff	_Max_Entrada9,_Min_Entrada
  5062  005040  C2B3  F1D0         	movff	_Max_Entrada9+1,_Min_Entrada+1
  5063  005044                     l898:
  5064                           
  5065                           ; BSR set to: 2
  5066                           ;Conversor_Escalas.c: 168: }
  5067                           ;Conversor_Escalas.c: 172: Calcula_Fator_m();
  5068                           
  5069                           ; BSR set to: 2
  5070  005044  EC90  F038         	call	_Calcula_Fator_m	;wreg free
  5071  005048  0012               	return		;funcret
  5072  00504A                     __end_of_ajusta_escala:
  5073                           	opt stack 0
  5074                           
  5075 ;; *************** function _Calcula_Fator_m *****************
  5076 ;; Defined at:
  5077 ;;		line 201 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Conversor_Escalas.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;		None
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;  mY              3   67[BANK2 ] float 
  5082 ;;  mX              3   64[BANK2 ] float 
  5083 ;; Return value:  Size  Location     Type
  5084 ;;                  1    wreg      void 
  5085 ;; Registers used:
  5086 ;;		wreg, status,2, status,0, cstack
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5093 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5094 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5095 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5096 ;;Total ram usage:        8 bytes
  5097 ;; Hardware stack levels used:    1
  5098 ;; Hardware stack levels required when called:   12
  5099 ;; This function calls:
  5100 ;;		___awtoft
  5101 ;;		___ftdiv
  5102 ;; This function is called by:
  5103 ;;		_main
  5104 ;;		_ajusta_escala
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           	psect	text3
  5109  007120                     __ptext3:
  5110                           	opt stack 0
  5111  007120                     _Calcula_Fator_m:
  5112                           	opt stack 16
  5113                           
  5114                           ;Conversor_Escalas.c: 202: float mX;
  5115                           ;Conversor_Escalas.c: 203: float mY;
  5116                           ;Conversor_Escalas.c: 207: mY = Max_Saida - Min_Saida;
  5117                           
  5118                           ;incstack = 0
  5119  007120  0060  F744  F23E   	movff	_Min_Saida,??_Calcula_Fator_m
  5120  007126  0060  F748  F23F   	movff	_Min_Saida+1,??_Calcula_Fator_m+1
  5121  00712C  0102               	movlb	2	; () banked
  5122  00712E  1F3E               	comf	??_Calcula_Fator_m& (0+255),f,b
  5123  007130  1F3F               	comf	(??_Calcula_Fator_m+1)& (0+255),f,b
  5124  007132  4B3E               	infsnz	??_Calcula_Fator_m& (0+255),f,b
  5125  007134  2B3F               	incf	(??_Calcula_Fator_m+1)& (0+255),f,b
  5126  007136  51DF               	movf	_Max_Saida& (0+255),w,b
  5127  007138  253E               	addwf	??_Calcula_Fator_m& (0+255),w,b
  5128  00713A  6F0D               	movwf	___awtoft@c& (0+255),b
  5129  00713C  51E0               	movf	(_Max_Saida+1)& (0+255),w,b
  5130  00713E  213F               	addwfc	(??_Calcula_Fator_m+1)& (0+255),w,b
  5131  007140  6F0E               	movwf	(___awtoft@c+1)& (0+255),b
  5132  007142  ECA9  F040         	call	___awtoft	;wreg free
  5133  007146  0060  F834  F243   	movff	?___awtoft,Calcula_Fator_m@mY
  5134  00714C  0060  F838  F244   	movff	?___awtoft+1,Calcula_Fator_m@mY+1
  5135  007152  0060  F83C  F245   	movff	?___awtoft+2,Calcula_Fator_m@mY+2
  5136                           
  5137                           ;Conversor_Escalas.c: 208: mX = Max_Entrada - Min_Entrada;
  5138  007158  0060  F73C  F23E   	movff	_Min_Entrada,??_Calcula_Fator_m
  5139  00715E  0060  F740  F23F   	movff	_Min_Entrada+1,??_Calcula_Fator_m+1
  5140  007164  0102               	movlb	2	; () banked
  5141  007166  1F3E               	comf	??_Calcula_Fator_m& (0+255),f,b
  5142  007168  1F3F               	comf	(??_Calcula_Fator_m+1)& (0+255),f,b
  5143  00716A  4B3E               	infsnz	??_Calcula_Fator_m& (0+255),f,b
  5144  00716C  2B3F               	incf	(??_Calcula_Fator_m+1)& (0+255),f,b
  5145  00716E  51DD               	movf	_Max_Entrada& (0+255),w,b
  5146  007170  253E               	addwf	??_Calcula_Fator_m& (0+255),w,b
  5147  007172  6F0D               	movwf	___awtoft@c& (0+255),b
  5148  007174  51DE               	movf	(_Max_Entrada+1)& (0+255),w,b
  5149  007176  213F               	addwfc	(??_Calcula_Fator_m+1)& (0+255),w,b
  5150  007178  6F0E               	movwf	(___awtoft@c+1)& (0+255),b
  5151  00717A  ECA9  F040         	call	___awtoft	;wreg free
  5152  00717E  0060  F834  F240   	movff	?___awtoft,Calcula_Fator_m@mX
  5153  007184  0060  F838  F241   	movff	?___awtoft+1,Calcula_Fator_m@mX+1
  5154  00718A  0060  F83C  F242   	movff	?___awtoft+2,Calcula_Fator_m@mX+2
  5155                           
  5156                           ;Conversor_Escalas.c: 209: m = mY / mX;
  5157  007190  0060  F90C  F22F   	movff	Calcula_Fator_m@mY,___ftdiv@f1
  5158  007196  0060  F910  F230   	movff	Calcula_Fator_m@mY+1,___ftdiv@f1+1
  5159  00719C  0060  F914  F231   	movff	Calcula_Fator_m@mY+2,___ftdiv@f1+2
  5160  0071A2  0060  F900  F232   	movff	Calcula_Fator_m@mX,___ftdiv@f2
  5161  0071A8  0060  F904  F233   	movff	Calcula_Fator_m@mX+1,___ftdiv@f2+1
  5162  0071AE  0060  F908  F234   	movff	Calcula_Fator_m@mX+2,___ftdiv@f2+2
  5163  0071B4  ECE2  F032         	call	___ftdiv	;wreg free
  5164  0071B8  0060  F8BC  F2D8   	movff	?___ftdiv,_m
  5165  0071BE  0060  F8C0  F2D9   	movff	?___ftdiv+1,_m+1
  5166  0071C4  0060  F8C4  F2DA   	movff	?___ftdiv+2,_m+2
  5167  0071CA  0012               	return		;funcret
  5168  0071CC                     __end_of_Calcula_Fator_m:
  5169                           	opt stack 0
  5170                           
  5171 ;; *************** function _Converte_Escala *****************
  5172 ;; Defined at:
  5173 ;;		line 175 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Conversor_Escalas.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;		None
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;		None
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  1    wreg      void 
  5180 ;; Registers used:
  5181 ;;		wreg, status,2, status,0, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;Total ram usage:        4 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:   12
  5194 ;; This function calls:
  5195 ;;		___altoft
  5196 ;;		___awtoft
  5197 ;;		___ftadd
  5198 ;;		___ftmul
  5199 ;;		___fttol
  5200 ;; This function is called by:
  5201 ;;		_Verifica_Analogica
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text4
  5206  00594E                     __ptext4:
  5207                           	opt stack 0
  5208  00594E                     _Converte_Escala:
  5209                           	opt stack 17
  5210                           
  5211                           ;Conversor_Escalas.c: 181: offset = (float) ((long) Max_Saida - (long) (m * Max_Entrada)
      +                          );
  5212                           
  5213                           ;incstack = 0
  5214  00594E  0060  FB60  F21C   	movff	_m,___ftmul@f2
  5215  005954  0060  FB64  F21D   	movff	_m+1,___ftmul@f2+1
  5216  00595A  0060  FB68  F21E   	movff	_m+2,___ftmul@f2+2
  5217  005960  0060  FB74  F20D   	movff	_Max_Entrada,___awtoft@c
  5218  005966  0060  FB78  F20E   	movff	_Max_Entrada+1,___awtoft@c+1
  5219  00596C  ECA9  F040         	call	___awtoft	;wreg free
  5220  005970  0060  F834  F219   	movff	?___awtoft,___ftmul@f1
  5221  005976  0060  F838  F21A   	movff	?___awtoft+1,___ftmul@f1+1
  5222  00597C  0060  F83C  F21B   	movff	?___awtoft+2,___ftmul@f1+2
  5223  005982  EC50  F030         	call	___ftmul	;wreg free
  5224  005986  0060  F864  F23E   	movff	?___ftmul,___fttol@f1
  5225  00598C  0060  F868  F23F   	movff	?___ftmul+1,___fttol@f1+1
  5226  005992  0060  F86C  F240   	movff	?___ftmul+2,___fttol@f1+2
  5227  005998  EC5B  F031         	call	___fttol	;wreg free
  5228  00599C  0102               	movlb	2	; () banked
  5229  00599E  1F3E               	comf	?___fttol& (0+255),f,b
  5230  0059A0  1F3F               	comf	(?___fttol+1)& (0+255),f,b
  5231  0059A2  1F40               	comf	(?___fttol+2)& (0+255),f,b
  5232  0059A4  1F41               	comf	(?___fttol+3)& (0+255),f,b
  5233  0059A6  2B3E               	incf	?___fttol& (0+255),f,b
  5234  0059A8  0E00               	movlw	0
  5235  0059AA  233F               	addwfc	(?___fttol+1)& (0+255),f,b
  5236  0059AC  2340               	addwfc	(?___fttol+2)& (0+255),f,b
  5237  0059AE  2341               	addwfc	(?___fttol+3)& (0+255),f,b
  5238  0059B0  0060  FB7C  F257   	movff	_Max_Saida,??_Converte_Escala
  5239  0059B6  0060  FB80  F258   	movff	_Max_Saida+1,??_Converte_Escala+1
  5240  0059BC  0E00               	movlw	0
  5241  0059BE  BF58               	btfsc	(??_Converte_Escala+1)& (0+255),7,b
  5242  0059C0  0EFF               	movlw	255
  5243  0059C2  6F59               	movwf	(??_Converte_Escala+2)& (0+255),b
  5244  0059C4  6F5A               	movwf	(??_Converte_Escala+3)& (0+255),b
  5245  0059C6  513E               	movf	?___fttol& (0+255),w,b
  5246  0059C8  2557               	addwf	??_Converte_Escala& (0+255),w,b
  5247  0059CA  6F4D               	movwf	___altoft@c& (0+255),b
  5248  0059CC  513F               	movf	(?___fttol+1)& (0+255),w,b
  5249  0059CE  2158               	addwfc	(??_Converte_Escala+1)& (0+255),w,b
  5250  0059D0  6F4E               	movwf	(___altoft@c+1)& (0+255),b
  5251  0059D2  5140               	movf	(?___fttol+2)& (0+255),w,b
  5252  0059D4  2159               	addwfc	(??_Converte_Escala+2)& (0+255),w,b
  5253  0059D6  6F4F               	movwf	(___altoft@c+2)& (0+255),b
  5254  0059D8  5141               	movf	(?___fttol+3)& (0+255),w,b
  5255  0059DA  215A               	addwfc	(??_Converte_Escala+3)& (0+255),w,b
  5256  0059DC  6F50               	movwf	(___altoft@c+3)& (0+255),b
  5257  0059DE  EC1D  F03A         	call	___altoft	;wreg free
  5258  0059E2  0060  F934  F1C4   	movff	?___altoft,_offset
  5259  0059E8  0060  F938  F1C5   	movff	?___altoft+1,_offset+1
  5260  0059EE  0060  F93C  F1C6   	movff	?___altoft+2,_offset+2
  5261  0059F4  0004               	clrwdt		;# 
  5262                           
  5263                           ;Conversor_Escalas.c: 183: saida = (unsigned long) (((float) valor_AD * (float) m) + off
      +                          set);
  5264  0059F6  0060  F710  F235   	movff	_offset,___ftadd@f2
  5265  0059FC  0060  F714  F236   	movff	_offset+1,___ftadd@f2+1
  5266  005A02  0060  F718  F237   	movff	_offset+2,___ftadd@f2+2
  5267  005A08  0060  FB60  F21C   	movff	_m,___ftmul@f2
  5268  005A0E  0060  FB64  F21D   	movff	_m+1,___ftmul@f2+1
  5269  005A14  0060  FB68  F21E   	movff	_m+2,___ftmul@f2+2
  5270  005A1A  0060  FB6C  F20D   	movff	_valor_AD,___awtoft@c
  5271  005A20  0060  FB70  F20E   	movff	_valor_AD+1,___awtoft@c+1
  5272  005A26  ECA9  F040         	call	___awtoft	;wreg free
  5273  005A2A  0060  F834  F219   	movff	?___awtoft,___ftmul@f1
  5274  005A30  0060  F838  F21A   	movff	?___awtoft+1,___ftmul@f1+1
  5275  005A36  0060  F83C  F21B   	movff	?___awtoft+2,___ftmul@f1+2
  5276  005A3C  EC50  F030         	call	___ftmul	;wreg free
  5277  005A40  0060  F864  F232   	movff	?___ftmul,___ftadd@f1
  5278  005A46  0060  F868  F233   	movff	?___ftmul+1,___ftadd@f1+1
  5279  005A4C  0060  F86C  F234   	movff	?___ftmul+2,___ftadd@f1+2
  5280  005A52  EC3A  F029         	call	___ftadd	;wreg free
  5281  005A56  0060  F8C8  F23E   	movff	?___ftadd,___fttol@f1
  5282  005A5C  0060  F8CC  F23F   	movff	?___ftadd+1,___fttol@f1+1
  5283  005A62  0060  F8D0  F240   	movff	?___ftadd+2,___fttol@f1+2
  5284  005A68  EC5B  F031         	call	___fttol	;wreg free
  5285  005A6C  0060  F8F8  F0D7   	movff	?___fttol,_saida
  5286  005A72  0060  F8FC  F0D8   	movff	?___fttol+1,_saida+1
  5287  005A78  0060  F900  F0D9   	movff	?___fttol+2,_saida+2
  5288  005A7E  0060  F904  F0DA   	movff	?___fttol+3,_saida+3
  5289  005A84  0004               	clrwdt		;# 
  5290                           
  5291                           ;Conversor_Escalas.c: 188: }
  5292                           ;Conversor_Escalas.c: 196: if (saida > 1000) {
  5293                           
  5294                           ; BSR set to: 0
  5295                           
  5296                           ;Conversor_Escalas.c: 187: saida = 0;
  5297                           
  5298                           ;Conversor_Escalas.c: 186: if (saida < 0) {
  5299  005A86  0100               	movlb	0	; () banked
  5300  005A88  51DA               	movf	(_saida+3)& (0+255),w,b
  5301  005A8A  11D9               	iorwf	(_saida+2)& (0+255),w,b
  5302  005A8C  E106               	bnz	u18600
  5303  005A8E  0EE9               	movlw	233
  5304  005A90  5DD7               	subwf	_saida& (0+255),w,b
  5305  005A92  0E03               	movlw	3
  5306  005A94  59D8               	subwfb	(_saida+1)& (0+255),w,b
  5307  005A96  A0D8               	btfss	16344,0,c
  5308  005A98  0012               	return	
  5309  005A9A                     u18600:
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;Conversor_Escalas.c: 197: saida = 1000;
  5313  005A9A  0EE8               	movlw	232
  5314  005A9C  6FD7               	movwf	_saida& (0+255),b
  5315  005A9E  0E03               	movlw	3
  5316  005AA0  6FD8               	movwf	(_saida+1)& (0+255),b
  5317  005AA2  0E00               	movlw	0
  5318  005AA4  6FD9               	movwf	(_saida+2)& (0+255),b
  5319  005AA6  0E00               	movlw	0
  5320  005AA8  6FDA               	movwf	(_saida+3)& (0+255),b
  5321  005AAA  0012               	return	
  5322  005AAC                     __end_of_Converte_Escala:
  5323                           	opt stack 0
  5324                           
  5325 ;; *************** function ___awtoft *****************
  5326 ;; Defined at:
  5327 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;  c               2   13[BANK2 ] int 
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;  sign            1   16[BANK2 ] unsigned char 
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  3   13[BANK2 ] float 
  5334 ;; Registers used:
  5335 ;;		wreg, status,2, status,0, cstack
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5341 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5342 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;Total ram usage:        4 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; Hardware stack levels required when called:   11
  5348 ;; This function calls:
  5349 ;;		___ftpack
  5350 ;; This function is called by:
  5351 ;;		_Converte_Escala
  5352 ;;		_Calcula_Fator_m
  5353 ;;		_polinomio
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           	psect	text5
  5358  008152                     __ptext5:
  5359                           	opt stack 0
  5360  008152                     ___awtoft:
  5361                           	opt stack 16
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;incstack = 0
  5365  008152  0E00               	movlw	0
  5366  008154  0102               	movlb	2	; () banked
  5367  008156  6F10               	movwf	___awtoft@sign& (0+255),b
  5368                           
  5369                           ; BSR set to: 2
  5370  008158  AF0E               	btfss	(___awtoft@c+1)& (0+255),7,b
  5371  00815A  D006               	goto	l1432
  5372                           
  5373                           ; BSR set to: 2
  5374  00815C  6D0D               	negf	___awtoft@c& (0+255),b
  5375  00815E  1F0E               	comf	(___awtoft@c+1)& (0+255),f,b
  5376  008160  B0D8               	btfsc	16344,0,c
  5377  008162  2B0E               	incf	(___awtoft@c+1)& (0+255),f,b
  5378                           
  5379                           ; BSR set to: 2
  5380  008164  0E01               	movlw	1
  5381  008166  6F10               	movwf	___awtoft@sign& (0+255),b
  5382  008168                     l1432:
  5383                           
  5384                           ; BSR set to: 2
  5385                           
  5386                           ; BSR set to: 2
  5387  008168  0060  F834  F205   	movff	___awtoft@c,___ftpack@arg
  5388  00816E  0060  F838  F206   	movff	___awtoft@c+1,___ftpack@arg+1
  5389  008174  6B07               	clrf	(___ftpack@arg+2)& (0+255),b
  5390  008176  0E8E               	movlw	142
  5391  008178  6F08               	movwf	___ftpack@exp& (0+255),b
  5392  00817A  0060  F840  F209   	movff	___awtoft@sign,___ftpack@sign
  5393  008180  EC2C  F037         	call	___ftpack	;wreg free
  5394  008184  0060  F814  F20D   	movff	?___ftpack,?___awtoft
  5395  00818A  0060  F818  F20E   	movff	?___ftpack+1,?___awtoft+1
  5396  008190  0060  F81C  F20F   	movff	?___ftpack+2,?___awtoft+2
  5397  008196  0012               	return	
  5398  008198                     __end_of___awtoft:
  5399                           	opt stack 0
  5400                           
  5401 ;; *************** function ___altoft *****************
  5402 ;; Defined at:
  5403 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  c               4   77[BANK2 ] long 
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;  sign            1   86[BANK2 ] unsigned char 
  5408 ;;  exp             1   85[BANK2 ] unsigned char 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  3   77[BANK2 ] float 
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0, cstack
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5418 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;Total ram usage:       10 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:   11
  5425 ;; This function calls:
  5426 ;;		___ftpack
  5427 ;; This function is called by:
  5428 ;;		_Converte_Escala
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           	psect	text6
  5433  00743A                     __ptext6:
  5434                           	opt stack 0
  5435  00743A                     ___altoft:
  5436                           	opt stack 17
  5437                           
  5438                           ;incstack = 0
  5439  00743A  0E00               	movlw	0
  5440  00743C  0102               	movlb	2	; () banked
  5441  00743E  6F56               	movwf	___altoft@sign& (0+255),b
  5442  007440  0E8E               	movlw	142
  5443  007442  6F55               	movwf	___altoft@exp& (0+255),b
  5444                           
  5445                           ; BSR set to: 2
  5446  007444  AF50               	btfss	(___altoft@c+3)& (0+255),7,b
  5447  007446  D011               	goto	l1321
  5448                           
  5449                           ; BSR set to: 2
  5450  007448  1F50               	comf	(___altoft@c+3)& (0+255),f,b
  5451  00744A  1F4F               	comf	(___altoft@c+2)& (0+255),f,b
  5452  00744C  1F4E               	comf	(___altoft@c+1)& (0+255),f,b
  5453  00744E  6D4D               	negf	___altoft@c& (0+255),b
  5454  007450  0E00               	movlw	0
  5455  007452  234E               	addwfc	(___altoft@c+1)& (0+255),f,b
  5456  007454  234F               	addwfc	(___altoft@c+2)& (0+255),f,b
  5457  007456  2350               	addwfc	(___altoft@c+3)& (0+255),f,b
  5458                           
  5459                           ; BSR set to: 2
  5460  007458  0E01               	movlw	1
  5461  00745A  6F56               	movwf	___altoft@sign& (0+255),b
  5462                           
  5463                           ; BSR set to: 2
  5464  00745C  D006               	goto	l1321
  5465  00745E                     
  5466                           ; BSR set to: 2
  5467                           
  5468                           ; BSR set to: 2
  5469  00745E  90D8               	bcf	16344,0,c
  5470  007460  3350               	rrcf	(___altoft@c+3)& (0+255),f,b
  5471  007462  334F               	rrcf	(___altoft@c+2)& (0+255),f,b
  5472  007464  334E               	rrcf	(___altoft@c+1)& (0+255),f,b
  5473  007466  334D               	rrcf	___altoft@c& (0+255),f,b
  5474  007468  2B55               	incf	___altoft@exp& (0+255),f,b
  5475  00746A                     l1321:
  5476                           
  5477                           ; BSR set to: 2
  5478                           
  5479                           ; BSR set to: 2
  5480  00746A  0E00               	movlw	0
  5481  00746C  154D               	andwf	___altoft@c& (0+255),w,b
  5482  00746E  6F51               	movwf	??___altoft& (0+255),b
  5483  007470  0E00               	movlw	0
  5484  007472  154E               	andwf	(___altoft@c+1)& (0+255),w,b
  5485  007474  6F52               	movwf	(??___altoft+1)& (0+255),b
  5486  007476  0E00               	movlw	0
  5487  007478  154F               	andwf	(___altoft@c+2)& (0+255),w,b
  5488  00747A  6F53               	movwf	(??___altoft+2)& (0+255),b
  5489  00747C  0EFF               	movlw	255
  5490  00747E  1550               	andwf	(___altoft@c+3)& (0+255),w,b
  5491  007480  6F54               	movwf	(??___altoft+3)& (0+255),b
  5492  007482  5151               	movf	??___altoft& (0+255),w,b
  5493  007484  1152               	iorwf	(??___altoft+1)& (0+255),w,b
  5494  007486  1153               	iorwf	(??___altoft+2)& (0+255),w,b
  5495  007488  1154               	iorwf	(??___altoft+3)& (0+255),w,b
  5496  00748A  A4D8               	btfss	16344,2,c
  5497  00748C  D7E8               	goto	l1322
  5498                           
  5499                           ; BSR set to: 2
  5500                           
  5501                           ; BSR set to: 2
  5502  00748E  0060  F934  F205   	movff	___altoft@c,___ftpack@arg
  5503  007494  0060  F938  F206   	movff	___altoft@c+1,___ftpack@arg+1
  5504  00749A  0060  F93C  F207   	movff	___altoft@c+2,___ftpack@arg+2
  5505  0074A0  0060  F954  F208   	movff	___altoft@exp,___ftpack@exp
  5506  0074A6  0060  F958  F209   	movff	___altoft@sign,___ftpack@sign
  5507  0074AC  EC2C  F037         	call	___ftpack	;wreg free
  5508  0074B0  0060  F814  F24D   	movff	?___ftpack,?___altoft
  5509  0074B6  0060  F818  F24E   	movff	?___ftpack+1,?___altoft+1
  5510  0074BC  0060  F81C  F24F   	movff	?___ftpack+2,?___altoft+2
  5511  0074C2  0012               	return	
  5512  0074C4                     __end_of___altoft:
  5513                           	opt stack 0
  5514                           
  5515 ;; *************** function _TransmiteBuffer_COMM *****************
  5516 ;; Defined at:
  5517 ;;		line 167 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;		None
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;		None
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  2    5[BANK2 ] int 
  5524 ;; Registers used:
  5525 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5531 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5534 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5535 ;;Total ram usage:        2 bytes
  5536 ;; Hardware stack levels used:    1
  5537 ;; Hardware stack levels required when called:   10
  5538 ;; This function calls:
  5539 ;;		Nothing
  5540 ;; This function is called by:
  5541 ;;		_main
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           	psect	text7
  5546  007C66                     __ptext7:
  5547                           	opt stack 0
  5548  007C66                     _TransmiteBuffer_COMM:
  5549                           	opt stack 20
  5550                           
  5551                           ;Serial.c: 168: if (U2ERRIRbits.TXMTIF == 0) return 0;
  5552                           
  5553                           ;incstack = 0
  5554  007C66  013D               	movlb	61	; () banked
  5555  007C68  BFE1               	btfsc	225,7,b	;volatile
  5556  007C6A  D006               	goto	l267
  5557                           
  5558                           ; BSR set to: 61
  5559  007C6C  0E00               	movlw	0
  5560  007C6E  0102               	movlb	2	; () banked
  5561  007C70  6F06               	movwf	(?_TransmiteBuffer_COMM+1)& (0+255),b
  5562  007C72  0E00               	movlw	0
  5563  007C74  6F05               	movwf	?_TransmiteBuffer_COMM& (0+255),b
  5564                           
  5565                           ; BSR set to: 2
  5566  007C76  0012               	return	
  5567  007C78                     l267:
  5568                           
  5569                           ;Serial.c: 169: if (ponteiro_escrita_COMM < ponteiro_COMM) {
  5570                           
  5571                           ; BSR set to: 2
  5572  007C78  0102               	movlb	2	; () banked
  5573  007C7A  51E3               	movf	_ponteiro_COMM& (0+255),w,b
  5574  007C7C  5DE7               	subwf	_ponteiro_escrita_COMM& (0+255),w,b
  5575  007C7E  51E4               	movf	(_ponteiro_COMM+1)& (0+255),w,b
  5576  007C80  59E8               	subwfb	(_ponteiro_escrita_COMM+1)& (0+255),w,b
  5577  007C82  B0D8               	btfsc	16344,0,c
  5578  007C84  D011               	goto	l269
  5579                           
  5580                           ; BSR set to: 2
  5581                           ;Serial.c: 170: U2TXB = buffer_escrita_comm[ponteiro_escrita_COMM];
  5582  007C86  0E00               	movlw	low _buffer_escrita_comm
  5583  007C88  25E7               	addwf	_ponteiro_escrita_COMM& (0+255),w,b
  5584  007C8A  6ED9               	movwf	16345,c
  5585  007C8C  0E07               	movlw	high _buffer_escrita_comm
  5586  007C8E  21E8               	addwfc	(_ponteiro_escrita_COMM+1)& (0+255),w,b
  5587  007C90  6EDA               	movwf	16346,c
  5588  007C92  50DF               	movf	16351,w,c
  5589  007C94  013D               	movlb	61	; () banked
  5590  007C96  6FD2               	movwf	210,b	;volatile
  5591                           
  5592                           ; BSR set to: 61
  5593                           ;Serial.c: 171: ponteiro_escrita_COMM++;
  5594  007C98  0102               	movlb	2	; () banked
  5595  007C9A  4BE7               	infsnz	_ponteiro_escrita_COMM& (0+255),f,b
  5596  007C9C  2BE8               	incf	(_ponteiro_escrita_COMM+1)& (0+255),f,b
  5597                           
  5598                           ; BSR set to: 2
  5599                           ;Serial.c: 172: return 0;
  5600  007C9E  0E00               	movlw	0
  5601  007CA0  6F06               	movwf	(?_TransmiteBuffer_COMM+1)& (0+255),b
  5602  007CA2  0E00               	movlw	0
  5603  007CA4  6F05               	movwf	?_TransmiteBuffer_COMM& (0+255),b
  5604                           
  5605                           ; BSR set to: 2
  5606                           ;Serial.c: 173: } else {
  5607                           
  5608                           ; BSR set to: 2
  5609  007CA6  0012               	return	
  5610  007CA8                     l269:
  5611                           
  5612                           ; BSR set to: 2
  5613                           ;Serial.c: 174: ponteiro_COMM = 0;
  5614                           
  5615                           ; BSR set to: 2
  5616  007CA8  0E00               	movlw	0
  5617  007CAA  6FE4               	movwf	(_ponteiro_COMM+1)& (0+255),b
  5618  007CAC  0E00               	movlw	0
  5619  007CAE  6FE3               	movwf	_ponteiro_COMM& (0+255),b
  5620                           
  5621                           ;Serial.c: 175: ponteiro_escrita_COMM = 0;
  5622  007CB0  0E00               	movlw	0
  5623  007CB2  6FE8               	movwf	(_ponteiro_escrita_COMM+1)& (0+255),b
  5624  007CB4  0E00               	movlw	0
  5625  007CB6  6FE7               	movwf	_ponteiro_escrita_COMM& (0+255),b
  5626                           
  5627                           ;Serial.c: 176: return 1;
  5628  007CB8  0E00               	movlw	0
  5629  007CBA  6F06               	movwf	(?_TransmiteBuffer_COMM+1)& (0+255),b
  5630  007CBC  0E01               	movlw	1
  5631  007CBE  6F05               	movwf	?_TransmiteBuffer_COMM& (0+255),b
  5632                           
  5633                           ; BSR set to: 2
  5634  007CC0  0012               	return	
  5635  007CC2                     __end_of_TransmiteBuffer_COMM:
  5636                           	opt stack 0
  5637                           
  5638 ;; *************** function _InicializaWifi *****************
  5639 ;; Defined at:
  5640 ;;		line 17 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;		None
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;		None
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  1    wreg      void 
  5647 ;; Registers used:
  5648 ;;		wreg
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5656 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5657 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5658 ;;Total ram usage:        1 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; Hardware stack levels required when called:   10
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		_main
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text8
  5669  0082CC                     __ptext8:
  5670                           	opt stack 0
  5671  0082CC                     _InicializaWifi:
  5672                           	opt stack 20
  5673                           
  5674                           ;Wifi.c: 18: TRISEbits.TRISE1 = 1;
  5675                           
  5676                           ; BSR set to: 2
  5677                           ;incstack = 0
  5678  0082CC  013F               	movlb	63	; () banked
  5679  0082CE  83C6               	bsf	198,1,b	;volatile
  5680                           
  5681                           ;Wifi.c: 19: TRISEbits.TRISE0 = 0;
  5682  0082D0  91C6               	bcf	198,0,b	;volatile
  5683                           
  5684                           ;Wifi.c: 20: TRISAbits.TRISA4 = 1;
  5685  0082D2  89C2               	bsf	194,4,b	;volatile
  5686                           
  5687                           ;Wifi.c: 21: TRISEbits.TRISE2 = 0;
  5688  0082D4  95C6               	bcf	198,2,b	;volatile
  5689                           
  5690                           ;Wifi.c: 23: ANSELEbits.ANSELE1 = 0;
  5691  0082D6  013A               	movlb	58	; () banked
  5692  0082D8  9380               	bcf	128,1,b	;volatile
  5693                           
  5694                           ;Wifi.c: 24: ANSELAbits.ANSELA4 = 0;
  5695  0082DA  9940               	bcf	64,4,b	;volatile
  5696                           
  5697                           ;Wifi.c: 26: LATEbits.LATE2 = 1;
  5698  0082DC  013F               	movlb	63	; () banked
  5699  0082DE  85BE               	bsf	190,2,b	;volatile
  5700                           
  5701                           ;Wifi.c: 27: LATEbits.LATE0 = 1;
  5702  0082E0  81BE               	bsf	190,0,b	;volatile
  5703                           
  5704                           ;Wifi.c: 29: TRISAbits.TRISA5 = 0;
  5705  0082E2  9BC2               	bcf	194,5,b	;volatile
  5706                           
  5707                           ;Wifi.c: 30: LATAbits.LATA5 = 0;
  5708  0082E4  9BBA               	bcf	186,5,b	;volatile
  5709                           
  5710                           ; BSR set to: 63
  5711                           ;Wifi.c: 31: _delay((unsigned long)((10)*(40000000/4000.0)));
  5712  0082E6  0E82               	movlw	130
  5713  0082E8  0102               	movlb	2	; () banked
  5714  0082EA  6F05               	movwf	??_InicializaWifi& (0+255),b
  5715  0082EC  0EDD               	movlw	221
  5716  0082EE                     u19057:
  5717  0082EE  2EE8               	decfsz	16360,f,c
  5718  0082F0  D7FE               	bra	u19057
  5719  0082F2  2F05               	decfsz	??_InicializaWifi& (0+255),f,b
  5720  0082F4  D7FC               	bra	u19057
  5721  0082F6  D000               	nop2	
  5722                           
  5723                           ;Wifi.c: 32: LATAbits.LATA5 = 1;
  5724  0082F8  013F               	movlb	63	; () banked
  5725  0082FA  8BBA               	bsf	186,5,b	;volatile
  5726                           
  5727                           ; BSR set to: 63
  5728  0082FC  0012               	return		;funcret
  5729  0082FE                     __end_of_InicializaWifi:
  5730                           	opt stack 0
  5731                           
  5732 ;; *************** function _Buffer_Escrita_USB_Add_String *****************
  5733 ;; Defined at:
  5734 ;;		line 184 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  dado            2    7[BANK2 ] PTR unsigned char 
  5737 ;;		 -> STR_102(2), STR_89(17), STR_75(5), STR_74(11), 
  5738 ;;		 -> MACAddress(18), STR_44(25), STR_43(27), STR_25(10), 
  5739 ;;		 -> STR_18(24), main@motivo(20), 
  5740 ;;  aguarda         2    9[BANK2 ] short 
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;  i               2   13[BANK2 ] int 
  5743 ;; Return value:  Size  Location     Type
  5744 ;;                  2    7[BANK2 ] short 
  5745 ;; Registers used:
  5746 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5752 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5753 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5754 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5755 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5756 ;;Total ram usage:        8 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; Hardware stack levels required when called:   11
  5759 ;; This function calls:
  5760 ;;		_Buffer_Escrita_USB_Add_Char
  5761 ;;		_TransmiteBuffer_USB
  5762 ;; This function is called by:
  5763 ;;		_main
  5764 ;;		_Envia_Post_Content
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           	psect	text9
  5769  006B4A                     __ptext9:
  5770                           	opt stack 0
  5771  006B4A                     _Buffer_Escrita_USB_Add_String:
  5772                           	opt stack 19
  5773                           
  5774                           ;Serial.c: 185: int i = 0;
  5775                           
  5776                           ; BSR set to: 63
  5777                           ;incstack = 0
  5778  006B4A  0E00               	movlw	0
  5779  006B4C  0102               	movlb	2	; () banked
  5780  006B4E  6F0E               	movwf	(Buffer_Escrita_USB_Add_String@i+1)& (0+255),b
  5781  006B50  0E00               	movlw	0
  5782  006B52  6F0D               	movwf	Buffer_Escrita_USB_Add_String@i& (0+255),b
  5783                           
  5784                           ;Serial.c: 186: ponteiro_USB = 0;
  5785  006B54  0E00               	movlw	0
  5786  006B56  6FE2               	movwf	(_ponteiro_USB+1)& (0+255),b
  5787  006B58  0E00               	movlw	0
  5788  006B5A  6FE1               	movwf	_ponteiro_USB& (0+255),b
  5789                           
  5790                           ;Serial.c: 187: ponteiro_escrita_USB = 0;
  5791  006B5C  0E00               	movlw	0
  5792  006B5E  6FE6               	movwf	(_ponteiro_escrita_USB+1)& (0+255),b
  5793  006B60  0E00               	movlw	0
  5794  006B62  6FE5               	movwf	_ponteiro_escrita_USB& (0+255),b
  5795                           
  5796                           ;Serial.c: 188: buffer_escrita_USB[0] = 0x00;
  5797  006B64  0E00               	movlw	0
  5798  006B66  0106               	movlb	6	; () banked
  5799  006B68  6F00               	movwf	_buffer_escrita_USB& (0+255),b
  5800                           
  5801                           ;Serial.c: 190: while (dado[i] != 0x00) {
  5802  006B6A  D029               	goto	l276
  5803  006B6C                     
  5804                           ;Serial.c: 191: if (i >= 150) return;
  5805                           
  5806                           ; BSR set to: 6
  5807  006B6C  0102               	movlb	2	; () banked
  5808  006B6E  BF0E               	btfsc	(Buffer_Escrita_USB_Add_String@i+1)& (0+255),7,b
  5809  006B70  D006               	goto	l278
  5810  006B72  510E               	movf	(Buffer_Escrita_USB_Add_String@i+1)& (0+255),w,b
  5811  006B74  E150               	bnz	l279
  5812  006B76  0E96               	movlw	150
  5813  006B78  5D0D               	subwf	Buffer_Escrita_USB_Add_String@i& (0+255),w,b
  5814  006B7A  B0D8               	btfsc	16344,0,c
  5815  006B7C  0012               	return	
  5816  006B7E                     l278:
  5817                           
  5818                           ; BSR set to: 2
  5819                           ;Serial.c: 192: Buffer_Escrita_USB_Add_Char(dado[i]);
  5820                           
  5821                           ; BSR set to: 2
  5822  006B7E  510D               	movf	Buffer_Escrita_USB_Add_String@i& (0+255),w,b
  5823  006B80  2507               	addwf	Buffer_Escrita_USB_Add_String@dado& (0+255),w,b
  5824  006B82  6F0B               	movwf	??_Buffer_Escrita_USB_Add_String& (0+255),b
  5825  006B84  510E               	movf	(Buffer_Escrita_USB_Add_String@i+1)& (0+255),w,b
  5826  006B86  2108               	addwfc	(Buffer_Escrita_USB_Add_String@dado+1)& (0+255),w,b
  5827  006B88  6F0C               	movwf	(??_Buffer_Escrita_USB_Add_String+1)& (0+255),b
  5828  006B8A  0060  F82F  FFF6   	movff	??_Buffer_Escrita_USB_Add_String,16374
  5829  006B90  0060  F833  FFF7   	movff	??_Buffer_Escrita_USB_Add_String+1,16375
  5830  006B96  0E00               	movlw	low (__mediumconst shr (0+16))
  5831  006B98  6EF8               	movwf	16376,c
  5832  006B9A  0E0F               	movlw	(high __ramtop+-1)
  5833  006B9C  64F7               	cpfsgt	16375,c
  5834  006B9E  D003               	bra	u18717
  5835  006BA0  0008               	tblrd		*
  5836  006BA2  50F5               	movf	16373,w,c
  5837  006BA4  D007               	bra	u18710
  5838  006BA6                     u18717:
  5839  006BA6  006F FFDB FFE9     	movff	16374,16361
  5840  006BAC  006F FFDF FFEA     	movff	16375,16362
  5841  006BB2  50EF               	movf	16367,w,c
  5842  006BB4                     u18710:
  5843  006BB4  EC4C  F041         	call	_Buffer_Escrita_USB_Add_Char
  5844                           
  5845                           ;Serial.c: 193: i++;
  5846  006BB8  0102               	movlb	2	; () banked
  5847  006BBA  4B0D               	infsnz	Buffer_Escrita_USB_Add_String@i& (0+255),f,b
  5848  006BBC  2B0E               	incf	(Buffer_Escrita_USB_Add_String@i+1)& (0+255),f,b
  5849  006BBE                     l276:
  5850                           
  5851                           ; BSR set to: 2
  5852  006BBE  0102               	movlb	2	; () banked
  5853  006BC0  510D               	movf	Buffer_Escrita_USB_Add_String@i& (0+255),w,b
  5854  006BC2  2507               	addwf	Buffer_Escrita_USB_Add_String@dado& (0+255),w,b
  5855  006BC4  6F0B               	movwf	??_Buffer_Escrita_USB_Add_String& (0+255),b
  5856  006BC6  510E               	movf	(Buffer_Escrita_USB_Add_String@i+1)& (0+255),w,b
  5857  006BC8  2108               	addwfc	(Buffer_Escrita_USB_Add_String@dado+1)& (0+255),w,b
  5858  006BCA  6F0C               	movwf	(??_Buffer_Escrita_USB_Add_String+1)& (0+255),b
  5859  006BCC  0060  F82F  FFF6   	movff	??_Buffer_Escrita_USB_Add_String,16374
  5860  006BD2  0060  F833  FFF7   	movff	??_Buffer_Escrita_USB_Add_String+1,16375
  5861  006BD8  0E00               	movlw	low (__mediumconst shr (0+16))
  5862  006BDA  6EF8               	movwf	16376,c
  5863  006BDC  0E0F               	movlw	(high __ramtop+-1)
  5864  006BDE  64F7               	cpfsgt	16375,c
  5865  006BE0  D003               	bra	u18727
  5866  006BE2  0008               	tblrd		*
  5867  006BE4  50F5               	movf	16373,w,c
  5868  006BE6  D007               	bra	u18720
  5869  006BE8                     u18727:
  5870  006BE8  006F FFDB FFE9     	movff	16374,16361
  5871  006BEE  006F FFDF FFEA     	movff	16375,16362
  5872  006BF4  50EF               	movf	16367,w,c
  5873  006BF6                     u18720:
  5874  006BF6  0900               	iorlw	0
  5875  006BF8  A4D8               	btfss	16344,2,c
  5876  006BFA  D7B8               	goto	l277
  5877                           
  5878                           ;Serial.c: 194: }
  5879                           ;Serial.c: 195: if (aguarda){
  5880  006BFC  0102               	movlb	2	; () banked
  5881  006BFE  5109               	movf	Buffer_Escrita_USB_Add_String@aguarda& (0+255),w,b
  5882  006C00  110A               	iorwf	(Buffer_Escrita_USB_Add_String@aguarda+1)& (0+255),w,b
  5883  006C02  B4D8               	btfsc	16344,2,c
  5884  006C04  0012               	return	
  5885  006C06                     u18740:
  5886                           
  5887                           ; BSR set to: 2
  5888                           
  5889                           ; BSR set to: 2
  5890                           
  5891                           ; BSR set to: 2
  5892                           
  5893                           ; BSR set to: 2
  5894                           ;Serial.c: 196: while (TransmiteBuffer_USB() == 0);
  5895  006C06  EC61  F03E         	call	_TransmiteBuffer_USB	;wreg free
  5896  006C0A  0102               	movlb	2	; () banked
  5897  006C0C  5105               	movf	?_TransmiteBuffer_USB& (0+255),w,b
  5898  006C0E  1106               	iorwf	(?_TransmiteBuffer_USB+1)& (0+255),w,b
  5899  006C10  A4D8               	btfss	16344,2,c
  5900  006C12  0012               	return	
  5901  006C14  D7F8               	goto	u18740
  5902  006C16                     l279:
  5903                           
  5904                           ; BSR set to: 2
  5905  006C16  0012               	return		;funcret
  5906  006C18                     __end_of_Buffer_Escrita_USB_Add_String:
  5907                           	opt stack 0
  5908                           
  5909 ;; *************** function _TransmiteBuffer_USB *****************
  5910 ;; Defined at:
  5911 ;;		line 154 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;		None
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;		None
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  2    5[BANK2 ] int 
  5918 ;; Registers used:
  5919 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5925 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5928 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5929 ;;Total ram usage:        2 bytes
  5930 ;; Hardware stack levels used:    1
  5931 ;; Hardware stack levels required when called:   10
  5932 ;; This function calls:
  5933 ;;		Nothing
  5934 ;; This function is called by:
  5935 ;;		_main
  5936 ;;		_Buffer_Escrita_USB_Add_String
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           	psect	text10
  5941  007CC2                     __ptext10:
  5942                           	opt stack 0
  5943  007CC2                     _TransmiteBuffer_USB:
  5944                           	opt stack 20
  5945                           
  5946                           ;Serial.c: 155: if (U1ERRIRbits.TXMTIF == 0) return 0;
  5947                           
  5948                           ; BSR set to: 2
  5949                           ;incstack = 0
  5950  007CC2  013D               	movlb	61	; () banked
  5951  007CC4  BFF9               	btfsc	249,7,b	;volatile
  5952  007CC6  D006               	goto	l261
  5953                           
  5954                           ; BSR set to: 61
  5955  007CC8  0E00               	movlw	0
  5956  007CCA  0102               	movlb	2	; () banked
  5957  007CCC  6F06               	movwf	(?_TransmiteBuffer_USB+1)& (0+255),b
  5958  007CCE  0E00               	movlw	0
  5959  007CD0  6F05               	movwf	?_TransmiteBuffer_USB& (0+255),b
  5960                           
  5961                           ; BSR set to: 2
  5962  007CD2  0012               	return	
  5963  007CD4                     l261:
  5964                           
  5965                           ;Serial.c: 156: if (ponteiro_escrita_USB < ponteiro_USB) {
  5966                           
  5967                           ; BSR set to: 2
  5968  007CD4  0102               	movlb	2	; () banked
  5969  007CD6  51E1               	movf	_ponteiro_USB& (0+255),w,b
  5970  007CD8  5DE5               	subwf	_ponteiro_escrita_USB& (0+255),w,b
  5971  007CDA  51E2               	movf	(_ponteiro_USB+1)& (0+255),w,b
  5972  007CDC  59E6               	subwfb	(_ponteiro_escrita_USB+1)& (0+255),w,b
  5973  007CDE  B0D8               	btfsc	16344,0,c
  5974  007CE0  D011               	goto	l263
  5975                           
  5976                           ; BSR set to: 2
  5977                           ;Serial.c: 157: U1TXB = buffer_escrita_USB[ponteiro_escrita_USB];
  5978  007CE2  0E00               	movlw	low _buffer_escrita_USB
  5979  007CE4  25E5               	addwf	_ponteiro_escrita_USB& (0+255),w,b
  5980  007CE6  6ED9               	movwf	16345,c
  5981  007CE8  0E06               	movlw	high _buffer_escrita_USB
  5982  007CEA  21E6               	addwfc	(_ponteiro_escrita_USB+1)& (0+255),w,b
  5983  007CEC  6EDA               	movwf	16346,c
  5984  007CEE  50DF               	movf	16351,w,c
  5985  007CF0  013D               	movlb	61	; () banked
  5986  007CF2  6FEA               	movwf	234,b	;volatile
  5987                           
  5988                           ; BSR set to: 61
  5989                           ;Serial.c: 158: ponteiro_escrita_USB++;
  5990  007CF4  0102               	movlb	2	; () banked
  5991  007CF6  4BE5               	infsnz	_ponteiro_escrita_USB& (0+255),f,b
  5992  007CF8  2BE6               	incf	(_ponteiro_escrita_USB+1)& (0+255),f,b
  5993                           
  5994                           ; BSR set to: 2
  5995                           ;Serial.c: 159: return 0;
  5996  007CFA  0E00               	movlw	0
  5997  007CFC  6F06               	movwf	(?_TransmiteBuffer_USB+1)& (0+255),b
  5998  007CFE  0E00               	movlw	0
  5999  007D00  6F05               	movwf	?_TransmiteBuffer_USB& (0+255),b
  6000                           
  6001                           ; BSR set to: 2
  6002                           ;Serial.c: 160: } else {
  6003                           
  6004                           ; BSR set to: 2
  6005  007D02  0012               	return	
  6006  007D04                     l263:
  6007                           
  6008                           ; BSR set to: 2
  6009                           ;Serial.c: 161: ponteiro_USB = 0;
  6010                           
  6011                           ; BSR set to: 2
  6012  007D04  0E00               	movlw	0
  6013  007D06  6FE2               	movwf	(_ponteiro_USB+1)& (0+255),b
  6014  007D08  0E00               	movlw	0
  6015  007D0A  6FE1               	movwf	_ponteiro_USB& (0+255),b
  6016                           
  6017                           ;Serial.c: 162: ponteiro_escrita_USB = 0;
  6018  007D0C  0E00               	movlw	0
  6019  007D0E  6FE6               	movwf	(_ponteiro_escrita_USB+1)& (0+255),b
  6020  007D10  0E00               	movlw	0
  6021  007D12  6FE5               	movwf	_ponteiro_escrita_USB& (0+255),b
  6022                           
  6023                           ;Serial.c: 163: return 1;
  6024  007D14  0E00               	movlw	0
  6025  007D16  6F06               	movwf	(?_TransmiteBuffer_USB+1)& (0+255),b
  6026  007D18  0E01               	movlw	1
  6027  007D1A  6F05               	movwf	?_TransmiteBuffer_USB& (0+255),b
  6028                           
  6029                           ; BSR set to: 2
  6030  007D1C  0012               	return	
  6031  007D1E                     __end_of_TransmiteBuffer_USB:
  6032                           	opt stack 0
  6033                           
  6034 ;; *************** function _Buffer_Escrita_USB_Add_Char *****************
  6035 ;; Defined at:
  6036 ;;		line 200 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;  dado            1    wreg     unsigned char 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;  dado            1    5[BANK2 ] unsigned char 
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  2   14[None  ] short 
  6043 ;; Registers used:
  6044 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6051 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6053 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6054 ;;Total ram usage:        1 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; Hardware stack levels required when called:   10
  6057 ;; This function calls:
  6058 ;;		Nothing
  6059 ;; This function is called by:
  6060 ;;		_Buffer_Escrita_USB_Add_String
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           	psect	text11
  6065  008298                     __ptext11:
  6066                           	opt stack 0
  6067  008298                     _Buffer_Escrita_USB_Add_Char:
  6068                           	opt stack 19
  6069                           
  6070                           ; BSR set to: 2
  6071                           ;incstack = 0
  6072                           ;Buffer_Escrita_USB_Add_Char@dado stored from wreg
  6073  008298  0102               	movlb	2	; () banked
  6074  00829A  6F05               	movwf	Buffer_Escrita_USB_Add_Char@dado& (0+255),b
  6075                           
  6076                           ;Serial.c: 201: buffer_escrita_USB[ponteiro_USB] = dado;
  6077  00829C  0E00               	movlw	low _buffer_escrita_USB
  6078  00829E  0102               	movlb	2	; () banked
  6079  0082A0  25E1               	addwf	_ponteiro_USB& (0+255),w,b
  6080  0082A2  6ED9               	movwf	16345,c
  6081  0082A4  0E06               	movlw	high _buffer_escrita_USB
  6082  0082A6  21E2               	addwfc	(_ponteiro_USB+1)& (0+255),w,b
  6083  0082A8  6EDA               	movwf	16346,c
  6084  0082AA  0060  F817  FFDF   	movff	Buffer_Escrita_USB_Add_Char@dado,16351
  6085                           
  6086                           ; BSR set to: 2
  6087                           ;Serial.c: 207: if (ponteiro_USB >= 150) ponteiro_USB = 0;
  6088  0082B0  51E2               	movf	(_ponteiro_USB+1)& (0+255),w,b
  6089  0082B2  E104               	bnz	u16720
  6090  0082B4  0E96               	movlw	150
  6091  0082B6  5DE1               	subwf	_ponteiro_USB& (0+255),w,b
  6092  0082B8  A0D8               	btfss	16344,0,c
  6093  0082BA  D005               	goto	l287
  6094  0082BC                     u16720:
  6095                           
  6096                           ; BSR set to: 2
  6097  0082BC  0E00               	movlw	0
  6098  0082BE  6FE2               	movwf	(_ponteiro_USB+1)& (0+255),b
  6099  0082C0  0E00               	movlw	0
  6100  0082C2  6FE1               	movwf	_ponteiro_USB& (0+255),b
  6101  0082C4  0012               	return	
  6102  0082C6                     l287:
  6103                           
  6104                           ; BSR set to: 2
  6105                           ;Serial.c: 208: else ponteiro_USB++;
  6106                           
  6107                           ; BSR set to: 2
  6108  0082C6  4BE1               	infsnz	_ponteiro_USB& (0+255),f,b
  6109  0082C8  2BE2               	incf	(_ponteiro_USB+1)& (0+255),f,b
  6110  0082CA  0012               	return	
  6111  0082CC                     __end_of_Buffer_Escrita_USB_Add_Char:
  6112                           	opt stack 0
  6113                           
  6114 ;; *************** function _Aguarda_dado *****************
  6115 ;; Defined at:
  6116 ;;		line 216 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  inicio          2  160[BANK2 ] PTR unsigned char 
  6119 ;;		 -> STR_108(7), STR_104(10), STR_99(4), STR_96(7), 
  6120 ;;		 -> STR_86(7), STR_83(2), STR_77(17), STR_71(3), 
  6121 ;;		 -> STR_68(6), STR_65(7), STR_62(6), STR_59(7), 
  6122 ;;		 -> STR_56(8), STR_53(10), STR_50(19), STR_45(2), 
  6123 ;;		 -> STR_40(2), STR_36(10), STR_31(3), STR_27(3), 
  6124 ;;		 -> STR_22(2), STR_19(3), STR_3(19), 
  6125 ;;  fim             2  162[BANK2 ] PTR unsigned char 
  6126 ;;		 -> STR_109(2), STR_105(3), STR_100(2), STR_97(2), 
  6127 ;;		 -> STR_87(7), STR_84(3), STR_78(2), STR_72(2), 
  6128 ;;		 -> STR_69(3), STR_66(2), STR_63(2), STR_60(2), 
  6129 ;;		 -> STR_57(3), STR_54(2), STR_51(2), STR_46(2), 
  6130 ;;		 -> STR_41(2), STR_37(2), STR_32(3), STR_28(3), 
  6131 ;;		 -> STR_23(2), STR_20(2), STR_4(2), 
  6132 ;;  error           2  164[BANK2 ] PTR unsigned char 
  6133 ;;		 -> STR_110(1), STR_106(1), STR_101(1), STR_98(1), 
  6134 ;;		 -> STR_88(7), STR_85(1), STR_79(7), STR_73(1), 
  6135 ;;		 -> STR_70(1), STR_67(1), STR_64(1), STR_61(1), 
  6136 ;;		 -> STR_58(1), STR_55(1), STR_52(1), STR_47(1), 
  6137 ;;		 -> STR_42(1), STR_38(1), STR_33(1), STR_29(1), 
  6138 ;;		 -> STR_24(1), STR_21(1), STR_5(1), 
  6139 ;;  ff              2  166[BANK2 ] PTR FTN()PTR void 
  6140 ;;		 -> SOCKET_RX(1), WIND(1), TASK_POST(1), SETMACAddr(1), 
  6141 ;;		 -> Absolute function(3), recebeSIZE(1), recebeADDRESS(1), recebeFUNCTIONCODE(1), 
  6142 ;;		 -> recebeNODEID(1), recebeNETWORKID(1), recebeFRAMEID(1), recebeFRAMES(1), 
  6143 ;;		 -> recebe(1), Post2(1), nada(1), Post(1), 
  6144 ;;		 -> inicia_Post(1), GETMACAddr(1), 
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;		None
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  1    wreg      void 
  6149 ;; Registers used:
  6150 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6156 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6159 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6160 ;;Total ram usage:        8 bytes
  6161 ;; Hardware stack levels used:    1
  6162 ;; Hardware stack levels required when called:   14
  6163 ;; This function calls:
  6164 ;;		_sprintf
  6165 ;; This function is called by:
  6166 ;;		_main
  6167 ;;		_testaRespostaHTTP
  6168 ;;		_Envia_Post_Content
  6169 ;;		_SOCKET_QUERY
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           	psect	text12
  6174  007AE0                     __ptext12:
  6175                           	opt stack 0
  6176  007AE0                     _Aguarda_dado:
  6177                           	opt stack 16
  6178                           
  6179                           ;GERREX.c: 217: PORTBbits.RB2 = 1;
  6180                           
  6181                           ; BSR set to: 2
  6182                           ;incstack = 0
  6183  007AE0  013F               	movlb	63	; () banked
  6184  007AE2  85CB               	bsf	203,2,b	;volatile
  6185                           
  6186                           ; BSR set to: 63
  6187                           ;GERREX.c: 218: Aguarda_Ponteiro = 0;
  6188  007AE4  0E00               	movlw	0
  6189  007AE6  0100               	movlb	0	; () banked
  6190  007AE8  6FF2               	movwf	(_Aguarda_Ponteiro+1)& (0+255),b
  6191  007AEA  0E00               	movlw	0
  6192  007AEC  6FF1               	movwf	_Aguarda_Ponteiro& (0+255),b
  6193                           
  6194                           ; BSR set to: 0
  6195                           ;GERREX.c: 219: sprintf(Aguarda_str, "%s", inicio);
  6196  007AEE  0EAA               	movlw	low _Aguarda_str
  6197  007AF0  0102               	movlb	2	; () banked
  6198  007AF2  6F62               	movwf	sprintf@sp& (0+255),b
  6199  007AF4  0E03               	movlw	high _Aguarda_str
  6200  007AF6  6F63               	movwf	(sprintf@sp+1)& (0+255),b
  6201  007AF8  0EED               	movlw	low STR_80
  6202  007AFA  6F64               	movwf	sprintf@f& (0+255),b
  6203  007AFC  0EFF               	movlw	high STR_80
  6204  007AFE  6F65               	movwf	(sprintf@f+1)& (0+255),b
  6205  007B00  0060  FA80  F266   	movff	Aguarda_dado@inicio,?_sprintf+4
  6206  007B06  0060  FA84  F267   	movff	Aguarda_dado@inicio+1,?_sprintf+5
  6207  007B0C  EC59  F000         	call	_sprintf	;wreg free
  6208                           
  6209                           ;GERREX.c: 220: sprintf(Aguarda_end, "%s", fim);
  6210  007B10  0ED0               	movlw	low _Aguarda_end
  6211  007B12  0102               	movlb	2	; () banked
  6212  007B14  6F62               	movwf	sprintf@sp& (0+255),b
  6213  007B16  0E03               	movlw	high _Aguarda_end
  6214  007B18  6F63               	movwf	(sprintf@sp+1)& (0+255),b
  6215  007B1A  0EED               	movlw	low STR_80
  6216  007B1C  6F64               	movwf	sprintf@f& (0+255),b
  6217  007B1E  0EFF               	movlw	high STR_80
  6218  007B20  6F65               	movwf	(sprintf@f+1)& (0+255),b
  6219  007B22  0060  FA88  F266   	movff	Aguarda_dado@fim,?_sprintf+4
  6220  007B28  0060  FA8C  F267   	movff	Aguarda_dado@fim+1,?_sprintf+5
  6221  007B2E  EC59  F000         	call	_sprintf	;wreg free
  6222                           
  6223                           ;GERREX.c: 221: Aguarda_Funcao = ff;
  6224  007B32  0060  FA98  F0EB   	movff	Aguarda_dado@ff,_Aguarda_Funcao
  6225  007B38  0060  FA9C  F0EC   	movff	Aguarda_dado@ff+1,_Aguarda_Funcao+1
  6226                           
  6227                           ;GERREX.c: 222: PORTBbits.RB2 = 0;
  6228  007B3E  013F               	movlb	63	; () banked
  6229  007B40  95CB               	bcf	203,2,b	;volatile
  6230                           
  6231                           ; BSR set to: 63
  6232  007B42  0012               	return		;funcret
  6233  007B44                     __end_of_Aguarda_dado:
  6234                           	opt stack 0
  6235                           
  6236 ;; *************** function _sprintf *****************
  6237 ;; Defined at:
  6238 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  sp              2   98[BANK2 ] PTR unsigned char 
  6241 ;;		 -> Verifica_Analogica@valoradstr(10), append_Arquivo_Json@linhaArquivo(120), append_Arquivo_Json@resultado(6), appe
      +nd_Arquivo_Json@valorMem_Char(10), 
  6242 ;;		 -> cria_Arquivo@tamanho(15), Aguarda_end(10), Aguarda_str(20), main@motivo(20), 
  6243 ;;  f               2  100[BANK2 ] PTR const unsigned char 
  6244 ;;		 -> STR_111(12), STR_81(3), STR_80(3), STR_13(61), 
  6245 ;;		 -> STR_12(6), STR_11(5), STR_10(6), STR_7(5), 
  6246 ;;		 -> STR_2(13), STR_1(18), 
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  idx             1  118[BANK2 ] unsigned char 
  6249 ;;  temp            3  131[BANK2 ] unsigned char 
  6250 ;;  val             4  148[BANK2 ] unsigned long 
  6251 ;;  tmpval          4  140[BANK2 ] struct .
  6252 ;;  fval            3  152[BANK2 ] struct .
  6253 ;;  flag            2  158[BANK2 ] unsigned short 
  6254 ;;  prec            2  155[BANK2 ] int 
  6255 ;;  width           2  146[BANK2 ] int 
  6256 ;;  exp             2  144[BANK2 ] int 
  6257 ;;  ap              2  138[BANK2 ] PTR void [1]
  6258 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  6259 ;;  len             2  136[BANK2 ] unsigned int 
  6260 ;;  cp              2  134[BANK2 ] PTR const unsigned char 
  6261 ;;		 -> STR_112(7), sprintf@c(1), STR_109(2), STR_108(7), 
  6262 ;;		 -> STR_105(3), STR_104(10), STR_100(2), STR_99(4), 
  6263 ;;		 -> STR_97(2), STR_96(7), STR_87(7), STR_86(7), 
  6264 ;;		 -> STR_84(3), STR_83(2), STR_78(2), STR_77(17), 
  6265 ;;		 -> STR_72(2), STR_71(3), STR_69(3), STR_68(6), 
  6266 ;;		 -> STR_66(2), STR_65(7), STR_63(2), STR_62(6), 
  6267 ;;		 -> STR_60(2), STR_59(7), STR_57(3), STR_56(8), 
  6268 ;;		 -> STR_54(2), STR_53(10), STR_51(2), STR_50(19), 
  6269 ;;		 -> STR_46(2), STR_45(2), STR_41(2), STR_40(2), 
  6270 ;;		 -> STR_37(2), STR_36(10), STR_32(3), STR_31(3), 
  6271 ;;		 -> STR_28(3), STR_27(3), STR_23(2), STR_22(2), 
  6272 ;;		 -> STR_20(2), STR_19(3), frameId(1110), append_Arquivo_Json@resultado(6), 
  6273 ;;		 -> append_Arquivo_Json@virgula(2), STR_4(2), STR_3(19), 
  6274 ;;  c               1  157[BANK2 ] char 
  6275 ;;  d               1    0        unsigned char 
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  2   98[BANK2 ] int 
  6278 ;; Registers used:
  6279 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6285 ;;      Params:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6286 ;;      Locals:         0       0       0      45       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6287 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;      Totals:         0       0       0      62       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;Total ram usage:       62 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:   13
  6292 ;; This function calls:
  6293 ;;		___awdiv
  6294 ;;		___awmod
  6295 ;;		___ftadd
  6296 ;;		___ftdiv
  6297 ;;		___ftge
  6298 ;;		___ftmul
  6299 ;;		___ftneg
  6300 ;;		___ftsub
  6301 ;;		___fttol
  6302 ;;		___lldiv
  6303 ;;		___llmod
  6304 ;;		___lltoft
  6305 ;;		___wmul
  6306 ;;		__div_to_l_
  6307 ;;		__tdiv_to_l_
  6308 ;;		_fround
  6309 ;;		_isdigit
  6310 ;;		_scale
  6311 ;; This function is called by:
  6312 ;;		_main
  6313 ;;		_Aguarda_dado
  6314 ;;		_Verifica_Analogica
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318                           	psect	text13
  6319  0000B2                     __ptext13:
  6320                           	opt stack 0
  6321  0000B2                     _sprintf:
  6322                           	opt stack 17
  6323                           
  6324                           ;doprnt.c: 494: va_list ap;
  6325                           ;doprnt.c: 499: signed char c;
  6326                           ;doprnt.c: 501: int width;
  6327                           ;doprnt.c: 504: int prec;
  6328                           ;doprnt.c: 508: unsigned short flag;
  6329                           ;doprnt.c: 515: char d;
  6330                           ;doprnt.c: 516: double fval;
  6331                           ;doprnt.c: 517: int exp;
  6332                           ;doprnt.c: 523: union {
  6333                           ;doprnt.c: 524: unsigned long vd;
  6334                           ;doprnt.c: 525: double integ;
  6335                           ;doprnt.c: 526: } tmpval;
  6336                           ;doprnt.c: 528: unsigned long val;
  6337                           ;doprnt.c: 529: unsigned len;
  6338                           ;doprnt.c: 530: const char * cp;
  6339                           ;doprnt.c: 533: *ap = __va_start();
  6340                           
  6341                           ; BSR set to: 63
  6342                           ;incstack = 0
  6343  0000B2  0E66               	movlw	low (?_sprintf+4)
  6344  0000B4  0102               	movlb	2	; () banked
  6345  0000B6  6F8A               	movwf	sprintf@ap& (0+255),b
  6346  0000B8  0E02               	movlw	high (?_sprintf+4)
  6347  0000BA  6F8B               	movwf	(sprintf@ap+1)& (0+255),b
  6348                           
  6349                           ;doprnt.c: 536: while(c = *f++) {
  6350  0000BC  EF9B  F00E         	goto	u18200
  6351  0000C0                     
  6352                           ; BSR set to: 2
  6353                           ;doprnt.c: 538: if(c != '%')
  6354                           
  6355                           ; BSR set to: 2
  6356  0000C0  0E25               	movlw	37
  6357  0000C2  199D               	xorwf	sprintf@c& (0+255),w,b
  6358  0000C4  B4D8               	btfsc	16344,2,c
  6359  0000C6  D00D               	goto	l949
  6360                           
  6361                           ; BSR set to: 2
  6362                           ;doprnt.c: 540: {
  6363                           ;doprnt.c: 541: ((*sp++ = (c)));
  6364  0000C8  0060  F98B  FFD9   	movff	sprintf@sp,16345
  6365  0000CE  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  6366  0000D4  0060  FA77  FFDF   	movff	sprintf@c,16351
  6367                           
  6368                           ; BSR set to: 2
  6369  0000DA  4B62               	infsnz	sprintf@sp& (0+255),f,b
  6370  0000DC  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  6371                           
  6372                           ;doprnt.c: 542: continue;
  6373  0000DE  EF9B  F00E         	goto	u18200
  6374  0000E2                     l949:
  6375                           
  6376                           ; BSR set to: 2
  6377                           ;doprnt.c: 543: }
  6378                           ;doprnt.c: 546: width = 0;
  6379                           
  6380                           ; BSR set to: 2
  6381  0000E2  0E00               	movlw	0
  6382  0000E4  6F93               	movwf	(sprintf@width+1)& (0+255),b
  6383  0000E6  0E00               	movlw	0
  6384  0000E8  6F92               	movwf	sprintf@width& (0+255),b
  6385                           
  6386                           ;doprnt.c: 548: flag = 0;
  6387  0000EA  0E00               	movlw	0
  6388  0000EC  6F9F               	movwf	(sprintf@flag+1)& (0+255),b
  6389  0000EE  0E00               	movlw	0
  6390  0000F0  6F9E               	movwf	sprintf@flag& (0+255),b
  6391                           
  6392                           ; BSR set to: 2
  6393                           ;doprnt.c: 551: switch(*f) {
  6394                           
  6395                           ;doprnt.c: 550: for(;;) {
  6396  0000F2  D010               	goto	l951
  6397  0000F4                     
  6398                           ;doprnt.c: 554: flag |= 0x08;
  6399                           
  6400                           ; BSR set to: 2
  6401  0000F4  0102               	movlb	2	; () banked
  6402  0000F6  879E               	bsf	sprintf@flag& (0+255),3,b
  6403  0000F8  D00B               	goto	L4
  6404  0000FA                     
  6405                           ;doprnt.c: 561: flag |= 0x01;
  6406                           
  6407                           ; BSR set to: 2
  6408  0000FA  0102               	movlb	2	; () banked
  6409  0000FC  819E               	bsf	sprintf@flag& (0+255),0,b
  6410  0000FE  D008               	goto	L4
  6411  000100                     
  6412                           ;doprnt.c: 568: flag |= 0x02;
  6413                           
  6414                           ; BSR set to: 2
  6415  000100  0102               	movlb	2	; () banked
  6416  000102  839E               	bsf	sprintf@flag& (0+255),1,b
  6417  000104  D005               	goto	L4
  6418  000106                     
  6419                           ;doprnt.c: 574: flag |= 0x800;
  6420                           
  6421                           ; BSR set to: 2
  6422  000106  0102               	movlb	2	; () banked
  6423  000108  879F               	bsf	(sprintf@flag+1)& (0+255),3,b
  6424  00010A  D002               	goto	L4
  6425  00010C                     
  6426                           ;doprnt.c: 580: flag |= 0x04;
  6427                           
  6428                           ; BSR set to: 2
  6429  00010C  0102               	movlb	2	; () banked
  6430  00010E  859E               	bsf	sprintf@flag& (0+255),2,b
  6431  000110                     L4:
  6432                           
  6433                           ;doprnt.c: 581: f++;
  6434  000110  4B64               	infsnz	sprintf@f& (0+255),f,b
  6435  000112  2B65               	incf	(sprintf@f+1)& (0+255),f,b
  6436  000114                     l951:
  6437                           
  6438                           ; BSR set to: 2
  6439  000114  0060  F993  FFF6   	movff	sprintf@f,16374
  6440  00011A  0060  F997  FFF7   	movff	sprintf@f+1,16375
  6441  000120                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6442  000120  6AF8               	clrf	16376,c
  6443  000122                     	endif
  6444  000122                     	if	0	;tblptru may be non-zero
  6445  000122                     	endif
  6446  000122  0008               	tblrd		*
  6447  000124  50F5               	movf	16373,w,c
  6448                           
  6449                           ; Switch size 1, requested type "space"
  6450                           ; Number of cases is 5, Range of values is 32 to 48
  6451                           ; switch strategies available:
  6452                           ; Name         Instructions Cycles
  6453                           ; simple_byte           16     9 (average)
  6454                           ;	Chosen strategy is simple_byte
  6455  000126  0A20               	xorlw	32	; case 32
  6456  000128  B4D8               	btfsc	16344,2,c
  6457  00012A  D7E7               	goto	l954
  6458  00012C  0A03               	xorlw	3	; case 35
  6459  00012E  B4D8               	btfsc	16344,2,c
  6460  000130  D7EA               	goto	l956
  6461  000132  0A08               	xorlw	8	; case 43
  6462  000134  B4D8               	btfsc	16344,2,c
  6463  000136  D7E4               	goto	l955
  6464  000138  0A06               	xorlw	6	; case 45
  6465  00013A  B4D8               	btfsc	16344,2,c
  6466  00013C  D7DB               	goto	l952
  6467  00013E  0A1D               	xorlw	29	; case 48
  6468  000140  B4D8               	btfsc	16344,2,c
  6469  000142  D7E4               	goto	l957
  6470                           
  6471                           ;doprnt.c: 589: if(flag & 0x02)
  6472                           
  6473                           ;doprnt.c: 586: }
  6474                           
  6475                           ;doprnt.c: 585: break;
  6476  000144  0102               	movlb	2	; () banked
  6477  000146  B39E               	btfsc	sprintf@flag& (0+255),1,b
  6478                           
  6479                           ; BSR set to: 2
  6480                           ;doprnt.c: 590: flag &= ~0x01;
  6481  000148  919E               	bcf	sprintf@flag& (0+255),0,b
  6482                           
  6483                           ; BSR set to: 2
  6484                           ;doprnt.c: 593: if(flag & 0x08)
  6485                           
  6486                           ; BSR set to: 2
  6487  00014A  B79E               	btfsc	sprintf@flag& (0+255),3,b
  6488                           
  6489                           ; BSR set to: 2
  6490                           ;doprnt.c: 594: flag &= ~0x04;
  6491  00014C  959E               	bcf	sprintf@flag& (0+255),2,b
  6492                           
  6493                           ; BSR set to: 2
  6494                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6495                           
  6496                           ; BSR set to: 2
  6497  00014E  0060  F993  FFF6   	movff	sprintf@f,16374
  6498  000154  0060  F997  FFF7   	movff	sprintf@f+1,16375
  6499  00015A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6500  00015A  6AF8               	clrf	16376,c
  6501  00015C                     	endif
  6502  00015C                     	if	0	;tblptru may be non-zero
  6503  00015C                     	endif
  6504  00015C  0008               	tblrd		*
  6505  00015E  50F5               	movf	16373,w,c
  6506  000160  EC34  F042         	call	_isdigit
  6507  000164  A0D8               	btfss	16344,0,c
  6508  000166  D03F               	goto	u16770
  6509                           
  6510                           ;doprnt.c: 598: width = 0;
  6511  000168  0E00               	movlw	0
  6512  00016A  0102               	movlb	2	; () banked
  6513  00016C  6F93               	movwf	(sprintf@width+1)& (0+255),b
  6514  00016E  0E00               	movlw	0
  6515  000170  6F92               	movwf	sprintf@width& (0+255),b
  6516  000172                     
  6517                           ;doprnt.c: 600: width *= 10;
  6518                           
  6519                           ; BSR set to: 2
  6520  000172  0060  FA48  F213   	movff	sprintf@width,___wmul@multiplier
  6521  000178  0060  FA4C  F214   	movff	sprintf@width+1,___wmul@multiplier+1
  6522  00017E  0E00               	movlw	0
  6523  000180  0102               	movlb	2	; () banked
  6524  000182  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6525  000184  0E0A               	movlw	10
  6526  000186  6F15               	movwf	___wmul@multiplicand& (0+255),b
  6527  000188  ECB1  F041         	call	___wmul	;wreg free
  6528  00018C  0060  F84C  F292   	movff	?___wmul,sprintf@width
  6529  000192  0060  F850  F293   	movff	?___wmul+1,sprintf@width+1
  6530                           
  6531                           ;doprnt.c: 601: width += *f++ - '0';
  6532  000198  0ED0               	movlw	208
  6533  00019A  0102               	movlb	2	; () banked
  6534  00019C  6F6D               	movwf	??_sprintf& (0+255),b
  6535  00019E  0EFF               	movlw	255
  6536  0001A0  6F6E               	movwf	(??_sprintf+1)& (0+255),b
  6537  0001A2  0060  F993  FFF6   	movff	sprintf@f,16374
  6538  0001A8  0060  F997  FFF7   	movff	sprintf@f+1,16375
  6539  0001AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6540  0001AE  6AF8               	clrf	16376,c
  6541  0001B0                     	endif
  6542  0001B0                     	if	0	;tblptru may be non-zero
  6543  0001B0                     	endif
  6544  0001B0  0008               	tblrd		*
  6545  0001B2  50F5               	movf	16373,w,c
  6546  0001B4  6F6F               	movwf	(??_sprintf+2)& (0+255),b
  6547  0001B6  6B70               	clrf	(??_sprintf+3)& (0+255),b
  6548  0001B8  516D               	movf	??_sprintf& (0+255),w,b
  6549  0001BA  276F               	addwf	(??_sprintf+2)& (0+255),f,b
  6550  0001BC  516E               	movf	(??_sprintf+1)& (0+255),w,b
  6551  0001BE  2370               	addwfc	(??_sprintf+3)& (0+255),f,b
  6552  0001C0  516F               	movf	(??_sprintf+2)& (0+255),w,b
  6553  0001C2  2792               	addwf	sprintf@width& (0+255),f,b
  6554  0001C4  5170               	movf	(??_sprintf+3)& (0+255),w,b
  6555  0001C6  2393               	addwfc	(sprintf@width+1)& (0+255),f,b
  6556                           
  6557                           ; BSR set to: 2
  6558  0001C8  4B64               	infsnz	sprintf@f& (0+255),f,b
  6559  0001CA  2B65               	incf	(sprintf@f+1)& (0+255),f,b
  6560                           
  6561                           ; BSR set to: 2
  6562                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6563  0001CC  0060  F993  FFF6   	movff	sprintf@f,16374
  6564  0001D2  0060  F997  FFF7   	movff	sprintf@f+1,16375
  6565  0001D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6566  0001D8  6AF8               	clrf	16376,c
  6567  0001DA                     	endif
  6568  0001DA                     	if	0	;tblptru may be non-zero
  6569  0001DA                     	endif
  6570  0001DA  0008               	tblrd		*
  6571  0001DC  50F5               	movf	16373,w,c
  6572  0001DE  EC34  F042         	call	_isdigit
  6573  0001E2  B0D8               	btfsc	16344,0,c
  6574  0001E4  D7C6               	goto	l963
  6575  0001E6                     u16770:
  6576                           
  6577                           ;doprnt.c: 608: }
  6578                           ;doprnt.c: 611: if(*f == '.') {
  6579  0001E6  0060  F993  FFF6   	movff	sprintf@f,16374
  6580  0001EC  0060  F997  FFF7   	movff	sprintf@f+1,16375
  6581  0001F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6582  0001F2  6AF8               	clrf	16376,c
  6583  0001F4                     	endif
  6584  0001F4                     	if	0	;tblptru may be non-zero
  6585  0001F4                     	endif
  6586  0001F4  0008               	tblrd		*
  6587  0001F6  50F5               	movf	16373,w,c
  6588  0001F8  0A2E               	xorlw	46
  6589  0001FA  A4D8               	btfss	16344,2,c
  6590  0001FC  D039               	goto	l965
  6591                           
  6592                           ;doprnt.c: 612: flag |= 0x4000;
  6593  0001FE  0102               	movlb	2	; () banked
  6594  000200  8D9F               	bsf	(sprintf@flag+1)& (0+255),6,b
  6595                           
  6596                           ;doprnt.c: 613: f++;
  6597  000202  4B64               	infsnz	sprintf@f& (0+255),f,b
  6598  000204  2B65               	incf	(sprintf@f+1)& (0+255),f,b
  6599                           
  6600                           ; BSR set to: 2
  6601                           ;doprnt.c: 620: {
  6602                           ;doprnt.c: 621: prec = 0;
  6603  000206  0E00               	movlw	0
  6604  000208  6F9C               	movwf	(sprintf@prec+1)& (0+255),b
  6605  00020A  0E00               	movlw	0
  6606  00020C  6F9B               	movwf	sprintf@prec& (0+255),b
  6607                           
  6608                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6609  00020E  D022               	goto	l966
  6610  000210                     
  6611                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6612                           
  6613                           ; BSR set to: 2
  6614  000210  0060  FA6C  F213   	movff	sprintf@prec,___wmul@multiplier
  6615  000216  0060  FA70  F214   	movff	sprintf@prec+1,___wmul@multiplier+1
  6616  00021C  0E00               	movlw	0
  6617  00021E  0102               	movlb	2	; () banked
  6618  000220  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6619  000222  0E0A               	movlw	10
  6620  000224  6F15               	movwf	___wmul@multiplicand& (0+255),b
  6621  000226  ECB1  F041         	call	___wmul	;wreg free
  6622  00022A  0060  F993  FFF6   	movff	sprintf@f,16374
  6623  000230  0060  F997  FFF7   	movff	sprintf@f+1,16375
  6624  000236                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6625  000236  6AF8               	clrf	16376,c
  6626  000238                     	endif
  6627  000238                     	if	0	;tblptru may be non-zero
  6628  000238                     	endif
  6629  000238  0008               	tblrd		*
  6630  00023A  50F5               	movf	16373,w,c
  6631  00023C  0102               	movlb	2	; () banked
  6632  00023E  2713               	addwf	?___wmul& (0+255),f,b
  6633  000240  0E00               	movlw	0
  6634  000242  2314               	addwfc	(?___wmul+1)& (0+255),f,b
  6635  000244  0ED0               	movlw	208
  6636  000246  2513               	addwf	?___wmul& (0+255),w,b
  6637  000248  6F9B               	movwf	sprintf@prec& (0+255),b
  6638  00024A  0EFF               	movlw	255
  6639  00024C  2114               	addwfc	(?___wmul+1)& (0+255),w,b
  6640  00024E  6F9C               	movwf	(sprintf@prec+1)& (0+255),b
  6641                           
  6642                           ; BSR set to: 2
  6643  000250  4B64               	infsnz	sprintf@f& (0+255),f,b
  6644  000252  2B65               	incf	(sprintf@f+1)& (0+255),f,b
  6645  000254                     l966:
  6646                           
  6647                           ; BSR set to: 2
  6648                           
  6649                           ; BSR set to: 2
  6650  000254  0060  F993  FFF6   	movff	sprintf@f,16374
  6651  00025A  0060  F997  FFF7   	movff	sprintf@f+1,16375
  6652  000260                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6653  000260  6AF8               	clrf	16376,c
  6654  000262                     	endif
  6655  000262                     	if	0	;tblptru may be non-zero
  6656  000262                     	endif
  6657  000262  0008               	tblrd		*
  6658  000264  50F5               	movf	16373,w,c
  6659  000266  EC34  F042         	call	_isdigit
  6660  00026A  A0D8               	btfss	16344,0,c
  6661  00026C  D0DE               	goto	l971
  6662  00026E  D7D0               	goto	l967
  6663  000270                     l965:
  6664                           
  6665                           ;doprnt.c: 626: prec = 0;
  6666  000270  0E00               	movlw	0
  6667  000272  0102               	movlb	2	; () banked
  6668  000274  6F9C               	movwf	(sprintf@prec+1)& (0+255),b
  6669  000276  0E00               	movlw	0
  6670  000278  6F9B               	movwf	sprintf@prec& (0+255),b
  6671                           
  6672                           ; BSR set to: 2
  6673                           ;doprnt.c: 628: flag |= 0x1000;
  6674  00027A  899F               	bsf	(sprintf@flag+1)& (0+255),4,b
  6675                           
  6676                           ; BSR set to: 2
  6677                           ;doprnt.c: 635: switch(c = *f++) {
  6678                           
  6679                           ;doprnt.c: 630: }
  6680                           ;doprnt.c: 633: loop:
  6681                           
  6682                           ; BSR set to: 2
  6683  00027C  D0D6               	goto	l971
  6684  00027E                     
  6685                           ; BSR set to: 2
  6686                           ;doprnt.c: 643: flag |= 0x10;
  6687                           
  6688                           ; BSR set to: 2
  6689  00027E  899E               	bsf	sprintf@flag& (0+255),4,b
  6690                           
  6691                           ;doprnt.c: 644: goto loop;
  6692  000280  D0D4               	goto	l971
  6693  000282                     
  6694                           ; BSR set to: 2
  6695                           ;doprnt.c: 663: flag |= 0x400;
  6696                           
  6697                           ; BSR set to: 2
  6698  000282  859F               	bsf	(sprintf@flag+1)& (0+255),2,b
  6699                           
  6700                           ;doprnt.c: 664: break;
  6701  000284  D107               	goto	l976
  6702  000286                     
  6703                           ; BSR set to: 2
  6704                           ;doprnt.c: 670: flag |= 0x20;
  6705                           
  6706                           ; BSR set to: 2
  6707  000286  8B9E               	bsf	sprintf@flag& (0+255),5,b
  6708  000288                     l978:
  6709                           
  6710                           ; BSR set to: 2
  6711                           ;doprnt.c: 673: flag |= 0x100;
  6712  000288  819F               	bsf	(sprintf@flag+1)& (0+255),0,b
  6713                           
  6714                           ;doprnt.c: 674: break;
  6715  00028A  D104               	goto	l976
  6716  00028C                     
  6717                           ; BSR set to: 2
  6718                           ;doprnt.c: 680: flag |= 0x20;
  6719                           
  6720                           ; BSR set to: 2
  6721  00028C  8B9E               	bsf	sprintf@flag& (0+255),5,b
  6722  00028E                     l980:
  6723                           
  6724                           ; BSR set to: 2
  6725                           ;doprnt.c: 683: flag |= 0x200;
  6726  00028E  839F               	bsf	(sprintf@flag+1)& (0+255),1,b
  6727                           
  6728                           ; BSR set to: 2
  6729                           ;doprnt.c: 698: case 'i':
  6730                           ;doprnt.c: 699: break;
  6731                           
  6732                           ; BSR set to: 2
  6733                           
  6734                           ;doprnt.c: 697: case 'd':
  6735                           
  6736                           ;doprnt.c: 684: break;
  6737  000290  D101               	goto	l976
  6738  000292                     
  6739                           ; BSR set to: 2
  6740                           ;doprnt.c: 721: flag |= 0x80;
  6741                           
  6742                           ; BSR set to: 2
  6743  000292  8F9E               	bsf	sprintf@flag& (0+255),7,b
  6744                           
  6745                           ;doprnt.c: 723: break;
  6746  000294  D0FF               	goto	l976
  6747  000296                     
  6748                           ; BSR set to: 2
  6749                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  6750                           
  6751                           ; BSR set to: 2
  6752  000296  0060  FA2B  FFD9   	movff	sprintf@ap,16345
  6753  00029C  0060  FA2F  FFDA   	movff	sprintf@ap+1,16346
  6754  0002A2  006F FF78  F286    	movff	16350,sprintf@cp
  6755  0002A8  006F FF74  F287    	movff	16349,sprintf@cp+1
  6756                           
  6757                           ; BSR set to: 2
  6758  0002AE  0E02               	movlw	2
  6759  0002B0  278A               	addwf	sprintf@ap& (0+255),f,b
  6760  0002B2  0E00               	movlw	0
  6761  0002B4  238B               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6762                           
  6763                           ; BSR set to: 2
  6764                           ;doprnt.c: 740: if(!cp)
  6765  0002B6  5186               	movf	sprintf@cp& (0+255),w,b
  6766  0002B8  1187               	iorwf	(sprintf@cp+1)& (0+255),w,b
  6767  0002BA  A4D8               	btfss	16344,2,c
  6768  0002BC  D004               	goto	l985
  6769                           
  6770                           ; BSR set to: 2
  6771                           ;doprnt.c: 741: cp = "(null)";
  6772  0002BE  0E93               	movlw	low STR_112
  6773  0002C0  6F86               	movwf	sprintf@cp& (0+255),b
  6774  0002C2  0EFF               	movlw	high STR_112
  6775  0002C4  6F87               	movwf	(sprintf@cp+1)& (0+255),b
  6776  0002C6                     l985:
  6777                           
  6778                           ; BSR set to: 2
  6779                           ;doprnt.c: 745: len = 0;
  6780                           
  6781                           ; BSR set to: 2
  6782  0002C6  0E00               	movlw	0
  6783  0002C8  6F89               	movwf	(sprintf@len+1)& (0+255),b
  6784  0002CA  0E00               	movlw	0
  6785  0002CC  6F88               	movwf	sprintf@len& (0+255),b
  6786                           
  6787                           ;doprnt.c: 746: while(cp[len])
  6788  0002CE  D003               	goto	l986
  6789  0002D0                     
  6790                           ;doprnt.c: 747: len++;
  6791                           
  6792                           ; BSR set to: 2
  6793  0002D0  0102               	movlb	2	; () banked
  6794  0002D2  4B88               	infsnz	sprintf@len& (0+255),f,b
  6795  0002D4  2B89               	incf	(sprintf@len+1)& (0+255),f,b
  6796  0002D6                     l986:
  6797                           
  6798                           ; BSR set to: 2
  6799                           
  6800                           ; BSR set to: 2
  6801  0002D6  5188               	movf	sprintf@len& (0+255),w,b
  6802  0002D8  2586               	addwf	sprintf@cp& (0+255),w,b
  6803  0002DA  6F6D               	movwf	??_sprintf& (0+255),b
  6804  0002DC  5189               	movf	(sprintf@len+1)& (0+255),w,b
  6805  0002DE  2187               	addwfc	(sprintf@cp+1)& (0+255),w,b
  6806  0002E0  6F6E               	movwf	(??_sprintf+1)& (0+255),b
  6807  0002E2  0060  F9B7  FFF6   	movff	??_sprintf,16374
  6808  0002E8  0060  F9BB  FFF7   	movff	??_sprintf+1,16375
  6809  0002EE  0E00               	movlw	low (__mediumconst shr (0+16))
  6810  0002F0  6EF8               	movwf	16376,c
  6811  0002F2  0E0F               	movlw	(high __ramtop+-1)
  6812  0002F4  64F7               	cpfsgt	16375,c
  6813  0002F6  D003               	bra	u16817
  6814  0002F8  0008               	tblrd		*
  6815  0002FA  50F5               	movf	16373,w,c
  6816  0002FC  D007               	bra	u16810
  6817  0002FE                     u16817:
  6818  0002FE  006F FFDB FFE9     	movff	16374,16361
  6819  000304  006F FFDF FFEA     	movff	16375,16362
  6820  00030A  50EF               	movf	16367,w,c
  6821  00030C                     u16810:
  6822  00030C  0900               	iorlw	0
  6823  00030E  A4D8               	btfss	16344,2,c
  6824  000310  D7DF               	goto	l987
  6825  000312                     u16820:
  6826                           
  6827                           ;doprnt.c: 753: if(prec && prec < len)
  6828                           
  6829                           ;doprnt.c: 750: dostring:
  6830  000312  0102               	movlb	2	; () banked
  6831  000314  519B               	movf	sprintf@prec& (0+255),w,b
  6832  000316  119C               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6833  000318  B4D8               	btfsc	16344,2,c
  6834  00031A  D00C               	goto	l990
  6835                           
  6836                           ; BSR set to: 2
  6837  00031C  5188               	movf	sprintf@len& (0+255),w,b
  6838  00031E  5D9B               	subwf	sprintf@prec& (0+255),w,b
  6839  000320  5189               	movf	(sprintf@len+1)& (0+255),w,b
  6840  000322  599C               	subwfb	(sprintf@prec+1)& (0+255),w,b
  6841  000324  B0D8               	btfsc	16344,0,c
  6842  000326  D006               	goto	l990
  6843                           
  6844                           ; BSR set to: 2
  6845                           ;doprnt.c: 754: len = prec;
  6846  000328  0060  FA6C  F288   	movff	sprintf@prec,sprintf@len
  6847  00032E  0060  FA70  F289   	movff	sprintf@prec+1,sprintf@len+1
  6848  000334                     l990:
  6849                           
  6850                           ; BSR set to: 2
  6851                           ;doprnt.c: 757: if(width > len)
  6852                           
  6853                           ; BSR set to: 2
  6854  000334  5192               	movf	sprintf@width& (0+255),w,b
  6855  000336  5D88               	subwf	sprintf@len& (0+255),w,b
  6856  000338  5193               	movf	(sprintf@width+1)& (0+255),w,b
  6857  00033A  5989               	subwfb	(sprintf@len+1)& (0+255),w,b
  6858  00033C  B0D8               	btfsc	16344,0,c
  6859  00033E  D005               	goto	l991
  6860                           
  6861                           ; BSR set to: 2
  6862                           ;doprnt.c: 758: width -= len;
  6863  000340  5188               	movf	sprintf@len& (0+255),w,b
  6864  000342  5F92               	subwf	sprintf@width& (0+255),f,b
  6865  000344  5189               	movf	(sprintf@len+1)& (0+255),w,b
  6866  000346  5B93               	subwfb	(sprintf@width+1)& (0+255),f,b
  6867  000348  D004               	goto	l992
  6868  00034A                     l991:
  6869                           
  6870                           ; BSR set to: 2
  6871                           ;doprnt.c: 759: else
  6872                           ;doprnt.c: 760: width = 0;
  6873                           
  6874                           ; BSR set to: 2
  6875  00034A  0E00               	movlw	0
  6876  00034C  6F93               	movwf	(sprintf@width+1)& (0+255),b
  6877  00034E  0E00               	movlw	0
  6878  000350  6F92               	movwf	sprintf@width& (0+255),b
  6879  000352                     l992:
  6880                           
  6881                           ; BSR set to: 2
  6882                           ;doprnt.c: 762: if(!(flag & 0x08))
  6883                           
  6884                           ; BSR set to: 2
  6885  000352  A79E               	btfss	sprintf@flag& (0+255),3,b
  6886  000354  D00B               	goto	l994
  6887  000356  D034               	goto	l997
  6888  000358                     l12555:
  6889                           
  6890                           ; BSR set to: 2
  6891                           ;doprnt.c: 765: ((*sp++ = (' ')));
  6892  000358  0060  F98B  FFD9   	movff	sprintf@sp,16345
  6893  00035E  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  6894  000364  0E20               	movlw	32
  6895  000366  6EDF               	movwf	16351,c
  6896                           
  6897                           ; BSR set to: 2
  6898  000368  4B62               	infsnz	sprintf@sp& (0+255),f,b
  6899  00036A  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  6900  00036C                     l994:
  6901                           
  6902                           ; BSR set to: 2
  6903                           
  6904                           ; BSR set to: 2
  6905  00036C  0792               	decf	sprintf@width& (0+255),f,b
  6906  00036E  A0D8               	btfss	16344,0,c
  6907  000370  0793               	decf	(sprintf@width+1)& (0+255),f,b
  6908  000372  2992               	incf	sprintf@width& (0+255),w,b
  6909  000374  E1F1               	bnz	l12555
  6910  000376  2993               	incf	(sprintf@width+1)& (0+255),w,b
  6911  000378  B4D8               	btfsc	16344,2,c
  6912  00037A  D022               	goto	l997
  6913  00037C  D7ED               	goto	l995
  6914  00037E                     l12561:
  6915                           
  6916                           ; BSR set to: 2
  6917                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  6918  00037E  0060  FA1B  FFF6   	movff	sprintf@cp,16374
  6919  000384  0060  FA1F  FFF7   	movff	sprintf@cp+1,16375
  6920  00038A  0E00               	movlw	low (__mediumconst shr (0+16))
  6921  00038C  6EF8               	movwf	16376,c
  6922  00038E  0060  F98B  FFD9   	movff	sprintf@sp,16345
  6923  000394  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  6924  00039A  0E0F               	movlw	(high __ramtop+-1)
  6925  00039C  64F7               	cpfsgt	16375,c
  6926  00039E  D003               	bra	u16887
  6927  0003A0  0008               	tblrd		*
  6928  0003A2  50F5               	movf	16373,w,c
  6929  0003A4  D007               	bra	u16880
  6930  0003A6                     u16887:
  6931  0003A6  006F FFDB FFE9     	movff	16374,16361
  6932  0003AC  006F FFDF FFEA     	movff	16375,16362
  6933  0003B2  50EF               	movf	16367,w,c
  6934  0003B4                     u16880:
  6935  0003B4  6EDF               	movwf	16351,c
  6936  0003B6  0102               	movlb	2	; () banked
  6937  0003B8  4B86               	infsnz	sprintf@cp& (0+255),f,b
  6938  0003BA  2B87               	incf	(sprintf@cp+1)& (0+255),f,b
  6939                           
  6940                           ; BSR set to: 2
  6941  0003BC  4B62               	infsnz	sprintf@sp& (0+255),f,b
  6942  0003BE  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  6943  0003C0                     l997:
  6944                           
  6945                           ; BSR set to: 2
  6946                           
  6947                           ; BSR set to: 2
  6948  0003C0  0788               	decf	sprintf@len& (0+255),f,b
  6949  0003C2  A0D8               	btfss	16344,0,c
  6950  0003C4  0789               	decf	(sprintf@len+1)& (0+255),f,b
  6951  0003C6  2988               	incf	sprintf@len& (0+255),w,b
  6952  0003C8  E1DA               	bnz	l12561
  6953  0003CA  2989               	incf	(sprintf@len+1)& (0+255),w,b
  6954  0003CC  A4D8               	btfss	16344,2,c
  6955  0003CE  D7D7               	goto	l998
  6956                           
  6957                           ; BSR set to: 2
  6958                           ;doprnt.c: 770: if(flag & 0x08)
  6959  0003D0  B79E               	btfsc	sprintf@flag& (0+255),3,b
  6960  0003D2  D00C               	goto	l1001
  6961  0003D4  EF9B  F00E         	goto	u18200
  6962  0003D8                     l12571:
  6963                           
  6964                           ; BSR set to: 2
  6965                           ;doprnt.c: 772: ((*sp++ = (' ')));
  6966  0003D8  0060  F98B  FFD9   	movff	sprintf@sp,16345
  6967  0003DE  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  6968  0003E4  0E20               	movlw	32
  6969  0003E6  6EDF               	movwf	16351,c
  6970                           
  6971                           ; BSR set to: 2
  6972  0003E8  4B62               	infsnz	sprintf@sp& (0+255),f,b
  6973  0003EA  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  6974  0003EC                     l1001:
  6975                           
  6976                           ; BSR set to: 2
  6977                           
  6978                           ; BSR set to: 2
  6979  0003EC  0792               	decf	sprintf@width& (0+255),f,b
  6980  0003EE  A0D8               	btfss	16344,0,c
  6981  0003F0  0793               	decf	(sprintf@width+1)& (0+255),f,b
  6982  0003F2  2992               	incf	sprintf@width& (0+255),w,b
  6983  0003F4  E1F1               	bnz	l12571
  6984  0003F6  2993               	incf	(sprintf@width+1)& (0+255),w,b
  6985  0003F8  B4D8               	btfsc	16344,2,c
  6986  0003FA  EF9B  F00E         	goto	u18200
  6987  0003FE  D7EC               	goto	l1002
  6988  000400                     
  6989                           ; BSR set to: 2
  6990                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  6991                           
  6992                           ; BSR set to: 2
  6993  000400  0060  FA2B  FFD9   	movff	sprintf@ap,16345
  6994  000406  0060  FA2F  FFDA   	movff	sprintf@ap+1,16346
  6995  00040C  50DF               	movf	16351,w,c
  6996  00040E  6F9D               	movwf	sprintf@c& (0+255),b
  6997                           
  6998                           ; BSR set to: 2
  6999  000410  0E02               	movlw	2
  7000  000412  278A               	addwf	sprintf@ap& (0+255),f,b
  7001  000414  0E00               	movlw	0
  7002  000416  238B               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7003  000418                     
  7004                           ; BSR set to: 2
  7005                           ;doprnt.c: 805: cp = (char *)&c;
  7006                           
  7007                           ; BSR set to: 2
  7008  000418  0E9D               	movlw	low sprintf@c
  7009  00041A  6F86               	movwf	sprintf@cp& (0+255),b
  7010  00041C  0E02               	movlw	high sprintf@c
  7011  00041E  6F87               	movwf	(sprintf@cp+1)& (0+255),b
  7012                           
  7013                           ; BSR set to: 2
  7014                           ;doprnt.c: 806: len = 1;
  7015  000420  0E00               	movlw	0
  7016  000422  6F89               	movwf	(sprintf@len+1)& (0+255),b
  7017  000424  0E01               	movlw	1
  7018  000426  6F88               	movwf	sprintf@len& (0+255),b
  7019                           
  7020                           ;doprnt.c: 807: goto dostring;
  7021  000428  D774               	goto	u16820
  7022  00042A                     l971:
  7023                           
  7024                           ; BSR set to: 2
  7025  00042A  0060  F993  FFF6   	movff	sprintf@f,16374
  7026  000430  0060  F997  FFF7   	movff	sprintf@f+1,16375
  7027  000436  0102               	movlb	2	; () banked
  7028  000438  4B64               	infsnz	sprintf@f& (0+255),f,b
  7029  00043A  2B65               	incf	(sprintf@f+1)& (0+255),f,b
  7030  00043C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7031  00043C  6AF8               	clrf	16376,c
  7032  00043E                     	endif
  7033  00043E                     	if	0	;tblptru may be non-zero
  7034  00043E                     	endif
  7035  00043E  0008               	tblrd		*
  7036  000440  006F FFD4  F29D    	movff	16373,sprintf@c
  7037  000446  519D               	movf	sprintf@c& (0+255),w,b
  7038                           
  7039                           ; Switch size 1, requested type "space"
  7040                           ; Number of cases is 12, Range of values is 0 to 120
  7041                           ; switch strategies available:
  7042                           ; Name         Instructions Cycles
  7043                           ; simple_byte           37    19 (average)
  7044                           ;	Chosen strategy is simple_byte
  7045  000448  0A00               	xorlw	0	; case 0
  7046  00044A  B4D8               	btfsc	16344,2,c
  7047  00044C  EFAC  F00E         	goto	u18210
  7048  000450  0A45               	xorlw	69	; case 69
  7049  000452  B4D8               	btfsc	16344,2,c
  7050  000454  D718               	goto	l977
  7051  000456  0A02               	xorlw	2	; case 71
  7052  000458  B4D8               	btfsc	16344,2,c
  7053  00045A  D718               	goto	l979
  7054  00045C  0A24               	xorlw	36	; case 99
  7055  00045E  B4D8               	btfsc	16344,2,c
  7056  000460  D7CF               	goto	l1004
  7057  000462  0A07               	xorlw	7	; case 100
  7058  000464  B4D8               	btfsc	16344,2,c
  7059  000466  D016               	goto	l976
  7060  000468  0A01               	xorlw	1	; case 101
  7061  00046A  B4D8               	btfsc	16344,2,c
  7062  00046C  D70D               	goto	l978
  7063  00046E  0A03               	xorlw	3	; case 102
  7064  000470  B4D8               	btfsc	16344,2,c
  7065  000472  D707               	goto	l975
  7066  000474  0A01               	xorlw	1	; case 103
  7067  000476  B4D8               	btfsc	16344,2,c
  7068  000478  D70A               	goto	l980
  7069  00047A  0A0E               	xorlw	14	; case 105
  7070  00047C  B4D8               	btfsc	16344,2,c
  7071  00047E  D00A               	goto	l976
  7072  000480  0A05               	xorlw	5	; case 108
  7073  000482  B4D8               	btfsc	16344,2,c
  7074  000484  D6FC               	goto	l974
  7075  000486  0A1F               	xorlw	31	; case 115
  7076  000488  B4D8               	btfsc	16344,2,c
  7077  00048A  D705               	goto	l984
  7078  00048C  0A0B               	xorlw	11	; case 120
  7079  00048E  B4D8               	btfsc	16344,2,c
  7080  000490  D700               	goto	l983
  7081  000492  D7C2               	goto	l1005
  7082  000494                     l976:
  7083                           
  7084                           ; BSR set to: 2
  7085                           ;doprnt.c: 825: if(flag & (0x700)) {
  7086                           
  7087                           ; BSR set to: 2
  7088  000494  0E07               	movlw	7
  7089  000496  159F               	andwf	(sprintf@flag+1)& (0+255),w,b
  7090  000498  B4D8               	btfsc	16344,2,c
  7091  00049A  EFD4  F00B         	goto	l1006
  7092                           
  7093                           ; BSR set to: 2
  7094                           ;doprnt.c: 827: if(flag & 0x1000)
  7095  00049E  A99F               	btfss	(sprintf@flag+1)& (0+255),4,b
  7096  0004A0  D004               	goto	l1007
  7097                           
  7098                           ; BSR set to: 2
  7099                           ;doprnt.c: 829: prec = 6;
  7100  0004A2  0E00               	movlw	0
  7101  0004A4  6F9C               	movwf	(sprintf@prec+1)& (0+255),b
  7102  0004A6  0E06               	movlw	6
  7103  0004A8  6F9B               	movwf	sprintf@prec& (0+255),b
  7104  0004AA                     l1007:
  7105                           
  7106                           ; BSR set to: 2
  7107                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7108                           
  7109                           ; BSR set to: 2
  7110  0004AA  0060  FA2B  FFD9   	movff	sprintf@ap,16345
  7111  0004B0  0060  FA2F  FFDA   	movff	sprintf@ap+1,16346
  7112  0004B6  006F FF78  F298    	movff	16350,sprintf@fval
  7113  0004BC  006F FF78  F299    	movff	16350,sprintf@fval+1
  7114  0004C2  006F FF74  F29A    	movff	16349,sprintf@fval+2
  7115                           
  7116                           ; BSR set to: 2
  7117  0004C8  0E03               	movlw	3
  7118  0004CA  278A               	addwf	sprintf@ap& (0+255),f,b
  7119  0004CC  0E00               	movlw	0
  7120  0004CE  238B               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7121                           
  7122                           ; BSR set to: 2
  7123                           ;doprnt.c: 831: if(fval < 0.0) {
  7124  0004D0  AF9A               	btfss	(sprintf@fval+2)& (0+255),7,b
  7125  0004D2  D017               	goto	l1008
  7126                           
  7127                           ; BSR set to: 2
  7128                           ;doprnt.c: 832: fval = -fval;
  7129  0004D4  0060  FA60  F256   	movff	sprintf@fval,___ftneg@f1
  7130  0004DA  0060  FA64  F257   	movff	sprintf@fval+1,___ftneg@f1+1
  7131  0004E0  0060  FA68  F258   	movff	sprintf@fval+2,___ftneg@f1+2
  7132  0004E6  ECE0  F041         	call	___ftneg	;wreg free
  7133  0004EA  0060  F958  F298   	movff	?___ftneg,sprintf@fval
  7134  0004F0  0060  F95C  F299   	movff	?___ftneg+1,sprintf@fval+1
  7135  0004F6  0060  F960  F29A   	movff	?___ftneg+2,sprintf@fval+2
  7136                           
  7137                           ;doprnt.c: 833: flag |= 0x03;
  7138  0004FC  0E03               	movlw	3
  7139  0004FE  0102               	movlb	2	; () banked
  7140  000500  139E               	iorwf	sprintf@flag& (0+255),f,b
  7141  000502                     l1008:
  7142                           
  7143                           ; BSR set to: 2
  7144                           ;doprnt.c: 834: }
  7145                           ;doprnt.c: 835: exp = 0;
  7146                           
  7147                           ; BSR set to: 2
  7148  000502  0E00               	movlw	0
  7149  000504  6F91               	movwf	(sprintf@exp+1)& (0+255),b
  7150  000506  0E00               	movlw	0
  7151  000508  6F90               	movwf	sprintf@exp& (0+255),b
  7152                           
  7153                           ; BSR set to: 2
  7154                           ;doprnt.c: 836: if( fval!=0) {
  7155  00050A  5198               	movf	sprintf@fval& (0+255),w,b
  7156  00050C  1199               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7157  00050E  119A               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7158  000510  B4D8               	btfsc	16344,2,c
  7159  000512  D0A6               	goto	l1013
  7160                           
  7161                           ; BSR set to: 2
  7162                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  7163  000514  0E82               	movlw	130
  7164  000516  6F6D               	movwf	??_sprintf& (0+255),b
  7165  000518  0EFF               	movlw	255
  7166  00051A  6F6E               	movwf	(??_sprintf+1)& (0+255),b
  7167  00051C  0060  FA60  F26F   	movff	sprintf@fval,??_sprintf+2
  7168  000522  0060  FA64  F270   	movff	sprintf@fval+1,??_sprintf+3
  7169  000528  0060  FA68  F271   	movff	sprintf@fval+2,??_sprintf+4
  7170  00052E  0060  FA6C  F272   	movff	sprintf@fval+3,??_sprintf+5
  7171  000534  0E10               	movlw	16
  7172  000536  D005               	goto	u16960
  7173  000538                     u16965:
  7174  000538  90D8               	bcf	16344,0,c
  7175  00053A  3372               	rrcf	(??_sprintf+5)& (0+255),f,b
  7176  00053C  3371               	rrcf	(??_sprintf+4)& (0+255),f,b
  7177  00053E  3370               	rrcf	(??_sprintf+3)& (0+255),f,b
  7178  000540  336F               	rrcf	(??_sprintf+2)& (0+255),f,b
  7179  000542                     u16960:
  7180  000542  2EE8               	decfsz	16360,f,c
  7181  000544  D7F9               	goto	u16965
  7182  000546  516F               	movf	(??_sprintf+2)& (0+255),w,b
  7183  000548  256D               	addwf	??_sprintf& (0+255),w,b
  7184  00054A  6F90               	movwf	sprintf@exp& (0+255),b
  7185  00054C  0E00               	movlw	0
  7186  00054E  216E               	addwfc	(??_sprintf+1)& (0+255),w,b
  7187  000550  6F91               	movwf	(sprintf@exp+1)& (0+255),b
  7188                           
  7189                           ; BSR set to: 2
  7190                           ;doprnt.c: 838: exp--;
  7191  000552  0790               	decf	sprintf@exp& (0+255),f,b
  7192  000554  A0D8               	btfss	16344,0,c
  7193  000556  0791               	decf	(sprintf@exp+1)& (0+255),f,b
  7194                           
  7195                           ; BSR set to: 2
  7196                           ;doprnt.c: 839: exp *= 3;
  7197  000558  0060  FA40  F213   	movff	sprintf@exp,___wmul@multiplier
  7198  00055E  0060  FA44  F214   	movff	sprintf@exp+1,___wmul@multiplier+1
  7199  000564  0E00               	movlw	0
  7200  000566  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7201  000568  0E03               	movlw	3
  7202  00056A  6F15               	movwf	___wmul@multiplicand& (0+255),b
  7203  00056C  ECB1  F041         	call	___wmul	;wreg free
  7204  000570  0060  F84C  F290   	movff	?___wmul,sprintf@exp
  7205  000576  0060  F850  F291   	movff	?___wmul+1,sprintf@exp+1
  7206                           
  7207                           ;doprnt.c: 840: exp /= 10;
  7208  00057C  0060  FA40  F20B   	movff	sprintf@exp,___awdiv@dividend
  7209  000582  0060  FA44  F20C   	movff	sprintf@exp+1,___awdiv@dividend+1
  7210  000588  0E00               	movlw	0
  7211  00058A  0102               	movlb	2	; () banked
  7212  00058C  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
  7213  00058E  0E0A               	movlw	10
  7214  000590  6F0D               	movwf	___awdiv@divisor& (0+255),b
  7215  000592  EC62  F03A         	call	___awdiv	;wreg free
  7216  000596  0060  F82C  F290   	movff	?___awdiv,sprintf@exp
  7217  00059C  0060  F830  F291   	movff	?___awdiv+1,sprintf@exp+1
  7218                           
  7219                           ;doprnt.c: 841: if(exp < 0)
  7220  0005A2  0102               	movlb	2	; () banked
  7221  0005A4  AF91               	btfss	(sprintf@exp+1)& (0+255),7,b
  7222  0005A6  D003               	goto	l1010
  7223                           
  7224                           ; BSR set to: 2
  7225                           ;doprnt.c: 842: exp--;
  7226  0005A8  0790               	decf	sprintf@exp& (0+255),f,b
  7227  0005AA  A0D8               	btfss	16344,0,c
  7228  0005AC  0791               	decf	(sprintf@exp+1)& (0+255),f,b
  7229  0005AE                     l1010:
  7230                           
  7231                           ; BSR set to: 2
  7232                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7233                           
  7234                           ; BSR set to: 2
  7235  0005AE  5190               	movf	sprintf@exp& (0+255),w,b
  7236  0005B0  0800               	sublw	0
  7237  0005B2  EC0B  F01D         	call	_scale
  7238  0005B6  0060  F8A0  F28C   	movff	?_scale,sprintf@tmpval
  7239  0005BC  0060  F8A4  F28D   	movff	?_scale+1,sprintf@tmpval+1
  7240  0005C2  0060  F8A8  F28E   	movff	?_scale+2,sprintf@tmpval+2
  7241                           
  7242                           ;doprnt.c: 847: tmpval.integ *= fval;
  7243  0005C8  0060  FA30  F219   	movff	sprintf@tmpval,___ftmul@f1
  7244  0005CE  0060  FA34  F21A   	movff	sprintf@tmpval+1,___ftmul@f1+1
  7245  0005D4  0060  FA38  F21B   	movff	sprintf@tmpval+2,___ftmul@f1+2
  7246  0005DA  0060  FA60  F21C   	movff	sprintf@fval,___ftmul@f2
  7247  0005E0  0060  FA64  F21D   	movff	sprintf@fval+1,___ftmul@f2+1
  7248  0005E6  0060  FA68  F21E   	movff	sprintf@fval+2,___ftmul@f2+2
  7249  0005EC  EC50  F030         	call	___ftmul	;wreg free
  7250  0005F0  0060  F864  F28C   	movff	?___ftmul,sprintf@tmpval
  7251  0005F6  0060  F868  F28D   	movff	?___ftmul+1,sprintf@tmpval+1
  7252  0005FC  0060  F86C  F28E   	movff	?___ftmul+2,sprintf@tmpval+2
  7253                           
  7254                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7255  000602  0060  FA30  F259   	movff	sprintf@tmpval,___ftge@ff1
  7256  000608  0060  FA34  F25A   	movff	sprintf@tmpval+1,___ftge@ff1+1
  7257  00060E  0060  FA38  F25B   	movff	sprintf@tmpval+2,___ftge@ff1+2
  7258  000614  0E00               	movlw	0
  7259  000616  0102               	movlb	2	; () banked
  7260  000618  6F5C               	movwf	___ftge@ff2& (0+255),b
  7261  00061A  0E80               	movlw	128
  7262  00061C  6F5D               	movwf	(___ftge@ff2+1)& (0+255),b
  7263  00061E  0E3F               	movlw	63
  7264  000620  6F5E               	movwf	(___ftge@ff2+2)& (0+255),b
  7265  000622  EC39  F039         	call	___ftge	;wreg free
  7266  000626  0102               	movlb	2	; () banked
  7267  000628  B0D8               	btfsc	16344,0,c
  7268  00062A  D004               	goto	l1011
  7269                           
  7270                           ; BSR set to: 2
  7271                           ;doprnt.c: 849: exp--;
  7272  00062C  0790               	decf	sprintf@exp& (0+255),f,b
  7273  00062E  A0D8               	btfss	16344,0,c
  7274  000630  0791               	decf	(sprintf@exp+1)& (0+255),f,b
  7275  000632  D016               	goto	l1013
  7276  000634                     l1011:
  7277                           
  7278                           ; BSR set to: 2
  7279                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7280                           
  7281                           ; BSR set to: 2
  7282  000634  0060  FA30  F259   	movff	sprintf@tmpval,___ftge@ff1
  7283  00063A  0060  FA34  F25A   	movff	sprintf@tmpval+1,___ftge@ff1+1
  7284  000640  0060  FA38  F25B   	movff	sprintf@tmpval+2,___ftge@ff1+2
  7285  000646  0E00               	movlw	0
  7286  000648  6F5C               	movwf	___ftge@ff2& (0+255),b
  7287  00064A  0E20               	movlw	32
  7288  00064C  6F5D               	movwf	(___ftge@ff2+1)& (0+255),b
  7289  00064E  0E41               	movlw	65
  7290  000650  6F5E               	movwf	(___ftge@ff2+2)& (0+255),b
  7291  000652  EC39  F039         	call	___ftge	;wreg free
  7292  000656  0102               	movlb	2	; () banked
  7293  000658  A0D8               	btfss	16344,0,c
  7294  00065A  D002               	goto	l1013
  7295                           
  7296                           ; BSR set to: 2
  7297                           ;doprnt.c: 851: exp++;
  7298  00065C  4B90               	infsnz	sprintf@exp& (0+255),f,b
  7299  00065E  2B91               	incf	(sprintf@exp+1)& (0+255),f,b
  7300  000660                     l1013:
  7301                           
  7302                           ; BSR set to: 2
  7303                           ;doprnt.c: 852: }
  7304                           ;doprnt.c: 854: if(exp <= 0)
  7305                           
  7306                           ; BSR set to: 2
  7307                           
  7308                           ; BSR set to: 2
  7309                           
  7310                           ; BSR set to: 2
  7311  000660  BF91               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7312  000662  D005               	goto	u17000
  7313  000664  5191               	movf	(sprintf@exp+1)& (0+255),w,b
  7314  000666  E106               	bnz	l1014
  7315  000668  0590               	decf	sprintf@exp& (0+255),w,b
  7316  00066A  B0D8               	btfsc	16344,0,c
  7317  00066C  D003               	goto	l1014
  7318  00066E                     u17000:
  7319                           
  7320                           ; BSR set to: 2
  7321                           ;doprnt.c: 855: c = 1;
  7322  00066E  0E01               	movlw	1
  7323  000670  6F9D               	movwf	sprintf@c& (0+255),b
  7324  000672  D003               	goto	l1015
  7325  000674                     l1014:
  7326                           
  7327                           ; BSR set to: 2
  7328                           ;doprnt.c: 856: else
  7329                           ;doprnt.c: 857: c = exp;
  7330  000674  0060  FA40  F29D   	movff	sprintf@exp,sprintf@c
  7331  00067A                     l1015:
  7332                           
  7333                           ; BSR set to: 2
  7334                           ;doprnt.c: 858: if(
  7335                           ;doprnt.c: 860: flag & 0x100
  7336                           ;doprnt.c: 862: ||
  7337                           ;doprnt.c: 866: flag & 0x200 && (exp < -4 || exp >= (int)prec)
  7338                           ;doprnt.c: 868: ) {
  7339  00067A  B19F               	btfsc	(sprintf@flag+1)& (0+255),0,b
  7340  00067C  D016               	goto	u17040
  7341                           
  7342                           ; BSR set to: 2
  7343  00067E  A39F               	btfss	(sprintf@flag+1)& (0+255),1,b
  7344  000680  EF65  F007         	goto	l1016
  7345                           
  7346                           ; BSR set to: 2
  7347  000684  AF91               	btfss	(sprintf@exp+1)& (0+255),7,b
  7348  000686  D006               	goto	u17030
  7349  000688  0EFC               	movlw	252
  7350  00068A  5D90               	subwf	sprintf@exp& (0+255),w,b
  7351  00068C  0EFF               	movlw	255
  7352  00068E  5991               	subwfb	(sprintf@exp+1)& (0+255),w,b
  7353  000690  A0D8               	btfss	16344,0,c
  7354  000692  D00B               	goto	u17040
  7355  000694                     u17030:
  7356                           
  7357                           ; BSR set to: 2
  7358  000694  519B               	movf	sprintf@prec& (0+255),w,b
  7359  000696  5D90               	subwf	sprintf@exp& (0+255),w,b
  7360  000698  5191               	movf	(sprintf@exp+1)& (0+255),w,b
  7361  00069A  0A80               	xorlw	128
  7362  00069C  6F6D               	movwf	??_sprintf& (0+255),b
  7363  00069E  519C               	movf	(sprintf@prec+1)& (0+255),w,b
  7364  0006A0  0A80               	xorlw	128
  7365  0006A2  596D               	subwfb	??_sprintf& (0+255),w,b
  7366  0006A4  A0D8               	btfss	16344,0,c
  7367  0006A6  EF65  F007         	goto	l1016
  7368  0006AA                     u17040:
  7369                           
  7370                           ; BSR set to: 2
  7371                           ;doprnt.c: 870: if(prec && flag & 0x200)
  7372                           
  7373                           ; BSR set to: 2
  7374                           
  7375                           ; BSR set to: 2
  7376  0006AA  519B               	movf	sprintf@prec& (0+255),w,b
  7377  0006AC  119C               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7378  0006AE  A4D8               	btfss	16344,2,c
  7379                           
  7380                           ; BSR set to: 2
  7381  0006B0  A39F               	btfss	(sprintf@flag+1)& (0+255),1,b
  7382  0006B2  D003               	goto	l1021
  7383                           
  7384                           ; BSR set to: 2
  7385                           ;doprnt.c: 871: prec--;
  7386  0006B4  079B               	decf	sprintf@prec& (0+255),f,b
  7387  0006B6  A0D8               	btfss	16344,0,c
  7388  0006B8  079C               	decf	(sprintf@prec+1)& (0+255),f,b
  7389  0006BA                     l1021:
  7390                           
  7391                           ; BSR set to: 2
  7392                           ;doprnt.c: 873: if((unsigned)prec > (sizeof dpowers/sizeof dpowers[0]) - 2)
  7393                           
  7394                           ; BSR set to: 2
  7395  0006BA  519C               	movf	(sprintf@prec+1)& (0+255),w,b
  7396  0006BC  E104               	bnz	u17070
  7397  0006BE  0E09               	movlw	9
  7398  0006C0  5D9B               	subwf	sprintf@prec& (0+255),w,b
  7399  0006C2  A0D8               	btfss	16344,0,c
  7400  0006C4  D003               	goto	l1022
  7401  0006C6                     u17070:
  7402                           
  7403                           ; BSR set to: 2
  7404                           ;doprnt.c: 874: c = (sizeof dpowers/sizeof dpowers[0]) - 2;
  7405  0006C6  0E08               	movlw	8
  7406  0006C8  6F9D               	movwf	sprintf@c& (0+255),b
  7407  0006CA  D003               	goto	l1023
  7408  0006CC                     l1022:
  7409                           
  7410                           ; BSR set to: 2
  7411                           ;doprnt.c: 875: else
  7412                           ;doprnt.c: 876: c = prec;
  7413  0006CC  0060  FA6C  F29D   	movff	sprintf@prec,sprintf@c
  7414  0006D2                     l1023:
  7415                           
  7416                           ; BSR set to: 2
  7417                           ;doprnt.c: 877: if( fval!=0) {
  7418                           
  7419                           ; BSR set to: 2
  7420  0006D2  5198               	movf	sprintf@fval& (0+255),w,b
  7421  0006D4  1199               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7422  0006D6  119A               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7423  0006D8  B4D8               	btfsc	16344,2,c
  7424  0006DA  D11E               	goto	l1028
  7425                           
  7426                           ; BSR set to: 2
  7427                           ;doprnt.c: 878: fval /= scale(exp-c);
  7428  0006DC  0060  FA60  F22F   	movff	sprintf@fval,___ftdiv@f1
  7429  0006E2  0060  FA64  F230   	movff	sprintf@fval+1,___ftdiv@f1+1
  7430  0006E8  0060  FA68  F231   	movff	sprintf@fval+2,___ftdiv@f1+2
  7431  0006EE  519D               	movf	sprintf@c& (0+255),w,b
  7432  0006F0  0800               	sublw	0
  7433  0006F2  2590               	addwf	sprintf@exp& (0+255),w,b
  7434  0006F4  EC0B  F01D         	call	_scale
  7435  0006F8  0060  F8A0  F232   	movff	?_scale,___ftdiv@f2
  7436  0006FE  0060  F8A4  F233   	movff	?_scale+1,___ftdiv@f2+1
  7437  000704  0060  F8A8  F234   	movff	?_scale+2,___ftdiv@f2+2
  7438  00070A  ECE2  F032         	call	___ftdiv	;wreg free
  7439  00070E  0060  F8BC  F298   	movff	?___ftdiv,sprintf@fval
  7440  000714  0060  F8C0  F299   	movff	?___ftdiv+1,sprintf@fval+1
  7441  00071A  0060  F8C4  F29A   	movff	?___ftdiv+2,sprintf@fval+2
  7442                           
  7443                           ;doprnt.c: 893: if(fval - (double)(unsigned long)fval >= 0.5)
  7444  000720  0060  FA60  F235   	movff	sprintf@fval,___ftadd@f2
  7445  000726  0060  FA64  F236   	movff	sprintf@fval+1,___ftadd@f2+1
  7446  00072C  0060  FA68  F237   	movff	sprintf@fval+2,___ftadd@f2+2
  7447  000732  0060  FA60  F23E   	movff	sprintf@fval,___fttol@f1
  7448  000738  0060  FA64  F23F   	movff	sprintf@fval+1,___fttol@f1+1
  7449  00073E  0060  FA68  F240   	movff	sprintf@fval+2,___fttol@f1+2
  7450  000744  EC5B  F031         	call	___fttol	;wreg free
  7451  000748  0060  F8F8  F24D   	movff	?___fttol,___lltoft@c
  7452  00074E  0060  F8FC  F24E   	movff	?___fttol+1,___lltoft@c+1
  7453  000754  0060  F900  F24F   	movff	?___fttol+2,___lltoft@c+2
  7454  00075A  0060  F904  F250   	movff	?___fttol+3,___lltoft@c+3
  7455  000760  EC05  F03D         	call	___lltoft	;wreg free
  7456  000764  0060  F934  F256   	movff	?___lltoft,___ftneg@f1
  7457  00076A  0060  F938  F257   	movff	?___lltoft+1,___ftneg@f1+1
  7458  000770  0060  F93C  F258   	movff	?___lltoft+2,___ftneg@f1+2
  7459  000776  ECE0  F041         	call	___ftneg	;wreg free
  7460  00077A  0060  F958  F232   	movff	?___ftneg,___ftadd@f1
  7461  000780  0060  F95C  F233   	movff	?___ftneg+1,___ftadd@f1+1
  7462  000786  0060  F960  F234   	movff	?___ftneg+2,___ftadd@f1+2
  7463  00078C  EC3A  F029         	call	___ftadd	;wreg free
  7464  000790  0060  F8C8  F259   	movff	?___ftadd,___ftge@ff1
  7465  000796  0060  F8CC  F25A   	movff	?___ftadd+1,___ftge@ff1+1
  7466  00079C  0060  F8D0  F25B   	movff	?___ftadd+2,___ftge@ff1+2
  7467  0007A2  0E00               	movlw	0
  7468  0007A4  0102               	movlb	2	; () banked
  7469  0007A6  6F5C               	movwf	___ftge@ff2& (0+255),b
  7470  0007A8  0E00               	movlw	0
  7471  0007AA  6F5D               	movwf	(___ftge@ff2+1)& (0+255),b
  7472  0007AC  0E3F               	movlw	63
  7473  0007AE  6F5E               	movwf	(___ftge@ff2+2)& (0+255),b
  7474  0007B0  EC39  F039         	call	___ftge	;wreg free
  7475  0007B4  0102               	movlb	2	; () banked
  7476  0007B6  A0D8               	btfss	16344,0,c
  7477  0007B8  D01A               	goto	l1025
  7478                           
  7479                           ; BSR set to: 2
  7480                           ;doprnt.c: 894: fval += 0.5;
  7481  0007BA  0060  FA60  F232   	movff	sprintf@fval,___ftadd@f1
  7482  0007C0  0060  FA64  F233   	movff	sprintf@fval+1,___ftadd@f1+1
  7483  0007C6  0060  FA68  F234   	movff	sprintf@fval+2,___ftadd@f1+2
  7484  0007CC  0E00               	movlw	0
  7485  0007CE  6F35               	movwf	___ftadd@f2& (0+255),b
  7486  0007D0  0E00               	movlw	0
  7487  0007D2  6F36               	movwf	(___ftadd@f2+1)& (0+255),b
  7488  0007D4  0E3F               	movlw	63
  7489  0007D6  6F37               	movwf	(___ftadd@f2+2)& (0+255),b
  7490  0007D8  EC3A  F029         	call	___ftadd	;wreg free
  7491  0007DC  0060  F8C8  F298   	movff	?___ftadd,sprintf@fval
  7492  0007E2  0060  F8CC  F299   	movff	?___ftadd+1,sprintf@fval+1
  7493  0007E8  0060  F8D0  F29A   	movff	?___ftadd+2,sprintf@fval+2
  7494  0007EE                     l1025:
  7495                           
  7496                           ;doprnt.c: 895: if((unsigned long)fval >= dpowers[c+1]) {
  7497  0007EE  0060  FA74  F26D   	movff	sprintf@c,??_sprintf
  7498  0007F4  0102               	movlb	2	; () banked
  7499  0007F6  6B6E               	clrf	(??_sprintf+1)& (0+255),b
  7500  0007F8  BF6D               	btfsc	??_sprintf& (0+255),7,b
  7501  0007FA  076E               	decf	(??_sprintf+1)& (0+255),f,b
  7502  0007FC  90D8               	bcf	16344,0,c
  7503  0007FE  376D               	rlcf	??_sprintf& (0+255),f,b
  7504  000800  376E               	rlcf	(??_sprintf+1)& (0+255),f,b
  7505  000802  90D8               	bcf	16344,0,c
  7506  000804  376D               	rlcf	??_sprintf& (0+255),f,b
  7507  000806  376E               	rlcf	(??_sprintf+1)& (0+255),f,b
  7508  000808  0E04               	movlw	4
  7509  00080A  276D               	addwf	??_sprintf& (0+255),f,b
  7510  00080C  0E00               	movlw	0
  7511  00080E  236E               	addwfc	(??_sprintf+1)& (0+255),f,b
  7512  000810  0EBF               	movlw	low _dpowers
  7513  000812  256D               	addwf	??_sprintf& (0+255),w,b
  7514  000814  6EF6               	movwf	16374,c
  7515  000816  0EFA               	movlw	high _dpowers
  7516  000818  216E               	addwfc	(??_sprintf+1)& (0+255),w,b
  7517  00081A  6EF7               	movwf	16375,c
  7518  00081C                     	if	1	;There are 3 active tblptr bytes
  7519  00081C  6AF8               	clrf	16376,c
  7520  00081E  0E00               	movlw	low (__mediumconst shr (0+16))
  7521  000820  22F8               	addwfc	16376,f,c
  7522  000822                     	endif
  7523  000822  0060  FA60  F23E   	movff	sprintf@fval,___fttol@f1
  7524  000828  0060  FA64  F23F   	movff	sprintf@fval+1,___fttol@f1+1
  7525  00082E  0060  FA68  F240   	movff	sprintf@fval+2,___fttol@f1+2
  7526  000834  EC5B  F031         	call	___fttol	;wreg free
  7527  000838  0009               	tblrd		*+
  7528  00083A  50F5               	movf	16373,w,c
  7529  00083C  0102               	movlb	2	; () banked
  7530  00083E  5D3E               	subwf	?___fttol& (0+255),w,b
  7531  000840  0009               	tblrd		*+
  7532  000842  50F5               	movf	16373,w,c
  7533  000844  593F               	subwfb	(?___fttol+1)& (0+255),w,b
  7534  000846  0009               	tblrd		*+
  7535  000848  50F5               	movf	16373,w,c
  7536  00084A  5940               	subwfb	(?___fttol+2)& (0+255),w,b
  7537  00084C  0009               	tblrd		*+
  7538  00084E  50F5               	movf	16373,w,c
  7539  000850  5941               	subwfb	(?___fttol+3)& (0+255),w,b
  7540  000852  A0D8               	btfss	16344,0,c
  7541  000854  D01E               	goto	l1026
  7542                           
  7543                           ; BSR set to: 2
  7544                           ;doprnt.c: 896: fval *= 1e-1;
  7545  000856  0060  FA60  F219   	movff	sprintf@fval,___ftmul@f1
  7546  00085C  0060  FA64  F21A   	movff	sprintf@fval+1,___ftmul@f1+1
  7547  000862  0060  FA68  F21B   	movff	sprintf@fval+2,___ftmul@f1+2
  7548  000868  0ECD               	movlw	205
  7549  00086A  6F1C               	movwf	___ftmul@f2& (0+255),b
  7550  00086C  0ECC               	movlw	204
  7551  00086E  6F1D               	movwf	(___ftmul@f2+1)& (0+255),b
  7552  000870  0E3D               	movlw	61
  7553  000872  6F1E               	movwf	(___ftmul@f2+2)& (0+255),b
  7554  000874  EC50  F030         	call	___ftmul	;wreg free
  7555  000878  0060  F864  F298   	movff	?___ftmul,sprintf@fval
  7556  00087E  0060  F868  F299   	movff	?___ftmul+1,sprintf@fval+1
  7557  000884  0060  F86C  F29A   	movff	?___ftmul+2,sprintf@fval+2
  7558                           
  7559                           ;doprnt.c: 897: exp++;
  7560  00088A  0102               	movlb	2	; () banked
  7561  00088C  4B90               	infsnz	sprintf@exp& (0+255),f,b
  7562  00088E  2B91               	incf	(sprintf@exp+1)& (0+255),f,b
  7563                           
  7564                           ;doprnt.c: 898: } else if((unsigned long)fval < dpowers[c]) {
  7565  000890  D043               	goto	l1028
  7566  000892                     l1026:
  7567                           
  7568                           ; BSR set to: 2
  7569                           
  7570                           ; BSR set to: 2
  7571  000892  519D               	movf	sprintf@c& (0+255),w,b
  7572  000894  0D04               	mullw	4
  7573  000896  0EBF               	movlw	low _dpowers
  7574  000898  24F3               	addwf	16371,w,c
  7575  00089A  6EF6               	movwf	16374,c
  7576  00089C  0EFA               	movlw	high _dpowers
  7577  00089E  20F4               	addwfc	16372,w,c
  7578  0008A0  6EF7               	movwf	16375,c
  7579  0008A2                     	if	1	;There are 3 active tblptr bytes
  7580  0008A2  6AF8               	clrf	16376,c
  7581  0008A4  0E00               	movlw	low (__mediumconst shr (0+16))
  7582  0008A6  22F8               	addwfc	16376,f,c
  7583  0008A8                     	endif
  7584  0008A8  0060  FA60  F23E   	movff	sprintf@fval,___fttol@f1
  7585  0008AE  0060  FA64  F23F   	movff	sprintf@fval+1,___fttol@f1+1
  7586  0008B4  0060  FA68  F240   	movff	sprintf@fval+2,___fttol@f1+2
  7587  0008BA  EC5B  F031         	call	___fttol	;wreg free
  7588  0008BE  0009               	tblrd		*+
  7589  0008C0  50F5               	movf	16373,w,c
  7590  0008C2  0102               	movlb	2	; () banked
  7591  0008C4  5D3E               	subwf	?___fttol& (0+255),w,b
  7592  0008C6  0009               	tblrd		*+
  7593  0008C8  50F5               	movf	16373,w,c
  7594  0008CA  593F               	subwfb	(?___fttol+1)& (0+255),w,b
  7595  0008CC  0009               	tblrd		*+
  7596  0008CE  50F5               	movf	16373,w,c
  7597  0008D0  5940               	subwfb	(?___fttol+2)& (0+255),w,b
  7598  0008D2  0009               	tblrd		*+
  7599  0008D4  50F5               	movf	16373,w,c
  7600  0008D6  5941               	subwfb	(?___fttol+3)& (0+255),w,b
  7601  0008D8  B0D8               	btfsc	16344,0,c
  7602  0008DA  D01E               	goto	l1028
  7603                           
  7604                           ; BSR set to: 2
  7605                           ;doprnt.c: 899: fval *= 10.0;
  7606  0008DC  0060  FA60  F219   	movff	sprintf@fval,___ftmul@f1
  7607  0008E2  0060  FA64  F21A   	movff	sprintf@fval+1,___ftmul@f1+1
  7608  0008E8  0060  FA68  F21B   	movff	sprintf@fval+2,___ftmul@f1+2
  7609  0008EE  0E00               	movlw	0
  7610  0008F0  6F1C               	movwf	___ftmul@f2& (0+255),b
  7611  0008F2  0E20               	movlw	32
  7612  0008F4  6F1D               	movwf	(___ftmul@f2+1)& (0+255),b
  7613  0008F6  0E41               	movlw	65
  7614  0008F8  6F1E               	movwf	(___ftmul@f2+2)& (0+255),b
  7615  0008FA  EC50  F030         	call	___ftmul	;wreg free
  7616  0008FE  0060  F864  F298   	movff	?___ftmul,sprintf@fval
  7617  000904  0060  F868  F299   	movff	?___ftmul+1,sprintf@fval+1
  7618  00090A  0060  F86C  F29A   	movff	?___ftmul+2,sprintf@fval+2
  7619                           
  7620                           ;doprnt.c: 900: exp--;
  7621  000910  0102               	movlb	2	; () banked
  7622  000912  0790               	decf	sprintf@exp& (0+255),f,b
  7623  000914  A0D8               	btfss	16344,0,c
  7624  000916  0791               	decf	(sprintf@exp+1)& (0+255),f,b
  7625  000918                     l1028:
  7626                           
  7627                           ; BSR set to: 2
  7628                           ;doprnt.c: 901: }
  7629                           ;doprnt.c: 903: }
  7630                           ;doprnt.c: 905: if(flag & 0x200 && !(flag & 0x800)) {
  7631                           
  7632                           ; BSR set to: 2
  7633                           
  7634                           ; BSR set to: 2
  7635                           
  7636                           ; BSR set to: 2
  7637  000918  B39F               	btfsc	(sprintf@flag+1)& (0+255),1,b
  7638                           
  7639                           ; BSR set to: 2
  7640  00091A  B79F               	btfsc	(sprintf@flag+1)& (0+255),3,b
  7641  00091C  D09E               	goto	l1036
  7642                           
  7643                           ; BSR set to: 2
  7644                           ;doprnt.c: 906: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])))
  7645  00091E  BF9C               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7646  000920  D00A               	goto	l1030
  7647  000922  519C               	movf	(sprintf@prec+1)& (0+255),w,b
  7648  000924  E104               	bnz	u17140
  7649  000926  0E0B               	movlw	11
  7650  000928  5D9B               	subwf	sprintf@prec& (0+255),w,b
  7651  00092A  A0D8               	btfss	16344,0,c
  7652  00092C  D004               	goto	l1030
  7653  00092E                     u17140:
  7654                           
  7655                           ; BSR set to: 2
  7656                           ;doprnt.c: 907: prec = (sizeof dpowers/sizeof dpowers[0]);
  7657  00092E  0E00               	movlw	0
  7658  000930  6F9C               	movwf	(sprintf@prec+1)& (0+255),b
  7659  000932  0E0A               	movlw	10
  7660  000934  6F9B               	movwf	sprintf@prec& (0+255),b
  7661  000936                     l1030:
  7662                           
  7663                           ; BSR set to: 2
  7664                           ;doprnt.c: 915: val = (unsigned long)fval;
  7665                           
  7666                           ; BSR set to: 2
  7667  000936  0060  FA60  F23E   	movff	sprintf@fval,___fttol@f1
  7668  00093C  0060  FA64  F23F   	movff	sprintf@fval+1,___fttol@f1+1
  7669  000942  0060  FA68  F240   	movff	sprintf@fval+2,___fttol@f1+2
  7670  000948  EC5B  F031         	call	___fttol	;wreg free
  7671  00094C  0060  F8F8  F294   	movff	?___fttol,sprintf@val
  7672  000952  0060  F8FC  F295   	movff	?___fttol+1,sprintf@val+1
  7673  000958  0060  F900  F296   	movff	?___fttol+2,sprintf@val+2
  7674  00095E  0060  F904  F297   	movff	?___fttol+3,sprintf@val+3
  7675                           
  7676                           ;doprnt.c: 916: while(val && val % 10 == 0) {
  7677  000964  D026               	goto	l1031
  7678  000966                     
  7679                           ;doprnt.c: 917: prec--;
  7680  000966  0102               	movlb	2	; () banked
  7681  000968  079B               	decf	sprintf@prec& (0+255),f,b
  7682  00096A  A0D8               	btfss	16344,0,c
  7683  00096C  079C               	decf	(sprintf@prec+1)& (0+255),f,b
  7684                           
  7685                           ; BSR set to: 2
  7686                           ;doprnt.c: 918: val /= 10;
  7687  00096E  0060  FA50  F205   	movff	sprintf@val,___lldiv@dividend
  7688  000974  0060  FA54  F206   	movff	sprintf@val+1,___lldiv@dividend+1
  7689  00097A  0060  FA58  F207   	movff	sprintf@val+2,___lldiv@dividend+2
  7690  000980  0060  FA5C  F208   	movff	sprintf@val+3,___lldiv@dividend+3
  7691  000986  0E0A               	movlw	10
  7692  000988  6F09               	movwf	___lldiv@divisor& (0+255),b
  7693  00098A  0E00               	movlw	0
  7694  00098C  6F0A               	movwf	(___lldiv@divisor+1)& (0+255),b
  7695  00098E  0E00               	movlw	0
  7696  000990  6F0B               	movwf	(___lldiv@divisor+2)& (0+255),b
  7697  000992  0E00               	movlw	0
  7698  000994  6F0C               	movwf	(___lldiv@divisor+3)& (0+255),b
  7699  000996  ECD7  F039         	call	___lldiv	;wreg free
  7700  00099A  0060  F814  F294   	movff	?___lldiv,sprintf@val
  7701  0009A0  0060  F818  F295   	movff	?___lldiv+1,sprintf@val+1
  7702  0009A6  0060  F81C  F296   	movff	?___lldiv+2,sprintf@val+2
  7703  0009AC  0060  F820  F297   	movff	?___lldiv+3,sprintf@val+3
  7704  0009B2                     l1031:
  7705  0009B2  0102               	movlb	2	; () banked
  7706  0009B4  5194               	movf	sprintf@val& (0+255),w,b
  7707  0009B6  1195               	iorwf	(sprintf@val+1)& (0+255),w,b
  7708  0009B8  1196               	iorwf	(sprintf@val+2)& (0+255),w,b
  7709  0009BA  1197               	iorwf	(sprintf@val+3)& (0+255),w,b
  7710  0009BC  B4D8               	btfsc	16344,2,c
  7711  0009BE  D01D               	goto	u17160
  7712                           
  7713                           ; BSR set to: 2
  7714  0009C0  0060  FA50  F212   	movff	sprintf@val,___llmod@dividend
  7715  0009C6  0060  FA54  F213   	movff	sprintf@val+1,___llmod@dividend+1
  7716  0009CC  0060  FA58  F214   	movff	sprintf@val+2,___llmod@dividend+2
  7717  0009D2  0060  FA5C  F215   	movff	sprintf@val+3,___llmod@dividend+3
  7718  0009D8  0E0A               	movlw	10
  7719  0009DA  6F16               	movwf	___llmod@divisor& (0+255),b
  7720  0009DC  0E00               	movlw	0
  7721  0009DE  6F17               	movwf	(___llmod@divisor+1)& (0+255),b
  7722  0009E0  0E00               	movlw	0
  7723  0009E2  6F18               	movwf	(___llmod@divisor+2)& (0+255),b
  7724  0009E4  0E00               	movlw	0
  7725  0009E6  6F19               	movwf	(___llmod@divisor+3)& (0+255),b
  7726  0009E8  EC96  F03C         	call	___llmod	;wreg free
  7727  0009EC  0102               	movlb	2	; () banked
  7728  0009EE  5112               	movf	?___llmod& (0+255),w,b
  7729  0009F0  1113               	iorwf	(?___llmod+1)& (0+255),w,b
  7730  0009F2  1114               	iorwf	(?___llmod+2)& (0+255),w,b
  7731  0009F4  1115               	iorwf	(?___llmod+3)& (0+255),w,b
  7732  0009F6  B4D8               	btfsc	16344,2,c
  7733  0009F8  D7B6               	goto	l1032
  7734  0009FA                     u17160:
  7735                           
  7736                           ; BSR set to: 2
  7737                           ;doprnt.c: 919: }
  7738                           ;doprnt.c: 921: if(prec < c) {
  7739                           
  7740                           ; BSR set to: 2
  7741                           
  7742                           ; BSR set to: 2
  7743  0009FA  519C               	movf	(sprintf@prec+1)& (0+255),w,b
  7744  0009FC  0A80               	xorlw	128
  7745  0009FE  6F6D               	movwf	??_sprintf& (0+255),b
  7746  000A00  519D               	movf	sprintf@c& (0+255),w,b
  7747  000A02  5D9B               	subwf	sprintf@prec& (0+255),w,b
  7748  000A04  0E80               	movlw	128
  7749  000A06  BF9D               	btfsc	sprintf@c& (0+255),7,b
  7750  000A08  0E7F               	movlw	127
  7751  000A0A  596D               	subwfb	??_sprintf& (0+255),w,b
  7752  000A0C  B0D8               	btfsc	16344,0,c
  7753  000A0E  D025               	goto	l1036
  7754                           
  7755                           ; BSR set to: 2
  7756                           ;doprnt.c: 922: fval /= scale(c-prec);
  7757  000A10  0060  FA60  F22F   	movff	sprintf@fval,___ftdiv@f1
  7758  000A16  0060  FA64  F230   	movff	sprintf@fval+1,___ftdiv@f1+1
  7759  000A1C  0060  FA68  F231   	movff	sprintf@fval+2,___ftdiv@f1+2
  7760  000A22  519B               	movf	sprintf@prec& (0+255),w,b
  7761  000A24  0800               	sublw	0
  7762  000A26  259D               	addwf	sprintf@c& (0+255),w,b
  7763  000A28  EC0B  F01D         	call	_scale
  7764  000A2C  0060  F8A0  F232   	movff	?_scale,___ftdiv@f2
  7765  000A32  0060  F8A4  F233   	movff	?_scale+1,___ftdiv@f2+1
  7766  000A38  0060  F8A8  F234   	movff	?_scale+2,___ftdiv@f2+2
  7767  000A3E  ECE2  F032         	call	___ftdiv	;wreg free
  7768  000A42  0060  F8BC  F298   	movff	?___ftdiv,sprintf@fval
  7769  000A48  0060  F8C0  F299   	movff	?___ftdiv+1,sprintf@fval+1
  7770  000A4E  0060  F8C4  F29A   	movff	?___ftdiv+2,sprintf@fval+2
  7771                           
  7772                           ;doprnt.c: 923: c = prec;
  7773  000A54  0060  FA6C  F29D   	movff	sprintf@prec,sprintf@c
  7774  000A5A                     l1036:
  7775                           
  7776                           ;doprnt.c: 924: }
  7777                           ;doprnt.c: 926: }
  7778                           ;doprnt.c: 929: width -= prec + 5;
  7779  000A5A  0E05               	movlw	5
  7780  000A5C  0102               	movlb	2	; () banked
  7781  000A5E  259B               	addwf	sprintf@prec& (0+255),w,b
  7782  000A60  6F6D               	movwf	??_sprintf& (0+255),b
  7783  000A62  0E00               	movlw	0
  7784  000A64  219C               	addwfc	(sprintf@prec+1)& (0+255),w,b
  7785  000A66  6F6E               	movwf	(??_sprintf+1)& (0+255),b
  7786  000A68  516D               	movf	??_sprintf& (0+255),w,b
  7787  000A6A  5F92               	subwf	sprintf@width& (0+255),f,b
  7788  000A6C  516E               	movf	(??_sprintf+1)& (0+255),w,b
  7789  000A6E  5B93               	subwfb	(sprintf@width+1)& (0+255),f,b
  7790                           
  7791                           ; BSR set to: 2
  7792                           ;doprnt.c: 931: if(prec || flag & 0x800)
  7793  000A70  519B               	movf	sprintf@prec& (0+255),w,b
  7794  000A72  119C               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7795  000A74  A4D8               	btfss	16344,2,c
  7796  000A76  D002               	goto	u17190
  7797                           
  7798                           ; BSR set to: 2
  7799  000A78  A79F               	btfss	(sprintf@flag+1)& (0+255),3,b
  7800  000A7A  D003               	goto	l1037
  7801  000A7C                     u17190:
  7802                           
  7803                           ; BSR set to: 2
  7804                           ;doprnt.c: 932: width--;
  7805                           
  7806                           ; BSR set to: 2
  7807  000A7C  0792               	decf	sprintf@width& (0+255),f,b
  7808  000A7E  A0D8               	btfss	16344,0,c
  7809  000A80  0793               	decf	(sprintf@width+1)& (0+255),f,b
  7810  000A82                     l1037:
  7811                           
  7812                           ; BSR set to: 2
  7813                           ;doprnt.c: 934: if(flag & 0x03)
  7814                           
  7815                           ; BSR set to: 2
  7816  000A82  0E03               	movlw	3
  7817  000A84  159E               	andwf	sprintf@flag& (0+255),w,b
  7818  000A86  6F6D               	movwf	??_sprintf& (0+255),b
  7819  000A88  0E00               	movlw	0
  7820  000A8A  159F               	andwf	(sprintf@flag+1)& (0+255),w,b
  7821  000A8C  6F6E               	movwf	(??_sprintf+1)& (0+255),b
  7822  000A8E  516D               	movf	??_sprintf& (0+255),w,b
  7823  000A90  116E               	iorwf	(??_sprintf+1)& (0+255),w,b
  7824  000A92  B4D8               	btfsc	16344,2,c
  7825  000A94  D003               	goto	l1040
  7826                           
  7827                           ; BSR set to: 2
  7828                           ;doprnt.c: 935: width--;
  7829  000A96  0792               	decf	sprintf@width& (0+255),f,b
  7830  000A98  A0D8               	btfss	16344,0,c
  7831  000A9A  0793               	decf	(sprintf@width+1)& (0+255),f,b
  7832  000A9C                     l1040:
  7833                           
  7834                           ; BSR set to: 2
  7835                           ;doprnt.c: 946: if(flag & 0x04) {
  7836                           
  7837                           ; BSR set to: 2
  7838  000A9C  A59E               	btfss	sprintf@flag& (0+255),2,b
  7839  000A9E  D038               	goto	l1041
  7840                           
  7841                           ; BSR set to: 2
  7842                           ;doprnt.c: 948: if(flag & 0x02)
  7843  000AA0  A39E               	btfss	sprintf@flag& (0+255),1,b
  7844  000AA2  D014               	goto	l1042
  7845                           
  7846                           ; BSR set to: 2
  7847                           ;doprnt.c: 949: ((*sp++ = (flag & 0x01 ? '-' : '+')));
  7848  000AA4  B19E               	btfsc	sprintf@flag& (0+255),0,b
  7849  000AA6  D004               	goto	l1044
  7850                           
  7851                           ; BSR set to: 2
  7852  000AA8  0E00               	movlw	0
  7853  000AAA  6F78               	movwf	(_sprintf$2169+1)& (0+255),b
  7854  000AAC  0E2B               	movlw	43
  7855  000AAE  D003               	goto	L5
  7856  000AB0                     l1044:
  7857                           
  7858                           ; BSR set to: 2
  7859                           
  7860                           ; BSR set to: 2
  7861  000AB0  0E00               	movlw	0
  7862  000AB2  6F78               	movwf	(_sprintf$2169+1)& (0+255),b
  7863  000AB4  0E2D               	movlw	45
  7864  000AB6                     L5:
  7865  000AB6  6F77               	movwf	_sprintf$2169& (0+255),b
  7866                           
  7867                           ; BSR set to: 2
  7868                           
  7869                           ; BSR set to: 2
  7870  000AB8  0060  F98B  FFD9   	movff	sprintf@sp,16345
  7871  000ABE  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  7872  000AC4  0060  F9DF  FFDF   	movff	_sprintf$2169,16351
  7873  000ACA  D00A               	goto	l12725
  7874  000ACC                     l1042:
  7875                           
  7876                           ; BSR set to: 2
  7877                           ;doprnt.c: 950: else if(flag & 0x01)
  7878  000ACC  A19E               	btfss	sprintf@flag& (0+255),0,b
  7879  000ACE  D018               	goto	l1049
  7880                           
  7881                           ; BSR set to: 2
  7882                           ;doprnt.c: 951: ((*sp++ = (' ')));
  7883  000AD0  0060  F98B  FFD9   	movff	sprintf@sp,16345
  7884  000AD6  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  7885  000ADC  0E20               	movlw	32
  7886  000ADE  6EDF               	movwf	16351,c
  7887  000AE0                     l12725:
  7888                           
  7889                           ; BSR set to: 2
  7890  000AE0  4B62               	infsnz	sprintf@sp& (0+255),f,b
  7891  000AE2  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  7892                           
  7893                           ; BSR set to: 2
  7894                           ;doprnt.c: 953: while(width > 0) {
  7895                           
  7896                           ; BSR set to: 2
  7897  000AE4  D00D               	goto	l1049
  7898  000AE6                     l12727:
  7899                           
  7900                           ; BSR set to: 2
  7901                           ;doprnt.c: 954: ((*sp++ = ('0')));
  7902  000AE6  0060  F98B  FFD9   	movff	sprintf@sp,16345
  7903  000AEC  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  7904  000AF2  0E30               	movlw	48
  7905  000AF4  6EDF               	movwf	16351,c
  7906                           
  7907                           ; BSR set to: 2
  7908  000AF6  4B62               	infsnz	sprintf@sp& (0+255),f,b
  7909  000AF8  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  7910                           
  7911                           ; BSR set to: 2
  7912                           ;doprnt.c: 955: width--;
  7913  000AFA  0792               	decf	sprintf@width& (0+255),f,b
  7914  000AFC  A0D8               	btfss	16344,0,c
  7915  000AFE  0793               	decf	(sprintf@width+1)& (0+255),f,b
  7916  000B00                     l1049:
  7917                           
  7918                           ; BSR set to: 2
  7919                           
  7920                           ; BSR set to: 2
  7921  000B00  BF93               	btfsc	(sprintf@width+1)& (0+255),7,b
  7922  000B02  D03F               	goto	l1063
  7923  000B04  5193               	movf	(sprintf@width+1)& (0+255),w,b
  7924  000B06  E1EF               	bnz	l12727
  7925  000B08  0592               	decf	sprintf@width& (0+255),w,b
  7926  000B0A  A0D8               	btfss	16344,0,c
  7927  000B0C  D03A               	goto	l1063
  7928  000B0E  D7EB               	goto	l1050
  7929  000B10                     l1041:
  7930                           
  7931                           ; BSR set to: 2
  7932                           ;doprnt.c: 959: {
  7933                           ;doprnt.c: 962: if(!(flag & 0x08))
  7934  000B10  A79E               	btfss	sprintf@flag& (0+255),3,b
  7935  000B12  D00E               	goto	l1054
  7936  000B14  D014               	goto	u17270
  7937  000B16                     l12737:
  7938                           
  7939                           ; BSR set to: 2
  7940                           ;doprnt.c: 965: ((*sp++ = (' ')));
  7941  000B16  0060  F98B  FFD9   	movff	sprintf@sp,16345
  7942  000B1C  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  7943  000B22  0E20               	movlw	32
  7944  000B24  6EDF               	movwf	16351,c
  7945                           
  7946                           ; BSR set to: 2
  7947  000B26  4B62               	infsnz	sprintf@sp& (0+255),f,b
  7948  000B28  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  7949                           
  7950                           ; BSR set to: 2
  7951                           ;doprnt.c: 966: width--;
  7952  000B2A  0792               	decf	sprintf@width& (0+255),f,b
  7953  000B2C  A0D8               	btfss	16344,0,c
  7954  000B2E  0793               	decf	(sprintf@width+1)& (0+255),f,b
  7955  000B30                     l1054:
  7956                           
  7957                           ; BSR set to: 2
  7958                           
  7959                           ; BSR set to: 2
  7960  000B30  BF93               	btfsc	(sprintf@width+1)& (0+255),7,b
  7961  000B32  D005               	goto	u17270
  7962  000B34  5193               	movf	(sprintf@width+1)& (0+255),w,b
  7963  000B36  E1EF               	bnz	l12737
  7964  000B38  0592               	decf	sprintf@width& (0+255),w,b
  7965  000B3A  B0D8               	btfsc	16344,0,c
  7966  000B3C  D7EC               	goto	l1055
  7967  000B3E                     u17270:
  7968                           
  7969                           ; BSR set to: 2
  7970                           ;doprnt.c: 967: }
  7971                           ;doprnt.c: 970: if(flag & 0x02)
  7972                           
  7973                           ; BSR set to: 2
  7974  000B3E  A39E               	btfss	sprintf@flag& (0+255),1,b
  7975  000B40  D014               	goto	l1057
  7976                           
  7977                           ; BSR set to: 2
  7978                           ;doprnt.c: 971: ((*sp++ = (flag & 0x01 ? '-' : '+')));
  7979  000B42  B19E               	btfsc	sprintf@flag& (0+255),0,b
  7980  000B44  D004               	goto	l1059
  7981                           
  7982                           ; BSR set to: 2
  7983  000B46  0E00               	movlw	0
  7984  000B48  6F7A               	movwf	(_sprintf$2170+1)& (0+255),b
  7985  000B4A  0E2B               	movlw	43
  7986  000B4C  D003               	goto	L6
  7987  000B4E                     l1059:
  7988                           
  7989                           ; BSR set to: 2
  7990                           
  7991                           ; BSR set to: 2
  7992  000B4E  0E00               	movlw	0
  7993  000B50  6F7A               	movwf	(_sprintf$2170+1)& (0+255),b
  7994  000B52  0E2D               	movlw	45
  7995  000B54                     L6:
  7996  000B54  6F79               	movwf	_sprintf$2170& (0+255),b
  7997                           
  7998                           ; BSR set to: 2
  7999                           
  8000                           ; BSR set to: 2
  8001  000B56  0060  F98B  FFD9   	movff	sprintf@sp,16345
  8002  000B5C  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  8003  000B62  0060  F9E7  FFDF   	movff	_sprintf$2170,16351
  8004  000B68  D00A               	goto	l12757
  8005  000B6A                     l1057:
  8006                           
  8007                           ; BSR set to: 2
  8008                           ;doprnt.c: 977: else if(flag & 0x01)
  8009  000B6A  A19E               	btfss	sprintf@flag& (0+255),0,b
  8010  000B6C  D00A               	goto	l1063
  8011                           
  8012                           ; BSR set to: 2
  8013                           ;doprnt.c: 978: ((*sp++ = (' ')));
  8014  000B6E  0060  F98B  FFD9   	movff	sprintf@sp,16345
  8015  000B74  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  8016  000B7A  0E20               	movlw	32
  8017  000B7C  6EDF               	movwf	16351,c
  8018  000B7E                     l12757:
  8019                           
  8020                           ; BSR set to: 2
  8021  000B7E  4B62               	infsnz	sprintf@sp& (0+255),f,b
  8022  000B80  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  8023  000B82                     l1063:
  8024                           
  8025                           ; BSR set to: 2
  8026                           ;doprnt.c: 980: }
  8027                           ;doprnt.c: 985: val = (unsigned long)fval;
  8028                           
  8029                           ; BSR set to: 2
  8030                           
  8031                           ; BSR set to: 2
  8032                           
  8033                           ; BSR set to: 2
  8034  000B82  0060  FA60  F23E   	movff	sprintf@fval,___fttol@f1
  8035  000B88  0060  FA64  F23F   	movff	sprintf@fval+1,___fttol@f1+1
  8036  000B8E  0060  FA68  F240   	movff	sprintf@fval+2,___fttol@f1+2
  8037  000B94  EC5B  F031         	call	___fttol	;wreg free
  8038  000B98  0060  F8F8  F294   	movff	?___fttol,sprintf@val
  8039  000B9E  0060  F8FC  F295   	movff	?___fttol+1,sprintf@val+1
  8040  000BA4  0060  F900  F296   	movff	?___fttol+2,sprintf@val+2
  8041  000BAA  0060  F904  F297   	movff	?___fttol+3,sprintf@val+3
  8042                           
  8043                           ;doprnt.c: 986: ((*sp++ = (val/dpowers[c] + '0')));
  8044  000BB0  0060  FA50  F205   	movff	sprintf@val,___lldiv@dividend
  8045  000BB6  0060  FA54  F206   	movff	sprintf@val+1,___lldiv@dividend+1
  8046  000BBC  0060  FA58  F207   	movff	sprintf@val+2,___lldiv@dividend+2
  8047  000BC2  0060  FA5C  F208   	movff	sprintf@val+3,___lldiv@dividend+3
  8048  000BC8  0102               	movlb	2	; () banked
  8049  000BCA  519D               	movf	sprintf@c& (0+255),w,b
  8050  000BCC  0D04               	mullw	4
  8051  000BCE  0EBF               	movlw	low _dpowers
  8052  000BD0  24F3               	addwf	16371,w,c
  8053  000BD2  6EF6               	movwf	16374,c
  8054  000BD4  0EFA               	movlw	high _dpowers
  8055  000BD6  20F4               	addwfc	16372,w,c
  8056  000BD8  6EF7               	movwf	16375,c
  8057  000BDA                     	if	1	;There are 3 active tblptr bytes
  8058  000BDA  6AF8               	clrf	16376,c
  8059  000BDC  0E00               	movlw	low (__mediumconst shr (0+16))
  8060  000BDE  22F8               	addwfc	16376,f,c
  8061  000BE0                     	endif
  8062  000BE0  0009               	tblrd		*+
  8063  000BE2  006F FFD4  F209    	movff	16373,___lldiv@divisor
  8064  000BE8  0009               	tblrd		*+
  8065  000BEA  006F FFD4  F20A    	movff	16373,___lldiv@divisor+1
  8066  000BF0  0009               	tblrd		*+
  8067  000BF2  006F FFD4  F20B    	movff	16373,___lldiv@divisor+2
  8068  000BF8  000A               	tblrd		*-
  8069  000BFA  006F FFD4  F20C    	movff	16373,___lldiv@divisor+3
  8070  000C00  ECD7  F039         	call	___lldiv	;wreg free
  8071  000C04  0102               	movlb	2	; () banked
  8072  000C06  5105               	movf	?___lldiv& (0+255),w,b
  8073  000C08  0F30               	addlw	48
  8074  000C0A  0060  F98B  FFD9   	movff	sprintf@sp,16345
  8075  000C10  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  8076  000C16  6EDF               	movwf	16351,c
  8077                           
  8078                           ; BSR set to: 2
  8079  000C18  4B62               	infsnz	sprintf@sp& (0+255),f,b
  8080  000C1A  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  8081                           
  8082                           ; BSR set to: 2
  8083                           ;doprnt.c: 987: val %= dpowers[c];
  8084  000C1C  0060  FA50  F212   	movff	sprintf@val,___llmod@dividend
  8085  000C22  0060  FA54  F213   	movff	sprintf@val+1,___llmod@dividend+1
  8086  000C28  0060  FA58  F214   	movff	sprintf@val+2,___llmod@dividend+2
  8087  000C2E  0060  FA5C  F215   	movff	sprintf@val+3,___llmod@dividend+3
  8088  000C34  519D               	movf	sprintf@c& (0+255),w,b
  8089  000C36  0D04               	mullw	4
  8090  000C38  0EBF               	movlw	low _dpowers
  8091  000C3A  24F3               	addwf	16371,w,c
  8092  000C3C  6EF6               	movwf	16374,c
  8093  000C3E  0EFA               	movlw	high _dpowers
  8094  000C40  20F4               	addwfc	16372,w,c
  8095  000C42  6EF7               	movwf	16375,c
  8096  000C44                     	if	1	;There are 3 active tblptr bytes
  8097  000C44  6AF8               	clrf	16376,c
  8098  000C46  0E00               	movlw	low (__mediumconst shr (0+16))
  8099  000C48  22F8               	addwfc	16376,f,c
  8100  000C4A                     	endif
  8101  000C4A  0009               	tblrd		*+
  8102  000C4C  006F FFD4  F216    	movff	16373,___llmod@divisor
  8103  000C52  0009               	tblrd		*+
  8104  000C54  006F FFD4  F217    	movff	16373,___llmod@divisor+1
  8105  000C5A  0009               	tblrd		*+
  8106  000C5C  006F FFD4  F218    	movff	16373,___llmod@divisor+2
  8107  000C62  000A               	tblrd		*-
  8108  000C64  006F FFD4  F219    	movff	16373,___llmod@divisor+3
  8109  000C6A  EC96  F03C         	call	___llmod	;wreg free
  8110  000C6E  0060  F848  F294   	movff	?___llmod,sprintf@val
  8111  000C74  0060  F84C  F295   	movff	?___llmod+1,sprintf@val+1
  8112  000C7A  0060  F850  F296   	movff	?___llmod+2,sprintf@val+2
  8113  000C80  0060  F854  F297   	movff	?___llmod+3,sprintf@val+3
  8114                           
  8115                           ;doprnt.c: 990: if(prec || flag & 0x800)
  8116  000C86  0102               	movlb	2	; () banked
  8117  000C88  519B               	movf	sprintf@prec& (0+255),w,b
  8118  000C8A  119C               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8119  000C8C  A4D8               	btfss	16344,2,c
  8120  000C8E  D002               	goto	u17320
  8121                           
  8122                           ; BSR set to: 2
  8123  000C90  A79F               	btfss	(sprintf@flag+1)& (0+255),3,b
  8124  000C92  D0A2               	goto	u17360
  8125  000C94                     u17320:
  8126                           
  8127                           ; BSR set to: 2
  8128                           ;doprnt.c: 994: {
  8129                           ;doprnt.c: 995: ((*sp++ = ('.')));
  8130                           
  8131                           ; BSR set to: 2
  8132  000C94  0060  F98B  FFD9   	movff	sprintf@sp,16345
  8133  000C9A  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  8134  000CA0  0E2E               	movlw	46
  8135  000CA2  6EDF               	movwf	16351,c
  8136                           
  8137                           ; BSR set to: 2
  8138  000CA4  4B62               	infsnz	sprintf@sp& (0+255),f,b
  8139  000CA6  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  8140                           
  8141                           ; BSR set to: 2
  8142                           ;doprnt.c: 996: prec -= c;
  8143  000CA8  519D               	movf	sprintf@c& (0+255),w,b
  8144  000CAA  5F9B               	subwf	sprintf@prec& (0+255),f,b
  8145  000CAC  0E00               	movlw	0
  8146  000CAE  BF9D               	btfsc	sprintf@c& (0+255),7,b
  8147  000CB0  0EFF               	movlw	255
  8148  000CB2  5B9C               	subwfb	(sprintf@prec+1)& (0+255),f,b
  8149                           
  8150                           ;doprnt.c: 997: while(c--) {
  8151  000CB4  D07A               	goto	l1067
  8152  000CB6                     l1068:
  8153                           
  8154                           ; BSR set to: 2
  8155                           ;doprnt.c: 1002: if(flag & 0x200 && val == 0) {
  8156  000CB6  A39F               	btfss	(sprintf@flag+1)& (0+255),1,b
  8157  000CB8  D00E               	goto	l1069
  8158                           
  8159                           ; BSR set to: 2
  8160  000CBA  5194               	movf	sprintf@val& (0+255),w,b
  8161  000CBC  1195               	iorwf	(sprintf@val+1)& (0+255),w,b
  8162  000CBE  1196               	iorwf	(sprintf@val+2)& (0+255),w,b
  8163  000CC0  1197               	iorwf	(sprintf@val+3)& (0+255),w,b
  8164  000CC2  A4D8               	btfss	16344,2,c
  8165  000CC4  D008               	goto	l1069
  8166                           
  8167                           ; BSR set to: 2
  8168                           ;doprnt.c: 1003: prec = c = 0;
  8169  000CC6  0E00               	movlw	0
  8170  000CC8  6F9D               	movwf	sprintf@c& (0+255),b
  8171  000CCA  519D               	movf	sprintf@c& (0+255),w,b
  8172  000CCC  6F9B               	movwf	sprintf@prec& (0+255),b
  8173  000CCE  6B9C               	clrf	(sprintf@prec+1)& (0+255),b
  8174  000CD0  BF9B               	btfsc	sprintf@prec& (0+255),7,b
  8175  000CD2  079C               	decf	(sprintf@prec+1)& (0+255),f,b
  8176                           
  8177                           ;doprnt.c: 1004: break;
  8178  000CD4  D07D               	goto	l1071
  8179  000CD6                     l1069:
  8180                           
  8181                           ; BSR set to: 2
  8182                           ;doprnt.c: 1005: }
  8183                           ;doprnt.c: 1007: ((*sp++ = ('0' + (val/dpowers[c]))));
  8184                           
  8185                           ; BSR set to: 2
  8186  000CD6  0060  FA50  F205   	movff	sprintf@val,___lldiv@dividend
  8187  000CDC  0060  FA54  F206   	movff	sprintf@val+1,___lldiv@dividend+1
  8188  000CE2  0060  FA58  F207   	movff	sprintf@val+2,___lldiv@dividend+2
  8189  000CE8  0060  FA5C  F208   	movff	sprintf@val+3,___lldiv@dividend+3
  8190  000CEE  519D               	movf	sprintf@c& (0+255),w,b
  8191  000CF0  0D04               	mullw	4
  8192  000CF2  0EBF               	movlw	low _dpowers
  8193  000CF4  24F3               	addwf	16371,w,c
  8194  000CF6  6EF6               	movwf	16374,c
  8195  000CF8  0EFA               	movlw	high _dpowers
  8196  000CFA  20F4               	addwfc	16372,w,c
  8197  000CFC  6EF7               	movwf	16375,c
  8198  000CFE                     	if	1	;There are 3 active tblptr bytes
  8199  000CFE  6AF8               	clrf	16376,c
  8200  000D00  0E00               	movlw	low (__mediumconst shr (0+16))
  8201  000D02  22F8               	addwfc	16376,f,c
  8202  000D04                     	endif
  8203  000D04  0009               	tblrd		*+
  8204  000D06  006F FFD4  F209    	movff	16373,___lldiv@divisor
  8205  000D0C  0009               	tblrd		*+
  8206  000D0E  006F FFD4  F20A    	movff	16373,___lldiv@divisor+1
  8207  000D14  0009               	tblrd		*+
  8208  000D16  006F FFD4  F20B    	movff	16373,___lldiv@divisor+2
  8209  000D1C  000A               	tblrd		*-
  8210  000D1E  006F FFD4  F20C    	movff	16373,___lldiv@divisor+3
  8211  000D24  ECD7  F039         	call	___lldiv	;wreg free
  8212  000D28  0102               	movlb	2	; () banked
  8213  000D2A  5105               	movf	?___lldiv& (0+255),w,b
  8214  000D2C  0F30               	addlw	48
  8215  000D2E  0060  F98B  FFD9   	movff	sprintf@sp,16345
  8216  000D34  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  8217  000D3A  6EDF               	movwf	16351,c
  8218                           
  8219                           ; BSR set to: 2
  8220  000D3C  4B62               	infsnz	sprintf@sp& (0+255),f,b
  8221  000D3E  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  8222                           
  8223                           ; BSR set to: 2
  8224                           ;doprnt.c: 1008: val %= dpowers[c];
  8225  000D40  0060  FA50  F212   	movff	sprintf@val,___llmod@dividend
  8226  000D46  0060  FA54  F213   	movff	sprintf@val+1,___llmod@dividend+1
  8227  000D4C  0060  FA58  F214   	movff	sprintf@val+2,___llmod@dividend+2
  8228  000D52  0060  FA5C  F215   	movff	sprintf@val+3,___llmod@dividend+3
  8229  000D58  519D               	movf	sprintf@c& (0+255),w,b
  8230  000D5A  0D04               	mullw	4
  8231  000D5C  0EBF               	movlw	low _dpowers
  8232  000D5E  24F3               	addwf	16371,w,c
  8233  000D60  6EF6               	movwf	16374,c
  8234  000D62  0EFA               	movlw	high _dpowers
  8235  000D64  20F4               	addwfc	16372,w,c
  8236  000D66  6EF7               	movwf	16375,c
  8237  000D68                     	if	1	;There are 3 active tblptr bytes
  8238  000D68  6AF8               	clrf	16376,c
  8239  000D6A  0E00               	movlw	low (__mediumconst shr (0+16))
  8240  000D6C  22F8               	addwfc	16376,f,c
  8241  000D6E                     	endif
  8242  000D6E  0009               	tblrd		*+
  8243  000D70  006F FFD4  F216    	movff	16373,___llmod@divisor
  8244  000D76  0009               	tblrd		*+
  8245  000D78  006F FFD4  F217    	movff	16373,___llmod@divisor+1
  8246  000D7E  0009               	tblrd		*+
  8247  000D80  006F FFD4  F218    	movff	16373,___llmod@divisor+2
  8248  000D86  000A               	tblrd		*-
  8249  000D88  006F FFD4  F219    	movff	16373,___llmod@divisor+3
  8250  000D8E  EC96  F03C         	call	___llmod	;wreg free
  8251  000D92  0060  F848  F294   	movff	?___llmod,sprintf@val
  8252  000D98  0060  F84C  F295   	movff	?___llmod+1,sprintf@val+1
  8253  000D9E  0060  F850  F296   	movff	?___llmod+2,sprintf@val+2
  8254  000DA4  0060  F854  F297   	movff	?___llmod+3,sprintf@val+3
  8255  000DAA                     l1067:
  8256  000DAA  0102               	movlb	2	; () banked
  8257  000DAC  079D               	decf	sprintf@c& (0+255),f,b
  8258  000DAE  299D               	incf	sprintf@c& (0+255),w,b
  8259  000DB0  B4D8               	btfsc	16344,2,c
  8260  000DB2  D00E               	goto	l1071
  8261  000DB4  D780               	goto	l1068
  8262  000DB6                     
  8263                           ; BSR set to: 2
  8264                           ;doprnt.c: 1012: ((*sp++ = ('0')));
  8265                           
  8266                           ; BSR set to: 2
  8267  000DB6  0060  F98B  FFD9   	movff	sprintf@sp,16345
  8268  000DBC  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  8269  000DC2  0E30               	movlw	48
  8270  000DC4  6EDF               	movwf	16351,c
  8271                           
  8272                           ; BSR set to: 2
  8273  000DC6  4B62               	infsnz	sprintf@sp& (0+255),f,b
  8274  000DC8  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  8275                           
  8276                           ; BSR set to: 2
  8277                           ;doprnt.c: 1013: prec--;
  8278  000DCA  079B               	decf	sprintf@prec& (0+255),f,b
  8279  000DCC  A0D8               	btfss	16344,0,c
  8280  000DCE  079C               	decf	(sprintf@prec+1)& (0+255),f,b
  8281  000DD0                     l1071:
  8282                           
  8283                           ; BSR set to: 2
  8284                           
  8285                           ; BSR set to: 2
  8286  000DD0  519B               	movf	sprintf@prec& (0+255),w,b
  8287  000DD2  119C               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8288  000DD4  A4D8               	btfss	16344,2,c
  8289  000DD6  D7EF               	goto	l1072
  8290  000DD8                     u17360:
  8291                           
  8292                           ; BSR set to: 2
  8293                           ;doprnt.c: 1014: }
  8294                           ;doprnt.c: 1015: }
  8295                           ;doprnt.c: 1017: if(flag & 0x20)
  8296                           
  8297                           ; BSR set to: 2
  8298  000DD8  AB9E               	btfss	sprintf@flag& (0+255),5,b
  8299  000DDA  D008               	goto	l1074
  8300                           
  8301                           ; BSR set to: 2
  8302                           ;doprnt.c: 1018: ((*sp++ = ('E')));
  8303  000DDC  0060  F98B  FFD9   	movff	sprintf@sp,16345
  8304  000DE2  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  8305  000DE8  0E45               	movlw	69
  8306  000DEA  D007               	goto	L7
  8307  000DEC                     l1074:
  8308                           
  8309                           ; BSR set to: 2
  8310                           ;doprnt.c: 1019: else
  8311                           ;doprnt.c: 1021: ((*sp++ = ('e')));
  8312                           
  8313                           ; BSR set to: 2
  8314  000DEC  0060  F98B  FFD9   	movff	sprintf@sp,16345
  8315  000DF2  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  8316  000DF8  0E65               	movlw	101
  8317  000DFA                     L7:
  8318  000DFA  6EDF               	movwf	16351,c
  8319                           
  8320                           ; BSR set to: 2
  8321  000DFC  4B62               	infsnz	sprintf@sp& (0+255),f,b
  8322  000DFE  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  8323                           
  8324                           ; BSR set to: 2
  8325                           ;doprnt.c: 1022: if(exp < 0) {
  8326                           
  8327                           ; BSR set to: 2
  8328  000E00  AF91               	btfss	(sprintf@exp+1)& (0+255),7,b
  8329  000E02  D00C               	goto	l1076
  8330                           
  8331                           ; BSR set to: 2
  8332                           ;doprnt.c: 1023: exp = -exp;
  8333  000E04  6D90               	negf	sprintf@exp& (0+255),b
  8334  000E06  1F91               	comf	(sprintf@exp+1)& (0+255),f,b
  8335  000E08  B0D8               	btfsc	16344,0,c
  8336  000E0A  2B91               	incf	(sprintf@exp+1)& (0+255),f,b
  8337                           
  8338                           ; BSR set to: 2
  8339                           ;doprnt.c: 1024: ((*sp++ = ('-')));
  8340  000E0C  0060  F98B  FFD9   	movff	sprintf@sp,16345
  8341  000E12  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  8342  000E18  0E2D               	movlw	45
  8343  000E1A  D007               	goto	L8
  8344  000E1C                     l1076:
  8345                           
  8346                           ; BSR set to: 2
  8347                           ;doprnt.c: 1026: ((*sp++ = ('+')));
  8348                           
  8349                           ; BSR set to: 2
  8350  000E1C  0060  F98B  FFD9   	movff	sprintf@sp,16345
  8351  000E22  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  8352  000E28  0E2B               	movlw	43
  8353  000E2A                     L8:
  8354  000E2A  6EDF               	movwf	16351,c
  8355                           
  8356                           ; BSR set to: 2
  8357  000E2C  4B62               	infsnz	sprintf@sp& (0+255),f,b
  8358  000E2E  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  8359                           
  8360                           ; BSR set to: 2
  8361                           ;doprnt.c: 1039: ((*sp++ = (exp / 10 + '0')));
  8362                           
  8363                           ; BSR set to: 2
  8364  000E30  0060  FA40  F20B   	movff	sprintf@exp,___awdiv@dividend
  8365  000E36  0060  FA44  F20C   	movff	sprintf@exp+1,___awdiv@dividend+1
  8366  000E3C  0E00               	movlw	0
  8367  000E3E  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
  8368  000E40  0E0A               	movlw	10
  8369  000E42  6F0D               	movwf	___awdiv@divisor& (0+255),b
  8370  000E44  EC62  F03A         	call	___awdiv	;wreg free
  8371  000E48  0102               	movlb	2	; () banked
  8372  000E4A  510B               	movf	?___awdiv& (0+255),w,b
  8373  000E4C  0F30               	addlw	48
  8374  000E4E  0060  F98B  FFD9   	movff	sprintf@sp,16345
  8375  000E54  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  8376  000E5A  6EDF               	movwf	16351,c
  8377                           
  8378                           ; BSR set to: 2
  8379  000E5C  4B62               	infsnz	sprintf@sp& (0+255),f,b
  8380  000E5E  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  8381                           
  8382                           ; BSR set to: 2
  8383                           ;doprnt.c: 1040: ((*sp++ = (exp % 10 + '0')));
  8384  000E60  0060  FA40  F205   	movff	sprintf@exp,___awmod@dividend
  8385  000E66  0060  FA44  F206   	movff	sprintf@exp+1,___awmod@dividend+1
  8386  000E6C  0E00               	movlw	0
  8387  000E6E  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
  8388  000E70  0E0A               	movlw	10
  8389  000E72  6F07               	movwf	___awmod@divisor& (0+255),b
  8390  000E74  ECAD  F03B         	call	___awmod	;wreg free
  8391  000E78  0102               	movlb	2	; () banked
  8392  000E7A  5105               	movf	?___awmod& (0+255),w,b
  8393  000E7C  0F30               	addlw	48
  8394  000E7E  0060  F98B  FFD9   	movff	sprintf@sp,16345
  8395  000E84  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  8396  000E8A  6EDF               	movwf	16351,c
  8397                           
  8398                           ; BSR set to: 2
  8399  000E8C  4B62               	infsnz	sprintf@sp& (0+255),f,b
  8400  000E8E  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  8401                           
  8402                           ; BSR set to: 2
  8403                           ;doprnt.c: 1042: if((flag & 0x08) && width > 0)
  8404  000E90  B79E               	btfsc	sprintf@flag& (0+255),3,b
  8405                           
  8406                           ; BSR set to: 2
  8407  000E92  BF93               	btfsc	(sprintf@width+1)& (0+255),7,b
  8408  000E94  EF9B  F00E         	goto	u18200
  8409  000E98  5193               	movf	(sprintf@width+1)& (0+255),w,b
  8410  000E9A  E104               	bnz	l12829
  8411  000E9C  0592               	decf	sprintf@width& (0+255),w,b
  8412  000E9E  A0D8               	btfss	16344,0,c
  8413  000EA0  EF9B  F00E         	goto	u18200
  8414  000EA4                     u17400:
  8415  000EA4                     l12829:
  8416                           
  8417                           ; BSR set to: 2
  8418                           ;doprnt.c: 1044: ((*sp++ = (' ')));
  8419  000EA4  0060  F98B  FFD9   	movff	sprintf@sp,16345
  8420  000EAA  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  8421  000EB0  0E20               	movlw	32
  8422  000EB2  6EDF               	movwf	16351,c
  8423                           
  8424                           ; BSR set to: 2
  8425  000EB4  4B62               	infsnz	sprintf@sp& (0+255),f,b
  8426  000EB6  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  8427                           
  8428                           ; BSR set to: 2
  8429                           ;doprnt.c: 1045: while(--width);
  8430  000EB8  0792               	decf	sprintf@width& (0+255),f,b
  8431  000EBA  A0D8               	btfss	16344,0,c
  8432  000EBC  0793               	decf	(sprintf@width+1)& (0+255),f,b
  8433  000EBE  5192               	movf	sprintf@width& (0+255),w,b
  8434  000EC0  1193               	iorwf	(sprintf@width+1)& (0+255),w,b
  8435  000EC2  B4D8               	btfsc	16344,2,c
  8436  000EC4  EF9B  F00E         	goto	u18200
  8437  000EC8  D7ED               	goto	u17400
  8438  000ECA                     l1016:
  8439                           
  8440                           ; BSR set to: 2
  8441                           ;doprnt.c: 1048: }
  8442                           ;doprnt.c: 1087: if(flag & 0x200) {
  8443  000ECA  A39F               	btfss	(sprintf@flag+1)& (0+255),1,b
  8444  000ECC  D12C               	goto	l1081
  8445                           
  8446                           ; BSR set to: 2
  8447                           ;doprnt.c: 1088: if(exp < 0)
  8448  000ECE  AF91               	btfss	(sprintf@exp+1)& (0+255),7,b
  8449  000ED0  D00A               	goto	l1082
  8450                           
  8451                           ; BSR set to: 2
  8452                           ;doprnt.c: 1089: prec -= (exp+1);
  8453  000ED2  0E01               	movlw	1
  8454  000ED4  2590               	addwf	sprintf@exp& (0+255),w,b
  8455  000ED6  6F6D               	movwf	??_sprintf& (0+255),b
  8456  000ED8  0E00               	movlw	0
  8457  000EDA  2191               	addwfc	(sprintf@exp+1)& (0+255),w,b
  8458  000EDC  6F6E               	movwf	(??_sprintf+1)& (0+255),b
  8459  000EDE  516D               	movf	??_sprintf& (0+255),w,b
  8460  000EE0  5F9B               	subwf	sprintf@prec& (0+255),f,b
  8461  000EE2  516E               	movf	(??_sprintf+1)& (0+255),w,b
  8462  000EE4  5B9C               	subwfb	(sprintf@prec+1)& (0+255),f,b
  8463  000EE6                     l1082:
  8464                           
  8465                           ; BSR set to: 2
  8466                           ;doprnt.c: 1091: val = (unsigned long)fval;
  8467                           
  8468                           ; BSR set to: 2
  8469  000EE6  0060  FA60  F23E   	movff	sprintf@fval,___fttol@f1
  8470  000EEC  0060  FA64  F23F   	movff	sprintf@fval+1,___fttol@f1+1
  8471  000EF2  0060  FA68  F240   	movff	sprintf@fval+2,___fttol@f1+2
  8472  000EF8  EC5B  F031         	call	___fttol	;wreg free
  8473  000EFC  0060  F8F8  F294   	movff	?___fttol,sprintf@val
  8474  000F02  0060  F8FC  F295   	movff	?___fttol+1,sprintf@val+1
  8475  000F08  0060  F900  F296   	movff	?___fttol+2,sprintf@val+2
  8476  000F0E  0060  F904  F297   	movff	?___fttol+3,sprintf@val+3
  8477                           
  8478                           ;doprnt.c: 1092: for(c = 0 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8479  000F14  0E00               	movlw	0
  8480  000F16  0102               	movlb	2	; () banked
  8481  000F18  6F9D               	movwf	sprintf@c& (0+255),b
  8482  000F1A                     l12843:
  8483                           
  8484                           ; BSR set to: 2
  8485  000F1A  0E0A               	movlw	10
  8486  000F1C  199D               	xorwf	sprintf@c& (0+255),w,b
  8487  000F1E  B4D8               	btfsc	16344,2,c
  8488  000F20  D01B               	goto	u17460
  8489                           
  8490                           ; BSR set to: 2
  8491                           ;doprnt.c: 1093: if(val < dpowers[c])
  8492                           
  8493                           ; BSR set to: 2
  8494                           
  8495                           ; BSR set to: 2
  8496  000F22  519D               	movf	sprintf@c& (0+255),w,b
  8497  000F24  0D04               	mullw	4
  8498  000F26  0EBF               	movlw	low _dpowers
  8499  000F28  24F3               	addwf	16371,w,c
  8500  000F2A  6EF6               	movwf	16374,c
  8501  000F2C  0EFA               	movlw	high _dpowers
  8502  000F2E  20F4               	addwfc	16372,w,c
  8503  000F30  6EF7               	movwf	16375,c
  8504  000F32                     	if	1	;There are 3 active tblptr bytes
  8505  000F32  6AF8               	clrf	16376,c
  8506  000F34  0E00               	movlw	low (__mediumconst shr (0+16))
  8507  000F36  22F8               	addwfc	16376,f,c
  8508  000F38                     	endif
  8509  000F38  0009               	tblrd		*+
  8510  000F3A  50F5               	movf	16373,w,c
  8511  000F3C  5D94               	subwf	sprintf@val& (0+255),w,b
  8512  000F3E  0009               	tblrd		*+
  8513  000F40  50F5               	movf	16373,w,c
  8514  000F42  5995               	subwfb	(sprintf@val+1)& (0+255),w,b
  8515  000F44  0009               	tblrd		*+
  8516  000F46  50F5               	movf	16373,w,c
  8517  000F48  5996               	subwfb	(sprintf@val+2)& (0+255),w,b
  8518  000F4A  0009               	tblrd		*+
  8519  000F4C  50F5               	movf	16373,w,c
  8520  000F4E  5997               	subwfb	(sprintf@val+3)& (0+255),w,b
  8521  000F50  A0D8               	btfss	16344,0,c
  8522  000F52  D002               	goto	u17460
  8523                           
  8524                           ; BSR set to: 2
  8525                           
  8526                           ; BSR set to: 2
  8527                           
  8528                           ; BSR set to: 2
  8529                           ;doprnt.c: 1094: break;
  8530  000F54  2B9D               	incf	sprintf@c& (0+255),f,b
  8531  000F56  D7E1               	goto	l12843
  8532  000F58                     u17460:
  8533                           
  8534                           ; BSR set to: 2
  8535                           ;doprnt.c: 1095: prec -= c;
  8536                           
  8537                           ; BSR set to: 2
  8538  000F58  519D               	movf	sprintf@c& (0+255),w,b
  8539  000F5A  5F9B               	subwf	sprintf@prec& (0+255),f,b
  8540  000F5C  0E00               	movlw	0
  8541  000F5E  BF9D               	btfsc	sprintf@c& (0+255),7,b
  8542  000F60  0EFF               	movlw	255
  8543  000F62  5B9C               	subwfb	(sprintf@prec+1)& (0+255),f,b
  8544                           
  8545                           ;doprnt.c: 1096: if(prec <= 12)
  8546  000F64  BF9C               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8547  000F66  D006               	goto	u17470
  8548  000F68  519C               	movf	(sprintf@prec+1)& (0+255),w,b
  8549  000F6A  E124               	bnz	l1086
  8550  000F6C  0E0D               	movlw	13
  8551  000F6E  5D9B               	subwf	sprintf@prec& (0+255),w,b
  8552  000F70  B0D8               	btfsc	16344,0,c
  8553  000F72  D020               	goto	l1086
  8554  000F74                     u17470:
  8555                           
  8556                           ; BSR set to: 2
  8557                           ;doprnt.c: 1097: fval += fround(prec);
  8558  000F74  0060  FA60  F232   	movff	sprintf@fval,___ftadd@f1
  8559  000F7A  0060  FA64  F233   	movff	sprintf@fval+1,___ftadd@f1+1
  8560  000F80  0060  FA68  F234   	movff	sprintf@fval+2,___ftadd@f1+2
  8561  000F86  519B               	movf	sprintf@prec& (0+255),w,b
  8562  000F88  ECC4  F023         	call	_fround
  8563  000F8C  0060  F8A0  F235   	movff	?_fround,___ftadd@f2
  8564  000F92  0060  F8A4  F236   	movff	?_fround+1,___ftadd@f2+1
  8565  000F98  0060  F8A8  F237   	movff	?_fround+2,___ftadd@f2+2
  8566  000F9E  EC3A  F029         	call	___ftadd	;wreg free
  8567  000FA2  0060  F8C8  F298   	movff	?___ftadd,sprintf@fval
  8568  000FA8  0060  F8CC  F299   	movff	?___ftadd+1,sprintf@fval+1
  8569  000FAE  0060  F8D0  F29A   	movff	?___ftadd+2,sprintf@fval+2
  8570  000FB4                     l1086:
  8571                           
  8572                           ;doprnt.c: 1100: {
  8573                           ;doprnt.c: 1101: double temp;
  8574                           ;doprnt.c: 1102: temp = scale(prec);
  8575  000FB4  0102               	movlb	2	; () banked
  8576  000FB6  519B               	movf	sprintf@prec& (0+255),w,b
  8577  000FB8  EC0B  F01D         	call	_scale
  8578  000FBC  0060  F8A0  F283   	movff	?_scale,sprintf@temp
  8579  000FC2  0060  F8A4  F284   	movff	?_scale+1,sprintf@temp+1
  8580  000FC8  0060  F8A8  F285   	movff	?_scale+2,sprintf@temp+2
  8581                           
  8582                           ;doprnt.c: 1103: temp *= fval - (double)val;
  8583  000FCE  0060  FA0C  F219   	movff	sprintf@temp,___ftmul@f1
  8584  000FD4  0060  FA10  F21A   	movff	sprintf@temp+1,___ftmul@f1+1
  8585  000FDA  0060  FA14  F21B   	movff	sprintf@temp+2,___ftmul@f1+2
  8586  000FE0  0060  FA60  F235   	movff	sprintf@fval,___ftadd@f2
  8587  000FE6  0060  FA64  F236   	movff	sprintf@fval+1,___ftadd@f2+1
  8588  000FEC  0060  FA68  F237   	movff	sprintf@fval+2,___ftadd@f2+2
  8589  000FF2  0060  FA50  F24D   	movff	sprintf@val,___lltoft@c
  8590  000FF8  0060  FA54  F24E   	movff	sprintf@val+1,___lltoft@c+1
  8591  000FFE  0060  FA58  F24F   	movff	sprintf@val+2,___lltoft@c+2
  8592  001004  0060  FA5C  F250   	movff	sprintf@val+3,___lltoft@c+3
  8593  00100A  EC05  F03D         	call	___lltoft	;wreg free
  8594  00100E  0060  F934  F256   	movff	?___lltoft,___ftneg@f1
  8595  001014  0060  F938  F257   	movff	?___lltoft+1,___ftneg@f1+1
  8596  00101A  0060  F93C  F258   	movff	?___lltoft+2,___ftneg@f1+2
  8597  001020  ECE0  F041         	call	___ftneg	;wreg free
  8598  001024  0060  F958  F232   	movff	?___ftneg,___ftadd@f1
  8599  00102A  0060  F95C  F233   	movff	?___ftneg+1,___ftadd@f1+1
  8600  001030  0060  F960  F234   	movff	?___ftneg+2,___ftadd@f1+2
  8601  001036  EC3A  F029         	call	___ftadd	;wreg free
  8602  00103A  0060  F8C8  F21C   	movff	?___ftadd,___ftmul@f2
  8603  001040  0060  F8CC  F21D   	movff	?___ftadd+1,___ftmul@f2+1
  8604  001046  0060  F8D0  F21E   	movff	?___ftadd+2,___ftmul@f2+2
  8605  00104C  EC50  F030         	call	___ftmul	;wreg free
  8606  001050  0060  F864  F283   	movff	?___ftmul,sprintf@temp
  8607  001056  0060  F868  F284   	movff	?___ftmul+1,sprintf@temp+1
  8608  00105C  0060  F86C  F285   	movff	?___ftmul+2,sprintf@temp+2
  8609                           
  8610                           ;doprnt.c: 1104: val = (unsigned long)temp;
  8611  001062  0060  FA0C  F23E   	movff	sprintf@temp,___fttol@f1
  8612  001068  0060  FA10  F23F   	movff	sprintf@temp+1,___fttol@f1+1
  8613  00106E  0060  FA14  F240   	movff	sprintf@temp+2,___fttol@f1+2
  8614  001074  EC5B  F031         	call	___fttol	;wreg free
  8615  001078  0060  F8F8  F294   	movff	?___fttol,sprintf@val
  8616  00107E  0060  F8FC  F295   	movff	?___fttol+1,sprintf@val+1
  8617  001084  0060  F900  F296   	movff	?___fttol+2,sprintf@val+2
  8618  00108A  0060  F904  F297   	movff	?___fttol+3,sprintf@val+3
  8619                           
  8620                           ;doprnt.c: 1105: }
  8621                           ;doprnt.c: 1106: while(prec && val % 10 == 0) {
  8622  001090  D027               	goto	l1087
  8623  001092                     
  8624                           ;doprnt.c: 1107: val /= 10;
  8625  001092  0060  FA50  F205   	movff	sprintf@val,___lldiv@dividend
  8626  001098  0060  FA54  F206   	movff	sprintf@val+1,___lldiv@dividend+1
  8627  00109E  0060  FA58  F207   	movff	sprintf@val+2,___lldiv@dividend+2
  8628  0010A4  0060  FA5C  F208   	movff	sprintf@val+3,___lldiv@dividend+3
  8629  0010AA  0E0A               	movlw	10
  8630  0010AC  0102               	movlb	2	; () banked
  8631  0010AE  6F09               	movwf	___lldiv@divisor& (0+255),b
  8632  0010B0  0E00               	movlw	0
  8633  0010B2  6F0A               	movwf	(___lldiv@divisor+1)& (0+255),b
  8634  0010B4  0E00               	movlw	0
  8635  0010B6  6F0B               	movwf	(___lldiv@divisor+2)& (0+255),b
  8636  0010B8  0E00               	movlw	0
  8637  0010BA  6F0C               	movwf	(___lldiv@divisor+3)& (0+255),b
  8638  0010BC  ECD7  F039         	call	___lldiv	;wreg free
  8639  0010C0  0060  F814  F294   	movff	?___lldiv,sprintf@val
  8640  0010C6  0060  F818  F295   	movff	?___lldiv+1,sprintf@val+1
  8641  0010CC  0060  F81C  F296   	movff	?___lldiv+2,sprintf@val+2
  8642  0010D2  0060  F820  F297   	movff	?___lldiv+3,sprintf@val+3
  8643                           
  8644                           ;doprnt.c: 1108: prec--;
  8645  0010D8  0102               	movlb	2	; () banked
  8646  0010DA  079B               	decf	sprintf@prec& (0+255),f,b
  8647  0010DC  A0D8               	btfss	16344,0,c
  8648  0010DE  079C               	decf	(sprintf@prec+1)& (0+255),f,b
  8649  0010E0                     l1087:
  8650                           
  8651                           ; BSR set to: 2
  8652  0010E0  0102               	movlb	2	; () banked
  8653  0010E2  519B               	movf	sprintf@prec& (0+255),w,b
  8654  0010E4  119C               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8655  0010E6  B4D8               	btfsc	16344,2,c
  8656  0010E8  D046               	goto	l1093
  8657                           
  8658                           ; BSR set to: 2
  8659  0010EA  0060  FA50  F212   	movff	sprintf@val,___llmod@dividend
  8660  0010F0  0060  FA54  F213   	movff	sprintf@val+1,___llmod@dividend+1
  8661  0010F6  0060  FA58  F214   	movff	sprintf@val+2,___llmod@dividend+2
  8662  0010FC  0060  FA5C  F215   	movff	sprintf@val+3,___llmod@dividend+3
  8663  001102  0E0A               	movlw	10
  8664  001104  6F16               	movwf	___llmod@divisor& (0+255),b
  8665  001106  0E00               	movlw	0
  8666  001108  6F17               	movwf	(___llmod@divisor+1)& (0+255),b
  8667  00110A  0E00               	movlw	0
  8668  00110C  6F18               	movwf	(___llmod@divisor+2)& (0+255),b
  8669  00110E  0E00               	movlw	0
  8670  001110  6F19               	movwf	(___llmod@divisor+3)& (0+255),b
  8671  001112  EC96  F03C         	call	___llmod	;wreg free
  8672  001116  0102               	movlb	2	; () banked
  8673  001118  5112               	movf	?___llmod& (0+255),w,b
  8674  00111A  1113               	iorwf	(?___llmod+1)& (0+255),w,b
  8675  00111C  1114               	iorwf	(?___llmod+2)& (0+255),w,b
  8676  00111E  1115               	iorwf	(?___llmod+3)& (0+255),w,b
  8677  001120  A4D8               	btfss	16344,2,c
  8678  001122  D029               	goto	l1093
  8679  001124  D7B6               	goto	l1088
  8680  001126                     l1081:
  8681                           
  8682                           ; BSR set to: 2
  8683                           ;doprnt.c: 1112: if(prec <= 12)
  8684                           
  8685                           ; BSR set to: 2
  8686  001126  BF9C               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8687  001128  D006               	goto	u17500
  8688  00112A  519C               	movf	(sprintf@prec+1)& (0+255),w,b
  8689  00112C  E124               	bnz	l12875
  8690  00112E  0E0D               	movlw	13
  8691  001130  5D9B               	subwf	sprintf@prec& (0+255),w,b
  8692  001132  B0D8               	btfsc	16344,0,c
  8693  001134  D020               	goto	l1093
  8694  001136                     u17500:
  8695                           
  8696                           ; BSR set to: 2
  8697                           ;doprnt.c: 1113: fval += fround(prec);
  8698  001136  0060  FA60  F232   	movff	sprintf@fval,___ftadd@f1
  8699  00113C  0060  FA64  F233   	movff	sprintf@fval+1,___ftadd@f1+1
  8700  001142  0060  FA68  F234   	movff	sprintf@fval+2,___ftadd@f1+2
  8701  001148  519B               	movf	sprintf@prec& (0+255),w,b
  8702  00114A  ECC4  F023         	call	_fround
  8703  00114E  0060  F8A0  F235   	movff	?_fround,___ftadd@f2
  8704  001154  0060  F8A4  F236   	movff	?_fround+1,___ftadd@f2+1
  8705  00115A  0060  F8A8  F237   	movff	?_fround+2,___ftadd@f2+2
  8706  001160  EC3A  F029         	call	___ftadd	;wreg free
  8707  001164  0060  F8C8  F298   	movff	?___ftadd,sprintf@fval
  8708  00116A  0060  F8CC  F299   	movff	?___ftadd+1,sprintf@fval+1
  8709  001170  0060  F8D0  F29A   	movff	?___ftadd+2,sprintf@fval+2
  8710  001176                     l1093:
  8711  001176                     l12875:
  8712                           
  8713                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  8714  001176  0102               	movlb	2	; () banked
  8715  001178  BF91               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8716  00117A  D006               	goto	u17510
  8717  00117C  5191               	movf	(sprintf@exp+1)& (0+255),w,b
  8718  00117E  E122               	bnz	l12883
  8719  001180  0E0A               	movlw	10
  8720  001182  5D90               	subwf	sprintf@exp& (0+255),w,b
  8721  001184  B0D8               	btfsc	16344,0,c
  8722  001186  D01E               	goto	u17540
  8723  001188                     u17510:
  8724                           
  8725                           ; BSR set to: 2
  8726  001188  5198               	movf	sprintf@fval& (0+255),w,b
  8727  00118A  1199               	iorwf	(sprintf@fval+1)& (0+255),w,b
  8728  00118C  119A               	iorwf	(sprintf@fval+2)& (0+255),w,b
  8729  00118E  B4D8               	btfsc	16344,2,c
  8730  001190  D067               	goto	l1094
  8731                           
  8732                           ; BSR set to: 2
  8733  001192  0060  FA60  F23E   	movff	sprintf@fval,___fttol@f1
  8734  001198  0060  FA64  F23F   	movff	sprintf@fval+1,___fttol@f1+1
  8735  00119E  0060  FA68  F240   	movff	sprintf@fval+2,___fttol@f1+2
  8736  0011A4  EC5B  F031         	call	___fttol	;wreg free
  8737  0011A8  0102               	movlb	2	; () banked
  8738  0011AA  513E               	movf	?___fttol& (0+255),w,b
  8739  0011AC  113F               	iorwf	(?___fttol+1)& (0+255),w,b
  8740  0011AE  1140               	iorwf	(?___fttol+2)& (0+255),w,b
  8741  0011B0  1141               	iorwf	(?___fttol+3)& (0+255),w,b
  8742  0011B2  B4D8               	btfsc	16344,2,c
  8743                           
  8744                           ; BSR set to: 2
  8745  0011B4  BF91               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8746  0011B6  D054               	goto	l1094
  8747  0011B8  5191               	movf	(sprintf@exp+1)& (0+255),w,b
  8748  0011BA  E104               	bnz	l12883
  8749  0011BC  0E02               	movlw	2
  8750  0011BE  5D90               	subwf	sprintf@exp& (0+255),w,b
  8751  0011C0  A0D8               	btfss	16344,0,c
  8752  0011C2  D04E               	goto	l1094
  8753  0011C4                     u17540:
  8754  0011C4                     l12883:
  8755                           
  8756                           ; BSR set to: 2
  8757                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  8758  0011C4  0060  FA30  F259   	movff	sprintf@tmpval,___ftge@ff1
  8759  0011CA  0060  FA34  F25A   	movff	sprintf@tmpval+1,___ftge@ff1+1
  8760  0011D0  0060  FA38  F25B   	movff	sprintf@tmpval+2,___ftge@ff1+2
  8761  0011D6  0E70               	movlw	112
  8762  0011D8  6F5C               	movwf	___ftge@ff2& (0+255),b
  8763  0011DA  0E89               	movlw	137
  8764  0011DC  6F5D               	movwf	(___ftge@ff2+1)& (0+255),b
  8765  0011DE  0E40               	movlw	64
  8766  0011E0  6F5E               	movwf	(___ftge@ff2+2)& (0+255),b
  8767  0011E2  EC39  F039         	call	___ftge	;wreg free
  8768  0011E6  0102               	movlb	2	; () banked
  8769  0011E8  B0D8               	btfsc	16344,0,c
  8770  0011EA  D002               	goto	l1097
  8771                           
  8772                           ; BSR set to: 2
  8773                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  8774  0011EC  0EF7               	movlw	247
  8775  0011EE  D001               	goto	L9
  8776  0011F0                     l1097:
  8777                           
  8778                           ; BSR set to: 2
  8779                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  8780                           
  8781                           ; BSR set to: 2
  8782  0011F0  0EF8               	movlw	248
  8783  0011F2                     L9:
  8784  0011F2  2790               	addwf	sprintf@exp& (0+255),f,b
  8785  0011F4  0EFF               	movlw	255
  8786  0011F6  2391               	addwfc	(sprintf@exp+1)& (0+255),f,b
  8787                           
  8788                           ; BSR set to: 2
  8789                           ;doprnt.c: 1124: }
  8790                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  8791                           
  8792                           ; BSR set to: 2
  8793  0011F8  5190               	movf	sprintf@exp& (0+255),w,b
  8794  0011FA  EC0B  F01D         	call	_scale
  8795  0011FE  0060  F8A0  F28C   	movff	?_scale,sprintf@tmpval
  8796  001204  0060  F8A4  F28D   	movff	?_scale+1,sprintf@tmpval+1
  8797  00120A  0060  F8A8  F28E   	movff	?_scale+2,sprintf@tmpval+2
  8798                           
  8799                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  8800  001210  0060  FA60  F205   	movff	sprintf@fval,__tdiv_to_l_@f1
  8801  001216  0060  FA64  F206   	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  8802  00121C  0060  FA68  F207   	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  8803  001222  0060  FA30  F208   	movff	sprintf@tmpval,__tdiv_to_l_@f2
  8804  001228  0060  FA34  F209   	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  8805  00122E  0060  FA38  F20A   	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  8806  001234  EC56  F02D         	call	__tdiv_to_l_	;wreg free
  8807  001238  0060  F814  F294   	movff	?__tdiv_to_l_,sprintf@val
  8808  00123E  0060  F818  F295   	movff	?__tdiv_to_l_+1,sprintf@val+1
  8809  001244  0060  F81C  F296   	movff	?__tdiv_to_l_+2,sprintf@val+2
  8810  00124A  0060  F820  F297   	movff	?__tdiv_to_l_+3,sprintf@val+3
  8811                           
  8812                           ;doprnt.c: 1129: fval = 0.0;
  8813  001250  0E00               	movlw	0
  8814  001252  0102               	movlb	2	; () banked
  8815  001254  6F98               	movwf	sprintf@fval& (0+255),b
  8816  001256  0E00               	movlw	0
  8817  001258  6F99               	movwf	(sprintf@fval+1)& (0+255),b
  8818  00125A  0E00               	movlw	0
  8819  00125C  6F9A               	movwf	(sprintf@fval+2)& (0+255),b
  8820                           
  8821                           ;doprnt.c: 1130: } else {
  8822  00125E  D047               	goto	l1103
  8823  001260                     l1094:
  8824                           
  8825                           ; BSR set to: 2
  8826                           ;doprnt.c: 1131: val = (unsigned long)fval;
  8827                           
  8828                           ; BSR set to: 2
  8829  001260  0060  FA60  F23E   	movff	sprintf@fval,___fttol@f1
  8830  001266  0060  FA64  F23F   	movff	sprintf@fval+1,___fttol@f1+1
  8831  00126C  0060  FA68  F240   	movff	sprintf@fval+2,___fttol@f1+2
  8832  001272  EC5B  F031         	call	___fttol	;wreg free
  8833  001276  0060  F8F8  F294   	movff	?___fttol,sprintf@val
  8834  00127C  0060  F8FC  F295   	movff	?___fttol+1,sprintf@val+1
  8835  001282  0060  F900  F296   	movff	?___fttol+2,sprintf@val+2
  8836  001288  0060  F904  F297   	movff	?___fttol+3,sprintf@val+3
  8837                           
  8838                           ;doprnt.c: 1132: fval -= (double)val;
  8839  00128E  0060  FA60  F256   	movff	sprintf@fval,___ftsub@f1
  8840  001294  0060  FA64  F257   	movff	sprintf@fval+1,___ftsub@f1+1
  8841  00129A  0060  FA68  F258   	movff	sprintf@fval+2,___ftsub@f1+2
  8842  0012A0  0060  FA50  F24D   	movff	sprintf@val,___lltoft@c
  8843  0012A6  0060  FA54  F24E   	movff	sprintf@val+1,___lltoft@c+1
  8844  0012AC  0060  FA58  F24F   	movff	sprintf@val+2,___lltoft@c+2
  8845  0012B2  0060  FA5C  F250   	movff	sprintf@val+3,___lltoft@c+3
  8846  0012B8  EC05  F03D         	call	___lltoft	;wreg free
  8847  0012BC  0060  F934  F259   	movff	?___lltoft,___ftsub@f2
  8848  0012C2  0060  F938  F25A   	movff	?___lltoft+1,___ftsub@f2+1
  8849  0012C8  0060  F93C  F25B   	movff	?___lltoft+2,___ftsub@f2+2
  8850  0012CE  EC15  F03F         	call	___ftsub	;wreg free
  8851  0012D2  0060  F958  F298   	movff	?___ftsub,sprintf@fval
  8852  0012D8  0060  F95C  F299   	movff	?___ftsub+1,sprintf@fval+1
  8853  0012DE  0060  F960  F29A   	movff	?___ftsub+2,sprintf@fval+2
  8854                           
  8855                           ;doprnt.c: 1133: exp = 0;
  8856  0012E4  0E00               	movlw	0
  8857  0012E6  0102               	movlb	2	; () banked
  8858  0012E8  6F91               	movwf	(sprintf@exp+1)& (0+255),b
  8859  0012EA  0E00               	movlw	0
  8860  0012EC  6F90               	movwf	sprintf@exp& (0+255),b
  8861  0012EE                     l1103:
  8862                           
  8863                           ; BSR set to: 2
  8864                           ;doprnt.c: 1134: }
  8865                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8866                           
  8867                           ; BSR set to: 2
  8868  0012EE  0E01               	movlw	1
  8869  0012F0  6F9D               	movwf	sprintf@c& (0+255),b
  8870  0012F2                     l12903:
  8871                           
  8872                           ; BSR set to: 2
  8873  0012F2  0E0A               	movlw	10
  8874  0012F4  199D               	xorwf	sprintf@c& (0+255),w,b
  8875  0012F6  B4D8               	btfsc	16344,2,c
  8876  0012F8  D01B               	goto	u17580
  8877                           
  8878                           ; BSR set to: 2
  8879                           ;doprnt.c: 1137: if(val < dpowers[c])
  8880                           
  8881                           ; BSR set to: 2
  8882                           
  8883                           ; BSR set to: 2
  8884  0012FA  519D               	movf	sprintf@c& (0+255),w,b
  8885  0012FC  0D04               	mullw	4
  8886  0012FE  0EBF               	movlw	low _dpowers
  8887  001300  24F3               	addwf	16371,w,c
  8888  001302  6EF6               	movwf	16374,c
  8889  001304  0EFA               	movlw	high _dpowers
  8890  001306  20F4               	addwfc	16372,w,c
  8891  001308  6EF7               	movwf	16375,c
  8892  00130A                     	if	1	;There are 3 active tblptr bytes
  8893  00130A  6AF8               	clrf	16376,c
  8894  00130C  0E00               	movlw	low (__mediumconst shr (0+16))
  8895  00130E  22F8               	addwfc	16376,f,c
  8896  001310                     	endif
  8897  001310  0009               	tblrd		*+
  8898  001312  50F5               	movf	16373,w,c
  8899  001314  5D94               	subwf	sprintf@val& (0+255),w,b
  8900  001316  0009               	tblrd		*+
  8901  001318  50F5               	movf	16373,w,c
  8902  00131A  5995               	subwfb	(sprintf@val+1)& (0+255),w,b
  8903  00131C  0009               	tblrd		*+
  8904  00131E  50F5               	movf	16373,w,c
  8905  001320  5996               	subwfb	(sprintf@val+2)& (0+255),w,b
  8906  001322  0009               	tblrd		*+
  8907  001324  50F5               	movf	16373,w,c
  8908  001326  5997               	subwfb	(sprintf@val+3)& (0+255),w,b
  8909  001328  A0D8               	btfss	16344,0,c
  8910  00132A  D002               	goto	u17580
  8911                           
  8912                           ; BSR set to: 2
  8913                           
  8914                           ; BSR set to: 2
  8915                           
  8916                           ; BSR set to: 2
  8917                           ;doprnt.c: 1138: break;
  8918  00132C  2B9D               	incf	sprintf@c& (0+255),f,b
  8919  00132E  D7E1               	goto	l12903
  8920  001330                     u17580:
  8921                           
  8922                           ; BSR set to: 2
  8923                           ;doprnt.c: 1142: width -= prec + c + exp;
  8924                           
  8925                           ; BSR set to: 2
  8926  001330  0060  FA74  F26D   	movff	sprintf@c,??_sprintf
  8927  001336  6B6E               	clrf	(??_sprintf+1)& (0+255),b
  8928  001338  BF6D               	btfsc	??_sprintf& (0+255),7,b
  8929  00133A  076E               	decf	(??_sprintf+1)& (0+255),f,b
  8930  00133C  519B               	movf	sprintf@prec& (0+255),w,b
  8931  00133E  276D               	addwf	??_sprintf& (0+255),f,b
  8932  001340  519C               	movf	(sprintf@prec+1)& (0+255),w,b
  8933  001342  236E               	addwfc	(??_sprintf+1)& (0+255),f,b
  8934  001344  5190               	movf	sprintf@exp& (0+255),w,b
  8935  001346  276D               	addwf	??_sprintf& (0+255),f,b
  8936  001348  5191               	movf	(sprintf@exp+1)& (0+255),w,b
  8937  00134A  236E               	addwfc	(??_sprintf+1)& (0+255),f,b
  8938  00134C  516D               	movf	??_sprintf& (0+255),w,b
  8939  00134E  5F92               	subwf	sprintf@width& (0+255),f,b
  8940  001350  516E               	movf	(??_sprintf+1)& (0+255),w,b
  8941  001352  5B93               	subwfb	(sprintf@width+1)& (0+255),f,b
  8942                           
  8943                           ; BSR set to: 2
  8944                           ;doprnt.c: 1143: if(
  8945                           ;doprnt.c: 1145: flag & 0x800 ||
  8946                           ;doprnt.c: 1147: prec)
  8947  001354  B79F               	btfsc	(sprintf@flag+1)& (0+255),3,b
  8948  001356  D004               	goto	u17600
  8949                           
  8950                           ; BSR set to: 2
  8951  001358  519B               	movf	sprintf@prec& (0+255),w,b
  8952  00135A  119C               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8953  00135C  B4D8               	btfsc	16344,2,c
  8954  00135E  D003               	goto	l1107
  8955  001360                     u17600:
  8956                           
  8957                           ; BSR set to: 2
  8958                           ;doprnt.c: 1148: width--;
  8959                           
  8960                           ; BSR set to: 2
  8961  001360  0792               	decf	sprintf@width& (0+255),f,b
  8962  001362  A0D8               	btfss	16344,0,c
  8963  001364  0793               	decf	(sprintf@width+1)& (0+255),f,b
  8964  001366                     l1107:
  8965                           
  8966                           ; BSR set to: 2
  8967                           ;doprnt.c: 1149: if(flag & 0x03)
  8968                           
  8969                           ; BSR set to: 2
  8970  001366  0E03               	movlw	3
  8971  001368  159E               	andwf	sprintf@flag& (0+255),w,b
  8972  00136A  6F6D               	movwf	??_sprintf& (0+255),b
  8973  00136C  0E00               	movlw	0
  8974  00136E  159F               	andwf	(sprintf@flag+1)& (0+255),w,b
  8975  001370  6F6E               	movwf	(??_sprintf+1)& (0+255),b
  8976  001372  516D               	movf	??_sprintf& (0+255),w,b
  8977  001374  116E               	iorwf	(??_sprintf+1)& (0+255),w,b
  8978  001376  B4D8               	btfsc	16344,2,c
  8979  001378  D003               	goto	l1110
  8980                           
  8981                           ; BSR set to: 2
  8982                           ;doprnt.c: 1150: width--;
  8983  00137A  0792               	decf	sprintf@width& (0+255),f,b
  8984  00137C  A0D8               	btfss	16344,0,c
  8985  00137E  0793               	decf	(sprintf@width+1)& (0+255),f,b
  8986  001380                     l1110:
  8987                           
  8988                           ; BSR set to: 2
  8989                           ;doprnt.c: 1153: if(flag & 0x04) {
  8990                           
  8991                           ; BSR set to: 2
  8992  001380  A59E               	btfss	sprintf@flag& (0+255),2,b
  8993  001382  D038               	goto	l1111
  8994                           
  8995                           ; BSR set to: 2
  8996                           ;doprnt.c: 1155: if(flag & 0x02)
  8997  001384  A39E               	btfss	sprintf@flag& (0+255),1,b
  8998  001386  D014               	goto	l1112
  8999                           
  9000                           ; BSR set to: 2
  9001                           ;doprnt.c: 1159: ((*sp++ = (flag & 0x01 ? '-' : '+')));
  9002  001388  B19E               	btfsc	sprintf@flag& (0+255),0,b
  9003  00138A  D004               	goto	l1114
  9004                           
  9005                           ; BSR set to: 2
  9006  00138C  0E00               	movlw	0
  9007  00138E  6F7C               	movwf	(_sprintf$2173+1)& (0+255),b
  9008  001390  0E2B               	movlw	43
  9009  001392  D003               	goto	L10
  9010  001394                     l1114:
  9011                           
  9012                           ; BSR set to: 2
  9013                           
  9014                           ; BSR set to: 2
  9015  001394  0E00               	movlw	0
  9016  001396  6F7C               	movwf	(_sprintf$2173+1)& (0+255),b
  9017  001398  0E2D               	movlw	45
  9018  00139A                     L10:
  9019  00139A  6F7B               	movwf	_sprintf$2173& (0+255),b
  9020                           
  9021                           ; BSR set to: 2
  9022                           
  9023                           ; BSR set to: 2
  9024  00139C  0060  F98B  FFD9   	movff	sprintf@sp,16345
  9025  0013A2  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  9026  0013A8  0060  F9EF  FFDF   	movff	_sprintf$2173,16351
  9027  0013AE  D00A               	goto	l12943
  9028  0013B0                     l1112:
  9029                           
  9030                           ; BSR set to: 2
  9031                           ;doprnt.c: 1161: else
  9032                           ;doprnt.c: 1164: if(flag & 0x01)
  9033  0013B0  A19E               	btfss	sprintf@flag& (0+255),0,b
  9034  0013B2  D018               	goto	l1119
  9035                           
  9036                           ; BSR set to: 2
  9037                           ;doprnt.c: 1165: ((*sp++ = (' ')));
  9038  0013B4  0060  F98B  FFD9   	movff	sprintf@sp,16345
  9039  0013BA  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  9040  0013C0  0E20               	movlw	32
  9041  0013C2  6EDF               	movwf	16351,c
  9042  0013C4                     l12943:
  9043                           
  9044                           ; BSR set to: 2
  9045  0013C4  4B62               	infsnz	sprintf@sp& (0+255),f,b
  9046  0013C6  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  9047                           
  9048                           ; BSR set to: 2
  9049                           ;doprnt.c: 1168: while(width > 0) {
  9050                           
  9051                           ; BSR set to: 2
  9052  0013C8  D00D               	goto	l1119
  9053  0013CA                     l12945:
  9054                           
  9055                           ; BSR set to: 2
  9056                           ;doprnt.c: 1169: ((*sp++ = ('0')));
  9057  0013CA  0060  F98B  FFD9   	movff	sprintf@sp,16345
  9058  0013D0  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  9059  0013D6  0E30               	movlw	48
  9060  0013D8  6EDF               	movwf	16351,c
  9061                           
  9062                           ; BSR set to: 2
  9063  0013DA  4B62               	infsnz	sprintf@sp& (0+255),f,b
  9064  0013DC  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  9065                           
  9066                           ; BSR set to: 2
  9067                           ;doprnt.c: 1170: width--;
  9068  0013DE  0792               	decf	sprintf@width& (0+255),f,b
  9069  0013E0  A0D8               	btfss	16344,0,c
  9070  0013E2  0793               	decf	(sprintf@width+1)& (0+255),f,b
  9071  0013E4                     l1119:
  9072                           
  9073                           ; BSR set to: 2
  9074                           
  9075                           ; BSR set to: 2
  9076  0013E4  BF93               	btfsc	(sprintf@width+1)& (0+255),7,b
  9077  0013E6  D0A1               	goto	l1134
  9078  0013E8  5193               	movf	(sprintf@width+1)& (0+255),w,b
  9079  0013EA  E1EF               	bnz	l12945
  9080  0013EC  0592               	decf	sprintf@width& (0+255),w,b
  9081  0013EE  A0D8               	btfss	16344,0,c
  9082  0013F0  D09C               	goto	l1134
  9083  0013F2  D7EB               	goto	l1120
  9084  0013F4                     l1111:
  9085                           
  9086                           ; BSR set to: 2
  9087                           ;doprnt.c: 1175: {
  9088                           ;doprnt.c: 1177: if(!(flag & 0x08))
  9089  0013F4  A79E               	btfss	sprintf@flag& (0+255),3,b
  9090  0013F6  D00E               	goto	l1124
  9091  0013F8  D014               	goto	u17680
  9092  0013FA                     l12955:
  9093                           
  9094                           ; BSR set to: 2
  9095                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  9096  0013FA  0060  F98B  FFD9   	movff	sprintf@sp,16345
  9097  001400  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  9098  001406  0E20               	movlw	32
  9099  001408  6EDF               	movwf	16351,c
  9100                           
  9101                           ; BSR set to: 2
  9102  00140A  4B62               	infsnz	sprintf@sp& (0+255),f,b
  9103  00140C  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  9104                           
  9105                           ; BSR set to: 2
  9106                           ;doprnt.c: 1182: width--;
  9107  00140E  0792               	decf	sprintf@width& (0+255),f,b
  9108  001410  A0D8               	btfss	16344,0,c
  9109  001412  0793               	decf	(sprintf@width+1)& (0+255),f,b
  9110  001414                     l1124:
  9111                           
  9112                           ; BSR set to: 2
  9113                           
  9114                           ; BSR set to: 2
  9115  001414  BF93               	btfsc	(sprintf@width+1)& (0+255),7,b
  9116  001416  D005               	goto	u17680
  9117  001418  5193               	movf	(sprintf@width+1)& (0+255),w,b
  9118  00141A  E1EF               	bnz	l12955
  9119  00141C  0592               	decf	sprintf@width& (0+255),w,b
  9120  00141E  B0D8               	btfsc	16344,0,c
  9121  001420  D7EC               	goto	l1125
  9122  001422                     u17680:
  9123                           
  9124                           ; BSR set to: 2
  9125                           ;doprnt.c: 1183: }
  9126                           ;doprnt.c: 1186: if(flag & 0x02)
  9127                           
  9128                           ; BSR set to: 2
  9129  001422  A39E               	btfss	sprintf@flag& (0+255),1,b
  9130  001424  D014               	goto	l1127
  9131                           
  9132                           ; BSR set to: 2
  9133                           ;doprnt.c: 1190: ((*sp++ = (flag & 0x01 ? '-' : '+')));
  9134  001426  B19E               	btfsc	sprintf@flag& (0+255),0,b
  9135  001428  D004               	goto	l1129
  9136                           
  9137                           ; BSR set to: 2
  9138  00142A  0E00               	movlw	0
  9139  00142C  6F7E               	movwf	(_sprintf$2174+1)& (0+255),b
  9140  00142E  0E2B               	movlw	43
  9141  001430  D003               	goto	L11
  9142  001432                     l1129:
  9143                           
  9144                           ; BSR set to: 2
  9145                           
  9146                           ; BSR set to: 2
  9147  001432  0E00               	movlw	0
  9148  001434  6F7E               	movwf	(_sprintf$2174+1)& (0+255),b
  9149  001436  0E2D               	movlw	45
  9150  001438                     L11:
  9151  001438  6F7D               	movwf	_sprintf$2174& (0+255),b
  9152                           
  9153                           ; BSR set to: 2
  9154                           
  9155                           ; BSR set to: 2
  9156  00143A  0060  F98B  FFD9   	movff	sprintf@sp,16345
  9157  001440  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  9158  001446  0060  F9F7  FFDF   	movff	_sprintf$2174,16351
  9159  00144C  D06C               	goto	L37
  9160  00144E                     l1127:
  9161                           
  9162                           ; BSR set to: 2
  9163                           ;doprnt.c: 1192: else if(flag & 0x01)
  9164  00144E  A19E               	btfss	sprintf@flag& (0+255),0,b
  9165  001450  D06C               	goto	l1134
  9166                           
  9167                           ; BSR set to: 2
  9168                           ;doprnt.c: 1193: ((*sp++ = (' ')));
  9169  001452  0060  F98B  FFD9   	movff	sprintf@sp,16345
  9170  001458  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  9171  00145E  0E20               	movlw	32
  9172  001460  D061               	goto	L12
  9173  001462                     
  9174                           ; BSR set to: 2
  9175                           ;doprnt.c: 1200: {
  9176                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  9177                           
  9178                           ; BSR set to: 2
  9179  001462  0060  FA50  F205   	movff	sprintf@val,___lldiv@dividend
  9180  001468  0060  FA54  F206   	movff	sprintf@val+1,___lldiv@dividend+1
  9181  00146E  0060  FA58  F207   	movff	sprintf@val+2,___lldiv@dividend+2
  9182  001474  0060  FA5C  F208   	movff	sprintf@val+3,___lldiv@dividend+3
  9183  00147A  519D               	movf	sprintf@c& (0+255),w,b
  9184  00147C  0D04               	mullw	4
  9185  00147E  0EBF               	movlw	low _dpowers
  9186  001480  24F3               	addwf	16371,w,c
  9187  001482  6EF6               	movwf	16374,c
  9188  001484  0EFA               	movlw	high _dpowers
  9189  001486  20F4               	addwfc	16372,w,c
  9190  001488  6EF7               	movwf	16375,c
  9191  00148A                     	if	1	;There are 3 active tblptr bytes
  9192  00148A  6AF8               	clrf	16376,c
  9193  00148C  0E00               	movlw	low (__mediumconst shr (0+16))
  9194  00148E  22F8               	addwfc	16376,f,c
  9195  001490                     	endif
  9196  001490  0009               	tblrd		*+
  9197  001492  006F FFD4  F209    	movff	16373,___lldiv@divisor
  9198  001498  0009               	tblrd		*+
  9199  00149A  006F FFD4  F20A    	movff	16373,___lldiv@divisor+1
  9200  0014A0  0009               	tblrd		*+
  9201  0014A2  006F FFD4  F20B    	movff	16373,___lldiv@divisor+2
  9202  0014A8  000A               	tblrd		*-
  9203  0014AA  006F FFD4  F20C    	movff	16373,___lldiv@divisor+3
  9204  0014B0  ECD7  F039         	call	___lldiv	;wreg free
  9205  0014B4  0060  F814  F28C   	movff	?___lldiv,sprintf@tmpval
  9206  0014BA  0060  F818  F28D   	movff	?___lldiv+1,sprintf@tmpval+1
  9207  0014C0  0060  F81C  F28E   	movff	?___lldiv+2,sprintf@tmpval+2
  9208  0014C6  0060  F820  F28F   	movff	?___lldiv+3,sprintf@tmpval+3
  9209                           
  9210                           ;doprnt.c: 1202: tmpval.vd %= 10;
  9211  0014CC  0060  FA30  F212   	movff	sprintf@tmpval,___llmod@dividend
  9212  0014D2  0060  FA34  F213   	movff	sprintf@tmpval+1,___llmod@dividend+1
  9213  0014D8  0060  FA38  F214   	movff	sprintf@tmpval+2,___llmod@dividend+2
  9214  0014DE  0060  FA3C  F215   	movff	sprintf@tmpval+3,___llmod@dividend+3
  9215  0014E4  0E0A               	movlw	10
  9216  0014E6  0102               	movlb	2	; () banked
  9217  0014E8  6F16               	movwf	___llmod@divisor& (0+255),b
  9218  0014EA  0E00               	movlw	0
  9219  0014EC  6F17               	movwf	(___llmod@divisor+1)& (0+255),b
  9220  0014EE  0E00               	movlw	0
  9221  0014F0  6F18               	movwf	(___llmod@divisor+2)& (0+255),b
  9222  0014F2  0E00               	movlw	0
  9223  0014F4  6F19               	movwf	(___llmod@divisor+3)& (0+255),b
  9224  0014F6  EC96  F03C         	call	___llmod	;wreg free
  9225  0014FA  0060  F848  F28C   	movff	?___llmod,sprintf@tmpval
  9226  001500  0060  F84C  F28D   	movff	?___llmod+1,sprintf@tmpval+1
  9227  001506  0060  F850  F28E   	movff	?___llmod+2,sprintf@tmpval+2
  9228  00150C  0060  F854  F28F   	movff	?___llmod+3,sprintf@tmpval+3
  9229                           
  9230                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  9231  001512  0102               	movlb	2	; () banked
  9232  001514  518C               	movf	sprintf@tmpval& (0+255),w,b
  9233  001516  0F30               	addlw	48
  9234  001518  0060  F98B  FFD9   	movff	sprintf@sp,16345
  9235  00151E  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  9236  001524                     L12:
  9237  001524  6EDF               	movwf	16351,c
  9238  001526                     L37:
  9239                           
  9240                           ; BSR set to: 2
  9241  001526  4B62               	infsnz	sprintf@sp& (0+255),f,b
  9242  001528  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  9243  00152A                     l1134:
  9244                           
  9245                           ; BSR set to: 2
  9246                           
  9247                           ; BSR set to: 2
  9248  00152A  079D               	decf	sprintf@c& (0+255),f,b
  9249  00152C  299D               	incf	sprintf@c& (0+255),w,b
  9250  00152E  B4D8               	btfsc	16344,2,c
  9251  001530  D00E               	goto	l1137
  9252  001532  D797               	goto	l1135
  9253  001534                     l12987:
  9254                           
  9255                           ; BSR set to: 2
  9256                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  9257  001534  0060  F98B  FFD9   	movff	sprintf@sp,16345
  9258  00153A  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  9259  001540  0E30               	movlw	48
  9260  001542  6EDF               	movwf	16351,c
  9261                           
  9262                           ; BSR set to: 2
  9263  001544  4B62               	infsnz	sprintf@sp& (0+255),f,b
  9264  001546  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  9265                           
  9266                           ; BSR set to: 2
  9267                           ;doprnt.c: 1209: exp--;
  9268  001548  0790               	decf	sprintf@exp& (0+255),f,b
  9269  00154A  A0D8               	btfss	16344,0,c
  9270  00154C  0791               	decf	(sprintf@exp+1)& (0+255),f,b
  9271  00154E                     l1137:
  9272                           
  9273                           ; BSR set to: 2
  9274                           
  9275                           ; BSR set to: 2
  9276  00154E  BF91               	btfsc	(sprintf@exp+1)& (0+255),7,b
  9277  001550  D005               	goto	u17730
  9278  001552  5191               	movf	(sprintf@exp+1)& (0+255),w,b
  9279  001554  E1EF               	bnz	l12987
  9280  001556  0590               	decf	sprintf@exp& (0+255),w,b
  9281  001558  B0D8               	btfsc	16344,0,c
  9282  00155A  D7EC               	goto	l1138
  9283  00155C                     u17730:
  9284                           
  9285                           ; BSR set to: 2
  9286                           ;doprnt.c: 1210: }
  9287                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9288                           
  9289                           ; BSR set to: 2
  9290  00155C  BF9C               	btfsc	(sprintf@prec+1)& (0+255),7,b
  9291  00155E  D009               	goto	l1140
  9292  001560  519C               	movf	(sprintf@prec+1)& (0+255),w,b
  9293  001562  E104               	bnz	u17740
  9294  001564  0E09               	movlw	9
  9295  001566  5D9B               	subwf	sprintf@prec& (0+255),w,b
  9296  001568  A0D8               	btfss	16344,0,c
  9297  00156A  D003               	goto	l1140
  9298  00156C                     u17740:
  9299                           
  9300                           ; BSR set to: 2
  9301                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  9302  00156C  0E08               	movlw	8
  9303  00156E  6F9D               	movwf	sprintf@c& (0+255),b
  9304  001570  D003               	goto	l1141
  9305  001572                     l1140:
  9306                           
  9307                           ; BSR set to: 2
  9308                           ;doprnt.c: 1213: else
  9309                           ;doprnt.c: 1214: c = prec;
  9310  001572  0060  FA6C  F29D   	movff	sprintf@prec,sprintf@c
  9311  001578                     l1141:
  9312                           
  9313                           ; BSR set to: 2
  9314                           ;doprnt.c: 1215: prec -= c;
  9315                           
  9316                           ; BSR set to: 2
  9317  001578  519D               	movf	sprintf@c& (0+255),w,b
  9318  00157A  5F9B               	subwf	sprintf@prec& (0+255),f,b
  9319  00157C  0E00               	movlw	0
  9320  00157E  BF9D               	btfsc	sprintf@c& (0+255),7,b
  9321  001580  0EFF               	movlw	255
  9322  001582  5B9C               	subwfb	(sprintf@prec+1)& (0+255),f,b
  9323                           
  9324                           ; BSR set to: 2
  9325                           ;doprnt.c: 1217: if(c || flag & 0x800)
  9326  001584  519D               	movf	sprintf@c& (0+255),w,b
  9327  001586  A4D8               	btfss	16344,2,c
  9328  001588  D002               	goto	u17760
  9329                           
  9330                           ; BSR set to: 2
  9331  00158A  A79F               	btfss	(sprintf@flag+1)& (0+255),3,b
  9332  00158C  D00A               	goto	l1142
  9333  00158E                     u17760:
  9334                           
  9335                           ; BSR set to: 2
  9336                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  9337                           
  9338                           ; BSR set to: 2
  9339  00158E  0060  F98B  FFD9   	movff	sprintf@sp,16345
  9340  001594  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  9341  00159A  0E2E               	movlw	46
  9342  00159C  6EDF               	movwf	16351,c
  9343                           
  9344                           ; BSR set to: 2
  9345  00159E  4B62               	infsnz	sprintf@sp& (0+255),f,b
  9346  0015A0  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  9347  0015A2                     l1142:
  9348                           
  9349                           ; BSR set to: 2
  9350                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9351                           
  9352                           ; BSR set to: 2
  9353  0015A2  519D               	movf	sprintf@c& (0+255),w,b
  9354  0015A4  EC0B  F01D         	call	_scale
  9355  0015A8  0060  F8A0  F273   	movff	?_scale,_sprintf$2801
  9356  0015AE  0060  F8A4  F274   	movff	?_scale+1,_sprintf$2801+1
  9357  0015B4  0060  F8A8  F275   	movff	?_scale+2,_sprintf$2801+2
  9358                           
  9359                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9360  0015BA  0060  FA60  F21C   	movff	sprintf@fval,___ftmul@f2
  9361  0015C0  0060  FA64  F21D   	movff	sprintf@fval+1,___ftmul@f2+1
  9362  0015C6  0060  FA68  F21E   	movff	sprintf@fval+2,___ftmul@f2+2
  9363  0015CC  0060  F9CC  F219   	movff	_sprintf$2801,___ftmul@f1
  9364  0015D2  0060  F9D0  F21A   	movff	_sprintf$2801+1,___ftmul@f1+1
  9365  0015D8  0060  F9D4  F21B   	movff	_sprintf$2801+2,___ftmul@f1+2
  9366  0015DE  EC50  F030         	call	___ftmul	;wreg free
  9367  0015E2  0060  F864  F23E   	movff	?___ftmul,___fttol@f1
  9368  0015E8  0060  F868  F23F   	movff	?___ftmul+1,___fttol@f1+1
  9369  0015EE  0060  F86C  F240   	movff	?___ftmul+2,___fttol@f1+2
  9370  0015F4  EC5B  F031         	call	___fttol	;wreg free
  9371  0015F8  0060  F8F8  F294   	movff	?___fttol,sprintf@val
  9372  0015FE  0060  F8FC  F295   	movff	?___fttol+1,sprintf@val+1
  9373  001604  0060  F900  F296   	movff	?___fttol+2,sprintf@val+2
  9374  00160A  0060  F904  F297   	movff	?___fttol+3,sprintf@val+3
  9375                           
  9376                           ;doprnt.c: 1228: while(c--) {
  9377  001610  D09A               	goto	l1145
  9378  001612                     
  9379                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  9380  001612  0060  FA50  F205   	movff	sprintf@val,___lldiv@dividend
  9381  001618  0060  FA54  F206   	movff	sprintf@val+1,___lldiv@dividend+1
  9382  00161E  0060  FA58  F207   	movff	sprintf@val+2,___lldiv@dividend+2
  9383  001624  0060  FA5C  F208   	movff	sprintf@val+3,___lldiv@dividend+3
  9384  00162A  0102               	movlb	2	; () banked
  9385  00162C  519D               	movf	sprintf@c& (0+255),w,b
  9386  00162E  0D04               	mullw	4
  9387  001630  0EBF               	movlw	low _dpowers
  9388  001632  24F3               	addwf	16371,w,c
  9389  001634  6EF6               	movwf	16374,c
  9390  001636  0EFA               	movlw	high _dpowers
  9391  001638  20F4               	addwfc	16372,w,c
  9392  00163A  6EF7               	movwf	16375,c
  9393  00163C                     	if	1	;There are 3 active tblptr bytes
  9394  00163C  6AF8               	clrf	16376,c
  9395  00163E  0E00               	movlw	low (__mediumconst shr (0+16))
  9396  001640  22F8               	addwfc	16376,f,c
  9397  001642                     	endif
  9398  001642  0009               	tblrd		*+
  9399  001644  006F FFD4  F209    	movff	16373,___lldiv@divisor
  9400  00164A  0009               	tblrd		*+
  9401  00164C  006F FFD4  F20A    	movff	16373,___lldiv@divisor+1
  9402  001652  0009               	tblrd		*+
  9403  001654  006F FFD4  F20B    	movff	16373,___lldiv@divisor+2
  9404  00165A  000A               	tblrd		*-
  9405  00165C  006F FFD4  F20C    	movff	16373,___lldiv@divisor+3
  9406  001662  ECD7  F039         	call	___lldiv	;wreg free
  9407  001666  0060  F814  F28C   	movff	?___lldiv,sprintf@tmpval
  9408  00166C  0060  F818  F28D   	movff	?___lldiv+1,sprintf@tmpval+1
  9409  001672  0060  F81C  F28E   	movff	?___lldiv+2,sprintf@tmpval+2
  9410  001678  0060  F820  F28F   	movff	?___lldiv+3,sprintf@tmpval+3
  9411                           
  9412                           ;doprnt.c: 1230: tmpval.vd %= 10;
  9413  00167E  0060  FA30  F212   	movff	sprintf@tmpval,___llmod@dividend
  9414  001684  0060  FA34  F213   	movff	sprintf@tmpval+1,___llmod@dividend+1
  9415  00168A  0060  FA38  F214   	movff	sprintf@tmpval+2,___llmod@dividend+2
  9416  001690  0060  FA3C  F215   	movff	sprintf@tmpval+3,___llmod@dividend+3
  9417  001696  0E0A               	movlw	10
  9418  001698  0102               	movlb	2	; () banked
  9419  00169A  6F16               	movwf	___llmod@divisor& (0+255),b
  9420  00169C  0E00               	movlw	0
  9421  00169E  6F17               	movwf	(___llmod@divisor+1)& (0+255),b
  9422  0016A0  0E00               	movlw	0
  9423  0016A2  6F18               	movwf	(___llmod@divisor+2)& (0+255),b
  9424  0016A4  0E00               	movlw	0
  9425  0016A6  6F19               	movwf	(___llmod@divisor+3)& (0+255),b
  9426  0016A8  EC96  F03C         	call	___llmod	;wreg free
  9427  0016AC  0060  F848  F28C   	movff	?___llmod,sprintf@tmpval
  9428  0016B2  0060  F84C  F28D   	movff	?___llmod+1,sprintf@tmpval+1
  9429  0016B8  0060  F850  F28E   	movff	?___llmod+2,sprintf@tmpval+2
  9430  0016BE  0060  F854  F28F   	movff	?___llmod+3,sprintf@tmpval+3
  9431                           
  9432                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  9433  0016C4  0102               	movlb	2	; () banked
  9434  0016C6  518C               	movf	sprintf@tmpval& (0+255),w,b
  9435  0016C8  0F30               	addlw	48
  9436  0016CA  0060  F98B  FFD9   	movff	sprintf@sp,16345
  9437  0016D0  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  9438  0016D6  6EDF               	movwf	16351,c
  9439                           
  9440                           ; BSR set to: 2
  9441  0016D8  4B62               	infsnz	sprintf@sp& (0+255),f,b
  9442  0016DA  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  9443                           
  9444                           ; BSR set to: 2
  9445                           ;doprnt.c: 1232: val %= dpowers[c];
  9446  0016DC  0060  FA50  F212   	movff	sprintf@val,___llmod@dividend
  9447  0016E2  0060  FA54  F213   	movff	sprintf@val+1,___llmod@dividend+1
  9448  0016E8  0060  FA58  F214   	movff	sprintf@val+2,___llmod@dividend+2
  9449  0016EE  0060  FA5C  F215   	movff	sprintf@val+3,___llmod@dividend+3
  9450  0016F4  519D               	movf	sprintf@c& (0+255),w,b
  9451  0016F6  0D04               	mullw	4
  9452  0016F8  0EBF               	movlw	low _dpowers
  9453  0016FA  24F3               	addwf	16371,w,c
  9454  0016FC  6EF6               	movwf	16374,c
  9455  0016FE  0EFA               	movlw	high _dpowers
  9456  001700  20F4               	addwfc	16372,w,c
  9457  001702  6EF7               	movwf	16375,c
  9458  001704                     	if	1	;There are 3 active tblptr bytes
  9459  001704  6AF8               	clrf	16376,c
  9460  001706  0E00               	movlw	low (__mediumconst shr (0+16))
  9461  001708  22F8               	addwfc	16376,f,c
  9462  00170A                     	endif
  9463  00170A  0009               	tblrd		*+
  9464  00170C  006F FFD4  F216    	movff	16373,___llmod@divisor
  9465  001712  0009               	tblrd		*+
  9466  001714  006F FFD4  F217    	movff	16373,___llmod@divisor+1
  9467  00171A  0009               	tblrd		*+
  9468  00171C  006F FFD4  F218    	movff	16373,___llmod@divisor+2
  9469  001722  000A               	tblrd		*-
  9470  001724  006F FFD4  F219    	movff	16373,___llmod@divisor+3
  9471  00172A  EC96  F03C         	call	___llmod	;wreg free
  9472  00172E  0060  F848  F294   	movff	?___llmod,sprintf@val
  9473  001734  0060  F84C  F295   	movff	?___llmod+1,sprintf@val+1
  9474  00173A  0060  F850  F296   	movff	?___llmod+2,sprintf@val+2
  9475  001740  0060  F854  F297   	movff	?___llmod+3,sprintf@val+3
  9476  001746                     l1145:
  9477  001746  0102               	movlb	2	; () banked
  9478  001748  079D               	decf	sprintf@c& (0+255),f,b
  9479  00174A  299D               	incf	sprintf@c& (0+255),w,b
  9480  00174C  B4D8               	btfsc	16344,2,c
  9481  00174E  D00E               	goto	l1148
  9482  001750  D760               	goto	l1146
  9483  001752                     
  9484                           ; BSR set to: 2
  9485                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  9486                           
  9487                           ; BSR set to: 2
  9488  001752  0060  F98B  FFD9   	movff	sprintf@sp,16345
  9489  001758  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  9490  00175E  0E30               	movlw	48
  9491  001760  6EDF               	movwf	16351,c
  9492                           
  9493                           ; BSR set to: 2
  9494  001762  4B62               	infsnz	sprintf@sp& (0+255),f,b
  9495  001764  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  9496                           
  9497                           ; BSR set to: 2
  9498                           ;doprnt.c: 1237: prec--;
  9499  001766  079B               	decf	sprintf@prec& (0+255),f,b
  9500  001768  A0D8               	btfss	16344,0,c
  9501  00176A  079C               	decf	(sprintf@prec+1)& (0+255),f,b
  9502  00176C                     l1148:
  9503                           
  9504                           ; BSR set to: 2
  9505                           
  9506                           ; BSR set to: 2
  9507  00176C  519B               	movf	sprintf@prec& (0+255),w,b
  9508  00176E  119C               	iorwf	(sprintf@prec+1)& (0+255),w,b
  9509  001770  A4D8               	btfss	16344,2,c
  9510  001772  D7EF               	goto	l1149
  9511                           
  9512                           ; BSR set to: 2
  9513                           ;doprnt.c: 1238: }
  9514                           ;doprnt.c: 1240: if((flag & 0x08) && width > 0)
  9515  001774  B79E               	btfsc	sprintf@flag& (0+255),3,b
  9516                           
  9517                           ; BSR set to: 2
  9518  001776  BF93               	btfsc	(sprintf@width+1)& (0+255),7,b
  9519  001778  D2DE               	goto	u18200
  9520  00177A  5193               	movf	(sprintf@width+1)& (0+255),w,b
  9521  00177C  E103               	bnz	l13035
  9522  00177E  0592               	decf	sprintf@width& (0+255),w,b
  9523  001780  A0D8               	btfss	16344,0,c
  9524  001782  D2D9               	goto	u18200
  9525  001784                     u17800:
  9526  001784                     l13035:
  9527                           
  9528                           ; BSR set to: 2
  9529                           ;doprnt.c: 1242: ((*sp++ = (' ')));
  9530  001784  0060  F98B  FFD9   	movff	sprintf@sp,16345
  9531  00178A  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
  9532  001790  0E20               	movlw	32
  9533  001792  6EDF               	movwf	16351,c
  9534                           
  9535                           ; BSR set to: 2
  9536  001794  4B62               	infsnz	sprintf@sp& (0+255),f,b
  9537  001796  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
  9538                           
  9539                           ; BSR set to: 2
  9540                           ;doprnt.c: 1243: while(--width);
  9541  001798  0792               	decf	sprintf@width& (0+255),f,b
  9542  00179A  A0D8               	btfss	16344,0,c
  9543  00179C  0793               	decf	(sprintf@width+1)& (0+255),f,b
  9544  00179E  5192               	movf	sprintf@width& (0+255),w,b
  9545  0017A0  1193               	iorwf	(sprintf@width+1)& (0+255),w,b
  9546  0017A2  B4D8               	btfsc	16344,2,c
  9547  0017A4  D2C8               	goto	u18200
  9548  0017A6  D7EE               	goto	u17800
  9549  0017A8                     l1006:
  9550                           
  9551                           ; BSR set to: 2
  9552                           ;doprnt.c: 1246: }
  9553                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  9554  0017A8  BF9E               	btfsc	sprintf@flag& (0+255),7,b
  9555  0017AA  D038               	goto	l1154
  9556                           
  9557                           ; BSR set to: 2
  9558                           ;doprnt.c: 1253: {
  9559                           ;doprnt.c: 1255: if(flag & 0x10)
  9560  0017AC  A99E               	btfss	sprintf@flag& (0+255),4,b
  9561  0017AE  D014               	goto	l1155
  9562                           
  9563                           ; BSR set to: 2
  9564                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  9565  0017B0  0060  FA2B  FFD9   	movff	sprintf@ap,16345
  9566  0017B6  0060  FA2F  FFDA   	movff	sprintf@ap+1,16346
  9567  0017BC  006F FF78  F294    	movff	16350,sprintf@val
  9568  0017C2  006F FF78  F295    	movff	16350,sprintf@val+1
  9569  0017C8  006F FF78  F296    	movff	16350,sprintf@val+2
  9570  0017CE  006F FF78  F297    	movff	16350,sprintf@val+3
  9571                           
  9572                           ; BSR set to: 2
  9573  0017D4  0E04               	movlw	4
  9574  0017D6  D012               	goto	L13
  9575  0017D8                     l1155:
  9576                           
  9577                           ; BSR set to: 2
  9578                           ;doprnt.c: 1257: else
  9579                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  9580                           
  9581                           ; BSR set to: 2
  9582  0017D8  0060  FA2B  FFD9   	movff	sprintf@ap,16345
  9583  0017DE  0060  FA2F  FFDA   	movff	sprintf@ap+1,16346
  9584  0017E4  006F FF78  F294    	movff	16350,sprintf@val
  9585  0017EA  006F FF74  F295    	movff	16349,sprintf@val+1
  9586  0017F0  0E00               	movlw	0
  9587  0017F2  BF95               	btfsc	(sprintf@val+1)& (0+255),7,b
  9588  0017F4  0EFF               	movlw	-1
  9589  0017F6  6F96               	movwf	(sprintf@val+2)& (0+255),b
  9590  0017F8  6F97               	movwf	(sprintf@val+3)& (0+255),b
  9591                           
  9592                           ; BSR set to: 2
  9593  0017FA  0E02               	movlw	2
  9594  0017FC                     L13:
  9595  0017FC  278A               	addwf	sprintf@ap& (0+255),f,b
  9596  0017FE  0E00               	movlw	0
  9597  001800  238B               	addwfc	(sprintf@ap+1)& (0+255),f,b
  9598                           
  9599                           ; BSR set to: 2
  9600                           ;doprnt.c: 1261: if((long)val < 0) {
  9601                           
  9602                           ; BSR set to: 2
  9603  001802  AF97               	btfss	(sprintf@val+3)& (0+255),7,b
  9604  001804  D039               	goto	l1160
  9605                           
  9606                           ; BSR set to: 2
  9607                           ;doprnt.c: 1262: flag |= 0x03;
  9608  001806  0E03               	movlw	3
  9609  001808  139E               	iorwf	sprintf@flag& (0+255),f,b
  9610                           
  9611                           ; BSR set to: 2
  9612                           ;doprnt.c: 1263: val = -val;
  9613  00180A  1F97               	comf	(sprintf@val+3)& (0+255),f,b
  9614  00180C  1F96               	comf	(sprintf@val+2)& (0+255),f,b
  9615  00180E  1F95               	comf	(sprintf@val+1)& (0+255),f,b
  9616  001810  6D94               	negf	sprintf@val& (0+255),b
  9617  001812  0E00               	movlw	0
  9618  001814  2395               	addwfc	(sprintf@val+1)& (0+255),f,b
  9619  001816  2396               	addwfc	(sprintf@val+2)& (0+255),f,b
  9620  001818  2397               	addwfc	(sprintf@val+3)& (0+255),f,b
  9621                           
  9622                           ; BSR set to: 2
  9623                           ;doprnt.c: 1264: }
  9624                           ;doprnt.c: 1266: }
  9625  00181A  D02E               	goto	l1160
  9626  00181C                     l1154:
  9627                           
  9628                           ; BSR set to: 2
  9629                           ;doprnt.c: 1268: else
  9630                           ;doprnt.c: 1273: {
  9631                           ;doprnt.c: 1281: if(flag & 0x10)
  9632  00181C  A99E               	btfss	sprintf@flag& (0+255),4,b
  9633  00181E  D014               	goto	l1159
  9634                           
  9635                           ; BSR set to: 2
  9636                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  9637  001820  0060  FA2B  FFD9   	movff	sprintf@ap,16345
  9638  001826  0060  FA2F  FFDA   	movff	sprintf@ap+1,16346
  9639  00182C  006F FF78  F294    	movff	16350,sprintf@val
  9640  001832  006F FF78  F295    	movff	16350,sprintf@val+1
  9641  001838  006F FF78  F296    	movff	16350,sprintf@val+2
  9642  00183E  006F FF78  F297    	movff	16350,sprintf@val+3
  9643                           
  9644                           ; BSR set to: 2
  9645  001844  0E04               	movlw	4
  9646  001846  D015               	goto	L14
  9647  001848                     l1159:
  9648                           
  9649                           ; BSR set to: 2
  9650                           ;doprnt.c: 1283: else
  9651                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  9652                           
  9653                           ; BSR set to: 2
  9654  001848  0060  FA2B  FFD9   	movff	sprintf@ap,16345
  9655  00184E  0060  FA2F  FFDA   	movff	sprintf@ap+1,16346
  9656  001854  006F FF78  F26D    	movff	16350,??_sprintf
  9657  00185A  006F FF74  F26E    	movff	16349,??_sprintf+1
  9658  001860  0060  F9B4  F294   	movff	??_sprintf,sprintf@val
  9659  001866  0060  F9B8  F295   	movff	??_sprintf+1,sprintf@val+1
  9660  00186C  6B96               	clrf	(sprintf@val+2)& (0+255),b
  9661  00186E  6B97               	clrf	(sprintf@val+3)& (0+255),b
  9662                           
  9663                           ; BSR set to: 2
  9664  001870  0E02               	movlw	2
  9665  001872                     L14:
  9666  001872  278A               	addwf	sprintf@ap& (0+255),f,b
  9667  001874  0E00               	movlw	0
  9668  001876  238B               	addwfc	(sprintf@ap+1)& (0+255),f,b
  9669  001878                     l1160:
  9670                           
  9671                           ; BSR set to: 2
  9672                           ;doprnt.c: 1287: }
  9673                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  9674                           
  9675                           ; BSR set to: 2
  9676                           
  9677                           ; BSR set to: 2
  9678  001878  519B               	movf	sprintf@prec& (0+255),w,b
  9679  00187A  119C               	iorwf	(sprintf@prec+1)& (0+255),w,b
  9680  00187C  A4D8               	btfss	16344,2,c
  9681  00187E  D04B               	goto	l1162
  9682                           
  9683                           ; BSR set to: 2
  9684  001880  5194               	movf	sprintf@val& (0+255),w,b
  9685  001882  1195               	iorwf	(sprintf@val+1)& (0+255),w,b
  9686  001884  1196               	iorwf	(sprintf@val+2)& (0+255),w,b
  9687  001886  1197               	iorwf	(sprintf@val+3)& (0+255),w,b
  9688  001888  A4D8               	btfss	16344,2,c
  9689  00188A  D045               	goto	l1162
  9690                           
  9691                           ; BSR set to: 2
  9692                           ;doprnt.c: 1291: prec++;
  9693  00188C  4B9B               	infsnz	sprintf@prec& (0+255),f,b
  9694  00188E  2B9C               	incf	(sprintf@prec+1)& (0+255),f,b
  9695                           
  9696                           ; BSR set to: 2
  9697                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  9698  001890  D042               	goto	l1162
  9699  001892                     
  9700                           ; BSR set to: 2
  9701                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9702                           
  9703                           ; BSR set to: 2
  9704  001892  0E01               	movlw	1
  9705  001894  6F9D               	movwf	sprintf@c& (0+255),b
  9706  001896                     l13073:
  9707                           
  9708                           ; BSR set to: 2
  9709  001896  0E0A               	movlw	10
  9710  001898  199D               	xorwf	sprintf@c& (0+255),w,b
  9711  00189A  B4D8               	btfsc	16344,2,c
  9712  00189C  D044               	goto	l1167
  9713                           
  9714                           ; BSR set to: 2
  9715                           ;doprnt.c: 1306: if(val < dpowers[c])
  9716                           
  9717                           ; BSR set to: 2
  9718                           
  9719                           ; BSR set to: 2
  9720  00189E  519D               	movf	sprintf@c& (0+255),w,b
  9721  0018A0  0D04               	mullw	4
  9722  0018A2  0EBF               	movlw	low _dpowers
  9723  0018A4  24F3               	addwf	16371,w,c
  9724  0018A6  6EF6               	movwf	16374,c
  9725  0018A8  0EFA               	movlw	high _dpowers
  9726  0018AA  20F4               	addwfc	16372,w,c
  9727  0018AC  6EF7               	movwf	16375,c
  9728  0018AE                     	if	1	;There are 3 active tblptr bytes
  9729  0018AE  6AF8               	clrf	16376,c
  9730  0018B0  0E00               	movlw	low (__mediumconst shr (0+16))
  9731  0018B2  22F8               	addwfc	16376,f,c
  9732  0018B4                     	endif
  9733  0018B4  0009               	tblrd		*+
  9734  0018B6  50F5               	movf	16373,w,c
  9735  0018B8  5D94               	subwf	sprintf@val& (0+255),w,b
  9736  0018BA  0009               	tblrd		*+
  9737  0018BC  50F5               	movf	16373,w,c
  9738  0018BE  5995               	subwfb	(sprintf@val+1)& (0+255),w,b
  9739  0018C0  0009               	tblrd		*+
  9740  0018C2  50F5               	movf	16373,w,c
  9741  0018C4  5996               	subwfb	(sprintf@val+2)& (0+255),w,b
  9742  0018C6  0009               	tblrd		*+
  9743  0018C8  50F5               	movf	16373,w,c
  9744  0018CA  5997               	subwfb	(sprintf@val+3)& (0+255),w,b
  9745  0018CC  A0D8               	btfss	16344,0,c
  9746  0018CE  D02B               	goto	l1167
  9747                           
  9748                           ; BSR set to: 2
  9749                           
  9750                           ; BSR set to: 2
  9751                           
  9752                           ; BSR set to: 2
  9753                           ;doprnt.c: 1307: break;
  9754  0018D0  2B9D               	incf	sprintf@c& (0+255),f,b
  9755  0018D2  D7E1               	goto	l13073
  9756  0018D4                     
  9757                           ; BSR set to: 2
  9758                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  9759                           
  9760                           ; BSR set to: 2
  9761  0018D4  0E01               	movlw	1
  9762  0018D6  6F9D               	movwf	sprintf@c& (0+255),b
  9763  0018D8                     l13087:
  9764                           
  9765                           ; BSR set to: 2
  9766  0018D8  0E08               	movlw	8
  9767  0018DA  199D               	xorwf	sprintf@c& (0+255),w,b
  9768  0018DC  B4D8               	btfsc	16344,2,c
  9769  0018DE  D023               	goto	l1167
  9770                           
  9771                           ; BSR set to: 2
  9772                           ;doprnt.c: 1317: if(val < hexpowers[c])
  9773                           
  9774                           ; BSR set to: 2
  9775                           
  9776                           ; BSR set to: 2
  9777  0018E0  519D               	movf	sprintf@c& (0+255),w,b
  9778  0018E2  0D04               	mullw	4
  9779  0018E4  0E35               	movlw	low _hexpowers
  9780  0018E6  24F3               	addwf	16371,w,c
  9781  0018E8  6EF6               	movwf	16374,c
  9782  0018EA  0EFB               	movlw	high _hexpowers
  9783  0018EC  20F4               	addwfc	16372,w,c
  9784  0018EE  6EF7               	movwf	16375,c
  9785  0018F0                     	if	1	;There are 3 active tblptr bytes
  9786  0018F0  6AF8               	clrf	16376,c
  9787  0018F2  0E00               	movlw	low (__mediumconst shr (0+16))
  9788  0018F4  22F8               	addwfc	16376,f,c
  9789  0018F6                     	endif
  9790  0018F6  0009               	tblrd		*+
  9791  0018F8  50F5               	movf	16373,w,c
  9792  0018FA  5D94               	subwf	sprintf@val& (0+255),w,b
  9793  0018FC  0009               	tblrd		*+
  9794  0018FE  50F5               	movf	16373,w,c
  9795  001900  5995               	subwfb	(sprintf@val+1)& (0+255),w,b
  9796  001902  0009               	tblrd		*+
  9797  001904  50F5               	movf	16373,w,c
  9798  001906  5996               	subwfb	(sprintf@val+2)& (0+255),w,b
  9799  001908  0009               	tblrd		*+
  9800  00190A  50F5               	movf	16373,w,c
  9801  00190C  5997               	subwfb	(sprintf@val+3)& (0+255),w,b
  9802  00190E  A0D8               	btfss	16344,0,c
  9803  001910  D00A               	goto	l1167
  9804                           
  9805                           ; BSR set to: 2
  9806                           
  9807                           ; BSR set to: 2
  9808                           
  9809                           ; BSR set to: 2
  9810                           ;doprnt.c: 1318: break;
  9811  001912  2B9D               	incf	sprintf@c& (0+255),f,b
  9812  001914  D7E1               	goto	l13087
  9813  001916                     l1162:
  9814                           
  9815                           ; BSR set to: 2
  9816                           
  9817                           ; BSR set to: 2
  9818  001916  519E               	movf	sprintf@flag& (0+255),w,b
  9819  001918  0B80               	andlw	128
  9820                           
  9821                           ; Switch size 1, requested type "space"
  9822                           ; Number of cases is 2, Range of values is 0 to 128
  9823                           ; switch strategies available:
  9824                           ; Name         Instructions Cycles
  9825                           ; simple_byte            7     4 (average)
  9826                           ;	Chosen strategy is simple_byte
  9827  00191A  0A00               	xorlw	0	; case 0
  9828  00191C  B4D8               	btfsc	16344,2,c
  9829  00191E  D7B9               	goto	l1163
  9830  001920  0A80               	xorlw	128	; case 128
  9831  001922  B4D8               	btfsc	16344,2,c
  9832  001924  D7D7               	goto	l1168
  9833  001926                     l1167:
  9834                           
  9835                           ; BSR set to: 2
  9836                           ;doprnt.c: 1339: if(c < prec)
  9837                           
  9838                           ; BSR set to: 2
  9839  001926  0E80               	movlw	128
  9840  001928  BF9D               	btfsc	sprintf@c& (0+255),7,b
  9841  00192A  0E7F               	movlw	127
  9842  00192C  6F6D               	movwf	??_sprintf& (0+255),b
  9843  00192E  519B               	movf	sprintf@prec& (0+255),w,b
  9844  001930  5D9D               	subwf	sprintf@c& (0+255),w,b
  9845  001932  519C               	movf	(sprintf@prec+1)& (0+255),w,b
  9846  001934  0A80               	xorlw	128
  9847  001936  596D               	subwfb	??_sprintf& (0+255),w,b
  9848  001938  B0D8               	btfsc	16344,0,c
  9849  00193A  D004               	goto	l1172
  9850                           
  9851                           ; BSR set to: 2
  9852                           ;doprnt.c: 1340: c = prec;
  9853  00193C  0060  FA6C  F29D   	movff	sprintf@prec,sprintf@c
  9854  001942  D010               	goto	l1174
  9855  001944                     l1172:
  9856                           
  9857                           ; BSR set to: 2
  9858                           ;doprnt.c: 1341: else if(prec < c)
  9859                           
  9860                           ; BSR set to: 2
  9861  001944  519C               	movf	(sprintf@prec+1)& (0+255),w,b
  9862  001946  0A80               	xorlw	128
  9863  001948  6F6D               	movwf	??_sprintf& (0+255),b
  9864  00194A  519D               	movf	sprintf@c& (0+255),w,b
  9865  00194C  5D9B               	subwf	sprintf@prec& (0+255),w,b
  9866  00194E  0E80               	movlw	128
  9867  001950  BF9D               	btfsc	sprintf@c& (0+255),7,b
  9868  001952  0E7F               	movlw	127
  9869  001954  596D               	subwfb	??_sprintf& (0+255),w,b
  9870  001956  B0D8               	btfsc	16344,0,c
  9871  001958  D005               	goto	l1174
  9872                           
  9873                           ; BSR set to: 2
  9874                           ;doprnt.c: 1342: prec = c;
  9875  00195A  519D               	movf	sprintf@c& (0+255),w,b
  9876  00195C  6F9B               	movwf	sprintf@prec& (0+255),b
  9877  00195E  6B9C               	clrf	(sprintf@prec+1)& (0+255),b
  9878  001960  BF9B               	btfsc	sprintf@prec& (0+255),7,b
  9879  001962  079C               	decf	(sprintf@prec+1)& (0+255),f,b
  9880  001964                     l1174:
  9881                           
  9882                           ; BSR set to: 2
  9883                           ;doprnt.c: 1345: if(width && flag & 0x03)
  9884                           
  9885                           ; BSR set to: 2
  9886                           
  9887                           ; BSR set to: 2
  9888  001964  5192               	movf	sprintf@width& (0+255),w,b
  9889  001966  1193               	iorwf	(sprintf@width+1)& (0+255),w,b
  9890  001968  B4D8               	btfsc	16344,2,c
  9891  00196A  D00D               	goto	l1175
  9892                           
  9893                           ; BSR set to: 2
  9894  00196C  0E03               	movlw	3
  9895  00196E  159E               	andwf	sprintf@flag& (0+255),w,b
  9896  001970  6F6D               	movwf	??_sprintf& (0+255),b
  9897  001972  0E00               	movlw	0
  9898  001974  159F               	andwf	(sprintf@flag+1)& (0+255),w,b
  9899  001976  6F6E               	movwf	(??_sprintf+1)& (0+255),b
  9900  001978  516D               	movf	??_sprintf& (0+255),w,b
  9901  00197A  116E               	iorwf	(??_sprintf+1)& (0+255),w,b
  9902  00197C  B4D8               	btfsc	16344,2,c
  9903  00197E  D003               	goto	l1175
  9904                           
  9905                           ; BSR set to: 2
  9906                           ;doprnt.c: 1346: width--;
  9907  001980  0792               	decf	sprintf@width& (0+255),f,b
  9908  001982  A0D8               	btfss	16344,0,c
  9909  001984  0793               	decf	(sprintf@width+1)& (0+255),f,b
  9910  001986                     l1175:
  9911                           
  9912                           ; BSR set to: 2
  9913                           ;doprnt.c: 1348: if(flag & 0x4000) {
  9914                           
  9915                           ; BSR set to: 2
  9916  001986  AD9F               	btfss	(sprintf@flag+1)& (0+255),6,b
  9917  001988  D013               	goto	l1178
  9918                           
  9919                           ; BSR set to: 2
  9920                           ;doprnt.c: 1349: if(width > prec)
  9921  00198A  5192               	movf	sprintf@width& (0+255),w,b
  9922  00198C  5D9B               	subwf	sprintf@prec& (0+255),w,b
  9923  00198E  519C               	movf	(sprintf@prec+1)& (0+255),w,b
  9924  001990  0A80               	xorlw	128
  9925  001992  6F6D               	movwf	??_sprintf& (0+255),b
  9926  001994  5193               	movf	(sprintf@width+1)& (0+255),w,b
  9927  001996  0A80               	xorlw	128
  9928  001998  596D               	subwfb	??_sprintf& (0+255),w,b
  9929  00199A  B0D8               	btfsc	16344,0,c
  9930  00199C  D005               	goto	l1177
  9931                           
  9932                           ; BSR set to: 2
  9933                           ;doprnt.c: 1350: width -= prec;
  9934  00199E  519B               	movf	sprintf@prec& (0+255),w,b
  9935  0019A0  5F92               	subwf	sprintf@width& (0+255),f,b
  9936  0019A2  519C               	movf	(sprintf@prec+1)& (0+255),w,b
  9937  0019A4  5B93               	subwfb	(sprintf@width+1)& (0+255),f,b
  9938  0019A6  D004               	goto	l1178
  9939  0019A8                     l1177:
  9940                           
  9941                           ; BSR set to: 2
  9942                           ;doprnt.c: 1351: else
  9943                           ;doprnt.c: 1352: width = 0;
  9944                           
  9945                           ; BSR set to: 2
  9946  0019A8  0E00               	movlw	0
  9947  0019AA  6F93               	movwf	(sprintf@width+1)& (0+255),b
  9948  0019AC  0E00               	movlw	0
  9949  0019AE  6F92               	movwf	sprintf@width& (0+255),b
  9950  0019B0                     l1178:
  9951                           
  9952                           ; BSR set to: 2
  9953                           ;doprnt.c: 1353: }
  9954                           ;doprnt.c: 1368: if((flag & (0x80|0x800)) == (0x80|0x800)) {
  9955                           
  9956                           ; BSR set to: 2
  9957                           
  9958                           ; BSR set to: 2
  9959  0019B0  0E80               	movlw	128
  9960  0019B2  6F6D               	movwf	??_sprintf& (0+255),b
  9961  0019B4  0E08               	movlw	8
  9962  0019B6  6F6E               	movwf	(??_sprintf+1)& (0+255),b
  9963  0019B8  0060  FA78  F26F   	movff	sprintf@flag,??_sprintf+2
  9964  0019BE  0060  FA7C  F270   	movff	sprintf@flag+1,??_sprintf+3
  9965  0019C4  516D               	movf	??_sprintf& (0+255),w,b
  9966  0019C6  176F               	andwf	(??_sprintf+2)& (0+255),f,b
  9967  0019C8  516E               	movf	(??_sprintf+1)& (0+255),w,b
  9968  0019CA  1770               	andwf	(??_sprintf+3)& (0+255),f,b
  9969  0019CC  0E80               	movlw	128
  9970  0019CE  196F               	xorwf	(??_sprintf+2)& (0+255),w,b
  9971  0019D0  E115               	bnz	l13133
  9972  0019D2  0E08               	movlw	8
  9973  0019D4  1970               	xorwf	(??_sprintf+3)& (0+255),w,b
  9974  0019D6  A4D8               	btfss	16344,2,c
  9975  0019D8  D011               	goto	l1181
  9976                           
  9977                           ; BSR set to: 2
  9978                           ;doprnt.c: 1372: if(width > 2)
  9979  0019DA  BF93               	btfsc	(sprintf@width+1)& (0+255),7,b
  9980  0019DC  D00B               	goto	l1180
  9981  0019DE  5193               	movf	(sprintf@width+1)& (0+255),w,b
  9982  0019E0  E104               	bnz	u18010
  9983  0019E2  0E03               	movlw	3
  9984  0019E4  5D92               	subwf	sprintf@width& (0+255),w,b
  9985  0019E6  A0D8               	btfss	16344,0,c
  9986  0019E8  D005               	goto	l1180
  9987  0019EA                     u18010:
  9988                           
  9989                           ; BSR set to: 2
  9990                           ;doprnt.c: 1373: width -= 2;
  9991  0019EA  0EFE               	movlw	254
  9992  0019EC  2792               	addwf	sprintf@width& (0+255),f,b
  9993  0019EE  0EFF               	movlw	255
  9994  0019F0  2393               	addwfc	(sprintf@width+1)& (0+255),f,b
  9995  0019F2  D004               	goto	l1181
  9996  0019F4                     l1180:
  9997                           
  9998                           ; BSR set to: 2
  9999                           ;doprnt.c: 1374: else
 10000                           ;doprnt.c: 1375: width = 0;
 10001                           
 10002                           ; BSR set to: 2
 10003  0019F4  0E00               	movlw	0
 10004  0019F6  6F93               	movwf	(sprintf@width+1)& (0+255),b
 10005  0019F8  0E00               	movlw	0
 10006  0019FA  6F92               	movwf	sprintf@width& (0+255),b
 10007  0019FC                     l1181:
 10008  0019FC                     l13133:
 10009                           
 10010                           ; BSR set to: 2
 10011                           ;doprnt.c: 1376: }
 10012                           ;doprnt.c: 1381: if(width > c)
 10013  0019FC  0E80               	movlw	128
 10014  0019FE  BF9D               	btfsc	sprintf@c& (0+255),7,b
 10015  001A00  0E7F               	movlw	127
 10016  001A02  6F6D               	movwf	??_sprintf& (0+255),b
 10017  001A04  5192               	movf	sprintf@width& (0+255),w,b
 10018  001A06  5D9D               	subwf	sprintf@c& (0+255),w,b
 10019  001A08  5193               	movf	(sprintf@width+1)& (0+255),w,b
 10020  001A0A  0A80               	xorlw	128
 10021  001A0C  596D               	subwfb	??_sprintf& (0+255),w,b
 10022  001A0E  B0D8               	btfsc	16344,0,c
 10023  001A10  D007               	goto	l1182
 10024                           
 10025                           ; BSR set to: 2
 10026                           ;doprnt.c: 1382: width -= c;
 10027  001A12  519D               	movf	sprintf@c& (0+255),w,b
 10028  001A14  5F92               	subwf	sprintf@width& (0+255),f,b
 10029  001A16  0E00               	movlw	0
 10030  001A18  BF9D               	btfsc	sprintf@c& (0+255),7,b
 10031  001A1A  0EFF               	movlw	255
 10032  001A1C  5B93               	subwfb	(sprintf@width+1)& (0+255),f,b
 10033  001A1E  D004               	goto	l1183
 10034  001A20                     l1182:
 10035                           
 10036                           ; BSR set to: 2
 10037                           ;doprnt.c: 1383: else
 10038                           ;doprnt.c: 1384: width = 0;
 10039                           
 10040                           ; BSR set to: 2
 10041  001A20  0E00               	movlw	0
 10042  001A22  6F93               	movwf	(sprintf@width+1)& (0+255),b
 10043  001A24  0E00               	movlw	0
 10044  001A26  6F92               	movwf	sprintf@width& (0+255),b
 10045  001A28                     l1183:
 10046                           
 10047                           ; BSR set to: 2
 10048                           ;doprnt.c: 1387: if(flag & 0x04) {
 10049                           
 10050                           ; BSR set to: 2
 10051  001A28  A59E               	btfss	sprintf@flag& (0+255),2,b
 10052  001A2A  D05B               	goto	l1184
 10053                           
 10054                           ; BSR set to: 2
 10055                           ;doprnt.c: 1389: if(flag & 0x02)
 10056  001A2C  A39E               	btfss	sprintf@flag& (0+255),1,b
 10057  001A2E  D014               	goto	l1185
 10058                           
 10059                           ; BSR set to: 2
 10060                           ;doprnt.c: 1390: ((*sp++ = (flag & 0x01 ? '-' : '+')));
 10061  001A30  B19E               	btfsc	sprintf@flag& (0+255),0,b
 10062  001A32  D004               	goto	l1187
 10063                           
 10064                           ; BSR set to: 2
 10065  001A34  0E00               	movlw	0
 10066  001A36  6F80               	movwf	(_sprintf$2175+1)& (0+255),b
 10067  001A38  0E2B               	movlw	43
 10068  001A3A  D003               	goto	L15
 10069  001A3C                     l1187:
 10070                           
 10071                           ; BSR set to: 2
 10072                           
 10073                           ; BSR set to: 2
 10074  001A3C  0E00               	movlw	0
 10075  001A3E  6F80               	movwf	(_sprintf$2175+1)& (0+255),b
 10076  001A40  0E2D               	movlw	45
 10077  001A42                     L15:
 10078  001A42  6F7F               	movwf	_sprintf$2175& (0+255),b
 10079                           
 10080                           ; BSR set to: 2
 10081                           
 10082                           ; BSR set to: 2
 10083  001A44  0060  F98B  FFD9   	movff	sprintf@sp,16345
 10084  001A4A  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
 10085  001A50  0060  F9FF  FFDF   	movff	_sprintf$2175,16351
 10086  001A56  D031               	goto	L18
 10087  001A58                     l1185:
 10088                           
 10089                           ; BSR set to: 2
 10090                           ;doprnt.c: 1396: else
 10091                           ;doprnt.c: 1399: if(flag & 0x01)
 10092  001A58  A19E               	btfss	sprintf@flag& (0+255),0,b
 10093  001A5A  D008               	goto	l1191
 10094                           
 10095                           ; BSR set to: 2
 10096                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 10097  001A5C  0060  F98B  FFD9   	movff	sprintf@sp,16345
 10098  001A62  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
 10099  001A68  0E20               	movlw	32
 10100  001A6A  D026               	goto	L16
 10101  001A6C                     l1191:
 10102                           
 10103                           ; BSR set to: 2
 10104                           ;doprnt.c: 1403: else if((flag & (0x80|0x800)) == (0x80|0x800)) {
 10105                           
 10106                           ; BSR set to: 2
 10107  001A6C  0E80               	movlw	128
 10108  001A6E  6F6D               	movwf	??_sprintf& (0+255),b
 10109  001A70  0E08               	movlw	8
 10110  001A72  6F6E               	movwf	(??_sprintf+1)& (0+255),b
 10111  001A74  0060  FA78  F26F   	movff	sprintf@flag,??_sprintf+2
 10112  001A7A  0060  FA7C  F270   	movff	sprintf@flag+1,??_sprintf+3
 10113  001A80  516D               	movf	??_sprintf& (0+255),w,b
 10114  001A82  176F               	andwf	(??_sprintf+2)& (0+255),f,b
 10115  001A84  516E               	movf	(??_sprintf+1)& (0+255),w,b
 10116  001A86  1770               	andwf	(??_sprintf+3)& (0+255),f,b
 10117  001A88  0E80               	movlw	128
 10118  001A8A  196F               	xorwf	(??_sprintf+2)& (0+255),w,b
 10119  001A8C  E118               	bnz	l13165
 10120  001A8E  0E08               	movlw	8
 10121  001A90  1970               	xorwf	(??_sprintf+3)& (0+255),w,b
 10122  001A92  A4D8               	btfss	16344,2,c
 10123  001A94  D014               	goto	l1193
 10124                           
 10125                           ; BSR set to: 2
 10126                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 10127  001A96  0060  F98B  FFD9   	movff	sprintf@sp,16345
 10128  001A9C  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
 10129  001AA2  0E30               	movlw	48
 10130  001AA4  6EDF               	movwf	16351,c
 10131                           
 10132                           ; BSR set to: 2
 10133  001AA6  4B62               	infsnz	sprintf@sp& (0+255),f,b
 10134  001AA8  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
 10135                           
 10136                           ; BSR set to: 2
 10137                           ;doprnt.c: 1410: ((*sp++ = ('x')));
 10138  001AAA  0060  F98B  FFD9   	movff	sprintf@sp,16345
 10139  001AB0  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
 10140  001AB6  0E78               	movlw	120
 10141  001AB8                     L16:
 10142  001AB8  6EDF               	movwf	16351,c
 10143  001ABA                     L18:
 10144  001ABA  4B62               	infsnz	sprintf@sp& (0+255),f,b
 10145  001ABC  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
 10146  001ABE                     l1193:
 10147  001ABE                     l13165:
 10148                           
 10149                           ; BSR set to: 2
 10150                           ;doprnt.c: 1412: }
 10151                           ;doprnt.c: 1415: if(width)
 10152  001ABE  5192               	movf	sprintf@width& (0+255),w,b
 10153  001AC0  1193               	iorwf	(sprintf@width+1)& (0+255),w,b
 10154  001AC2  B4D8               	btfsc	16344,2,c
 10155  001AC4  D117               	goto	l1209
 10156                           
 10157                           ; BSR set to: 2
 10158                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 10159                           
 10160                           ; BSR set to: 2
 10161                           
 10162                           ;doprnt.c: 1416: do
 10163  001AC6  0060  F98B  FFD9   	movff	sprintf@sp,16345
 10164  001ACC  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
 10165  001AD2  0E30               	movlw	48
 10166  001AD4  6EDF               	movwf	16351,c
 10167                           
 10168                           ; BSR set to: 2
 10169  001AD6  4B62               	infsnz	sprintf@sp& (0+255),f,b
 10170  001AD8  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
 10171                           
 10172                           ; BSR set to: 2
 10173                           ;doprnt.c: 1418: while(--width);
 10174  001ADA  0792               	decf	sprintf@width& (0+255),f,b
 10175  001ADC  A0D8               	btfss	16344,0,c
 10176  001ADE  0793               	decf	(sprintf@width+1)& (0+255),f,b
 10177  001AE0  D7EE               	goto	l1193
 10178  001AE2                     l1184:
 10179                           
 10180                           ; BSR set to: 2
 10181                           ;doprnt.c: 1422: {
 10182                           ;doprnt.c: 1424: if(width
 10183                           ;doprnt.c: 1426: && !(flag & 0x08)
 10184                           ;doprnt.c: 1428: )
 10185                           
 10186                           ; BSR set to: 2
 10187  001AE2  5192               	movf	sprintf@width& (0+255),w,b
 10188  001AE4  1193               	iorwf	(sprintf@width+1)& (0+255),w,b
 10189  001AE6  A4D8               	btfss	16344,2,c
 10190                           
 10191                           ; BSR set to: 2
 10192  001AE8  B79E               	btfsc	sprintf@flag& (0+255),3,b
 10193  001AEA  D011               	goto	u18120
 10194  001AEC                     u18110:
 10195                           
 10196                           ; BSR set to: 2
 10197                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 10198                           
 10199                           ; BSR set to: 2
 10200                           
 10201                           ;doprnt.c: 1429: do
 10202  001AEC  0060  F98B  FFD9   	movff	sprintf@sp,16345
 10203  001AF2  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
 10204  001AF8  0E20               	movlw	32
 10205  001AFA  6EDF               	movwf	16351,c
 10206                           
 10207                           ; BSR set to: 2
 10208  001AFC  4B62               	infsnz	sprintf@sp& (0+255),f,b
 10209  001AFE  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
 10210                           
 10211                           ; BSR set to: 2
 10212                           ;doprnt.c: 1431: while(--width);
 10213  001B00  0792               	decf	sprintf@width& (0+255),f,b
 10214  001B02  A0D8               	btfss	16344,0,c
 10215  001B04  0793               	decf	(sprintf@width+1)& (0+255),f,b
 10216  001B06  5192               	movf	sprintf@width& (0+255),w,b
 10217  001B08  1193               	iorwf	(sprintf@width+1)& (0+255),w,b
 10218  001B0A  A4D8               	btfss	16344,2,c
 10219  001B0C  D7EF               	goto	u18110
 10220  001B0E                     u18120:
 10221                           
 10222                           ; BSR set to: 2
 10223                           ;doprnt.c: 1434: if(flag & 0x02)
 10224                           
 10225                           ; BSR set to: 2
 10226  001B0E  A39E               	btfss	sprintf@flag& (0+255),1,b
 10227  001B10  D014               	goto	l1201
 10228                           
 10229                           ; BSR set to: 2
 10230                           ;doprnt.c: 1435: ((*sp++ = (flag & 0x01 ? '-' : '+')));
 10231  001B12  B19E               	btfsc	sprintf@flag& (0+255),0,b
 10232  001B14  D004               	goto	l1203
 10233                           
 10234                           ; BSR set to: 2
 10235  001B16  0E00               	movlw	0
 10236  001B18  6F82               	movwf	(_sprintf$2176+1)& (0+255),b
 10237  001B1A  0E2B               	movlw	43
 10238  001B1C  D003               	goto	L17
 10239  001B1E                     l1203:
 10240                           
 10241                           ; BSR set to: 2
 10242                           
 10243                           ; BSR set to: 2
 10244  001B1E  0E00               	movlw	0
 10245  001B20  6F82               	movwf	(_sprintf$2176+1)& (0+255),b
 10246  001B22  0E2D               	movlw	45
 10247  001B24                     L17:
 10248  001B24  6F81               	movwf	_sprintf$2176& (0+255),b
 10249                           
 10250                           ; BSR set to: 2
 10251                           
 10252                           ; BSR set to: 2
 10253  001B26  0060  F98B  FFD9   	movff	sprintf@sp,16345
 10254  001B2C  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
 10255  001B32  0060  FA07  FFDF   	movff	_sprintf$2176,16351
 10256  001B38  D00A               	goto	l13195
 10257  001B3A                     l1201:
 10258                           
 10259                           ; BSR set to: 2
 10260                           ;doprnt.c: 1443: else if(flag & 0x01)
 10261  001B3A  A19E               	btfss	sprintf@flag& (0+255),0,b
 10262  001B3C  D00A               	goto	l1207
 10263                           
 10264                           ; BSR set to: 2
 10265                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 10266  001B3E  0060  F98B  FFD9   	movff	sprintf@sp,16345
 10267  001B44  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
 10268  001B4A  0E20               	movlw	32
 10269  001B4C  6EDF               	movwf	16351,c
 10270  001B4E                     l13195:
 10271                           
 10272                           ; BSR set to: 2
 10273  001B4E  4B62               	infsnz	sprintf@sp& (0+255),f,b
 10274  001B50  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
 10275  001B52                     l1207:
 10276                           
 10277                           ; BSR set to: 2
 10278                           ;doprnt.c: 1454: if((flag & (0x80|0x800)) == (0x80|0x800)) {
 10279                           
 10280                           ; BSR set to: 2
 10281                           
 10282                           ; BSR set to: 2
 10283  001B52  0E80               	movlw	128
 10284  001B54  6F6D               	movwf	??_sprintf& (0+255),b
 10285  001B56  0E08               	movlw	8
 10286  001B58  6F6E               	movwf	(??_sprintf+1)& (0+255),b
 10287  001B5A  0060  FA78  F26F   	movff	sprintf@flag,??_sprintf+2
 10288  001B60  0060  FA7C  F270   	movff	sprintf@flag+1,??_sprintf+3
 10289  001B66  516D               	movf	??_sprintf& (0+255),w,b
 10290  001B68  176F               	andwf	(??_sprintf+2)& (0+255),f,b
 10291  001B6A  516E               	movf	(??_sprintf+1)& (0+255),w,b
 10292  001B6C  1770               	andwf	(??_sprintf+3)& (0+255),f,b
 10293  001B6E  0E80               	movlw	128
 10294  001B70  196F               	xorwf	(??_sprintf+2)& (0+255),w,b
 10295  001B72  E103               	bnz	u18161
 10296  001B74  0E08               	movlw	8
 10297  001B76  1970               	xorwf	(??_sprintf+3)& (0+255),w,b
 10298  001B78  A4D8               	btfss	16344,2,c
 10299  001B7A                     u18161:
 10300  001B7A  D0BC               	goto	l1209
 10301                           
 10302                           ; BSR set to: 2
 10303                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 10304  001B7C  0060  F98B  FFD9   	movff	sprintf@sp,16345
 10305  001B82  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
 10306  001B88  0E30               	movlw	48
 10307  001B8A  6EDF               	movwf	16351,c
 10308                           
 10309                           ; BSR set to: 2
 10310  001B8C  4B62               	infsnz	sprintf@sp& (0+255),f,b
 10311  001B8E  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
 10312                           
 10313                           ; BSR set to: 2
 10314                           ;doprnt.c: 1464: ((*sp++ = ('x')));
 10315  001B90  0060  F98B  FFD9   	movff	sprintf@sp,16345
 10316  001B96  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
 10317  001B9C  0E78               	movlw	120
 10318  001B9E  6EDF               	movwf	16351,c
 10319  001BA0  D0A7               	goto	l13217
 10320  001BA2                     
 10321                           ; BSR set to: 2
 10322                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 10323                           
 10324                           ; BSR set to: 2
 10325  001BA2  0060  FA6C  F26D   	movff	sprintf@prec,??_sprintf
 10326  001BA8  0060  FA70  F26E   	movff	sprintf@prec+1,??_sprintf+1
 10327  001BAE  90D8               	bcf	16344,0,c
 10328  001BB0  376D               	rlcf	??_sprintf& (0+255),f,b
 10329  001BB2  376E               	rlcf	(??_sprintf+1)& (0+255),f,b
 10330  001BB4  90D8               	bcf	16344,0,c
 10331  001BB6  376D               	rlcf	??_sprintf& (0+255),f,b
 10332  001BB8  376E               	rlcf	(??_sprintf+1)& (0+255),f,b
 10333  001BBA  0EBF               	movlw	low _dpowers
 10334  001BBC  256D               	addwf	??_sprintf& (0+255),w,b
 10335  001BBE  6EF6               	movwf	16374,c
 10336  001BC0  0EFA               	movlw	high _dpowers
 10337  001BC2  216E               	addwfc	(??_sprintf+1)& (0+255),w,b
 10338  001BC4  6EF7               	movwf	16375,c
 10339  001BC6                     	if	1	;There are 3 active tblptr bytes
 10340  001BC6  6AF8               	clrf	16376,c
 10341  001BC8  0E00               	movlw	low (__mediumconst shr (0+16))
 10342  001BCA  22F8               	addwfc	16376,f,c
 10343  001BCC                     	endif
 10344  001BCC  0009               	tblrd		*+
 10345  001BCE  006F FFD4  F209    	movff	16373,___lldiv@divisor
 10346  001BD4  0009               	tblrd		*+
 10347  001BD6  006F FFD4  F20A    	movff	16373,___lldiv@divisor+1
 10348  001BDC  0009               	tblrd		*+
 10349  001BDE  006F FFD4  F20B    	movff	16373,___lldiv@divisor+2
 10350  001BE4  000A               	tblrd		*-
 10351  001BE6  006F FFD4  F20C    	movff	16373,___lldiv@divisor+3
 10352  001BEC  0060  FA50  F205   	movff	sprintf@val,___lldiv@dividend
 10353  001BF2  0060  FA54  F206   	movff	sprintf@val+1,___lldiv@dividend+1
 10354  001BF8  0060  FA58  F207   	movff	sprintf@val+2,___lldiv@dividend+2
 10355  001BFE  0060  FA5C  F208   	movff	sprintf@val+3,___lldiv@dividend+3
 10356  001C04  ECD7  F039         	call	___lldiv	;wreg free
 10357  001C08  0060  F814  F212   	movff	?___lldiv,___llmod@dividend
 10358  001C0E  0060  F818  F213   	movff	?___lldiv+1,___llmod@dividend+1
 10359  001C14  0060  F81C  F214   	movff	?___lldiv+2,___llmod@dividend+2
 10360  001C1A  0060  F820  F215   	movff	?___lldiv+3,___llmod@dividend+3
 10361  001C20  0E0A               	movlw	10
 10362  001C22  0102               	movlb	2	; () banked
 10363  001C24  6F16               	movwf	___llmod@divisor& (0+255),b
 10364  001C26  0E00               	movlw	0
 10365  001C28  6F17               	movwf	(___llmod@divisor+1)& (0+255),b
 10366  001C2A  0E00               	movlw	0
 10367  001C2C  6F18               	movwf	(___llmod@divisor+2)& (0+255),b
 10368  001C2E  0E00               	movlw	0
 10369  001C30  6F19               	movwf	(___llmod@divisor+3)& (0+255),b
 10370  001C32  EC96  F03C         	call	___llmod	;wreg free
 10371  001C36  0102               	movlb	2	; () banked
 10372  001C38  5112               	movf	?___llmod& (0+255),w,b
 10373  001C3A  0F30               	addlw	48
 10374  001C3C  6F9D               	movwf	sprintf@c& (0+255),b
 10375                           
 10376                           ;doprnt.c: 1491: break;
 10377  001C3E  D04F               	goto	l1213
 10378  001C40                     
 10379                           ; BSR set to: 2
 10380                           ;doprnt.c: 1499: {
 10381                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 10382                           
 10383                           ; BSR set to: 2
 10384  001C40  0060  FA50  F205   	movff	sprintf@val,___lldiv@dividend
 10385  001C46  0060  FA54  F206   	movff	sprintf@val+1,___lldiv@dividend+1
 10386  001C4C  0060  FA58  F207   	movff	sprintf@val+2,___lldiv@dividend+2
 10387  001C52  0060  FA5C  F208   	movff	sprintf@val+3,___lldiv@dividend+3
 10388  001C58  0060  FA6C  F26D   	movff	sprintf@prec,??_sprintf
 10389  001C5E  0060  FA70  F26E   	movff	sprintf@prec+1,??_sprintf+1
 10390  001C64  90D8               	bcf	16344,0,c
 10391  001C66  376D               	rlcf	??_sprintf& (0+255),f,b
 10392  001C68  376E               	rlcf	(??_sprintf+1)& (0+255),f,b
 10393  001C6A  90D8               	bcf	16344,0,c
 10394  001C6C  376D               	rlcf	??_sprintf& (0+255),f,b
 10395  001C6E  376E               	rlcf	(??_sprintf+1)& (0+255),f,b
 10396  001C70  0E35               	movlw	low _hexpowers
 10397  001C72  256D               	addwf	??_sprintf& (0+255),w,b
 10398  001C74  6EF6               	movwf	16374,c
 10399  001C76  0EFB               	movlw	high _hexpowers
 10400  001C78  216E               	addwfc	(??_sprintf+1)& (0+255),w,b
 10401  001C7A  6EF7               	movwf	16375,c
 10402  001C7C                     	if	1	;There are 3 active tblptr bytes
 10403  001C7C  6AF8               	clrf	16376,c
 10404  001C7E  0E00               	movlw	low (__mediumconst shr (0+16))
 10405  001C80  22F8               	addwfc	16376,f,c
 10406  001C82                     	endif
 10407  001C82  0009               	tblrd		*+
 10408  001C84  006F FFD4  F209    	movff	16373,___lldiv@divisor
 10409  001C8A  0009               	tblrd		*+
 10410  001C8C  006F FFD4  F20A    	movff	16373,___lldiv@divisor+1
 10411  001C92  0009               	tblrd		*+
 10412  001C94  006F FFD4  F20B    	movff	16373,___lldiv@divisor+2
 10413  001C9A  000A               	tblrd		*-
 10414  001C9C  006F FFD4  F20C    	movff	16373,___lldiv@divisor+3
 10415  001CA2  ECD7  F039         	call	___lldiv	;wreg free
 10416  001CA6  0102               	movlb	2	; () banked
 10417  001CA8  5105               	movf	?___lldiv& (0+255),w,b
 10418  001CAA  0B0F               	andlw	15
 10419  001CAC  6F76               	movwf	sprintf@idx& (0+255),b
 10420                           
 10421                           ; BSR set to: 2
 10422                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 10423  001CAE  5176               	movf	sprintf@idx& (0+255),w,b
 10424  001CB0  0D01               	mullw	1
 10425  001CB2  0ECC               	movlw	low STR_113
 10426  001CB4  24F3               	addwf	16371,w,c
 10427  001CB6  6EF6               	movwf	16374,c
 10428  001CB8  0EFE               	movlw	high STR_113
 10429  001CBA  20F4               	addwfc	16372,w,c
 10430  001CBC  6EF7               	movwf	16375,c
 10431  001CBE                     	if	1	;There are 3 active tblptr bytes
 10432  001CBE  6AF8               	clrf	16376,c
 10433  001CC0  0E00               	movlw	low (__mediumconst shr (0+16))
 10434  001CC2  22F8               	addwfc	16376,f,c
 10435  001CC4                     	endif
 10436  001CC4  0008               	tblrd		*
 10437  001CC6  006F FFD4  F29D    	movff	16373,sprintf@c
 10438                           
 10439                           ; BSR set to: 2
 10440                           ;doprnt.c: 1523: }
 10441                           
 10442                           ;doprnt.c: 1508: }
 10443                           ;doprnt.c: 1510: break;
 10444  001CCC  D008               	goto	l1213
 10445  001CCE                     l13213:
 10446                           
 10447                           ; BSR set to: 2
 10448  001CCE  519E               	movf	sprintf@flag& (0+255),w,b
 10449  001CD0  0B80               	andlw	128
 10450                           
 10451                           ; Switch size 1, requested type "space"
 10452                           ; Number of cases is 2, Range of values is 0 to 128
 10453                           ; switch strategies available:
 10454                           ; Name         Instructions Cycles
 10455                           ; simple_byte            7     4 (average)
 10456                           ;	Chosen strategy is simple_byte
 10457  001CD2  0A00               	xorlw	0	; case 0
 10458  001CD4  B4D8               	btfsc	16344,2,c
 10459  001CD6  D765               	goto	l1212
 10460  001CD8  0A80               	xorlw	128	; case 128
 10461  001CDA  B4D8               	btfsc	16344,2,c
 10462  001CDC  D7B1               	goto	l1214
 10463  001CDE                     l1213:
 10464                           
 10465                           ; BSR set to: 2
 10466                           ;doprnt.c: 1524: ((*sp++ = (c)));
 10467                           
 10468                           ; BSR set to: 2
 10469  001CDE  0060  F98B  FFD9   	movff	sprintf@sp,16345
 10470  001CE4  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
 10471  001CEA  0060  FA77  FFDF   	movff	sprintf@c,16351
 10472  001CF0                     l13217:
 10473                           
 10474                           ; BSR set to: 2
 10475  001CF0  4B62               	infsnz	sprintf@sp& (0+255),f,b
 10476  001CF2  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
 10477  001CF4                     l1209:
 10478                           
 10479                           ; BSR set to: 2
 10480                           
 10481                           ; BSR set to: 2
 10482  001CF4  079B               	decf	sprintf@prec& (0+255),f,b
 10483  001CF6  A0D8               	btfss	16344,0,c
 10484  001CF8  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 10485  001CFA  299B               	incf	sprintf@prec& (0+255),w,b
 10486  001CFC  E1E8               	bnz	l13213
 10487  001CFE  299C               	incf	(sprintf@prec+1)& (0+255),w,b
 10488  001D00  A4D8               	btfss	16344,2,c
 10489  001D02  D7E5               	goto	l1211
 10490                           
 10491                           ; BSR set to: 2
 10492                           ;doprnt.c: 1525: }
 10493                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 10494  001D04  B79E               	btfsc	sprintf@flag& (0+255),3,b
 10495                           
 10496                           ; BSR set to: 2
 10497  001D06  BF93               	btfsc	(sprintf@width+1)& (0+255),7,b
 10498  001D08  D016               	goto	u18200
 10499  001D0A  5193               	movf	(sprintf@width+1)& (0+255),w,b
 10500  001D0C  E103               	bnz	l13223
 10501  001D0E  0592               	decf	sprintf@width& (0+255),w,b
 10502  001D10  A0D8               	btfss	16344,0,c
 10503  001D12  D011               	goto	u18200
 10504  001D14                     u18190:
 10505  001D14                     l13223:
 10506                           
 10507                           ; BSR set to: 2
 10508                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 10509  001D14  0060  F98B  FFD9   	movff	sprintf@sp,16345
 10510  001D1A  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
 10511  001D20  0E20               	movlw	32
 10512  001D22  6EDF               	movwf	16351,c
 10513                           
 10514                           ; BSR set to: 2
 10515  001D24  4B62               	infsnz	sprintf@sp& (0+255),f,b
 10516  001D26  2B63               	incf	(sprintf@sp+1)& (0+255),f,b
 10517                           
 10518                           ; BSR set to: 2
 10519                           ;doprnt.c: 1531: while(--width);
 10520  001D28  0792               	decf	sprintf@width& (0+255),f,b
 10521  001D2A  A0D8               	btfss	16344,0,c
 10522  001D2C  0793               	decf	(sprintf@width+1)& (0+255),f,b
 10523  001D2E  5192               	movf	sprintf@width& (0+255),w,b
 10524  001D30  1193               	iorwf	(sprintf@width+1)& (0+255),w,b
 10525  001D32  A4D8               	btfss	16344,2,c
 10526  001D34  D7EF               	goto	u18190
 10527  001D36                     u18200:
 10528                           
 10529                           ; BSR set to: 2
 10530                           
 10531                           ; BSR set to: 2
 10532                           
 10533                           ; BSR set to: 2
 10534                           
 10535                           ; BSR set to: 2
 10536  001D36  0060  F993  FFF6   	movff	sprintf@f,16374
 10537  001D3C  0060  F997  FFF7   	movff	sprintf@f+1,16375
 10538  001D42  4B64               	infsnz	sprintf@f& (0+255),f,b
 10539  001D44  2B65               	incf	(sprintf@f+1)& (0+255),f,b
 10540  001D46                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10541  001D46  6AF8               	clrf	16376,c
 10542  001D48                     	endif
 10543  001D48                     	if	0	;tblptru may be non-zero
 10544  001D48                     	endif
 10545  001D48  0008               	tblrd		*
 10546  001D4A  006F FFD4  F29D    	movff	16373,sprintf@c
 10547  001D50  519D               	movf	sprintf@c& (0+255),w,b
 10548  001D52  A4D8               	btfss	16344,2,c
 10549  001D54  EF60  F000         	goto	l948
 10550  001D58                     u18210:
 10551                           
 10552                           ; BSR set to: 2
 10553                           ;doprnt.c: 1538: *sp = 0;
 10554                           
 10555                           ; BSR set to: 2
 10556                           
 10557                           ;doprnt.c: 1533: }
 10558                           ;doprnt.c: 1535: alldone:
 10559                           
 10560                           ; BSR set to: 2
 10561  001D58  0060  F98B  FFD9   	movff	sprintf@sp,16345
 10562  001D5E  0060  F98F  FFDA   	movff	sprintf@sp+1,16346
 10563  001D64  0E00               	movlw	0
 10564  001D66  6EDF               	movwf	16351,c
 10565  001D68  0012               	return	
 10566  001D6A                     __end_of_sprintf:
 10567                           	opt stack 0
 10568                           
 10569 ;; *************** function _scale *****************
 10570 ;; Defined at:
 10571 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 10572 ;; Parameters:    Size  Location     Type
 10573 ;;  scl             1    wreg     char 
 10574 ;; Auto vars:     Size  Location     Type
 10575 ;;  scl             1   46[BANK2 ] char 
 10576 ;; Return value:  Size  Location     Type
 10577 ;;                  3   40[BANK2 ] char 
 10578 ;; Registers used:
 10579 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10580 ;; Tracked objects:
 10581 ;;		On entry : 0/0
 10582 ;;		On exit  : 0/0
 10583 ;;		Unchanged: 0/0
 10584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10585 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10586 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10588 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10589 ;;Total ram usage:        7 bytes
 10590 ;; Hardware stack levels used:    1
 10591 ;; Hardware stack levels required when called:   12
 10592 ;; This function calls:
 10593 ;;		___awdiv
 10594 ;;		___awmod
 10595 ;;		___ftmul
 10596 ;;		___wmul
 10597 ;; This function is called by:
 10598 ;;		_sprintf
 10599 ;; This function uses a non-reentrant model
 10600 ;;
 10601                           
 10602                           	psect	text14
 10603  003A16                     __ptext14:
 10604                           	opt stack 0
 10605  003A16                     _scale:
 10606                           	opt stack 17
 10607                           
 10608                           ; BSR set to: 2
 10609                           ;incstack = 0
 10610                           ;scale@scl stored from wreg
 10611  003A16  0102               	movlb	2	; () banked
 10612  003A18  6F2E               	movwf	scale@scl& (0+255),b
 10613                           
 10614                           ;doprnt.c: 428: if(scl < 0) {
 10615  003A1A  0102               	movlb	2	; () banked
 10616  003A1C  AF2E               	btfss	scale@scl& (0+255),7,b
 10617  003A1E  D142               	goto	l937
 10618                           
 10619                           ; BSR set to: 2
 10620                           ;doprnt.c: 429: scl = -scl;
 10621  003A20  6D2E               	negf	scale@scl& (0+255),b
 10622                           
 10623                           ;doprnt.c: 430: if(scl>=110)
 10624  003A22  512E               	movf	scale@scl& (0+255),w,b
 10625  003A24  0A80               	xorlw	128
 10626  003A26  0F12               	addlw	-238
 10627  003A28  A0D8               	btfss	16344,0,c
 10628  003A2A  D0B6               	goto	l938
 10629                           
 10630                           ; BSR set to: 2
 10631                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10632  003A2C  0E00               	movlw	0
 10633  003A2E  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10634  003A30  0E03               	movlw	3
 10635  003A32  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10636  003A34  0E00               	movlw	0
 10637  003A36  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
 10638  003A38  0E0A               	movlw	10
 10639  003A3A  6F0D               	movwf	___awdiv@divisor& (0+255),b
 10640  003A3C  0E00               	movlw	0
 10641  003A3E  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
 10642  003A40  0E64               	movlw	100
 10643  003A42  6F07               	movwf	___awmod@divisor& (0+255),b
 10644  003A44  512E               	movf	scale@scl& (0+255),w,b
 10645  003A46  6F05               	movwf	___awmod@dividend& (0+255),b
 10646  003A48  6B06               	clrf	(___awmod@dividend+1)& (0+255),b
 10647  003A4A  BF05               	btfsc	___awmod@dividend& (0+255),7,b
 10648  003A4C  0706               	decf	(___awmod@dividend+1)& (0+255),f,b
 10649  003A4E  ECAD  F03B         	call	___awmod	;wreg free
 10650  003A52  0060  F814  F20B   	movff	?___awmod,___awdiv@dividend
 10651  003A58  0060  F818  F20C   	movff	?___awmod+1,___awdiv@dividend+1
 10652  003A5E  EC62  F03A         	call	___awdiv	;wreg free
 10653  003A62  0E09               	movlw	9
 10654  003A64  0102               	movlb	2	; () banked
 10655  003A66  250B               	addwf	?___awdiv& (0+255),w,b
 10656  003A68  6F13               	movwf	___wmul@multiplier& (0+255),b
 10657  003A6A  0E00               	movlw	0
 10658  003A6C  210C               	addwfc	(?___awdiv+1)& (0+255),w,b
 10659  003A6E  6F14               	movwf	(___wmul@multiplier+1)& (0+255),b
 10660  003A70  ECB1  F041         	call	___wmul	;wreg free
 10661  003A74  0E0E               	movlw	low __npowers_
 10662  003A76  0102               	movlb	2	; () banked
 10663  003A78  2513               	addwf	?___wmul& (0+255),w,b
 10664  003A7A  6EF6               	movwf	16374,c
 10665  003A7C  0EFB               	movlw	high __npowers_
 10666  003A7E  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10667  003A80  6EF7               	movwf	16375,c
 10668  003A82                     	if	1	;There are 3 active tblptr bytes
 10669  003A82  6AF8               	clrf	16376,c
 10670  003A84  0E00               	movlw	low (__mediumconst shr (0+16))
 10671  003A86  22F8               	addwfc	16376,f,c
 10672  003A88                     	endif
 10673  003A88  0009               	tblrd		*+
 10674  003A8A  006F FFD4  F21C    	movff	16373,___ftmul@f2
 10675  003A90  0009               	tblrd		*+
 10676  003A92  006F FFD4  F21D    	movff	16373,___ftmul@f2+1
 10677  003A98  000A               	tblrd		*-
 10678  003A9A  006F FFD4  F21E    	movff	16373,___ftmul@f2+2
 10679  003AA0  0E00               	movlw	0
 10680  003AA2  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
 10681  003AA4  0E64               	movlw	100
 10682  003AA6  6F0D               	movwf	___awdiv@divisor& (0+255),b
 10683  003AA8  512E               	movf	scale@scl& (0+255),w,b
 10684  003AAA  6F0B               	movwf	___awdiv@dividend& (0+255),b
 10685  003AAC  6B0C               	clrf	(___awdiv@dividend+1)& (0+255),b
 10686  003AAE  BF0B               	btfsc	___awdiv@dividend& (0+255),7,b
 10687  003AB0  070C               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10688  003AB2  EC62  F03A         	call	___awdiv	;wreg free
 10689  003AB6  0E12               	movlw	18
 10690  003AB8  0102               	movlb	2	; () banked
 10691  003ABA  250B               	addwf	?___awdiv& (0+255),w,b
 10692  003ABC  6F13               	movwf	___wmul@multiplier& (0+255),b
 10693  003ABE  0E00               	movlw	0
 10694  003AC0  210C               	addwfc	(?___awdiv+1)& (0+255),w,b
 10695  003AC2  6F14               	movwf	(___wmul@multiplier+1)& (0+255),b
 10696  003AC4  0E00               	movlw	0
 10697  003AC6  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10698  003AC8  0E03               	movlw	3
 10699  003ACA  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10700  003ACC  ECB1  F041         	call	___wmul	;wreg free
 10701  003AD0  0E0E               	movlw	low __npowers_
 10702  003AD2  0102               	movlb	2	; () banked
 10703  003AD4  2513               	addwf	?___wmul& (0+255),w,b
 10704  003AD6  6EF6               	movwf	16374,c
 10705  003AD8  0EFB               	movlw	high __npowers_
 10706  003ADA  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10707  003ADC  6EF7               	movwf	16375,c
 10708  003ADE                     	if	1	;There are 3 active tblptr bytes
 10709  003ADE  6AF8               	clrf	16376,c
 10710  003AE0  0E00               	movlw	low (__mediumconst shr (0+16))
 10711  003AE2  22F8               	addwfc	16376,f,c
 10712  003AE4                     	endif
 10713  003AE4  0009               	tblrd		*+
 10714  003AE6  006F FFD4  F219    	movff	16373,___ftmul@f1
 10715  003AEC  0009               	tblrd		*+
 10716  003AEE  006F FFD4  F21A    	movff	16373,___ftmul@f1+1
 10717  003AF4  000A               	tblrd		*-
 10718  003AF6  006F FFD4  F21B    	movff	16373,___ftmul@f1+2
 10719  003AFC  EC50  F030         	call	___ftmul	;wreg free
 10720  003B00  0060  F864  F22B   	movff	?___ftmul,_scale$2800
 10721  003B06  0060  F868  F22C   	movff	?___ftmul+1,_scale$2800+1
 10722  003B0C  0060  F86C  F22D   	movff	?___ftmul+2,_scale$2800+2
 10723                           
 10724                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10725  003B12  0060  F8AC  F219   	movff	_scale$2800,___ftmul@f1
 10726  003B18  0060  F8B0  F21A   	movff	_scale$2800+1,___ftmul@f1+1
 10727  003B1E  0060  F8B4  F21B   	movff	_scale$2800+2,___ftmul@f1+2
 10728  003B24  0E00               	movlw	0
 10729  003B26  0102               	movlb	2	; () banked
 10730  003B28  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10731  003B2A  0E03               	movlw	3
 10732  003B2C  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10733  003B2E  0E00               	movlw	0
 10734  003B30  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
 10735  003B32  0E0A               	movlw	10
 10736  003B34  6F07               	movwf	___awmod@divisor& (0+255),b
 10737  003B36  512E               	movf	scale@scl& (0+255),w,b
 10738  003B38  6F05               	movwf	___awmod@dividend& (0+255),b
 10739  003B3A  6B06               	clrf	(___awmod@dividend+1)& (0+255),b
 10740  003B3C  BF05               	btfsc	___awmod@dividend& (0+255),7,b
 10741  003B3E  0706               	decf	(___awmod@dividend+1)& (0+255),f,b
 10742  003B40  ECAD  F03B         	call	___awmod	;wreg free
 10743  003B44  0060  F814  F213   	movff	?___awmod,___wmul@multiplier
 10744  003B4A  0060  F818  F214   	movff	?___awmod+1,___wmul@multiplier+1
 10745  003B50  ECB1  F041         	call	___wmul	;wreg free
 10746  003B54  0E0E               	movlw	low __npowers_
 10747  003B56  0102               	movlb	2	; () banked
 10748  003B58  2513               	addwf	?___wmul& (0+255),w,b
 10749  003B5A  6EF6               	movwf	16374,c
 10750  003B5C  0EFB               	movlw	high __npowers_
 10751  003B5E  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10752  003B60  6EF7               	movwf	16375,c
 10753  003B62                     	if	1	;There are 3 active tblptr bytes
 10754  003B62  6AF8               	clrf	16376,c
 10755  003B64  0E00               	movlw	low (__mediumconst shr (0+16))
 10756  003B66  22F8               	addwfc	16376,f,c
 10757  003B68                     	endif
 10758  003B68  0009               	tblrd		*+
 10759  003B6A  006F FFD4  F21C    	movff	16373,___ftmul@f2
 10760  003B70  0009               	tblrd		*+
 10761  003B72  006F FFD4  F21D    	movff	16373,___ftmul@f2+1
 10762  003B78  000A               	tblrd		*-
 10763  003B7A  006F FFD4  F21E    	movff	16373,___ftmul@f2+2
 10764  003B80  EC50  F030         	call	___ftmul	;wreg free
 10765  003B84  0060  F864  F228   	movff	?___ftmul,?_scale
 10766  003B8A  0060  F868  F229   	movff	?___ftmul+1,?_scale+1
 10767  003B90  0060  F86C  F22A   	movff	?___ftmul+2,?_scale+2
 10768  003B96  0012               	return	
 10769  003B98                     l938:
 10770                           
 10771                           ;doprnt.c: 432: else if(scl > 10)
 10772  003B98  0102               	movlb	2	; () banked
 10773  003B9A  512E               	movf	scale@scl& (0+255),w,b
 10774  003B9C  0A80               	xorlw	128
 10775  003B9E  0F75               	addlw	-139
 10776  003BA0  A0D8               	btfss	16344,0,c
 10777  003BA2  D067               	goto	l941
 10778                           
 10779                           ; BSR set to: 2
 10780                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 10781  003BA4  0E00               	movlw	0
 10782  003BA6  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
 10783  003BA8  0E0A               	movlw	10
 10784  003BAA  6F0D               	movwf	___awdiv@divisor& (0+255),b
 10785  003BAC  512E               	movf	scale@scl& (0+255),w,b
 10786  003BAE  6F0B               	movwf	___awdiv@dividend& (0+255),b
 10787  003BB0  6B0C               	clrf	(___awdiv@dividend+1)& (0+255),b
 10788  003BB2  BF0B               	btfsc	___awdiv@dividend& (0+255),7,b
 10789  003BB4  070C               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10790  003BB6  EC62  F03A         	call	___awdiv	;wreg free
 10791  003BBA  0E09               	movlw	9
 10792  003BBC  0102               	movlb	2	; () banked
 10793  003BBE  250B               	addwf	?___awdiv& (0+255),w,b
 10794  003BC0  6F13               	movwf	___wmul@multiplier& (0+255),b
 10795  003BC2  0E00               	movlw	0
 10796  003BC4  210C               	addwfc	(?___awdiv+1)& (0+255),w,b
 10797  003BC6  6F14               	movwf	(___wmul@multiplier+1)& (0+255),b
 10798  003BC8  0E00               	movlw	0
 10799  003BCA  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10800  003BCC  0E03               	movlw	3
 10801  003BCE  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10802  003BD0  ECB1  F041         	call	___wmul	;wreg free
 10803  003BD4  0E0E               	movlw	low __npowers_
 10804  003BD6  0102               	movlb	2	; () banked
 10805  003BD8  2513               	addwf	?___wmul& (0+255),w,b
 10806  003BDA  6EF6               	movwf	16374,c
 10807  003BDC  0EFB               	movlw	high __npowers_
 10808  003BDE  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10809  003BE0  6EF7               	movwf	16375,c
 10810  003BE2                     	if	1	;There are 3 active tblptr bytes
 10811  003BE2  6AF8               	clrf	16376,c
 10812  003BE4  0E00               	movlw	low (__mediumconst shr (0+16))
 10813  003BE6  22F8               	addwfc	16376,f,c
 10814  003BE8                     	endif
 10815  003BE8  0009               	tblrd		*+
 10816  003BEA  006F FFD4  F219    	movff	16373,___ftmul@f1
 10817  003BF0  0009               	tblrd		*+
 10818  003BF2  006F FFD4  F21A    	movff	16373,___ftmul@f1+1
 10819  003BF8  000A               	tblrd		*-
 10820  003BFA  006F FFD4  F21B    	movff	16373,___ftmul@f1+2
 10821  003C00  0E00               	movlw	0
 10822  003C02  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10823  003C04  0E03               	movlw	3
 10824  003C06  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10825  003C08  0E00               	movlw	0
 10826  003C0A  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
 10827  003C0C  0E0A               	movlw	10
 10828  003C0E  6F07               	movwf	___awmod@divisor& (0+255),b
 10829  003C10  512E               	movf	scale@scl& (0+255),w,b
 10830  003C12  6F05               	movwf	___awmod@dividend& (0+255),b
 10831  003C14  6B06               	clrf	(___awmod@dividend+1)& (0+255),b
 10832  003C16  BF05               	btfsc	___awmod@dividend& (0+255),7,b
 10833  003C18  0706               	decf	(___awmod@dividend+1)& (0+255),f,b
 10834  003C1A  ECAD  F03B         	call	___awmod	;wreg free
 10835  003C1E  0060  F814  F213   	movff	?___awmod,___wmul@multiplier
 10836  003C24  0060  F818  F214   	movff	?___awmod+1,___wmul@multiplier+1
 10837  003C2A  ECB1  F041         	call	___wmul	;wreg free
 10838  003C2E  0E0E               	movlw	low __npowers_
 10839  003C30  0102               	movlb	2	; () banked
 10840  003C32  2513               	addwf	?___wmul& (0+255),w,b
 10841  003C34  6EF6               	movwf	16374,c
 10842  003C36  0EFB               	movlw	high __npowers_
 10843  003C38  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10844  003C3A  6EF7               	movwf	16375,c
 10845  003C3C                     	if	1	;There are 3 active tblptr bytes
 10846  003C3C  6AF8               	clrf	16376,c
 10847  003C3E  0E00               	movlw	low (__mediumconst shr (0+16))
 10848  003C40  22F8               	addwfc	16376,f,c
 10849  003C42                     	endif
 10850  003C42  0009               	tblrd		*+
 10851  003C44  006F FFD4  F21C    	movff	16373,___ftmul@f2
 10852  003C4A  0009               	tblrd		*+
 10853  003C4C  006F FFD4  F21D    	movff	16373,___ftmul@f2+1
 10854  003C52  000A               	tblrd		*-
 10855  003C54  006F FFD4  F21E    	movff	16373,___ftmul@f2+2
 10856  003C5A  EC50  F030         	call	___ftmul	;wreg free
 10857  003C5E  0060  F864  F228   	movff	?___ftmul,?_scale
 10858  003C64  0060  F868  F229   	movff	?___ftmul+1,?_scale+1
 10859  003C6A  0060  F86C  F22A   	movff	?___ftmul+2,?_scale+2
 10860  003C70  0012               	return	
 10861  003C72                     l941:
 10862                           
 10863                           ;doprnt.c: 434: return _npowers_[scl];
 10864  003C72  0102               	movlb	2	; () banked
 10865  003C74  512E               	movf	scale@scl& (0+255),w,b
 10866  003C76  0D03               	mullw	3
 10867  003C78  0E0E               	movlw	low __npowers_
 10868  003C7A  24F3               	addwf	16371,w,c
 10869  003C7C  6EF6               	movwf	16374,c
 10870  003C7E  0EFB               	movlw	high __npowers_
 10871  003C80  20F4               	addwfc	16372,w,c
 10872  003C82  6EF7               	movwf	16375,c
 10873  003C84                     	if	1	;There are 3 active tblptr bytes
 10874  003C84  6AF8               	clrf	16376,c
 10875  003C86  0E00               	movlw	low (__mediumconst shr (0+16))
 10876  003C88  22F8               	addwfc	16376,f,c
 10877  003C8A                     	endif
 10878  003C8A  0009               	tblrd		*+
 10879  003C8C  006F FFD4  F228    	movff	16373,?_scale
 10880  003C92  0009               	tblrd		*+
 10881  003C94  006F FFD4  F229    	movff	16373,?_scale+1
 10882  003C9A  000A               	tblrd		*-
 10883  003C9C  006F FFD4  F22A    	movff	16373,?_scale+2
 10884                           
 10885                           ; BSR set to: 2
 10886  003CA2  0012               	return	
 10887  003CA4                     l937:
 10888                           
 10889                           ; BSR set to: 2
 10890                           ;doprnt.c: 435: }
 10891                           ;doprnt.c: 436: if(scl>=110)
 10892                           
 10893                           ; BSR set to: 2
 10894  003CA4  512E               	movf	scale@scl& (0+255),w,b
 10895  003CA6  0A80               	xorlw	128
 10896  003CA8  0F12               	addlw	-238
 10897  003CAA  A0D8               	btfss	16344,0,c
 10898  003CAC  D0B6               	goto	l942
 10899                           
 10900                           ; BSR set to: 2
 10901                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10902  003CAE  0E00               	movlw	0
 10903  003CB0  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10904  003CB2  0E03               	movlw	3
 10905  003CB4  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10906  003CB6  0E00               	movlw	0
 10907  003CB8  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
 10908  003CBA  0E0A               	movlw	10
 10909  003CBC  6F0D               	movwf	___awdiv@divisor& (0+255),b
 10910  003CBE  0E00               	movlw	0
 10911  003CC0  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
 10912  003CC2  0E64               	movlw	100
 10913  003CC4  6F07               	movwf	___awmod@divisor& (0+255),b
 10914  003CC6  512E               	movf	scale@scl& (0+255),w,b
 10915  003CC8  6F05               	movwf	___awmod@dividend& (0+255),b
 10916  003CCA  6B06               	clrf	(___awmod@dividend+1)& (0+255),b
 10917  003CCC  BF05               	btfsc	___awmod@dividend& (0+255),7,b
 10918  003CCE  0706               	decf	(___awmod@dividend+1)& (0+255),f,b
 10919  003CD0  ECAD  F03B         	call	___awmod	;wreg free
 10920  003CD4  0060  F814  F20B   	movff	?___awmod,___awdiv@dividend
 10921  003CDA  0060  F818  F20C   	movff	?___awmod+1,___awdiv@dividend+1
 10922  003CE0  EC62  F03A         	call	___awdiv	;wreg free
 10923  003CE4  0E09               	movlw	9
 10924  003CE6  0102               	movlb	2	; () banked
 10925  003CE8  250B               	addwf	?___awdiv& (0+255),w,b
 10926  003CEA  6F13               	movwf	___wmul@multiplier& (0+255),b
 10927  003CEC  0E00               	movlw	0
 10928  003CEE  210C               	addwfc	(?___awdiv+1)& (0+255),w,b
 10929  003CF0  6F14               	movwf	(___wmul@multiplier+1)& (0+255),b
 10930  003CF2  ECB1  F041         	call	___wmul	;wreg free
 10931  003CF6  0EE7               	movlw	low __powers_
 10932  003CF8  0102               	movlb	2	; () banked
 10933  003CFA  2513               	addwf	?___wmul& (0+255),w,b
 10934  003CFC  6EF6               	movwf	16374,c
 10935  003CFE  0EFA               	movlw	high __powers_
 10936  003D00  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10937  003D02  6EF7               	movwf	16375,c
 10938  003D04                     	if	1	;There are 3 active tblptr bytes
 10939  003D04  6AF8               	clrf	16376,c
 10940  003D06  0E00               	movlw	low (__mediumconst shr (0+16))
 10941  003D08  22F8               	addwfc	16376,f,c
 10942  003D0A                     	endif
 10943  003D0A  0009               	tblrd		*+
 10944  003D0C  006F FFD4  F21C    	movff	16373,___ftmul@f2
 10945  003D12  0009               	tblrd		*+
 10946  003D14  006F FFD4  F21D    	movff	16373,___ftmul@f2+1
 10947  003D1A  000A               	tblrd		*-
 10948  003D1C  006F FFD4  F21E    	movff	16373,___ftmul@f2+2
 10949  003D22  0E00               	movlw	0
 10950  003D24  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
 10951  003D26  0E64               	movlw	100
 10952  003D28  6F0D               	movwf	___awdiv@divisor& (0+255),b
 10953  003D2A  512E               	movf	scale@scl& (0+255),w,b
 10954  003D2C  6F0B               	movwf	___awdiv@dividend& (0+255),b
 10955  003D2E  6B0C               	clrf	(___awdiv@dividend+1)& (0+255),b
 10956  003D30  BF0B               	btfsc	___awdiv@dividend& (0+255),7,b
 10957  003D32  070C               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10958  003D34  EC62  F03A         	call	___awdiv	;wreg free
 10959  003D38  0E12               	movlw	18
 10960  003D3A  0102               	movlb	2	; () banked
 10961  003D3C  250B               	addwf	?___awdiv& (0+255),w,b
 10962  003D3E  6F13               	movwf	___wmul@multiplier& (0+255),b
 10963  003D40  0E00               	movlw	0
 10964  003D42  210C               	addwfc	(?___awdiv+1)& (0+255),w,b
 10965  003D44  6F14               	movwf	(___wmul@multiplier+1)& (0+255),b
 10966  003D46  0E00               	movlw	0
 10967  003D48  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10968  003D4A  0E03               	movlw	3
 10969  003D4C  6F15               	movwf	___wmul@multiplicand& (0+255),b
 10970  003D4E  ECB1  F041         	call	___wmul	;wreg free
 10971  003D52  0EE7               	movlw	low __powers_
 10972  003D54  0102               	movlb	2	; () banked
 10973  003D56  2513               	addwf	?___wmul& (0+255),w,b
 10974  003D58  6EF6               	movwf	16374,c
 10975  003D5A  0EFA               	movlw	high __powers_
 10976  003D5C  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 10977  003D5E  6EF7               	movwf	16375,c
 10978  003D60                     	if	1	;There are 3 active tblptr bytes
 10979  003D60  6AF8               	clrf	16376,c
 10980  003D62  0E00               	movlw	low (__mediumconst shr (0+16))
 10981  003D64  22F8               	addwfc	16376,f,c
 10982  003D66                     	endif
 10983  003D66  0009               	tblrd		*+
 10984  003D68  006F FFD4  F219    	movff	16373,___ftmul@f1
 10985  003D6E  0009               	tblrd		*+
 10986  003D70  006F FFD4  F21A    	movff	16373,___ftmul@f1+1
 10987  003D76  000A               	tblrd		*-
 10988  003D78  006F FFD4  F21B    	movff	16373,___ftmul@f1+2
 10989  003D7E  EC50  F030         	call	___ftmul	;wreg free
 10990  003D82  0060  F864  F22B   	movff	?___ftmul,_scale$2800
 10991  003D88  0060  F868  F22C   	movff	?___ftmul+1,_scale$2800+1
 10992  003D8E  0060  F86C  F22D   	movff	?___ftmul+2,_scale$2800+2
 10993                           
 10994                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10995  003D94  0060  F8AC  F219   	movff	_scale$2800,___ftmul@f1
 10996  003D9A  0060  F8B0  F21A   	movff	_scale$2800+1,___ftmul@f1+1
 10997  003DA0  0060  F8B4  F21B   	movff	_scale$2800+2,___ftmul@f1+2
 10998  003DA6  0E00               	movlw	0
 10999  003DA8  0102               	movlb	2	; () banked
 11000  003DAA  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11001  003DAC  0E03               	movlw	3
 11002  003DAE  6F15               	movwf	___wmul@multiplicand& (0+255),b
 11003  003DB0  0E00               	movlw	0
 11004  003DB2  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
 11005  003DB4  0E0A               	movlw	10
 11006  003DB6  6F07               	movwf	___awmod@divisor& (0+255),b
 11007  003DB8  512E               	movf	scale@scl& (0+255),w,b
 11008  003DBA  6F05               	movwf	___awmod@dividend& (0+255),b
 11009  003DBC  6B06               	clrf	(___awmod@dividend+1)& (0+255),b
 11010  003DBE  BF05               	btfsc	___awmod@dividend& (0+255),7,b
 11011  003DC0  0706               	decf	(___awmod@dividend+1)& (0+255),f,b
 11012  003DC2  ECAD  F03B         	call	___awmod	;wreg free
 11013  003DC6  0060  F814  F213   	movff	?___awmod,___wmul@multiplier
 11014  003DCC  0060  F818  F214   	movff	?___awmod+1,___wmul@multiplier+1
 11015  003DD2  ECB1  F041         	call	___wmul	;wreg free
 11016  003DD6  0EE7               	movlw	low __powers_
 11017  003DD8  0102               	movlb	2	; () banked
 11018  003DDA  2513               	addwf	?___wmul& (0+255),w,b
 11019  003DDC  6EF6               	movwf	16374,c
 11020  003DDE  0EFA               	movlw	high __powers_
 11021  003DE0  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 11022  003DE2  6EF7               	movwf	16375,c
 11023  003DE4                     	if	1	;There are 3 active tblptr bytes
 11024  003DE4  6AF8               	clrf	16376,c
 11025  003DE6  0E00               	movlw	low (__mediumconst shr (0+16))
 11026  003DE8  22F8               	addwfc	16376,f,c
 11027  003DEA                     	endif
 11028  003DEA  0009               	tblrd		*+
 11029  003DEC  006F FFD4  F21C    	movff	16373,___ftmul@f2
 11030  003DF2  0009               	tblrd		*+
 11031  003DF4  006F FFD4  F21D    	movff	16373,___ftmul@f2+1
 11032  003DFA  000A               	tblrd		*-
 11033  003DFC  006F FFD4  F21E    	movff	16373,___ftmul@f2+2
 11034  003E02  EC50  F030         	call	___ftmul	;wreg free
 11035  003E06  0060  F864  F228   	movff	?___ftmul,?_scale
 11036  003E0C  0060  F868  F229   	movff	?___ftmul+1,?_scale+1
 11037  003E12  0060  F86C  F22A   	movff	?___ftmul+2,?_scale+2
 11038  003E18  0012               	return	
 11039  003E1A                     l942:
 11040                           
 11041                           ;doprnt.c: 438: else if(scl > 10)
 11042  003E1A  0102               	movlb	2	; () banked
 11043  003E1C  512E               	movf	scale@scl& (0+255),w,b
 11044  003E1E  0A80               	xorlw	128
 11045  003E20  0F75               	addlw	-139
 11046  003E22  A0D8               	btfss	16344,0,c
 11047  003E24  D067               	goto	l944
 11048                           
 11049                           ; BSR set to: 2
 11050                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 11051  003E26  0E00               	movlw	0
 11052  003E28  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
 11053  003E2A  0E0A               	movlw	10
 11054  003E2C  6F0D               	movwf	___awdiv@divisor& (0+255),b
 11055  003E2E  512E               	movf	scale@scl& (0+255),w,b
 11056  003E30  6F0B               	movwf	___awdiv@dividend& (0+255),b
 11057  003E32  6B0C               	clrf	(___awdiv@dividend+1)& (0+255),b
 11058  003E34  BF0B               	btfsc	___awdiv@dividend& (0+255),7,b
 11059  003E36  070C               	decf	(___awdiv@dividend+1)& (0+255),f,b
 11060  003E38  EC62  F03A         	call	___awdiv	;wreg free
 11061  003E3C  0E09               	movlw	9
 11062  003E3E  0102               	movlb	2	; () banked
 11063  003E40  250B               	addwf	?___awdiv& (0+255),w,b
 11064  003E42  6F13               	movwf	___wmul@multiplier& (0+255),b
 11065  003E44  0E00               	movlw	0
 11066  003E46  210C               	addwfc	(?___awdiv+1)& (0+255),w,b
 11067  003E48  6F14               	movwf	(___wmul@multiplier+1)& (0+255),b
 11068  003E4A  0E00               	movlw	0
 11069  003E4C  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11070  003E4E  0E03               	movlw	3
 11071  003E50  6F15               	movwf	___wmul@multiplicand& (0+255),b
 11072  003E52  ECB1  F041         	call	___wmul	;wreg free
 11073  003E56  0EE7               	movlw	low __powers_
 11074  003E58  0102               	movlb	2	; () banked
 11075  003E5A  2513               	addwf	?___wmul& (0+255),w,b
 11076  003E5C  6EF6               	movwf	16374,c
 11077  003E5E  0EFA               	movlw	high __powers_
 11078  003E60  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 11079  003E62  6EF7               	movwf	16375,c
 11080  003E64                     	if	1	;There are 3 active tblptr bytes
 11081  003E64  6AF8               	clrf	16376,c
 11082  003E66  0E00               	movlw	low (__mediumconst shr (0+16))
 11083  003E68  22F8               	addwfc	16376,f,c
 11084  003E6A                     	endif
 11085  003E6A  0009               	tblrd		*+
 11086  003E6C  006F FFD4  F219    	movff	16373,___ftmul@f1
 11087  003E72  0009               	tblrd		*+
 11088  003E74  006F FFD4  F21A    	movff	16373,___ftmul@f1+1
 11089  003E7A  000A               	tblrd		*-
 11090  003E7C  006F FFD4  F21B    	movff	16373,___ftmul@f1+2
 11091  003E82  0E00               	movlw	0
 11092  003E84  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11093  003E86  0E03               	movlw	3
 11094  003E88  6F15               	movwf	___wmul@multiplicand& (0+255),b
 11095  003E8A  0E00               	movlw	0
 11096  003E8C  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
 11097  003E8E  0E0A               	movlw	10
 11098  003E90  6F07               	movwf	___awmod@divisor& (0+255),b
 11099  003E92  512E               	movf	scale@scl& (0+255),w,b
 11100  003E94  6F05               	movwf	___awmod@dividend& (0+255),b
 11101  003E96  6B06               	clrf	(___awmod@dividend+1)& (0+255),b
 11102  003E98  BF05               	btfsc	___awmod@dividend& (0+255),7,b
 11103  003E9A  0706               	decf	(___awmod@dividend+1)& (0+255),f,b
 11104  003E9C  ECAD  F03B         	call	___awmod	;wreg free
 11105  003EA0  0060  F814  F213   	movff	?___awmod,___wmul@multiplier
 11106  003EA6  0060  F818  F214   	movff	?___awmod+1,___wmul@multiplier+1
 11107  003EAC  ECB1  F041         	call	___wmul	;wreg free
 11108  003EB0  0EE7               	movlw	low __powers_
 11109  003EB2  0102               	movlb	2	; () banked
 11110  003EB4  2513               	addwf	?___wmul& (0+255),w,b
 11111  003EB6  6EF6               	movwf	16374,c
 11112  003EB8  0EFA               	movlw	high __powers_
 11113  003EBA  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 11114  003EBC  6EF7               	movwf	16375,c
 11115  003EBE                     	if	1	;There are 3 active tblptr bytes
 11116  003EBE  6AF8               	clrf	16376,c
 11117  003EC0  0E00               	movlw	low (__mediumconst shr (0+16))
 11118  003EC2  22F8               	addwfc	16376,f,c
 11119  003EC4                     	endif
 11120  003EC4  0009               	tblrd		*+
 11121  003EC6  006F FFD4  F21C    	movff	16373,___ftmul@f2
 11122  003ECC  0009               	tblrd		*+
 11123  003ECE  006F FFD4  F21D    	movff	16373,___ftmul@f2+1
 11124  003ED4  000A               	tblrd		*-
 11125  003ED6  006F FFD4  F21E    	movff	16373,___ftmul@f2+2
 11126  003EDC  EC50  F030         	call	___ftmul	;wreg free
 11127  003EE0  0060  F864  F228   	movff	?___ftmul,?_scale
 11128  003EE6  0060  F868  F229   	movff	?___ftmul+1,?_scale+1
 11129  003EEC  0060  F86C  F22A   	movff	?___ftmul+2,?_scale+2
 11130  003EF2  0012               	return	
 11131  003EF4                     l944:
 11132                           
 11133                           ;doprnt.c: 440: return _powers_[scl];
 11134  003EF4  0102               	movlb	2	; () banked
 11135  003EF6  512E               	movf	scale@scl& (0+255),w,b
 11136  003EF8  0D03               	mullw	3
 11137  003EFA  0EE7               	movlw	low __powers_
 11138  003EFC  24F3               	addwf	16371,w,c
 11139  003EFE  6EF6               	movwf	16374,c
 11140  003F00  0EFA               	movlw	high __powers_
 11141  003F02  20F4               	addwfc	16372,w,c
 11142  003F04  6EF7               	movwf	16375,c
 11143  003F06                     	if	1	;There are 3 active tblptr bytes
 11144  003F06  6AF8               	clrf	16376,c
 11145  003F08  0E00               	movlw	low (__mediumconst shr (0+16))
 11146  003F0A  22F8               	addwfc	16376,f,c
 11147  003F0C                     	endif
 11148  003F0C  0009               	tblrd		*+
 11149  003F0E  006F FFD4  F228    	movff	16373,?_scale
 11150  003F14  0009               	tblrd		*+
 11151  003F16  006F FFD4  F229    	movff	16373,?_scale+1
 11152  003F1C  000A               	tblrd		*-
 11153  003F1E  006F FFD4  F22A    	movff	16373,?_scale+2
 11154  003F24  0012               	return	
 11155  003F26                     __end_of_scale:
 11156                           	opt stack 0
 11157                           
 11158 ;; *************** function _isdigit *****************
 11159 ;; Defined at:
 11160 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 11161 ;; Parameters:    Size  Location     Type
 11162 ;;  c               1    wreg     unsigned char 
 11163 ;; Auto vars:     Size  Location     Type
 11164 ;;  c               1    7[BANK2 ] unsigned char 
 11165 ;; Return value:  Size  Location     Type
 11166 ;;		None               void
 11167 ;; Registers used:
 11168 ;;		wreg, status,2, status,0
 11169 ;; Tracked objects:
 11170 ;;		On entry : 0/0
 11171 ;;		On exit  : 0/0
 11172 ;;		Unchanged: 0/0
 11173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11175 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11176 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11177 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11178 ;;Total ram usage:        3 bytes
 11179 ;; Hardware stack levels used:    1
 11180 ;; Hardware stack levels required when called:   10
 11181 ;; This function calls:
 11182 ;;		Nothing
 11183 ;; This function is called by:
 11184 ;;		_sprintf
 11185 ;; This function uses a non-reentrant model
 11186 ;;
 11187                           
 11188                           	psect	text15
 11189  008468                     __ptext15:
 11190                           	opt stack 0
 11191  008468                     _isdigit:
 11192                           	opt stack 19
 11193                           
 11194                           ;incstack = 0
 11195                           ;isdigit@c stored from wreg
 11196  008468  0102               	movlb	2	; () banked
 11197  00846A  6F07               	movwf	isdigit@c& (0+255),b
 11198  00846C  0E00               	movlw	0
 11199  00846E  0102               	movlb	2	; () banked
 11200  008470  6F06               	movwf	_isdigit$2412& (0+255),b
 11201                           
 11202                           ; BSR set to: 2
 11203  008472  0E3A               	movlw	58
 11204  008474  6107               	cpfslt	isdigit@c& (0+255),b
 11205  008476  D005               	goto	l1600
 11206                           
 11207                           ; BSR set to: 2
 11208  008478  0E2F               	movlw	47
 11209  00847A  6507               	cpfsgt	isdigit@c& (0+255),b
 11210  00847C  D002               	goto	l1600
 11211                           
 11212                           ; BSR set to: 2
 11213  00847E  0E01               	movlw	1
 11214  008480  6F06               	movwf	_isdigit$2412& (0+255),b
 11215  008482                     l1600:
 11216                           
 11217                           ; BSR set to: 2
 11218                           
 11219                           ; BSR set to: 2
 11220  008482  0060  F818  F205   	movff	_isdigit$2412,??_isdigit
 11221  008488  3105               	rrcf	??_isdigit& (0+255),w,b
 11222  00848A  0012               	return	
 11223  00848C                     __end_of_isdigit:
 11224                           	opt stack 0
 11225                           
 11226 ;; *************** function _fround *****************
 11227 ;; Defined at:
 11228 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 11229 ;; Parameters:    Size  Location     Type
 11230 ;;  prec            1    wreg     unsigned char 
 11231 ;; Auto vars:     Size  Location     Type
 11232 ;;  prec            1   49[BANK2 ] unsigned char 
 11233 ;; Return value:  Size  Location     Type
 11234 ;;                  3   40[BANK2 ] unsigned char 
 11235 ;; Registers used:
 11236 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11237 ;; Tracked objects:
 11238 ;;		On entry : 0/0
 11239 ;;		On exit  : 0/0
 11240 ;;		Unchanged: 0/0
 11241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11242 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11243 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11245 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11246 ;;Total ram usage:       10 bytes
 11247 ;; Hardware stack levels used:    1
 11248 ;; Hardware stack levels required when called:   12
 11249 ;; This function calls:
 11250 ;;		___awdiv
 11251 ;;		___awmod
 11252 ;;		___ftmul
 11253 ;;		___wmul
 11254 ;; This function is called by:
 11255 ;;		_sprintf
 11256 ;; This function uses a non-reentrant model
 11257 ;;
 11258                           
 11259                           	psect	text16
 11260  004788                     __ptext16:
 11261                           	opt stack 0
 11262  004788                     _fround:
 11263                           	opt stack 17
 11264                           
 11265                           ; BSR set to: 2
 11266                           ;incstack = 0
 11267                           ;fround@prec stored from wreg
 11268  004788  0102               	movlb	2	; () banked
 11269  00478A  6F31               	movwf	fround@prec& (0+255),b
 11270                           
 11271                           ;doprnt.c: 413: if(prec>=110)
 11272  00478C  0E6D               	movlw	109
 11273  00478E  0102               	movlb	2	; () banked
 11274  004790  6531               	cpfsgt	fround@prec& (0+255),b
 11275  004792  D0CE               	goto	l931
 11276                           
 11277                           ; BSR set to: 2
 11278                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11279  004794  0E00               	movlw	0
 11280  004796  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11281  004798  0E03               	movlw	3
 11282  00479A  6F15               	movwf	___wmul@multiplicand& (0+255),b
 11283  00479C  0E00               	movlw	0
 11284  00479E  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
 11285  0047A0  0E0A               	movlw	10
 11286  0047A2  6F0D               	movwf	___awdiv@divisor& (0+255),b
 11287  0047A4  0E00               	movlw	0
 11288  0047A6  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
 11289  0047A8  0E64               	movlw	100
 11290  0047AA  6F07               	movwf	___awmod@divisor& (0+255),b
 11291  0047AC  0060  F8C4  F205   	movff	fround@prec,___awmod@dividend
 11292  0047B2  6B06               	clrf	(___awmod@dividend+1)& (0+255),b
 11293  0047B4  ECAD  F03B         	call	___awmod	;wreg free
 11294  0047B8  0060  F814  F20B   	movff	?___awmod,___awdiv@dividend
 11295  0047BE  0060  F818  F20C   	movff	?___awmod+1,___awdiv@dividend+1
 11296  0047C4  EC62  F03A         	call	___awdiv	;wreg free
 11297  0047C8  0E09               	movlw	9
 11298  0047CA  0102               	movlb	2	; () banked
 11299  0047CC  250B               	addwf	?___awdiv& (0+255),w,b
 11300  0047CE  6F13               	movwf	___wmul@multiplier& (0+255),b
 11301  0047D0  0E00               	movlw	0
 11302  0047D2  210C               	addwfc	(?___awdiv+1)& (0+255),w,b
 11303  0047D4  6F14               	movwf	(___wmul@multiplier+1)& (0+255),b
 11304  0047D6  ECB1  F041         	call	___wmul	;wreg free
 11305  0047DA  0E0E               	movlw	low __npowers_
 11306  0047DC  0102               	movlb	2	; () banked
 11307  0047DE  2513               	addwf	?___wmul& (0+255),w,b
 11308  0047E0  6EF6               	movwf	16374,c
 11309  0047E2  0EFB               	movlw	high __npowers_
 11310  0047E4  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 11311  0047E6  6EF7               	movwf	16375,c
 11312  0047E8                     	if	1	;There are 3 active tblptr bytes
 11313  0047E8  6AF8               	clrf	16376,c
 11314  0047EA  0E00               	movlw	low (__mediumconst shr (0+16))
 11315  0047EC  22F8               	addwfc	16376,f,c
 11316  0047EE                     	endif
 11317  0047EE  0009               	tblrd		*+
 11318  0047F0  006F FFD4  F21C    	movff	16373,___ftmul@f2
 11319  0047F6  0009               	tblrd		*+
 11320  0047F8  006F FFD4  F21D    	movff	16373,___ftmul@f2+1
 11321  0047FE  000A               	tblrd		*-
 11322  004800  006F FFD4  F21E    	movff	16373,___ftmul@f2+2
 11323  004806  0E00               	movlw	0
 11324  004808  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
 11325  00480A  0E64               	movlw	100
 11326  00480C  6F0D               	movwf	___awdiv@divisor& (0+255),b
 11327  00480E  0060  F8C4  F20B   	movff	fround@prec,___awdiv@dividend
 11328  004814  6B0C               	clrf	(___awdiv@dividend+1)& (0+255),b
 11329  004816  EC62  F03A         	call	___awdiv	;wreg free
 11330  00481A  0E12               	movlw	18
 11331  00481C  0102               	movlb	2	; () banked
 11332  00481E  250B               	addwf	?___awdiv& (0+255),w,b
 11333  004820  6F13               	movwf	___wmul@multiplier& (0+255),b
 11334  004822  0E00               	movlw	0
 11335  004824  210C               	addwfc	(?___awdiv+1)& (0+255),w,b
 11336  004826  6F14               	movwf	(___wmul@multiplier+1)& (0+255),b
 11337  004828  0E00               	movlw	0
 11338  00482A  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11339  00482C  0E03               	movlw	3
 11340  00482E  6F15               	movwf	___wmul@multiplicand& (0+255),b
 11341  004830  ECB1  F041         	call	___wmul	;wreg free
 11342  004834  0E0E               	movlw	low __npowers_
 11343  004836  0102               	movlb	2	; () banked
 11344  004838  2513               	addwf	?___wmul& (0+255),w,b
 11345  00483A  6EF6               	movwf	16374,c
 11346  00483C  0EFB               	movlw	high __npowers_
 11347  00483E  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 11348  004840  6EF7               	movwf	16375,c
 11349  004842                     	if	1	;There are 3 active tblptr bytes
 11350  004842  6AF8               	clrf	16376,c
 11351  004844  0E00               	movlw	low (__mediumconst shr (0+16))
 11352  004846  22F8               	addwfc	16376,f,c
 11353  004848                     	endif
 11354  004848  0009               	tblrd		*+
 11355  00484A  006F FFD4  F219    	movff	16373,___ftmul@f1
 11356  004850  0009               	tblrd		*+
 11357  004852  006F FFD4  F21A    	movff	16373,___ftmul@f1+1
 11358  004858  000A               	tblrd		*-
 11359  00485A  006F FFD4  F21B    	movff	16373,___ftmul@f1+2
 11360  004860  EC50  F030         	call	___ftmul	;wreg free
 11361  004864  0060  F864  F22E   	movff	?___ftmul,_fround$2798
 11362  00486A  0060  F868  F22F   	movff	?___ftmul+1,_fround$2798+1
 11363  004870  0060  F86C  F230   	movff	?___ftmul+2,_fround$2798+2
 11364                           
 11365                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11366  004876  0E00               	movlw	0
 11367  004878  0102               	movlb	2	; () banked
 11368  00487A  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11369  00487C  0E03               	movlw	3
 11370  00487E  6F15               	movwf	___wmul@multiplicand& (0+255),b
 11371  004880  0E00               	movlw	0
 11372  004882  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
 11373  004884  0E0A               	movlw	10
 11374  004886  6F07               	movwf	___awmod@divisor& (0+255),b
 11375  004888  0060  F8C4  F205   	movff	fround@prec,___awmod@dividend
 11376  00488E  6B06               	clrf	(___awmod@dividend+1)& (0+255),b
 11377  004890  ECAD  F03B         	call	___awmod	;wreg free
 11378  004894  0060  F814  F213   	movff	?___awmod,___wmul@multiplier
 11379  00489A  0060  F818  F214   	movff	?___awmod+1,___wmul@multiplier+1
 11380  0048A0  ECB1  F041         	call	___wmul	;wreg free
 11381  0048A4  0E0E               	movlw	low __npowers_
 11382  0048A6  0102               	movlb	2	; () banked
 11383  0048A8  2513               	addwf	?___wmul& (0+255),w,b
 11384  0048AA  6EF6               	movwf	16374,c
 11385  0048AC  0EFB               	movlw	high __npowers_
 11386  0048AE  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 11387  0048B0  6EF7               	movwf	16375,c
 11388  0048B2                     	if	1	;There are 3 active tblptr bytes
 11389  0048B2  6AF8               	clrf	16376,c
 11390  0048B4  0E00               	movlw	low (__mediumconst shr (0+16))
 11391  0048B6  22F8               	addwfc	16376,f,c
 11392  0048B8                     	endif
 11393  0048B8  0009               	tblrd		*+
 11394  0048BA  006F FFD4  F21C    	movff	16373,___ftmul@f2
 11395  0048C0  0009               	tblrd		*+
 11396  0048C2  006F FFD4  F21D    	movff	16373,___ftmul@f2+1
 11397  0048C8  000A               	tblrd		*-
 11398  0048CA  006F FFD4  F21E    	movff	16373,___ftmul@f2+2
 11399  0048D0  0060  F8B8  F219   	movff	_fround$2798,___ftmul@f1
 11400  0048D6  0060  F8BC  F21A   	movff	_fround$2798+1,___ftmul@f1+1
 11401  0048DC  0060  F8C0  F21B   	movff	_fround$2798+2,___ftmul@f1+2
 11402  0048E2  EC50  F030         	call	___ftmul	;wreg free
 11403  0048E6  0060  F864  F22B   	movff	?___ftmul,_fround$2799
 11404  0048EC  0060  F868  F22C   	movff	?___ftmul+1,_fround$2799+1
 11405  0048F2  0060  F86C  F22D   	movff	?___ftmul+2,_fround$2799+2
 11406                           
 11407                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11408  0048F8  0060  F8AC  F219   	movff	_fround$2799,___ftmul@f1
 11409  0048FE  0060  F8B0  F21A   	movff	_fround$2799+1,___ftmul@f1+1
 11410  004904  0060  F8B4  F21B   	movff	_fround$2799+2,___ftmul@f1+2
 11411  00490A  0E00               	movlw	0
 11412  00490C  0102               	movlb	2	; () banked
 11413  00490E  6F1C               	movwf	___ftmul@f2& (0+255),b
 11414  004910  0E00               	movlw	0
 11415  004912  6F1D               	movwf	(___ftmul@f2+1)& (0+255),b
 11416  004914  0E3F               	movlw	63
 11417  004916  6F1E               	movwf	(___ftmul@f2+2)& (0+255),b
 11418  004918  EC50  F030         	call	___ftmul	;wreg free
 11419  00491C  0060  F864  F228   	movff	?___ftmul,?_fround
 11420  004922  0060  F868  F229   	movff	?___ftmul+1,?_fround+1
 11421  004928  0060  F86C  F22A   	movff	?___ftmul+2,?_fround+2
 11422  00492E  0012               	return	
 11423  004930                     l931:
 11424                           
 11425                           ;doprnt.c: 415: else if(prec > 10)
 11426  004930  0E0A               	movlw	10
 11427  004932  0102               	movlb	2	; () banked
 11428  004934  6531               	cpfsgt	fround@prec& (0+255),b
 11429  004936  D080               	goto	l934
 11430                           
 11431                           ; BSR set to: 2
 11432                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11433  004938  0E00               	movlw	0
 11434  00493A  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11435  00493C  0E03               	movlw	3
 11436  00493E  6F15               	movwf	___wmul@multiplicand& (0+255),b
 11437  004940  0E00               	movlw	0
 11438  004942  6F08               	movwf	(___awmod@divisor+1)& (0+255),b
 11439  004944  0E0A               	movlw	10
 11440  004946  6F07               	movwf	___awmod@divisor& (0+255),b
 11441  004948  0060  F8C4  F205   	movff	fround@prec,___awmod@dividend
 11442  00494E  6B06               	clrf	(___awmod@dividend+1)& (0+255),b
 11443  004950  ECAD  F03B         	call	___awmod	;wreg free
 11444  004954  0060  F814  F213   	movff	?___awmod,___wmul@multiplier
 11445  00495A  0060  F818  F214   	movff	?___awmod+1,___wmul@multiplier+1
 11446  004960  ECB1  F041         	call	___wmul	;wreg free
 11447  004964  0E0E               	movlw	low __npowers_
 11448  004966  0102               	movlb	2	; () banked
 11449  004968  2513               	addwf	?___wmul& (0+255),w,b
 11450  00496A  6EF6               	movwf	16374,c
 11451  00496C  0EFB               	movlw	high __npowers_
 11452  00496E  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 11453  004970  6EF7               	movwf	16375,c
 11454  004972                     	if	1	;There are 3 active tblptr bytes
 11455  004972  6AF8               	clrf	16376,c
 11456  004974  0E00               	movlw	low (__mediumconst shr (0+16))
 11457  004976  22F8               	addwfc	16376,f,c
 11458  004978                     	endif
 11459  004978  0009               	tblrd		*+
 11460  00497A  006F FFD4  F21C    	movff	16373,___ftmul@f2
 11461  004980  0009               	tblrd		*+
 11462  004982  006F FFD4  F21D    	movff	16373,___ftmul@f2+1
 11463  004988  000A               	tblrd		*-
 11464  00498A  006F FFD4  F21E    	movff	16373,___ftmul@f2+2
 11465  004990  0E00               	movlw	0
 11466  004992  6F0E               	movwf	(___awdiv@divisor+1)& (0+255),b
 11467  004994  0E0A               	movlw	10
 11468  004996  6F0D               	movwf	___awdiv@divisor& (0+255),b
 11469  004998  0060  F8C4  F20B   	movff	fround@prec,___awdiv@dividend
 11470  00499E  6B0C               	clrf	(___awdiv@dividend+1)& (0+255),b
 11471  0049A0  EC62  F03A         	call	___awdiv	;wreg free
 11472  0049A4  0E09               	movlw	9
 11473  0049A6  0102               	movlb	2	; () banked
 11474  0049A8  250B               	addwf	?___awdiv& (0+255),w,b
 11475  0049AA  6F13               	movwf	___wmul@multiplier& (0+255),b
 11476  0049AC  0E00               	movlw	0
 11477  0049AE  210C               	addwfc	(?___awdiv+1)& (0+255),w,b
 11478  0049B0  6F14               	movwf	(___wmul@multiplier+1)& (0+255),b
 11479  0049B2  0E00               	movlw	0
 11480  0049B4  6F16               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11481  0049B6  0E03               	movlw	3
 11482  0049B8  6F15               	movwf	___wmul@multiplicand& (0+255),b
 11483  0049BA  ECB1  F041         	call	___wmul	;wreg free
 11484  0049BE  0E0E               	movlw	low __npowers_
 11485  0049C0  0102               	movlb	2	; () banked
 11486  0049C2  2513               	addwf	?___wmul& (0+255),w,b
 11487  0049C4  6EF6               	movwf	16374,c
 11488  0049C6  0EFB               	movlw	high __npowers_
 11489  0049C8  2114               	addwfc	(?___wmul+1)& (0+255),w,b
 11490  0049CA  6EF7               	movwf	16375,c
 11491  0049CC                     	if	1	;There are 3 active tblptr bytes
 11492  0049CC  6AF8               	clrf	16376,c
 11493  0049CE  0E00               	movlw	low (__mediumconst shr (0+16))
 11494  0049D0  22F8               	addwfc	16376,f,c
 11495  0049D2                     	endif
 11496  0049D2  0009               	tblrd		*+
 11497  0049D4  006F FFD4  F219    	movff	16373,___ftmul@f1
 11498  0049DA  0009               	tblrd		*+
 11499  0049DC  006F FFD4  F21A    	movff	16373,___ftmul@f1+1
 11500  0049E2  000A               	tblrd		*-
 11501  0049E4  006F FFD4  F21B    	movff	16373,___ftmul@f1+2
 11502  0049EA  EC50  F030         	call	___ftmul	;wreg free
 11503  0049EE  0060  F864  F22E   	movff	?___ftmul,_fround$2798
 11504  0049F4  0060  F868  F22F   	movff	?___ftmul+1,_fround$2798+1
 11505  0049FA  0060  F86C  F230   	movff	?___ftmul+2,_fround$2798+2
 11506                           
 11507                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11508  004A00  0060  F8B8  F219   	movff	_fround$2798,___ftmul@f1
 11509  004A06  0060  F8BC  F21A   	movff	_fround$2798+1,___ftmul@f1+1
 11510  004A0C  0060  F8C0  F21B   	movff	_fround$2798+2,___ftmul@f1+2
 11511  004A12  0E00               	movlw	0
 11512  004A14  0102               	movlb	2	; () banked
 11513  004A16  6F1C               	movwf	___ftmul@f2& (0+255),b
 11514  004A18  0E00               	movlw	0
 11515  004A1A  6F1D               	movwf	(___ftmul@f2+1)& (0+255),b
 11516  004A1C  0E3F               	movlw	63
 11517  004A1E  6F1E               	movwf	(___ftmul@f2+2)& (0+255),b
 11518  004A20  EC50  F030         	call	___ftmul	;wreg free
 11519  004A24  0060  F864  F228   	movff	?___ftmul,?_fround
 11520  004A2A  0060  F868  F229   	movff	?___ftmul+1,?_fround+1
 11521  004A30  0060  F86C  F22A   	movff	?___ftmul+2,?_fround+2
 11522  004A36  0012               	return	
 11523  004A38                     l934:
 11524                           
 11525                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 11526  004A38  0102               	movlb	2	; () banked
 11527  004A3A  5131               	movf	fround@prec& (0+255),w,b
 11528  004A3C  0D03               	mullw	3
 11529  004A3E  0E0E               	movlw	low __npowers_
 11530  004A40  24F3               	addwf	16371,w,c
 11531  004A42  6EF6               	movwf	16374,c
 11532  004A44  0EFB               	movlw	high __npowers_
 11533  004A46  20F4               	addwfc	16372,w,c
 11534  004A48  6EF7               	movwf	16375,c
 11535  004A4A                     	if	1	;There are 3 active tblptr bytes
 11536  004A4A  6AF8               	clrf	16376,c
 11537  004A4C  0E00               	movlw	low (__mediumconst shr (0+16))
 11538  004A4E  22F8               	addwfc	16376,f,c
 11539  004A50                     	endif
 11540  004A50  0009               	tblrd		*+
 11541  004A52  006F FFD4  F219    	movff	16373,___ftmul@f1
 11542  004A58  0009               	tblrd		*+
 11543  004A5A  006F FFD4  F21A    	movff	16373,___ftmul@f1+1
 11544  004A60  000A               	tblrd		*-
 11545  004A62  006F FFD4  F21B    	movff	16373,___ftmul@f1+2
 11546  004A68  0E00               	movlw	0
 11547  004A6A  6F1C               	movwf	___ftmul@f2& (0+255),b
 11548  004A6C  0E00               	movlw	0
 11549  004A6E  6F1D               	movwf	(___ftmul@f2+1)& (0+255),b
 11550  004A70  0E3F               	movlw	63
 11551  004A72  6F1E               	movwf	(___ftmul@f2+2)& (0+255),b
 11552  004A74  EC50  F030         	call	___ftmul	;wreg free
 11553  004A78  0060  F864  F228   	movff	?___ftmul,?_fround
 11554  004A7E  0060  F868  F229   	movff	?___ftmul+1,?_fround+1
 11555  004A84  0060  F86C  F22A   	movff	?___ftmul+2,?_fround+2
 11556  004A8A  0012               	return	
 11557  004A8C                     __end_of_fround:
 11558                           	opt stack 0
 11559                           
 11560 ;; *************** function ___wmul *****************
 11561 ;; Defined at:
 11562 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 11563 ;; Parameters:    Size  Location     Type
 11564 ;;  multiplier      2   19[BANK2 ] unsigned int 
 11565 ;;  multiplicand    2   21[BANK2 ] unsigned int 
 11566 ;; Auto vars:     Size  Location     Type
 11567 ;;  product         2   23[BANK2 ] unsigned int 
 11568 ;; Return value:  Size  Location     Type
 11569 ;;                  2   19[BANK2 ] unsigned int 
 11570 ;; Registers used:
 11571 ;;		wreg, status,2, status,0, prodl, prodh
 11572 ;; Tracked objects:
 11573 ;;		On entry : 0/0
 11574 ;;		On exit  : 0/0
 11575 ;;		Unchanged: 0/0
 11576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11577 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11578 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11580 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11581 ;;Total ram usage:        6 bytes
 11582 ;; Hardware stack levels used:    1
 11583 ;; Hardware stack levels required when called:   10
 11584 ;; This function calls:
 11585 ;;		Nothing
 11586 ;; This function is called by:
 11587 ;;		_fround
 11588 ;;		_scale
 11589 ;;		_sprintf
 11590 ;;		_polinomio
 11591 ;; This function uses a non-reentrant model
 11592 ;;
 11593                           
 11594                           	psect	text17
 11595  008362                     __ptext17:
 11596                           	opt stack 0
 11597  008362                     ___wmul:
 11598                           	opt stack 18
 11599                           
 11600                           ;incstack = 0
 11601  008362  0102               	movlb	2	; () banked
 11602  008364  5113               	movf	___wmul@multiplier& (0+255),w,b
 11603  008366  0315               	mulwf	___wmul@multiplicand& (0+255),b
 11604  008368  006F FFCC  F217    	movff	16371,___wmul@product
 11605  00836E  006F FFD0  F218    	movff	16372,___wmul@product+1
 11606  008374  5113               	movf	___wmul@multiplier& (0+255),w,b
 11607  008376  0316               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11608  008378  50F3               	movf	16371,w,c
 11609  00837A  2718               	addwf	(___wmul@product+1)& (0+255),f,b
 11610  00837C  5114               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11611  00837E  0315               	mulwf	___wmul@multiplicand& (0+255),b
 11612  008380  50F3               	movf	16371,w,c
 11613  008382  2718               	addwf	(___wmul@product+1)& (0+255),f,b
 11614                           
 11615                           ; BSR set to: 2
 11616  008384  0060  F85C  F213   	movff	___wmul@product,?___wmul
 11617  00838A  0060  F860  F214   	movff	___wmul@product+1,?___wmul+1
 11618  008390  0012               	return	
 11619  008392                     __end_of___wmul:
 11620                           	opt stack 0
 11621                           
 11622 ;; *************** function ___ftmul *****************
 11623 ;; Defined at:
 11624 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 11625 ;; Parameters:    Size  Location     Type
 11626 ;;  f1              3   25[BANK2 ] float 
 11627 ;;  f2              3   28[BANK2 ] float 
 11628 ;; Auto vars:     Size  Location     Type
 11629 ;;  f3_as_produc    3   35[BANK2 ] unsigned um
 11630 ;;  sign            1   39[BANK2 ] unsigned char 
 11631 ;;  cntr            1   38[BANK2 ] unsigned char 
 11632 ;;  exp             1   34[BANK2 ] unsigned char 
 11633 ;; Return value:  Size  Location     Type
 11634 ;;                  3   25[BANK2 ] float 
 11635 ;; Registers used:
 11636 ;;		wreg, status,2, status,0, cstack
 11637 ;; Tracked objects:
 11638 ;;		On entry : 0/0
 11639 ;;		On exit  : 0/0
 11640 ;;		Unchanged: 0/0
 11641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11642 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11643 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11644 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11645 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11646 ;;Total ram usage:       15 bytes
 11647 ;; Hardware stack levels used:    1
 11648 ;; Hardware stack levels required when called:   11
 11649 ;; This function calls:
 11650 ;;		___ftpack
 11651 ;; This function is called by:
 11652 ;;		_Converte_Escala
 11653 ;;		_fround
 11654 ;;		_scale
 11655 ;;		_sprintf
 11656 ;;		_polinomio
 11657 ;; This function uses a non-reentrant model
 11658 ;;
 11659                           
 11660                           	psect	text18
 11661  0060A0                     __ptext18:
 11662                           	opt stack 0
 11663  0060A0                     ___ftmul:
 11664                           	opt stack 17
 11665                           
 11666                           ; BSR set to: 2
 11667                           ;incstack = 0
 11668  0060A0  0060  F86C  F21F   	movff	___ftmul@f1+2,??___ftmul
 11669  0060A6  0102               	movlb	2	; () banked
 11670  0060A8  6B20               	clrf	(??___ftmul+1)& (0+255),b
 11671  0060AA  6B21               	clrf	(??___ftmul+2)& (0+255),b
 11672  0060AC  351A               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 11673  0060AE  371F               	rlcf	??___ftmul& (0+255),f,b
 11674  0060B0  E301               	bnc	u15911
 11675  0060B2  8120               	bsf	(??___ftmul+1)& (0+255),0,b
 11676  0060B4                     u15911:
 11677  0060B4  511F               	movf	??___ftmul& (0+255),w,b
 11678  0060B6  6F22               	movwf	___ftmul@exp& (0+255),b
 11679  0060B8  5122               	movf	___ftmul@exp& (0+255),w,b
 11680  0060BA  A4D8               	btfss	16344,2,c
 11681  0060BC  D007               	goto	l1564
 11682                           
 11683                           ; BSR set to: 2
 11684  0060BE  0E00               	movlw	0
 11685  0060C0  6F19               	movwf	?___ftmul& (0+255),b
 11686  0060C2  0E00               	movlw	0
 11687  0060C4  6F1A               	movwf	(?___ftmul+1)& (0+255),b
 11688  0060C6  0E00               	movlw	0
 11689  0060C8  6F1B               	movwf	(?___ftmul+2)& (0+255),b
 11690                           
 11691                           ; BSR set to: 2
 11692  0060CA  0012               	return	
 11693  0060CC                     l1564:
 11694                           
 11695                           ; BSR set to: 2
 11696                           
 11697                           ; BSR set to: 2
 11698  0060CC  0060  F878  F21F   	movff	___ftmul@f2+2,??___ftmul
 11699  0060D2  6B20               	clrf	(??___ftmul+1)& (0+255),b
 11700  0060D4  6B21               	clrf	(??___ftmul+2)& (0+255),b
 11701  0060D6  351D               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 11702  0060D8  371F               	rlcf	??___ftmul& (0+255),f,b
 11703  0060DA  E301               	bnc	u15931
 11704  0060DC  8120               	bsf	(??___ftmul+1)& (0+255),0,b
 11705  0060DE                     u15931:
 11706  0060DE  511F               	movf	??___ftmul& (0+255),w,b
 11707  0060E0  6F27               	movwf	___ftmul@sign& (0+255),b
 11708  0060E2  5127               	movf	___ftmul@sign& (0+255),w,b
 11709  0060E4  A4D8               	btfss	16344,2,c
 11710  0060E6  D007               	goto	l1566
 11711                           
 11712                           ; BSR set to: 2
 11713  0060E8  0E00               	movlw	0
 11714  0060EA  6F19               	movwf	?___ftmul& (0+255),b
 11715  0060EC  0E00               	movlw	0
 11716  0060EE  6F1A               	movwf	(?___ftmul+1)& (0+255),b
 11717  0060F0  0E00               	movlw	0
 11718  0060F2  6F1B               	movwf	(?___ftmul+2)& (0+255),b
 11719                           
 11720                           ; BSR set to: 2
 11721  0060F4  0012               	return	
 11722  0060F6                     l1566:
 11723                           
 11724                           ; BSR set to: 2
 11725                           
 11726                           ; BSR set to: 2
 11727  0060F6  5127               	movf	___ftmul@sign& (0+255),w,b
 11728  0060F8  0F7B               	addlw	123
 11729  0060FA  2722               	addwf	___ftmul@exp& (0+255),f,b
 11730                           
 11731                           ; BSR set to: 2
 11732  0060FC  0060  F86C  F227   	movff	___ftmul@f1+2,___ftmul@sign
 11733  006102  511E               	movf	(___ftmul@f2+2)& (0+255),w,b
 11734  006104  1B27               	xorwf	___ftmul@sign& (0+255),f,b
 11735  006106  0E80               	movlw	128
 11736  006108  1727               	andwf	___ftmul@sign& (0+255),f,b
 11737                           
 11738                           ; BSR set to: 2
 11739  00610A  8F1A               	bsf	(___ftmul@f1+1)& (0+255),7,b
 11740                           
 11741                           ; BSR set to: 2
 11742  00610C  8F1D               	bsf	(___ftmul@f2+1)& (0+255),7,b
 11743                           
 11744                           ; BSR set to: 2
 11745  00610E  0EFF               	movlw	255
 11746  006110  171C               	andwf	___ftmul@f2& (0+255),f,b
 11747  006112  0EFF               	movlw	255
 11748  006114  171D               	andwf	(___ftmul@f2+1)& (0+255),f,b
 11749  006116  0E00               	movlw	0
 11750  006118  171E               	andwf	(___ftmul@f2+2)& (0+255),f,b
 11751                           
 11752                           ; BSR set to: 2
 11753  00611A  0E00               	movlw	0
 11754  00611C  6F23               	movwf	___ftmul@f3_as_product& (0+255),b
 11755  00611E  0E00               	movlw	0
 11756  006120  6F24               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 11757  006122  0E00               	movlw	0
 11758  006124  6F25               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 11759                           
 11760                           ; BSR set to: 2
 11761  006126  0E07               	movlw	7
 11762  006128  6F26               	movwf	___ftmul@cntr& (0+255),b
 11763  00612A                     
 11764                           ; BSR set to: 2
 11765                           
 11766                           ; BSR set to: 2
 11767  00612A  A119               	btfss	___ftmul@f1& (0+255),0,b
 11768  00612C  D006               	goto	l1568
 11769                           
 11770                           ; BSR set to: 2
 11771  00612E  511C               	movf	___ftmul@f2& (0+255),w,b
 11772  006130  2723               	addwf	___ftmul@f3_as_product& (0+255),f,b
 11773  006132  511D               	movf	(___ftmul@f2+1)& (0+255),w,b
 11774  006134  2324               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 11775  006136  511E               	movf	(___ftmul@f2+2)& (0+255),w,b
 11776  006138  2325               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 11777  00613A                     l1568:
 11778                           
 11779                           ; BSR set to: 2
 11780                           
 11781                           ; BSR set to: 2
 11782  00613A  90D8               	bcf	16344,0,c
 11783  00613C  331B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 11784  00613E  331A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 11785  006140  3319               	rrcf	___ftmul@f1& (0+255),f,b
 11786  006142  90D8               	bcf	16344,0,c
 11787  006144  371C               	rlcf	___ftmul@f2& (0+255),f,b
 11788  006146  371D               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 11789  006148  371E               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 11790                           
 11791                           ; BSR set to: 2
 11792  00614A  2F26               	decfsz	___ftmul@cntr& (0+255),f,b
 11793  00614C  D7EE               	goto	l1567
 11794                           
 11795                           ; BSR set to: 2
 11796                           
 11797                           ; BSR set to: 2
 11798  00614E  0E09               	movlw	9
 11799  006150  6F26               	movwf	___ftmul@cntr& (0+255),b
 11800  006152                     
 11801                           ; BSR set to: 2
 11802                           
 11803                           ; BSR set to: 2
 11804  006152  A119               	btfss	___ftmul@f1& (0+255),0,b
 11805  006154  D006               	goto	l1571
 11806                           
 11807                           ; BSR set to: 2
 11808  006156  511C               	movf	___ftmul@f2& (0+255),w,b
 11809  006158  2723               	addwf	___ftmul@f3_as_product& (0+255),f,b
 11810  00615A  511D               	movf	(___ftmul@f2+1)& (0+255),w,b
 11811  00615C  2324               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 11812  00615E  511E               	movf	(___ftmul@f2+2)& (0+255),w,b
 11813  006160  2325               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 11814  006162                     l1571:
 11815                           
 11816                           ; BSR set to: 2
 11817                           
 11818                           ; BSR set to: 2
 11819  006162  90D8               	bcf	16344,0,c
 11820  006164  331B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 11821  006166  331A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 11822  006168  3319               	rrcf	___ftmul@f1& (0+255),f,b
 11823  00616A  90D8               	bcf	16344,0,c
 11824  00616C  3325               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 11825  00616E  3324               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 11826  006170  3323               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 11827                           
 11828                           ; BSR set to: 2
 11829  006172  2F26               	decfsz	___ftmul@cntr& (0+255),f,b
 11830  006174  D7EE               	goto	l1570
 11831                           
 11832                           ; BSR set to: 2
 11833                           
 11834                           ; BSR set to: 2
 11835  006176  0060  F88C  F205   	movff	___ftmul@f3_as_product,___ftpack@arg
 11836  00617C  0060  F890  F206   	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 11837  006182  0060  F894  F207   	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 11838  006188  0060  F888  F208   	movff	___ftmul@exp,___ftpack@exp
 11839  00618E  0060  F89C  F209   	movff	___ftmul@sign,___ftpack@sign
 11840  006194  EC2C  F037         	call	___ftpack	;wreg free
 11841  006198  0060  F814  F219   	movff	?___ftpack,?___ftmul
 11842  00619E  0060  F818  F21A   	movff	?___ftpack+1,?___ftmul+1
 11843  0061A4  0060  F81C  F21B   	movff	?___ftpack+2,?___ftmul+2
 11844  0061AA  0012               	return	
 11845  0061AC                     __end_of___ftmul:
 11846                           	opt stack 0
 11847                           
 11848 ;; *************** function ___awmod *****************
 11849 ;; Defined at:
 11850 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 11851 ;; Parameters:    Size  Location     Type
 11852 ;;  dividend        2    5[BANK2 ] int 
 11853 ;;  divisor         2    7[BANK2 ] int 
 11854 ;; Auto vars:     Size  Location     Type
 11855 ;;  sign            1   10[BANK2 ] unsigned char 
 11856 ;;  counter         1    9[BANK2 ] unsigned char 
 11857 ;; Return value:  Size  Location     Type
 11858 ;;                  2    5[BANK2 ] int 
 11859 ;; Registers used:
 11860 ;;		wreg, status,2, status,0
 11861 ;; Tracked objects:
 11862 ;;		On entry : 0/0
 11863 ;;		On exit  : 0/0
 11864 ;;		Unchanged: 0/0
 11865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11866 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11867 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11869 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11870 ;;Total ram usage:        6 bytes
 11871 ;; Hardware stack levels used:    1
 11872 ;; Hardware stack levels required when called:   10
 11873 ;; This function calls:
 11874 ;;		Nothing
 11875 ;; This function is called by:
 11876 ;;		_fround
 11877 ;;		_scale
 11878 ;;		_sprintf
 11879 ;; This function uses a non-reentrant model
 11880 ;;
 11881                           
 11882                           	psect	text19
 11883  00775A                     __ptext19:
 11884                           	opt stack 0
 11885  00775A                     ___awmod:
 11886                           	opt stack 18
 11887                           
 11888                           ;incstack = 0
 11889  00775A  0E00               	movlw	0
 11890  00775C  0102               	movlb	2	; () banked
 11891  00775E  6F0A               	movwf	___awmod@sign& (0+255),b
 11892                           
 11893                           ; BSR set to: 2
 11894  007760  AF06               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11895  007762  D006               	goto	l1417
 11896                           
 11897                           ; BSR set to: 2
 11898  007764  6D05               	negf	___awmod@dividend& (0+255),b
 11899  007766  1F06               	comf	(___awmod@dividend+1)& (0+255),f,b
 11900  007768  B0D8               	btfsc	16344,0,c
 11901  00776A  2B06               	incf	(___awmod@dividend+1)& (0+255),f,b
 11902                           
 11903                           ; BSR set to: 2
 11904  00776C  0E01               	movlw	1
 11905  00776E  6F0A               	movwf	___awmod@sign& (0+255),b
 11906  007770                     l1417:
 11907                           
 11908                           ; BSR set to: 2
 11909                           
 11910                           ; BSR set to: 2
 11911  007770  AF08               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11912  007772  D004               	goto	l1418
 11913                           
 11914                           ; BSR set to: 2
 11915  007774  6D07               	negf	___awmod@divisor& (0+255),b
 11916  007776  1F08               	comf	(___awmod@divisor+1)& (0+255),f,b
 11917  007778  B0D8               	btfsc	16344,0,c
 11918  00777A  2B08               	incf	(___awmod@divisor+1)& (0+255),f,b
 11919  00777C                     l1418:
 11920                           
 11921                           ; BSR set to: 2
 11922                           
 11923                           ; BSR set to: 2
 11924  00777C  5107               	movf	___awmod@divisor& (0+255),w,b
 11925  00777E  1108               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11926  007780  B4D8               	btfsc	16344,2,c
 11927  007782  D018               	goto	l1425
 11928                           
 11929                           ; BSR set to: 2
 11930  007784  0E01               	movlw	1
 11931  007786  6F09               	movwf	___awmod@counter& (0+255),b
 11932  007788  D004               	goto	l1420
 11933  00778A                     
 11934                           ; BSR set to: 2
 11935                           
 11936                           ; BSR set to: 2
 11937  00778A  90D8               	bcf	16344,0,c
 11938  00778C  3707               	rlcf	___awmod@divisor& (0+255),f,b
 11939  00778E  3708               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11940  007790  2B09               	incf	___awmod@counter& (0+255),f,b
 11941  007792                     l1420:
 11942                           
 11943                           ; BSR set to: 2
 11944                           
 11945                           ; BSR set to: 2
 11946  007792  AF08               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11947  007794  D7FA               	goto	l1421
 11948  007796                     u16060:
 11949                           
 11950                           ; BSR set to: 2
 11951                           
 11952                           ; BSR set to: 2
 11953                           
 11954                           ; BSR set to: 2
 11955  007796  5107               	movf	___awmod@divisor& (0+255),w,b
 11956  007798  5D05               	subwf	___awmod@dividend& (0+255),w,b
 11957  00779A  5108               	movf	(___awmod@divisor+1)& (0+255),w,b
 11958  00779C  5906               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11959  00779E  A0D8               	btfss	16344,0,c
 11960  0077A0  D004               	goto	l1424
 11961                           
 11962                           ; BSR set to: 2
 11963  0077A2  5107               	movf	___awmod@divisor& (0+255),w,b
 11964  0077A4  5F05               	subwf	___awmod@dividend& (0+255),f,b
 11965  0077A6  5108               	movf	(___awmod@divisor+1)& (0+255),w,b
 11966  0077A8  5B06               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11967  0077AA                     l1424:
 11968                           
 11969                           ; BSR set to: 2
 11970                           
 11971                           ; BSR set to: 2
 11972  0077AA  90D8               	bcf	16344,0,c
 11973  0077AC  3308               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11974  0077AE  3307               	rrcf	___awmod@divisor& (0+255),f,b
 11975                           
 11976                           ; BSR set to: 2
 11977  0077B0  2F09               	decfsz	___awmod@counter& (0+255),f,b
 11978  0077B2  D7F1               	goto	u16060
 11979  0077B4                     l1425:
 11980                           
 11981                           ; BSR set to: 2
 11982                           
 11983                           ; BSR set to: 2
 11984                           
 11985                           ; BSR set to: 2
 11986  0077B4  510A               	movf	___awmod@sign& (0+255),w,b
 11987  0077B6  B4D8               	btfsc	16344,2,c
 11988  0077B8  D004               	goto	l1426
 11989                           
 11990                           ; BSR set to: 2
 11991  0077BA  6D05               	negf	___awmod@dividend& (0+255),b
 11992  0077BC  1F06               	comf	(___awmod@dividend+1)& (0+255),f,b
 11993  0077BE  B0D8               	btfsc	16344,0,c
 11994  0077C0  2B06               	incf	(___awmod@dividend+1)& (0+255),f,b
 11995  0077C2                     l1426:
 11996                           
 11997                           ; BSR set to: 2
 11998                           
 11999                           ; BSR set to: 2
 12000  0077C2  0060  F814  F205   	movff	___awmod@dividend,?___awmod
 12001  0077C8  0060  F818  F206   	movff	___awmod@dividend+1,?___awmod+1
 12002  0077CE  0012               	return	
 12003  0077D0                     __end_of___awmod:
 12004                           	opt stack 0
 12005                           
 12006 ;; *************** function ___awdiv *****************
 12007 ;; Defined at:
 12008 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 12009 ;; Parameters:    Size  Location     Type
 12010 ;;  dividend        2   11[BANK2 ] int 
 12011 ;;  divisor         2   13[BANK2 ] int 
 12012 ;; Auto vars:     Size  Location     Type
 12013 ;;  quotient        2   17[BANK2 ] int 
 12014 ;;  sign            1   16[BANK2 ] unsigned char 
 12015 ;;  counter         1   15[BANK2 ] unsigned char 
 12016 ;; Return value:  Size  Location     Type
 12017 ;;                  2   11[BANK2 ] int 
 12018 ;; Registers used:
 12019 ;;		wreg, status,2, status,0
 12020 ;; Tracked objects:
 12021 ;;		On entry : 0/0
 12022 ;;		On exit  : 0/0
 12023 ;;		Unchanged: 0/0
 12024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12025 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12026 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12028 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12029 ;;Total ram usage:        8 bytes
 12030 ;; Hardware stack levels used:    1
 12031 ;; Hardware stack levels required when called:   10
 12032 ;; This function calls:
 12033 ;;		Nothing
 12034 ;; This function is called by:
 12035 ;;		_fround
 12036 ;;		_scale
 12037 ;;		_sprintf
 12038 ;; This function uses a non-reentrant model
 12039 ;;
 12040                           
 12041                           	psect	text20
 12042  0074C4                     __ptext20:
 12043                           	opt stack 0
 12044  0074C4                     ___awdiv:
 12045                           	opt stack 18
 12046                           
 12047                           ; BSR set to: 2
 12048                           ;incstack = 0
 12049  0074C4  0E00               	movlw	0
 12050  0074C6  0102               	movlb	2	; () banked
 12051  0074C8  6F10               	movwf	___awdiv@sign& (0+255),b
 12052                           
 12053                           ; BSR set to: 2
 12054  0074CA  AF0E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12055  0074CC  D006               	goto	l1404
 12056                           
 12057                           ; BSR set to: 2
 12058  0074CE  6D0D               	negf	___awdiv@divisor& (0+255),b
 12059  0074D0  1F0E               	comf	(___awdiv@divisor+1)& (0+255),f,b
 12060  0074D2  B0D8               	btfsc	16344,0,c
 12061  0074D4  2B0E               	incf	(___awdiv@divisor+1)& (0+255),f,b
 12062                           
 12063                           ; BSR set to: 2
 12064  0074D6  0E01               	movlw	1
 12065  0074D8  6F10               	movwf	___awdiv@sign& (0+255),b
 12066  0074DA                     l1404:
 12067                           
 12068                           ; BSR set to: 2
 12069                           
 12070                           ; BSR set to: 2
 12071  0074DA  AF0C               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 12072  0074DC  D006               	goto	l1405
 12073                           
 12074                           ; BSR set to: 2
 12075  0074DE  6D0B               	negf	___awdiv@dividend& (0+255),b
 12076  0074E0  1F0C               	comf	(___awdiv@dividend+1)& (0+255),f,b
 12077  0074E2  B0D8               	btfsc	16344,0,c
 12078  0074E4  2B0C               	incf	(___awdiv@dividend+1)& (0+255),f,b
 12079                           
 12080                           ; BSR set to: 2
 12081  0074E6  0E01               	movlw	1
 12082  0074E8  1B10               	xorwf	___awdiv@sign& (0+255),f,b
 12083  0074EA                     l1405:
 12084                           
 12085                           ; BSR set to: 2
 12086                           
 12087                           ; BSR set to: 2
 12088  0074EA  0E00               	movlw	0
 12089  0074EC  6F12               	movwf	(___awdiv@quotient+1)& (0+255),b
 12090  0074EE  0E00               	movlw	0
 12091  0074F0  6F11               	movwf	___awdiv@quotient& (0+255),b
 12092                           
 12093                           ; BSR set to: 2
 12094  0074F2  510D               	movf	___awdiv@divisor& (0+255),w,b
 12095  0074F4  110E               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 12096  0074F6  B4D8               	btfsc	16344,2,c
 12097  0074F8  D01C               	goto	l1412
 12098                           
 12099                           ; BSR set to: 2
 12100  0074FA  0E01               	movlw	1
 12101  0074FC  6F0F               	movwf	___awdiv@counter& (0+255),b
 12102  0074FE  D004               	goto	l1407
 12103  007500                     
 12104                           ; BSR set to: 2
 12105                           
 12106                           ; BSR set to: 2
 12107  007500  90D8               	bcf	16344,0,c
 12108  007502  370D               	rlcf	___awdiv@divisor& (0+255),f,b
 12109  007504  370E               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 12110  007506  2B0F               	incf	___awdiv@counter& (0+255),f,b
 12111  007508                     l1407:
 12112                           
 12113                           ; BSR set to: 2
 12114                           
 12115                           ; BSR set to: 2
 12116  007508  AF0E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12117  00750A  D7FA               	goto	l1408
 12118  00750C                     u16000:
 12119                           
 12120                           ; BSR set to: 2
 12121                           
 12122                           ; BSR set to: 2
 12123                           
 12124                           ; BSR set to: 2
 12125  00750C  90D8               	bcf	16344,0,c
 12126  00750E  3711               	rlcf	___awdiv@quotient& (0+255),f,b
 12127  007510  3712               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 12128                           
 12129                           ; BSR set to: 2
 12130  007512  510D               	movf	___awdiv@divisor& (0+255),w,b
 12131  007514  5D0B               	subwf	___awdiv@dividend& (0+255),w,b
 12132  007516  510E               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12133  007518  590C               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 12134  00751A  A0D8               	btfss	16344,0,c
 12135  00751C  D005               	goto	l1411
 12136                           
 12137                           ; BSR set to: 2
 12138  00751E  510D               	movf	___awdiv@divisor& (0+255),w,b
 12139  007520  5F0B               	subwf	___awdiv@dividend& (0+255),f,b
 12140  007522  510E               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12141  007524  5B0C               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 12142                           
 12143                           ; BSR set to: 2
 12144  007526  8111               	bsf	___awdiv@quotient& (0+255),0,b
 12145  007528                     l1411:
 12146                           
 12147                           ; BSR set to: 2
 12148                           
 12149                           ; BSR set to: 2
 12150  007528  90D8               	bcf	16344,0,c
 12151  00752A  330E               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 12152  00752C  330D               	rrcf	___awdiv@divisor& (0+255),f,b
 12153                           
 12154                           ; BSR set to: 2
 12155  00752E  2F0F               	decfsz	___awdiv@counter& (0+255),f,b
 12156  007530  D7ED               	goto	u16000
 12157  007532                     l1412:
 12158                           
 12159                           ; BSR set to: 2
 12160                           
 12161                           ; BSR set to: 2
 12162                           
 12163                           ; BSR set to: 2
 12164  007532  5110               	movf	___awdiv@sign& (0+255),w,b
 12165  007534  B4D8               	btfsc	16344,2,c
 12166  007536  D004               	goto	l1413
 12167                           
 12168                           ; BSR set to: 2
 12169  007538  6D11               	negf	___awdiv@quotient& (0+255),b
 12170  00753A  1F12               	comf	(___awdiv@quotient+1)& (0+255),f,b
 12171  00753C  B0D8               	btfsc	16344,0,c
 12172  00753E  2B12               	incf	(___awdiv@quotient+1)& (0+255),f,b
 12173  007540                     l1413:
 12174                           
 12175                           ; BSR set to: 2
 12176                           
 12177                           ; BSR set to: 2
 12178  007540  0060  F844  F20B   	movff	___awdiv@quotient,?___awdiv
 12179  007546  0060  F848  F20C   	movff	___awdiv@quotient+1,?___awdiv+1
 12180  00754C  0012               	return	
 12181  00754E                     __end_of___awdiv:
 12182                           	opt stack 0
 12183                           
 12184 ;; *************** function __tdiv_to_l_ *****************
 12185 ;; Defined at:
 12186 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 12187 ;; Parameters:    Size  Location     Type
 12188 ;;  f1              3    5[BANK2 ] float 
 12189 ;;  f2              3    8[BANK2 ] float 
 12190 ;; Auto vars:     Size  Location     Type
 12191 ;;  quot            4   14[BANK2 ] unsigned long 
 12192 ;;  exp1            1   19[BANK2 ] unsigned char 
 12193 ;;  cntr            1   18[BANK2 ] unsigned char 
 12194 ;; Return value:  Size  Location     Type
 12195 ;;                  4    5[BANK2 ] unsigned long 
 12196 ;; Registers used:
 12197 ;;		wreg, status,2, status,0
 12198 ;; Tracked objects:
 12199 ;;		On entry : 0/0
 12200 ;;		On exit  : 0/0
 12201 ;;		Unchanged: 0/0
 12202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12203 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12204 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12205 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12206 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12207 ;;Total ram usage:       15 bytes
 12208 ;; Hardware stack levels used:    1
 12209 ;; Hardware stack levels required when called:   10
 12210 ;; This function calls:
 12211 ;;		Nothing
 12212 ;; This function is called by:
 12213 ;;		_sprintf
 12214 ;; This function uses a non-reentrant model
 12215 ;;
 12216                           
 12217                           	psect	text21
 12218  005AAC                     __ptext21:
 12219                           	opt stack 0
 12220  005AAC                     __tdiv_to_l_:
 12221                           	opt stack 19
 12222                           
 12223                           ; BSR set to: 2
 12224                           ;incstack = 0
 12225  005AAC  0060  F81C  F20B   	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 12226  005AB2  0102               	movlb	2	; () banked
 12227  005AB4  6B0C               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 12228  005AB6  6B0D               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 12229  005AB8  3506               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 12230  005ABA  370B               	rlcf	??__tdiv_to_l_& (0+255),f,b
 12231  005ABC  E301               	bnc	u16281
 12232  005ABE  810C               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 12233  005AC0                     u16281:
 12234  005AC0  510B               	movf	??__tdiv_to_l_& (0+255),w,b
 12235  005AC2  6F13               	movwf	__tdiv_to_l_@exp1& (0+255),b
 12236  005AC4  5113               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 12237  005AC6  A4D8               	btfss	16344,2,c
 12238  005AC8  D009               	goto	l1540
 12239                           
 12240                           ; BSR set to: 2
 12241  005ACA  0E00               	movlw	0
 12242  005ACC  6F05               	movwf	?__tdiv_to_l_& (0+255),b
 12243  005ACE  0E00               	movlw	0
 12244  005AD0  6F06               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12245  005AD2  0E00               	movlw	0
 12246  005AD4  6F07               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12247  005AD6  0E00               	movlw	0
 12248  005AD8  6F08               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12249                           
 12250                           ; BSR set to: 2
 12251  005ADA  0012               	return	
 12252  005ADC                     l1540:
 12253                           
 12254                           ; BSR set to: 2
 12255                           
 12256                           ; BSR set to: 2
 12257  005ADC  0060  F828  F20B   	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 12258  005AE2  6B0C               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 12259  005AE4  6B0D               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 12260  005AE6  3509               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 12261  005AE8  370B               	rlcf	??__tdiv_to_l_& (0+255),f,b
 12262  005AEA  E301               	bnc	u16301
 12263  005AEC  810C               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 12264  005AEE                     u16301:
 12265  005AEE  510B               	movf	??__tdiv_to_l_& (0+255),w,b
 12266  005AF0  6F12               	movwf	__tdiv_to_l_@cntr& (0+255),b
 12267  005AF2  5112               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 12268  005AF4  A4D8               	btfss	16344,2,c
 12269  005AF6  D009               	goto	l1542
 12270                           
 12271                           ; BSR set to: 2
 12272  005AF8  0E00               	movlw	0
 12273  005AFA  6F05               	movwf	?__tdiv_to_l_& (0+255),b
 12274  005AFC  0E00               	movlw	0
 12275  005AFE  6F06               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12276  005B00  0E00               	movlw	0
 12277  005B02  6F07               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12278  005B04  0E00               	movlw	0
 12279  005B06  6F08               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12280                           
 12281                           ; BSR set to: 2
 12282  005B08  0012               	return	
 12283  005B0A                     l1542:
 12284                           
 12285                           ; BSR set to: 2
 12286                           
 12287                           ; BSR set to: 2
 12288  005B0A  8F06               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 12289                           
 12290                           ; BSR set to: 2
 12291  005B0C  0EFF               	movlw	255
 12292  005B0E  1705               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 12293  005B10  0EFF               	movlw	255
 12294  005B12  1706               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 12295  005B14  0E00               	movlw	0
 12296  005B16  1707               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 12297  005B18  8F09               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 12298                           
 12299                           ; BSR set to: 2
 12300  005B1A  0EFF               	movlw	255
 12301  005B1C  1708               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 12302  005B1E  0EFF               	movlw	255
 12303  005B20  1709               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 12304  005B22  0E00               	movlw	0
 12305  005B24  170A               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 12306                           
 12307                           ; BSR set to: 2
 12308  005B26  0E00               	movlw	0
 12309  005B28  6F0E               	movwf	__tdiv_to_l_@quot& (0+255),b
 12310  005B2A  0E00               	movlw	0
 12311  005B2C  6F0F               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 12312  005B2E  0E00               	movlw	0
 12313  005B30  6F10               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 12314  005B32  0E00               	movlw	0
 12315  005B34  6F11               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 12316                           
 12317                           ; BSR set to: 2
 12318  005B36  0E7F               	movlw	127
 12319  005B38  5F13               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 12320                           
 12321                           ; BSR set to: 2
 12322  005B3A  5112               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 12323  005B3C  0F98               	addlw	152
 12324  005B3E  5F13               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 12325                           
 12326                           ; BSR set to: 2
 12327  005B40  0E18               	movlw	24
 12328  005B42  6F12               	movwf	__tdiv_to_l_@cntr& (0+255),b
 12329  005B44                     l1543:
 12330                           
 12331                           ; BSR set to: 2
 12332  005B44  90D8               	bcf	16344,0,c
 12333  005B46  370E               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 12334  005B48  370F               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 12335  005B4A  3710               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 12336  005B4C  3711               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 12337                           
 12338                           ; BSR set to: 2
 12339  005B4E  5108               	movf	__tdiv_to_l_@f2& (0+255),w,b
 12340  005B50  5D05               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 12341  005B52  5109               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 12342  005B54  5906               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 12343  005B56  510A               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 12344  005B58  5907               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 12345  005B5A  A0D8               	btfss	16344,0,c
 12346  005B5C  D007               	goto	l1544
 12347                           
 12348                           ; BSR set to: 2
 12349  005B5E  5108               	movf	__tdiv_to_l_@f2& (0+255),w,b
 12350  005B60  5F05               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 12351  005B62  5109               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 12352  005B64  5B06               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 12353  005B66  510A               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 12354  005B68  5B07               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 12355                           
 12356                           ; BSR set to: 2
 12357  005B6A  810E               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 12358  005B6C                     l1544:
 12359                           
 12360                           ; BSR set to: 2
 12361  005B6C  90D8               	bcf	16344,0,c
 12362  005B6E  3705               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 12363  005B70  3706               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 12364  005B72  3707               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 12365                           
 12366                           ; BSR set to: 2
 12367  005B74  2F12               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 12368  005B76  D7E6               	goto	l1543
 12369                           
 12370                           ; BSR set to: 2
 12371                           
 12372                           ; BSR set to: 2
 12373  005B78  AF13               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 12374  005B7A  D016               	goto	l1546
 12375                           
 12376                           ; BSR set to: 2
 12377  005B7C  5113               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 12378  005B7E  0A80               	xorlw	128
 12379  005B80  0F97               	addlw	151
 12380  005B82  B0D8               	btfsc	16344,0,c
 12381  005B84  D009               	goto	l1547
 12382                           
 12383                           ; BSR set to: 2
 12384  005B86  0E00               	movlw	0
 12385  005B88  6F05               	movwf	?__tdiv_to_l_& (0+255),b
 12386  005B8A  0E00               	movlw	0
 12387  005B8C  6F06               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12388  005B8E  0E00               	movlw	0
 12389  005B90  6F07               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12390  005B92  0E00               	movlw	0
 12391  005B94  6F08               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12392                           
 12393                           ; BSR set to: 2
 12394  005B96  0012               	return	
 12395  005B98                     l1547:
 12396                           
 12397                           ; BSR set to: 2
 12398                           
 12399                           ; BSR set to: 2
 12400                           
 12401                           ; BSR set to: 2
 12402  005B98  90D8               	bcf	16344,0,c
 12403  005B9A  3311               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 12404  005B9C  3310               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 12405  005B9E  330F               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 12406  005BA0  330E               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 12407                           
 12408                           ; BSR set to: 2
 12409  005BA2  3F13               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 12410  005BA4  D7F9               	goto	l1547
 12411                           
 12412                           ; BSR set to: 2
 12413  005BA6  D015               	goto	u16360
 12414  005BA8                     l1546:
 12415                           
 12416                           ; BSR set to: 2
 12417                           
 12418                           ; BSR set to: 2
 12419  005BA8  0E17               	movlw	23
 12420  005BAA  6513               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 12421  005BAC  D00F               	goto	l1552
 12422                           
 12423                           ; BSR set to: 2
 12424  005BAE  0E00               	movlw	0
 12425  005BB0  6F05               	movwf	?__tdiv_to_l_& (0+255),b
 12426  005BB2  0E00               	movlw	0
 12427  005BB4  6F06               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12428  005BB6  0E00               	movlw	0
 12429  005BB8  6F07               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12430  005BBA  0E00               	movlw	0
 12431  005BBC  6F08               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12432                           
 12433                           ; BSR set to: 2
 12434  005BBE  0012               	return	
 12435  005BC0                     
 12436                           ; BSR set to: 2
 12437                           
 12438                           ; BSR set to: 2
 12439  005BC0  90D8               	bcf	16344,0,c
 12440  005BC2  370E               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 12441  005BC4  370F               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 12442  005BC6  3710               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 12443  005BC8  3711               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 12444  005BCA  0713               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 12445  005BCC                     l1552:
 12446                           
 12447                           ; BSR set to: 2
 12448                           
 12449                           ; BSR set to: 2
 12450  005BCC  5113               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 12451  005BCE  A4D8               	btfss	16344,2,c
 12452  005BD0  D7F7               	goto	l1553
 12453  005BD2                     u16360:
 12454                           
 12455                           ; BSR set to: 2
 12456                           
 12457                           ; BSR set to: 2
 12458  005BD2  0060  F838  F205   	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 12459  005BD8  0060  F83C  F206   	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 12460  005BDE  0060  F840  F207   	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 12461  005BE4  0060  F844  F208   	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 12462                           
 12463                           ; BSR set to: 2
 12464  005BEA  0012               	return		;funcret
 12465  005BEC                     __end_of__tdiv_to_l_:
 12466                           	opt stack 0
 12467                           
 12468 ;; *************** function __div_to_l_ *****************
 12469 ;; Defined at:
 12470 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 12471 ;; Parameters:    Size  Location     Type
 12472 ;;  f1              3    5[BANK2 ] unsigned long 
 12473 ;;  f2              3    8[BANK2 ] unsigned long 
 12474 ;; Auto vars:     Size  Location     Type
 12475 ;;  quot            4   11[BANK2 ] unsigned long 
 12476 ;;  exp1            1   16[BANK2 ] unsigned char 
 12477 ;;  cntr            1   15[BANK2 ] unsigned char 
 12478 ;; Return value:  Size  Location     Type
 12479 ;;                  4    5[BANK2 ] unsigned long 
 12480 ;; Registers used:
 12481 ;;		wreg, status,2, status,0
 12482 ;; Tracked objects:
 12483 ;;		On entry : 0/0
 12484 ;;		On exit  : 0/0
 12485 ;;		Unchanged: 0/0
 12486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12487 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12488 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12490 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12491 ;;Total ram usage:       12 bytes
 12492 ;; Hardware stack levels used:    1
 12493 ;; Hardware stack levels required when called:   10
 12494 ;; This function calls:
 12495 ;;		Nothing
 12496 ;; This function is called by:
 12497 ;;		_sprintf
 12498 ;; This function uses a non-reentrant model
 12499 ;;
 12500                           
 12501                           	psect	text22
 12502  005D2A                     __ptext22:
 12503                           	opt stack 0
 12504  005D2A                     __div_to_l_:
 12505                           	opt stack 19
 12506                           
 12507                           ; BSR set to: 2
 12508                           ;incstack = 0
 12509  005D2A  0102               	movlb	2	; () banked
 12510  005D2C  3507               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 12511  005D2E  3508               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 12512  005D30  6F10               	movwf	__div_to_l_@exp1& (0+255),b
 12513  005D32  5110               	movf	__div_to_l_@exp1& (0+255),w,b
 12514  005D34  A4D8               	btfss	16344,2,c
 12515  005D36  D009               	goto	l1436
 12516                           
 12517                           ; BSR set to: 2
 12518  005D38  0E00               	movlw	0
 12519  005D3A  6F05               	movwf	?__div_to_l_& (0+255),b
 12520  005D3C  0E00               	movlw	0
 12521  005D3E  6F06               	movwf	(?__div_to_l_+1)& (0+255),b
 12522  005D40  0E00               	movlw	0
 12523  005D42  6F07               	movwf	(?__div_to_l_+2)& (0+255),b
 12524  005D44  0E00               	movlw	0
 12525  005D46  6F08               	movwf	(?__div_to_l_+3)& (0+255),b
 12526                           
 12527                           ; BSR set to: 2
 12528  005D48  0012               	return	
 12529  005D4A                     l1436:
 12530                           
 12531                           ; BSR set to: 2
 12532                           
 12533                           ; BSR set to: 2
 12534  005D4A  350A               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 12535  005D4C  350B               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 12536  005D4E  6F0F               	movwf	__div_to_l_@cntr& (0+255),b
 12537  005D50  510F               	movf	__div_to_l_@cntr& (0+255),w,b
 12538  005D52  A4D8               	btfss	16344,2,c
 12539  005D54  D009               	goto	l1438
 12540                           
 12541                           ; BSR set to: 2
 12542  005D56  0E00               	movlw	0
 12543  005D58  6F05               	movwf	?__div_to_l_& (0+255),b
 12544  005D5A  0E00               	movlw	0
 12545  005D5C  6F06               	movwf	(?__div_to_l_+1)& (0+255),b
 12546  005D5E  0E00               	movlw	0
 12547  005D60  6F07               	movwf	(?__div_to_l_+2)& (0+255),b
 12548  005D62  0E00               	movlw	0
 12549  005D64  6F08               	movwf	(?__div_to_l_+3)& (0+255),b
 12550                           
 12551                           ; BSR set to: 2
 12552  005D66  0012               	return	
 12553  005D68                     l1438:
 12554                           
 12555                           ; BSR set to: 2
 12556                           
 12557                           ; BSR set to: 2
 12558  005D68  8F07               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 12559                           
 12560                           ; BSR set to: 2
 12561  005D6A  0EFF               	movlw	255
 12562  005D6C  1705               	andwf	__div_to_l_@f1& (0+255),f,b
 12563  005D6E  0EFF               	movlw	255
 12564  005D70  1706               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 12565  005D72  0EFF               	movlw	255
 12566  005D74  1707               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 12567  005D76  0E00               	movlw	0
 12568  005D78  1708               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 12569                           
 12570                           ; BSR set to: 2
 12571  005D7A  8F0A               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 12572  005D7C  0EFF               	movlw	255
 12573  005D7E  1708               	andwf	__div_to_l_@f2& (0+255),f,b
 12574  005D80  0EFF               	movlw	255
 12575  005D82  1709               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 12576  005D84  0EFF               	movlw	255
 12577  005D86  170A               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 12578  005D88  0E00               	movlw	0
 12579  005D8A  170B               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 12580                           
 12581                           ; BSR set to: 2
 12582  005D8C  0E00               	movlw	0
 12583  005D8E  6F0B               	movwf	__div_to_l_@quot& (0+255),b
 12584  005D90  0E00               	movlw	0
 12585  005D92  6F0C               	movwf	(__div_to_l_@quot+1)& (0+255),b
 12586  005D94  0E00               	movlw	0
 12587  005D96  6F0D               	movwf	(__div_to_l_@quot+2)& (0+255),b
 12588  005D98  0E00               	movlw	0
 12589  005D9A  6F0E               	movwf	(__div_to_l_@quot+3)& (0+255),b
 12590                           
 12591                           ; BSR set to: 2
 12592  005D9C  0E7F               	movlw	127
 12593  005D9E  5F10               	subwf	__div_to_l_@exp1& (0+255),f,b
 12594                           
 12595                           ; BSR set to: 2
 12596  005DA0  510F               	movf	__div_to_l_@cntr& (0+255),w,b
 12597  005DA2  0FA0               	addlw	160
 12598  005DA4  5F10               	subwf	__div_to_l_@exp1& (0+255),f,b
 12599                           
 12600                           ; BSR set to: 2
 12601  005DA6  0E20               	movlw	32
 12602  005DA8  6F0F               	movwf	__div_to_l_@cntr& (0+255),b
 12603  005DAA                     
 12604                           ; BSR set to: 2
 12605                           
 12606                           ; BSR set to: 2
 12607  005DAA  90D8               	bcf	16344,0,c
 12608  005DAC  370B               	rlcf	__div_to_l_@quot& (0+255),f,b
 12609  005DAE  370C               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 12610  005DB0  370D               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 12611  005DB2  370E               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 12612                           
 12613                           ; BSR set to: 2
 12614  005DB4  5108               	movf	__div_to_l_@f2& (0+255),w,b
 12615  005DB6  5D05               	subwf	__div_to_l_@f1& (0+255),w,b
 12616  005DB8  5109               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 12617  005DBA  5906               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 12618  005DBC  510A               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 12619  005DBE  5907               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 12620  005DC0  510B               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 12621  005DC2  5908               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 12622  005DC4  A0D8               	btfss	16344,0,c
 12623  005DC6  D009               	goto	l1440
 12624                           
 12625                           ; BSR set to: 2
 12626  005DC8  5108               	movf	__div_to_l_@f2& (0+255),w,b
 12627  005DCA  5F05               	subwf	__div_to_l_@f1& (0+255),f,b
 12628  005DCC  5109               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 12629  005DCE  5B06               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 12630  005DD0  510A               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 12631  005DD2  5B07               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 12632  005DD4  510B               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 12633  005DD6  5B08               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 12634                           
 12635                           ; BSR set to: 2
 12636  005DD8  810B               	bsf	__div_to_l_@quot& (0+255),0,b
 12637  005DDA                     l1440:
 12638                           
 12639                           ; BSR set to: 2
 12640                           
 12641                           ; BSR set to: 2
 12642  005DDA  90D8               	bcf	16344,0,c
 12643  005DDC  3705               	rlcf	__div_to_l_@f1& (0+255),f,b
 12644  005DDE  3706               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 12645  005DE0  3707               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 12646  005DE2  3708               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 12647                           
 12648                           ; BSR set to: 2
 12649  005DE4  2F0F               	decfsz	__div_to_l_@cntr& (0+255),f,b
 12650  005DE6  D7E1               	goto	l1439
 12651                           
 12652                           ; BSR set to: 2
 12653                           
 12654                           ; BSR set to: 2
 12655  005DE8  AF10               	btfss	__div_to_l_@exp1& (0+255),7,b
 12656  005DEA  D016               	goto	l1442
 12657                           
 12658                           ; BSR set to: 2
 12659  005DEC  5110               	movf	__div_to_l_@exp1& (0+255),w,b
 12660  005DEE  0A80               	xorlw	128
 12661  005DF0  0F9F               	addlw	159
 12662  005DF2  B0D8               	btfsc	16344,0,c
 12663  005DF4  D009               	goto	l1443
 12664                           
 12665                           ; BSR set to: 2
 12666  005DF6  0E00               	movlw	0
 12667  005DF8  6F05               	movwf	?__div_to_l_& (0+255),b
 12668  005DFA  0E00               	movlw	0
 12669  005DFC  6F06               	movwf	(?__div_to_l_+1)& (0+255),b
 12670  005DFE  0E00               	movlw	0
 12671  005E00  6F07               	movwf	(?__div_to_l_+2)& (0+255),b
 12672  005E02  0E00               	movlw	0
 12673  005E04  6F08               	movwf	(?__div_to_l_+3)& (0+255),b
 12674                           
 12675                           ; BSR set to: 2
 12676  005E06  0012               	return	
 12677  005E08                     l1443:
 12678                           
 12679                           ; BSR set to: 2
 12680                           
 12681                           ; BSR set to: 2
 12682                           
 12683                           ; BSR set to: 2
 12684  005E08  90D8               	bcf	16344,0,c
 12685  005E0A  330E               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 12686  005E0C  330D               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 12687  005E0E  330C               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 12688  005E10  330B               	rrcf	__div_to_l_@quot& (0+255),f,b
 12689                           
 12690                           ; BSR set to: 2
 12691  005E12  3F10               	incfsz	__div_to_l_@exp1& (0+255),f,b
 12692  005E14  D7F9               	goto	l1443
 12693                           
 12694                           ; BSR set to: 2
 12695  005E16  D015               	goto	u16430
 12696  005E18                     l1442:
 12697                           
 12698                           ; BSR set to: 2
 12699                           
 12700                           ; BSR set to: 2
 12701  005E18  0E1F               	movlw	31
 12702  005E1A  6510               	cpfsgt	__div_to_l_@exp1& (0+255),b
 12703  005E1C  D00F               	goto	l1448
 12704                           
 12705                           ; BSR set to: 2
 12706  005E1E  0E00               	movlw	0
 12707  005E20  6F05               	movwf	?__div_to_l_& (0+255),b
 12708  005E22  0E00               	movlw	0
 12709  005E24  6F06               	movwf	(?__div_to_l_+1)& (0+255),b
 12710  005E26  0E00               	movlw	0
 12711  005E28  6F07               	movwf	(?__div_to_l_+2)& (0+255),b
 12712  005E2A  0E00               	movlw	0
 12713  005E2C  6F08               	movwf	(?__div_to_l_+3)& (0+255),b
 12714                           
 12715                           ; BSR set to: 2
 12716  005E2E  0012               	return	
 12717  005E30                     
 12718                           ; BSR set to: 2
 12719                           
 12720                           ; BSR set to: 2
 12721  005E30  90D8               	bcf	16344,0,c
 12722  005E32  370B               	rlcf	__div_to_l_@quot& (0+255),f,b
 12723  005E34  370C               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 12724  005E36  370D               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 12725  005E38  370E               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 12726  005E3A  0710               	decf	__div_to_l_@exp1& (0+255),f,b
 12727  005E3C                     l1448:
 12728                           
 12729                           ; BSR set to: 2
 12730                           
 12731                           ; BSR set to: 2
 12732  005E3C  5110               	movf	__div_to_l_@exp1& (0+255),w,b
 12733  005E3E  A4D8               	btfss	16344,2,c
 12734  005E40  D7F7               	goto	l1449
 12735  005E42                     u16430:
 12736                           
 12737                           ; BSR set to: 2
 12738                           
 12739                           ; BSR set to: 2
 12740  005E42  0060  F82C  F205   	movff	__div_to_l_@quot,?__div_to_l_
 12741  005E48  0060  F830  F206   	movff	__div_to_l_@quot+1,?__div_to_l_+1
 12742  005E4E  0060  F834  F207   	movff	__div_to_l_@quot+2,?__div_to_l_+2
 12743  005E54  0060  F838  F208   	movff	__div_to_l_@quot+3,?__div_to_l_+3
 12744                           
 12745                           ; BSR set to: 2
 12746  005E5A  0012               	return		;funcret
 12747  005E5C                     __end_of__div_to_l_:
 12748                           	opt stack 0
 12749                           
 12750 ;; *************** function ___lltoft *****************
 12751 ;; Defined at:
 12752 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 12753 ;; Parameters:    Size  Location     Type
 12754 ;;  c               4   77[BANK2 ] unsigned long 
 12755 ;; Auto vars:     Size  Location     Type
 12756 ;;  exp             1   85[BANK2 ] unsigned char 
 12757 ;; Return value:  Size  Location     Type
 12758 ;;                  3   77[BANK2 ] float 
 12759 ;; Registers used:
 12760 ;;		wreg, status,2, status,0, cstack
 12761 ;; Tracked objects:
 12762 ;;		On entry : 0/0
 12763 ;;		On exit  : 0/0
 12764 ;;		Unchanged: 0/0
 12765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12766 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12767 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12768 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12769 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12770 ;;Total ram usage:        9 bytes
 12771 ;; Hardware stack levels used:    1
 12772 ;; Hardware stack levels required when called:   11
 12773 ;; This function calls:
 12774 ;;		___ftpack
 12775 ;; This function is called by:
 12776 ;;		_sprintf
 12777 ;; This function uses a non-reentrant model
 12778 ;;
 12779                           
 12780                           	psect	text23
 12781  007A0A                     __ptext23:
 12782                           	opt stack 0
 12783  007A0A                     ___lltoft:
 12784                           	opt stack 18
 12785                           
 12786                           ; BSR set to: 2
 12787                           ;incstack = 0
 12788  007A0A  0E8E               	movlw	142
 12789  007A0C  0102               	movlb	2	; () banked
 12790  007A0E  6F55               	movwf	___lltoft@exp& (0+255),b
 12791  007A10  D006               	goto	l1647
 12792  007A12                     
 12793                           ; BSR set to: 2
 12794                           
 12795                           ; BSR set to: 2
 12796  007A12  90D8               	bcf	16344,0,c
 12797  007A14  3350               	rrcf	(___lltoft@c+3)& (0+255),f,b
 12798  007A16  334F               	rrcf	(___lltoft@c+2)& (0+255),f,b
 12799  007A18  334E               	rrcf	(___lltoft@c+1)& (0+255),f,b
 12800  007A1A  334D               	rrcf	___lltoft@c& (0+255),f,b
 12801  007A1C  2B55               	incf	___lltoft@exp& (0+255),f,b
 12802  007A1E                     l1647:
 12803                           
 12804                           ; BSR set to: 2
 12805                           
 12806                           ; BSR set to: 2
 12807  007A1E  0E00               	movlw	0
 12808  007A20  154D               	andwf	___lltoft@c& (0+255),w,b
 12809  007A22  6F51               	movwf	??___lltoft& (0+255),b
 12810  007A24  0E00               	movlw	0
 12811  007A26  154E               	andwf	(___lltoft@c+1)& (0+255),w,b
 12812  007A28  6F52               	movwf	(??___lltoft+1)& (0+255),b
 12813  007A2A  0E00               	movlw	0
 12814  007A2C  154F               	andwf	(___lltoft@c+2)& (0+255),w,b
 12815  007A2E  6F53               	movwf	(??___lltoft+2)& (0+255),b
 12816  007A30  0EFF               	movlw	255
 12817  007A32  1550               	andwf	(___lltoft@c+3)& (0+255),w,b
 12818  007A34  6F54               	movwf	(??___lltoft+3)& (0+255),b
 12819  007A36  5151               	movf	??___lltoft& (0+255),w,b
 12820  007A38  1152               	iorwf	(??___lltoft+1)& (0+255),w,b
 12821  007A3A  1153               	iorwf	(??___lltoft+2)& (0+255),w,b
 12822  007A3C  1154               	iorwf	(??___lltoft+3)& (0+255),w,b
 12823  007A3E  A4D8               	btfss	16344,2,c
 12824  007A40  D7E8               	goto	l1648
 12825                           
 12826                           ; BSR set to: 2
 12827                           
 12828                           ; BSR set to: 2
 12829  007A42  0060  F934  F205   	movff	___lltoft@c,___ftpack@arg
 12830  007A48  0060  F938  F206   	movff	___lltoft@c+1,___ftpack@arg+1
 12831  007A4E  0060  F93C  F207   	movff	___lltoft@c+2,___ftpack@arg+2
 12832  007A54  0060  F954  F208   	movff	___lltoft@exp,___ftpack@exp
 12833  007A5A  0E00               	movlw	0
 12834  007A5C  6F09               	movwf	___ftpack@sign& (0+255),b
 12835  007A5E  EC2C  F037         	call	___ftpack	;wreg free
 12836  007A62  0060  F814  F24D   	movff	?___ftpack,?___lltoft
 12837  007A68  0060  F818  F24E   	movff	?___ftpack+1,?___lltoft+1
 12838  007A6E  0060  F81C  F24F   	movff	?___ftpack+2,?___lltoft+2
 12839  007A74  0012               	return	
 12840  007A76                     __end_of___lltoft:
 12841                           	opt stack 0
 12842                           
 12843 ;; *************** function ___llmod *****************
 12844 ;; Defined at:
 12845 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 12846 ;; Parameters:    Size  Location     Type
 12847 ;;  dividend        4   18[BANK2 ] unsigned long 
 12848 ;;  divisor         4   22[BANK2 ] unsigned long 
 12849 ;; Auto vars:     Size  Location     Type
 12850 ;;  counter         1   26[BANK2 ] unsigned char 
 12851 ;; Return value:  Size  Location     Type
 12852 ;;                  4   18[BANK2 ] unsigned long 
 12853 ;; Registers used:
 12854 ;;		wreg, status,2, status,0
 12855 ;; Tracked objects:
 12856 ;;		On entry : 0/0
 12857 ;;		On exit  : 0/0
 12858 ;;		Unchanged: 0/0
 12859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12860 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12861 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12863 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12864 ;;Total ram usage:        9 bytes
 12865 ;; Hardware stack levels used:    1
 12866 ;; Hardware stack levels required when called:   10
 12867 ;; This function calls:
 12868 ;;		Nothing
 12869 ;; This function is called by:
 12870 ;;		_sprintf
 12871 ;; This function uses a non-reentrant model
 12872 ;;
 12873                           
 12874                           	psect	text24
 12875  00792C                     __ptext24:
 12876                           	opt stack 0
 12877  00792C                     ___llmod:
 12878                           	opt stack 19
 12879                           
 12880                           ;incstack = 0
 12881  00792C  0102               	movlb	2	; () banked
 12882  00792E  5116               	movf	___llmod@divisor& (0+255),w,b
 12883  007930  1117               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 12884  007932  1118               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 12885  007934  1119               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 12886  007936  B4D8               	btfsc	16344,2,c
 12887  007938  D024               	goto	l1641
 12888                           
 12889                           ; BSR set to: 2
 12890  00793A  0E01               	movlw	1
 12891  00793C  6F1A               	movwf	___llmod@counter& (0+255),b
 12892  00793E  D006               	goto	l1636
 12893  007940                     
 12894                           ; BSR set to: 2
 12895                           
 12896                           ; BSR set to: 2
 12897  007940  90D8               	bcf	16344,0,c
 12898  007942  3716               	rlcf	___llmod@divisor& (0+255),f,b
 12899  007944  3717               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 12900  007946  3718               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 12901  007948  3719               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 12902  00794A  2B1A               	incf	___llmod@counter& (0+255),f,b
 12903  00794C                     l1636:
 12904                           
 12905                           ; BSR set to: 2
 12906                           
 12907                           ; BSR set to: 2
 12908  00794C  AF19               	btfss	(___llmod@divisor+3)& (0+255),7,b
 12909  00794E  D7F8               	goto	l1637
 12910  007950                     u16690:
 12911                           
 12912                           ; BSR set to: 2
 12913                           
 12914                           ; BSR set to: 2
 12915                           
 12916                           ; BSR set to: 2
 12917  007950  5116               	movf	___llmod@divisor& (0+255),w,b
 12918  007952  5D12               	subwf	___llmod@dividend& (0+255),w,b
 12919  007954  5117               	movf	(___llmod@divisor+1)& (0+255),w,b
 12920  007956  5913               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 12921  007958  5118               	movf	(___llmod@divisor+2)& (0+255),w,b
 12922  00795A  5914               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 12923  00795C  5119               	movf	(___llmod@divisor+3)& (0+255),w,b
 12924  00795E  5915               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 12925  007960  A0D8               	btfss	16344,0,c
 12926  007962  D008               	goto	l1640
 12927                           
 12928                           ; BSR set to: 2
 12929  007964  5116               	movf	___llmod@divisor& (0+255),w,b
 12930  007966  5F12               	subwf	___llmod@dividend& (0+255),f,b
 12931  007968  5117               	movf	(___llmod@divisor+1)& (0+255),w,b
 12932  00796A  5B13               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 12933  00796C  5118               	movf	(___llmod@divisor+2)& (0+255),w,b
 12934  00796E  5B14               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 12935  007970  5119               	movf	(___llmod@divisor+3)& (0+255),w,b
 12936  007972  5B15               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 12937  007974                     l1640:
 12938                           
 12939                           ; BSR set to: 2
 12940                           
 12941                           ; BSR set to: 2
 12942  007974  90D8               	bcf	16344,0,c
 12943  007976  3319               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 12944  007978  3318               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 12945  00797A  3317               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 12946  00797C  3316               	rrcf	___llmod@divisor& (0+255),f,b
 12947                           
 12948                           ; BSR set to: 2
 12949  00797E  2F1A               	decfsz	___llmod@counter& (0+255),f,b
 12950  007980  D7E7               	goto	u16690
 12951  007982                     l1641:
 12952                           
 12953                           ; BSR set to: 2
 12954                           
 12955                           ; BSR set to: 2
 12956  007982  0060  F848  F212   	movff	___llmod@dividend,?___llmod
 12957  007988  0060  F84C  F213   	movff	___llmod@dividend+1,?___llmod+1
 12958  00798E  0060  F850  F214   	movff	___llmod@dividend+2,?___llmod+2
 12959  007994  0060  F854  F215   	movff	___llmod@dividend+3,?___llmod+3
 12960                           
 12961                           ; BSR set to: 2
 12962  00799A  0012               	return		;funcret
 12963  00799C                     __end_of___llmod:
 12964                           	opt stack 0
 12965                           
 12966 ;; *************** function ___lldiv *****************
 12967 ;; Defined at:
 12968 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 12969 ;; Parameters:    Size  Location     Type
 12970 ;;  dividend        4    5[BANK2 ] unsigned long 
 12971 ;;  divisor         4    9[BANK2 ] unsigned long 
 12972 ;; Auto vars:     Size  Location     Type
 12973 ;;  quotient        4   13[BANK2 ] unsigned long 
 12974 ;;  counter         1   17[BANK2 ] unsigned char 
 12975 ;; Return value:  Size  Location     Type
 12976 ;;                  4    5[BANK2 ] unsigned long 
 12977 ;; Registers used:
 12978 ;;		wreg, status,2, status,0
 12979 ;; Tracked objects:
 12980 ;;		On entry : 0/0
 12981 ;;		On exit  : 0/0
 12982 ;;		Unchanged: 0/0
 12983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12984 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12985 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12987 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12988 ;;Total ram usage:       13 bytes
 12989 ;; Hardware stack levels used:    1
 12990 ;; Hardware stack levels required when called:   10
 12991 ;; This function calls:
 12992 ;;		Nothing
 12993 ;; This function is called by:
 12994 ;;		_Verifica_Analogica
 12995 ;;		_sprintf
 12996 ;; This function uses a non-reentrant model
 12997 ;;
 12998                           
 12999                           	psect	text25
 13000  0073AE                     __ptext25:
 13001                           	opt stack 0
 13002  0073AE                     ___lldiv:
 13003                           	opt stack 19
 13004                           
 13005                           ; BSR set to: 2
 13006                           ;incstack = 0
 13007  0073AE  0E00               	movlw	0
 13008  0073B0  0102               	movlb	2	; () banked
 13009  0073B2  6F0D               	movwf	___lldiv@quotient& (0+255),b
 13010  0073B4  0E00               	movlw	0
 13011  0073B6  6F0E               	movwf	(___lldiv@quotient+1)& (0+255),b
 13012  0073B8  0E00               	movlw	0
 13013  0073BA  6F0F               	movwf	(___lldiv@quotient+2)& (0+255),b
 13014  0073BC  0E00               	movlw	0
 13015  0073BE  6F10               	movwf	(___lldiv@quotient+3)& (0+255),b
 13016                           
 13017                           ; BSR set to: 2
 13018  0073C0  5109               	movf	___lldiv@divisor& (0+255),w,b
 13019  0073C2  110A               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 13020  0073C4  110B               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 13021  0073C6  110C               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 13022  0073C8  B4D8               	btfsc	16344,2,c
 13023  0073CA  D02A               	goto	l1631
 13024                           
 13025                           ; BSR set to: 2
 13026  0073CC  0E01               	movlw	1
 13027  0073CE  6F11               	movwf	___lldiv@counter& (0+255),b
 13028  0073D0  D006               	goto	l1626
 13029  0073D2                     
 13030                           ; BSR set to: 2
 13031                           
 13032                           ; BSR set to: 2
 13033  0073D2  90D8               	bcf	16344,0,c
 13034  0073D4  3709               	rlcf	___lldiv@divisor& (0+255),f,b
 13035  0073D6  370A               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 13036  0073D8  370B               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 13037  0073DA  370C               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 13038  0073DC  2B11               	incf	___lldiv@counter& (0+255),f,b
 13039  0073DE                     l1626:
 13040                           
 13041                           ; BSR set to: 2
 13042                           
 13043                           ; BSR set to: 2
 13044  0073DE  AF0C               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 13045  0073E0  D7F8               	goto	l1627
 13046  0073E2                     u16660:
 13047                           
 13048                           ; BSR set to: 2
 13049                           
 13050                           ; BSR set to: 2
 13051                           
 13052                           ; BSR set to: 2
 13053  0073E2  90D8               	bcf	16344,0,c
 13054  0073E4  370D               	rlcf	___lldiv@quotient& (0+255),f,b
 13055  0073E6  370E               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 13056  0073E8  370F               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 13057  0073EA  3710               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 13058                           
 13059                           ; BSR set to: 2
 13060  0073EC  5109               	movf	___lldiv@divisor& (0+255),w,b
 13061  0073EE  5D05               	subwf	___lldiv@dividend& (0+255),w,b
 13062  0073F0  510A               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13063  0073F2  5906               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 13064  0073F4  510B               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13065  0073F6  5907               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 13066  0073F8  510C               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13067  0073FA  5908               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 13068  0073FC  A0D8               	btfss	16344,0,c
 13069  0073FE  D009               	goto	l1630
 13070                           
 13071                           ; BSR set to: 2
 13072  007400  5109               	movf	___lldiv@divisor& (0+255),w,b
 13073  007402  5F05               	subwf	___lldiv@dividend& (0+255),f,b
 13074  007404  510A               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13075  007406  5B06               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 13076  007408  510B               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13077  00740A  5B07               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 13078  00740C  510C               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13079  00740E  5B08               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 13080                           
 13081                           ; BSR set to: 2
 13082  007410  810D               	bsf	___lldiv@quotient& (0+255),0,b
 13083  007412                     l1630:
 13084                           
 13085                           ; BSR set to: 2
 13086                           
 13087                           ; BSR set to: 2
 13088  007412  90D8               	bcf	16344,0,c
 13089  007414  330C               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 13090  007416  330B               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 13091  007418  330A               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 13092  00741A  3309               	rrcf	___lldiv@divisor& (0+255),f,b
 13093                           
 13094                           ; BSR set to: 2
 13095  00741C  2F11               	decfsz	___lldiv@counter& (0+255),f,b
 13096  00741E  D7E1               	goto	u16660
 13097  007420                     l1631:
 13098                           
 13099                           ; BSR set to: 2
 13100                           
 13101                           ; BSR set to: 2
 13102  007420  0060  F834  F205   	movff	___lldiv@quotient,?___lldiv
 13103  007426  0060  F838  F206   	movff	___lldiv@quotient+1,?___lldiv+1
 13104  00742C  0060  F83C  F207   	movff	___lldiv@quotient+2,?___lldiv+2
 13105  007432  0060  F840  F208   	movff	___lldiv@quotient+3,?___lldiv+3
 13106                           
 13107                           ; BSR set to: 2
 13108  007438  0012               	return		;funcret
 13109  00743A                     __end_of___lldiv:
 13110                           	opt stack 0
 13111                           
 13112 ;; *************** function ___fttol *****************
 13113 ;; Defined at:
 13114 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 13115 ;; Parameters:    Size  Location     Type
 13116 ;;  f1              3   62[BANK2 ] float 
 13117 ;; Auto vars:     Size  Location     Type
 13118 ;;  lval            4   72[BANK2 ] unsigned long 
 13119 ;;  exp1            1   76[BANK2 ] unsigned char 
 13120 ;;  sign1           1   71[BANK2 ] unsigned char 
 13121 ;; Return value:  Size  Location     Type
 13122 ;;                  4   62[BANK2 ] long 
 13123 ;; Registers used:
 13124 ;;		wreg, status,2, status,0
 13125 ;; Tracked objects:
 13126 ;;		On entry : 0/0
 13127 ;;		On exit  : 0/0
 13128 ;;		Unchanged: 0/0
 13129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13130 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13131 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13132 ;;      Temps:          0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13133 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13134 ;;Total ram usage:       15 bytes
 13135 ;; Hardware stack levels used:    1
 13136 ;; Hardware stack levels required when called:   10
 13137 ;; This function calls:
 13138 ;;		Nothing
 13139 ;; This function is called by:
 13140 ;;		_Converte_Escala
 13141 ;;		_sprintf
 13142 ;;		_polinomio
 13143 ;; This function uses a non-reentrant model
 13144 ;;
 13145                           
 13146                           	psect	text26
 13147  0062B6                     __ptext26:
 13148                           	opt stack 0
 13149  0062B6                     ___fttol:
 13150                           	opt stack 19
 13151                           
 13152                           ; BSR set to: 2
 13153                           ;incstack = 0
 13154  0062B6  0060  F900  F242   	movff	___fttol@f1+2,??___fttol
 13155  0062BC  0102               	movlb	2	; () banked
 13156  0062BE  6B43               	clrf	(??___fttol+1)& (0+255),b
 13157  0062C0  6B44               	clrf	(??___fttol+2)& (0+255),b
 13158  0062C2  353F               	rlcf	(___fttol@f1+1)& (0+255),w,b
 13159  0062C4  3742               	rlcf	??___fttol& (0+255),f,b
 13160  0062C6  E301               	bnc	u16571
 13161  0062C8  8143               	bsf	(??___fttol+1)& (0+255),0,b
 13162  0062CA                     u16571:
 13163  0062CA  5142               	movf	??___fttol& (0+255),w,b
 13164  0062CC  6F4C               	movwf	___fttol@exp1& (0+255),b
 13165  0062CE  514C               	movf	___fttol@exp1& (0+255),w,b
 13166  0062D0  A4D8               	btfss	16344,2,c
 13167  0062D2  D009               	goto	l1585
 13168                           
 13169                           ; BSR set to: 2
 13170  0062D4  0E00               	movlw	0
 13171  0062D6  6F3E               	movwf	?___fttol& (0+255),b
 13172  0062D8  0E00               	movlw	0
 13173  0062DA  6F3F               	movwf	(?___fttol+1)& (0+255),b
 13174  0062DC  0E00               	movlw	0
 13175  0062DE  6F40               	movwf	(?___fttol+2)& (0+255),b
 13176  0062E0  0E00               	movlw	0
 13177  0062E2  6F41               	movwf	(?___fttol+3)& (0+255),b
 13178                           
 13179                           ; BSR set to: 2
 13180  0062E4  0012               	return	
 13181  0062E6                     l1585:
 13182                           
 13183                           ; BSR set to: 2
 13184                           
 13185                           ; BSR set to: 2
 13186  0062E6  0E17               	movlw	23
 13187  0062E8  6F42               	movwf	??___fttol& (0+255),b
 13188  0062EA  0060  F8F8  F243   	movff	___fttol@f1,??___fttol+1
 13189  0062F0  0060  F8FC  F244   	movff	___fttol@f1+1,??___fttol+2
 13190  0062F6  0060  F900  F245   	movff	___fttol@f1+2,??___fttol+3
 13191  0062FC  2942               	incf	??___fttol& (0+255),w,b
 13192  0062FE  6F46               	movwf	(??___fttol+4)& (0+255),b
 13193  006300  D004               	goto	u16590
 13194  006302                     u16595:
 13195  006302  90D8               	bcf	16344,0,c
 13196  006304  3345               	rrcf	(??___fttol+3)& (0+255),f,b
 13197  006306  3344               	rrcf	(??___fttol+2)& (0+255),f,b
 13198  006308  3343               	rrcf	(??___fttol+1)& (0+255),f,b
 13199  00630A                     u16590:
 13200  00630A  2F46               	decfsz	(??___fttol+4)& (0+255),f,b
 13201  00630C  D7FA               	goto	u16595
 13202  00630E  0102               	movlb	2	; () banked
 13203  006310  5143               	movf	(??___fttol+1)& (0+255),w,b
 13204  006312  6F47               	movwf	___fttol@sign1& (0+255),b
 13205                           
 13206                           ; BSR set to: 2
 13207  006314  8F3F               	bsf	(___fttol@f1+1)& (0+255),7,b
 13208                           
 13209                           ; BSR set to: 2
 13210  006316  0EFF               	movlw	255
 13211  006318  173E               	andwf	___fttol@f1& (0+255),f,b
 13212  00631A  0EFF               	movlw	255
 13213  00631C  173F               	andwf	(___fttol@f1+1)& (0+255),f,b
 13214  00631E  0E00               	movlw	0
 13215  006320  1740               	andwf	(___fttol@f1+2)& (0+255),f,b
 13216                           
 13217                           ; BSR set to: 2
 13218  006322  513E               	movf	___fttol@f1& (0+255),w,b
 13219  006324  6F48               	movwf	___fttol@lval& (0+255),b
 13220  006326  513F               	movf	(___fttol@f1+1)& (0+255),w,b
 13221  006328  6F49               	movwf	(___fttol@lval+1)& (0+255),b
 13222  00632A  5140               	movf	(___fttol@f1+2)& (0+255),w,b
 13223  00632C  6F4A               	movwf	(___fttol@lval+2)& (0+255),b
 13224  00632E  6B4B               	clrf	(___fttol@lval+3)& (0+255),b
 13225                           
 13226                           ; BSR set to: 2
 13227  006330  0E8E               	movlw	142
 13228  006332  5F4C               	subwf	___fttol@exp1& (0+255),f,b
 13229                           
 13230                           ; BSR set to: 2
 13231  006334  AF4C               	btfss	___fttol@exp1& (0+255),7,b
 13232  006336  D016               	goto	l1587
 13233                           
 13234                           ; BSR set to: 2
 13235  006338  514C               	movf	___fttol@exp1& (0+255),w,b
 13236  00633A  0A80               	xorlw	128
 13237  00633C  0F8F               	addlw	143
 13238  00633E  B0D8               	btfsc	16344,0,c
 13239  006340  D009               	goto	l1588
 13240                           
 13241                           ; BSR set to: 2
 13242  006342  0E00               	movlw	0
 13243  006344  6F3E               	movwf	?___fttol& (0+255),b
 13244  006346  0E00               	movlw	0
 13245  006348  6F3F               	movwf	(?___fttol+1)& (0+255),b
 13246  00634A  0E00               	movlw	0
 13247  00634C  6F40               	movwf	(?___fttol+2)& (0+255),b
 13248  00634E  0E00               	movlw	0
 13249  006350  6F41               	movwf	(?___fttol+3)& (0+255),b
 13250                           
 13251                           ; BSR set to: 2
 13252  006352  0012               	return	
 13253  006354                     l1588:
 13254                           
 13255                           ; BSR set to: 2
 13256                           
 13257                           ; BSR set to: 2
 13258                           
 13259                           ; BSR set to: 2
 13260  006354  90D8               	bcf	16344,0,c
 13261  006356  334B               	rrcf	(___fttol@lval+3)& (0+255),f,b
 13262  006358  334A               	rrcf	(___fttol@lval+2)& (0+255),f,b
 13263  00635A  3349               	rrcf	(___fttol@lval+1)& (0+255),f,b
 13264  00635C  3348               	rrcf	___fttol@lval& (0+255),f,b
 13265                           
 13266                           ; BSR set to: 2
 13267  00635E  3F4C               	incfsz	___fttol@exp1& (0+255),f,b
 13268  006360  D7F9               	goto	l1588
 13269                           
 13270                           ; BSR set to: 2
 13271  006362  D015               	goto	u16630
 13272  006364                     l1587:
 13273                           
 13274                           ; BSR set to: 2
 13275                           
 13276                           ; BSR set to: 2
 13277  006364  0E17               	movlw	23
 13278  006366  654C               	cpfsgt	___fttol@exp1& (0+255),b
 13279  006368  D00F               	goto	l1593
 13280                           
 13281                           ; BSR set to: 2
 13282  00636A  0E00               	movlw	0
 13283  00636C  6F3E               	movwf	?___fttol& (0+255),b
 13284  00636E  0E00               	movlw	0
 13285  006370  6F3F               	movwf	(?___fttol+1)& (0+255),b
 13286  006372  0E00               	movlw	0
 13287  006374  6F40               	movwf	(?___fttol+2)& (0+255),b
 13288  006376  0E00               	movlw	0
 13289  006378  6F41               	movwf	(?___fttol+3)& (0+255),b
 13290                           
 13291                           ; BSR set to: 2
 13292  00637A  0012               	return	
 13293  00637C                     
 13294                           ; BSR set to: 2
 13295                           
 13296                           ; BSR set to: 2
 13297  00637C  90D8               	bcf	16344,0,c
 13298  00637E  3748               	rlcf	___fttol@lval& (0+255),f,b
 13299  006380  3749               	rlcf	(___fttol@lval+1)& (0+255),f,b
 13300  006382  374A               	rlcf	(___fttol@lval+2)& (0+255),f,b
 13301  006384  374B               	rlcf	(___fttol@lval+3)& (0+255),f,b
 13302  006386  074C               	decf	___fttol@exp1& (0+255),f,b
 13303  006388                     l1593:
 13304                           
 13305                           ; BSR set to: 2
 13306                           
 13307                           ; BSR set to: 2
 13308  006388  514C               	movf	___fttol@exp1& (0+255),w,b
 13309  00638A  A4D8               	btfss	16344,2,c
 13310  00638C  D7F7               	goto	l1594
 13311  00638E                     u16630:
 13312                           
 13313                           ; BSR set to: 2
 13314                           
 13315                           ; BSR set to: 2
 13316                           
 13317                           ; BSR set to: 2
 13318  00638E  5147               	movf	___fttol@sign1& (0+255),w,b
 13319  006390  B4D8               	btfsc	16344,2,c
 13320  006392  D008               	goto	l1596
 13321                           
 13322                           ; BSR set to: 2
 13323  006394  1F4B               	comf	(___fttol@lval+3)& (0+255),f,b
 13324  006396  1F4A               	comf	(___fttol@lval+2)& (0+255),f,b
 13325  006398  1F49               	comf	(___fttol@lval+1)& (0+255),f,b
 13326  00639A  6D48               	negf	___fttol@lval& (0+255),b
 13327  00639C  0E00               	movlw	0
 13328  00639E  2349               	addwfc	(___fttol@lval+1)& (0+255),f,b
 13329  0063A0  234A               	addwfc	(___fttol@lval+2)& (0+255),f,b
 13330  0063A2  234B               	addwfc	(___fttol@lval+3)& (0+255),f,b
 13331  0063A4                     l1596:
 13332                           
 13333                           ; BSR set to: 2
 13334                           
 13335                           ; BSR set to: 2
 13336  0063A4  0060  F920  F23E   	movff	___fttol@lval,?___fttol
 13337  0063AA  0060  F924  F23F   	movff	___fttol@lval+1,?___fttol+1
 13338  0063B0  0060  F928  F240   	movff	___fttol@lval+2,?___fttol+2
 13339  0063B6  0060  F92C  F241   	movff	___fttol@lval+3,?___fttol+3
 13340  0063BC  0012               	return	
 13341  0063BE                     __end_of___fttol:
 13342                           	opt stack 0
 13343                           
 13344 ;; *************** function ___ftsub *****************
 13345 ;; Defined at:
 13346 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 13347 ;; Parameters:    Size  Location     Type
 13348 ;;  f1              3   86[BANK2 ] float 
 13349 ;;  f2              3   89[BANK2 ] float 
 13350 ;; Auto vars:     Size  Location     Type
 13351 ;;		None
 13352 ;; Return value:  Size  Location     Type
 13353 ;;                  3   86[BANK2 ] float 
 13354 ;; Registers used:
 13355 ;;		wreg, status,2, status,0, cstack
 13356 ;; Tracked objects:
 13357 ;;		On entry : 0/0
 13358 ;;		On exit  : 0/0
 13359 ;;		Unchanged: 0/0
 13360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13361 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13364 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13365 ;;Total ram usage:        6 bytes
 13366 ;; Hardware stack levels used:    1
 13367 ;; Hardware stack levels required when called:   12
 13368 ;; This function calls:
 13369 ;;		___ftadd
 13370 ;; This function is called by:
 13371 ;;		_sprintf
 13372 ;; This function uses a non-reentrant model
 13373 ;;
 13374                           
 13375                           	psect	text27
 13376  007E2A                     __ptext27:
 13377                           	opt stack 0
 13378  007E2A                     ___ftsub:
 13379                           	opt stack 17
 13380                           
 13381                           ; BSR set to: 2
 13382                           ;incstack = 0
 13383  007E2A  0102               	movlb	2	; () banked
 13384  007E2C  5159               	movf	___ftsub@f2& (0+255),w,b
 13385  007E2E  115A               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 13386  007E30  115B               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 13387  007E32  B4D8               	btfsc	16344,2,c
 13388  007E34  D006               	goto	l1581
 13389                           
 13390                           ; BSR set to: 2
 13391  007E36  0E00               	movlw	0
 13392  007E38  1B59               	xorwf	___ftsub@f2& (0+255),f,b
 13393  007E3A  0E00               	movlw	0
 13394  007E3C  1B5A               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 13395  007E3E  0E80               	movlw	128
 13396  007E40  1B5B               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 13397  007E42                     l1581:
 13398                           
 13399                           ; BSR set to: 2
 13400                           
 13401                           ; BSR set to: 2
 13402  007E42  0060  F958  F232   	movff	___ftsub@f1,___ftadd@f1
 13403  007E48  0060  F95C  F233   	movff	___ftsub@f1+1,___ftadd@f1+1
 13404  007E4E  0060  F960  F234   	movff	___ftsub@f1+2,___ftadd@f1+2
 13405  007E54  0060  F964  F235   	movff	___ftsub@f2,___ftadd@f2
 13406  007E5A  0060  F968  F236   	movff	___ftsub@f2+1,___ftadd@f2+1
 13407  007E60  0060  F96C  F237   	movff	___ftsub@f2+2,___ftadd@f2+2
 13408  007E66  EC3A  F029         	call	___ftadd	;wreg free
 13409  007E6A  0060  F8C8  F256   	movff	?___ftadd,?___ftsub
 13410  007E70  0060  F8CC  F257   	movff	?___ftadd+1,?___ftsub+1
 13411  007E76  0060  F8D0  F258   	movff	?___ftadd+2,?___ftsub+2
 13412  007E7C  0012               	return	
 13413  007E7E                     __end_of___ftsub:
 13414                           	opt stack 0
 13415                           
 13416 ;; *************** function ___ftadd *****************
 13417 ;; Defined at:
 13418 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 13419 ;; Parameters:    Size  Location     Type
 13420 ;;  f1              3   50[BANK2 ] float 
 13421 ;;  f2              3   53[BANK2 ] float 
 13422 ;; Auto vars:     Size  Location     Type
 13423 ;;  exp1            1   61[BANK2 ] unsigned char 
 13424 ;;  exp2            1   60[BANK2 ] unsigned char 
 13425 ;;  sign            1   59[BANK2 ] unsigned char 
 13426 ;; Return value:  Size  Location     Type
 13427 ;;                  3   50[BANK2 ] float 
 13428 ;; Registers used:
 13429 ;;		wreg, status,2, status,0, cstack
 13430 ;; Tracked objects:
 13431 ;;		On entry : 0/0
 13432 ;;		On exit  : 0/0
 13433 ;;		Unchanged: 0/0
 13434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13435 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13436 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13437 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13438 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13439 ;;Total ram usage:       12 bytes
 13440 ;; Hardware stack levels used:    1
 13441 ;; Hardware stack levels required when called:   11
 13442 ;; This function calls:
 13443 ;;		___ftpack
 13444 ;; This function is called by:
 13445 ;;		_Converte_Escala
 13446 ;;		_sprintf
 13447 ;;		___ftsub
 13448 ;;		_polinomio
 13449 ;; This function uses a non-reentrant model
 13450 ;;
 13451                           
 13452                           	psect	text28
 13453  005274                     __ptext28:
 13454                           	opt stack 0
 13455  005274                     ___ftadd:
 13456                           	opt stack 17
 13457                           
 13458                           ;incstack = 0
 13459  005274  0060  F8D0  F238   	movff	___ftadd@f1+2,??___ftadd
 13460  00527A  0102               	movlb	2	; () banked
 13461  00527C  6B39               	clrf	(??___ftadd+1)& (0+255),b
 13462  00527E  6B3A               	clrf	(??___ftadd+2)& (0+255),b
 13463  005280  3533               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 13464  005282  3738               	rlcf	??___ftadd& (0+255),f,b
 13465  005284  E301               	bnc	u15651
 13466  005286  8139               	bsf	(??___ftadd+1)& (0+255),0,b
 13467  005288                     u15651:
 13468  005288  5138               	movf	??___ftadd& (0+255),w,b
 13469  00528A  6F3D               	movwf	___ftadd@exp1& (0+255),b
 13470  00528C  0060  F8DC  F238   	movff	___ftadd@f2+2,??___ftadd
 13471  005292  6B39               	clrf	(??___ftadd+1)& (0+255),b
 13472  005294  6B3A               	clrf	(??___ftadd+2)& (0+255),b
 13473  005296  3536               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 13474  005298  3738               	rlcf	??___ftadd& (0+255),f,b
 13475  00529A  E301               	bnc	u15661
 13476  00529C  8139               	bsf	(??___ftadd+1)& (0+255),0,b
 13477  00529E                     u15661:
 13478  00529E  5138               	movf	??___ftadd& (0+255),w,b
 13479  0052A0  6F3C               	movwf	___ftadd@exp2& (0+255),b
 13480                           
 13481                           ; BSR set to: 2
 13482  0052A2  513D               	movf	___ftadd@exp1& (0+255),w,b
 13483  0052A4  B4D8               	btfsc	16344,2,c
 13484  0052A6  D00B               	goto	u15690
 13485                           
 13486                           ; BSR set to: 2
 13487  0052A8  513C               	movf	___ftadd@exp2& (0+255),w,b
 13488  0052AA  5D3D               	subwf	___ftadd@exp1& (0+255),w,b
 13489  0052AC  B0D8               	btfsc	16344,0,c
 13490  0052AE  D011               	goto	l1499
 13491                           
 13492                           ; BSR set to: 2
 13493  0052B0  513D               	movf	___ftadd@exp1& (0+255),w,b
 13494  0052B2  0800               	sublw	0
 13495  0052B4  253C               	addwf	___ftadd@exp2& (0+255),w,b
 13496  0052B6  6F38               	movwf	??___ftadd& (0+255),b
 13497  0052B8  0E18               	movlw	24
 13498  0052BA  6538               	cpfsgt	??___ftadd& (0+255),b
 13499  0052BC  D00A               	goto	l1499
 13500  0052BE                     u15690:
 13501                           
 13502                           ; BSR set to: 2
 13503  0052BE  0060  F8D4  F232   	movff	___ftadd@f2,?___ftadd
 13504  0052C4  0060  F8D8  F233   	movff	___ftadd@f2+1,?___ftadd+1
 13505  0052CA  0060  F8DC  F234   	movff	___ftadd@f2+2,?___ftadd+2
 13506  0052D0  0012               	return	
 13507  0052D2                     l1499:
 13508                           
 13509                           ; BSR set to: 2
 13510                           
 13511                           ; BSR set to: 2
 13512  0052D2  513C               	movf	___ftadd@exp2& (0+255),w,b
 13513  0052D4  B4D8               	btfsc	16344,2,c
 13514  0052D6  D00B               	goto	u15720
 13515                           
 13516                           ; BSR set to: 2
 13517  0052D8  513D               	movf	___ftadd@exp1& (0+255),w,b
 13518  0052DA  5D3C               	subwf	___ftadd@exp2& (0+255),w,b
 13519  0052DC  B0D8               	btfsc	16344,0,c
 13520  0052DE  D011               	goto	l1503
 13521                           
 13522                           ; BSR set to: 2
 13523  0052E0  513C               	movf	___ftadd@exp2& (0+255),w,b
 13524  0052E2  0800               	sublw	0
 13525  0052E4  253D               	addwf	___ftadd@exp1& (0+255),w,b
 13526  0052E6  6F38               	movwf	??___ftadd& (0+255),b
 13527  0052E8  0E18               	movlw	24
 13528  0052EA  6538               	cpfsgt	??___ftadd& (0+255),b
 13529  0052EC  D00A               	goto	l1503
 13530  0052EE                     u15720:
 13531                           
 13532                           ; BSR set to: 2
 13533  0052EE  0060  F8C8  F232   	movff	___ftadd@f1,?___ftadd
 13534  0052F4  0060  F8CC  F233   	movff	___ftadd@f1+1,?___ftadd+1
 13535  0052FA  0060  F8D0  F234   	movff	___ftadd@f1+2,?___ftadd+2
 13536  005300  0012               	return	
 13537  005302                     l1503:
 13538                           
 13539                           ; BSR set to: 2
 13540                           
 13541                           ; BSR set to: 2
 13542  005302  0E06               	movlw	6
 13543  005304  6F3B               	movwf	___ftadd@sign& (0+255),b
 13544                           
 13545                           ; BSR set to: 2
 13546  005306  BF34               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 13547                           
 13548                           ; BSR set to: 2
 13549  005308  8F3B               	bsf	___ftadd@sign& (0+255),7,b
 13550                           
 13551                           ; BSR set to: 2
 13552                           
 13553                           ; BSR set to: 2
 13554  00530A  BF37               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 13555                           
 13556                           ; BSR set to: 2
 13557  00530C  8D3B               	bsf	___ftadd@sign& (0+255),6,b
 13558                           
 13559                           ; BSR set to: 2
 13560  00530E  8F33               	bsf	(___ftadd@f1+1)& (0+255),7,b
 13561                           
 13562                           ; BSR set to: 2
 13563  005310  0EFF               	movlw	255
 13564  005312  1732               	andwf	___ftadd@f1& (0+255),f,b
 13565  005314  0EFF               	movlw	255
 13566  005316  1733               	andwf	(___ftadd@f1+1)& (0+255),f,b
 13567  005318  0E00               	movlw	0
 13568  00531A  1734               	andwf	(___ftadd@f1+2)& (0+255),f,b
 13569  00531C  8F36               	bsf	(___ftadd@f2+1)& (0+255),7,b
 13570                           
 13571                           ; BSR set to: 2
 13572  00531E  0EFF               	movlw	255
 13573  005320  1735               	andwf	___ftadd@f2& (0+255),f,b
 13574  005322  0EFF               	movlw	255
 13575  005324  1736               	andwf	(___ftadd@f2+1)& (0+255),f,b
 13576  005326  0E00               	movlw	0
 13577  005328  1737               	andwf	(___ftadd@f2+2)& (0+255),f,b
 13578                           
 13579                           ; BSR set to: 2
 13580  00532A  513C               	movf	___ftadd@exp2& (0+255),w,b
 13581  00532C  5D3D               	subwf	___ftadd@exp1& (0+255),w,b
 13582  00532E  B0D8               	btfsc	16344,0,c
 13583  005330  D01C               	goto	l1508
 13584  005332                     u15750:
 13585                           
 13586                           ; BSR set to: 2
 13587                           
 13588                           ; BSR set to: 2
 13589  005332  90D8               	bcf	16344,0,c
 13590  005334  3735               	rlcf	___ftadd@f2& (0+255),f,b
 13591  005336  3736               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 13592  005338  3737               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 13593  00533A  073C               	decf	___ftadd@exp2& (0+255),f,b
 13594                           
 13595                           ; BSR set to: 2
 13596  00533C  513D               	movf	___ftadd@exp1& (0+255),w,b
 13597  00533E  193C               	xorwf	___ftadd@exp2& (0+255),w,b
 13598  005340  B4D8               	btfsc	16344,2,c
 13599  005342  D00E               	goto	l1513
 13600                           
 13601                           ; BSR set to: 2
 13602  005344  073B               	decf	___ftadd@sign& (0+255),f,b
 13603  005346  0060  F8EC  F238   	movff	___ftadd@sign,??___ftadd
 13604  00534C  0E07               	movlw	7
 13605  00534E  1738               	andwf	??___ftadd& (0+255),f,b
 13606  005350  B4D8               	btfsc	16344,2,c
 13607  005352  D006               	goto	l1513
 13608  005354  D7EE               	goto	u15750
 13609  005356                     
 13610                           ; BSR set to: 2
 13611                           
 13612                           ; BSR set to: 2
 13613  005356  90D8               	bcf	16344,0,c
 13614  005358  3334               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 13615  00535A  3333               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 13616  00535C  3332               	rrcf	___ftadd@f1& (0+255),f,b
 13617  00535E  2B3D               	incf	___ftadd@exp1& (0+255),f,b
 13618  005360                     l1513:
 13619                           
 13620                           ; BSR set to: 2
 13621                           
 13622                           ; BSR set to: 2
 13623  005360  513C               	movf	___ftadd@exp2& (0+255),w,b
 13624  005362  193D               	xorwf	___ftadd@exp1& (0+255),w,b
 13625  005364  B4D8               	btfsc	16344,2,c
 13626  005366  D020               	goto	u15820
 13627  005368  D7F6               	goto	l1514
 13628  00536A                     l1508:
 13629                           
 13630                           ; BSR set to: 2
 13631                           
 13632                           ; BSR set to: 2
 13633  00536A  513D               	movf	___ftadd@exp1& (0+255),w,b
 13634  00536C  5D3C               	subwf	___ftadd@exp2& (0+255),w,b
 13635  00536E  B0D8               	btfsc	16344,0,c
 13636  005370  D01B               	goto	u15820
 13637  005372                     u15790:
 13638                           
 13639                           ; BSR set to: 2
 13640                           
 13641                           ; BSR set to: 2
 13642  005372  90D8               	bcf	16344,0,c
 13643  005374  3732               	rlcf	___ftadd@f1& (0+255),f,b
 13644  005376  3733               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 13645  005378  3734               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 13646  00537A  073D               	decf	___ftadd@exp1& (0+255),f,b
 13647                           
 13648                           ; BSR set to: 2
 13649  00537C  513D               	movf	___ftadd@exp1& (0+255),w,b
 13650  00537E  193C               	xorwf	___ftadd@exp2& (0+255),w,b
 13651  005380  B4D8               	btfsc	16344,2,c
 13652  005382  D00E               	goto	l1522
 13653                           
 13654                           ; BSR set to: 2
 13655  005384  073B               	decf	___ftadd@sign& (0+255),f,b
 13656  005386  0060  F8EC  F238   	movff	___ftadd@sign,??___ftadd
 13657  00538C  0E07               	movlw	7
 13658  00538E  1738               	andwf	??___ftadd& (0+255),f,b
 13659  005390  B4D8               	btfsc	16344,2,c
 13660  005392  D006               	goto	l1522
 13661  005394  D7EE               	goto	u15790
 13662  005396                     
 13663                           ; BSR set to: 2
 13664                           
 13665                           ; BSR set to: 2
 13666  005396  90D8               	bcf	16344,0,c
 13667  005398  3337               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 13668  00539A  3336               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 13669  00539C  3335               	rrcf	___ftadd@f2& (0+255),f,b
 13670  00539E  2B3C               	incf	___ftadd@exp2& (0+255),f,b
 13671  0053A0                     l1522:
 13672                           
 13673                           ; BSR set to: 2
 13674                           
 13675                           ; BSR set to: 2
 13676  0053A0  513C               	movf	___ftadd@exp2& (0+255),w,b
 13677  0053A2  193D               	xorwf	___ftadd@exp1& (0+255),w,b
 13678  0053A4  A4D8               	btfss	16344,2,c
 13679  0053A6  D7F7               	goto	l1523
 13680  0053A8                     u15820:
 13681                           
 13682                           ; BSR set to: 2
 13683                           
 13684                           ; BSR set to: 2
 13685                           
 13686                           ; BSR set to: 2
 13687  0053A8  AF3B               	btfss	___ftadd@sign& (0+255),7,b
 13688  0053AA  D00C               	goto	l1525
 13689                           
 13690                           ; BSR set to: 2
 13691  0053AC  0EFF               	movlw	255
 13692  0053AE  1B32               	xorwf	___ftadd@f1& (0+255),f,b
 13693  0053B0  0EFF               	movlw	255
 13694  0053B2  1B33               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 13695  0053B4  0EFF               	movlw	255
 13696  0053B6  1B34               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 13697  0053B8  0E01               	movlw	1
 13698  0053BA  2732               	addwf	___ftadd@f1& (0+255),f,b
 13699  0053BC  0E00               	movlw	0
 13700  0053BE  2333               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 13701  0053C0  0E00               	movlw	0
 13702  0053C2  2334               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 13703  0053C4                     l1525:
 13704                           
 13705                           ; BSR set to: 2
 13706  0053C4  AD3B               	btfss	___ftadd@sign& (0+255),6,b
 13707  0053C6  D00C               	goto	l1526
 13708                           
 13709                           ; BSR set to: 2
 13710  0053C8  0EFF               	movlw	255
 13711  0053CA  1B35               	xorwf	___ftadd@f2& (0+255),f,b
 13712  0053CC  0EFF               	movlw	255
 13713  0053CE  1B36               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 13714  0053D0  0EFF               	movlw	255
 13715  0053D2  1B37               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 13716  0053D4  0E01               	movlw	1
 13717  0053D6  2735               	addwf	___ftadd@f2& (0+255),f,b
 13718  0053D8  0E00               	movlw	0
 13719  0053DA  2336               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 13720  0053DC  0E00               	movlw	0
 13721  0053DE  2337               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 13722  0053E0                     l1526:
 13723                           
 13724                           ; BSR set to: 2
 13725                           
 13726                           ; BSR set to: 2
 13727  0053E0  0E00               	movlw	0
 13728  0053E2  6F3B               	movwf	___ftadd@sign& (0+255),b
 13729                           
 13730                           ; BSR set to: 2
 13731  0053E4  5132               	movf	___ftadd@f1& (0+255),w,b
 13732  0053E6  2735               	addwf	___ftadd@f2& (0+255),f,b
 13733  0053E8  5133               	movf	(___ftadd@f1+1)& (0+255),w,b
 13734  0053EA  2336               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 13735  0053EC  5134               	movf	(___ftadd@f1+2)& (0+255),w,b
 13736  0053EE  2337               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 13737                           
 13738                           ; BSR set to: 2
 13739  0053F0  AF37               	btfss	(___ftadd@f2+2)& (0+255),7,b
 13740  0053F2  D00E               	goto	l1527
 13741                           
 13742                           ; BSR set to: 2
 13743  0053F4  0EFF               	movlw	255
 13744  0053F6  1B35               	xorwf	___ftadd@f2& (0+255),f,b
 13745  0053F8  0EFF               	movlw	255
 13746  0053FA  1B36               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 13747  0053FC  0EFF               	movlw	255
 13748  0053FE  1B37               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 13749  005400  0E01               	movlw	1
 13750  005402  2735               	addwf	___ftadd@f2& (0+255),f,b
 13751  005404  0E00               	movlw	0
 13752  005406  2336               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 13753  005408  0E00               	movlw	0
 13754  00540A  2337               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 13755                           
 13756                           ; BSR set to: 2
 13757  00540C  0E01               	movlw	1
 13758  00540E  6F3B               	movwf	___ftadd@sign& (0+255),b
 13759  005410                     l1527:
 13760                           
 13761                           ; BSR set to: 2
 13762                           
 13763                           ; BSR set to: 2
 13764  005410  0060  F8D4  F205   	movff	___ftadd@f2,___ftpack@arg
 13765  005416  0060  F8D8  F206   	movff	___ftadd@f2+1,___ftpack@arg+1
 13766  00541C  0060  F8DC  F207   	movff	___ftadd@f2+2,___ftpack@arg+2
 13767  005422  0060  F8F4  F208   	movff	___ftadd@exp1,___ftpack@exp
 13768  005428  0060  F8EC  F209   	movff	___ftadd@sign,___ftpack@sign
 13769  00542E  EC2C  F037         	call	___ftpack	;wreg free
 13770  005432  0060  F814  F232   	movff	?___ftpack,?___ftadd
 13771  005438  0060  F818  F233   	movff	?___ftpack+1,?___ftadd+1
 13772  00543E  0060  F81C  F234   	movff	?___ftpack+2,?___ftadd+2
 13773  005444  0012               	return	
 13774  005446                     __end_of___ftadd:
 13775                           	opt stack 0
 13776                           
 13777 ;; *************** function ___ftneg *****************
 13778 ;; Defined at:
 13779 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 13780 ;; Parameters:    Size  Location     Type
 13781 ;;  f1              3   86[BANK2 ] float 
 13782 ;; Auto vars:     Size  Location     Type
 13783 ;;		None
 13784 ;; Return value:  Size  Location     Type
 13785 ;;                  3   86[BANK2 ] float 
 13786 ;; Registers used:
 13787 ;;		wreg, status,2, status,0
 13788 ;; Tracked objects:
 13789 ;;		On entry : 0/0
 13790 ;;		On exit  : 0/0
 13791 ;;		Unchanged: 0/0
 13792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13793 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13796 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13797 ;;Total ram usage:        3 bytes
 13798 ;; Hardware stack levels used:    1
 13799 ;; Hardware stack levels required when called:   10
 13800 ;; This function calls:
 13801 ;;		Nothing
 13802 ;; This function is called by:
 13803 ;;		_sprintf
 13804 ;;		_polinomio
 13805 ;; This function uses a non-reentrant model
 13806 ;;
 13807                           
 13808                           	psect	text29
 13809  0083C0                     __ptext29:
 13810                           	opt stack 0
 13811  0083C0                     ___ftneg:
 13812                           	opt stack 19
 13813                           
 13814                           ;incstack = 0
 13815  0083C0  0102               	movlb	2	; () banked
 13816  0083C2  5156               	movf	___ftneg@f1& (0+255),w,b
 13817  0083C4  1157               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 13818  0083C6  1158               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 13819  0083C8  B4D8               	btfsc	16344,2,c
 13820  0083CA  D006               	goto	l1575
 13821                           
 13822                           ; BSR set to: 2
 13823  0083CC  0E00               	movlw	0
 13824  0083CE  1B56               	xorwf	___ftneg@f1& (0+255),f,b
 13825  0083D0  0E00               	movlw	0
 13826  0083D2  1B57               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 13827  0083D4  0E80               	movlw	128
 13828  0083D6  1B58               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 13829  0083D8                     l1575:
 13830                           
 13831                           ; BSR set to: 2
 13832  0083D8  0060  F958  F256   	movff	___ftneg@f1,?___ftneg
 13833  0083DE  0060  F95C  F257   	movff	___ftneg@f1+1,?___ftneg+1
 13834  0083E4  0060  F960  F258   	movff	___ftneg@f1+2,?___ftneg+2
 13835                           
 13836                           ; BSR set to: 2
 13837  0083EA  0012               	return		;funcret
 13838  0083EC                     __end_of___ftneg:
 13839                           	opt stack 0
 13840                           
 13841 ;; *************** function ___ftge *****************
 13842 ;; Defined at:
 13843 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 13844 ;; Parameters:    Size  Location     Type
 13845 ;;  ff1             3   89[BANK2 ] float 
 13846 ;;  ff2             3   92[BANK2 ] float 
 13847 ;; Auto vars:     Size  Location     Type
 13848 ;;		None
 13849 ;; Return value:  Size  Location     Type
 13850 ;;		None               void
 13851 ;; Registers used:
 13852 ;;		wreg, status,2, status,0
 13853 ;; Tracked objects:
 13854 ;;		On entry : 0/0
 13855 ;;		On exit  : 0/0
 13856 ;;		Unchanged: 0/0
 13857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13858 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13860 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13861 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13862 ;;Total ram usage:        9 bytes
 13863 ;; Hardware stack levels used:    1
 13864 ;; Hardware stack levels required when called:   10
 13865 ;; This function calls:
 13866 ;;		Nothing
 13867 ;; This function is called by:
 13868 ;;		_sprintf
 13869 ;; This function uses a non-reentrant model
 13870 ;;
 13871                           
 13872                           	psect	text30
 13873  007272                     __ptext30:
 13874                           	opt stack 0
 13875  007272                     ___ftge:
 13876                           	opt stack 19
 13877                           
 13878                           ; BSR set to: 2
 13879                           ;incstack = 0
 13880  007272  0102               	movlb	2	; () banked
 13881  007274  AF5B               	btfss	(___ftge@ff1+2)& (0+255),7,b
 13882  007276  D019               	goto	l1557
 13883                           
 13884                           ; BSR set to: 2
 13885  007278  0060  F964  F25F   	movff	___ftge@ff1,??___ftge
 13886  00727E  0060  F968  F260   	movff	___ftge@ff1+1,??___ftge+1
 13887  007284  0060  F96C  F261   	movff	___ftge@ff1+2,??___ftge+2
 13888  00728A  1F5F               	comf	??___ftge& (0+255),f,b
 13889  00728C  1F60               	comf	(??___ftge+1)& (0+255),f,b
 13890  00728E  1F61               	comf	(??___ftge+2)& (0+255),f,b
 13891  007290  2B5F               	incf	??___ftge& (0+255),f,b
 13892  007292  0E00               	movlw	0
 13893  007294  2360               	addwfc	(??___ftge+1)& (0+255),f,b
 13894  007296  2361               	addwfc	(??___ftge+2)& (0+255),f,b
 13895  007298  0E00               	movlw	0
 13896  00729A  255F               	addwf	??___ftge& (0+255),w,b
 13897  00729C  6F59               	movwf	___ftge@ff1& (0+255),b
 13898  00729E  0E00               	movlw	0
 13899  0072A0  2160               	addwfc	(??___ftge+1)& (0+255),w,b
 13900  0072A2  6F5A               	movwf	(___ftge@ff1+1)& (0+255),b
 13901  0072A4  0E80               	movlw	128
 13902  0072A6  2161               	addwfc	(??___ftge+2)& (0+255),w,b
 13903  0072A8  6F5B               	movwf	(___ftge@ff1+2)& (0+255),b
 13904  0072AA                     l1557:
 13905                           
 13906                           ; BSR set to: 2
 13907                           
 13908                           ; BSR set to: 2
 13909  0072AA  AF5E               	btfss	(___ftge@ff2+2)& (0+255),7,b
 13910  0072AC  D019               	goto	l1558
 13911                           
 13912                           ; BSR set to: 2
 13913  0072AE  0060  F970  F25F   	movff	___ftge@ff2,??___ftge
 13914  0072B4  0060  F974  F260   	movff	___ftge@ff2+1,??___ftge+1
 13915  0072BA  0060  F978  F261   	movff	___ftge@ff2+2,??___ftge+2
 13916  0072C0  1F5F               	comf	??___ftge& (0+255),f,b
 13917  0072C2  1F60               	comf	(??___ftge+1)& (0+255),f,b
 13918  0072C4  1F61               	comf	(??___ftge+2)& (0+255),f,b
 13919  0072C6  2B5F               	incf	??___ftge& (0+255),f,b
 13920  0072C8  0E00               	movlw	0
 13921  0072CA  2360               	addwfc	(??___ftge+1)& (0+255),f,b
 13922  0072CC  2361               	addwfc	(??___ftge+2)& (0+255),f,b
 13923  0072CE  0E00               	movlw	0
 13924  0072D0  255F               	addwf	??___ftge& (0+255),w,b
 13925  0072D2  6F5C               	movwf	___ftge@ff2& (0+255),b
 13926  0072D4  0E00               	movlw	0
 13927  0072D6  2160               	addwfc	(??___ftge+1)& (0+255),w,b
 13928  0072D8  6F5D               	movwf	(___ftge@ff2+1)& (0+255),b
 13929  0072DA  0E80               	movlw	128
 13930  0072DC  2161               	addwfc	(??___ftge+2)& (0+255),w,b
 13931  0072DE  6F5E               	movwf	(___ftge@ff2+2)& (0+255),b
 13932  0072E0                     l1558:
 13933                           
 13934                           ; BSR set to: 2
 13935                           
 13936                           ; BSR set to: 2
 13937  0072E0  0E00               	movlw	0
 13938  0072E2  1B59               	xorwf	___ftge@ff1& (0+255),f,b
 13939  0072E4  0E00               	movlw	0
 13940  0072E6  1B5A               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 13941  0072E8  0E80               	movlw	128
 13942  0072EA  1B5B               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 13943                           
 13944                           ; BSR set to: 2
 13945  0072EC  0E00               	movlw	0
 13946  0072EE  1B5C               	xorwf	___ftge@ff2& (0+255),f,b
 13947  0072F0  0E00               	movlw	0
 13948  0072F2  1B5D               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 13949  0072F4  0E80               	movlw	128
 13950  0072F6  1B5E               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 13951  0072F8  515C               	movf	___ftge@ff2& (0+255),w,b
 13952  0072FA  5D59               	subwf	___ftge@ff1& (0+255),w,b
 13953  0072FC  515D               	movf	(___ftge@ff2+1)& (0+255),w,b
 13954  0072FE  595A               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 13955  007300  515E               	movf	(___ftge@ff2+2)& (0+255),w,b
 13956  007302  595B               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 13957  007304  B0D8               	btfsc	16344,0,c
 13958  007306  D002               	goto	l10233
 13959                           
 13960                           ; BSR set to: 2
 13961  007308  90D8               	bcf	16344,0,c
 13962  00730A  0012               	return	
 13963  00730C                     l10233:
 13964                           
 13965                           ; BSR set to: 2
 13966                           
 13967                           ; BSR set to: 2
 13968  00730C  80D8               	bsf	16344,0,c
 13969                           
 13970                           ; BSR set to: 2
 13971  00730E  0012               	return	
 13972  007310                     __end_of___ftge:
 13973                           	opt stack 0
 13974                           
 13975 ;; *************** function ___ftdiv *****************
 13976 ;; Defined at:
 13977 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 13978 ;; Parameters:    Size  Location     Type
 13979 ;;  f1              3   47[BANK2 ] float 
 13980 ;;  f2              3   50[BANK2 ] float 
 13981 ;; Auto vars:     Size  Location     Type
 13982 ;;  f3              3   57[BANK2 ] float 
 13983 ;;  sign            1   61[BANK2 ] unsigned char 
 13984 ;;  exp             1   60[BANK2 ] unsigned char 
 13985 ;;  cntr            1   56[BANK2 ] unsigned char 
 13986 ;; Return value:  Size  Location     Type
 13987 ;;                  3   47[BANK2 ] float 
 13988 ;; Registers used:
 13989 ;;		wreg, status,2, status,0, cstack
 13990 ;; Tracked objects:
 13991 ;;		On entry : 0/0
 13992 ;;		On exit  : 0/0
 13993 ;;		Unchanged: 0/0
 13994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13995 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13996 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13997 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13998 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13999 ;;Total ram usage:       15 bytes
 14000 ;; Hardware stack levels used:    1
 14001 ;; Hardware stack levels required when called:   11
 14002 ;; This function calls:
 14003 ;;		___ftpack
 14004 ;; This function is called by:
 14005 ;;		_Calcula_Fator_m
 14006 ;;		_sprintf
 14007 ;;		_polinomio
 14008 ;; This function uses a non-reentrant model
 14009 ;;
 14010                           
 14011                           	psect	text31
 14012  0065C4                     __ptext31:
 14013                           	opt stack 0
 14014  0065C4                     ___ftdiv:
 14015                           	opt stack 18
 14016                           
 14017                           ; BSR set to: 2
 14018                           ;incstack = 0
 14019  0065C4  0060  F8C4  F235   	movff	___ftdiv@f1+2,??___ftdiv
 14020  0065CA  0102               	movlb	2	; () banked
 14021  0065CC  6B36               	clrf	(??___ftdiv+1)& (0+255),b
 14022  0065CE  6B37               	clrf	(??___ftdiv+2)& (0+255),b
 14023  0065D0  3530               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 14024  0065D2  3735               	rlcf	??___ftdiv& (0+255),f,b
 14025  0065D4  E301               	bnc	u15861
 14026  0065D6  8136               	bsf	(??___ftdiv+1)& (0+255),0,b
 14027  0065D8                     u15861:
 14028  0065D8  5135               	movf	??___ftdiv& (0+255),w,b
 14029  0065DA  6F3C               	movwf	___ftdiv@exp& (0+255),b
 14030  0065DC  513C               	movf	___ftdiv@exp& (0+255),w,b
 14031  0065DE  A4D8               	btfss	16344,2,c
 14032  0065E0  D007               	goto	l1532
 14033                           
 14034                           ; BSR set to: 2
 14035  0065E2  0E00               	movlw	0
 14036  0065E4  6F2F               	movwf	?___ftdiv& (0+255),b
 14037  0065E6  0E00               	movlw	0
 14038  0065E8  6F30               	movwf	(?___ftdiv+1)& (0+255),b
 14039  0065EA  0E00               	movlw	0
 14040  0065EC  6F31               	movwf	(?___ftdiv+2)& (0+255),b
 14041                           
 14042                           ; BSR set to: 2
 14043  0065EE  0012               	return	
 14044  0065F0                     l1532:
 14045                           
 14046                           ; BSR set to: 2
 14047                           
 14048                           ; BSR set to: 2
 14049  0065F0  0060  F8D0  F235   	movff	___ftdiv@f2+2,??___ftdiv
 14050  0065F6  6B36               	clrf	(??___ftdiv+1)& (0+255),b
 14051  0065F8  6B37               	clrf	(??___ftdiv+2)& (0+255),b
 14052  0065FA  3533               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 14053  0065FC  3735               	rlcf	??___ftdiv& (0+255),f,b
 14054  0065FE  E301               	bnc	u15881
 14055  006600  8136               	bsf	(??___ftdiv+1)& (0+255),0,b
 14056  006602                     u15881:
 14057  006602  5135               	movf	??___ftdiv& (0+255),w,b
 14058  006604  6F3D               	movwf	___ftdiv@sign& (0+255),b
 14059  006606  513D               	movf	___ftdiv@sign& (0+255),w,b
 14060  006608  A4D8               	btfss	16344,2,c
 14061  00660A  D007               	goto	l1534
 14062                           
 14063                           ; BSR set to: 2
 14064  00660C  0E00               	movlw	0
 14065  00660E  6F2F               	movwf	?___ftdiv& (0+255),b
 14066  006610  0E00               	movlw	0
 14067  006612  6F30               	movwf	(?___ftdiv+1)& (0+255),b
 14068  006614  0E00               	movlw	0
 14069  006616  6F31               	movwf	(?___ftdiv+2)& (0+255),b
 14070                           
 14071                           ; BSR set to: 2
 14072  006618  0012               	return	
 14073  00661A                     l1534:
 14074                           
 14075                           ; BSR set to: 2
 14076                           
 14077                           ; BSR set to: 2
 14078  00661A  0E00               	movlw	0
 14079  00661C  6F39               	movwf	___ftdiv@f3& (0+255),b
 14080  00661E  0E00               	movlw	0
 14081  006620  6F3A               	movwf	(___ftdiv@f3+1)& (0+255),b
 14082  006622  0E00               	movlw	0
 14083  006624  6F3B               	movwf	(___ftdiv@f3+2)& (0+255),b
 14084                           
 14085                           ; BSR set to: 2
 14086  006626  513D               	movf	___ftdiv@sign& (0+255),w,b
 14087  006628  0F89               	addlw	137
 14088  00662A  5F3C               	subwf	___ftdiv@exp& (0+255),f,b
 14089                           
 14090                           ; BSR set to: 2
 14091  00662C  0060  F8C4  F23D   	movff	___ftdiv@f1+2,___ftdiv@sign
 14092                           
 14093                           ; BSR set to: 2
 14094  006632  5134               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14095  006634  1B3D               	xorwf	___ftdiv@sign& (0+255),f,b
 14096                           
 14097                           ; BSR set to: 2
 14098  006636  0E80               	movlw	128
 14099  006638  173D               	andwf	___ftdiv@sign& (0+255),f,b
 14100                           
 14101                           ; BSR set to: 2
 14102  00663A  8F30               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 14103                           
 14104                           ; BSR set to: 2
 14105  00663C  0EFF               	movlw	255
 14106  00663E  172F               	andwf	___ftdiv@f1& (0+255),f,b
 14107  006640  0EFF               	movlw	255
 14108  006642  1730               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 14109  006644  0E00               	movlw	0
 14110  006646  1731               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 14111                           
 14112                           ; BSR set to: 2
 14113  006648  8F33               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 14114                           
 14115                           ; BSR set to: 2
 14116  00664A  0EFF               	movlw	255
 14117  00664C  1732               	andwf	___ftdiv@f2& (0+255),f,b
 14118  00664E  0EFF               	movlw	255
 14119  006650  1733               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 14120  006652  0E00               	movlw	0
 14121  006654  1734               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 14122                           
 14123                           ; BSR set to: 2
 14124  006656  0E18               	movlw	24
 14125  006658  6F38               	movwf	___ftdiv@cntr& (0+255),b
 14126  00665A                     
 14127                           ; BSR set to: 2
 14128                           
 14129                           ; BSR set to: 2
 14130  00665A  90D8               	bcf	16344,0,c
 14131  00665C  3739               	rlcf	___ftdiv@f3& (0+255),f,b
 14132  00665E  373A               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 14133  006660  373B               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 14134                           
 14135                           ; BSR set to: 2
 14136  006662  5132               	movf	___ftdiv@f2& (0+255),w,b
 14137  006664  5D2F               	subwf	___ftdiv@f1& (0+255),w,b
 14138  006666  5133               	movf	(___ftdiv@f2+1)& (0+255),w,b
 14139  006668  5930               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 14140  00666A  5134               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14141  00666C  5931               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 14142  00666E  A0D8               	btfss	16344,0,c
 14143  006670  D007               	goto	l1536
 14144                           
 14145                           ; BSR set to: 2
 14146  006672  5132               	movf	___ftdiv@f2& (0+255),w,b
 14147  006674  5F2F               	subwf	___ftdiv@f1& (0+255),f,b
 14148  006676  5133               	movf	(___ftdiv@f2+1)& (0+255),w,b
 14149  006678  5B30               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 14150  00667A  5134               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14151  00667C  5B31               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 14152                           
 14153                           ; BSR set to: 2
 14154  00667E  8139               	bsf	___ftdiv@f3& (0+255),0,b
 14155  006680                     l1536:
 14156                           
 14157                           ; BSR set to: 2
 14158  006680  90D8               	bcf	16344,0,c
 14159  006682  372F               	rlcf	___ftdiv@f1& (0+255),f,b
 14160  006684  3730               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 14161  006686  3731               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 14162                           
 14163                           ; BSR set to: 2
 14164  006688  2F38               	decfsz	___ftdiv@cntr& (0+255),f,b
 14165  00668A  D7E7               	goto	l1535
 14166                           
 14167                           ; BSR set to: 2
 14168                           
 14169                           ; BSR set to: 2
 14170  00668C  0060  F8E4  F205   	movff	___ftdiv@f3,___ftpack@arg
 14171  006692  0060  F8E8  F206   	movff	___ftdiv@f3+1,___ftpack@arg+1
 14172  006698  0060  F8EC  F207   	movff	___ftdiv@f3+2,___ftpack@arg+2
 14173  00669E  0060  F8F0  F208   	movff	___ftdiv@exp,___ftpack@exp
 14174  0066A4  0060  F8F4  F209   	movff	___ftdiv@sign,___ftpack@sign
 14175  0066AA  EC2C  F037         	call	___ftpack	;wreg free
 14176  0066AE  0060  F814  F22F   	movff	?___ftpack,?___ftdiv
 14177  0066B4  0060  F818  F230   	movff	?___ftpack+1,?___ftdiv+1
 14178  0066BA  0060  F81C  F231   	movff	?___ftpack+2,?___ftdiv+2
 14179  0066C0  0012               	return	
 14180  0066C2                     __end_of___ftdiv:
 14181                           	opt stack 0
 14182                           
 14183 ;; *************** function ___ftpack *****************
 14184 ;; Defined at:
 14185 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 14186 ;; Parameters:    Size  Location     Type
 14187 ;;  arg             3    5[BANK2 ] unsigned um
 14188 ;;  exp             1    8[BANK2 ] unsigned char 
 14189 ;;  sign            1    9[BANK2 ] unsigned char 
 14190 ;; Auto vars:     Size  Location     Type
 14191 ;;		None
 14192 ;; Return value:  Size  Location     Type
 14193 ;;                  3    5[BANK2 ] float 
 14194 ;; Registers used:
 14195 ;;		wreg, status,2, status,0
 14196 ;; Tracked objects:
 14197 ;;		On entry : 0/0
 14198 ;;		On exit  : 0/0
 14199 ;;		Unchanged: 0/0
 14200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14201 ;;      Params:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14203 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14204 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14205 ;;Total ram usage:        8 bytes
 14206 ;; Hardware stack levels used:    1
 14207 ;; Hardware stack levels required when called:   10
 14208 ;; This function calls:
 14209 ;;		Nothing
 14210 ;; This function is called by:
 14211 ;;		___altoft
 14212 ;;		___awtoft
 14213 ;;		___ftadd
 14214 ;;		___ftdiv
 14215 ;;		___ftmul
 14216 ;;		___lltoft
 14217 ;; This function uses a non-reentrant model
 14218 ;;
 14219                           
 14220                           	psect	text32
 14221  006E58                     __ptext32:
 14222                           	opt stack 0
 14223  006E58                     ___ftpack:
 14224                           	opt stack 17
 14225                           
 14226                           ;incstack = 0
 14227  006E58  0102               	movlb	2	; () banked
 14228  006E5A  5108               	movf	___ftpack@exp& (0+255),w,b
 14229  006E5C  B4D8               	btfsc	16344,2,c
 14230  006E5E  D005               	goto	u15520
 14231                           
 14232                           ; BSR set to: 2
 14233  006E60  5105               	movf	___ftpack@arg& (0+255),w,b
 14234  006E62  1106               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 14235  006E64  1107               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 14236  006E66  A4D8               	btfss	16344,2,c
 14237  006E68  D00C               	goto	l1468
 14238  006E6A                     u15520:
 14239                           
 14240                           ; BSR set to: 2
 14241                           
 14242                           ; BSR set to: 2
 14243  006E6A  0E00               	movlw	0
 14244  006E6C  6F05               	movwf	?___ftpack& (0+255),b
 14245  006E6E  0E00               	movlw	0
 14246  006E70  6F06               	movwf	(?___ftpack+1)& (0+255),b
 14247  006E72  0E00               	movlw	0
 14248  006E74  6F07               	movwf	(?___ftpack+2)& (0+255),b
 14249                           
 14250                           ; BSR set to: 2
 14251  006E76  0012               	return	
 14252  006E78                     
 14253                           ; BSR set to: 2
 14254                           
 14255                           ; BSR set to: 2
 14256  006E78  2B08               	incf	___ftpack@exp& (0+255),f,b
 14257  006E7A  90D8               	bcf	16344,0,c
 14258  006E7C  3307               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14259  006E7E  3306               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14260  006E80  3305               	rrcf	___ftpack@arg& (0+255),f,b
 14261  006E82                     l1468:
 14262                           
 14263                           ; BSR set to: 2
 14264                           
 14265                           ; BSR set to: 2
 14266  006E82  0E00               	movlw	0
 14267  006E84  1505               	andwf	___ftpack@arg& (0+255),w,b
 14268  006E86  6F0A               	movwf	??___ftpack& (0+255),b
 14269  006E88  0E00               	movlw	0
 14270  006E8A  1506               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14271  006E8C  6F0B               	movwf	(??___ftpack+1)& (0+255),b
 14272  006E8E  0EFE               	movlw	254
 14273  006E90  1507               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14274  006E92  6F0C               	movwf	(??___ftpack+2)& (0+255),b
 14275  006E94  510A               	movf	??___ftpack& (0+255),w,b
 14276  006E96  110B               	iorwf	(??___ftpack+1)& (0+255),w,b
 14277  006E98  110C               	iorwf	(??___ftpack+2)& (0+255),w,b
 14278  006E9A  B4D8               	btfsc	16344,2,c
 14279  006E9C  D00C               	goto	l1471
 14280  006E9E  D7EC               	goto	l1469
 14281  006EA0                     
 14282                           ; BSR set to: 2
 14283                           
 14284                           ; BSR set to: 2
 14285  006EA0  2B08               	incf	___ftpack@exp& (0+255),f,b
 14286                           
 14287                           ; BSR set to: 2
 14288  006EA2  0E01               	movlw	1
 14289  006EA4  2705               	addwf	___ftpack@arg& (0+255),f,b
 14290  006EA6  0E00               	movlw	0
 14291  006EA8  2306               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 14292  006EAA  0E00               	movlw	0
 14293  006EAC  2307               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 14294  006EAE  90D8               	bcf	16344,0,c
 14295  006EB0  3307               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14296  006EB2  3306               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14297  006EB4  3305               	rrcf	___ftpack@arg& (0+255),f,b
 14298  006EB6                     l1471:
 14299                           
 14300                           ; BSR set to: 2
 14301                           
 14302                           ; BSR set to: 2
 14303  006EB6  0E00               	movlw	0
 14304  006EB8  1505               	andwf	___ftpack@arg& (0+255),w,b
 14305  006EBA  6F0A               	movwf	??___ftpack& (0+255),b
 14306  006EBC  0E00               	movlw	0
 14307  006EBE  1506               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14308  006EC0  6F0B               	movwf	(??___ftpack+1)& (0+255),b
 14309  006EC2  0EFF               	movlw	255
 14310  006EC4  1507               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14311  006EC6  6F0C               	movwf	(??___ftpack+2)& (0+255),b
 14312  006EC8  510A               	movf	??___ftpack& (0+255),w,b
 14313  006ECA  110B               	iorwf	(??___ftpack+1)& (0+255),w,b
 14314  006ECC  110C               	iorwf	(??___ftpack+2)& (0+255),w,b
 14315  006ECE  B4D8               	btfsc	16344,2,c
 14316  006ED0  D006               	goto	l1474
 14317  006ED2  D7E6               	goto	l1472
 14318  006ED4                     
 14319                           ; BSR set to: 2
 14320                           
 14321                           ; BSR set to: 2
 14322  006ED4  0708               	decf	___ftpack@exp& (0+255),f,b
 14323  006ED6  90D8               	bcf	16344,0,c
 14324  006ED8  3705               	rlcf	___ftpack@arg& (0+255),f,b
 14325  006EDA  3706               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 14326  006EDC  3707               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 14327  006EDE                     l1474:
 14328                           
 14329                           ; BSR set to: 2
 14330                           
 14331                           ; BSR set to: 2
 14332  006EDE  BF06               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 14333  006EE0  D003               	goto	u15560
 14334                           
 14335                           ; BSR set to: 2
 14336  006EE2  0E02               	movlw	2
 14337  006EE4  6108               	cpfslt	___ftpack@exp& (0+255),b
 14338  006EE6  D7F6               	goto	l1475
 14339  006EE8                     u15560:
 14340                           
 14341                           ; BSR set to: 2
 14342                           
 14343                           ; BSR set to: 2
 14344  006EE8  A108               	btfss	___ftpack@exp& (0+255),0,b
 14345                           
 14346                           ; BSR set to: 2
 14347  006EEA  9F06               	bcf	(___ftpack@arg+1)& (0+255),7,b
 14348                           
 14349                           ; BSR set to: 2
 14350                           
 14351                           ; BSR set to: 2
 14352  006EEC  90D8               	bcf	16344,0,c
 14353  006EEE  3308               	rrcf	___ftpack@exp& (0+255),f,b
 14354  006EF0  5108               	movf	___ftpack@exp& (0+255),w,b
 14355  006EF2  1307               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 14356                           
 14357                           ; BSR set to: 2
 14358  006EF4  5109               	movf	___ftpack@sign& (0+255),w,b
 14359  006EF6  A4D8               	btfss	16344,2,c
 14360                           
 14361                           ; BSR set to: 2
 14362  006EF8  8F07               	bsf	(___ftpack@arg+2)& (0+255),7,b
 14363                           
 14364                           ; BSR set to: 2
 14365                           
 14366                           ; BSR set to: 2
 14367  006EFA  0060  F814  F205   	movff	___ftpack@arg,?___ftpack
 14368  006F00  0060  F818  F206   	movff	___ftpack@arg+1,?___ftpack+1
 14369  006F06  0060  F81C  F207   	movff	___ftpack@arg+2,?___ftpack+2
 14370  006F0C  0012               	return	
 14371  006F0E                     __end_of___ftpack:
 14372                           	opt stack 0
 14373                           
 14374 ;; *************** function _Abre_Porta_COMM *****************
 14375 ;; Defined at:
 14376 ;;		line 84 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 14377 ;; Parameters:    Size  Location     Type
 14378 ;;  BaudRate        4   27[BANK2 ] long 
 14379 ;; Auto vars:     Size  Location     Type
 14380 ;;  baud            4   31[BANK2 ] long 
 14381 ;; Return value:  Size  Location     Type
 14382 ;;                  1    wreg      void 
 14383 ;; Registers used:
 14384 ;;		wreg, status,2, status,0, cstack
 14385 ;; Tracked objects:
 14386 ;;		On entry : 0/0
 14387 ;;		On exit  : 0/0
 14388 ;;		Unchanged: 0/0
 14389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14390 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14391 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14393 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14394 ;;Total ram usage:        8 bytes
 14395 ;; Hardware stack levels used:    1
 14396 ;; Hardware stack levels required when called:   12
 14397 ;; This function calls:
 14398 ;;		_Calcula_BaudRate
 14399 ;;		___aldiv
 14400 ;;		_lock_PPS
 14401 ;;		_unLock_PPS
 14402 ;; This function is called by:
 14403 ;;		_main
 14404 ;; This function uses a non-reentrant model
 14405 ;;
 14406                           
 14407                           	psect	text33
 14408  007072                     __ptext33:
 14409                           	opt stack 0
 14410  007072                     _Abre_Porta_COMM:
 14411                           	opt stack 18
 14412                           
 14413                           ;Serial.c: 85: long baud = Calcula_BaudRate(BaudRate);
 14414                           
 14415                           ; BSR set to: 2
 14416                           ;incstack = 0
 14417  007072  0060  F86C  F213   	movff	Abre_Porta_COMM@BaudRate,Calcula_BaudRate@BaudRate
 14418  007078  0060  F870  F214   	movff	Abre_Porta_COMM@BaudRate+1,Calcula_BaudRate@BaudRate+1
 14419  00707E  0060  F874  F215   	movff	Abre_Porta_COMM@BaudRate+2,Calcula_BaudRate@BaudRate+2
 14420  007084  0060  F878  F216   	movff	Abre_Porta_COMM@BaudRate+3,Calcula_BaudRate@BaudRate+3
 14421  00708A  ECD0  F036         	call	_Calcula_BaudRate	;wreg free
 14422  00708E  0060  F84C  F21F   	movff	?_Calcula_BaudRate,Abre_Porta_COMM@baud
 14423  007094  0060  F850  F220   	movff	?_Calcula_BaudRate+1,Abre_Porta_COMM@baud+1
 14424  00709A  0060  F854  F221   	movff	?_Calcula_BaudRate+2,Abre_Porta_COMM@baud+2
 14425  0070A0  0060  F858  F222   	movff	?_Calcula_BaudRate+3,Abre_Porta_COMM@baud+3
 14426                           
 14427                           ;Serial.c: 87: TRISBbits.TRISB2 = 0;
 14428  0070A6  013F               	movlb	63	; () banked
 14429  0070A8  95C3               	bcf	195,2,b	;volatile
 14430                           
 14431                           ; BSR set to: 63
 14432                           ;Serial.c: 88: TRISBbits.TRISB3 = 1;
 14433  0070AA  87C3               	bsf	195,3,b	;volatile
 14434                           
 14435                           ;Serial.c: 90: U2BRGH = (unsigned char) ((baud & 0xFF00) / 0x100);
 14436  0070AC  0E00               	movlw	0
 14437  0070AE  0102               	movlb	2	; () banked
 14438  0070B0  151F               	andwf	Abre_Porta_COMM@baud& (0+255),w,b
 14439  0070B2  6F05               	movwf	___aldiv@dividend& (0+255),b
 14440  0070B4  0EFF               	movlw	255
 14441  0070B6  1520               	andwf	(Abre_Porta_COMM@baud+1)& (0+255),w,b
 14442  0070B8  6F06               	movwf	(___aldiv@dividend+1)& (0+255),b
 14443  0070BA  0E00               	movlw	0
 14444  0070BC  1521               	andwf	(Abre_Porta_COMM@baud+2)& (0+255),w,b
 14445  0070BE  6F07               	movwf	(___aldiv@dividend+2)& (0+255),b
 14446  0070C0  0E00               	movlw	0
 14447  0070C2  1522               	andwf	(Abre_Porta_COMM@baud+3)& (0+255),w,b
 14448  0070C4  6F08               	movwf	(___aldiv@dividend+3)& (0+255),b
 14449  0070C6  0E00               	movlw	0
 14450  0070C8  6F09               	movwf	___aldiv@divisor& (0+255),b
 14451  0070CA  0E01               	movlw	1
 14452  0070CC  6F0A               	movwf	(___aldiv@divisor+1)& (0+255),b
 14453  0070CE  0E00               	movlw	0
 14454  0070D0  6F0B               	movwf	(___aldiv@divisor+2)& (0+255),b
 14455  0070D2  0E00               	movlw	0
 14456  0070D4  6F0C               	movwf	(___aldiv@divisor+3)& (0+255),b
 14457  0070D6  EC3A  F035         	call	___aldiv	;wreg free
 14458  0070DA  0102               	movlb	2	; () banked
 14459  0070DC  5105               	movf	?___aldiv& (0+255),w,b
 14460  0070DE  013D               	movlb	61	; () banked
 14461  0070E0  6FDE               	movwf	222,b	;volatile
 14462                           
 14463                           ; BSR set to: 61
 14464                           ;Serial.c: 91: U2BRGL = (unsigned char) (baud & 0x00FF);
 14465  0070E2  0060  F87F  FDDD   	movff	Abre_Porta_COMM@baud,15837	;volatile
 14466                           
 14467                           ; BSR set to: 61
 14468                           ;Serial.c: 92: U2CON0bits.TXEN = 1;
 14469  0070E8  8BDA               	bsf	218,5,b	;volatile
 14470                           
 14471                           ; BSR set to: 61
 14472                           ;Serial.c: 93: U2CON0bits.BRGS = 1;
 14473  0070EA  8FDA               	bsf	218,7,b	;volatile
 14474                           
 14475                           ; BSR set to: 61
 14476                           ;Serial.c: 95: U2CON0bits.RXEN = 1;
 14477  0070EC  89DA               	bsf	218,4,b	;volatile
 14478                           
 14479                           ; BSR set to: 61
 14480                           ;Serial.c: 96: U2CON0bits.BRGS = 1;
 14481  0070EE  8FDA               	bsf	218,7,b	;volatile
 14482                           
 14483                           ; BSR set to: 61
 14484                           ;Serial.c: 97: PIE6bits.U2IE = 1;
 14485  0070F0  0139               	movlb	57	; () banked
 14486  0070F2  8B96               	bsf	150,5,b	;volatile
 14487                           
 14488                           ; BSR set to: 57
 14489                           ;Serial.c: 98: PIE6bits.U2RXIE = 1;
 14490  0070F4  8596               	bsf	150,2,b	;volatile
 14491                           
 14492                           ; BSR set to: 57
 14493                           ;Serial.c: 100: U2CON0bits.U2MODE = 0;
 14494  0070F6  013D               	movlb	61	; () banked
 14495  0070F8  91DA               	bcf	218,0,b	;volatile
 14496  0070FA  93DA               	bcf	218,1,b	;volatile
 14497  0070FC  95DA               	bcf	218,2,b	;volatile
 14498  0070FE  97DA               	bcf	218,3,b	;volatile
 14499                           
 14500                           ; BSR set to: 61
 14501                           ;Serial.c: 102: unLock_PPS();
 14502  007100  EC56  F042         	call	_unLock_PPS	;wreg free
 14503                           
 14504                           ;Serial.c: 103: RB1PPS = 0b010110;
 14505  007104  0E16               	movlw	22
 14506  007106  013A               	movlb	58	; () banked
 14507  007108  6F09               	movwf	9,b	;volatile
 14508                           
 14509                           ; BSR set to: 58
 14510                           ;Serial.c: 104: U2RXPPS = 0b001000;
 14511  00710A  0E08               	movlw	8
 14512  00710C  6FE8               	movwf	232,b	;volatile
 14513                           
 14514                           ; BSR set to: 58
 14515                           ;Serial.c: 106: ANSELBbits.ANSELB0 = 0;
 14516  00710E  9150               	bcf	80,0,b	;volatile
 14517                           
 14518                           ; BSR set to: 58
 14519                           ;Serial.c: 108: TRISBbits.TRISB0 = 1;
 14520  007110  013F               	movlb	63	; () banked
 14521  007112  81C3               	bsf	195,0,b	;volatile
 14522                           
 14523                           ; BSR set to: 63
 14524                           ;Serial.c: 109: TRISBbits.TRISB1 = 0;
 14525  007114  93C3               	bcf	195,1,b	;volatile
 14526                           
 14527                           ; BSR set to: 63
 14528                           ;Serial.c: 111: lock_PPS();
 14529  007116  EC62  F042         	call	_lock_PPS	;wreg free
 14530                           
 14531                           ;Serial.c: 113: U2CON1bits.ON = 1;
 14532  00711A  013D               	movlb	61	; () banked
 14533  00711C  8FDB               	bsf	219,7,b	;volatile
 14534                           
 14535                           ; BSR set to: 61
 14536  00711E  0012               	return		;funcret
 14537  007120                     __end_of_Abre_Porta_COMM:
 14538                           	opt stack 0
 14539                           
 14540 ;; *************** function _Abre_Porta_1 *****************
 14541 ;; Defined at:
 14542 ;;		line 43 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 14543 ;; Parameters:    Size  Location     Type
 14544 ;;  PORTA           2   27[BANK2 ] int 
 14545 ;;  BaudRate        4   29[BANK2 ] long 
 14546 ;; Auto vars:     Size  Location     Type
 14547 ;;  baud            4   33[BANK2 ] long 
 14548 ;; Return value:  Size  Location     Type
 14549 ;;                  1    wreg      void 
 14550 ;; Registers used:
 14551 ;;		wreg, status,2, status,0, cstack
 14552 ;; Tracked objects:
 14553 ;;		On entry : 0/0
 14554 ;;		On exit  : 0/0
 14555 ;;		Unchanged: 0/0
 14556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14557 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14558 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14560 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14561 ;;Total ram usage:       10 bytes
 14562 ;; Hardware stack levels used:    1
 14563 ;; Hardware stack levels required when called:   12
 14564 ;; This function calls:
 14565 ;;		_Calcula_BaudRate
 14566 ;;		___aldiv
 14567 ;;		_lock_PPS
 14568 ;;		_unLock_PPS
 14569 ;; This function is called by:
 14570 ;;		_main
 14571 ;; This function uses a non-reentrant model
 14572 ;;
 14573                           
 14574                           	psect	text34
 14575  00699A                     __ptext34:
 14576                           	opt stack 0
 14577  00699A                     _Abre_Porta_1:
 14578                           	opt stack 18
 14579                           
 14580                           ;Serial.c: 44: long baud = Calcula_BaudRate(BaudRate);
 14581                           
 14582                           ; BSR set to: 61
 14583                           ;incstack = 0
 14584  00699A  0060  F874  F213   	movff	Abre_Porta_1@BaudRate,Calcula_BaudRate@BaudRate
 14585  0069A0  0060  F878  F214   	movff	Abre_Porta_1@BaudRate+1,Calcula_BaudRate@BaudRate+1
 14586  0069A6  0060  F87C  F215   	movff	Abre_Porta_1@BaudRate+2,Calcula_BaudRate@BaudRate+2
 14587  0069AC  0060  F880  F216   	movff	Abre_Porta_1@BaudRate+3,Calcula_BaudRate@BaudRate+3
 14588  0069B2  ECD0  F036         	call	_Calcula_BaudRate	;wreg free
 14589  0069B6  0060  F84C  F221   	movff	?_Calcula_BaudRate,Abre_Porta_1@baud
 14590  0069BC  0060  F850  F222   	movff	?_Calcula_BaudRate+1,Abre_Porta_1@baud+1
 14591  0069C2  0060  F854  F223   	movff	?_Calcula_BaudRate+2,Abre_Porta_1@baud+2
 14592  0069C8  0060  F858  F224   	movff	?_Calcula_BaudRate+3,Abre_Porta_1@baud+3
 14593                           
 14594                           ;Serial.c: 46: U1CON0bits.TXEN = 1;
 14595  0069CE  013D               	movlb	61	; () banked
 14596  0069D0  8BF2               	bsf	242,5,b	;volatile
 14597                           
 14598                           ; BSR set to: 61
 14599                           ;Serial.c: 47: U1CON0bits.RXEN = 1;
 14600  0069D2  89F2               	bsf	242,4,b	;volatile
 14601                           
 14602                           ; BSR set to: 61
 14603                           ;Serial.c: 48: U1CON0bits.BRGS = 1;
 14604  0069D4  8FF2               	bsf	242,7,b	;volatile
 14605                           
 14606                           ; BSR set to: 61
 14607                           ;Serial.c: 49: PIE3bits.U1IE = 1;
 14608  0069D6  0139               	movlb	57	; () banked
 14609  0069D8  8D93               	bsf	147,6,b	;volatile
 14610                           
 14611                           ; BSR set to: 57
 14612                           ;Serial.c: 50: PIE3bits.U1RXIE = 1;
 14613  0069DA  8793               	bsf	147,3,b	;volatile
 14614                           
 14615                           ; BSR set to: 57
 14616                           ;Serial.c: 52: U1CON0bits.U1MODE = 0;
 14617  0069DC  013D               	movlb	61	; () banked
 14618  0069DE  91F2               	bcf	242,0,b	;volatile
 14619  0069E0  93F2               	bcf	242,1,b	;volatile
 14620  0069E2  95F2               	bcf	242,2,b	;volatile
 14621  0069E4  97F2               	bcf	242,3,b	;volatile
 14622                           
 14623                           ;Serial.c: 54: U1BRGH = (unsigned char) ((baud & 0xFF00) / 0x100);
 14624  0069E6  0E00               	movlw	0
 14625  0069E8  0102               	movlb	2	; () banked
 14626  0069EA  1521               	andwf	Abre_Porta_1@baud& (0+255),w,b
 14627  0069EC  6F05               	movwf	___aldiv@dividend& (0+255),b
 14628  0069EE  0EFF               	movlw	255
 14629  0069F0  1522               	andwf	(Abre_Porta_1@baud+1)& (0+255),w,b
 14630  0069F2  6F06               	movwf	(___aldiv@dividend+1)& (0+255),b
 14631  0069F4  0E00               	movlw	0
 14632  0069F6  1523               	andwf	(Abre_Porta_1@baud+2)& (0+255),w,b
 14633  0069F8  6F07               	movwf	(___aldiv@dividend+2)& (0+255),b
 14634  0069FA  0E00               	movlw	0
 14635  0069FC  1524               	andwf	(Abre_Porta_1@baud+3)& (0+255),w,b
 14636  0069FE  6F08               	movwf	(___aldiv@dividend+3)& (0+255),b
 14637  006A00  0E00               	movlw	0
 14638  006A02  6F09               	movwf	___aldiv@divisor& (0+255),b
 14639  006A04  0E01               	movlw	1
 14640  006A06  6F0A               	movwf	(___aldiv@divisor+1)& (0+255),b
 14641  006A08  0E00               	movlw	0
 14642  006A0A  6F0B               	movwf	(___aldiv@divisor+2)& (0+255),b
 14643  006A0C  0E00               	movlw	0
 14644  006A0E  6F0C               	movwf	(___aldiv@divisor+3)& (0+255),b
 14645  006A10  EC3A  F035         	call	___aldiv	;wreg free
 14646  006A14  0102               	movlb	2	; () banked
 14647  006A16  5105               	movf	?___aldiv& (0+255),w,b
 14648  006A18  013D               	movlb	61	; () banked
 14649  006A1A  6FF6               	movwf	246,b	;volatile
 14650                           
 14651                           ; BSR set to: 61
 14652                           ;Serial.c: 55: U1BRGL = (unsigned char) (baud & 0x00FF);
 14653  006A1C  0060  F887  FDF5   	movff	Abre_Porta_1@baud,15861	;volatile
 14654                           
 14655                           ; BSR set to: 61
 14656                           ;Serial.c: 59: if (PORTA == 0x100) {
 14657  006A22  0102               	movlb	2	; () banked
 14658  006A24  051C               	decf	(Abre_Porta_1@PORTA+1)& (0+255),w,b
 14659  006A26  111B               	iorwf	Abre_Porta_1@PORTA& (0+255),w,b
 14660  006A28  A4D8               	btfss	16344,2,c
 14661  006A2A  D00E               	goto	l244
 14662                           
 14663                           ; BSR set to: 2
 14664                           ;Serial.c: 60: unLock_PPS();
 14665  006A2C  EC56  F042         	call	_unLock_PPS	;wreg free
 14666                           
 14667                           ;Serial.c: 61: RC0PPS = 0b010011;
 14668  006A30  0E13               	movlw	19
 14669  006A32  013A               	movlb	58	; () banked
 14670  006A34  6F10               	movwf	16,b	;volatile
 14671                           
 14672                           ; BSR set to: 58
 14673                           ;Serial.c: 63: U1RXPPS = 0b010001;
 14674  006A36  0E11               	movlw	17
 14675  006A38  6FE5               	movwf	229,b	;volatile
 14676                           
 14677                           ;Serial.c: 64: lock_PPS();
 14678  006A3A  EC62  F042         	call	_lock_PPS	;wreg free
 14679                           
 14680                           ;Serial.c: 65: ANSELCbits.ANSELC1 = 0;
 14681  006A3E  013A               	movlb	58	; () banked
 14682  006A40  9360               	bcf	96,1,b	;volatile
 14683                           
 14684                           ; BSR set to: 58
 14685                           ;Serial.c: 66: TRISCbits.TRISC0 = 0;
 14686  006A42  013F               	movlb	63	; () banked
 14687  006A44  91C4               	bcf	196,0,b	;volatile
 14688                           
 14689                           ; BSR set to: 63
 14690                           ;Serial.c: 67: TRISCbits.TRISC1 = 1;
 14691  006A46  83C4               	bsf	196,1,b	;volatile
 14692  006A48                     l244:
 14693                           
 14694                           ;Serial.c: 69: }
 14695                           ;Serial.c: 70: if (PORTA == 0x101) {
 14696                           
 14697                           ; BSR set to: 63
 14698  006A48  0102               	movlb	2	; () banked
 14699  006A4A  051B               	decf	Abre_Porta_1@PORTA& (0+255),w,b
 14700  006A4C  E110               	bnz	l13565
 14701  006A4E  051C               	decf	(Abre_Porta_1@PORTA+1)& (0+255),w,b
 14702  006A50  A4D8               	btfss	16344,2,c
 14703  006A52  D00D               	goto	l245
 14704                           
 14705                           ; BSR set to: 2
 14706                           ;Serial.c: 71: unLock_PPS();
 14707  006A54  EC56  F042         	call	_unLock_PPS	;wreg free
 14708                           
 14709                           ;Serial.c: 72: RC5PPS = 0b010011;
 14710  006A58  0E13               	movlw	19
 14711  006A5A  013A               	movlb	58	; () banked
 14712  006A5C  6F15               	movwf	21,b	;volatile
 14713                           
 14714                           ; BSR set to: 58
 14715                           ;Serial.c: 73: ;
 14716                           ;Serial.c: 74: U1RXPPS = 0b010111;
 14717  006A5E  0E17               	movlw	23
 14718  006A60  6FE5               	movwf	229,b	;volatile
 14719                           
 14720                           ; BSR set to: 58
 14721                           ;Serial.c: 75: ANSELCbits.ANSELC5 = 0;
 14722  006A62  9B60               	bcf	96,5,b	;volatile
 14723                           
 14724                           ; BSR set to: 58
 14725                           ;Serial.c: 76: TRISCbits.TRISC5 = 0;
 14726  006A64  013F               	movlb	63	; () banked
 14727  006A66  9BC4               	bcf	196,5,b	;volatile
 14728                           
 14729                           ; BSR set to: 63
 14730                           ;Serial.c: 77: TRISCbits.TRISC7 = 1;
 14731  006A68  8FC4               	bsf	196,7,b	;volatile
 14732                           
 14733                           ;Serial.c: 78: lock_PPS();
 14734  006A6A  EC62  F042         	call	_lock_PPS	;wreg free
 14735  006A6E                     l245:
 14736  006A6E                     l13565:
 14737                           
 14738                           ;Serial.c: 79: }
 14739                           ;Serial.c: 81: U1CON1bits.ON = 1;
 14740  006A6E  013D               	movlb	61	; () banked
 14741  006A70  8FF3               	bsf	243,7,b	;volatile
 14742                           
 14743                           ; BSR set to: 61
 14744  006A72  0012               	return		;funcret
 14745  006A74                     __end_of_Abre_Porta_1:
 14746                           	opt stack 0
 14747                           
 14748 ;; *************** function _unLock_PPS *****************
 14749 ;; Defined at:
 14750 ;;		line 13 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/PPS.c"
 14751 ;; Parameters:    Size  Location     Type
 14752 ;;		None
 14753 ;; Auto vars:     Size  Location     Type
 14754 ;;		None
 14755 ;; Return value:  Size  Location     Type
 14756 ;;                  1    wreg      void 
 14757 ;; Registers used:
 14758 ;;		wreg, status,2
 14759 ;; Tracked objects:
 14760 ;;		On entry : 0/0
 14761 ;;		On exit  : 0/0
 14762 ;;		Unchanged: 0/0
 14763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14768 ;;Total ram usage:        0 bytes
 14769 ;; Hardware stack levels used:    1
 14770 ;; Hardware stack levels required when called:   10
 14771 ;; This function calls:
 14772 ;;		Nothing
 14773 ;; This function is called by:
 14774 ;;		_Abre_Porta_1
 14775 ;;		_Abre_Porta_COMM
 14776 ;; This function uses a non-reentrant model
 14777 ;;
 14778                           
 14779                           	psect	text35
 14780  0084AC                     __ptext35:
 14781                           	opt stack 0
 14782  0084AC                     _unLock_PPS:
 14783                           	opt stack 19
 14784                           
 14785                           ;PPS.c: 14: INTCON0bits.GIE = 0;
 14786                           
 14787                           ; BSR set to: 61
 14788                           ;incstack = 0
 14789  0084AC  013F               	movlb	63	; () banked
 14790  0084AE  9FD2               	bcf	210,7,b	;volatile
 14791                           
 14792                           ;PPS.c: 15: INTCON0bits.GIEL = 0;
 14793  0084B0  9DD2               	bcf	210,6,b	;volatile
 14794                           
 14795                           ;PPS.c: 16: INTCON0bits.GIEH = 0;
 14796  0084B2  9FD2               	bcf	210,7,b	;volatile
 14797                           
 14798                           ; BSR set to: 63
 14799                           ;PPS.c: 17: PPSLOCK = 0x55;
 14800  0084B4  0E55               	movlw	85
 14801  0084B6  013A               	movlb	58	; () banked
 14802  0084B8  6FBF               	movwf	191,b	;volsfr
 14803                           
 14804                           ;PPS.c: 18: PPSLOCK = 0xAA;
 14805  0084BA  0EAA               	movlw	170
 14806  0084BC  6FBF               	movwf	191,b	;volsfr
 14807                           
 14808                           ;PPS.c: 19: PPSLOCK = 0;
 14809  0084BE  0E00               	movlw	0
 14810  0084C0  6FBF               	movwf	191,b	;volsfr
 14811                           
 14812                           ; BSR set to: 58
 14813  0084C2  0012               	return		;funcret
 14814  0084C4                     __end_of_unLock_PPS:
 14815                           	opt stack 0
 14816                           
 14817 ;; *************** function _lock_PPS *****************
 14818 ;; Defined at:
 14819 ;;		line 4 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/PPS.c"
 14820 ;; Parameters:    Size  Location     Type
 14821 ;;		None
 14822 ;; Auto vars:     Size  Location     Type
 14823 ;;		None
 14824 ;; Return value:  Size  Location     Type
 14825 ;;                  1    wreg      void 
 14826 ;; Registers used:
 14827 ;;		wreg, status,2
 14828 ;; Tracked objects:
 14829 ;;		On entry : 0/0
 14830 ;;		On exit  : 0/0
 14831 ;;		Unchanged: 0/0
 14832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14837 ;;Total ram usage:        0 bytes
 14838 ;; Hardware stack levels used:    1
 14839 ;; Hardware stack levels required when called:   10
 14840 ;; This function calls:
 14841 ;;		Nothing
 14842 ;; This function is called by:
 14843 ;;		_Abre_Porta_1
 14844 ;;		_Abre_Porta_COMM
 14845 ;; This function uses a non-reentrant model
 14846 ;;
 14847                           
 14848                           	psect	text36
 14849  0084C4                     __ptext36:
 14850                           	opt stack 0
 14851  0084C4                     _lock_PPS:
 14852                           	opt stack 19
 14853                           
 14854                           ;PPS.c: 5: INTCON0bits.GIE = 1;
 14855                           
 14856                           ; BSR set to: 58
 14857                           ;incstack = 0
 14858  0084C4  013F               	movlb	63	; () banked
 14859  0084C6  8FD2               	bsf	210,7,b	;volatile
 14860                           
 14861                           ;PPS.c: 6: INTCON0bits.GIEL = 1;
 14862  0084C8  8DD2               	bsf	210,6,b	;volatile
 14863                           
 14864                           ;PPS.c: 7: INTCON0bits.GIEH = 1;
 14865  0084CA  8FD2               	bsf	210,7,b	;volatile
 14866                           
 14867                           ; BSR set to: 63
 14868                           ;PPS.c: 8: PPSLOCK = 0x55;
 14869  0084CC  0E55               	movlw	85
 14870  0084CE  013A               	movlb	58	; () banked
 14871  0084D0  6FBF               	movwf	191,b	;volsfr
 14872                           
 14873                           ;PPS.c: 9: PPSLOCK = 0xAA;
 14874  0084D2  0EAA               	movlw	170
 14875  0084D4  6FBF               	movwf	191,b	;volsfr
 14876                           
 14877                           ;PPS.c: 10: PPSLOCK = 1;
 14878  0084D6  0E01               	movlw	1
 14879  0084D8  6FBF               	movwf	191,b	;volsfr
 14880                           
 14881                           ; BSR set to: 58
 14882  0084DA  0012               	return		;funcret
 14883  0084DC                     __end_of_lock_PPS:
 14884                           	opt stack 0
 14885                           
 14886 ;; *************** function _Calcula_BaudRate *****************
 14887 ;; Defined at:
 14888 ;;		line 116 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 14889 ;; Parameters:    Size  Location     Type
 14890 ;;  BaudRate        4   19[BANK2 ] long 
 14891 ;; Auto vars:     Size  Location     Type
 14892 ;;  baud            4   23[BANK2 ] long 
 14893 ;; Return value:  Size  Location     Type
 14894 ;;                  4   19[BANK2 ] long 
 14895 ;; Registers used:
 14896 ;;		wreg, status,2, status,0, cstack
 14897 ;; Tracked objects:
 14898 ;;		On entry : 0/0
 14899 ;;		On exit  : 0/0
 14900 ;;		Unchanged: 0/0
 14901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14902 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14903 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14905 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14906 ;;Total ram usage:        8 bytes
 14907 ;; Hardware stack levels used:    1
 14908 ;; Hardware stack levels required when called:   11
 14909 ;; This function calls:
 14910 ;;		___aldiv
 14911 ;; This function is called by:
 14912 ;;		_Abre_Porta_1
 14913 ;;		_Abre_Porta_COMM
 14914 ;; This function uses a non-reentrant model
 14915 ;;
 14916                           
 14917                           	psect	text37
 14918  006DA0                     __ptext37:
 14919                           	opt stack 0
 14920  006DA0                     _Calcula_BaudRate:
 14921                           	opt stack 18
 14922                           
 14923                           ;Serial.c: 117: long baud;
 14924                           ;Serial.c: 119: baud = 40000000 / BaudRate;
 14925                           
 14926                           ; BSR set to: 58
 14927                           ;incstack = 0
 14928  006DA0  0E00               	movlw	0
 14929  006DA2  0102               	movlb	2	; () banked
 14930  006DA4  6F05               	movwf	___aldiv@dividend& (0+255),b
 14931  006DA6  0E5A               	movlw	90
 14932  006DA8  6F06               	movwf	(___aldiv@dividend+1)& (0+255),b
 14933  006DAA  0E62               	movlw	98
 14934  006DAC  6F07               	movwf	(___aldiv@dividend+2)& (0+255),b
 14935  006DAE  0E02               	movlw	2
 14936  006DB0  6F08               	movwf	(___aldiv@dividend+3)& (0+255),b
 14937  006DB2  0060  F84C  F209   	movff	Calcula_BaudRate@BaudRate,___aldiv@divisor
 14938  006DB8  0060  F850  F20A   	movff	Calcula_BaudRate@BaudRate+1,___aldiv@divisor+1
 14939  006DBE  0060  F854  F20B   	movff	Calcula_BaudRate@BaudRate+2,___aldiv@divisor+2
 14940  006DC4  0060  F858  F20C   	movff	Calcula_BaudRate@BaudRate+3,___aldiv@divisor+3
 14941  006DCA  EC3A  F035         	call	___aldiv	;wreg free
 14942  006DCE  0060  F814  F217   	movff	?___aldiv,Calcula_BaudRate@baud
 14943  006DD4  0060  F818  F218   	movff	?___aldiv+1,Calcula_BaudRate@baud+1
 14944  006DDA  0060  F81C  F219   	movff	?___aldiv+2,Calcula_BaudRate@baud+2
 14945  006DE0  0060  F820  F21A   	movff	?___aldiv+3,Calcula_BaudRate@baud+3
 14946                           
 14947                           ;Serial.c: 120: baud = baud / (long) 4;
 14948  006DE6  0060  F85C  F205   	movff	Calcula_BaudRate@baud,___aldiv@dividend
 14949  006DEC  0060  F860  F206   	movff	Calcula_BaudRate@baud+1,___aldiv@dividend+1
 14950  006DF2  0060  F864  F207   	movff	Calcula_BaudRate@baud+2,___aldiv@dividend+2
 14951  006DF8  0060  F868  F208   	movff	Calcula_BaudRate@baud+3,___aldiv@dividend+3
 14952  006DFE  0E04               	movlw	4
 14953  006E00  0102               	movlb	2	; () banked
 14954  006E02  6F09               	movwf	___aldiv@divisor& (0+255),b
 14955  006E04  0E00               	movlw	0
 14956  006E06  6F0A               	movwf	(___aldiv@divisor+1)& (0+255),b
 14957  006E08  0E00               	movlw	0
 14958  006E0A  6F0B               	movwf	(___aldiv@divisor+2)& (0+255),b
 14959  006E0C  0E00               	movlw	0
 14960  006E0E  6F0C               	movwf	(___aldiv@divisor+3)& (0+255),b
 14961  006E10  EC3A  F035         	call	___aldiv	;wreg free
 14962  006E14  0060  F814  F217   	movff	?___aldiv,Calcula_BaudRate@baud
 14963  006E1A  0060  F818  F218   	movff	?___aldiv+1,Calcula_BaudRate@baud+1
 14964  006E20  0060  F81C  F219   	movff	?___aldiv+2,Calcula_BaudRate@baud+2
 14965  006E26  0060  F820  F21A   	movff	?___aldiv+3,Calcula_BaudRate@baud+3
 14966                           
 14967                           ;Serial.c: 121: baud--;
 14968  006E2C  0EFF               	movlw	255
 14969  006E2E  0102               	movlb	2	; () banked
 14970  006E30  2717               	addwf	Calcula_BaudRate@baud& (0+255),f,b
 14971  006E32  0EFF               	movlw	255
 14972  006E34  2318               	addwfc	(Calcula_BaudRate@baud+1)& (0+255),f,b
 14973  006E36  0EFF               	movlw	255
 14974  006E38  2319               	addwfc	(Calcula_BaudRate@baud+2)& (0+255),f,b
 14975  006E3A  0EFF               	movlw	255
 14976  006E3C  231A               	addwfc	(Calcula_BaudRate@baud+3)& (0+255),f,b
 14977                           
 14978                           ; BSR set to: 2
 14979                           ;Serial.c: 123: return baud;
 14980  006E3E  0060  F85C  F213   	movff	Calcula_BaudRate@baud,?_Calcula_BaudRate
 14981  006E44  0060  F860  F214   	movff	Calcula_BaudRate@baud+1,?_Calcula_BaudRate+1
 14982  006E4A  0060  F864  F215   	movff	Calcula_BaudRate@baud+2,?_Calcula_BaudRate+2
 14983  006E50  0060  F868  F216   	movff	Calcula_BaudRate@baud+3,?_Calcula_BaudRate+3
 14984  006E56  0012               	return	
 14985  006E58                     __end_of_Calcula_BaudRate:
 14986                           	opt stack 0
 14987                           
 14988 ;; *************** function ___aldiv *****************
 14989 ;; Defined at:
 14990 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 14991 ;; Parameters:    Size  Location     Type
 14992 ;;  dividend        4    5[BANK2 ] long 
 14993 ;;  divisor         4    9[BANK2 ] long 
 14994 ;; Auto vars:     Size  Location     Type
 14995 ;;  quotient        4   15[BANK2 ] long 
 14996 ;;  sign            1   14[BANK2 ] unsigned char 
 14997 ;;  counter         1   13[BANK2 ] unsigned char 
 14998 ;; Return value:  Size  Location     Type
 14999 ;;                  4    5[BANK2 ] long 
 15000 ;; Registers used:
 15001 ;;		wreg, status,2, status,0
 15002 ;; Tracked objects:
 15003 ;;		On entry : 0/0
 15004 ;;		On exit  : 0/0
 15005 ;;		Unchanged: 0/0
 15006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15007 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15008 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15010 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15011 ;;Total ram usage:       14 bytes
 15012 ;; Hardware stack levels used:    1
 15013 ;; Hardware stack levels required when called:   10
 15014 ;; This function calls:
 15015 ;;		Nothing
 15016 ;; This function is called by:
 15017 ;;		_Abre_Porta_1
 15018 ;;		_Abre_Porta_COMM
 15019 ;;		_Calcula_BaudRate
 15020 ;; This function uses a non-reentrant model
 15021 ;;
 15022                           
 15023                           	psect	text38
 15024  006A74                     __ptext38:
 15025                           	opt stack 0
 15026  006A74                     ___aldiv:
 15027                           	opt stack 19
 15028                           
 15029                           ; BSR set to: 2
 15030                           ;incstack = 0
 15031  006A74  0E00               	movlw	0
 15032  006A76  0102               	movlb	2	; () banked
 15033  006A78  6F0E               	movwf	___aldiv@sign& (0+255),b
 15034                           
 15035                           ; BSR set to: 2
 15036  006A7A  AF0C               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 15037  006A7C  D00A               	goto	l1292
 15038                           
 15039                           ; BSR set to: 2
 15040  006A7E  1F0C               	comf	(___aldiv@divisor+3)& (0+255),f,b
 15041  006A80  1F0B               	comf	(___aldiv@divisor+2)& (0+255),f,b
 15042  006A82  1F0A               	comf	(___aldiv@divisor+1)& (0+255),f,b
 15043  006A84  6D09               	negf	___aldiv@divisor& (0+255),b
 15044  006A86  0E00               	movlw	0
 15045  006A88  230A               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 15046  006A8A  230B               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 15047  006A8C  230C               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 15048                           
 15049                           ; BSR set to: 2
 15050  006A8E  0E01               	movlw	1
 15051  006A90  6F0E               	movwf	___aldiv@sign& (0+255),b
 15052  006A92                     l1292:
 15053                           
 15054                           ; BSR set to: 2
 15055                           
 15056                           ; BSR set to: 2
 15057  006A92  AF08               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 15058  006A94  D00A               	goto	l1293
 15059                           
 15060                           ; BSR set to: 2
 15061  006A96  1F08               	comf	(___aldiv@dividend+3)& (0+255),f,b
 15062  006A98  1F07               	comf	(___aldiv@dividend+2)& (0+255),f,b
 15063  006A9A  1F06               	comf	(___aldiv@dividend+1)& (0+255),f,b
 15064  006A9C  6D05               	negf	___aldiv@dividend& (0+255),b
 15065  006A9E  0E00               	movlw	0
 15066  006AA0  2306               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 15067  006AA2  2307               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 15068  006AA4  2308               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 15069                           
 15070                           ; BSR set to: 2
 15071  006AA6  0E01               	movlw	1
 15072  006AA8  1B0E               	xorwf	___aldiv@sign& (0+255),f,b
 15073  006AAA                     l1293:
 15074                           
 15075                           ; BSR set to: 2
 15076                           
 15077                           ; BSR set to: 2
 15078  006AAA  0E00               	movlw	0
 15079  006AAC  6F0F               	movwf	___aldiv@quotient& (0+255),b
 15080  006AAE  0E00               	movlw	0
 15081  006AB0  6F10               	movwf	(___aldiv@quotient+1)& (0+255),b
 15082  006AB2  0E00               	movlw	0
 15083  006AB4  6F11               	movwf	(___aldiv@quotient+2)& (0+255),b
 15084  006AB6  0E00               	movlw	0
 15085  006AB8  6F12               	movwf	(___aldiv@quotient+3)& (0+255),b
 15086                           
 15087                           ; BSR set to: 2
 15088  006ABA  5109               	movf	___aldiv@divisor& (0+255),w,b
 15089  006ABC  110A               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 15090  006ABE  110B               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 15091  006AC0  110C               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 15092  006AC2  B4D8               	btfsc	16344,2,c
 15093  006AC4  D02A               	goto	l1300
 15094                           
 15095                           ; BSR set to: 2
 15096  006AC6  0E01               	movlw	1
 15097  006AC8  6F0D               	movwf	___aldiv@counter& (0+255),b
 15098  006ACA  D006               	goto	l1295
 15099  006ACC                     
 15100                           ; BSR set to: 2
 15101                           
 15102                           ; BSR set to: 2
 15103  006ACC  90D8               	bcf	16344,0,c
 15104  006ACE  3709               	rlcf	___aldiv@divisor& (0+255),f,b
 15105  006AD0  370A               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 15106  006AD2  370B               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 15107  006AD4  370C               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 15108  006AD6  2B0D               	incf	___aldiv@counter& (0+255),f,b
 15109  006AD8                     l1295:
 15110                           
 15111                           ; BSR set to: 2
 15112                           
 15113                           ; BSR set to: 2
 15114  006AD8  AF0C               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 15115  006ADA  D7F8               	goto	l1296
 15116  006ADC                     u16470:
 15117                           
 15118                           ; BSR set to: 2
 15119                           
 15120                           ; BSR set to: 2
 15121                           
 15122                           ; BSR set to: 2
 15123  006ADC  90D8               	bcf	16344,0,c
 15124  006ADE  370F               	rlcf	___aldiv@quotient& (0+255),f,b
 15125  006AE0  3710               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 15126  006AE2  3711               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 15127  006AE4  3712               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 15128                           
 15129                           ; BSR set to: 2
 15130  006AE6  5109               	movf	___aldiv@divisor& (0+255),w,b
 15131  006AE8  5D05               	subwf	___aldiv@dividend& (0+255),w,b
 15132  006AEA  510A               	movf	(___aldiv@divisor+1)& (0+255),w,b
 15133  006AEC  5906               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 15134  006AEE  510B               	movf	(___aldiv@divisor+2)& (0+255),w,b
 15135  006AF0  5907               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 15136  006AF2  510C               	movf	(___aldiv@divisor+3)& (0+255),w,b
 15137  006AF4  5908               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 15138  006AF6  A0D8               	btfss	16344,0,c
 15139  006AF8  D009               	goto	l1299
 15140                           
 15141                           ; BSR set to: 2
 15142  006AFA  5109               	movf	___aldiv@divisor& (0+255),w,b
 15143  006AFC  5F05               	subwf	___aldiv@dividend& (0+255),f,b
 15144  006AFE  510A               	movf	(___aldiv@divisor+1)& (0+255),w,b
 15145  006B00  5B06               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 15146  006B02  510B               	movf	(___aldiv@divisor+2)& (0+255),w,b
 15147  006B04  5B07               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 15148  006B06  510C               	movf	(___aldiv@divisor+3)& (0+255),w,b
 15149  006B08  5B08               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 15150                           
 15151                           ; BSR set to: 2
 15152  006B0A  810F               	bsf	___aldiv@quotient& (0+255),0,b
 15153  006B0C                     l1299:
 15154                           
 15155                           ; BSR set to: 2
 15156                           
 15157                           ; BSR set to: 2
 15158  006B0C  90D8               	bcf	16344,0,c
 15159  006B0E  330C               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 15160  006B10  330B               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 15161  006B12  330A               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 15162  006B14  3309               	rrcf	___aldiv@divisor& (0+255),f,b
 15163                           
 15164                           ; BSR set to: 2
 15165  006B16  2F0D               	decfsz	___aldiv@counter& (0+255),f,b
 15166  006B18  D7E1               	goto	u16470
 15167  006B1A                     l1300:
 15168                           
 15169                           ; BSR set to: 2
 15170                           
 15171                           ; BSR set to: 2
 15172                           
 15173                           ; BSR set to: 2
 15174  006B1A  510E               	movf	___aldiv@sign& (0+255),w,b
 15175  006B1C  B4D8               	btfsc	16344,2,c
 15176  006B1E  D008               	goto	l1301
 15177                           
 15178                           ; BSR set to: 2
 15179  006B20  1F12               	comf	(___aldiv@quotient+3)& (0+255),f,b
 15180  006B22  1F11               	comf	(___aldiv@quotient+2)& (0+255),f,b
 15181  006B24  1F10               	comf	(___aldiv@quotient+1)& (0+255),f,b
 15182  006B26  6D0F               	negf	___aldiv@quotient& (0+255),b
 15183  006B28  0E00               	movlw	0
 15184  006B2A  2310               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 15185  006B2C  2311               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 15186  006B2E  2312               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 15187  006B30                     l1301:
 15188                           
 15189                           ; BSR set to: 2
 15190                           
 15191                           ; BSR set to: 2
 15192  006B30  0060  F83C  F205   	movff	___aldiv@quotient,?___aldiv
 15193  006B36  0060  F840  F206   	movff	___aldiv@quotient+1,?___aldiv+1
 15194  006B3C  0060  F844  F207   	movff	___aldiv@quotient+2,?___aldiv+2
 15195  006B42  0060  F848  F208   	movff	___aldiv@quotient+3,?___aldiv+3
 15196  006B48  0012               	return	
 15197  006B4A                     __end_of___aldiv:
 15198                           	opt stack 0
 15199                           
 15200 ;; *************** function _Interrupt_USB_485 *****************
 15201 ;; Defined at:
 15202 ;;		line 32 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Main.c"
 15203 ;; Parameters:    Size  Location     Type
 15204 ;;		None
 15205 ;; Auto vars:     Size  Location     Type
 15206 ;;  lido            1    2[COMRAM] unsigned char 
 15207 ;; Return value:  Size  Location     Type
 15208 ;;                  1    wreg      void 
 15209 ;; Registers used:
 15210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15211 ;; Tracked objects:
 15212 ;;		On entry : 0/0
 15213 ;;		On exit  : 0/0
 15214 ;;		Unchanged: 0/0
 15215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15218 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15219 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15220 ;;Total ram usage:        2 bytes
 15221 ;; Hardware stack levels used:    1
 15222 ;; Hardware stack levels required when called:    1
 15223 ;; This function calls:
 15224 ;;		_Buffer_Escrita_COMM_Add_Char
 15225 ;;		_Buffer_Leitura_USB_Add_Char
 15226 ;;		_Recebe
 15227 ;; This function is called by:
 15228 ;;		Interrupt level 1
 15229 ;; This function uses a non-reentrant model
 15230 ;;
 15231                           
 15232                           	psect	text39
 15233  0083EC                     __ptext39:
 15234                           	opt stack 0
 15235  0083EC                     _Interrupt_USB_485:
 15236                           	opt stack 24
 15237                           
 15238                           ; BSR set to: 2
 15239                           ;incstack = 0
 15240  0083EC  006F FF60  F002    	movff	16344,??_Interrupt_USB_485
 15241                           
 15242                           ;Main.c: 35: if (U1RXIF == 1) {
 15243  0083F2  0139               	movlb	57	; () banked
 15244  0083F4  A7A3               	btfss	163,3,b	;volatile
 15245  0083F6  D00B               	goto	i1l109
 15246                           
 15247                           ; BSR set to: 57
 15248                           ;Main.c: 36: char lido = Recebe();
 15249  0083F8  EC7A  F042         	call	_Recebe	;wreg free
 15250  0083FC  6E03               	movwf	Interrupt_USB_485@lido,c
 15251                           
 15252                           ;Main.c: 37: Buffer_Escrita_COMM_Add_Char(lido);
 15253  0083FE  5003               	movf	Interrupt_USB_485@lido,w,c
 15254  008400  EC7F  F041         	call	_Buffer_Escrita_COMM_Add_Char
 15255                           
 15256                           ;Main.c: 38: Buffer_Leitura_USB_Add_Char(lido);
 15257  008404  5003               	movf	Interrupt_USB_485@lido,w,c
 15258  008406  EC80  F042         	call	_Buffer_Leitura_USB_Add_Char
 15259                           
 15260                           ;Main.c: 39: U1RXIF = 0;
 15261  00840A  0139               	movlb	57	; () banked
 15262  00840C  97A3               	bcf	163,3,b	;volatile
 15263  00840E                     i1l109:
 15264                           
 15265                           ; BSR set to: 57
 15266                           
 15267                           ; BSR set to: 57
 15268  00840E  0060  F00B  FFD8   	movff	??_Interrupt_USB_485,16344
 15269  008414  0011               	retfie		f
 15270  008416                     __end_of_Interrupt_USB_485:
 15271                           	opt stack 0
 15272                           
 15273 ;; *************** function _Recebe *****************
 15274 ;; Defined at:
 15275 ;;		line 136 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 15276 ;; Parameters:    Size  Location     Type
 15277 ;;		None
 15278 ;; Auto vars:     Size  Location     Type
 15279 ;;		None
 15280 ;; Return value:  Size  Location     Type
 15281 ;;                  1    wreg      unsigned char 
 15282 ;; Registers used:
 15283 ;;		wreg, status,2
 15284 ;; Tracked objects:
 15285 ;;		On entry : 0/0
 15286 ;;		On exit  : 0/0
 15287 ;;		Unchanged: 0/0
 15288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15293 ;;Total ram usage:        0 bytes
 15294 ;; Hardware stack levels used:    1
 15295 ;; This function calls:
 15296 ;;		Nothing
 15297 ;; This function is called by:
 15298 ;;		_Interrupt_USB_485
 15299 ;; This function uses a non-reentrant model
 15300 ;;
 15301                           
 15302                           	psect	text40
 15303  0084F4                     __ptext40:
 15304                           	opt stack 0
 15305  0084F4                     _Recebe:
 15306                           	opt stack 24
 15307                           
 15308                           ;Serial.c: 137: return U1RXB;
 15309                           
 15310                           ; BSR set to: 57
 15311                           ;incstack = 0
 15312  0084F4  013D               	movlb	61	; () banked
 15313  0084F6  51E8               	movf	232,w,b	;volatile
 15314  0084F8  0012               	return	
 15315  0084FA                     __end_of_Recebe:
 15316                           	opt stack 0
 15317                           
 15318 ;; *************** function _Buffer_Leitura_USB_Add_Char *****************
 15319 ;; Defined at:
 15320 ;;		line 180 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 15321 ;; Parameters:    Size  Location     Type
 15322 ;;  dado            1    wreg     unsigned char 
 15323 ;; Auto vars:     Size  Location     Type
 15324 ;;  dado            1    0[COMRAM] unsigned char 
 15325 ;; Return value:  Size  Location     Type
 15326 ;;                  1    wreg      void 
 15327 ;; Registers used:
 15328 ;;		wreg
 15329 ;; Tracked objects:
 15330 ;;		On entry : 0/0
 15331 ;;		On exit  : 0/0
 15332 ;;		Unchanged: 0/0
 15333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15338 ;;Total ram usage:        0 bytes
 15339 ;; Hardware stack levels used:    1
 15340 ;; This function calls:
 15341 ;;		Nothing
 15342 ;; This function is called by:
 15343 ;;		_Interrupt_USB_485
 15344 ;; This function uses a non-reentrant model
 15345 ;;
 15346                           
 15347                           	psect	text41
 15348  008500                     __ptext41:
 15349                           	opt stack 0
 15350  008500                     _Buffer_Leitura_USB_Add_Char:
 15351                           	opt stack 24
 15352                           
 15353                           ; BSR set to: 61
 15354                           ;incstack = 0
 15355  008500  0012               	return		;funcret
 15356  008502                     __end_of_Buffer_Leitura_USB_Add_Char:
 15357                           	opt stack 0
 15358                           
 15359 ;; *************** function _Buffer_Escrita_COMM_Add_Char *****************
 15360 ;; Defined at:
 15361 ;;		line 211 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 15362 ;; Parameters:    Size  Location     Type
 15363 ;;  dado            1    wreg     unsigned char 
 15364 ;; Auto vars:     Size  Location     Type
 15365 ;;  dado            1    3[COMRAM] unsigned char 
 15366 ;; Return value:  Size  Location     Type
 15367 ;;                  2    6[None  ] short 
 15368 ;; Registers used:
 15369 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15370 ;; Tracked objects:
 15371 ;;		On entry : 0/0
 15372 ;;		On exit  : 0/0
 15373 ;;		Unchanged: 0/0
 15374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15378 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15379 ;;Total ram usage:        1 bytes
 15380 ;; Hardware stack levels used:    1
 15381 ;; This function calls:
 15382 ;;		Nothing
 15383 ;; This function is called by:
 15384 ;;		_Interrupt_USB_485
 15385 ;;		_Buffer_Escrita_COMM_Add_String
 15386 ;;		_SOCKET_RX
 15387 ;; This function uses a non-reentrant model
 15388 ;;
 15389                           
 15390                           	psect	text42
 15391  0082FE                     __ptext42:
 15392                           	opt stack 0
 15393  0082FE                     _Buffer_Escrita_COMM_Add_Char:
 15394                           	opt stack 21
 15395                           
 15396                           ;incstack = 0
 15397                           ;Buffer_Escrita_COMM_Add_Char@dado stored from wreg
 15398  0082FE  6E04               	movwf	Buffer_Escrita_COMM_Add_Char@dado,c
 15399                           
 15400                           ;Serial.c: 212: buffer_escrita_comm[ponteiro_COMM] = dado;
 15401  008300  0E00               	movlw	low _buffer_escrita_comm
 15402  008302  0102               	movlb	2	; () banked
 15403  008304  25E3               	addwf	_ponteiro_COMM& (0+255),w,b
 15404  008306  6ED9               	movwf	16345,c
 15405  008308  0E07               	movlw	high _buffer_escrita_comm
 15406  00830A  21E4               	addwfc	(_ponteiro_COMM+1)& (0+255),w,b
 15407  00830C  6EDA               	movwf	16346,c
 15408  00830E  0060  F013  FFDF   	movff	Buffer_Escrita_COMM_Add_Char@dado,16351
 15409                           
 15410                           ; BSR set to: 2
 15411                           ;Serial.c: 213: if (ponteiro_COMM >= 150) ponteiro_COMM = 0;
 15412  008314  51E4               	movf	(_ponteiro_COMM+1)& (0+255),w,b
 15413  008316  E104               	bnz	i1u700_20
 15414  008318  0E96               	movlw	150
 15415  00831A  5DE3               	subwf	_ponteiro_COMM& (0+255),w,b
 15416  00831C  A0D8               	btfss	16344,0,c
 15417  00831E  D005               	goto	i1l292
 15418  008320                     i1u700_20:
 15419                           
 15420                           ; BSR set to: 2
 15421  008320  0E00               	movlw	0
 15422  008322  6FE4               	movwf	(_ponteiro_COMM+1)& (0+255),b
 15423  008324  0E00               	movlw	0
 15424  008326  6FE3               	movwf	_ponteiro_COMM& (0+255),b
 15425  008328  0012               	return	
 15426  00832A                     i1l292:
 15427                           
 15428                           ; BSR set to: 2
 15429                           ;Serial.c: 214: else ponteiro_COMM++;
 15430                           
 15431                           ; BSR set to: 2
 15432  00832A  4BE3               	infsnz	_ponteiro_COMM& (0+255),f,b
 15433  00832C  2BE4               	incf	(_ponteiro_COMM+1)& (0+255),f,b
 15434  00832E  0012               	return	
 15435  008330                     __end_of_Buffer_Escrita_COMM_Add_Char:
 15436                           	opt stack 0
 15437                           
 15438 ;; *************** function _Interrupt_WIFI_GSM *****************
 15439 ;; Defined at:
 15440 ;;		line 44 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Main.c"
 15441 ;; Parameters:    Size  Location     Type
 15442 ;;		None
 15443 ;; Auto vars:     Size  Location     Type
 15444 ;;  lido            1  118[BANK0 ] unsigned char 
 15445 ;; Return value:  Size  Location     Type
 15446 ;;                  1    wreg      void 
 15447 ;; Registers used:
 15448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15449 ;; Tracked objects:
 15450 ;;		On entry : 0/0
 15451 ;;		On exit  : 0/0
 15452 ;;		Unchanged: 0/0
 15453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15455 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15456 ;;      Temps:          0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15457 ;;      Totals:         0       1       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15458 ;;Total ram usage:        6 bytes
 15459 ;; Hardware stack levels used:    1
 15460 ;; Hardware stack levels required when called:    9
 15461 ;; This function calls:
 15462 ;;		_AguardaINT
 15463 ;;		_Recebe_COMM
 15464 ;;		i1_Buffer_Escrita_USB_Add_Char
 15465 ;; This function is called by:
 15466 ;;		Interrupt level 1
 15467 ;; This function uses a non-reentrant model
 15468 ;;
 15469                           
 15470                           	psect	text43
 15471  007C08                     __ptext43:
 15472                           	opt stack 0
 15473  007C08                     _Interrupt_WIFI_GSM:
 15474                           	opt stack 16
 15475                           
 15476                           ; BSR set to: 2
 15477                           ;incstack = 0
 15478  007C08  006F FF60  F200    	movff	16344,??_Interrupt_WIFI_GSM
 15479  007C0E  006F FFD8  F201    	movff	16374,??_Interrupt_WIFI_GSM+1
 15480  007C14  006F FFDC  F202    	movff	16375,??_Interrupt_WIFI_GSM+2
 15481  007C1A  006F FFE0  F203    	movff	16376,??_Interrupt_WIFI_GSM+3
 15482  007C20  006F FFD4  F204    	movff	16373,??_Interrupt_WIFI_GSM+4
 15483                           
 15484                           ;Main.c: 47: if (U2RXIF == 1) {
 15485  007C26  0139               	movlb	57	; () banked
 15486  007C28  A5A6               	btfss	166,2,b	;volatile
 15487  007C2A  D00D               	goto	i1l115
 15488                           
 15489                           ; BSR set to: 57
 15490                           ;Main.c: 48: char lido = Recebe_COMM();
 15491  007C2C  EC7D  F042         	call	_Recebe_COMM	;wreg free
 15492  007C30  0100               	movlb	0	; () banked
 15493  007C32  6FD6               	movwf	Interrupt_WIFI_GSM@lido& (0+255),b
 15494                           
 15495                           ; BSR set to: 0
 15496                           ;Main.c: 49: Buffer_Escrita_USB_Add_Char(lido);
 15497  007C34  51D6               	movf	Interrupt_WIFI_GSM@lido& (0+255),w,b
 15498  007C36  EC98  F041         	call	i1_Buffer_Escrita_USB_Add_Char
 15499                           
 15500                           ;Main.c: 50: AguardaINT(lido);
 15501  007C3A  0100               	movlb	0	; () banked
 15502  007C3C  51D6               	movf	Interrupt_WIFI_GSM@lido& (0+255),w,b
 15503  007C3E  EC61  F032         	call	_AguardaINT
 15504                           
 15505                           ;Main.c: 51: U2RXIF = 0;
 15506  007C42  0139               	movlb	57	; () banked
 15507  007C44  95A6               	bcf	166,2,b	;volatile
 15508  007C46                     i1l115:
 15509                           
 15510                           ; BSR set to: 57
 15511                           
 15512                           ; BSR set to: 57
 15513  007C46  0060  F813  FFF5   	movff	??_Interrupt_WIFI_GSM+4,16373
 15514  007C4C  0060  F80F  FFF8   	movff	??_Interrupt_WIFI_GSM+3,16376
 15515  007C52  0060  F80B  FFF7   	movff	??_Interrupt_WIFI_GSM+2,16375
 15516  007C58  0060  F807  FFF6   	movff	??_Interrupt_WIFI_GSM+1,16374
 15517  007C5E  0060  F803  FFD8   	movff	??_Interrupt_WIFI_GSM,16344
 15518  007C64  0011               	retfie		f
 15519  007C66                     __end_of_Interrupt_WIFI_GSM:
 15520                           	opt stack 0
 15521                           
 15522 ;; *************** function _Recebe_COMM *****************
 15523 ;; Defined at:
 15524 ;;		line 140 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 15525 ;; Parameters:    Size  Location     Type
 15526 ;;		None
 15527 ;; Auto vars:     Size  Location     Type
 15528 ;;		None
 15529 ;; Return value:  Size  Location     Type
 15530 ;;                  1    wreg      unsigned char 
 15531 ;; Registers used:
 15532 ;;		wreg, status,2
 15533 ;; Tracked objects:
 15534 ;;		On entry : 0/0
 15535 ;;		On exit  : 0/0
 15536 ;;		Unchanged: 0/0
 15537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15542 ;;Total ram usage:        0 bytes
 15543 ;; Hardware stack levels used:    1
 15544 ;; This function calls:
 15545 ;;		Nothing
 15546 ;; This function is called by:
 15547 ;;		_Interrupt_WIFI_GSM
 15548 ;; This function uses a non-reentrant model
 15549 ;;
 15550                           
 15551                           	psect	text44
 15552  0084FA                     __ptext44:
 15553                           	opt stack 0
 15554  0084FA                     _Recebe_COMM:
 15555                           	opt stack 24
 15556                           
 15557                           ;Serial.c: 141: return U2RXB;
 15558                           
 15559                           ; BSR set to: 57
 15560                           ;incstack = 0
 15561  0084FA  013D               	movlb	61	; () banked
 15562  0084FC  51D0               	movf	208,w,b	;volatile
 15563  0084FE  0012               	return	
 15564  008500                     __end_of_Recebe_COMM:
 15565                           	opt stack 0
 15566                           
 15567 ;; *************** function _AguardaINT *****************
 15568 ;; Defined at:
 15569 ;;		line 244 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 15570 ;; Parameters:    Size  Location     Type
 15571 ;;  dado            1    wreg     unsigned char 
 15572 ;; Auto vars:     Size  Location     Type
 15573 ;;  dado            1  117[BANK0 ] unsigned char 
 15574 ;; Return value:  Size  Location     Type
 15575 ;;                  1    wreg      void 
 15576 ;; Registers used:
 15577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15578 ;; Tracked objects:
 15579 ;;		On entry : 0/0
 15580 ;;		On exit  : 0/0
 15581 ;;		Unchanged: 0/0
 15582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15584 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15585 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15586 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15587 ;;Total ram usage:        3 bytes
 15588 ;; Hardware stack levels used:    1
 15589 ;; Hardware stack levels required when called:    8
 15590 ;; This function calls:
 15591 ;;		Absolute function
 15592 ;;		_GETMACAddr
 15593 ;;		_Post
 15594 ;;		_Post2
 15595 ;;		_SETMACAddr
 15596 ;;		_SOCKET_RX
 15597 ;;		_TASK_POST
 15598 ;;		_WIND
 15599 ;;		_inicia_Post
 15600 ;;		_nada
 15601 ;;		_recebe
 15602 ;;		_recebeADDRESS
 15603 ;;		_recebeFRAMEID
 15604 ;;		_recebeFRAMES
 15605 ;;		_recebeFUNCTIONCODE
 15606 ;;		_recebeNETWORKID
 15607 ;;		_recebeNODEID
 15608 ;;		_recebeSIZE
 15609 ;;		_verificaERRO
 15610 ;; This function is called by:
 15611 ;;		_Interrupt_WIFI_GSM
 15612 ;; This function uses a non-reentrant model
 15613 ;;
 15614                           
 15615                           	psect	text45
 15616  0064C2                     __ptext45:
 15617                           	opt stack 0
 15618  0064C2                     _AguardaINT:
 15619                           	opt stack 16
 15620                           
 15621                           ; BSR set to: 61
 15622                           ;incstack = 0
 15623                           ;AguardaINT@dado stored from wreg
 15624  0064C2  0100               	movlb	0	; () banked
 15625  0064C4  6FD5               	movwf	AguardaINT@dado& (0+255),b
 15626                           
 15627                           ;Serial.c: 245: verificaERRO(dado);
 15628  0064C6  0100               	movlb	0	; () banked
 15629  0064C8  51D5               	movf	AguardaINT@dado& (0+255),w,b
 15630  0064CA  ECBC  F03F         	call	_verificaERRO
 15631                           
 15632                           ;Serial.c: 246: if (Aguarda_str_OK == 0) {
 15633  0064CE  0100               	movlb	0	; () banked
 15634  0064D0  51ED               	movf	_Aguarda_str_OK& (0+255),w,b
 15635  0064D2  11EE               	iorwf	(_Aguarda_str_OK+1)& (0+255),w,b
 15636  0064D4  A4D8               	btfss	16344,2,c
 15637  0064D6  D023               	goto	i1l308
 15638                           
 15639                           ; BSR set to: 0
 15640                           ;Serial.c: 247: if (dado == Aguarda_str[Aguarda_Ponteiro]) {
 15641  0064D8  0EAA               	movlw	low _Aguarda_str
 15642  0064DA  25F1               	addwf	_Aguarda_Ponteiro& (0+255),w,b
 15643  0064DC  6ED9               	movwf	16345,c
 15644  0064DE  0E03               	movlw	high _Aguarda_str
 15645  0064E0  21F2               	addwfc	(_Aguarda_Ponteiro+1)& (0+255),w,b
 15646  0064E2  6EDA               	movwf	16346,c
 15647  0064E4  51D5               	movf	AguardaINT@dado& (0+255),w,b
 15648  0064E6  18DE               	xorwf	16350,w,c
 15649  0064E8  A4D8               	btfss	16344,2,c
 15650  0064EA  D014               	goto	i1l309
 15651                           
 15652                           ; BSR set to: 0
 15653                           ;Serial.c: 248: Aguarda_Ponteiro++;
 15654  0064EC  4BF1               	infsnz	_Aguarda_Ponteiro& (0+255),f,b
 15655  0064EE  2BF2               	incf	(_Aguarda_Ponteiro+1)& (0+255),f,b
 15656                           
 15657                           ; BSR set to: 0
 15658                           ;Serial.c: 249: if (Aguarda_str[Aguarda_Ponteiro] == 0x00) {
 15659  0064F0  0EAA               	movlw	low _Aguarda_str
 15660  0064F2  25F1               	addwf	_Aguarda_Ponteiro& (0+255),w,b
 15661  0064F4  6ED9               	movwf	16345,c
 15662  0064F6  0E03               	movlw	high _Aguarda_str
 15663  0064F8  21F2               	addwfc	(_Aguarda_Ponteiro+1)& (0+255),w,b
 15664  0064FA  6EDA               	movwf	16346,c
 15665  0064FC  50DF               	movf	16351,w,c
 15666  0064FE  A4D8               	btfss	16344,2,c
 15667  006500  0012               	return	
 15668                           
 15669                           ; BSR set to: 0
 15670                           ;Serial.c: 250: Aguarda_str_OK = 1;
 15671  006502  0E00               	movlw	0
 15672  006504  6FEE               	movwf	(_Aguarda_str_OK+1)& (0+255),b
 15673  006506  0E01               	movlw	1
 15674  006508  6FED               	movwf	_Aguarda_str_OK& (0+255),b
 15675                           
 15676                           ;Serial.c: 251: Aguarda_Ponteiro = 0;
 15677  00650A  0E00               	movlw	0
 15678  00650C  6FF2               	movwf	(_Aguarda_Ponteiro+1)& (0+255),b
 15679  00650E  0E00               	movlw	0
 15680  006510  6FF1               	movwf	_Aguarda_Ponteiro& (0+255),b
 15681                           
 15682                           ; BSR set to: 0
 15683                           ;Serial.c: 252: }
 15684                           ;Serial.c: 253: } else {
 15685  006512  0012               	return	
 15686  006514                     i1l309:
 15687                           
 15688                           ; BSR set to: 0
 15689                           ;Serial.c: 254: Aguarda_Ponteiro = 0;
 15690                           
 15691                           ; BSR set to: 0
 15692  006514  0E00               	movlw	0
 15693  006516  6FF2               	movwf	(_Aguarda_Ponteiro+1)& (0+255),b
 15694  006518  0E00               	movlw	0
 15695  00651A  6FF1               	movwf	_Aguarda_Ponteiro& (0+255),b
 15696                           
 15697                           ; BSR set to: 0
 15698                           ;Serial.c: 255: }
 15699                           ;Serial.c: 256: } else {
 15700  00651C  0012               	return	
 15701  00651E                     i1l308:
 15702                           
 15703                           ; BSR set to: 0
 15704                           ;Serial.c: 257: Aguarda_Resposta[Aguarda_Ponteiro] = dado;
 15705                           
 15706                           ; BSR set to: 0
 15707  00651E  0E00               	movlw	low _Aguarda_Resposta
 15708  006520  25F1               	addwf	_Aguarda_Ponteiro& (0+255),w,b
 15709  006522  6ED9               	movwf	16345,c
 15710  006524  0E03               	movlw	high _Aguarda_Resposta
 15711  006526  21F2               	addwfc	(_Aguarda_Ponteiro+1)& (0+255),w,b
 15712  006528  6EDA               	movwf	16346,c
 15713  00652A  0060  F357  FFDF   	movff	AguardaINT@dado,16351
 15714                           
 15715                           ; BSR set to: 0
 15716                           ;Serial.c: 258: Aguarda_Ponteiro++;
 15717  006530  4BF1               	infsnz	_Aguarda_Ponteiro& (0+255),f,b
 15718  006532  2BF2               	incf	(_Aguarda_Ponteiro+1)& (0+255),f,b
 15719                           
 15720                           ; BSR set to: 0
 15721                           ;Serial.c: 259: if (breakpoint_sw == 1) {
 15722  006534  0101               	movlb	1	; () banked
 15723  006536  05E3               	decf	_breakpoint_sw& (0+255),w,b
 15724  006538  11E4               	iorwf	(_breakpoint_sw+1)& (0+255),w,b
 15725  00653A  A4D8               	btfss	16344,2,c
 15726  00653C  D004               	goto	i1l313
 15727                           
 15728                           ; BSR set to: 1
 15729                           ;Serial.c: 260: breakpoint_sw = 1;
 15730  00653E  0E00               	movlw	0
 15731  006540  6FE4               	movwf	(_breakpoint_sw+1)& (0+255),b
 15732  006542  0E01               	movlw	1
 15733  006544  6FE3               	movwf	_breakpoint_sw& (0+255),b
 15734  006546                     i1l313:
 15735                           
 15736                           ; BSR set to: 1
 15737                           ;Serial.c: 261: }
 15738                           ;Serial.c: 262: if (dado == Aguarda_end[Aguarda_End_Ponteiro]) {
 15739                           
 15740                           ; BSR set to: 1
 15741  006546  0ED0               	movlw	low _Aguarda_end
 15742  006548  0100               	movlb	0	; () banked
 15743  00654A  25EF               	addwf	_Aguarda_End_Ponteiro& (0+255),w,b
 15744  00654C  6ED9               	movwf	16345,c
 15745  00654E  0E03               	movlw	high _Aguarda_end
 15746  006550  21F0               	addwfc	(_Aguarda_End_Ponteiro+1)& (0+255),w,b
 15747  006552  6EDA               	movwf	16346,c
 15748  006554  51D5               	movf	AguardaINT@dado& (0+255),w,b
 15749  006556  18DE               	xorwf	16350,w,c
 15750  006558  A4D8               	btfss	16344,2,c
 15751  00655A  0012               	return	
 15752                           
 15753                           ; BSR set to: 0
 15754                           ;Serial.c: 263: Aguarda_End_Ponteiro++;
 15755  00655C  4BEF               	infsnz	_Aguarda_End_Ponteiro& (0+255),f,b
 15756  00655E  2BF0               	incf	(_Aguarda_End_Ponteiro+1)& (0+255),f,b
 15757                           
 15758                           ; BSR set to: 0
 15759                           ;Serial.c: 264: if (Aguarda_end[Aguarda_End_Ponteiro] == 0x00) {
 15760  006560  0ED0               	movlw	low _Aguarda_end
 15761  006562  25EF               	addwf	_Aguarda_End_Ponteiro& (0+255),w,b
 15762  006564  6ED9               	movwf	16345,c
 15763  006566  0E03               	movlw	high _Aguarda_end
 15764  006568  21F0               	addwfc	(_Aguarda_End_Ponteiro+1)& (0+255),w,b
 15765  00656A  6EDA               	movwf	16346,c
 15766  00656C  50DF               	movf	16351,w,c
 15767  00656E  A4D8               	btfss	16344,2,c
 15768  006570  0012               	return	
 15769                           
 15770                           ; BSR set to: 0
 15771                           ;Serial.c: 265: Aguarda_Resposta[Aguarda_Ponteiro - Aguarda_End_Ponteiro] = 0x00;
 15772  006572  0060  F3BC  F0D3   	movff	_Aguarda_End_Ponteiro,??_AguardaINT
 15773  006578  0060  F3C0  F0D4   	movff	_Aguarda_End_Ponteiro+1,??_AguardaINT+1
 15774  00657E  1FD3               	comf	??_AguardaINT& (0+255),f,b
 15775  006580  1FD4               	comf	(??_AguardaINT+1)& (0+255),f,b
 15776  006582  4BD3               	infsnz	??_AguardaINT& (0+255),f,b
 15777  006584  2BD4               	incf	(??_AguardaINT+1)& (0+255),f,b
 15778  006586  51F1               	movf	_Aguarda_Ponteiro& (0+255),w,b
 15779  006588  27D3               	addwf	??_AguardaINT& (0+255),f,b
 15780  00658A  51F2               	movf	(_Aguarda_Ponteiro+1)& (0+255),w,b
 15781  00658C  23D4               	addwfc	(??_AguardaINT+1)& (0+255),f,b
 15782  00658E  0E00               	movlw	low _Aguarda_Resposta
 15783  006590  25D3               	addwf	??_AguardaINT& (0+255),w,b
 15784  006592  6ED9               	movwf	16345,c
 15785  006594  0E03               	movlw	high _Aguarda_Resposta
 15786  006596  21D4               	addwfc	(??_AguardaINT+1)& (0+255),w,b
 15787  006598  6EDA               	movwf	16346,c
 15788  00659A  0E00               	movlw	0
 15789  00659C  6EDF               	movwf	16351,c
 15790                           
 15791                           ; BSR set to: 0
 15792                           ;Serial.c: 266: Aguarda_End_Ponteiro = 0;
 15793  00659E  0E00               	movlw	0
 15794  0065A0  6FF0               	movwf	(_Aguarda_End_Ponteiro+1)& (0+255),b
 15795  0065A2  0E00               	movlw	0
 15796  0065A4  6FEF               	movwf	_Aguarda_End_Ponteiro& (0+255),b
 15797                           
 15798                           ; BSR set to: 0
 15799                           ;Serial.c: 267: Aguarda_str_OK = 0;
 15800  0065A6  0E00               	movlw	0
 15801  0065A8  6FEE               	movwf	(_Aguarda_str_OK+1)& (0+255),b
 15802  0065AA  0E00               	movlw	0
 15803  0065AC  6FED               	movwf	_Aguarda_str_OK& (0+255),b
 15804                           
 15805                           ; BSR set to: 0
 15806                           ;Serial.c: 269: Aguarda_Funcao();
 15807  0065AE  D801               	call	i1u1867_28
 15808  0065B0  0012               	return	
 15809  0065B2                     i1u1867_28:
 15810  0065B2  0005               	push	
 15811  0065B4  6EFA               	movwf	16378,c
 15812  0065B6  51EB               	movf	_Aguarda_Funcao& (0+255),w,b
 15813  0065B8  6EFD               	movwf	16381,c
 15814  0065BA  51EC               	movf	(_Aguarda_Funcao+1)& (0+255),w,b
 15815  0065BC  6EFE               	movwf	16382,c
 15816  0065BE  6AFF               	clrf	16383,c
 15817  0065C0  50FA               	movf	16378,w,c
 15818  0065C2  0012               	return		;indir
 15819  0065C4                     __end_of_AguardaINT:
 15820                           	opt stack 0
 15821                           
 15822 ;; *************** function _TASK_POST *****************
 15823 ;; Defined at:
 15824 ;;		line 229 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 15825 ;; Parameters:    Size  Location     Type
 15826 ;;		None
 15827 ;; Auto vars:     Size  Location     Type
 15828 ;;		None
 15829 ;; Return value:  Size  Location     Type
 15830 ;;                  1    wreg      void 
 15831 ;; Registers used:
 15832 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15833 ;; Tracked objects:
 15834 ;;		On entry : 0/0
 15835 ;;		On exit  : 0/0
 15836 ;;		Unchanged: 0/0
 15837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15842 ;;Total ram usage:        0 bytes
 15843 ;; Hardware stack levels used:    1
 15844 ;; Hardware stack levels required when called:    5
 15845 ;; This function calls:
 15846 ;;		_Buffer_Escrita_COMM_Add_String
 15847 ;;		i1_Aguarda_dado
 15848 ;; This function is called by:
 15849 ;;		_AguardaINT
 15850 ;; This function uses a non-reentrant model
 15851 ;;
 15852                           
 15853                           	psect	text46
 15854  008220                     __ptext46:
 15855                           	opt stack 0
 15856  008220                     _TASK_POST:
 15857                           	opt stack 18
 15858                           
 15859                           ;GERREX.c: 230: Buffer_Escrita_COMM_Add_String("AT+S.HTTPPOST=services.gerrex.com.br,/se
      +                          rvice/task,80,,,,gerrex_response.json,gerrex.json\r", 0);
 15860                           
 15861                           ;incstack = 0
 15862  008220  0EDD               	movlw	low STR_82
 15863  008222  6E06               	movwf	Buffer_Escrita_COMM_Add_String@dado,c
 15864  008224  0EFB               	movlw	high STR_82
 15865  008226  6E07               	movwf	Buffer_Escrita_COMM_Add_String@dado+1,c
 15866  008228  0E00               	movlw	0
 15867  00822A  6E09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda+1,c
 15868  00822C  0E00               	movlw	0
 15869  00822E  6E08               	movwf	Buffer_Escrita_COMM_Add_String@aguarda,c
 15870  008230  EC6E  F036         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
 15871                           
 15872                           ;GERREX.c: 231: Aguarda_dado("A", "K\r", "", TASK_POST);
 15873  008234  0EFB               	movlw	low STR_83
 15874  008236  0100               	movlb	0	; () banked
 15875  008238  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 15876  00823A  0EFF               	movlw	high STR_83
 15877  00823C  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 15878  00823E  0EE7               	movlw	low STR_84
 15879  008240  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 15880  008242  0EFF               	movlw	high STR_84
 15881  008244  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 15882  008246  0E65               	movlw	low (STR_94+23)
 15883  008248  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 15884  00824A  0EFE               	movlw	high (STR_94+23)
 15885  00824C  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 15886  00824E  0E20               	movlw	low _TASK_POST
 15887  008250  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 15888  008252  0E82               	movlw	high _TASK_POST
 15889  008254  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 15890  008256  ECA2  F03D         	call	i1_Aguarda_dado	;wreg free
 15891  00825A  0012               	return		;funcret
 15892  00825C                     __end_of_TASK_POST:
 15893                           	opt stack 0
 15894                           
 15895 ;; *************** function _SETMACAddr *****************
 15896 ;; Defined at:
 15897 ;;		line 188 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 15898 ;; Parameters:    Size  Location     Type
 15899 ;;		None
 15900 ;; Auto vars:     Size  Location     Type
 15901 ;;  i               2  113[BANK0 ] int 
 15902 ;; Return value:  Size  Location     Type
 15903 ;;                  1    wreg      void 
 15904 ;; Registers used:
 15905 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15906 ;; Tracked objects:
 15907 ;;		On entry : 0/0
 15908 ;;		On exit  : 0/0
 15909 ;;		Unchanged: 0/0
 15910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15912 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15914 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15915 ;;Total ram usage:        2 bytes
 15916 ;; Hardware stack levels used:    1
 15917 ;; Hardware stack levels required when called:    7
 15918 ;; This function calls:
 15919 ;;		_inicia_Post
 15920 ;;		_limpa_Buffer_Escrita_COMM
 15921 ;;		_limpa_Buffer_Escrita_USB
 15922 ;;		i1_Buffer_Escrita_USB_Add_String
 15923 ;; This function is called by:
 15924 ;;		_GETMACAddr
 15925 ;;		_AguardaINT
 15926 ;; This function uses a non-reentrant model
 15927 ;;
 15928                           
 15929                           	psect	text47
 15930  0071CC                     __ptext47:
 15931                           	opt stack 0
 15932  0071CC                     _SETMACAddr:
 15933                           	opt stack 16
 15934                           
 15935                           ;GERREX.c: 189: PORTBbits.RB2 = 1;
 15936                           
 15937                           ;incstack = 0
 15938  0071CC  013F               	movlb	63	; () banked
 15939  0071CE  85CB               	bsf	203,2,b	;volatile
 15940                           
 15941                           ; BSR set to: 63
 15942                           ;GERREX.c: 190: int i = 0;
 15943  0071D0  0E00               	movlw	0
 15944  0071D2  0100               	movlb	0	; () banked
 15945  0071D4  6FD2               	movwf	(SETMACAddr@i+1)& (0+255),b
 15946  0071D6  0E00               	movlw	0
 15947  0071D8  6FD1               	movwf	SETMACAddr@i& (0+255),b
 15948                           
 15949                           ;GERREX.c: 191: while (Aguarda_Resposta[i] != 0x00) {
 15950  0071DA  D011               	goto	i1l622
 15951  0071DC                     
 15952                           ; BSR set to: 0
 15953                           ;GERREX.c: 192: MACAddress[i] = Aguarda_Resposta[i];
 15954                           
 15955                           ; BSR set to: 0
 15956  0071DC  0E00               	movlw	low _Aguarda_Resposta
 15957  0071DE  25D1               	addwf	SETMACAddr@i& (0+255),w,b
 15958  0071E0  6ED9               	movwf	16345,c
 15959  0071E2  0E03               	movlw	high _Aguarda_Resposta
 15960  0071E4  21D2               	addwfc	(SETMACAddr@i+1)& (0+255),w,b
 15961  0071E6  6EDA               	movwf	16346,c
 15962  0071E8  0EBE               	movlw	low _MACAddress
 15963  0071EA  25D1               	addwf	SETMACAddr@i& (0+255),w,b
 15964  0071EC  6EE1               	movwf	16353,c
 15965  0071EE  0E03               	movlw	high _MACAddress
 15966  0071F0  21D2               	addwfc	(SETMACAddr@i+1)& (0+255),w,b
 15967  0071F2  6EE2               	movwf	16354,c
 15968  0071F4  006F FF7F FFE7     	movff	16351,16359
 15969                           
 15970                           ; BSR set to: 0
 15971                           ;GERREX.c: 193: i++;
 15972  0071FA  4BD1               	infsnz	SETMACAddr@i& (0+255),f,b
 15973  0071FC  2BD2               	incf	(SETMACAddr@i+1)& (0+255),f,b
 15974  0071FE                     i1l622:
 15975                           
 15976                           ; BSR set to: 0
 15977                           
 15978                           ; BSR set to: 0
 15979  0071FE  0E00               	movlw	low _Aguarda_Resposta
 15980  007200  25D1               	addwf	SETMACAddr@i& (0+255),w,b
 15981  007202  6ED9               	movwf	16345,c
 15982  007204  0E03               	movlw	high _Aguarda_Resposta
 15983  007206  21D2               	addwfc	(SETMACAddr@i+1)& (0+255),w,b
 15984  007208  6EDA               	movwf	16346,c
 15985  00720A  50DF               	movf	16351,w,c
 15986  00720C  A4D8               	btfss	16344,2,c
 15987  00720E  D7E6               	goto	i1l623
 15988                           
 15989                           ; BSR set to: 0
 15990                           ;GERREX.c: 194: }
 15991                           ;GERREX.c: 195: MACAddress[i] = 0x00;
 15992                           
 15993                           ; BSR set to: 0
 15994  007210  0EBE               	movlw	low _MACAddress
 15995  007212  25D1               	addwf	SETMACAddr@i& (0+255),w,b
 15996  007214  6ED9               	movwf	16345,c
 15997  007216  0E03               	movlw	high _MACAddress
 15998  007218  21D2               	addwfc	(SETMACAddr@i+1)& (0+255),w,b
 15999  00721A  6EDA               	movwf	16346,c
 16000  00721C  0E00               	movlw	0
 16001  00721E  6EDF               	movwf	16351,c
 16002                           
 16003                           ; BSR set to: 0
 16004                           ;GERREX.c: 197: limpa_Buffer_Escrita_COMM();
 16005  007220  ECEE  F040         	call	_limpa_Buffer_Escrita_COMM	;wreg free
 16006                           
 16007                           ;GERREX.c: 198: limpa_Buffer_Escrita_USB();
 16008  007224  ECCC  F040         	call	_limpa_Buffer_Escrita_USB	;wreg free
 16009                           
 16010                           ;GERREX.c: 199: PORTBbits.RB2 = 0;
 16011  007228  013F               	movlb	63	; () banked
 16012  00722A  95CB               	bcf	203,2,b	;volatile
 16013                           
 16014                           ; BSR set to: 63
 16015                           ;GERREX.c: 201: Buffer_Escrita_USB_Add_String("\r\n\r\n>MAC: ", 1);
 16016  00722C  0E4E               	movlw	low STR_74
 16017  00722E  6E06               	movwf	i1Buffer_Escrita_USB_Add_String@dado,c
 16018  007230  0EFF               	movlw	high STR_74
 16019  007232  6E07               	movwf	i1Buffer_Escrita_USB_Add_String@dado+1,c
 16020  007234  0E00               	movlw	0
 16021  007236  6E09               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,c
 16022  007238  0E01               	movlw	1
 16023  00723A  6E08               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda,c
 16024  00723C  EC0C  F036         	call	i1_Buffer_Escrita_USB_Add_String	;wreg free
 16025                           
 16026                           ;GERREX.c: 202: Buffer_Escrita_USB_Add_String(MACAddress, 1);
 16027  007240  0EBE               	movlw	low _MACAddress
 16028  007242  6E06               	movwf	i1Buffer_Escrita_USB_Add_String@dado,c
 16029  007244  0E03               	movlw	high _MACAddress
 16030  007246  6E07               	movwf	i1Buffer_Escrita_USB_Add_String@dado+1,c
 16031  007248  0E00               	movlw	0
 16032  00724A  6E09               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,c
 16033  00724C  0E01               	movlw	1
 16034  00724E  6E08               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda,c
 16035  007250  EC0C  F036         	call	i1_Buffer_Escrita_USB_Add_String	;wreg free
 16036                           
 16037                           ;GERREX.c: 203: Buffer_Escrita_USB_Add_String("\r\n\r\n", 1);
 16038  007254  0E61               	movlw	low (STR_94+19)
 16039  007256  6E06               	movwf	i1Buffer_Escrita_USB_Add_String@dado,c
 16040  007258  0EFE               	movlw	high (STR_94+19)
 16041  00725A  6E07               	movwf	i1Buffer_Escrita_USB_Add_String@dado+1,c
 16042  00725C  0E00               	movlw	0
 16043  00725E  6E09               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,c
 16044  007260  0E01               	movlw	1
 16045  007262  6E08               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda,c
 16046  007264  EC0C  F036         	call	i1_Buffer_Escrita_USB_Add_String	;wreg free
 16047                           
 16048                           ;GERREX.c: 205: PORTBbits.RB2 = 1;
 16049  007268  013F               	movlb	63	; () banked
 16050  00726A  85CB               	bsf	203,2,b	;volatile
 16051                           
 16052                           ; BSR set to: 63
 16053                           ;GERREX.c: 207: inicia_Post();
 16054  00726C  EC5D  F03C         	call	_inicia_Post	;wreg free
 16055  007270  0012               	return		;funcret
 16056  007272                     __end_of_SETMACAddr:
 16057                           	opt stack 0
 16058                           
 16059 ;; *************** function _SOCKET_RX *****************
 16060 ;; Defined at:
 16061 ;;		line 297 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 16062 ;; Parameters:    Size  Location     Type
 16063 ;;		None
 16064 ;; Auto vars:     Size  Location     Type
 16065 ;;  i               2   87[COMRAM] int 
 16066 ;; Return value:  Size  Location     Type
 16067 ;;                  1    wreg      void 
 16068 ;; Registers used:
 16069 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16070 ;; Tracked objects:
 16071 ;;		On entry : 0/0
 16072 ;;		On exit  : 0/0
 16073 ;;		Unchanged: 0/0
 16074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16076 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16078 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16079 ;;Total ram usage:        2 bytes
 16080 ;; Hardware stack levels used:    1
 16081 ;; Hardware stack levels required when called:    5
 16082 ;; This function calls:
 16083 ;;		_Buffer_Escrita_COMM_Add_Char
 16084 ;;		_Buffer_Escrita_COMM_Add_String
 16085 ;;		i1_Aguarda_dado
 16086 ;;		i1_TransmiteBuffer_COMM
 16087 ;; This function is called by:
 16088 ;;		_WIND
 16089 ;;		_SOCKET_QUERY
 16090 ;;		_AguardaINT
 16091 ;; This function uses a non-reentrant model
 16092 ;;
 16093                           
 16094                           	psect	text48
 16095  007660                     __ptext48:
 16096                           	opt stack 0
 16097  007660                     _SOCKET_RX:
 16098                           	opt stack 18
 16099                           
 16100                           ;GERREX.c: 298: int i = 0;
 16101                           
 16102                           ;incstack = 0
 16103  007660  0E00               	movlw	0
 16104  007662  6E59               	movwf	SOCKET_RX@i+1,c
 16105  007664  0E00               	movlw	0
 16106  007666  6E58               	movwf	SOCKET_RX@i,c
 16107                           
 16108                           ;GERREX.c: 309: Buffer_Escrita_COMM_Add_String("AT+S.SOCKR=00,", 0);
 16109  007668  0E0E               	movlw	low STR_107
 16110  00766A  6E06               	movwf	Buffer_Escrita_COMM_Add_String@dado,c
 16111  00766C  0EFF               	movlw	high STR_107
 16112  00766E  6E07               	movwf	Buffer_Escrita_COMM_Add_String@dado+1,c
 16113  007670  0E00               	movlw	0
 16114  007672  6E09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda+1,c
 16115  007674  0E00               	movlw	0
 16116  007676  6E08               	movwf	Buffer_Escrita_COMM_Add_String@aguarda,c
 16117  007678  EC6E  F036         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
 16118                           
 16119                           ;GERREX.c: 310: while (Aguarda_Resposta[i] != 0x00) {
 16120  00767C  D00B               	goto	i1l659
 16121  00767E                     
 16122                           ;GERREX.c: 311: Buffer_Escrita_COMM_Add_Char(Aguarda_Resposta[i]);
 16123  00767E  0E00               	movlw	low _Aguarda_Resposta
 16124  007680  2458               	addwf	SOCKET_RX@i,w,c
 16125  007682  6ED9               	movwf	16345,c
 16126  007684  0E03               	movlw	high _Aguarda_Resposta
 16127  007686  2059               	addwfc	SOCKET_RX@i+1,w,c
 16128  007688  6EDA               	movwf	16346,c
 16129  00768A  50DF               	movf	16351,w,c
 16130  00768C  EC7F  F041         	call	_Buffer_Escrita_COMM_Add_Char
 16131                           
 16132                           ;GERREX.c: 312: i++;
 16133  007690  4A58               	infsnz	SOCKET_RX@i,f,c
 16134  007692  2A59               	incf	SOCKET_RX@i+1,f,c
 16135  007694                     i1l659:
 16136  007694  0E00               	movlw	low _Aguarda_Resposta
 16137  007696  2458               	addwf	SOCKET_RX@i,w,c
 16138  007698  6ED9               	movwf	16345,c
 16139  00769A  0E03               	movlw	high _Aguarda_Resposta
 16140  00769C  2059               	addwfc	SOCKET_RX@i+1,w,c
 16141  00769E  6EDA               	movwf	16346,c
 16142  0076A0  50DF               	movf	16351,w,c
 16143  0076A2  A4D8               	btfss	16344,2,c
 16144  0076A4  D7EC               	goto	i1l660
 16145                           
 16146                           ;GERREX.c: 313: }
 16147                           ;GERREX.c: 314: Buffer_Escrita_COMM_Add_Char('\r');
 16148  0076A6  0E0D               	movlw	13
 16149  0076A8  EC7F  F041         	call	_Buffer_Escrita_COMM_Add_Char
 16150  0076AC  ECBC  F03E         	call	i1_TransmiteBuffer_COMM	;wreg free
 16151  0076B0  5004               	movf	?i1_TransmiteBuffer_COMM,w,c
 16152  0076B2  1005               	iorwf	?i1_TransmiteBuffer_COMM+1,w,c
 16153  0076B4  B4D8               	btfsc	16344,2,c
 16154  0076B6  D7FA               	goto	i1l663
 16155                           
 16156                           ;GERREX.c: 317: Aguarda_dado("+WIND:", ":", "", WIND);
 16157  0076B8  0EAF               	movlw	low STR_96
 16158  0076BA  0100               	movlb	0	; () banked
 16159  0076BC  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 16160  0076BE  0EFF               	movlw	high STR_96
 16161  0076C0  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 16162  0076C2  0EC1               	movlw	low (STR_62+4)
 16163  0076C4  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 16164  0076C6  0EFF               	movlw	high (STR_62+4)
 16165  0076C8  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 16166  0076CA  0E65               	movlw	low (STR_94+23)
 16167  0076CC  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 16168  0076CE  0EFE               	movlw	high (STR_94+23)
 16169  0076D0  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 16170  0076D2  0EA6               	movlw	low _WIND
 16171  0076D4  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 16172  0076D6  0E7B               	movlw	high _WIND
 16173  0076D8  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 16174  0076DA  ECA2  F03D         	call	i1_Aguarda_dado	;wreg free
 16175  0076DE  0012               	return		;funcret
 16176  0076E0                     __end_of_SOCKET_RX:
 16177                           	opt stack 0
 16178                           
 16179 ;; *************** function _WIND *****************
 16180 ;; Defined at:
 16181 ;;		line 257 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 16182 ;; Parameters:    Size  Location     Type
 16183 ;;		None
 16184 ;; Auto vars:     Size  Location     Type
 16185 ;;		None
 16186 ;; Return value:  Size  Location     Type
 16187 ;;                  1    wreg      void 
 16188 ;; Registers used:
 16189 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16190 ;; Tracked objects:
 16191 ;;		On entry : 0/0
 16192 ;;		On exit  : 0/0
 16193 ;;		Unchanged: 0/0
 16194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16199 ;;Total ram usage:        0 bytes
 16200 ;; Hardware stack levels used:    1
 16201 ;; Hardware stack levels required when called:    5
 16202 ;; This function calls:
 16203 ;;		i1_Aguarda_dado
 16204 ;;		i1_Buffer_Escrita_USB_Add_String
 16205 ;; This function is called by:
 16206 ;;		_SOCKET_RX
 16207 ;;		_Envia_Post_Content
 16208 ;;		_AguardaINT
 16209 ;; This function uses a non-reentrant model
 16210 ;;
 16211                           
 16212                           	psect	text49
 16213  007BA6                     __ptext49:
 16214                           	opt stack 0
 16215  007BA6                     _WIND:
 16216                           	opt stack 18
 16217                           
 16218                           ;GERREX.c: 258: if (Aguarda_Resposta[0] == 0x35 && Aguarda_Resposta[1] == 0x35) {
 16219                           
 16220                           ;incstack = 0
 16221  007BA6  0E35               	movlw	53
 16222  007BA8  0103               	movlb	3	; () banked
 16223  007BAA  1900               	xorwf	_Aguarda_Resposta& (0+255),w,b
 16224  007BAC  A4D8               	btfss	16344,2,c
 16225  007BAE  D017               	goto	i1l643
 16226                           
 16227                           ; BSR set to: 3
 16228  007BB0  0E35               	movlw	53
 16229  007BB2  1901               	xorwf	(_Aguarda_Resposta+1)& (0+255),w,b
 16230  007BB4  A4D8               	btfss	16344,2,c
 16231  007BB6  D013               	goto	i1l643
 16232                           
 16233                           ; BSR set to: 3
 16234                           ;GERREX.c: 260: Aguarda_dado(":0:", "\r", "", SOCKET_RX);
 16235  007BB8  0EDF               	movlw	low STR_99
 16236  007BBA  0100               	movlb	0	; () banked
 16237  007BBC  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 16238  007BBE  0EFF               	movlw	high STR_99
 16239  007BC0  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 16240  007BC2  0EAA               	movlw	low (STR_26+29)
 16241  007BC4  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 16242  007BC6  0EFD               	movlw	high (STR_26+29)
 16243  007BC8  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 16244  007BCA  0E65               	movlw	low (STR_94+23)
 16245  007BCC  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 16246  007BCE  0EFE               	movlw	high (STR_94+23)
 16247  007BD0  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 16248  007BD2  0E60               	movlw	low _SOCKET_RX
 16249  007BD4  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 16250  007BD6  0E76               	movlw	high _SOCKET_RX
 16251  007BD8  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 16252  007BDA  ECA2  F03D         	call	i1_Aguarda_dado	;wreg free
 16253  007BDE                     i1l643:
 16254                           
 16255                           ;GERREX.c: 261: }
 16256                           ;GERREX.c: 262: if (Aguarda_Resposta[0] == 0x35 && Aguarda_Resposta[1] == 0x38) {
 16257  007BDE  0E35               	movlw	53
 16258  007BE0  0103               	movlb	3	; () banked
 16259  007BE2  1900               	xorwf	_Aguarda_Resposta& (0+255),w,b
 16260  007BE4  A4D8               	btfss	16344,2,c
 16261  007BE6  0012               	return	
 16262                           
 16263                           ; BSR set to: 3
 16264  007BE8  0E38               	movlw	56
 16265  007BEA  1901               	xorwf	(_Aguarda_Resposta+1)& (0+255),w,b
 16266  007BEC  A4D8               	btfss	16344,2,c
 16267  007BEE  0012               	return	
 16268                           
 16269                           ; BSR set to: 3
 16270                           ;GERREX.c: 263: Buffer_Escrita_USB_Add_String("#", 1);
 16271  007BF0  0EF9               	movlw	low STR_102
 16272  007BF2  6E06               	movwf	i1Buffer_Escrita_USB_Add_String@dado,c
 16273  007BF4  0EFF               	movlw	high STR_102
 16274  007BF6  6E07               	movwf	i1Buffer_Escrita_USB_Add_String@dado+1,c
 16275  007BF8  0E00               	movlw	0
 16276  007BFA  6E09               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,c
 16277  007BFC  0E01               	movlw	1
 16278  007BFE  6E08               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda,c
 16279  007C00  EC0C  F036         	call	i1_Buffer_Escrita_USB_Add_String	;wreg free
 16280  007C04  0012               	return	
 16281  007C06                     __end_of_WIND:
 16282                           	opt stack 0
 16283                           
 16284 ;; *************** function _recebeSIZE *****************
 16285 ;; Defined at:
 16286 ;;		line 182 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 16287 ;; Parameters:    Size  Location     Type
 16288 ;;		None
 16289 ;; Auto vars:     Size  Location     Type
 16290 ;;		None
 16291 ;; Return value:  Size  Location     Type
 16292 ;;                  1    wreg      void 
 16293 ;; Registers used:
 16294 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16295 ;; Tracked objects:
 16296 ;;		On entry : 0/0
 16297 ;;		On exit  : 0/0
 16298 ;;		Unchanged: 0/0
 16299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16303 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16304 ;;Total ram usage:        2 bytes
 16305 ;; Hardware stack levels used:    1
 16306 ;; Hardware stack levels required when called:    5
 16307 ;; This function calls:
 16308 ;;		i1_Aguarda_dado
 16309 ;; This function is called by:
 16310 ;;		_recebeFRAMES
 16311 ;;		_recebeADDRESS
 16312 ;;		_AguardaINT
 16313 ;; This function uses a non-reentrant model
 16314 ;;
 16315                           
 16316                           	psect	text50
 16317  007E7E                     __ptext50:
 16318                           	opt stack 0
 16319  007E7E                     _recebeSIZE:
 16320                           	opt stack 18
 16321                           
 16322                           ;GERREX.c: 183: address[ponteiroFrames] = Aguarda_Resposta[0];
 16323                           
 16324                           ;incstack = 0
 16325  007E7E  0103               	movlb	3	; () banked
 16326  007E80  5100               	movf	_Aguarda_Resposta& (0+255),w,b
 16327  007E82  6E58               	movwf	??_recebeSIZE& (0+255),c
 16328  007E84  6A59               	clrf	(??_recebeSIZE+1)& (0+255),c
 16329  007E86  90D8               	bcf	16344,0,c
 16330  007E88  0100               	movlb	0	; () banked
 16331  007E8A  35E5               	rlcf	_ponteiroFrames& (0+255),w,b
 16332  007E8C  6ED9               	movwf	16345,c
 16333  007E8E  35E6               	rlcf	(_ponteiroFrames+1)& (0+255),w,b
 16334  007E90  6EDA               	movwf	16346,c
 16335  007E92  0EB4               	movlw	low _address
 16336  007E94  26D9               	addwf	16345,f,c
 16337  007E96  0E04               	movlw	high _address
 16338  007E98  22DA               	addwfc	16346,f,c
 16339  007E9A  0060  F163  FFDE   	movff	??_recebeSIZE,16350
 16340  007EA0  0060  F167  FFDD   	movff	??_recebeSIZE+1,16349
 16341                           
 16342                           ; BSR set to: 0
 16343                           ;GERREX.c: 184: Aguarda_dado("\":", ",", "", recebeFRAMEID);
 16344  007EA6  0EC0               	movlw	low (STR_62+3)
 16345  007EA8  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 16346  007EAA  0EFF               	movlw	high (STR_62+3)
 16347  007EAC  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 16348  007EAE  0EEB               	movlw	low (STR_57+1)
 16349  007EB0  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 16350  007EB2  0EFF               	movlw	high (STR_57+1)
 16351  007EB4  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 16352  007EB6  0E65               	movlw	low (STR_94+23)
 16353  007EB8  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 16354  007EBA  0EFE               	movlw	high (STR_94+23)
 16355  007EBC  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 16356  007EBE  0EE0               	movlw	low _recebeFRAMEID
 16357  007EC0  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 16358  007EC2  0E76               	movlw	high _recebeFRAMEID
 16359  007EC4  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 16360  007EC6  ECA2  F03D         	call	i1_Aguarda_dado	;wreg free
 16361                           
 16362                           ;GERREX.c: 185: ponteiroFrames++;
 16363  007ECA  0100               	movlb	0	; () banked
 16364  007ECC  4BE5               	infsnz	_ponteiroFrames& (0+255),f,b
 16365  007ECE  2BE6               	incf	(_ponteiroFrames+1)& (0+255),f,b
 16366                           
 16367                           ; BSR set to: 0
 16368  007ED0  0012               	return		;funcret
 16369  007ED2                     __end_of_recebeSIZE:
 16370                           	opt stack 0
 16371                           
 16372 ;; *************** function _recebeADDRESS *****************
 16373 ;; Defined at:
 16374 ;;		line 177 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 16375 ;; Parameters:    Size  Location     Type
 16376 ;;		None
 16377 ;; Auto vars:     Size  Location     Type
 16378 ;;		None
 16379 ;; Return value:  Size  Location     Type
 16380 ;;                  1    wreg      void 
 16381 ;; Registers used:
 16382 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16383 ;; Tracked objects:
 16384 ;;		On entry : 0/0
 16385 ;;		On exit  : 0/0
 16386 ;;		Unchanged: 0/0
 16387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16390 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16391 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16392 ;;Total ram usage:        2 bytes
 16393 ;; Hardware stack levels used:    1
 16394 ;; Hardware stack levels required when called:    5
 16395 ;; This function calls:
 16396 ;;		i1_Aguarda_dado
 16397 ;; This function is called by:
 16398 ;;		_recebeFRAMES
 16399 ;;		_recebeFUNCTIONCODE
 16400 ;;		_AguardaINT
 16401 ;; This function uses a non-reentrant model
 16402 ;;
 16403                           
 16404                           	psect	text51
 16405  00801A                     __ptext51:
 16406                           	opt stack 0
 16407  00801A                     _recebeADDRESS:
 16408                           	opt stack 17
 16409                           
 16410                           ;GERREX.c: 178: functionCode[ponteiroFrames] = Aguarda_Resposta[0];
 16411                           
 16412                           ; BSR set to: 0
 16413                           ;incstack = 0
 16414  00801A  0103               	movlb	3	; () banked
 16415  00801C  5100               	movf	_Aguarda_Resposta& (0+255),w,b
 16416  00801E  6E58               	movwf	??_recebeADDRESS& (0+255),c
 16417  008020  6A59               	clrf	(??_recebeADDRESS+1)& (0+255),c
 16418  008022  90D8               	bcf	16344,0,c
 16419  008024  0100               	movlb	0	; () banked
 16420  008026  35E5               	rlcf	_ponteiroFrames& (0+255),w,b
 16421  008028  6ED9               	movwf	16345,c
 16422  00802A  35E6               	rlcf	(_ponteiroFrames+1)& (0+255),w,b
 16423  00802C  6EDA               	movwf	16346,c
 16424  00802E  0EA0               	movlw	low _functionCode
 16425  008030  26D9               	addwf	16345,f,c
 16426  008032  0E05               	movlw	high _functionCode
 16427  008034  22DA               	addwfc	16346,f,c
 16428  008036  0060  F163  FFDE   	movff	??_recebeADDRESS,16350
 16429  00803C  0060  F167  FFDD   	movff	??_recebeADDRESS+1,16349
 16430                           
 16431                           ; BSR set to: 0
 16432                           ;GERREX.c: 179: Aguarda_dado("ess\":", "\",", "", recebeSIZE);
 16433  008042  0EC3               	movlw	low STR_68
 16434  008044  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 16435  008046  0EFF               	movlw	high STR_68
 16436  008048  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 16437  00804A  0EEA               	movlw	low STR_57
 16438  00804C  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 16439  00804E  0EFF               	movlw	high STR_57
 16440  008050  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 16441  008052  0E65               	movlw	low (STR_94+23)
 16442  008054  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 16443  008056  0EFE               	movlw	high (STR_94+23)
 16444  008058  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 16445  00805A  0E7E               	movlw	low _recebeSIZE
 16446  00805C  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 16447  00805E  0E7E               	movlw	high _recebeSIZE
 16448  008060  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 16449  008062  ECA2  F03D         	call	i1_Aguarda_dado	;wreg free
 16450  008066  0012               	return		;funcret
 16451  008068                     __end_of_recebeADDRESS:
 16452                           	opt stack 0
 16453                           
 16454 ;; *************** function _recebeFUNCTIONCODE *****************
 16455 ;; Defined at:
 16456 ;;		line 172 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 16457 ;; Parameters:    Size  Location     Type
 16458 ;;		None
 16459 ;; Auto vars:     Size  Location     Type
 16460 ;;		None
 16461 ;; Return value:  Size  Location     Type
 16462 ;;                  1    wreg      void 
 16463 ;; Registers used:
 16464 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16465 ;; Tracked objects:
 16466 ;;		On entry : 0/0
 16467 ;;		On exit  : 0/0
 16468 ;;		Unchanged: 0/0
 16469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16472 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16474 ;;Total ram usage:        2 bytes
 16475 ;; Hardware stack levels used:    1
 16476 ;; Hardware stack levels required when called:    5
 16477 ;; This function calls:
 16478 ;;		i1_Aguarda_dado
 16479 ;; This function is called by:
 16480 ;;		_recebeFRAMES
 16481 ;;		_recebeNODEID
 16482 ;;		_AguardaINT
 16483 ;; This function uses a non-reentrant model
 16484 ;;
 16485                           
 16486                           	psect	text52
 16487  008068                     __ptext52:
 16488                           	opt stack 0
 16489  008068                     _recebeFUNCTIONCODE:
 16490                           	opt stack 18
 16491                           
 16492                           ;GERREX.c: 173: nodeId[ponteiroFrames] = Aguarda_Resposta[0];
 16493                           
 16494                           ;incstack = 0
 16495  008068  0103               	movlb	3	; () banked
 16496  00806A  5100               	movf	_Aguarda_Resposta& (0+255),w,b
 16497  00806C  6E58               	movwf	??_recebeFUNCTIONCODE& (0+255),c
 16498  00806E  6A59               	clrf	(??_recebeFUNCTIONCODE+1)& (0+255),c
 16499  008070  90D8               	bcf	16344,0,c
 16500  008072  0100               	movlb	0	; () banked
 16501  008074  35E5               	rlcf	_ponteiroFrames& (0+255),w,b
 16502  008076  6ED9               	movwf	16345,c
 16503  008078  35E6               	rlcf	(_ponteiroFrames+1)& (0+255),w,b
 16504  00807A  6EDA               	movwf	16346,c
 16505  00807C  0E00               	movlw	low _nodeId
 16506  00807E  26D9               	addwf	16345,f,c
 16507  008080  0E04               	movlw	high _nodeId
 16508  008082  22DA               	addwfc	16346,f,c
 16509  008084  0060  F163  FFDE   	movff	??_recebeFUNCTIONCODE,16350
 16510  00808A  0060  F167  FFDD   	movff	??_recebeFUNCTIONCODE+1,16349
 16511                           
 16512                           ; BSR set to: 0
 16513                           ;GERREX.c: 174: Aguarda_dado("Code\":", ",", "", recebeADDRESS);
 16514  008090  0EA8               	movlw	low STR_65
 16515  008092  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 16516  008094  0EFF               	movlw	high STR_65
 16517  008096  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 16518  008098  0EEB               	movlw	low (STR_57+1)
 16519  00809A  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 16520  00809C  0EFF               	movlw	high (STR_57+1)
 16521  00809E  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 16522  0080A0  0E65               	movlw	low (STR_94+23)
 16523  0080A2  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 16524  0080A4  0EFE               	movlw	high (STR_94+23)
 16525  0080A6  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 16526  0080A8  0E1A               	movlw	low _recebeADDRESS
 16527  0080AA  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 16528  0080AC  0E80               	movlw	high _recebeADDRESS
 16529  0080AE  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 16530  0080B0  ECA2  F03D         	call	i1_Aguarda_dado	;wreg free
 16531  0080B4  0012               	return		;funcret
 16532  0080B6                     __end_of_recebeFUNCTIONCODE:
 16533                           	opt stack 0
 16534                           
 16535 ;; *************** function _recebeNODEID *****************
 16536 ;; Defined at:
 16537 ;;		line 167 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 16538 ;; Parameters:    Size  Location     Type
 16539 ;;		None
 16540 ;; Auto vars:     Size  Location     Type
 16541 ;;		None
 16542 ;; Return value:  Size  Location     Type
 16543 ;;                  1    wreg      void 
 16544 ;; Registers used:
 16545 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16546 ;; Tracked objects:
 16547 ;;		On entry : 0/0
 16548 ;;		On exit  : 0/0
 16549 ;;		Unchanged: 0/0
 16550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16553 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16554 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16555 ;;Total ram usage:        2 bytes
 16556 ;; Hardware stack levels used:    1
 16557 ;; Hardware stack levels required when called:    5
 16558 ;; This function calls:
 16559 ;;		i1_Aguarda_dado
 16560 ;; This function is called by:
 16561 ;;		_recebeFRAMES
 16562 ;;		_recebeNETWORKID
 16563 ;;		_AguardaINT
 16564 ;; This function uses a non-reentrant model
 16565 ;;
 16566                           
 16567                           	psect	text53
 16568  0080B6                     __ptext53:
 16569                           	opt stack 0
 16570  0080B6                     _recebeNODEID:
 16571                           	opt stack 18
 16572                           
 16573                           ;GERREX.c: 168: networkId[ponteiroFrames] = Aguarda_Resposta[0];
 16574                           
 16575                           ;incstack = 0
 16576  0080B6  0103               	movlb	3	; () banked
 16577  0080B8  5100               	movf	_Aguarda_Resposta& (0+255),w,b
 16578  0080BA  6E58               	movwf	??_recebeNODEID& (0+255),c
 16579  0080BC  6A59               	clrf	(??_recebeNODEID+1)& (0+255),c
 16580  0080BE  90D8               	bcf	16344,0,c
 16581  0080C0  0100               	movlb	0	; () banked
 16582  0080C2  35E5               	rlcf	_ponteiroFrames& (0+255),w,b
 16583  0080C4  6ED9               	movwf	16345,c
 16584  0080C6  35E6               	rlcf	(_ponteiroFrames+1)& (0+255),w,b
 16585  0080C8  6EDA               	movwf	16346,c
 16586  0080CA  0E3C               	movlw	low _networkId
 16587  0080CC  26D9               	addwf	16345,f,c
 16588  0080CE  0E04               	movlw	high _networkId
 16589  0080D0  22DA               	addwfc	16346,f,c
 16590  0080D2  0060  F163  FFDE   	movff	??_recebeNODEID,16350
 16591  0080D8  0060  F167  FFDD   	movff	??_recebeNODEID+1,16349
 16592                           
 16593                           ; BSR set to: 0
 16594                           ;GERREX.c: 169: Aguarda_dado("eId\":", ",", "", recebeFUNCTIONCODE);
 16595  0080DE  0EBD               	movlw	low STR_62
 16596  0080E0  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 16597  0080E2  0EFF               	movlw	high STR_62
 16598  0080E4  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 16599  0080E6  0EEB               	movlw	low (STR_57+1)
 16600  0080E8  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 16601  0080EA  0EFF               	movlw	high (STR_57+1)
 16602  0080EC  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 16603  0080EE  0E65               	movlw	low (STR_94+23)
 16604  0080F0  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 16605  0080F2  0EFE               	movlw	high (STR_94+23)
 16606  0080F4  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 16607  0080F6  0E68               	movlw	low _recebeFUNCTIONCODE
 16608  0080F8  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 16609  0080FA  0E80               	movlw	high _recebeFUNCTIONCODE
 16610  0080FC  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 16611  0080FE  ECA2  F03D         	call	i1_Aguarda_dado	;wreg free
 16612  008102  0012               	return		;funcret
 16613  008104                     __end_of_recebeNODEID:
 16614                           	opt stack 0
 16615                           
 16616 ;; *************** function _recebeNETWORKID *****************
 16617 ;; Defined at:
 16618 ;;		line 153 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 16619 ;; Parameters:    Size  Location     Type
 16620 ;;		None
 16621 ;; Auto vars:     Size  Location     Type
 16622 ;;  para            2   94[BANK0 ] int 
 16623 ;;  i               2   96[BANK0 ] int 
 16624 ;; Return value:  Size  Location     Type
 16625 ;;                  1    wreg      void 
 16626 ;; Registers used:
 16627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16628 ;; Tracked objects:
 16629 ;;		On entry : 0/0
 16630 ;;		On exit  : 0/0
 16631 ;;		Unchanged: 0/0
 16632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16634 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16635 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16636 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16637 ;;Total ram usage:        6 bytes
 16638 ;; Hardware stack levels used:    1
 16639 ;; Hardware stack levels required when called:    5
 16640 ;; This function calls:
 16641 ;;		i1_Aguarda_dado
 16642 ;;		i1___wmul
 16643 ;; This function is called by:
 16644 ;;		_recebeFRAMES
 16645 ;;		_recebeFRAMEID
 16646 ;;		_AguardaINT
 16647 ;; This function uses a non-reentrant model
 16648 ;;
 16649                           
 16650                           	psect	text54
 16651  0068B2                     __ptext54:
 16652                           	opt stack 0
 16653  0068B2                     _recebeNETWORKID:
 16654                           	opt stack 18
 16655                           
 16656                           ;GERREX.c: 154: int i = 0;
 16657                           
 16658                           ;incstack = 0
 16659  0068B2  0E00               	movlw	0
 16660  0068B4  0100               	movlb	0	; () banked
 16661  0068B6  6FC1               	movwf	(recebeNETWORKID@i+1)& (0+255),b
 16662  0068B8  0E00               	movlw	0
 16663  0068BA  6FC0               	movwf	recebeNETWORKID@i& (0+255),b
 16664                           
 16665                           ;GERREX.c: 155: while (Aguarda_Resposta[i] != 0x00) {
 16666  0068BC  D035               	goto	i1l603
 16667  0068BE                     
 16668                           ; BSR set to: 0
 16669                           ;GERREX.c: 156: if (ponteiroFrames > 0) {
 16670                           
 16671                           ; BSR set to: 0
 16672  0068BE  BFE6               	btfsc	(_ponteiroFrames+1)& (0+255),7,b
 16673  0068C0  D00D               	goto	i1l605
 16674  0068C2  51E6               	movf	(_ponteiroFrames+1)& (0+255),w,b
 16675  0068C4  E103               	bnz	i1u1617_20
 16676  0068C6  05E5               	decf	_ponteiroFrames& (0+255),w,b
 16677  0068C8  A0D8               	btfss	16344,0,c
 16678  0068CA  D008               	goto	i1l605
 16679  0068CC                     i1u1617_20:
 16680                           
 16681                           ; BSR set to: 0
 16682                           ;GERREX.c: 157: int para = 0;
 16683  0068CC  0E00               	movlw	0
 16684  0068CE  6FBF               	movwf	(recebeNETWORKID@para+1)& (0+255),b
 16685  0068D0  0E00               	movlw	0
 16686  0068D2  6FBE               	movwf	recebeNETWORKID@para& (0+255),b
 16687                           
 16688                           ;GERREX.c: 158: para = 1;
 16689  0068D4  0E00               	movlw	0
 16690  0068D6  6FBF               	movwf	(recebeNETWORKID@para+1)& (0+255),b
 16691  0068D8  0E01               	movlw	1
 16692  0068DA  6FBE               	movwf	recebeNETWORKID@para& (0+255),b
 16693  0068DC                     i1l605:
 16694                           
 16695                           ; BSR set to: 0
 16696                           ;GERREX.c: 159: }
 16697                           ;GERREX.c: 160: frameId[ponteiroFrames][i] = Aguarda_Resposta[i];
 16698                           
 16699                           ; BSR set to: 0
 16700  0068DC  0E00               	movlw	low _Aguarda_Resposta
 16701  0068DE  25C0               	addwf	recebeNETWORKID@i& (0+255),w,b
 16702  0068E0  6ED9               	movwf	16345,c
 16703  0068E2  0E03               	movlw	high _Aguarda_Resposta
 16704  0068E4  21C1               	addwfc	(recebeNETWORKID@i+1)& (0+255),w,b
 16705  0068E6  6EDA               	movwf	16346,c
 16706  0068E8  0060  F394  F012   	movff	_ponteiroFrames,i1___wmul@multiplier
 16707  0068EE  0060  F398  F013   	movff	_ponteiroFrames+1,i1___wmul@multiplier+1
 16708  0068F4  0E00               	movlw	0
 16709  0068F6  6E15               	movwf	i1___wmul@multiplicand+1,c
 16710  0068F8  0E25               	movlw	37
 16711  0068FA  6E14               	movwf	i1___wmul@multiplicand,c
 16712  0068FC  ECC9  F041         	call	i1___wmul	;wreg free
 16713  006900  0E96               	movlw	low _frameId
 16714  006902  6E58               	movwf	??_recebeNETWORKID& (0+255),c
 16715  006904  0E0A               	movlw	high _frameId
 16716  006906  6E59               	movwf	(??_recebeNETWORKID+1)& (0+255),c
 16717  006908  5012               	movf	?i1___wmul,w,c
 16718  00690A  2658               	addwf	??_recebeNETWORKID,f,c
 16719  00690C  5013               	movf	?i1___wmul+1,w,c
 16720  00690E  2259               	addwfc	??_recebeNETWORKID+1,f,c
 16721  006910  0100               	movlb	0	; () banked
 16722  006912  51C0               	movf	recebeNETWORKID@i& (0+255),w,b
 16723  006914  2458               	addwf	??_recebeNETWORKID,w,c
 16724  006916  6EE1               	movwf	16353,c
 16725  006918  51C1               	movf	(recebeNETWORKID@i+1)& (0+255),w,b
 16726  00691A  2059               	addwfc	??_recebeNETWORKID+1,w,c
 16727  00691C  6EE2               	movwf	16354,c
 16728  00691E  006F FF7F FFE7     	movff	16351,16359
 16729                           
 16730                           ; BSR set to: 0
 16731                           ;GERREX.c: 161: i++;
 16732  006924  4BC0               	infsnz	recebeNETWORKID@i& (0+255),f,b
 16733  006926  2BC1               	incf	(recebeNETWORKID@i+1)& (0+255),f,b
 16734  006928                     i1l603:
 16735                           
 16736                           ; BSR set to: 0
 16737                           
 16738                           ; BSR set to: 0
 16739  006928  0E00               	movlw	low _Aguarda_Resposta
 16740  00692A  25C0               	addwf	recebeNETWORKID@i& (0+255),w,b
 16741  00692C  6ED9               	movwf	16345,c
 16742  00692E  0E03               	movlw	high _Aguarda_Resposta
 16743  006930  21C1               	addwfc	(recebeNETWORKID@i+1)& (0+255),w,b
 16744  006932  6EDA               	movwf	16346,c
 16745  006934  50DF               	movf	16351,w,c
 16746  006936  A4D8               	btfss	16344,2,c
 16747  006938  D7C2               	goto	i1l604
 16748                           
 16749                           ; BSR set to: 0
 16750                           ;GERREX.c: 162: }
 16751                           ;GERREX.c: 163: frameId[ponteiroFrames][i] = 0x00;
 16752                           
 16753                           ; BSR set to: 0
 16754  00693A  0060  F394  F012   	movff	_ponteiroFrames,i1___wmul@multiplier
 16755  006940  0060  F398  F013   	movff	_ponteiroFrames+1,i1___wmul@multiplier+1
 16756  006946  0E00               	movlw	0
 16757  006948  6E15               	movwf	i1___wmul@multiplicand+1,c
 16758  00694A  0E25               	movlw	37
 16759  00694C  6E14               	movwf	i1___wmul@multiplicand,c
 16760  00694E  ECC9  F041         	call	i1___wmul	;wreg free
 16761  006952  0E96               	movlw	low _frameId
 16762  006954  6E58               	movwf	??_recebeNETWORKID& (0+255),c
 16763  006956  0E0A               	movlw	high _frameId
 16764  006958  6E59               	movwf	(??_recebeNETWORKID+1)& (0+255),c
 16765  00695A  5012               	movf	?i1___wmul,w,c
 16766  00695C  2658               	addwf	??_recebeNETWORKID,f,c
 16767  00695E  5013               	movf	?i1___wmul+1,w,c
 16768  006960  2259               	addwfc	??_recebeNETWORKID+1,f,c
 16769  006962  0100               	movlb	0	; () banked
 16770  006964  51C0               	movf	recebeNETWORKID@i& (0+255),w,b
 16771  006966  2458               	addwf	??_recebeNETWORKID,w,c
 16772  006968  6ED9               	movwf	16345,c
 16773  00696A  51C1               	movf	(recebeNETWORKID@i+1)& (0+255),w,b
 16774  00696C  2059               	addwfc	??_recebeNETWORKID+1,w,c
 16775  00696E  6EDA               	movwf	16346,c
 16776  006970  0E00               	movlw	0
 16777  006972  6EDF               	movwf	16351,c
 16778                           
 16779                           ; BSR set to: 0
 16780                           ;GERREX.c: 164: Aguarda_dado("rkId\":", ",", "", recebeNODEID);
 16781  006974  0EA1               	movlw	low STR_59
 16782  006976  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 16783  006978  0EFF               	movlw	high STR_59
 16784  00697A  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 16785  00697C  0EEB               	movlw	low (STR_57+1)
 16786  00697E  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 16787  006980  0EFF               	movlw	high (STR_57+1)
 16788  006982  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 16789  006984  0E65               	movlw	low (STR_94+23)
 16790  006986  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 16791  006988  0EFE               	movlw	high (STR_94+23)
 16792  00698A  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 16793  00698C  0EB6               	movlw	low _recebeNODEID
 16794  00698E  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 16795  006990  0E80               	movlw	high _recebeNODEID
 16796  006992  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 16797  006994  ECA2  F03D         	call	i1_Aguarda_dado	;wreg free
 16798  006998  0012               	return		;funcret
 16799  00699A                     __end_of_recebeNETWORKID:
 16800                           	opt stack 0
 16801                           
 16802 ;; *************** function _recebeFRAMEID *****************
 16803 ;; Defined at:
 16804 ;;		line 146 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 16805 ;; Parameters:    Size  Location     Type
 16806 ;;		None
 16807 ;; Auto vars:     Size  Location     Type
 16808 ;;		None
 16809 ;; Return value:  Size  Location     Type
 16810 ;;                  1    wreg      void 
 16811 ;; Registers used:
 16812 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16813 ;; Tracked objects:
 16814 ;;		On entry : 0/0
 16815 ;;		On exit  : 0/0
 16816 ;;		Unchanged: 0/0
 16817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16820 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16821 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16822 ;;Total ram usage:        6 bytes
 16823 ;; Hardware stack levels used:    1
 16824 ;; Hardware stack levels required when called:    5
 16825 ;; This function calls:
 16826 ;;		i1_Aguarda_dado
 16827 ;; This function is called by:
 16828 ;;		_recebeFRAMES
 16829 ;;		_recebeSIZE
 16830 ;;		_AguardaINT
 16831 ;; This function uses a non-reentrant model
 16832 ;;
 16833                           
 16834                           	psect	text55
 16835  0076E0                     __ptext55:
 16836                           	opt stack 0
 16837  0076E0                     _recebeFRAMEID:
 16838                           	opt stack 17
 16839                           
 16840                           ;GERREX.c: 147: if (ponteiroFrames > 0) {
 16841                           
 16842                           ;incstack = 0
 16843  0076E0  0100               	movlb	0	; () banked
 16844  0076E2  BFE6               	btfsc	(_ponteiroFrames+1)& (0+255),7,b
 16845  0076E4  D027               	goto	i1l599
 16846  0076E6  51E6               	movf	(_ponteiroFrames+1)& (0+255),w,b
 16847  0076E8  E103               	bnz	i1u1616_20
 16848  0076EA  05E5               	decf	_ponteiroFrames& (0+255),w,b
 16849  0076EC  A0D8               	btfss	16344,0,c
 16850  0076EE  D022               	goto	i1l599
 16851  0076F0                     i1u1616_20:
 16852                           
 16853                           ; BSR set to: 0
 16854                           ;GERREX.c: 148: size[ponteiroFrames - 1] = Aguarda_Resposta[0];
 16855  0076F0  0103               	movlb	3	; () banked
 16856  0076F2  5100               	movf	_Aguarda_Resposta& (0+255),w,b
 16857  0076F4  0100               	movlb	0	; () banked
 16858  0076F6  6FBE               	movwf	??_recebeFRAMEID& (0+255),b
 16859  0076F8  6BBF               	clrf	(??_recebeFRAMEID+1)& (0+255),b
 16860  0076FA  0EFE               	movlw	254
 16861  0076FC  6FC0               	movwf	(??_recebeFRAMEID+2)& (0+255),b
 16862  0076FE  0EFF               	movlw	255
 16863  007700  6FC1               	movwf	(??_recebeFRAMEID+3)& (0+255),b
 16864  007702  0060  F394  F0C2   	movff	_ponteiroFrames,??_recebeFRAMEID+4
 16865  007708  0060  F398  F0C3   	movff	_ponteiroFrames+1,??_recebeFRAMEID+5
 16866  00770E  90D8               	bcf	16344,0,c
 16867  007710  37C2               	rlcf	(??_recebeFRAMEID+4)& (0+255),f,b
 16868  007712  37C3               	rlcf	(??_recebeFRAMEID+5)& (0+255),f,b
 16869  007714  51C0               	movf	(??_recebeFRAMEID+2)& (0+255),w,b
 16870  007716  27C2               	addwf	(??_recebeFRAMEID+4)& (0+255),f,b
 16871  007718  51C1               	movf	(??_recebeFRAMEID+3)& (0+255),w,b
 16872  00771A  23C3               	addwfc	(??_recebeFRAMEID+5)& (0+255),f,b
 16873  00771C  0E64               	movlw	low _size
 16874  00771E  25C2               	addwf	(??_recebeFRAMEID+4)& (0+255),w,b
 16875  007720  6ED9               	movwf	16345,c
 16876  007722  0E05               	movlw	high _size
 16877  007724  21C3               	addwfc	(??_recebeFRAMEID+5)& (0+255),w,b
 16878  007726  6EDA               	movwf	16346,c
 16879  007728  0060  F2FB  FFDE   	movff	??_recebeFRAMEID,16350
 16880  00772E  0060  F2FF  FFDD   	movff	??_recebeFRAMEID+1,16349
 16881  007734                     i1l599:
 16882                           
 16883                           ; BSR set to: 0
 16884                           ;GERREX.c: 149: }
 16885                           ;GERREX.c: 150: Aguarda_dado("meId\":\"", "\",", "", recebeNETWORKID);
 16886                           
 16887                           ; BSR set to: 0
 16888  007734  0E8B               	movlw	low STR_56
 16889  007736  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 16890  007738  0EFF               	movlw	high STR_56
 16891  00773A  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 16892  00773C  0EEA               	movlw	low STR_57
 16893  00773E  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 16894  007740  0EFF               	movlw	high STR_57
 16895  007742  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 16896  007744  0E65               	movlw	low (STR_94+23)
 16897  007746  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 16898  007748  0EFE               	movlw	high (STR_94+23)
 16899  00774A  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 16900  00774C  0EB2               	movlw	low _recebeNETWORKID
 16901  00774E  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 16902  007750  0E68               	movlw	high _recebeNETWORKID
 16903  007752  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 16904  007754  ECA2  F03D         	call	i1_Aguarda_dado	;wreg free
 16905  007758  0012               	return		;funcret
 16906  00775A                     __end_of_recebeFRAMEID:
 16907                           	opt stack 0
 16908                           
 16909 ;; *************** function _inicia_Post *****************
 16910 ;; Defined at:
 16911 ;;		line 101 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
 16912 ;; Parameters:    Size  Location     Type
 16913 ;;		None
 16914 ;; Auto vars:     Size  Location     Type
 16915 ;;		None
 16916 ;; Return value:  Size  Location     Type
 16917 ;;                  1    wreg      void 
 16918 ;; Registers used:
 16919 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16920 ;; Tracked objects:
 16921 ;;		On entry : 0/0
 16922 ;;		On exit  : 0/0
 16923 ;;		Unchanged: 0/0
 16924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16927 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16928 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16929 ;;Total ram usage:        2 bytes
 16930 ;; Hardware stack levels used:    1
 16931 ;; Hardware stack levels required when called:    6
 16932 ;; This function calls:
 16933 ;;		_Buffer_Escrita_COMM_Add_String
 16934 ;;		_append_Arquivo_Json
 16935 ;;		i1_Aguarda_dado
 16936 ;;		i1_Buffer_Escrita_USB_Add_String
 16937 ;; This function is called by:
 16938 ;;		_recebeFRAMES
 16939 ;;		_SETMACAddr
 16940 ;;		_AguardaINT
 16941 ;; This function uses a non-reentrant model
 16942 ;;
 16943                           
 16944                           	psect	text56
 16945  0078BA                     __ptext56:
 16946                           	opt stack 0
 16947  0078BA                     _inicia_Post:
 16948                           	opt stack 17
 16949                           
 16950                           ;Wifi.c: 102: LATEbits.LATE2 = 1;
 16951                           
 16952                           ;incstack = 0
 16953  0078BA  013F               	movlb	63	; () banked
 16954  0078BC  85BE               	bsf	190,2,b	;volatile
 16955                           
 16956                           ; BSR set to: 63
 16957                           ;Wifi.c: 103: Buffer_Escrita_COMM_Add_String("AT+S.FSD=gerrex.json\r", 1);
 16958  0078BE  0E7E               	movlw	low STR_17
 16959  0078C0  6E06               	movwf	Buffer_Escrita_COMM_Add_String@dado,c
 16960  0078C2  0EFE               	movlw	high STR_17
 16961  0078C4  6E07               	movwf	Buffer_Escrita_COMM_Add_String@dado+1,c
 16962  0078C6  0E00               	movlw	0
 16963  0078C8  6E09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda+1,c
 16964  0078CA  0E01               	movlw	1
 16965  0078CC  6E08               	movwf	Buffer_Escrita_COMM_Add_String@aguarda,c
 16966  0078CE  EC6E  F036         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
 16967                           
 16968                           ;Wifi.c: 104: _delay((unsigned long)((500)*(40000000/4000.0)));
 16969  0078D2  0E1A               	movlw	26
 16970  0078D4  0100               	movlb	0	; () banked
 16971  0078D6  6FD0               	movwf	(??_inicia_Post+1)& (0+255),b
 16972  0078D8  0E5E               	movlw	94
 16973  0078DA  6FCF               	movwf	??_inicia_Post& (0+255),b
 16974  0078DC  0E6E               	movlw	110
 16975  0078DE                     i1u1906_27:
 16976  0078DE  2EE8               	decfsz	16360,f,c
 16977  0078E0  D7FE               	bra	i1u1906_27
 16978  0078E2  2FCF               	decfsz	??_inicia_Post& (0+255),f,b
 16979  0078E4  D7FC               	bra	i1u1906_27
 16980  0078E6  2FD0               	decfsz	(??_inicia_Post+1)& (0+255),f,b
 16981  0078E8  D7FA               	bra	i1u1906_27
 16982  0078EA  F000               	nop	
 16983                           
 16984                           ;Wifi.c: 105: Buffer_Escrita_USB_Add_String("Inicia_Arquivo_Gerrex\r\n", 1);
 16985  0078EC  0E66               	movlw	low STR_18
 16986  0078EE  6E06               	movwf	i1Buffer_Escrita_USB_Add_String@dado,c
 16987  0078F0  0EFE               	movlw	high STR_18
 16988  0078F2  6E07               	movwf	i1Buffer_Escrita_USB_Add_String@dado+1,c
 16989  0078F4  0E00               	movlw	0
 16990  0078F6  6E09               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,c
 16991  0078F8  0E01               	movlw	1
 16992  0078FA  6E08               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda,c
 16993  0078FC  EC0C  F036         	call	i1_Buffer_Escrita_USB_Add_String	;wreg free
 16994                           
 16995                           ;Wifi.c: 106: append_Arquivo_Json();
 16996  007900  EC25  F028         	call	_append_Arquivo_Json	;wreg free
 16997                           
 16998                           ;Wifi.c: 107: Aguarda_dado("-S", "\r", "", Post);
 16999  007904  0EF3               	movlw	low STR_19
 17000  007906  0100               	movlb	0	; () banked
 17001  007908  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 17002  00790A  0EFF               	movlw	high STR_19
 17003  00790C  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 17004  00790E  0EAA               	movlw	low (STR_26+29)
 17005  007910  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 17006  007912  0EFD               	movlw	high (STR_26+29)
 17007  007914  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 17008  007916  0E65               	movlw	low (STR_94+23)
 17009  007918  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 17010  00791A  0EFE               	movlw	high (STR_94+23)
 17011  00791C  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 17012  00791E  0ED0               	movlw	low _Post
 17013  007920  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 17014  007922  0E77               	movlw	high _Post
 17015  007924  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 17016  007926  ECA2  F03D         	call	i1_Aguarda_dado	;wreg free
 17017  00792A  0012               	return		;funcret
 17018  00792C                     __end_of_inicia_Post:
 17019                           	opt stack 0
 17020                           
 17021 ;; *************** function _recebe *****************
 17022 ;; Defined at:
 17023 ;;		line 135 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
 17024 ;; Parameters:    Size  Location     Type
 17025 ;;		None
 17026 ;; Auto vars:     Size  Location     Type
 17027 ;;		None
 17028 ;; Return value:  Size  Location     Type
 17029 ;;                  1    wreg      void 
 17030 ;; Registers used:
 17031 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17032 ;; Tracked objects:
 17033 ;;		On entry : 0/0
 17034 ;;		On exit  : 0/0
 17035 ;;		Unchanged: 0/0
 17036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17041 ;;Total ram usage:        0 bytes
 17042 ;; Hardware stack levels used:    1
 17043 ;; Hardware stack levels required when called:    5
 17044 ;; This function calls:
 17045 ;;		_Buffer_Escrita_COMM_Add_String
 17046 ;;		i1_Aguarda_dado
 17047 ;; This function is called by:
 17048 ;;		_Post2
 17049 ;;		_AguardaINT
 17050 ;; This function uses a non-reentrant model
 17051 ;;
 17052                           
 17053                           	psect	text57
 17054  007FCA                     __ptext57:
 17055                           	opt stack 0
 17056  007FCA                     _recebe:
 17057                           	opt stack 18
 17058                           
 17059                           ;Wifi.c: 136: Buffer_Escrita_COMM_Add_String("AT+S.FSP=retorno.json,0,", 1);
 17060                           
 17061                           ;incstack = 0
 17062  007FCA  0E35               	movlw	low STR_34
 17063  007FCC  6E06               	movwf	Buffer_Escrita_COMM_Add_String@dado,c
 17064  007FCE  0EFE               	movlw	high STR_34
 17065  007FD0  6E07               	movwf	Buffer_Escrita_COMM_Add_String@dado+1,c
 17066  007FD2  0E00               	movlw	0
 17067  007FD4  6E09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda+1,c
 17068  007FD6  0E01               	movlw	1
 17069  007FD8  6E08               	movwf	Buffer_Escrita_COMM_Add_String@aguarda,c
 17070  007FDA  EC6E  F036         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
 17071                           
 17072                           ;Wifi.c: 137: Buffer_Escrita_COMM_Add_String("100000\r", 1);
 17073  007FDE  0EA4               	movlw	low (STR_26+23)
 17074  007FE0  6E06               	movwf	Buffer_Escrita_COMM_Add_String@dado,c
 17075  007FE2  0EFD               	movlw	high (STR_26+23)
 17076  007FE4  6E07               	movwf	Buffer_Escrita_COMM_Add_String@dado+1,c
 17077  007FE6  0E00               	movlw	0
 17078  007FE8  6E09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda+1,c
 17079  007FEA  0E01               	movlw	1
 17080  007FEC  6E08               	movwf	Buffer_Escrita_COMM_Add_String@aguarda,c
 17081  007FEE  EC6E  F036         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
 17082                           
 17083                           ;Wifi.c: 138: Aguarda_dado("Read Cap:", "\r", "", recebeFRAMES);
 17084  007FF2  0E77               	movlw	low STR_36
 17085  007FF4  0100               	movlb	0	; () banked
 17086  007FF6  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 17087  007FF8  0EFF               	movlw	high STR_36
 17088  007FFA  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 17089  007FFC  0EAA               	movlw	low (STR_26+29)
 17090  007FFE  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 17091  008000  0EFD               	movlw	high (STR_26+29)
 17092  008002  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 17093  008004  0E65               	movlw	low (STR_94+23)
 17094  008006  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 17095  008008  0EFE               	movlw	high (STR_94+23)
 17096  00800A  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 17097  00800C  0E16               	movlw	low _recebeFRAMES
 17098  00800E  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 17099  008010  0E56               	movlw	high _recebeFRAMES
 17100  008012  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 17101  008014  ECA2  F03D         	call	i1_Aguarda_dado	;wreg free
 17102  008018  0012               	return		;funcret
 17103  00801A                     __end_of_recebe:
 17104                           	opt stack 0
 17105                           
 17106 ;; *************** function _Post2 *****************
 17107 ;; Defined at:
 17108 ;;		line 121 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
 17109 ;; Parameters:    Size  Location     Type
 17110 ;;		None
 17111 ;; Auto vars:     Size  Location     Type
 17112 ;;		None
 17113 ;; Return value:  Size  Location     Type
 17114 ;;                  1    wreg      void 
 17115 ;; Registers used:
 17116 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17117 ;; Tracked objects:
 17118 ;;		On entry : 0/0
 17119 ;;		On exit  : 0/0
 17120 ;;		Unchanged: 0/0
 17121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17126 ;;Total ram usage:        0 bytes
 17127 ;; Hardware stack levels used:    1
 17128 ;; Hardware stack levels required when called:    5
 17129 ;; This function calls:
 17130 ;;		_Buffer_Escrita_COMM_Add_String
 17131 ;;		i1_Aguarda_dado
 17132 ;; This function is called by:
 17133 ;;		_Post
 17134 ;;		_AguardaINT
 17135 ;; This function uses a non-reentrant model
 17136 ;;
 17137                           
 17138                           	psect	text58
 17139  00825C                     __ptext58:
 17140                           	opt stack 0
 17141  00825C                     _Post2:
 17142                           	opt stack 18
 17143                           
 17144                           ;Wifi.c: 122: Buffer_Escrita_COMM_Add_String("AT+S.HTTPPOST=services.gerrex.com.br,/serv
      +                          ice/task,80,,,,retorno.json,gerrex.json\r\n", 1);
 17145                           
 17146                           ;incstack = 0
 17147  00825C  0E38               	movlw	low STR_30
 17148  00825E  6E06               	movwf	Buffer_Escrita_COMM_Add_String@dado,c
 17149  008260  0EFC               	movlw	high STR_30
 17150  008262  6E07               	movwf	Buffer_Escrita_COMM_Add_String@dado+1,c
 17151  008264  0E00               	movlw	0
 17152  008266  6E09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda+1,c
 17153  008268  0E01               	movlw	1
 17154  00826A  6E08               	movwf	Buffer_Escrita_COMM_Add_String@aguarda,c
 17155  00826C  EC6E  F036         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
 17156                           
 17157                           ;Wifi.c: 123: Aguarda_dado("AT", "OK", "", recebe);
 17158  008270  0EF6               	movlw	low STR_27
 17159  008272  0100               	movlb	0	; () banked
 17160  008274  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 17161  008276  0EFF               	movlw	high STR_27
 17162  008278  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 17163  00827A  0EF0               	movlw	low STR_28
 17164  00827C  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 17165  00827E  0EFF               	movlw	high STR_28
 17166  008280  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 17167  008282  0E65               	movlw	low (STR_94+23)
 17168  008284  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 17169  008286  0EFE               	movlw	high (STR_94+23)
 17170  008288  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 17171  00828A  0ECA               	movlw	low _recebe
 17172  00828C  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 17173  00828E  0E7F               	movlw	high _recebe
 17174  008290  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 17175  008292  ECA2  F03D         	call	i1_Aguarda_dado	;wreg free
 17176  008296  0012               	return		;funcret
 17177  008298                     __end_of_Post2:
 17178                           	opt stack 0
 17179                           
 17180 ;; *************** function _nada *****************
 17181 ;; Defined at:
 17182 ;;		line 225 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 17183 ;; Parameters:    Size  Location     Type
 17184 ;;		None
 17185 ;; Auto vars:     Size  Location     Type
 17186 ;;		None
 17187 ;; Return value:  Size  Location     Type
 17188 ;;                  1    wreg      void 
 17189 ;; Registers used:
 17190 ;;		None
 17191 ;; Tracked objects:
 17192 ;;		On entry : 0/0
 17193 ;;		On exit  : 0/0
 17194 ;;		Unchanged: 0/0
 17195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17200 ;;Total ram usage:        0 bytes
 17201 ;; Hardware stack levels used:    1
 17202 ;; This function calls:
 17203 ;;		Nothing
 17204 ;; This function is called by:
 17205 ;;		_Post
 17206 ;;		_recebeFRAMES
 17207 ;;		_AguardaINT
 17208 ;; This function uses a non-reentrant model
 17209 ;;
 17210                           
 17211                           	psect	text59
 17212  008502                     __ptext59:
 17213                           	opt stack 0
 17214  008502                     _nada:
 17215                           	opt stack 23
 17216                           
 17217                           ;GERREX.c: 226: return;
 17218                           
 17219                           ;incstack = 0
 17220  008502  0012               	return		;funcret
 17221  008504                     __end_of_nada:
 17222                           	opt stack 0
 17223                           
 17224 ;; *************** function _Post *****************
 17225 ;; Defined at:
 17226 ;;		line 110 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
 17227 ;; Parameters:    Size  Location     Type
 17228 ;;		None
 17229 ;; Auto vars:     Size  Location     Type
 17230 ;;		None
 17231 ;; Return value:  Size  Location     Type
 17232 ;;                  1    wreg      void 
 17233 ;; Registers used:
 17234 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17235 ;; Tracked objects:
 17236 ;;		On entry : 0/0
 17237 ;;		On exit  : 0/0
 17238 ;;		Unchanged: 0/0
 17239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17244 ;;Total ram usage:        0 bytes
 17245 ;; Hardware stack levels used:    1
 17246 ;; Hardware stack levels required when called:    5
 17247 ;; This function calls:
 17248 ;;		_Buffer_Escrita_COMM_Add_String
 17249 ;;		i1_Aguarda_dado
 17250 ;;		i1_Buffer_Escrita_USB_Add_String
 17251 ;; This function is called by:
 17252 ;;		_inicia_Post
 17253 ;;		_AguardaINT
 17254 ;; This function uses a non-reentrant model
 17255 ;;
 17256                           
 17257                           	psect	text60
 17258  0077D0                     __ptext60:
 17259                           	opt stack 0
 17260  0077D0                     _Post:
 17261                           	opt stack 18
 17262                           
 17263                           ;Wifi.c: 111: Aguarda_dado("*", "*", "", nada);
 17264                           
 17265                           ;incstack = 0
 17266  0077D0  0EFD               	movlw	low STR_22
 17267  0077D2  0100               	movlb	0	; () banked
 17268  0077D4  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 17269  0077D6  0EFF               	movlw	high STR_22
 17270  0077D8  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 17271  0077DA  0EFD               	movlw	low STR_22
 17272  0077DC  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 17273  0077DE  0EFF               	movlw	high STR_22
 17274  0077E0  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 17275  0077E2  0E65               	movlw	low (STR_94+23)
 17276  0077E4  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 17277  0077E6  0EFE               	movlw	high (STR_94+23)
 17278  0077E8  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 17279  0077EA  0E02               	movlw	low _nada
 17280  0077EC  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 17281  0077EE  0E85               	movlw	high _nada
 17282  0077F0  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 17283  0077F2  ECA2  F03D         	call	i1_Aguarda_dado	;wreg free
 17284                           
 17285                           ;Wifi.c: 113: Buffer_Escrita_USB_Add_String("Post...\r\n", 1);
 17286  0077F6  0E6D               	movlw	low STR_25
 17287  0077F8  6E06               	movwf	i1Buffer_Escrita_USB_Add_String@dado,c
 17288  0077FA  0EFF               	movlw	high STR_25
 17289  0077FC  6E07               	movwf	i1Buffer_Escrita_USB_Add_String@dado+1,c
 17290  0077FE  0E00               	movlw	0
 17291  007800  6E09               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,c
 17292  007802  0E01               	movlw	1
 17293  007804  6E08               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda,c
 17294  007806  EC0C  F036         	call	i1_Buffer_Escrita_USB_Add_String	;wreg free
 17295                           
 17296                           ;Wifi.c: 115: Buffer_Escrita_COMM_Add_String("AT+S.FSP=gerrex.json,0,100000\r", 1);
 17297  00780A  0E8D               	movlw	low STR_26
 17298  00780C  6E06               	movwf	Buffer_Escrita_COMM_Add_String@dado,c
 17299  00780E  0EFD               	movlw	high STR_26
 17300  007810  6E07               	movwf	Buffer_Escrita_COMM_Add_String@dado+1,c
 17301  007812  0E00               	movlw	0
 17302  007814  6E09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda+1,c
 17303  007816  0E01               	movlw	1
 17304  007818  6E08               	movwf	Buffer_Escrita_COMM_Add_String@aguarda,c
 17305  00781A  EC6E  F036         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
 17306                           
 17307                           ;Wifi.c: 118: Aguarda_dado("AT", "OK", "", Post2);
 17308  00781E  0EF6               	movlw	low STR_27
 17309  007820  0100               	movlb	0	; () banked
 17310  007822  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 17311  007824  0EFF               	movlw	high STR_27
 17312  007826  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 17313  007828  0EF0               	movlw	low STR_28
 17314  00782A  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 17315  00782C  0EFF               	movlw	high STR_28
 17316  00782E  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 17317  007830  0E65               	movlw	low (STR_94+23)
 17318  007832  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 17319  007834  0EFE               	movlw	high (STR_94+23)
 17320  007836  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 17321  007838  0E5C               	movlw	low _Post2
 17322  00783A  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 17323  00783C  0E82               	movlw	high _Post2
 17324  00783E  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 17325  007840  ECA2  F03D         	call	i1_Aguarda_dado	;wreg free
 17326  007844  0012               	return		;funcret
 17327  007846                     __end_of_Post:
 17328                           	opt stack 0
 17329                           
 17330 ;; *************** function _GETMACAddr *****************
 17331 ;; Defined at:
 17332 ;;		line 210 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 17333 ;; Parameters:    Size  Location     Type
 17334 ;;		None
 17335 ;; Auto vars:     Size  Location     Type
 17336 ;;		None
 17337 ;; Return value:  Size  Location     Type
 17338 ;;                  1    wreg      void 
 17339 ;; Registers used:
 17340 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17341 ;; Tracked objects:
 17342 ;;		On entry : 0/0
 17343 ;;		On exit  : 0/0
 17344 ;;		Unchanged: 0/0
 17345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17350 ;;Total ram usage:        2 bytes
 17351 ;; Hardware stack levels used:    1
 17352 ;; Hardware stack levels required when called:    5
 17353 ;; This function calls:
 17354 ;;		_Buffer_Escrita_COMM_Add_String
 17355 ;;		i1_Aguarda_dado
 17356 ;; This function is called by:
 17357 ;;		_main
 17358 ;;		_AguardaINT
 17359 ;; This function uses a non-reentrant model
 17360 ;;
 17361                           
 17362                           	psect	text61
 17363  007F26                     __ptext61:
 17364                           	opt stack 0
 17365  007F26                     _GETMACAddr:
 17366                           	opt stack 18
 17367                           
 17368                           ;GERREX.c: 211: _delay((unsigned long)((5000)*(40000000/4000.0)));
 17369                           
 17370                           ;incstack = 0
 17371  007F26  0EFE               	movlw	254
 17372  007F28  6E59               	movwf	(??_GETMACAddr+1)& (0+255),c
 17373  007F2A  0EA7               	movlw	167
 17374  007F2C  6E58               	movwf	??_GETMACAddr& (0+255),c
 17375  007F2E  0E66               	movlw	102
 17376  007F30                     i1u1907_27:
 17377  007F30  2EE8               	decfsz	16360,f,c
 17378  007F32  D7FE               	bra	i1u1907_27
 17379  007F34  2E58               	decfsz	??_GETMACAddr& (0+255),f,c
 17380  007F36  D7FC               	bra	i1u1907_27
 17381  007F38  2E59               	decfsz	(??_GETMACAddr+1)& (0+255),f,c
 17382  007F3A  D7FA               	bra	i1u1907_27
 17383                           
 17384                           ;GERREX.c: 212: Buffer_Escrita_COMM_Add_String("AT+S.GCFG=nv_wifi_macaddr\r\n", 1);
 17385  007F3C  0ECA               	movlw	low STR_76
 17386  007F3E  6E06               	movwf	Buffer_Escrita_COMM_Add_String@dado,c
 17387  007F40  0EFD               	movlw	high STR_76
 17388  007F42  6E07               	movwf	Buffer_Escrita_COMM_Add_String@dado+1,c
 17389  007F44  0E00               	movlw	0
 17390  007F46  6E09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda+1,c
 17391  007F48  0E01               	movlw	1
 17392  007F4A  6E08               	movwf	Buffer_Escrita_COMM_Add_String@aguarda,c
 17393  007F4C  EC6E  F036         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
 17394                           
 17395                           ;GERREX.c: 213: Aguarda_dado("nv_wifi_macaddr=", "\r", "ERROR:", SETMACAddr);
 17396  007F50  0EEE               	movlw	low STR_77
 17397  007F52  0100               	movlb	0	; () banked
 17398  007F54  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 17399  007F56  0EFE               	movlw	high STR_77
 17400  007F58  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 17401  007F5A  0EAA               	movlw	low (STR_26+29)
 17402  007F5C  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 17403  007F5E  0EFD               	movlw	high (STR_26+29)
 17404  007F60  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 17405  007F62  0EB6               	movlw	low STR_79
 17406  007F64  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 17407  007F66  0EFF               	movlw	high STR_79
 17408  007F68  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 17409  007F6A  0ECC               	movlw	low _SETMACAddr
 17410  007F6C  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 17411  007F6E  0E71               	movlw	high _SETMACAddr
 17412  007F70  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 17413  007F72  ECA2  F03D         	call	i1_Aguarda_dado	;wreg free
 17414  007F76  0012               	return		;funcret
 17415  007F78                     __end_of_GETMACAddr:
 17416                           	opt stack 0
 17417                           
 17418 ;; *************** function _recebeFRAMES *****************
 17419 ;; Defined at:
 17420 ;;		line 50 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 17421 ;; Parameters:    Size  Location     Type
 17422 ;;		None
 17423 ;; Auto vars:     Size  Location     Type
 17424 ;;  exit            2   87[COMRAM] int 
 17425 ;; Return value:  Size  Location     Type
 17426 ;;                  1    wreg      void 
 17427 ;; Registers used:
 17428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17429 ;; Tracked objects:
 17430 ;;		On entry : 0/0
 17431 ;;		On exit  : 0/0
 17432 ;;		Unchanged: 0/0
 17433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17435 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17438 ;;Total ram usage:        2 bytes
 17439 ;; Hardware stack levels used:    1
 17440 ;; Hardware stack levels required when called:    6
 17441 ;; This function calls:
 17442 ;;		_Aguarda
 17443 ;;		_Buffer_Escrita_COMM_Add_String
 17444 ;;		_recebeADDRESS
 17445 ;;		_recebeFRAMEID
 17446 ;;		_recebeFUNCTIONCODE
 17447 ;;		_recebeNETWORKID
 17448 ;;		_recebeNODEID
 17449 ;;		_recebeSIZE
 17450 ;;		i1_Aguarda_dado
 17451 ;;		i1_Buffer_Escrita_USB_Add_String
 17452 ;; This function is called by:
 17453 ;;		_recebe
 17454 ;;		_GETTask
 17455 ;;		_AguardaINT
 17456 ;; This function uses a non-reentrant model
 17457 ;;
 17458                           
 17459                           	psect	text62
 17460  005616                     __ptext62:
 17461                           	opt stack 0
 17462  005616                     _recebeFRAMES:
 17463                           	opt stack 17
 17464                           
 17465                           ;GERREX.c: 51: Aguarda_dado("*", "*", "", nada);
 17466                           
 17467                           ;incstack = 0
 17468  005616  0EFD               	movlw	low STR_22
 17469  005618  0100               	movlb	0	; () banked
 17470  00561A  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 17471  00561C  0EFF               	movlw	high STR_22
 17472  00561E  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 17473  005620  0EFD               	movlw	low STR_22
 17474  005622  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 17475  005624  0EFF               	movlw	high STR_22
 17476  005626  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 17477  005628  0E65               	movlw	low (STR_94+23)
 17478  00562A  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 17479  00562C  0EFE               	movlw	high (STR_94+23)
 17480  00562E  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 17481  005630  0E02               	movlw	low _nada
 17482  005632  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 17483  005634  0E85               	movlw	high _nada
 17484  005636  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 17485  005638  ECA2  F03D         	call	i1_Aguarda_dado	;wreg free
 17486                           
 17487                           ;GERREX.c: 53: if (Aguarda_Resposta[0] == 0x32 && Aguarda_Resposta[1] == 0x00 ) {
 17488  00563C  0E32               	movlw	50
 17489  00563E  0103               	movlb	3	; () banked
 17490  005640  1900               	xorwf	_Aguarda_Resposta& (0+255),w,b
 17491  005642  A4D8               	btfss	16344,2,c
 17492  005644  D00E               	goto	i1l547
 17493                           
 17494                           ; BSR set to: 3
 17495  005646  5101               	movf	(_Aguarda_Resposta+1)& (0+255),w,b
 17496  005648  A4D8               	btfss	16344,2,c
 17497  00564A  D00B               	goto	i1l547
 17498                           
 17499                           ; BSR set to: 3
 17500                           ;GERREX.c: 54: Buffer_Escrita_USB_Add_String("\r\n>>>>>> No Instructions\r\n", 1);
 17501  00564C  0EE6               	movlw	low STR_43
 17502  00564E  6E06               	movwf	i1Buffer_Escrita_USB_Add_String@dado,c
 17503  005650  0EFD               	movlw	high STR_43
 17504  005652  6E07               	movwf	i1Buffer_Escrita_USB_Add_String@dado+1,c
 17505  005654  0E00               	movlw	0
 17506  005656  6E09               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,c
 17507  005658  0E01               	movlw	1
 17508  00565A  6E08               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda,c
 17509  00565C  EC0C  F036         	call	i1_Buffer_Escrita_USB_Add_String	;wreg free
 17510                           
 17511                           ;GERREX.c: 55: goto noInstructions;
 17512  005660  D081               	goto	i1l548
 17513  005662                     i1l547:
 17514                           
 17515                           ;GERREX.c: 56: }
 17516                           ;GERREX.c: 57: ponteiroFrames = 0;
 17517  005662  0E00               	movlw	0
 17518  005664  0100               	movlb	0	; () banked
 17519  005666  6FE6               	movwf	(_ponteiroFrames+1)& (0+255),b
 17520  005668  0E00               	movlw	0
 17521  00566A  6FE5               	movwf	_ponteiroFrames& (0+255),b
 17522                           
 17523                           ;GERREX.c: 58: tamFrames=0;
 17524  00566C  0E00               	movlw	0
 17525  00566E  0101               	movlb	1	; () banked
 17526  005670  6FE2               	movwf	(_tamFrames+1)& (0+255),b
 17527  005672  0E00               	movlw	0
 17528  005674  6FE1               	movwf	_tamFrames& (0+255),b
 17529                           
 17530                           ; BSR set to: 1
 17531                           ;GERREX.c: 59: INTCON0bits.GIE = 0;
 17532  005676  013F               	movlb	63	; () banked
 17533  005678  9FD2               	bcf	210,7,b	;volatile
 17534                           
 17535                           ;GERREX.c: 60: int exit = 0;
 17536  00567A  0E00               	movlw	0
 17537  00567C  6E59               	movwf	recebeFRAMES@exit+1,c
 17538  00567E  0E00               	movlw	0
 17539  005680  6E58               	movwf	recebeFRAMES@exit,c
 17540                           
 17541                           ;GERREX.c: 61: AguardaFrames = 0;
 17542  005682  0E00               	movlw	0
 17543  005684  0100               	movlb	0	; () banked
 17544  005686  6FF4               	movwf	(_AguardaFrames+1)& (0+255),b
 17545  005688  0E00               	movlw	0
 17546  00568A  6FF3               	movwf	_AguardaFrames& (0+255),b
 17547  00568C                     
 17548                           ;GERREX.c: 63: PORTBbits.RB2 = 1;
 17549                           
 17550                           ; BSR set to: 0
 17551  00568C  013F               	movlb	63	; () banked
 17552  00568E  85CB               	bsf	203,2,b	;volatile
 17553                           
 17554                           ; BSR set to: 63
 17555                           ;GERREX.c: 64: recebeFRAMEID();
 17556  005690  EC70  F03B         	call	_recebeFRAMEID	;wreg free
 17557                           
 17558                           ;GERREX.c: 65: exit = 0;
 17559  005694  0E00               	movlw	0
 17560  005696  6E59               	movwf	recebeFRAMES@exit+1,c
 17561  005698  0E00               	movlw	0
 17562  00569A  6E58               	movwf	recebeFRAMES@exit,c
 17563                           
 17564                           ;GERREX.c: 66: while (exit == 0) {
 17565  00569C  D013               	goto	i1l552
 17566  00569E                     
 17567                           ;GERREX.c: 67: exit = Aguarda(0x00);
 17568  00569E  0E00               	movlw	0
 17569  0056A0  ECC6  F02F         	call	_Aguarda
 17570  0056A4  0060  F030  F058   	movff	?_Aguarda,recebeFRAMES@exit
 17571  0056AA  0060  F034  F059   	movff	?_Aguarda+1,recebeFRAMES@exit+1
 17572                           
 17573                           ;GERREX.c: 68: if (AguardaFrames == 1) {
 17574  0056B0  0100               	movlb	0	; () banked
 17575  0056B2  05F3               	decf	_AguardaFrames& (0+255),w,b
 17576  0056B4  11F4               	iorwf	(_AguardaFrames+1)& (0+255),w,b
 17577  0056B6  A4D8               	btfss	16344,2,c
 17578  0056B8  D005               	goto	i1l552
 17579                           
 17580                           ; BSR set to: 0
 17581                           ;GERREX.c: 69: AguardaFrames = 0;
 17582  0056BA  0E00               	movlw	0
 17583  0056BC  6FF4               	movwf	(_AguardaFrames+1)& (0+255),b
 17584  0056BE  0E00               	movlw	0
 17585  0056C0  6FF3               	movwf	_AguardaFrames& (0+255),b
 17586                           
 17587                           ;GERREX.c: 70: goto fim;
 17588  0056C2  D03F               	goto	i1l571
 17589  0056C4                     i1l552:
 17590                           
 17591                           ; BSR set to: 0
 17592                           
 17593                           ; BSR set to: 0
 17594  0056C4  5058               	movf	recebeFRAMES@exit,w,c
 17595  0056C6  1059               	iorwf	recebeFRAMES@exit+1,w,c
 17596  0056C8  B4D8               	btfsc	16344,2,c
 17597  0056CA  D7E9               	goto	i1l551
 17598                           
 17599                           ;GERREX.c: 71: }
 17600                           ;GERREX.c: 72: };
 17601                           ;GERREX.c: 73: PORTBbits.RB2 = 1;
 17602  0056CC  013F               	movlb	63	; () banked
 17603  0056CE  85CB               	bsf	203,2,b	;volatile
 17604                           
 17605                           ; BSR set to: 63
 17606                           ;GERREX.c: 74: recebeNETWORKID();
 17607  0056D0  EC59  F034         	call	_recebeNETWORKID	;wreg free
 17608  0056D4  0E00               	movlw	0
 17609  0056D6  ECC6  F02F         	call	_Aguarda
 17610  0056DA  500C               	movf	?_Aguarda,w,c
 17611  0056DC  100D               	iorwf	?_Aguarda+1,w,c
 17612  0056DE  B4D8               	btfsc	16344,2,c
 17613  0056E0  D7F9               	goto	i1l556
 17614                           
 17615                           ;GERREX.c: 76: PORTBbits.RB2 = 1;
 17616  0056E2  013F               	movlb	63	; () banked
 17617  0056E4  85CB               	bsf	203,2,b	;volatile
 17618                           
 17619                           ; BSR set to: 63
 17620                           ;GERREX.c: 77: recebeNODEID();
 17621  0056E6  EC5B  F040         	call	_recebeNODEID	;wreg free
 17622  0056EA  0E00               	movlw	0
 17623  0056EC  ECC6  F02F         	call	_Aguarda
 17624  0056F0  500C               	movf	?_Aguarda,w,c
 17625  0056F2  100D               	iorwf	?_Aguarda+1,w,c
 17626  0056F4  B4D8               	btfsc	16344,2,c
 17627  0056F6  D7F9               	goto	i1l559
 17628                           
 17629                           ;GERREX.c: 79: PORTBbits.RB2 = 1;
 17630  0056F8  013F               	movlb	63	; () banked
 17631  0056FA  85CB               	bsf	203,2,b	;volatile
 17632                           
 17633                           ; BSR set to: 63
 17634                           ;GERREX.c: 80: recebeFUNCTIONCODE();
 17635  0056FC  EC34  F040         	call	_recebeFUNCTIONCODE	;wreg free
 17636  005700  0E00               	movlw	0
 17637  005702  ECC6  F02F         	call	_Aguarda
 17638  005706  500C               	movf	?_Aguarda,w,c
 17639  005708  100D               	iorwf	?_Aguarda+1,w,c
 17640  00570A  B4D8               	btfsc	16344,2,c
 17641  00570C  D7F9               	goto	i1l562
 17642                           
 17643                           ;GERREX.c: 82: PORTBbits.RB2 = 1;
 17644  00570E  013F               	movlb	63	; () banked
 17645  005710  85CB               	bsf	203,2,b	;volatile
 17646                           
 17647                           ; BSR set to: 63
 17648                           ;GERREX.c: 83: recebeADDRESS();
 17649  005712  EC0D  F040         	call	_recebeADDRESS	;wreg free
 17650  005716  0E00               	movlw	0
 17651  005718  ECC6  F02F         	call	_Aguarda
 17652  00571C  500C               	movf	?_Aguarda,w,c
 17653  00571E  100D               	iorwf	?_Aguarda+1,w,c
 17654  005720  B4D8               	btfsc	16344,2,c
 17655  005722  D7F9               	goto	i1l565
 17656                           
 17657                           ;GERREX.c: 85: PORTBbits.RB2 = 1;
 17658  005724  013F               	movlb	63	; () banked
 17659  005726  85CB               	bsf	203,2,b	;volatile
 17660                           
 17661                           ; BSR set to: 63
 17662                           ;GERREX.c: 86: recebeSIZE();
 17663  005728  EC3F  F03F         	call	_recebeSIZE	;wreg free
 17664  00572C  0E00               	movlw	0
 17665  00572E  ECC6  F02F         	call	_Aguarda
 17666  005732  500C               	movf	?_Aguarda,w,c
 17667  005734  100D               	iorwf	?_Aguarda+1,w,c
 17668  005736  B4D8               	btfsc	16344,2,c
 17669  005738  D7F9               	goto	i1l568
 17670                           
 17671                           ;GERREX.c: 88: tamFrames++;
 17672  00573A  0101               	movlb	1	; () banked
 17673  00573C  4BE1               	infsnz	_tamFrames& (0+255),f,b
 17674  00573E  2BE2               	incf	(_tamFrames+1)& (0+255),f,b
 17675                           
 17676                           ; BSR set to: 1
 17677  005740  D7A5               	goto	i1l549
 17678  005742                     i1l571:
 17679                           
 17680                           ;GERREX.c: 91: INTCON0bits.GIE = 1;
 17681                           
 17682                           ; BSR set to: 1
 17683                           ;GERREX.c: 89: }
 17684                           ;GERREX.c: 90: fim:
 17685  005742  013F               	movlb	63	; () banked
 17686  005744  8FD2               	bsf	210,7,b	;volatile
 17687                           
 17688                           ; BSR set to: 63
 17689                           ;GERREX.c: 92: AguardaFrames = 0;
 17690  005746  0E00               	movlw	0
 17691  005748  0100               	movlb	0	; () banked
 17692  00574A  6FF4               	movwf	(_AguardaFrames+1)& (0+255),b
 17693  00574C  0E00               	movlw	0
 17694  00574E  6FF3               	movwf	_AguardaFrames& (0+255),b
 17695                           
 17696                           ; BSR set to: 0
 17697                           ;GERREX.c: 93: Buffer_Escrita_USB_Add_String("\r\n--FRAMES RECEBIDOS--\r\n", 1);
 17698  005750  0E1C               	movlw	low STR_44
 17699  005752  6E06               	movwf	i1Buffer_Escrita_USB_Add_String@dado,c
 17700  005754  0EFE               	movlw	high STR_44
 17701  005756  6E07               	movwf	i1Buffer_Escrita_USB_Add_String@dado+1,c
 17702  005758  0E00               	movlw	0
 17703  00575A  6E09               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,c
 17704  00575C  0E01               	movlw	1
 17705  00575E  6E08               	movwf	i1Buffer_Escrita_USB_Add_String@aguarda,c
 17706  005760  EC0C  F036         	call	i1_Buffer_Escrita_USB_Add_String	;wreg free
 17707  005764                     i1l548:
 17708                           
 17709                           ;GERREX.c: 96: Aguarda_dado("*", "*", "", nada);
 17710  005764  0EFD               	movlw	low STR_22
 17711  005766  0100               	movlb	0	; () banked
 17712  005768  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 17713  00576A  0EFF               	movlw	high STR_22
 17714  00576C  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 17715  00576E  0EFD               	movlw	low STR_22
 17716  005770  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 17717  005772  0EFF               	movlw	high STR_22
 17718  005774  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 17719  005776  0E65               	movlw	low (STR_94+23)
 17720  005778  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 17721  00577A  0EFE               	movlw	high (STR_94+23)
 17722  00577C  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 17723  00577E  0E02               	movlw	low _nada
 17724  005780  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 17725  005782  0E85               	movlw	high _nada
 17726  005784  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 17727  005786  ECA2  F03D         	call	i1_Aguarda_dado	;wreg free
 17728                           
 17729                           ;GERREX.c: 98: Buffer_Escrita_COMM_Add_String("AT+S.SCFG=standby_time,60\r", 1);
 17730  00578A  0E01               	movlw	low STR_48
 17731  00578C  6E06               	movwf	Buffer_Escrita_COMM_Add_String@dado,c
 17732  00578E  0EFE               	movlw	high STR_48
 17733  005790  6E07               	movwf	Buffer_Escrita_COMM_Add_String@dado+1,c
 17734  005792  0E00               	movlw	0
 17735  005794  6E09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda+1,c
 17736  005796  0E01               	movlw	1
 17737  005798  6E08               	movwf	Buffer_Escrita_COMM_Add_String@aguarda,c
 17738  00579A  EC6E  F036         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
 17739                           
 17740                           ;GERREX.c: 100: LATEbits.LATE2 = 0;
 17741  00579E  013F               	movlb	63	; () banked
 17742  0057A0  95BE               	bcf	190,2,b	;volatile
 17743                           
 17744                           ; BSR set to: 63
 17745                           ;GERREX.c: 101: Buffer_Escrita_COMM_Add_String("AT+S.PMS=3\r", 1);
 17746  0057A2  0E36               	movlw	low STR_49
 17747  0057A4  6E06               	movwf	Buffer_Escrita_COMM_Add_String@dado,c
 17748  0057A6  0EFF               	movlw	high STR_49
 17749  0057A8  6E07               	movwf	Buffer_Escrita_COMM_Add_String@dado+1,c
 17750  0057AA  0E00               	movlw	0
 17751  0057AC  6E09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda+1,c
 17752  0057AE  0E01               	movlw	1
 17753  0057B0  6E08               	movwf	Buffer_Escrita_COMM_Add_String@aguarda,c
 17754  0057B2  EC6E  F036         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
 17755                           
 17756                           ;GERREX.c: 102: Aguarda_dado("+WIND:24:WiFi Up:0", "\r", "", inicia_Post);
 17757  0057B6  0EA7               	movlw	low STR_3
 17758  0057B8  0100               	movlb	0	; () banked
 17759  0057BA  6FB6               	movwf	i1Aguarda_dado@inicio& (0+255),b
 17760  0057BC  0EFE               	movlw	high STR_3
 17761  0057BE  6FB7               	movwf	(i1Aguarda_dado@inicio+1)& (0+255),b
 17762  0057C0  0EAA               	movlw	low (STR_26+29)
 17763  0057C2  6FB8               	movwf	i1Aguarda_dado@fim& (0+255),b
 17764  0057C4  0EFD               	movlw	high (STR_26+29)
 17765  0057C6  6FB9               	movwf	(i1Aguarda_dado@fim+1)& (0+255),b
 17766  0057C8  0E65               	movlw	low (STR_94+23)
 17767  0057CA  6FBA               	movwf	i1Aguarda_dado@error& (0+255),b
 17768  0057CC  0EFE               	movlw	high (STR_94+23)
 17769  0057CE  6FBB               	movwf	(i1Aguarda_dado@error+1)& (0+255),b
 17770  0057D0  0EBA               	movlw	low _inicia_Post
 17771  0057D2  6FBC               	movwf	i1Aguarda_dado@ff& (0+255),b
 17772  0057D4  0E78               	movlw	high _inicia_Post
 17773  0057D6  6FBD               	movwf	(i1Aguarda_dado@ff+1)& (0+255),b
 17774  0057D8  ECA2  F03D         	call	i1_Aguarda_dado	;wreg free
 17775  0057DC  0012               	return		;funcret
 17776  0057DE                     __end_of_recebeFRAMES:
 17777                           	opt stack 0
 17778                           
 17779 ;; *************** function _Aguarda *****************
 17780 ;; Defined at:
 17781 ;;		line 275 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 17782 ;; Parameters:    Size  Location     Type
 17783 ;;  dado            1    wreg     unsigned char 
 17784 ;; Auto vars:     Size  Location     Type
 17785 ;;  dado            1   15[COMRAM] unsigned char 
 17786 ;; Return value:  Size  Location     Type
 17787 ;;                  2   11[COMRAM] int 
 17788 ;; Registers used:
 17789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17790 ;; Tracked objects:
 17791 ;;		On entry : 0/0
 17792 ;;		On exit  : 0/0
 17793 ;;		Unchanged: 0/0
 17794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17797 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17798 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17799 ;;Total ram usage:        5 bytes
 17800 ;; Hardware stack levels used:    1
 17801 ;; Hardware stack levels required when called:    1
 17802 ;; This function calls:
 17803 ;;		_verificaERRO
 17804 ;;		_verificaFimFrame
 17805 ;; This function is called by:
 17806 ;;		_recebeFRAMES
 17807 ;;		_GETTask
 17808 ;;		_SOCKET_QUERY
 17809 ;; This function uses a non-reentrant model
 17810 ;;
 17811                           
 17812                           	psect	text63
 17813  005F8C                     __ptext63:
 17814                           	opt stack 0
 17815  005F8C                     _Aguarda:
 17816                           	opt stack 21
 17817                           
 17818                           ;incstack = 0
 17819                           ;Aguarda@dado stored from wreg
 17820  005F8C  6E10               	movwf	Aguarda@dado,c
 17821  005F8E  0004               	clrwdt		;# 
 17822                           
 17823                           ;Serial.c: 277: if (U2RXIF == 1) {
 17824  005F90  0139               	movlb	57	; () banked
 17825  005F92  A5A6               	btfss	166,2,b	;volatile
 17826  005F94  D005               	goto	i1l319
 17827                           
 17828                           ; BSR set to: 57
 17829                           ;Serial.c: 278: dado = U2RXB;
 17830  005F96  006F F740  F010    	movff	15824,Aguarda@dado	;volatile
 17831                           
 17832                           ; BSR set to: 57
 17833                           ;Serial.c: 279: U2RXIF = 0;
 17834  005F9C  95A6               	bcf	166,2,b	;volatile
 17835                           
 17836                           ;Serial.c: 280: } else {
 17837  005F9E  D005               	goto	i1l320
 17838  005FA0                     i1l319:
 17839                           
 17840                           ; BSR set to: 57
 17841                           ;Serial.c: 281: return 0;
 17842                           
 17843                           ; BSR set to: 57
 17844  005FA0  0E00               	movlw	0
 17845  005FA2  6E0D               	movwf	?_Aguarda+1,c
 17846  005FA4  0E00               	movlw	0
 17847  005FA6  6E0C               	movwf	?_Aguarda,c
 17848                           
 17849                           ; BSR set to: 57
 17850  005FA8  0012               	return	
 17851  005FAA                     i1l320:
 17852                           
 17853                           ; BSR set to: 57
 17854                           ;Serial.c: 282: }
 17855                           ;Serial.c: 284: PORTBbits.RB2 = 1;
 17856  005FAA  013F               	movlb	63	; () banked
 17857  005FAC  85CB               	bsf	203,2,b	;volatile
 17858                           
 17859                           ; BSR set to: 63
 17860                           ;Serial.c: 286: verificaERRO(dado);
 17861  005FAE  5010               	movf	Aguarda@dado,w,c
 17862  005FB0  ECBC  F03F         	call	_verificaERRO
 17863                           
 17864                           ;Serial.c: 287: verificaFimFrame(dado);
 17865  005FB4  5010               	movf	Aguarda@dado,w,c
 17866  005FB6  EC82  F040         	call	_verificaFimFrame
 17867                           
 17868                           ;Serial.c: 289: if (Aguarda_str_OK == 0) {
 17869  005FBA  0100               	movlb	0	; () banked
 17870  005FBC  51ED               	movf	_Aguarda_str_OK& (0+255),w,b
 17871  005FBE  11EE               	iorwf	(_Aguarda_str_OK+1)& (0+255),w,b
 17872  005FC0  A4D8               	btfss	16344,2,c
 17873  005FC2  D01E               	goto	i1l322
 17874                           
 17875                           ; BSR set to: 0
 17876                           ;Serial.c: 290: if (dado == Aguarda_str[Aguarda_Ponteiro]) {
 17877  005FC4  0EAA               	movlw	low _Aguarda_str
 17878  005FC6  25F1               	addwf	_Aguarda_Ponteiro& (0+255),w,b
 17879  005FC8  6ED9               	movwf	16345,c
 17880  005FCA  0E03               	movlw	high _Aguarda_str
 17881  005FCC  21F2               	addwfc	(_Aguarda_Ponteiro+1)& (0+255),w,b
 17882  005FCE  6EDA               	movwf	16346,c
 17883  005FD0  5010               	movf	Aguarda@dado,w,c
 17884  005FD2  18DE               	xorwf	16350,w,c
 17885  005FD4  A4D8               	btfss	16344,2,c
 17886  005FD6  D00F               	goto	i1l323
 17887                           
 17888                           ; BSR set to: 0
 17889                           ;Serial.c: 291: Aguarda_Ponteiro++;
 17890  005FD8  4BF1               	infsnz	_Aguarda_Ponteiro& (0+255),f,b
 17891  005FDA  2BF2               	incf	(_Aguarda_Ponteiro+1)& (0+255),f,b
 17892                           
 17893                           ; BSR set to: 0
 17894                           ;Serial.c: 292: if (Aguarda_str[Aguarda_Ponteiro] == 0x00) {
 17895  005FDC  0EAA               	movlw	low _Aguarda_str
 17896  005FDE  25F1               	addwf	_Aguarda_Ponteiro& (0+255),w,b
 17897  005FE0  6ED9               	movwf	16345,c
 17898  005FE2  0E03               	movlw	high _Aguarda_str
 17899  005FE4  21F2               	addwfc	(_Aguarda_Ponteiro+1)& (0+255),w,b
 17900  005FE6  6EDA               	movwf	16346,c
 17901  005FE8  50DF               	movf	16351,w,c
 17902  005FEA  A4D8               	btfss	16344,2,c
 17903  005FEC  D052               	goto	i1l328
 17904                           
 17905                           ; BSR set to: 0
 17906                           ;Serial.c: 293: Aguarda_str_OK = 1;
 17907  005FEE  0E00               	movlw	0
 17908  005FF0  6FEE               	movwf	(_Aguarda_str_OK+1)& (0+255),b
 17909  005FF2  0E01               	movlw	1
 17910  005FF4  6FED               	movwf	_Aguarda_str_OK& (0+255),b
 17911  005FF6                     i1l323:
 17912                           
 17913                           ; BSR set to: 0
 17914                           ;Serial.c: 297: Aguarda_Ponteiro = 0;
 17915                           
 17916                           ; BSR set to: 0
 17917  005FF6  0E00               	movlw	0
 17918  005FF8  6FF2               	movwf	(_Aguarda_Ponteiro+1)& (0+255),b
 17919  005FFA  0E00               	movlw	0
 17920  005FFC  6FF1               	movwf	_Aguarda_Ponteiro& (0+255),b
 17921                           
 17922                           ; BSR set to: 0
 17923                           ;Serial.c: 298: }
 17924                           ;Serial.c: 299: } else {
 17925  005FFE  D049               	goto	i1l328
 17926  006000                     i1l322:
 17927                           
 17928                           ; BSR set to: 0
 17929                           ;Serial.c: 300: Aguarda_Resposta[Aguarda_Ponteiro] = dado;
 17930                           
 17931                           ; BSR set to: 0
 17932  006000  0E00               	movlw	low _Aguarda_Resposta
 17933  006002  25F1               	addwf	_Aguarda_Ponteiro& (0+255),w,b
 17934  006004  6ED9               	movwf	16345,c
 17935  006006  0E03               	movlw	high _Aguarda_Resposta
 17936  006008  21F2               	addwfc	(_Aguarda_Ponteiro+1)& (0+255),w,b
 17937  00600A  6EDA               	movwf	16346,c
 17938  00600C  0060  F043  FFDF   	movff	Aguarda@dado,16351
 17939                           
 17940                           ; BSR set to: 0
 17941                           ;Serial.c: 301: Aguarda_Ponteiro++;
 17942  006012  4BF1               	infsnz	_Aguarda_Ponteiro& (0+255),f,b
 17943  006014  2BF2               	incf	(_Aguarda_Ponteiro+1)& (0+255),f,b
 17944                           
 17945                           ; BSR set to: 0
 17946                           ;Serial.c: 303: if (dado == Aguarda_end[Aguarda_End_Ponteiro]) {
 17947  006016  0ED0               	movlw	low _Aguarda_end
 17948  006018  25EF               	addwf	_Aguarda_End_Ponteiro& (0+255),w,b
 17949  00601A  6ED9               	movwf	16345,c
 17950  00601C  0E03               	movlw	high _Aguarda_end
 17951  00601E  21F0               	addwfc	(_Aguarda_End_Ponteiro+1)& (0+255),w,b
 17952  006020  6EDA               	movwf	16346,c
 17953  006022  5010               	movf	Aguarda@dado,w,c
 17954  006024  18DE               	xorwf	16350,w,c
 17955  006026  A4D8               	btfss	16344,2,c
 17956  006028  D034               	goto	i1l328
 17957                           
 17958                           ; BSR set to: 0
 17959                           ;Serial.c: 304: Aguarda_End_Ponteiro++;
 17960  00602A  4BEF               	infsnz	_Aguarda_End_Ponteiro& (0+255),f,b
 17961  00602C  2BF0               	incf	(_Aguarda_End_Ponteiro+1)& (0+255),f,b
 17962                           
 17963                           ; BSR set to: 0
 17964                           ;Serial.c: 305: if (Aguarda_end[Aguarda_End_Ponteiro] == 0x00) {
 17965  00602E  0ED0               	movlw	low _Aguarda_end
 17966  006030  25EF               	addwf	_Aguarda_End_Ponteiro& (0+255),w,b
 17967  006032  6ED9               	movwf	16345,c
 17968  006034  0E03               	movlw	high _Aguarda_end
 17969  006036  21F0               	addwfc	(_Aguarda_End_Ponteiro+1)& (0+255),w,b
 17970  006038  6EDA               	movwf	16346,c
 17971  00603A  50DF               	movf	16351,w,c
 17972  00603C  A4D8               	btfss	16344,2,c
 17973  00603E  D029               	goto	i1l328
 17974                           
 17975                           ; BSR set to: 0
 17976                           ;Serial.c: 306: Aguarda_Resposta[Aguarda_Ponteiro - Aguarda_End_Ponteiro] = 0x00;
 17977  006040  0060  F3BC  F00E   	movff	_Aguarda_End_Ponteiro,??_Aguarda
 17978  006046  0060  F3C0  F00F   	movff	_Aguarda_End_Ponteiro+1,??_Aguarda+1
 17979  00604C  1E0E               	comf	??_Aguarda,f,c
 17980  00604E  1E0F               	comf	??_Aguarda+1,f,c
 17981  006050  4A0E               	infsnz	??_Aguarda,f,c
 17982  006052  2A0F               	incf	??_Aguarda+1,f,c
 17983  006054  51F1               	movf	_Aguarda_Ponteiro& (0+255),w,b
 17984  006056  260E               	addwf	??_Aguarda,f,c
 17985  006058  51F2               	movf	(_Aguarda_Ponteiro+1)& (0+255),w,b
 17986  00605A  220F               	addwfc	??_Aguarda+1,f,c
 17987  00605C  0E00               	movlw	low _Aguarda_Resposta
 17988  00605E  240E               	addwf	??_Aguarda,w,c
 17989  006060  6ED9               	movwf	16345,c
 17990  006062  0E03               	movlw	high _Aguarda_Resposta
 17991  006064  200F               	addwfc	??_Aguarda+1,w,c
 17992  006066  6EDA               	movwf	16346,c
 17993  006068  0E00               	movlw	0
 17994  00606A  6EDF               	movwf	16351,c
 17995                           
 17996                           ; BSR set to: 0
 17997                           ;Serial.c: 307: Aguarda_End_Ponteiro = 0;
 17998  00606C  0E00               	movlw	0
 17999  00606E  6FF0               	movwf	(_Aguarda_End_Ponteiro+1)& (0+255),b
 18000  006070  0E00               	movlw	0
 18001  006072  6FEF               	movwf	_Aguarda_End_Ponteiro& (0+255),b
 18002                           
 18003                           ; BSR set to: 0
 18004                           ;Serial.c: 308: Aguarda_Ponteiro = 0;
 18005  006074  0E00               	movlw	0
 18006  006076  6FF2               	movwf	(_Aguarda_Ponteiro+1)& (0+255),b
 18007  006078  0E00               	movlw	0
 18008  00607A  6FF1               	movwf	_Aguarda_Ponteiro& (0+255),b
 18009                           
 18010                           ; BSR set to: 0
 18011                           ;Serial.c: 309: Aguarda_str_OK = 0;
 18012  00607C  0E00               	movlw	0
 18013  00607E  6FEE               	movwf	(_Aguarda_str_OK+1)& (0+255),b
 18014  006080  0E00               	movlw	0
 18015  006082  6FED               	movwf	_Aguarda_str_OK& (0+255),b
 18016                           
 18017                           ; BSR set to: 0
 18018                           ;Serial.c: 311: PORTBbits.RB2 = 0;
 18019  006084  013F               	movlb	63	; () banked
 18020  006086  95CB               	bcf	203,2,b	;volatile
 18021                           
 18022                           ; BSR set to: 63
 18023                           ;Serial.c: 312: return 1;
 18024  006088  0E00               	movlw	0
 18025  00608A  6E0D               	movwf	?_Aguarda+1,c
 18026  00608C  0E01               	movlw	1
 18027  00608E  6E0C               	movwf	?_Aguarda,c
 18028                           
 18029                           ; BSR set to: 63
 18030  006090  0012               	return	
 18031  006092                     i1l328:
 18032                           
 18033                           ;Serial.c: 313: }
 18034                           ;Serial.c: 314: }
 18035                           ;Serial.c: 315: }
 18036                           ;Serial.c: 316: PORTBbits.RB2 = 0;
 18037                           
 18038                           ; BSR set to: 63
 18039                           
 18040                           ; BSR set to: 63
 18041  006092  013F               	movlb	63	; () banked
 18042  006094  95CB               	bcf	203,2,b	;volatile
 18043                           
 18044                           ; BSR set to: 63
 18045                           ;Serial.c: 317: return 0;
 18046  006096  0E00               	movlw	0
 18047  006098  6E0D               	movwf	?_Aguarda+1,c
 18048  00609A  0E00               	movlw	0
 18049  00609C  6E0C               	movwf	?_Aguarda,c
 18050  00609E  0012               	return	
 18051  0060A0                     __end_of_Aguarda:
 18052                           	opt stack 0
 18053                           
 18054 ;; *************** function _verificaFimFrame *****************
 18055 ;; Defined at:
 18056 ;;		line 320 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 18057 ;; Parameters:    Size  Location     Type
 18058 ;;  dado            1    wreg     unsigned char 
 18059 ;; Auto vars:     Size  Location     Type
 18060 ;;  dado            1    7[COMRAM] unsigned char 
 18061 ;;  FIM             3    4[COMRAM] unsigned char [3]
 18062 ;; Return value:  Size  Location     Type
 18063 ;;                  2  203[None  ] int 
 18064 ;; Registers used:
 18065 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18066 ;; Tracked objects:
 18067 ;;		On entry : 0/0
 18068 ;;		On exit  : 0/0
 18069 ;;		Unchanged: 0/0
 18070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18072 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18073 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18074 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18075 ;;Total ram usage:        5 bytes
 18076 ;; Hardware stack levels used:    1
 18077 ;; This function calls:
 18078 ;;		Nothing
 18079 ;; This function is called by:
 18080 ;;		_Aguarda
 18081 ;; This function uses a non-reentrant model
 18082 ;;
 18083                           
 18084                           	psect	text64
 18085  008104                     __ptext64:
 18086                           	opt stack 0
 18087  008104                     _verificaFimFrame:
 18088                           	opt stack 21
 18089                           
 18090                           ;incstack = 0
 18091                           ;verificaFimFrame@dado stored from wreg
 18092  008104  6E08               	movwf	verificaFimFrame@dado,c
 18093                           
 18094                           ;Serial.c: 321: char FIM [] = "}]";
 18095  008106  0060  F7EC  F005   	movff	verificaFimFrame@F19988,verificaFimFrame@FIM
 18096  00810C  0060  F7F0  F006   	movff	verificaFimFrame@F19988+1,verificaFimFrame@FIM+1
 18097  008112  0060  F7F4  F007   	movff	verificaFimFrame@F19988+2,verificaFimFrame@FIM+2
 18098                           
 18099                           ;Serial.c: 322: if (dado == FIM[Ponteiro_FIM]) {
 18100  008118  0E05               	movlw	low verificaFimFrame@FIM
 18101  00811A  0100               	movlb	0	; () banked
 18102  00811C  25E7               	addwf	_Ponteiro_FIM& (0+255),w,b
 18103  00811E  6ED9               	movwf	16345,c
 18104  008120  0E00               	movlw	high verificaFimFrame@FIM
 18105  008122  21E8               	addwfc	(_Ponteiro_FIM+1)& (0+255),w,b
 18106  008124  6EDA               	movwf	16346,c
 18107  008126  5008               	movf	verificaFimFrame@dado,w,c
 18108  008128  18DE               	xorwf	16350,w,c
 18109  00812A  A4D8               	btfss	16344,2,c
 18110  00812C  D00D               	goto	i1l333
 18111                           
 18112                           ; BSR set to: 0
 18113                           ;Serial.c: 323: Ponteiro_FIM++;
 18114  00812E  4BE7               	infsnz	_Ponteiro_FIM& (0+255),f,b
 18115  008130  2BE8               	incf	(_Ponteiro_FIM+1)& (0+255),f,b
 18116                           
 18117                           ; BSR set to: 0
 18118                           ;Serial.c: 324: if (Ponteiro_FIM >= 0x02) {
 18119  008132  51E8               	movf	(_Ponteiro_FIM+1)& (0+255),w,b
 18120  008134  E104               	bnz	i1u925_20
 18121  008136  0E02               	movlw	2
 18122  008138  5DE7               	subwf	_Ponteiro_FIM& (0+255),w,b
 18123  00813A  A0D8               	btfss	16344,0,c
 18124  00813C  0012               	return	
 18125  00813E                     i1u925_20:
 18126                           
 18127                           ; BSR set to: 0
 18128                           ;Serial.c: 325: AguardaFrames = 1;
 18129  00813E  0E00               	movlw	0
 18130  008140  6FF4               	movwf	(_AguardaFrames+1)& (0+255),b
 18131  008142  0E01               	movlw	1
 18132  008144  6FF3               	movwf	_AguardaFrames& (0+255),b
 18133                           
 18134                           ; BSR set to: 0
 18135                           ;Serial.c: 326: }
 18136                           ;Serial.c: 327: } else {
 18137  008146  0012               	return	
 18138  008148                     i1l333:
 18139                           
 18140                           ; BSR set to: 0
 18141                           ;Serial.c: 328: Ponteiro_FIM = 0;
 18142                           
 18143                           ; BSR set to: 0
 18144  008148  0E00               	movlw	0
 18145  00814A  6FE8               	movwf	(_Ponteiro_FIM+1)& (0+255),b
 18146  00814C  0E00               	movlw	0
 18147  00814E  6FE7               	movwf	_Ponteiro_FIM& (0+255),b
 18148  008150  0012               	return	
 18149  008152                     __end_of_verificaFimFrame:
 18150                           	opt stack 0
 18151                           
 18152 ;; *************** function _verificaERRO *****************
 18153 ;; Defined at:
 18154 ;;		line 332 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 18155 ;; Parameters:    Size  Location     Type
 18156 ;;  dado            1    wreg     unsigned char 
 18157 ;; Auto vars:     Size  Location     Type
 18158 ;;  dado            1   10[COMRAM] unsigned char 
 18159 ;;  ERRO            6    4[COMRAM] unsigned char [6]
 18160 ;; Return value:  Size  Location     Type
 18161 ;;                  1    wreg      void 
 18162 ;; Registers used:
 18163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18164 ;; Tracked objects:
 18165 ;;		On entry : 0/0
 18166 ;;		On exit  : 0/0
 18167 ;;		Unchanged: 0/0
 18168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18170 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18171 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18172 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18173 ;;Total ram usage:        8 bytes
 18174 ;; Hardware stack levels used:    1
 18175 ;; This function calls:
 18176 ;;		Nothing
 18177 ;; This function is called by:
 18178 ;;		_AguardaINT
 18179 ;;		_Aguarda
 18180 ;; This function uses a non-reentrant model
 18181 ;;
 18182                           
 18183                           	psect	text65
 18184  007F78                     __ptext65:
 18185                           	opt stack 0
 18186  007F78                     _verificaERRO:
 18187                           	opt stack 23
 18188                           
 18189                           ; BSR set to: 0
 18190                           ;incstack = 0
 18191                           ;verificaERRO@dado stored from wreg
 18192  007F78  6E0B               	movwf	verificaERRO@dado,c
 18193                           
 18194                           ;Serial.c: 333: char ERRO [] = "ERRO:";
 18195  007F7A  EE20  F1E9         	lfsr	2,verificaERRO@F19991
 18196  007F7E  EE10  F005         	lfsr	1,verificaERRO@ERRO
 18197  007F82  0E05               	movlw	5
 18198  007F84                     i1u921_21:
 18199  007F84  006F FF6F FFE3     	movff	16347,16355
 18200  007F8A  06E8               	decf	16360,f,c
 18201  007F8C  E2FB               	bc	i1u921_21
 18202                           
 18203                           ;Serial.c: 334: if (dado == ERRO[Ponteiro_ERRO]) {
 18204  007F8E  0E05               	movlw	low verificaERRO@ERRO
 18205  007F90  0100               	movlb	0	; () banked
 18206  007F92  25E9               	addwf	_Ponteiro_ERRO& (0+255),w,b
 18207  007F94  6ED9               	movwf	16345,c
 18208  007F96  0E00               	movlw	high verificaERRO@ERRO
 18209  007F98  21EA               	addwfc	(_Ponteiro_ERRO+1)& (0+255),w,b
 18210  007F9A  6EDA               	movwf	16346,c
 18211  007F9C  500B               	movf	verificaERRO@dado,w,c
 18212  007F9E  18DE               	xorwf	16350,w,c
 18213  007FA0  A4D8               	btfss	16344,2,c
 18214  007FA2  D00D               	goto	i1l341
 18215                           
 18216                           ; BSR set to: 0
 18217                           ;Serial.c: 335: Ponteiro_ERRO++;
 18218  007FA4  4BE9               	infsnz	_Ponteiro_ERRO& (0+255),f,b
 18219  007FA6  2BEA               	incf	(_Ponteiro_ERRO+1)& (0+255),f,b
 18220                           
 18221                           ; BSR set to: 0
 18222                           ;Serial.c: 336: if (ERRO[Ponteiro_ERRO] == 0x00) {
 18223  007FA8  0E05               	movlw	low verificaERRO@ERRO
 18224  007FAA  25E9               	addwf	_Ponteiro_ERRO& (0+255),w,b
 18225  007FAC  6ED9               	movwf	16345,c
 18226  007FAE  0E00               	movlw	high verificaERRO@ERRO
 18227  007FB0  21EA               	addwfc	(_Ponteiro_ERRO+1)& (0+255),w,b
 18228  007FB2  6EDA               	movwf	16346,c
 18229  007FB4  50DF               	movf	16351,w,c
 18230  007FB6  A4D8               	btfss	16344,2,c
 18231  007FB8  0012               	return	
 18232                           
 18233                           ; BSR set to: 0
 18234  007FBA  00FF               	reset		;# 
 18235                           
 18236                           ;Serial.c: 338: }
 18237                           ;Serial.c: 339: } else {
 18238  007FBC  0012               	return	
 18239  007FBE                     i1l341:
 18240                           
 18241                           ;Serial.c: 340: Ponteiro_ERRO = 0;
 18242  007FBE  0E00               	movlw	0
 18243  007FC0  0100               	movlb	0	; () banked
 18244  007FC2  6FEA               	movwf	(_Ponteiro_ERRO+1)& (0+255),b
 18245  007FC4  0E00               	movlw	0
 18246  007FC6  6FE9               	movwf	_Ponteiro_ERRO& (0+255),b
 18247  007FC8  0012               	return	
 18248  007FCA                     __end_of_verificaERRO:
 18249                           	opt stack 0
 18250                           
 18251 ;; *************** function _limpa_Buffer_Escrita_USB *****************
 18252 ;; Defined at:
 18253 ;;		line 348 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 18254 ;; Parameters:    Size  Location     Type
 18255 ;;		None
 18256 ;; Auto vars:     Size  Location     Type
 18257 ;;  i               2    3[COMRAM] int 
 18258 ;; Return value:  Size  Location     Type
 18259 ;;                  1    wreg      void 
 18260 ;; Registers used:
 18261 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18262 ;; Tracked objects:
 18263 ;;		On entry : 0/0
 18264 ;;		On exit  : 0/0
 18265 ;;		Unchanged: 0/0
 18266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18268 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18270 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18271 ;;Total ram usage:        2 bytes
 18272 ;; Hardware stack levels used:    1
 18273 ;; This function calls:
 18274 ;;		Nothing
 18275 ;; This function is called by:
 18276 ;;		_SETMACAddr
 18277 ;; This function uses a non-reentrant model
 18278 ;;
 18279                           
 18280                           	psect	text66
 18281  008198                     __ptext66:
 18282                           	opt stack 0
 18283  008198                     _limpa_Buffer_Escrita_USB:
 18284                           	opt stack 22
 18285                           
 18286                           ;Serial.c: 349: int i = 0;
 18287                           
 18288                           ;incstack = 0
 18289  008198  0E00               	movlw	0
 18290  00819A  6E05               	movwf	limpa_Buffer_Escrita_USB@i+1,c
 18291  00819C  0E00               	movlw	0
 18292  00819E  6E04               	movwf	limpa_Buffer_Escrita_USB@i,c
 18293                           
 18294                           ;Serial.c: 350: ponteiro_USB = 0;
 18295  0081A0  0E00               	movlw	0
 18296  0081A2  0102               	movlb	2	; () banked
 18297  0081A4  6FE2               	movwf	(_ponteiro_USB+1)& (0+255),b
 18298  0081A6  0E00               	movlw	0
 18299  0081A8  6FE1               	movwf	_ponteiro_USB& (0+255),b
 18300                           
 18301                           ;Serial.c: 351: ponteiro_escrita_USB = 0;
 18302  0081AA  0E00               	movlw	0
 18303  0081AC  6FE6               	movwf	(_ponteiro_escrita_USB+1)& (0+255),b
 18304  0081AE  0E00               	movlw	0
 18305  0081B0  6FE5               	movwf	_ponteiro_escrita_USB& (0+255),b
 18306                           
 18307                           ;Serial.c: 352: while (i < 150) {
 18308  0081B2  D00A               	goto	i1l347
 18309  0081B4                     
 18310                           ;Serial.c: 353: buffer_escrita_USB[i] = 0x00;
 18311                           
 18312                           ; BSR set to: 2
 18313  0081B4  0E00               	movlw	low _buffer_escrita_USB
 18314  0081B6  2404               	addwf	limpa_Buffer_Escrita_USB@i,w,c
 18315  0081B8  6ED9               	movwf	16345,c
 18316  0081BA  0E06               	movlw	high _buffer_escrita_USB
 18317  0081BC  2005               	addwfc	limpa_Buffer_Escrita_USB@i+1,w,c
 18318  0081BE  6EDA               	movwf	16346,c
 18319  0081C0  0E00               	movlw	0
 18320  0081C2  6EDF               	movwf	16351,c
 18321                           
 18322                           ;Serial.c: 354: i++;
 18323  0081C4  4A04               	infsnz	limpa_Buffer_Escrita_USB@i,f,c
 18324  0081C6  2A05               	incf	limpa_Buffer_Escrita_USB@i+1,f,c
 18325  0081C8                     i1l347:
 18326  0081C8  BE05               	btfsc	limpa_Buffer_Escrita_USB@i+1,7,c
 18327  0081CA  D7F4               	goto	i1l348
 18328  0081CC  5005               	movf	limpa_Buffer_Escrita_USB@i+1,w,c
 18329  0081CE  E105               	bnz	i1l350
 18330  0081D0  0E96               	movlw	150
 18331  0081D2  5C04               	subwf	limpa_Buffer_Escrita_USB@i,w,c
 18332  0081D4  B0D8               	btfsc	16344,0,c
 18333  0081D6  0012               	return	
 18334  0081D8  D7ED               	goto	i1l348
 18335  0081DA                     i1l350:
 18336  0081DA  0012               	return		;funcret
 18337  0081DC                     __end_of_limpa_Buffer_Escrita_USB:
 18338                           	opt stack 0
 18339                           
 18340 ;; *************** function _limpa_Buffer_Escrita_COMM *****************
 18341 ;; Defined at:
 18342 ;;		line 358 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 18343 ;; Parameters:    Size  Location     Type
 18344 ;;		None
 18345 ;; Auto vars:     Size  Location     Type
 18346 ;;  i               2    3[COMRAM] int 
 18347 ;; Return value:  Size  Location     Type
 18348 ;;                  1    wreg      void 
 18349 ;; Registers used:
 18350 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18351 ;; Tracked objects:
 18352 ;;		On entry : 0/0
 18353 ;;		On exit  : 0/0
 18354 ;;		Unchanged: 0/0
 18355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18357 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18359 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18360 ;;Total ram usage:        2 bytes
 18361 ;; Hardware stack levels used:    1
 18362 ;; This function calls:
 18363 ;;		Nothing
 18364 ;; This function is called by:
 18365 ;;		_SETMACAddr
 18366 ;; This function uses a non-reentrant model
 18367 ;;
 18368                           
 18369                           	psect	text67
 18370  0081DC                     __ptext67:
 18371                           	opt stack 0
 18372  0081DC                     _limpa_Buffer_Escrita_COMM:
 18373                           	opt stack 22
 18374                           
 18375                           ;Serial.c: 359: int i = 0;
 18376                           
 18377                           ;incstack = 0
 18378  0081DC  0E00               	movlw	0
 18379  0081DE  6E05               	movwf	limpa_Buffer_Escrita_COMM@i+1,c
 18380  0081E0  0E00               	movlw	0
 18381  0081E2  6E04               	movwf	limpa_Buffer_Escrita_COMM@i,c
 18382                           
 18383                           ;Serial.c: 360: ponteiro_COMM = 0;
 18384  0081E4  0E00               	movlw	0
 18385  0081E6  0102               	movlb	2	; () banked
 18386  0081E8  6FE4               	movwf	(_ponteiro_COMM+1)& (0+255),b
 18387  0081EA  0E00               	movlw	0
 18388  0081EC  6FE3               	movwf	_ponteiro_COMM& (0+255),b
 18389                           
 18390                           ;Serial.c: 361: ponteiro_escrita_COMM = 0;
 18391  0081EE  0E00               	movlw	0
 18392  0081F0  6FE8               	movwf	(_ponteiro_escrita_COMM+1)& (0+255),b
 18393  0081F2  0E00               	movlw	0
 18394  0081F4  6FE7               	movwf	_ponteiro_escrita_COMM& (0+255),b
 18395                           
 18396                           ;Serial.c: 362: while (i < 150) {
 18397  0081F6  D00A               	goto	i1l353
 18398  0081F8                     
 18399                           ;Serial.c: 363: buffer_escrita_comm[i] = 0x00;
 18400                           
 18401                           ; BSR set to: 2
 18402  0081F8  0E00               	movlw	low _buffer_escrita_comm
 18403  0081FA  2404               	addwf	limpa_Buffer_Escrita_COMM@i,w,c
 18404  0081FC  6ED9               	movwf	16345,c
 18405  0081FE  0E07               	movlw	high _buffer_escrita_comm
 18406  008200  2005               	addwfc	limpa_Buffer_Escrita_COMM@i+1,w,c
 18407  008202  6EDA               	movwf	16346,c
 18408  008204  0E00               	movlw	0
 18409  008206  6EDF               	movwf	16351,c
 18410                           
 18411                           ;Serial.c: 364: i++;
 18412  008208  4A04               	infsnz	limpa_Buffer_Escrita_COMM@i,f,c
 18413  00820A  2A05               	incf	limpa_Buffer_Escrita_COMM@i+1,f,c
 18414  00820C                     i1l353:
 18415  00820C  BE05               	btfsc	limpa_Buffer_Escrita_COMM@i+1,7,c
 18416  00820E  D7F4               	goto	i1l354
 18417  008210  5005               	movf	limpa_Buffer_Escrita_COMM@i+1,w,c
 18418  008212  E105               	bnz	i1l356
 18419  008214  0E96               	movlw	150
 18420  008216  5C04               	subwf	limpa_Buffer_Escrita_COMM@i,w,c
 18421  008218  B0D8               	btfsc	16344,0,c
 18422  00821A  0012               	return	
 18423  00821C  D7ED               	goto	i1l354
 18424  00821E                     i1l356:
 18425  00821E  0012               	return		;funcret
 18426  008220                     __end_of_limpa_Buffer_Escrita_COMM:
 18427                           	opt stack 0
 18428                           
 18429 ;; *************** function _append_Arquivo_Json *****************
 18430 ;; Defined at:
 18431 ;;		line 48 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
 18432 ;; Parameters:    Size  Location     Type
 18433 ;;		None
 18434 ;; Auto vars:     Size  Location     Type
 18435 ;;  valorMem_Cha   10  132[BANK1 ] unsigned char [10]
 18436 ;;  resultado       6  142[BANK1 ] unsigned char [6]
 18437 ;;  valorMem        4  120[BANK1 ] long 
 18438 ;;  linhaArquivo  120    0[BANK1 ] unsigned char [120]
 18439 ;;  i               2  130[BANK1 ] int 
 18440 ;;  virgula         2  128[BANK1 ] unsigned char [2]
 18441 ;;  primeiro        2  126[BANK1 ] int 
 18442 ;; Return value:  Size  Location     Type
 18443 ;;                  1    wreg      void 
 18444 ;; Registers used:
 18445 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18446 ;; Tracked objects:
 18447 ;;		On entry : 0/0
 18448 ;;		On exit  : 0/0
 18449 ;;		Unchanged: 0/0
 18450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18452 ;;      Locals:         0       0     148       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18453 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18454 ;;      Totals:         0       4     148       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18455 ;;Total ram usage:      152 bytes
 18456 ;; Hardware stack levels used:    1
 18457 ;; Hardware stack levels required when called:    5
 18458 ;; This function calls:
 18459 ;;		_cria_Arquivo
 18460 ;;		i1___wmul
 18461 ;;		i1_sprintf
 18462 ;; This function is called by:
 18463 ;;		_inicia_Post
 18464 ;; This function uses a non-reentrant model
 18465 ;;
 18466                           
 18467                           	psect	text68
 18468  00504A                     __ptext68:
 18469                           	opt stack 0
 18470  00504A                     _append_Arquivo_Json:
 18471                           	opt stack 17
 18472                           
 18473                           ;Wifi.c: 49: int i = 0;
 18474                           
 18475                           ;incstack = 0
 18476  00504A  0E00               	movlw	0
 18477  00504C  0101               	movlb	1	; () banked
 18478  00504E  6F83               	movwf	(append_Arquivo_Json@i+1)& (0+255),b
 18479  005050  0E00               	movlw	0
 18480  005052  6F82               	movwf	append_Arquivo_Json@i& (0+255),b
 18481                           
 18482                           ;Wifi.c: 50: int primeiro = 0;
 18483  005054  0E00               	movlw	0
 18484  005056  6F7F               	movwf	(append_Arquivo_Json@primeiro+1)& (0+255),b
 18485  005058  0E00               	movlw	0
 18486  00505A  6F7E               	movwf	append_Arquivo_Json@primeiro& (0+255),b
 18487                           
 18488                           ; BSR set to: 1
 18489                           ;Wifi.c: 51: char virgula[2];
 18490                           ;Wifi.c: 52: char linhaArquivo [120];
 18491                           ;Wifi.c: 54: cria_Arquivo("gerrex.json", "{\"code\":\"00:80:E1:BF:E3:C8\",\"taskResponse
      +                          Frames\":[");
 18492  00505C  0E42               	movlw	low STR_8
 18493  00505E  0100               	movlb	0	; () banked
 18494  005060  6FB6               	movwf	cria_Arquivo@nome& (0+255),b
 18495  005062  0EFF               	movlw	high STR_8
 18496  005064  6FB7               	movwf	(cria_Arquivo@nome+1)& (0+255),b
 18497  005066  0E0F               	movlw	low STR_9
 18498  005068  6FB8               	movwf	cria_Arquivo@dado& (0+255),b
 18499  00506A  0EFD               	movlw	high STR_9
 18500  00506C  6FB9               	movwf	(cria_Arquivo@dado+1)& (0+255),b
 18501  00506E  ECE1  F037         	call	_cria_Arquivo	;wreg free
 18502                           
 18503                           ;Wifi.c: 66: for (i = 0; i < tamFrames; i++) {
 18504  005072  0E00               	movlw	0
 18505  005074  0101               	movlb	1	; () banked
 18506  005076  6F83               	movwf	(append_Arquivo_Json@i+1)& (0+255),b
 18507  005078  0E00               	movlw	0
 18508  00507A  6F82               	movwf	append_Arquivo_Json@i& (0+255),b
 18509  00507C  D0E3               	goto	i1l421
 18510  00507E                     
 18511                           ;Wifi.c: 67: char resultado [6];
 18512                           ;Wifi.c: 69: long valorMem = MEMORIA[address[i] - 0x30];
 18513                           
 18514                           ; BSR set to: 1
 18515  00507E  0E40               	movlw	64
 18516  005080  0100               	movlb	0	; () banked
 18517  005082  6FCB               	movwf	??_append_Arquivo_Json& (0+255),b
 18518  005084  0EFF               	movlw	255
 18519  005086  6FCC               	movwf	(??_append_Arquivo_Json+1)& (0+255),b
 18520  005088  90D8               	bcf	16344,0,c
 18521  00508A  0101               	movlb	1	; () banked
 18522  00508C  3582               	rlcf	append_Arquivo_Json@i& (0+255),w,b
 18523  00508E  6ED9               	movwf	16345,c
 18524  005090  3583               	rlcf	(append_Arquivo_Json@i+1)& (0+255),w,b
 18525  005092  6EDA               	movwf	16346,c
 18526  005094  0EB4               	movlw	low _address
 18527  005096  26D9               	addwf	16345,f,c
 18528  005098  0E04               	movlw	high _address
 18529  00509A  22DA               	addwfc	16346,f,c
 18530  00509C  006F FF78  F0CD    	movff	16350,??_append_Arquivo_Json+2
 18531  0050A2  006F FF74  F0CE    	movff	16349,??_append_Arquivo_Json+3
 18532  0050A8  0100               	movlb	0	; () banked
 18533  0050AA  90D8               	bcf	16344,0,c
 18534  0050AC  37CD               	rlcf	(??_append_Arquivo_Json+2)& (0+255),f,b
 18535  0050AE  37CE               	rlcf	(??_append_Arquivo_Json+3)& (0+255),f,b
 18536  0050B0  90D8               	bcf	16344,0,c
 18537  0050B2  37CD               	rlcf	(??_append_Arquivo_Json+2)& (0+255),f,b
 18538  0050B4  37CE               	rlcf	(??_append_Arquivo_Json+3)& (0+255),f,b
 18539  0050B6  51CB               	movf	??_append_Arquivo_Json& (0+255),w,b
 18540  0050B8  27CD               	addwf	(??_append_Arquivo_Json+2)& (0+255),f,b
 18541  0050BA  51CC               	movf	(??_append_Arquivo_Json+1)& (0+255),w,b
 18542  0050BC  23CE               	addwfc	(??_append_Arquivo_Json+3)& (0+255),f,b
 18543  0050BE  0E94               	movlw	low _MEMORIA
 18544  0050C0  25CD               	addwf	(??_append_Arquivo_Json+2)& (0+255),w,b
 18545  0050C2  6ED9               	movwf	16345,c
 18546  0050C4  0E01               	movlw	high _MEMORIA
 18547  0050C6  21CE               	addwfc	(??_append_Arquivo_Json+3)& (0+255),w,b
 18548  0050C8  6EDA               	movwf	16346,c
 18549  0050CA  006F FF78  F178    	movff	16350,append_Arquivo_Json@valorMem
 18550  0050D0  006F FF78  F179    	movff	16350,append_Arquivo_Json@valorMem+1
 18551  0050D6  006F FF78  F17A    	movff	16350,append_Arquivo_Json@valorMem+2
 18552  0050DC  006F FF78  F17B    	movff	16350,append_Arquivo_Json@valorMem+3
 18553                           
 18554                           ; BSR set to: 0
 18555                           ;Wifi.c: 70: char valorMem_Char[10];
 18556                           ;Wifi.c: 72: sprintf(valorMem_Char,"%08lx",valorMem);
 18557  0050E2  0E84               	movlw	low append_Arquivo_Json@valorMem_Char
 18558  0050E4  6F69               	movwf	i1sprintf@sp& (0+255),b
 18559  0050E6  0E01               	movlw	high append_Arquivo_Json@valorMem_Char
 18560  0050E8  6F6A               	movwf	(i1sprintf@sp+1)& (0+255),b
 18561  0050EA  0ECF               	movlw	low STR_10
 18562  0050EC  6F6B               	movwf	i1sprintf@f& (0+255),b
 18563  0050EE  0EFF               	movlw	high STR_10
 18564  0050F0  6F6C               	movwf	(i1sprintf@f+1)& (0+255),b
 18565  0050F2  0060  F5E0  F06D   	movff	append_Arquivo_Json@valorMem,?i1_sprintf+4
 18566  0050F8  0060  F5E4  F06E   	movff	append_Arquivo_Json@valorMem+1,?i1_sprintf+5
 18567  0050FE  0060  F5E8  F06F   	movff	append_Arquivo_Json@valorMem+2,?i1_sprintf+6
 18568  005104  0060  F5EC  F070   	movff	append_Arquivo_Json@valorMem+3,?i1_sprintf+7
 18569  00510A  ECB5  F00E         	call	i1_sprintf	;wreg free
 18570                           
 18571                           ;Wifi.c: 73: result[i] = 1;
 18572  00510E  90D8               	bcf	16344,0,c
 18573  005110  0101               	movlb	1	; () banked
 18574  005112  3582               	rlcf	append_Arquivo_Json@i& (0+255),w,b
 18575  005114  6ED9               	movwf	16345,c
 18576  005116  3583               	rlcf	(append_Arquivo_Json@i+1)& (0+255),w,b
 18577  005118  6EDA               	movwf	16346,c
 18578  00511A  0E78               	movlw	low _result
 18579  00511C  26D9               	addwf	16345,f,c
 18580  00511E  0E04               	movlw	high _result
 18581  005120  22DA               	addwfc	16346,f,c
 18582  005122  0E01               	movlw	1
 18583  005124  6EDE               	movwf	16350,c
 18584  005126  0E00               	movlw	0
 18585  005128  6EDD               	movwf	16349,c
 18586                           
 18587                           ; BSR set to: 1
 18588                           ;Wifi.c: 75: if (primeiro == 0) {
 18589  00512A  517E               	movf	append_Arquivo_Json@primeiro& (0+255),w,b
 18590  00512C  117F               	iorwf	(append_Arquivo_Json@primeiro+1)& (0+255),w,b
 18591  00512E  A4D8               	btfss	16344,2,c
 18592  005130  D007               	goto	i1l423
 18593                           
 18594                           ; BSR set to: 1
 18595                           ;Wifi.c: 76: virgula[0] = 0x00;
 18596  005132  0E00               	movlw	0
 18597  005134  6F80               	movwf	append_Arquivo_Json@virgula& (0+255),b
 18598                           
 18599                           ;Wifi.c: 77: primeiro = 1;
 18600  005136  0E00               	movlw	0
 18601  005138  6F7F               	movwf	(append_Arquivo_Json@primeiro+1)& (0+255),b
 18602  00513A  0E01               	movlw	1
 18603  00513C  6F7E               	movwf	append_Arquivo_Json@primeiro& (0+255),b
 18604                           
 18605                           ;Wifi.c: 78: }
 18606  00513E  D004               	goto	i1l424
 18607  005140                     i1l423:
 18608                           
 18609                           ; BSR set to: 1
 18610                           ;Wifi.c: 79: else {
 18611                           ;Wifi.c: 80: virgula[0] = ',';
 18612                           
 18613                           ; BSR set to: 1
 18614  005140  0E2C               	movlw	44
 18615  005142  6F80               	movwf	append_Arquivo_Json@virgula& (0+255),b
 18616                           
 18617                           ;Wifi.c: 81: virgula[1] = 0x00;
 18618  005144  0E00               	movlw	0
 18619  005146  6F81               	movwf	(append_Arquivo_Json@virgula+1)& (0+255),b
 18620  005148                     i1l424:
 18621                           
 18622                           ; BSR set to: 1
 18623                           ;Wifi.c: 82: }
 18624                           ;Wifi.c: 83: if (result[i] == 1) sprintf(resultado, "true");
 18625                           
 18626                           ; BSR set to: 1
 18627  005148  90D8               	bcf	16344,0,c
 18628  00514A  3582               	rlcf	append_Arquivo_Json@i& (0+255),w,b
 18629  00514C  6ED9               	movwf	16345,c
 18630  00514E  3583               	rlcf	(append_Arquivo_Json@i+1)& (0+255),w,b
 18631  005150  6EDA               	movwf	16346,c
 18632  005152  0E78               	movlw	low _result
 18633  005154  26D9               	addwf	16345,f,c
 18634  005156  0E04               	movlw	high _result
 18635  005158  22DA               	addwfc	16346,f,c
 18636  00515A  04DE               	decf	16350,w,c
 18637  00515C  10DE               	iorwf	16350,w,c
 18638  00515E  A4D8               	btfss	16344,2,c
 18639  005160  D00C               	goto	i1l425
 18640                           
 18641                           ; BSR set to: 1
 18642  005162  0E8E               	movlw	low append_Arquivo_Json@resultado
 18643  005164  0100               	movlb	0	; () banked
 18644  005166  6F69               	movwf	i1sprintf@sp& (0+255),b
 18645  005168  0E01               	movlw	high append_Arquivo_Json@resultado
 18646  00516A  6F6A               	movwf	(i1sprintf@sp+1)& (0+255),b
 18647  00516C  0EDA               	movlw	low STR_11
 18648  00516E  6F6B               	movwf	i1sprintf@f& (0+255),b
 18649  005170  0EFF               	movlw	high STR_11
 18650  005172  6F6C               	movwf	(i1sprintf@f+1)& (0+255),b
 18651  005174  ECB5  F00E         	call	i1_sprintf	;wreg free
 18652  005178  D00B               	goto	i1l426
 18653  00517A                     i1l425:
 18654                           
 18655                           ;Wifi.c: 84: else sprintf(resultado, "false");
 18656  00517A  0E8E               	movlw	low append_Arquivo_Json@resultado
 18657  00517C  0100               	movlb	0	; () banked
 18658  00517E  6F69               	movwf	i1sprintf@sp& (0+255),b
 18659  005180  0E01               	movlw	high append_Arquivo_Json@resultado
 18660  005182  6F6A               	movwf	(i1sprintf@sp+1)& (0+255),b
 18661  005184  0EC9               	movlw	low STR_12
 18662  005186  6F6B               	movwf	i1sprintf@f& (0+255),b
 18663  005188  0EFF               	movlw	high STR_12
 18664  00518A  6F6C               	movwf	(i1sprintf@f+1)& (0+255),b
 18665  00518C  ECB5  F00E         	call	i1_sprintf	;wreg free
 18666  005190                     i1l426:
 18667                           
 18668                           ;Wifi.c: 85: sprintf(linhaArquivo, "%s{\"frameId\":\"%s\",\"value\":\"%c%c,%c%c,%c%c,%c%
      +                          c\",\"result\":%s}", virgula, frameId[i], valorMem_Char[0], valorMem_Char[1], valorMem_C
      +                          har[2],valorMem_Char[3], valorMem_Char[4],valorMem_Char[5],valorMem_Char[6],valorMem_Ch
 18669  005190  0060  F608  F012   	movff	append_Arquivo_Json@i,i1___wmul@multiplier
 18670  005196  0060  F60C  F013   	movff	append_Arquivo_Json@i+1,i1___wmul@multiplier+1
 18671  00519C  0E00               	movlw	0
 18672  00519E  6E15               	movwf	i1___wmul@multiplicand+1,c
 18673  0051A0  0E25               	movlw	37
 18674  0051A2  6E14               	movwf	i1___wmul@multiplicand,c
 18675  0051A4  ECC9  F041         	call	i1___wmul	;wreg free
 18676  0051A8  0E96               	movlw	low _frameId
 18677  0051AA  2412               	addwf	?i1___wmul,w,c
 18678  0051AC  0101               	movlb	1	; () banked
 18679  0051AE  6F7C               	movwf	_append_Arquivo_Json$3004& (0+255),b
 18680  0051B0  0E0A               	movlw	high _frameId
 18681  0051B2  2013               	addwfc	?i1___wmul+1,w,c
 18682  0051B4  6F7D               	movwf	(_append_Arquivo_Json$3004+1)& (0+255),b
 18683                           
 18684                           ; BSR set to: 1
 18685                           ;Wifi.c: 85: sprintf(linhaArquivo, "%s{\"frameId\":\"%s\",\"value\":\"%c%c,%c%c,%c%c,%c%
      +                          c\",\"result\":%s}", virgula, frameId[i], valorMem_Char[0], valorMem_Char[1], valorMem_C
      +                          har[2],valorMem_Char[3], valorMem_Char[4],valorMem_Char[5],valorMem_Char[6],valorMem_Ch
 18686  0051B6  0E00               	movlw	low append_Arquivo_Json@linhaArquivo
 18687  0051B8  0100               	movlb	0	; () banked
 18688  0051BA  6F69               	movwf	i1sprintf@sp& (0+255),b
 18689  0051BC  0E01               	movlw	high append_Arquivo_Json@linhaArquivo
 18690  0051BE  6F6A               	movwf	(i1sprintf@sp+1)& (0+255),b
 18691  0051C0  0ED2               	movlw	low STR_13
 18692  0051C2  6F6B               	movwf	i1sprintf@f& (0+255),b
 18693  0051C4  0EFC               	movlw	high STR_13
 18694  0051C6  6F6C               	movwf	(i1sprintf@f+1)& (0+255),b
 18695  0051C8  0E80               	movlw	low append_Arquivo_Json@virgula
 18696  0051CA  6F6D               	movwf	(?i1_sprintf+4)& (0+255),b
 18697  0051CC  0E01               	movlw	high append_Arquivo_Json@virgula
 18698  0051CE  6F6E               	movwf	(?i1_sprintf+5)& (0+255),b
 18699  0051D0  0060  F5F0  F06F   	movff	_append_Arquivo_Json$3004,?i1_sprintf+6
 18700  0051D6  0060  F5F4  F070   	movff	_append_Arquivo_Json$3004+1,?i1_sprintf+7
 18701  0051DC  0060  F610  F071   	movff	append_Arquivo_Json@valorMem_Char,?i1_sprintf+8
 18702  0051E2  6B72               	clrf	(?i1_sprintf+9)& (0+255),b
 18703  0051E4  0060  F614  F073   	movff	append_Arquivo_Json@valorMem_Char+1,?i1_sprintf+10
 18704  0051EA  6B74               	clrf	(?i1_sprintf+11)& (0+255),b
 18705  0051EC  0060  F618  F075   	movff	append_Arquivo_Json@valorMem_Char+2,?i1_sprintf+12
 18706  0051F2  6B76               	clrf	(?i1_sprintf+13)& (0+255),b
 18707  0051F4  0060  F61C  F077   	movff	append_Arquivo_Json@valorMem_Char+3,?i1_sprintf+14
 18708  0051FA  6B78               	clrf	(?i1_sprintf+15)& (0+255),b
 18709  0051FC  0060  F620  F079   	movff	append_Arquivo_Json@valorMem_Char+4,?i1_sprintf+16
 18710  005202  6B7A               	clrf	(?i1_sprintf+17)& (0+255),b
 18711  005204  0060  F624  F07B   	movff	append_Arquivo_Json@valorMem_Char+5,?i1_sprintf+18
 18712  00520A  6B7C               	clrf	(?i1_sprintf+19)& (0+255),b
 18713  00520C  0060  F628  F07D   	movff	append_Arquivo_Json@valorMem_Char+6,?i1_sprintf+20
 18714  005212  6B7E               	clrf	(?i1_sprintf+21)& (0+255),b
 18715  005214  0060  F62C  F07F   	movff	append_Arquivo_Json@valorMem_Char+7,?i1_sprintf+22
 18716  00521A  6B80               	clrf	(?i1_sprintf+23)& (0+255),b
 18717  00521C  0E8E               	movlw	low append_Arquivo_Json@resultado
 18718  00521E  6F81               	movwf	(?i1_sprintf+24)& (0+255),b
 18719  005220  0E01               	movlw	high append_Arquivo_Json@resultado
 18720  005222  6F82               	movwf	(?i1_sprintf+25)& (0+255),b
 18721  005224  ECB5  F00E         	call	i1_sprintf	;wreg free
 18722                           
 18723                           ;Wifi.c: 88: cria_Arquivo("gerrex.json", linhaArquivo);
 18724  005228  0E42               	movlw	low STR_8
 18725  00522A  0100               	movlb	0	; () banked
 18726  00522C  6FB6               	movwf	cria_Arquivo@nome& (0+255),b
 18727  00522E  0EFF               	movlw	high STR_8
 18728  005230  6FB7               	movwf	(cria_Arquivo@nome+1)& (0+255),b
 18729  005232  0E00               	movlw	low append_Arquivo_Json@linhaArquivo
 18730  005234  6FB8               	movwf	cria_Arquivo@dado& (0+255),b
 18731  005236  0E01               	movlw	high append_Arquivo_Json@linhaArquivo
 18732  005238  6FB9               	movwf	(cria_Arquivo@dado+1)& (0+255),b
 18733  00523A  ECE1  F037         	call	_cria_Arquivo	;wreg free
 18734  00523E  0101               	movlb	1	; () banked
 18735  005240  4B82               	infsnz	append_Arquivo_Json@i& (0+255),f,b
 18736  005242  2B83               	incf	(append_Arquivo_Json@i+1)& (0+255),f,b
 18737  005244                     i1l421:
 18738                           
 18739                           ; BSR set to: 1
 18740                           
 18741                           ; BSR set to: 1
 18742  005244  51E1               	movf	_tamFrames& (0+255),w,b
 18743  005246  5D82               	subwf	append_Arquivo_Json@i& (0+255),w,b
 18744  005248  5183               	movf	(append_Arquivo_Json@i+1)& (0+255),w,b
 18745  00524A  0A80               	xorlw	128
 18746  00524C  0100               	movlb	0	; () banked
 18747  00524E  6FCB               	movwf	??_append_Arquivo_Json& (0+255),b
 18748  005250  0101               	movlb	1	; () banked
 18749  005252  51E2               	movf	(_tamFrames+1)& (0+255),w,b
 18750  005254  0A80               	xorlw	128
 18751  005256  0100               	movlb	0	; () banked
 18752  005258  59CB               	subwfb	??_append_Arquivo_Json& (0+255),w,b
 18753  00525A  A0D8               	btfss	16344,0,c
 18754  00525C  D710               	goto	i1l422
 18755                           
 18756                           ; BSR set to: 0
 18757                           ;Wifi.c: 96: }
 18758                           ;Wifi.c: 97: cria_Arquivo("gerrex.json", "]}\r");
 18759                           
 18760                           ; BSR set to: 0
 18761  00525E  0E42               	movlw	low STR_8
 18762  005260  6FB6               	movwf	cria_Arquivo@nome& (0+255),b
 18763  005262  0EFF               	movlw	high STR_8
 18764  005264  6FB7               	movwf	(cria_Arquivo@nome+1)& (0+255),b
 18765  005266  0EE3               	movlw	low STR_16
 18766  005268  6FB8               	movwf	cria_Arquivo@dado& (0+255),b
 18767  00526A  0EFF               	movlw	high STR_16
 18768  00526C  6FB9               	movwf	(cria_Arquivo@dado+1)& (0+255),b
 18769  00526E  ECE1  F037         	call	_cria_Arquivo	;wreg free
 18770  005272  0012               	return		;funcret
 18771  005274                     __end_of_append_Arquivo_Json:
 18772                           	opt stack 0
 18773                           
 18774 ;; *************** function _cria_Arquivo *****************
 18775 ;; Defined at:
 18776 ;;		line 35 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
 18777 ;; Parameters:    Size  Location     Type
 18778 ;;  nome            2   86[BANK0 ] PTR unsigned char 
 18779 ;;		 -> STR_15(12), STR_14(12), STR_8(12), 
 18780 ;;  dado            2   88[BANK0 ] PTR unsigned char 
 18781 ;;		 -> STR_16(4), append_Arquivo_Json@linhaArquivo(120), STR_9(51), 
 18782 ;; Auto vars:     Size  Location     Type
 18783 ;;  tamanho        15   92[BANK0 ] unsigned char [15]
 18784 ;;  tam             2   90[BANK0 ] int 
 18785 ;; Return value:  Size  Location     Type
 18786 ;;                  1    wreg      void 
 18787 ;; Registers used:
 18788 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18789 ;; Tracked objects:
 18790 ;;		On entry : 0/0
 18791 ;;		On exit  : 0/0
 18792 ;;		Unchanged: 0/0
 18793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18794 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18795 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18796 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18797 ;;      Totals:         1      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18798 ;;Total ram usage:       22 bytes
 18799 ;; Hardware stack levels used:    1
 18800 ;; Hardware stack levels required when called:    4
 18801 ;; This function calls:
 18802 ;;		_Buffer_Escrita_COMM_Add_String
 18803 ;;		_length
 18804 ;;		i1_sprintf
 18805 ;; This function is called by:
 18806 ;;		_append_Arquivo_Json
 18807 ;; This function uses a non-reentrant model
 18808 ;;
 18809                           
 18810                           	psect	text69
 18811  006FC2                     __ptext69:
 18812                           	opt stack 0
 18813  006FC2                     _cria_Arquivo:
 18814                           	opt stack 17
 18815                           
 18816                           ;Wifi.c: 36: unsigned char tamanho [15];
 18817                           ;Wifi.c: 37: int tam = 0;
 18818                           
 18819                           ;incstack = 0
 18820  006FC2  0E00               	movlw	0
 18821  006FC4  0100               	movlb	0	; () banked
 18822  006FC6  6FBB               	movwf	(cria_Arquivo@tam+1)& (0+255),b
 18823  006FC8  0E00               	movlw	0
 18824  006FCA  6FBA               	movwf	cria_Arquivo@tam& (0+255),b
 18825                           
 18826                           ; BSR set to: 0
 18827                           ;Wifi.c: 38: _delay((unsigned long)((10)*(40000000/4000.0)));
 18828  006FCC  0E82               	movlw	130
 18829  006FCE  6E58               	movwf	??_cria_Arquivo& (0+255),c
 18830  006FD0  0EDE               	movlw	222
 18831  006FD2                     i1u1908_27:
 18832  006FD2  2EE8               	decfsz	16360,f,c
 18833  006FD4  D7FE               	bra	i1u1908_27
 18834  006FD6  2E58               	decfsz	??_cria_Arquivo& (0+255),f,c
 18835  006FD8  D7FC               	bra	i1u1908_27
 18836                           
 18837                           ;Wifi.c: 39: Buffer_Escrita_COMM_Add_String("AT+S.FSC=", 1);
 18838  006FDA  0E81               	movlw	low STR_6
 18839  006FDC  6E06               	movwf	Buffer_Escrita_COMM_Add_String@dado,c
 18840  006FDE  0EFF               	movlw	high STR_6
 18841  006FE0  6E07               	movwf	Buffer_Escrita_COMM_Add_String@dado+1,c
 18842  006FE2  0E00               	movlw	0
 18843  006FE4  6E09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda+1,c
 18844  006FE6  0E01               	movlw	1
 18845  006FE8  6E08               	movwf	Buffer_Escrita_COMM_Add_String@aguarda,c
 18846  006FEA  EC6E  F036         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
 18847                           
 18848                           ;Wifi.c: 40: Buffer_Escrita_COMM_Add_String(nome, 1);
 18849  006FEE  0060  F2D8  F006   	movff	cria_Arquivo@nome,Buffer_Escrita_COMM_Add_String@dado
 18850  006FF4  0060  F2DC  F007   	movff	cria_Arquivo@nome+1,Buffer_Escrita_COMM_Add_String@dado+1
 18851  006FFA  0E00               	movlw	0
 18852  006FFC  6E09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda+1,c
 18853  006FFE  0E01               	movlw	1
 18854  007000  6E08               	movwf	Buffer_Escrita_COMM_Add_String@aguarda,c
 18855  007002  EC6E  F036         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
 18856                           
 18857                           ;Wifi.c: 41: tam = length(dado);
 18858  007006  0060  F2E0  F004   	movff	cria_Arquivo@dado,length@dado
 18859  00700C  0060  F2E4  F005   	movff	cria_Arquivo@dado+1,length@dado+1
 18860  007012  ECE9  F03E         	call	_length	;wreg free
 18861  007016  0060  F010  F0BA   	movff	?_length,cria_Arquivo@tam
 18862  00701C  0060  F014  F0BB   	movff	?_length+1,cria_Arquivo@tam+1
 18863                           
 18864                           ;Wifi.c: 42: sprintf(tamanho, ",%i\r", tam);
 18865  007022  0EBC               	movlw	low cria_Arquivo@tamanho
 18866  007024  0100               	movlb	0	; () banked
 18867  007026  6F69               	movwf	i1sprintf@sp& (0+255),b
 18868  007028  0E00               	movlw	high cria_Arquivo@tamanho
 18869  00702A  6F6A               	movwf	(i1sprintf@sp+1)& (0+255),b
 18870  00702C  0ED5               	movlw	low STR_7
 18871  00702E  6F6B               	movwf	i1sprintf@f& (0+255),b
 18872  007030  0EFF               	movlw	high STR_7
 18873  007032  6F6C               	movwf	(i1sprintf@f+1)& (0+255),b
 18874  007034  0060  F2E8  F06D   	movff	cria_Arquivo@tam,?i1_sprintf+4
 18875  00703A  0060  F2EC  F06E   	movff	cria_Arquivo@tam+1,?i1_sprintf+5
 18876  007040  ECB5  F00E         	call	i1_sprintf	;wreg free
 18877                           
 18878                           ;Wifi.c: 43: Buffer_Escrita_COMM_Add_String(tamanho, 1);
 18879  007044  0EBC               	movlw	low cria_Arquivo@tamanho
 18880  007046  6E06               	movwf	Buffer_Escrita_COMM_Add_String@dado,c
 18881  007048  0E00               	movlw	high cria_Arquivo@tamanho
 18882  00704A  6E07               	movwf	Buffer_Escrita_COMM_Add_String@dado+1,c
 18883  00704C  0E00               	movlw	0
 18884  00704E  6E09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda+1,c
 18885  007050  0E01               	movlw	1
 18886  007052  6E08               	movwf	Buffer_Escrita_COMM_Add_String@aguarda,c
 18887  007054  EC6E  F036         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
 18888                           
 18889                           ;Wifi.c: 44: Buffer_Escrita_COMM_Add_String(dado, 1);
 18890  007058  0060  F2E0  F006   	movff	cria_Arquivo@dado,Buffer_Escrita_COMM_Add_String@dado
 18891  00705E  0060  F2E4  F007   	movff	cria_Arquivo@dado+1,Buffer_Escrita_COMM_Add_String@dado+1
 18892  007064  0E00               	movlw	0
 18893  007066  6E09               	movwf	Buffer_Escrita_COMM_Add_String@aguarda+1,c
 18894  007068  0E01               	movlw	1
 18895  00706A  6E08               	movwf	Buffer_Escrita_COMM_Add_String@aguarda,c
 18896  00706C  EC6E  F036         	call	_Buffer_Escrita_COMM_Add_String	;wreg free
 18897  007070  0012               	return		;funcret
 18898  007072                     __end_of_cria_Arquivo:
 18899                           	opt stack 0
 18900                           
 18901 ;; *************** function _length *****************
 18902 ;; Defined at:
 18903 ;;		line 141 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Wifi.c"
 18904 ;; Parameters:    Size  Location     Type
 18905 ;;  dado            2    3[COMRAM] PTR unsigned char 
 18906 ;;		 -> STR_16(4), append_Arquivo_Json@linhaArquivo(120), STR_9(51), 
 18907 ;; Auto vars:     Size  Location     Type
 18908 ;;  i               2    7[COMRAM] int 
 18909 ;; Return value:  Size  Location     Type
 18910 ;;                  2    3[COMRAM] int 
 18911 ;; Registers used:
 18912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 18913 ;; Tracked objects:
 18914 ;;		On entry : 0/0
 18915 ;;		On exit  : 0/0
 18916 ;;		Unchanged: 0/0
 18917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18918 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18919 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18920 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18921 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18922 ;;Total ram usage:        6 bytes
 18923 ;; Hardware stack levels used:    1
 18924 ;; This function calls:
 18925 ;;		Nothing
 18926 ;; This function is called by:
 18927 ;;		_cria_Arquivo
 18928 ;; This function uses a non-reentrant model
 18929 ;;
 18930                           
 18931                           	psect	text70
 18932  007DD2                     __ptext70:
 18933                           	opt stack 0
 18934  007DD2                     _length:
 18935                           	opt stack 20
 18936                           
 18937                           ;Wifi.c: 142: int i = 0;
 18938                           
 18939                           ;incstack = 0
 18940  007DD2  0E00               	movlw	0
 18941  007DD4  6E09               	movwf	length@i+1,c
 18942  007DD6  0E00               	movlw	0
 18943  007DD8  6E08               	movwf	length@i,c
 18944                           
 18945                           ;Wifi.c: 143: while (dado[i] != 0x00)i++;
 18946  007DDA  D002               	goto	i1l443
 18947  007DDC  4A08               	infsnz	length@i,f,c
 18948  007DDE  2A09               	incf	length@i+1,f,c
 18949  007DE0                     i1l443:
 18950  007DE0  5008               	movf	length@i,w,c
 18951  007DE2  2404               	addwf	length@dado,w,c
 18952  007DE4  6E06               	movwf	??_length& (0+255),c
 18953  007DE6  5009               	movf	length@i+1,w,c
 18954  007DE8  2005               	addwfc	length@dado+1,w,c
 18955  007DEA  6E07               	movwf	(??_length+1)& (0+255),c
 18956  007DEC  0060  F01B  FFF6   	movff	??_length,16374
 18957  007DF2  0060  F01F  FFF7   	movff	??_length+1,16375
 18958  007DF8  0E00               	movlw	low (__mediumconst shr (0+16))
 18959  007DFA  6EF8               	movwf	16376,c
 18960  007DFC  0E0F               	movlw	(high __ramtop+-1)
 18961  007DFE  64F7               	cpfsgt	16375,c
 18962  007E00  D003               	bra	i1u759_27
 18963  007E02  0008               	tblrd		*
 18964  007E04  50F5               	movf	16373,w,c
 18965  007E06  D007               	bra	i1u759_20
 18966  007E08                     i1u759_27:
 18967  007E08  006F FFDB FFE9     	movff	16374,16361
 18968  007E0E  006F FFDF FFEA     	movff	16375,16362
 18969  007E14  50EF               	movf	16367,w,c
 18970  007E16                     i1u759_20:
 18971  007E16  0900               	iorlw	0
 18972  007E18  A4D8               	btfss	16344,2,c
 18973  007E1A  D7E0               	goto	i1l444
 18974                           
 18975                           ;Wifi.c: 144: return i;
 18976  007E1C  0060  F020  F004   	movff	length@i,?_length
 18977  007E22  0060  F024  F005   	movff	length@i+1,?_length+1
 18978  007E28  0012               	return		;funcret
 18979  007E2A                     __end_of_length:
 18980                           	opt stack 0
 18981                           
 18982 ;; *************** function i1_Buffer_Escrita_USB_Add_String *****************
 18983 ;; Defined at:
 18984 ;;		line 184 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 18985 ;; Parameters:    Size  Location     Type
 18986 ;;  dado            2    5[COMRAM] PTR unsigned char 
 18987 ;;		 -> STR_102(2), STR_89(17), STR_75(5), STR_74(11), 
 18988 ;;		 -> MACAddress(18), STR_44(25), STR_43(27), STR_25(10), 
 18989 ;;		 -> STR_18(24), main@motivo(20), 
 18990 ;;  aguarda         2    7[COMRAM] short 
 18991 ;; Auto vars:     Size  Location     Type
 18992 ;;  Buffer_Escri    2   11[COMRAM] int 
 18993 ;; Return value:  Size  Location     Type
 18994 ;;                  2    5[COMRAM] short 
 18995 ;; Registers used:
 18996 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18997 ;; Tracked objects:
 18998 ;;		On entry : 0/0
 18999 ;;		On exit  : 0/0
 19000 ;;		Unchanged: 0/0
 19001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19002 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19003 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19004 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19005 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19006 ;;Total ram usage:        8 bytes
 19007 ;; Hardware stack levels used:    1
 19008 ;; Hardware stack levels required when called:    1
 19009 ;; This function calls:
 19010 ;;		i1_Buffer_Escrita_USB_Add_Char
 19011 ;;		i1_TransmiteBuffer_USB
 19012 ;; This function is called by:
 19013 ;;		_inicia_Post
 19014 ;;		_Post
 19015 ;;		_recebeFRAMES
 19016 ;;		_SETMACAddr
 19017 ;;		_WIND
 19018 ;; This function uses a non-reentrant model
 19019 ;;
 19020                           
 19021                           	psect	text71
 19022  006C18                     __ptext71:
 19023                           	opt stack 0
 19024  006C18                     i1_Buffer_Escrita_USB_Add_String:
 19025                           	opt stack 21
 19026                           
 19027                           ;Serial.c: 185: int i = 0;
 19028                           
 19029                           ;incstack = 0
 19030  006C18  0E00               	movlw	0
 19031  006C1A  6E0D               	movwf	i1Buffer_Escrita_USB_Add_String@i+1,c
 19032  006C1C  0E00               	movlw	0
 19033  006C1E  6E0C               	movwf	i1Buffer_Escrita_USB_Add_String@i,c
 19034                           
 19035                           ;Serial.c: 186: ponteiro_USB = 0;
 19036  006C20  0E00               	movlw	0
 19037  006C22  0102               	movlb	2	; () banked
 19038  006C24  6FE2               	movwf	(_ponteiro_USB+1)& (0+255),b
 19039  006C26  0E00               	movlw	0
 19040  006C28  6FE1               	movwf	_ponteiro_USB& (0+255),b
 19041                           
 19042                           ;Serial.c: 187: ponteiro_escrita_USB = 0;
 19043  006C2A  0E00               	movlw	0
 19044  006C2C  6FE6               	movwf	(_ponteiro_escrita_USB+1)& (0+255),b
 19045  006C2E  0E00               	movlw	0
 19046  006C30  6FE5               	movwf	_ponteiro_escrita_USB& (0+255),b
 19047                           
 19048                           ;Serial.c: 188: buffer_escrita_USB[0] = 0x00;
 19049  006C32  0E00               	movlw	0
 19050  006C34  0106               	movlb	6	; () banked
 19051  006C36  6F00               	movwf	_buffer_escrita_USB& (0+255),b
 19052                           
 19053                           ;Serial.c: 190: while (dado[i] != 0x00) {
 19054  006C38  D027               	goto	i1l276
 19055  006C3A                     
 19056                           ;Serial.c: 191: if (i >= 150) return;
 19057                           
 19058                           ; BSR set to: 6
 19059  006C3A  BE0D               	btfsc	i1Buffer_Escrita_USB_Add_String@i+1,7,c
 19060  006C3C  D006               	goto	i1l278
 19061  006C3E  500D               	movf	i1Buffer_Escrita_USB_Add_String@i+1,w,c
 19062  006C40  E14C               	bnz	i1l279
 19063  006C42  0E96               	movlw	150
 19064  006C44  5C0C               	subwf	i1Buffer_Escrita_USB_Add_String@i,w,c
 19065  006C46  B0D8               	btfsc	16344,0,c
 19066  006C48  0012               	return	
 19067  006C4A                     i1l278:
 19068                           
 19069                           ;Serial.c: 192: Buffer_Escrita_USB_Add_Char(dado[i]);
 19070  006C4A  500C               	movf	i1Buffer_Escrita_USB_Add_String@i,w,c
 19071  006C4C  2406               	addwf	i1Buffer_Escrita_USB_Add_String@dado,w,c
 19072  006C4E  6E0A               	movwf	??i1_Buffer_Escrita_USB_Add_String& (0+255),c
 19073  006C50  500D               	movf	i1Buffer_Escrita_USB_Add_String@i+1,w,c
 19074  006C52  2007               	addwfc	i1Buffer_Escrita_USB_Add_String@dado+1,w,c
 19075  006C54  6E0B               	movwf	(??i1_Buffer_Escrita_USB_Add_String+1)& (0+255),c
 19076  006C56  0060  F02B  FFF6   	movff	??i1_Buffer_Escrita_USB_Add_String,16374
 19077  006C5C  0060  F02F  FFF7   	movff	??i1_Buffer_Escrita_USB_Add_String+1,16375
 19078  006C62  0E00               	movlw	low (__mediumconst shr (0+16))
 19079  006C64  6EF8               	movwf	16376,c
 19080  006C66  0E0F               	movlw	(high __ramtop+-1)
 19081  006C68  64F7               	cpfsgt	16375,c
 19082  006C6A  D003               	bra	i1u1611_27
 19083  006C6C  0008               	tblrd		*
 19084  006C6E  50F5               	movf	16373,w,c
 19085  006C70  D007               	bra	i1u1611_20
 19086  006C72                     i1u1611_27:
 19087  006C72  006F FFDB FFE9     	movff	16374,16361
 19088  006C78  006F FFDF FFEA     	movff	16375,16362
 19089  006C7E  50EF               	movf	16367,w,c
 19090  006C80                     i1u1611_20:
 19091  006C80  EC98  F041         	call	i1_Buffer_Escrita_USB_Add_Char
 19092                           
 19093                           ;Serial.c: 193: i++;
 19094  006C84  4A0C               	infsnz	i1Buffer_Escrita_USB_Add_String@i,f,c
 19095  006C86  2A0D               	incf	i1Buffer_Escrita_USB_Add_String@i+1,f,c
 19096  006C88                     i1l276:
 19097  006C88  500C               	movf	i1Buffer_Escrita_USB_Add_String@i,w,c
 19098  006C8A  2406               	addwf	i1Buffer_Escrita_USB_Add_String@dado,w,c
 19099  006C8C  6E0A               	movwf	??i1_Buffer_Escrita_USB_Add_String& (0+255),c
 19100  006C8E  500D               	movf	i1Buffer_Escrita_USB_Add_String@i+1,w,c
 19101  006C90  2007               	addwfc	i1Buffer_Escrita_USB_Add_String@dado+1,w,c
 19102  006C92  6E0B               	movwf	(??i1_Buffer_Escrita_USB_Add_String+1)& (0+255),c
 19103  006C94  0060  F02B  FFF6   	movff	??i1_Buffer_Escrita_USB_Add_String,16374
 19104  006C9A  0060  F02F  FFF7   	movff	??i1_Buffer_Escrita_USB_Add_String+1,16375
 19105  006CA0  0E00               	movlw	low (__mediumconst shr (0+16))
 19106  006CA2  6EF8               	movwf	16376,c
 19107  006CA4  0E0F               	movlw	(high __ramtop+-1)
 19108  006CA6  64F7               	cpfsgt	16375,c
 19109  006CA8  D003               	bra	i1u1612_27
 19110  006CAA  0008               	tblrd		*
 19111  006CAC  50F5               	movf	16373,w,c
 19112  006CAE  D007               	bra	i1u1612_20
 19113  006CB0                     i1u1612_27:
 19114  006CB0  006F FFDB FFE9     	movff	16374,16361
 19115  006CB6  006F FFDF FFEA     	movff	16375,16362
 19116  006CBC  50EF               	movf	16367,w,c
 19117  006CBE                     i1u1612_20:
 19118  006CBE  0900               	iorlw	0
 19119  006CC0  A4D8               	btfss	16344,2,c
 19120  006CC2  D7BB               	goto	i1l277
 19121                           
 19122                           ;Serial.c: 194: }
 19123                           ;Serial.c: 195: if (aguarda){
 19124  006CC4  5008               	movf	i1Buffer_Escrita_USB_Add_String@aguarda,w,c
 19125  006CC6  1009               	iorwf	i1Buffer_Escrita_USB_Add_String@aguarda+1,w,c
 19126  006CC8  B4D8               	btfsc	16344,2,c
 19127  006CCA  0012               	return	
 19128  006CCC                     i1u1614_20:
 19129                           
 19130                           ;Serial.c: 196: while (TransmiteBuffer_USB() == 0);
 19131  006CCC  EC8F  F03E         	call	i1_TransmiteBuffer_USB	;wreg free
 19132  006CD0  5004               	movf	?i1_TransmiteBuffer_USB,w,c
 19133  006CD2  1005               	iorwf	?i1_TransmiteBuffer_USB+1,w,c
 19134  006CD4  A4D8               	btfss	16344,2,c
 19135  006CD6  0012               	return	
 19136  006CD8  D7F9               	goto	i1u1614_20
 19137  006CDA                     i1l279:
 19138  006CDA  0012               	return		;funcret
 19139  006CDC                     __end_ofi1_Buffer_Escrita_USB_Add_String:
 19140                           	opt stack 0
 19141                           
 19142 ;; *************** function i1_TransmiteBuffer_USB *****************
 19143 ;; Defined at:
 19144 ;;		line 154 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 19145 ;; Parameters:    Size  Location     Type
 19146 ;;		None
 19147 ;; Auto vars:     Size  Location     Type
 19148 ;;		None
 19149 ;; Return value:  Size  Location     Type
 19150 ;;                  2    3[COMRAM] int 
 19151 ;; Registers used:
 19152 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19153 ;; Tracked objects:
 19154 ;;		On entry : 0/0
 19155 ;;		On exit  : 0/0
 19156 ;;		Unchanged: 0/0
 19157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19162 ;;Total ram usage:        2 bytes
 19163 ;; Hardware stack levels used:    1
 19164 ;; This function calls:
 19165 ;;		Nothing
 19166 ;; This function is called by:
 19167 ;;		i1_Buffer_Escrita_USB_Add_String
 19168 ;; This function uses a non-reentrant model
 19169 ;;
 19170                           
 19171                           	psect	text72
 19172  007D1E                     __ptext72:
 19173                           	opt stack 0
 19174  007D1E                     i1_TransmiteBuffer_USB:
 19175                           	opt stack 21
 19176                           
 19177                           ;Serial.c: 155: if (U1ERRIRbits.TXMTIF == 0) return 0;
 19178                           
 19179                           ;incstack = 0
 19180  007D1E  013D               	movlb	61	; () banked
 19181  007D20  BFF9               	btfsc	249,7,b	;volatile
 19182  007D22  D005               	goto	i1l261
 19183                           
 19184                           ; BSR set to: 61
 19185  007D24  0E00               	movlw	0
 19186  007D26  6E05               	movwf	?i1_TransmiteBuffer_USB+1,c
 19187  007D28  0E00               	movlw	0
 19188  007D2A  6E04               	movwf	?i1_TransmiteBuffer_USB,c
 19189                           
 19190                           ; BSR set to: 61
 19191  007D2C  0012               	return	
 19192  007D2E                     i1l261:
 19193                           
 19194                           ; BSR set to: 61
 19195                           ;Serial.c: 156: if (ponteiro_escrita_USB < ponteiro_USB) {
 19196                           
 19197                           ; BSR set to: 61
 19198  007D2E  0102               	movlb	2	; () banked
 19199  007D30  51E1               	movf	_ponteiro_USB& (0+255),w,b
 19200  007D32  5DE5               	subwf	_ponteiro_escrita_USB& (0+255),w,b
 19201  007D34  51E2               	movf	(_ponteiro_USB+1)& (0+255),w,b
 19202  007D36  59E6               	subwfb	(_ponteiro_escrita_USB+1)& (0+255),w,b
 19203  007D38  B0D8               	btfsc	16344,0,c
 19204  007D3A  D011               	goto	i1l263
 19205                           
 19206                           ; BSR set to: 2
 19207                           ;Serial.c: 157: U1TXB = buffer_escrita_USB[ponteiro_escrita_USB];
 19208  007D3C  0E00               	movlw	low _buffer_escrita_USB
 19209  007D3E  25E5               	addwf	_ponteiro_escrita_USB& (0+255),w,b
 19210  007D40  6ED9               	movwf	16345,c
 19211  007D42  0E06               	movlw	high _buffer_escrita_USB
 19212  007D44  21E6               	addwfc	(_ponteiro_escrita_USB+1)& (0+255),w,b
 19213  007D46  6EDA               	movwf	16346,c
 19214  007D48  50DF               	movf	16351,w,c
 19215  007D4A  013D               	movlb	61	; () banked
 19216  007D4C  6FEA               	movwf	234,b	;volatile
 19217                           
 19218                           ; BSR set to: 61
 19219                           ;Serial.c: 158: ponteiro_escrita_USB++;
 19220  007D4E  0102               	movlb	2	; () banked
 19221  007D50  4BE5               	infsnz	_ponteiro_escrita_USB& (0+255),f,b
 19222  007D52  2BE6               	incf	(_ponteiro_escrita_USB+1)& (0+255),f,b
 19223                           
 19224                           ; BSR set to: 2
 19225                           ;Serial.c: 159: return 0;
 19226  007D54  0E00               	movlw	0
 19227  007D56  6E05               	movwf	?i1_TransmiteBuffer_USB+1,c
 19228  007D58  0E00               	movlw	0
 19229  007D5A  6E04               	movwf	?i1_TransmiteBuffer_USB,c
 19230                           
 19231                           ; BSR set to: 2
 19232                           ;Serial.c: 160: } else {
 19233                           
 19234                           ; BSR set to: 2
 19235  007D5C  0012               	return	
 19236  007D5E                     i1l263:
 19237                           
 19238                           ; BSR set to: 2
 19239                           ;Serial.c: 161: ponteiro_USB = 0;
 19240                           
 19241                           ; BSR set to: 2
 19242  007D5E  0E00               	movlw	0
 19243  007D60  6FE2               	movwf	(_ponteiro_USB+1)& (0+255),b
 19244  007D62  0E00               	movlw	0
 19245  007D64  6FE1               	movwf	_ponteiro_USB& (0+255),b
 19246                           
 19247                           ;Serial.c: 162: ponteiro_escrita_USB = 0;
 19248  007D66  0E00               	movlw	0
 19249  007D68  6FE6               	movwf	(_ponteiro_escrita_USB+1)& (0+255),b
 19250  007D6A  0E00               	movlw	0
 19251  007D6C  6FE5               	movwf	_ponteiro_escrita_USB& (0+255),b
 19252                           
 19253                           ;Serial.c: 163: return 1;
 19254  007D6E  0E00               	movlw	0
 19255  007D70  6E05               	movwf	?i1_TransmiteBuffer_USB+1,c
 19256  007D72  0E01               	movlw	1
 19257  007D74  6E04               	movwf	?i1_TransmiteBuffer_USB,c
 19258                           
 19259                           ; BSR set to: 2
 19260  007D76  0012               	return	
 19261  007D78                     __end_ofi1_TransmiteBuffer_USB:
 19262                           	opt stack 0
 19263                           
 19264 ;; *************** function i1_Buffer_Escrita_USB_Add_Char *****************
 19265 ;; Defined at:
 19266 ;;		line 200 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 19267 ;; Parameters:    Size  Location     Type
 19268 ;;  dado            1    wreg     unsigned char 
 19269 ;; Auto vars:     Size  Location     Type
 19270 ;;  dado            1    3[COMRAM] unsigned char 
 19271 ;; Return value:  Size  Location     Type
 19272 ;;                  2    0[None  ] short 
 19273 ;; Registers used:
 19274 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19275 ;; Tracked objects:
 19276 ;;		On entry : 0/0
 19277 ;;		On exit  : 0/0
 19278 ;;		Unchanged: 0/0
 19279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19281 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19283 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19284 ;;Total ram usage:        1 bytes
 19285 ;; Hardware stack levels used:    1
 19286 ;; This function calls:
 19287 ;;		Nothing
 19288 ;; This function is called by:
 19289 ;;		_Interrupt_WIFI_GSM
 19290 ;;		i1_Buffer_Escrita_USB_Add_String
 19291 ;; This function uses a non-reentrant model
 19292 ;;
 19293                           
 19294                           	psect	text73
 19295  008330                     __ptext73:
 19296                           	opt stack 0
 19297  008330                     i1_Buffer_Escrita_USB_Add_Char:
 19298                           	opt stack 24
 19299                           
 19300                           ;incstack = 0
 19301                           ;i1Buffer_Escrita_USB_Add_Char@dado stored from wreg
 19302  008330  6E04               	movwf	i1Buffer_Escrita_USB_Add_Char@dado,c
 19303                           
 19304                           ;Serial.c: 201: buffer_escrita_USB[ponteiro_USB] = dado;
 19305  008332  0E00               	movlw	low _buffer_escrita_USB
 19306  008334  0102               	movlb	2	; () banked
 19307  008336  25E1               	addwf	_ponteiro_USB& (0+255),w,b
 19308  008338  6ED9               	movwf	16345,c
 19309  00833A  0E06               	movlw	high _buffer_escrita_USB
 19310  00833C  21E2               	addwfc	(_ponteiro_USB+1)& (0+255),w,b
 19311  00833E  6EDA               	movwf	16346,c
 19312  008340  0060  F013  FFDF   	movff	i1Buffer_Escrita_USB_Add_Char@dado,16351
 19313                           
 19314                           ; BSR set to: 2
 19315                           ;Serial.c: 207: if (ponteiro_USB >= 150) ponteiro_USB = 0;
 19316  008346  51E2               	movf	(_ponteiro_USB+1)& (0+255),w,b
 19317  008348  E104               	bnz	i1u1561_20
 19318  00834A  0E96               	movlw	150
 19319  00834C  5DE1               	subwf	_ponteiro_USB& (0+255),w,b
 19320  00834E  A0D8               	btfss	16344,0,c
 19321  008350  D005               	goto	i1l287
 19322  008352                     i1u1561_20:
 19323                           
 19324                           ; BSR set to: 2
 19325  008352  0E00               	movlw	0
 19326  008354  6FE2               	movwf	(_ponteiro_USB+1)& (0+255),b
 19327  008356  0E00               	movlw	0
 19328  008358  6FE1               	movwf	_ponteiro_USB& (0+255),b
 19329  00835A  0012               	return	
 19330  00835C                     i1l287:
 19331                           
 19332                           ; BSR set to: 2
 19333                           ;Serial.c: 208: else ponteiro_USB++;
 19334                           
 19335                           ; BSR set to: 2
 19336  00835C  4BE1               	infsnz	_ponteiro_USB& (0+255),f,b
 19337  00835E  2BE2               	incf	(_ponteiro_USB+1)& (0+255),f,b
 19338  008360  0012               	return	
 19339  008362                     __end_ofi1_Buffer_Escrita_USB_Add_Char:
 19340                           	opt stack 0
 19341                           
 19342 ;; *************** function i1_Aguarda_dado *****************
 19343 ;; Defined at:
 19344 ;;		line 216 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/GERREX.c"
 19345 ;; Parameters:    Size  Location     Type
 19346 ;;  inicio          2   86[BANK0 ] PTR unsigned char 
 19347 ;;		 -> STR_108(7), STR_104(10), STR_99(4), STR_96(7), 
 19348 ;;		 -> STR_86(7), STR_83(2), STR_77(17), STR_71(3), 
 19349 ;;		 -> STR_68(6), STR_65(7), STR_62(6), STR_59(7), 
 19350 ;;		 -> STR_56(8), STR_53(10), STR_50(19), STR_45(2), 
 19351 ;;		 -> STR_40(2), STR_36(10), STR_31(3), STR_27(3), 
 19352 ;;		 -> STR_22(2), STR_19(3), STR_3(19), 
 19353 ;;  fim             2   88[BANK0 ] PTR unsigned char 
 19354 ;;		 -> STR_109(2), STR_105(3), STR_100(2), STR_97(2), 
 19355 ;;		 -> STR_87(7), STR_84(3), STR_78(2), STR_72(2), 
 19356 ;;		 -> STR_69(3), STR_66(2), STR_63(2), STR_60(2), 
 19357 ;;		 -> STR_57(3), STR_54(2), STR_51(2), STR_46(2), 
 19358 ;;		 -> STR_41(2), STR_37(2), STR_32(3), STR_28(3), 
 19359 ;;		 -> STR_23(2), STR_20(2), STR_4(2), 
 19360 ;;  error           2   90[BANK0 ] PTR unsigned char 
 19361 ;;		 -> STR_110(1), STR_106(1), STR_101(1), STR_98(1), 
 19362 ;;		 -> STR_88(7), STR_85(1), STR_79(7), STR_73(1), 
 19363 ;;		 -> STR_70(1), STR_67(1), STR_64(1), STR_61(1), 
 19364 ;;		 -> STR_58(1), STR_55(1), STR_52(1), STR_47(1), 
 19365 ;;		 -> STR_42(1), STR_38(1), STR_33(1), STR_29(1), 
 19366 ;;		 -> STR_24(1), STR_21(1), STR_5(1), 
 19367 ;;  ff              2   92[BANK0 ] PTR FTN()PTR void 
 19368 ;;		 -> SOCKET_RX(1), WIND(1), TASK_POST(1), SETMACAddr(1), 
 19369 ;;		 -> Absolute function(3), recebeSIZE(1), recebeADDRESS(1), recebeFUNCTIONCODE(1), 
 19370 ;;		 -> recebeNODEID(1), recebeNETWORKID(1), recebeFRAMEID(1), recebeFRAMES(1), 
 19371 ;;		 -> recebe(1), Post2(1), nada(1), Post(1), 
 19372 ;;		 -> inicia_Post(1), GETMACAddr(1), 
 19373 ;; Auto vars:     Size  Location     Type
 19374 ;;		None
 19375 ;; Return value:  Size  Location     Type
 19376 ;;                  1    wreg      void 
 19377 ;; Registers used:
 19378 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19379 ;; Tracked objects:
 19380 ;;		On entry : 0/0
 19381 ;;		On exit  : 0/0
 19382 ;;		Unchanged: 0/0
 19383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19384 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19387 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19388 ;;Total ram usage:        8 bytes
 19389 ;; Hardware stack levels used:    1
 19390 ;; Hardware stack levels required when called:    4
 19391 ;; This function calls:
 19392 ;;		i1_sprintf
 19393 ;; This function is called by:
 19394 ;;		_inicia_Post
 19395 ;;		_Post
 19396 ;;		_Post2
 19397 ;;		_recebe
 19398 ;;		_recebeFRAMES
 19399 ;;		_recebeFRAMEID
 19400 ;;		_recebeNETWORKID
 19401 ;;		_recebeNODEID
 19402 ;;		_recebeFUNCTIONCODE
 19403 ;;		_recebeADDRESS
 19404 ;;		_recebeSIZE
 19405 ;;		_GETMACAddr
 19406 ;;		_TASK_POST
 19407 ;;		_WIND
 19408 ;;		_SOCKET_RX
 19409 ;; This function uses a non-reentrant model
 19410 ;;
 19411                           
 19412                           	psect	text74
 19413  007B44                     __ptext74:
 19414                           	opt stack 0
 19415  007B44                     i1_Aguarda_dado:
 19416                           	opt stack 18
 19417                           
 19418                           ;GERREX.c: 217: PORTBbits.RB2 = 1;
 19419                           
 19420                           ; BSR set to: 2
 19421                           ;incstack = 0
 19422  007B44  013F               	movlb	63	; () banked
 19423  007B46  85CB               	bsf	203,2,b	;volatile
 19424                           
 19425                           ; BSR set to: 63
 19426                           ;GERREX.c: 218: Aguarda_Ponteiro = 0;
 19427  007B48  0E00               	movlw	0
 19428  007B4A  0100               	movlb	0	; () banked
 19429  007B4C  6FF2               	movwf	(_Aguarda_Ponteiro+1)& (0+255),b
 19430  007B4E  0E00               	movlw	0
 19431  007B50  6FF1               	movwf	_Aguarda_Ponteiro& (0+255),b
 19432                           
 19433                           ; BSR set to: 0
 19434                           ;GERREX.c: 219: sprintf(Aguarda_str, "%s", inicio);
 19435  007B52  0EAA               	movlw	low _Aguarda_str
 19436  007B54  6F69               	movwf	i1sprintf@sp& (0+255),b
 19437  007B56  0E03               	movlw	high _Aguarda_str
 19438  007B58  6F6A               	movwf	(i1sprintf@sp+1)& (0+255),b
 19439  007B5A  0EED               	movlw	low STR_80
 19440  007B5C  6F6B               	movwf	i1sprintf@f& (0+255),b
 19441  007B5E  0EFF               	movlw	high STR_80
 19442  007B60  6F6C               	movwf	(i1sprintf@f+1)& (0+255),b
 19443  007B62  0060  F2D8  F06D   	movff	i1Aguarda_dado@inicio,?i1_sprintf+4
 19444  007B68  0060  F2DC  F06E   	movff	i1Aguarda_dado@inicio+1,?i1_sprintf+5
 19445  007B6E  ECB5  F00E         	call	i1_sprintf	;wreg free
 19446                           
 19447                           ;GERREX.c: 220: sprintf(Aguarda_end, "%s", fim);
 19448  007B72  0ED0               	movlw	low _Aguarda_end
 19449  007B74  0100               	movlb	0	; () banked
 19450  007B76  6F69               	movwf	i1sprintf@sp& (0+255),b
 19451  007B78  0E03               	movlw	high _Aguarda_end
 19452  007B7A  6F6A               	movwf	(i1sprintf@sp+1)& (0+255),b
 19453  007B7C  0EED               	movlw	low STR_80
 19454  007B7E  6F6B               	movwf	i1sprintf@f& (0+255),b
 19455  007B80  0EFF               	movlw	high STR_80
 19456  007B82  6F6C               	movwf	(i1sprintf@f+1)& (0+255),b
 19457  007B84  0060  F2E0  F06D   	movff	i1Aguarda_dado@fim,?i1_sprintf+4
 19458  007B8A  0060  F2E4  F06E   	movff	i1Aguarda_dado@fim+1,?i1_sprintf+5
 19459  007B90  ECB5  F00E         	call	i1_sprintf	;wreg free
 19460                           
 19461                           ;GERREX.c: 221: Aguarda_Funcao = ff;
 19462  007B94  0060  F2F0  F0EB   	movff	i1Aguarda_dado@ff,_Aguarda_Funcao
 19463  007B9A  0060  F2F4  F0EC   	movff	i1Aguarda_dado@ff+1,_Aguarda_Funcao+1
 19464                           
 19465                           ;GERREX.c: 222: PORTBbits.RB2 = 0;
 19466  007BA0  013F               	movlb	63	; () banked
 19467  007BA2  95CB               	bcf	203,2,b	;volatile
 19468                           
 19469                           ; BSR set to: 63
 19470  007BA4  0012               	return		;funcret
 19471  007BA6                     __end_ofi1_Aguarda_dado:
 19472                           	opt stack 0
 19473                           
 19474 ;; *************** function i1_sprintf *****************
 19475 ;; Defined at:
 19476 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 19477 ;; Parameters:    Size  Location     Type
 19478 ;;  sp              2    9[BANK0 ] PTR unsigned char 
 19479 ;;		 -> Verifica_Analogica@valoradstr(10), append_Arquivo_Json@linhaArquivo(120), append_Arquivo_Json@resultado(6), appe
      +nd_Arquivo_Json@valorMem_Char(10), 
 19480 ;;		 -> cria_Arquivo@tamanho(15), Aguarda_end(10), Aguarda_str(20), main@motivo(20), 
 19481 ;;  f               2   11[BANK0 ] PTR const unsigned char 
 19482 ;;		 -> STR_111(12), STR_81(3), STR_80(3), STR_13(61), 
 19483 ;;		 -> STR_12(6), STR_11(5), STR_10(6), STR_7(5), 
 19484 ;;		 -> STR_2(13), STR_1(18), 
 19485 ;; Auto vars:     Size  Location     Type
 19486 ;;  sprintf         4   74[BANK0 ] unsigned long 
 19487 ;;  sprintf         4   66[BANK0 ] struct .
 19488 ;;  sprintf         3   78[BANK0 ] struct .
 19489 ;;  sprintf         3   57[BANK0 ] struct .
 19490 ;;  sprintf         2   84[BANK0 ] unsigned short 
 19491 ;;  sprintf         2   81[BANK0 ] int 
 19492 ;;  sprintf         2   72[BANK0 ] int 
 19493 ;;  sprintf         2   70[BANK0 ] int 
 19494 ;;  sprintf         2   64[BANK0 ] PTR void [1]
 19495 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
 19496 ;;  sprintf         2   62[BANK0 ] unsigned int 
 19497 ;;  sprintf         2   60[BANK0 ] PTR const unsigned char 
 19498 ;;		 -> STR_112(7), sprintf@c(1), STR_109(2), STR_108(7), 
 19499 ;;		 -> STR_105(3), STR_104(10), STR_100(2), STR_99(4), 
 19500 ;;		 -> STR_97(2), STR_96(7), STR_87(7), STR_86(7), 
 19501 ;;		 -> STR_84(3), STR_83(2), STR_78(2), STR_77(17), 
 19502 ;;		 -> STR_72(2), STR_71(3), STR_69(3), STR_68(6), 
 19503 ;;		 -> STR_66(2), STR_65(7), STR_63(2), STR_62(6), 
 19504 ;;		 -> STR_60(2), STR_59(7), STR_57(3), STR_56(8), 
 19505 ;;		 -> STR_54(2), STR_53(10), STR_51(2), STR_50(19), 
 19506 ;;		 -> STR_46(2), STR_45(2), STR_41(2), STR_40(2), 
 19507 ;;		 -> STR_37(2), STR_36(10), STR_32(3), STR_31(3), 
 19508 ;;		 -> STR_28(3), STR_27(3), STR_23(2), STR_22(2), 
 19509 ;;		 -> STR_20(2), STR_19(3), frameId(1110), append_Arquivo_Json@resultado(6), 
 19510 ;;		 -> append_Arquivo_Json@virgula(2), STR_4(2), STR_3(19), 
 19511 ;;  sprintf         1   83[BANK0 ] char 
 19512 ;;  sprintf         1   44[BANK0 ] unsigned char 
 19513 ;;  sprintf         1    0        unsigned char 
 19514 ;; Return value:  Size  Location     Type
 19515 ;;                  2    9[BANK0 ] int 
 19516 ;; Registers used:
 19517 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19518 ;; Tracked objects:
 19519 ;;		On entry : 0/0
 19520 ;;		On exit  : 0/0
 19521 ;;		Unchanged: 0/0
 19522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19523 ;;      Params:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19524 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19525 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19526 ;;      Totals:         0      77       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19527 ;;Total ram usage:       77 bytes
 19528 ;; Hardware stack levels used:    1
 19529 ;; Hardware stack levels required when called:    3
 19530 ;; This function calls:
 19531 ;;		i1___awdiv
 19532 ;;		i1___awmod
 19533 ;;		i1___ftadd
 19534 ;;		i1___ftdiv
 19535 ;;		i1___ftge
 19536 ;;		i1___ftmul
 19537 ;;		i1___ftneg
 19538 ;;		i1___ftsub
 19539 ;;		i1___fttol
 19540 ;;		i1___lldiv
 19541 ;;		i1___llmod
 19542 ;;		i1___lltoft
 19543 ;;		i1___wmul
 19544 ;;		i1__div_to_l_
 19545 ;;		i1__tdiv_to_l_
 19546 ;;		i1_fround
 19547 ;;		i1_isdigit
 19548 ;;		i1_scale
 19549 ;; This function is called by:
 19550 ;;		_cria_Arquivo
 19551 ;;		_append_Arquivo_Json
 19552 ;;		i1_Aguarda_dado
 19553 ;; This function uses a non-reentrant model
 19554 ;;
 19555                           
 19556                           	psect	text75
 19557  001D6A                     __ptext75:
 19558                           	opt stack 0
 19559  001D6A                     i1_sprintf:
 19560                           	opt stack 18
 19561                           
 19562                           ;doprnt.c: 494: va_list ap;
 19563                           ;doprnt.c: 499: signed char c;
 19564                           ;doprnt.c: 501: int width;
 19565                           ;doprnt.c: 504: int prec;
 19566                           ;doprnt.c: 508: unsigned short flag;
 19567                           ;doprnt.c: 515: char d;
 19568                           ;doprnt.c: 516: double fval;
 19569                           ;doprnt.c: 517: int exp;
 19570                           ;doprnt.c: 523: union {
 19571                           ;doprnt.c: 524: unsigned long vd;
 19572                           ;doprnt.c: 525: double integ;
 19573                           ;doprnt.c: 526: } tmpval;
 19574                           ;doprnt.c: 528: unsigned long val;
 19575                           ;doprnt.c: 529: unsigned len;
 19576                           ;doprnt.c: 530: const char * cp;
 19577                           ;doprnt.c: 533: *ap = __va_start();
 19578                           
 19579                           ; BSR set to: 63
 19580                           ;incstack = 0
 19581  001D6A  0E6D               	movlw	low (?i1_sprintf+4)
 19582  001D6C  0100               	movlb	0	; () banked
 19583  001D6E  6FA0               	movwf	i1sprintf@ap& (0+255),b
 19584  001D70  0E00               	movlw	high (?i1_sprintf+4)
 19585  001D72  6FA1               	movwf	(i1sprintf@ap+1)& (0+255),b
 19586                           
 19587                           ;doprnt.c: 536: while(c = *f++) {
 19588  001D74  EFF1  F01C         	goto	i1u1549_20
 19589  001D78                     
 19590                           ; BSR set to: 0
 19591                           ;doprnt.c: 538: if(c != '%')
 19592                           
 19593                           ; BSR set to: 0
 19594  001D78  0E25               	movlw	37
 19595  001D7A  19B3               	xorwf	i1sprintf@c& (0+255),w,b
 19596  001D7C  B4D8               	btfsc	16344,2,c
 19597  001D7E  D00D               	goto	i1l949
 19598                           
 19599                           ; BSR set to: 0
 19600                           ;doprnt.c: 540: {
 19601                           ;doprnt.c: 541: ((*sp++ = (c)));
 19602  001D80  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 19603  001D86  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 19604  001D8C  0060  F2CF  FFDF   	movff	i1sprintf@c,16351
 19605                           
 19606                           ; BSR set to: 0
 19607  001D92  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 19608  001D94  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 19609                           
 19610                           ;doprnt.c: 542: continue;
 19611  001D96  EFF1  F01C         	goto	i1u1549_20
 19612  001D9A                     i1l949:
 19613                           
 19614                           ; BSR set to: 0
 19615                           ;doprnt.c: 543: }
 19616                           ;doprnt.c: 546: width = 0;
 19617                           
 19618                           ; BSR set to: 0
 19619  001D9A  0E00               	movlw	0
 19620  001D9C  6FA9               	movwf	(i1sprintf@width+1)& (0+255),b
 19621  001D9E  0E00               	movlw	0
 19622  001DA0  6FA8               	movwf	i1sprintf@width& (0+255),b
 19623                           
 19624                           ;doprnt.c: 548: flag = 0;
 19625  001DA2  0E00               	movlw	0
 19626  001DA4  6FB5               	movwf	(i1sprintf@flag+1)& (0+255),b
 19627  001DA6  0E00               	movlw	0
 19628  001DA8  6FB4               	movwf	i1sprintf@flag& (0+255),b
 19629                           
 19630                           ; BSR set to: 0
 19631                           ;doprnt.c: 551: switch(*f) {
 19632                           
 19633                           ;doprnt.c: 550: for(;;) {
 19634  001DAA  D010               	goto	i1l951
 19635  001DAC                     
 19636                           ;doprnt.c: 554: flag |= 0x08;
 19637                           
 19638                           ; BSR set to: 0
 19639  001DAC  0100               	movlb	0	; () banked
 19640  001DAE  87B4               	bsf	i1sprintf@flag& (0+255),3,b
 19641  001DB0  D00B               	goto	L22
 19642  001DB2                     
 19643                           ;doprnt.c: 561: flag |= 0x01;
 19644                           
 19645                           ; BSR set to: 0
 19646  001DB2  0100               	movlb	0	; () banked
 19647  001DB4  81B4               	bsf	i1sprintf@flag& (0+255),0,b
 19648  001DB6  D008               	goto	L22
 19649  001DB8                     
 19650                           ;doprnt.c: 568: flag |= 0x02;
 19651                           
 19652                           ; BSR set to: 0
 19653  001DB8  0100               	movlb	0	; () banked
 19654  001DBA  83B4               	bsf	i1sprintf@flag& (0+255),1,b
 19655  001DBC  D005               	goto	L22
 19656  001DBE                     
 19657                           ;doprnt.c: 574: flag |= 0x800;
 19658                           
 19659                           ; BSR set to: 0
 19660  001DBE  0100               	movlb	0	; () banked
 19661  001DC0  87B5               	bsf	(i1sprintf@flag+1)& (0+255),3,b
 19662  001DC2  D002               	goto	L22
 19663  001DC4                     
 19664                           ;doprnt.c: 580: flag |= 0x04;
 19665                           
 19666                           ; BSR set to: 0
 19667  001DC4  0100               	movlb	0	; () banked
 19668  001DC6  85B4               	bsf	i1sprintf@flag& (0+255),2,b
 19669  001DC8                     L22:
 19670                           
 19671                           ;doprnt.c: 581: f++;
 19672  001DC8  4B6B               	infsnz	i1sprintf@f& (0+255),f,b
 19673  001DCA  2B6C               	incf	(i1sprintf@f+1)& (0+255),f,b
 19674  001DCC                     i1l951:
 19675                           
 19676                           ; BSR set to: 0
 19677  001DCC  0060  F1AF  FFF6   	movff	i1sprintf@f,16374
 19678  001DD2  0060  F1B3  FFF7   	movff	i1sprintf@f+1,16375
 19679  001DD8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19680  001DD8  6AF8               	clrf	16376,c
 19681  001DDA                     	endif
 19682  001DDA                     	if	0	;tblptru may be non-zero
 19683  001DDA                     	endif
 19684  001DDA  0008               	tblrd		*
 19685  001DDC  50F5               	movf	16373,w,c
 19686                           
 19687                           ; Switch size 1, requested type "space"
 19688                           ; Number of cases is 5, Range of values is 32 to 48
 19689                           ; switch strategies available:
 19690                           ; Name         Instructions Cycles
 19691                           ; simple_byte           16     9 (average)
 19692                           ;	Chosen strategy is simple_byte
 19693  001DDE  0A20               	xorlw	32	; case 32
 19694  001DE0  B4D8               	btfsc	16344,2,c
 19695  001DE2  D7E7               	goto	i1l954
 19696  001DE4  0A03               	xorlw	3	; case 35
 19697  001DE6  B4D8               	btfsc	16344,2,c
 19698  001DE8  D7EA               	goto	i1l956
 19699  001DEA  0A08               	xorlw	8	; case 43
 19700  001DEC  B4D8               	btfsc	16344,2,c
 19701  001DEE  D7E4               	goto	i1l955
 19702  001DF0  0A06               	xorlw	6	; case 45
 19703  001DF2  B4D8               	btfsc	16344,2,c
 19704  001DF4  D7DB               	goto	i1l952
 19705  001DF6  0A1D               	xorlw	29	; case 48
 19706  001DF8  B4D8               	btfsc	16344,2,c
 19707  001DFA  D7E4               	goto	i1l957
 19708                           
 19709                           ;doprnt.c: 589: if(flag & 0x02)
 19710                           
 19711                           ;doprnt.c: 586: }
 19712                           
 19713                           ;doprnt.c: 585: break;
 19714  001DFC  0100               	movlb	0	; () banked
 19715  001DFE  B3B4               	btfsc	i1sprintf@flag& (0+255),1,b
 19716                           
 19717                           ; BSR set to: 0
 19718                           ;doprnt.c: 590: flag &= ~0x01;
 19719  001E00  91B4               	bcf	i1sprintf@flag& (0+255),0,b
 19720                           
 19721                           ; BSR set to: 0
 19722                           ;doprnt.c: 593: if(flag & 0x08)
 19723                           
 19724                           ; BSR set to: 0
 19725  001E02  B7B4               	btfsc	i1sprintf@flag& (0+255),3,b
 19726                           
 19727                           ; BSR set to: 0
 19728                           ;doprnt.c: 594: flag &= ~0x04;
 19729  001E04  95B4               	bcf	i1sprintf@flag& (0+255),2,b
 19730                           
 19731                           ; BSR set to: 0
 19732                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 19733                           
 19734                           ; BSR set to: 0
 19735  001E06  0060  F1AF  FFF6   	movff	i1sprintf@f,16374
 19736  001E0C  0060  F1B3  FFF7   	movff	i1sprintf@f+1,16375
 19737  001E12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19738  001E12  6AF8               	clrf	16376,c
 19739  001E14                     	endif
 19740  001E14                     	if	0	;tblptru may be non-zero
 19741  001E14                     	endif
 19742  001E14  0008               	tblrd		*
 19743  001E16  50F5               	movf	16373,w,c
 19744  001E18  EC46  F042         	call	i1_isdigit
 19745  001E1C  A0D8               	btfss	16344,0,c
 19746  001E1E  D03E               	goto	i1u1406_20
 19747                           
 19748                           ;doprnt.c: 598: width = 0;
 19749  001E20  0E00               	movlw	0
 19750  001E22  0100               	movlb	0	; () banked
 19751  001E24  6FA9               	movwf	(i1sprintf@width+1)& (0+255),b
 19752  001E26  0E00               	movlw	0
 19753  001E28  6FA8               	movwf	i1sprintf@width& (0+255),b
 19754  001E2A                     
 19755                           ;doprnt.c: 600: width *= 10;
 19756                           
 19757                           ; BSR set to: 0
 19758  001E2A  0060  F2A0  F012   	movff	i1sprintf@width,i1___wmul@multiplier
 19759  001E30  0060  F2A4  F013   	movff	i1sprintf@width+1,i1___wmul@multiplier+1
 19760  001E36  0E00               	movlw	0
 19761  001E38  6E15               	movwf	i1___wmul@multiplicand+1,c
 19762  001E3A  0E0A               	movlw	10
 19763  001E3C  6E14               	movwf	i1___wmul@multiplicand,c
 19764  001E3E  ECC9  F041         	call	i1___wmul	;wreg free
 19765  001E42  0060  F048  F0A8   	movff	?i1___wmul,i1sprintf@width
 19766  001E48  0060  F04C  F0A9   	movff	?i1___wmul+1,i1sprintf@width+1
 19767                           
 19768                           ;doprnt.c: 601: width += *f++ - '0';
 19769  001E4E  0ED0               	movlw	208
 19770  001E50  0100               	movlb	0	; () banked
 19771  001E52  6F83               	movwf	??i1_sprintf& (0+255),b
 19772  001E54  0EFF               	movlw	255
 19773  001E56  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 19774  001E58  0060  F1AF  FFF6   	movff	i1sprintf@f,16374
 19775  001E5E  0060  F1B3  FFF7   	movff	i1sprintf@f+1,16375
 19776  001E64                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19777  001E64  6AF8               	clrf	16376,c
 19778  001E66                     	endif
 19779  001E66                     	if	0	;tblptru may be non-zero
 19780  001E66                     	endif
 19781  001E66  0008               	tblrd		*
 19782  001E68  50F5               	movf	16373,w,c
 19783  001E6A  6F85               	movwf	(??i1_sprintf+2)& (0+255),b
 19784  001E6C  6B86               	clrf	(??i1_sprintf+3)& (0+255),b
 19785  001E6E  5183               	movf	??i1_sprintf& (0+255),w,b
 19786  001E70  2785               	addwf	(??i1_sprintf+2)& (0+255),f,b
 19787  001E72  5184               	movf	(??i1_sprintf+1)& (0+255),w,b
 19788  001E74  2386               	addwfc	(??i1_sprintf+3)& (0+255),f,b
 19789  001E76  5185               	movf	(??i1_sprintf+2)& (0+255),w,b
 19790  001E78  27A8               	addwf	i1sprintf@width& (0+255),f,b
 19791  001E7A  5186               	movf	(??i1_sprintf+3)& (0+255),w,b
 19792  001E7C  23A9               	addwfc	(i1sprintf@width+1)& (0+255),f,b
 19793                           
 19794                           ; BSR set to: 0
 19795  001E7E  4B6B               	infsnz	i1sprintf@f& (0+255),f,b
 19796  001E80  2B6C               	incf	(i1sprintf@f+1)& (0+255),f,b
 19797                           
 19798                           ; BSR set to: 0
 19799                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 19800  001E82  0060  F1AF  FFF6   	movff	i1sprintf@f,16374
 19801  001E88  0060  F1B3  FFF7   	movff	i1sprintf@f+1,16375
 19802  001E8E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19803  001E8E  6AF8               	clrf	16376,c
 19804  001E90                     	endif
 19805  001E90                     	if	0	;tblptru may be non-zero
 19806  001E90                     	endif
 19807  001E90  0008               	tblrd		*
 19808  001E92  50F5               	movf	16373,w,c
 19809  001E94  EC46  F042         	call	i1_isdigit
 19810  001E98  B0D8               	btfsc	16344,0,c
 19811  001E9A  D7C7               	goto	i1l963
 19812  001E9C                     i1u1406_20:
 19813                           
 19814                           ;doprnt.c: 608: }
 19815                           ;doprnt.c: 611: if(*f == '.') {
 19816  001E9C  0060  F1AF  FFF6   	movff	i1sprintf@f,16374
 19817  001EA2  0060  F1B3  FFF7   	movff	i1sprintf@f+1,16375
 19818  001EA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19819  001EA8  6AF8               	clrf	16376,c
 19820  001EAA                     	endif
 19821  001EAA                     	if	0	;tblptru may be non-zero
 19822  001EAA                     	endif
 19823  001EAA  0008               	tblrd		*
 19824  001EAC  50F5               	movf	16373,w,c
 19825  001EAE  0A2E               	xorlw	46
 19826  001EB0  A4D8               	btfss	16344,2,c
 19827  001EB2  D038               	goto	i1l965
 19828                           
 19829                           ;doprnt.c: 612: flag |= 0x4000;
 19830  001EB4  0100               	movlb	0	; () banked
 19831  001EB6  8DB5               	bsf	(i1sprintf@flag+1)& (0+255),6,b
 19832                           
 19833                           ;doprnt.c: 613: f++;
 19834  001EB8  4B6B               	infsnz	i1sprintf@f& (0+255),f,b
 19835  001EBA  2B6C               	incf	(i1sprintf@f+1)& (0+255),f,b
 19836                           
 19837                           ; BSR set to: 0
 19838                           ;doprnt.c: 620: {
 19839                           ;doprnt.c: 621: prec = 0;
 19840  001EBC  0E00               	movlw	0
 19841  001EBE  6FB2               	movwf	(i1sprintf@prec+1)& (0+255),b
 19842  001EC0  0E00               	movlw	0
 19843  001EC2  6FB1               	movwf	i1sprintf@prec& (0+255),b
 19844                           
 19845                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 19846  001EC4  D021               	goto	i1l966
 19847  001EC6                     
 19848                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 19849                           
 19850                           ; BSR set to: 0
 19851  001EC6  0060  F2C4  F012   	movff	i1sprintf@prec,i1___wmul@multiplier
 19852  001ECC  0060  F2C8  F013   	movff	i1sprintf@prec+1,i1___wmul@multiplier+1
 19853  001ED2  0E00               	movlw	0
 19854  001ED4  6E15               	movwf	i1___wmul@multiplicand+1,c
 19855  001ED6  0E0A               	movlw	10
 19856  001ED8  6E14               	movwf	i1___wmul@multiplicand,c
 19857  001EDA  ECC9  F041         	call	i1___wmul	;wreg free
 19858  001EDE  0060  F1AF  FFF6   	movff	i1sprintf@f,16374
 19859  001EE4  0060  F1B3  FFF7   	movff	i1sprintf@f+1,16375
 19860  001EEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19861  001EEA  6AF8               	clrf	16376,c
 19862  001EEC                     	endif
 19863  001EEC                     	if	0	;tblptru may be non-zero
 19864  001EEC                     	endif
 19865  001EEC  0008               	tblrd		*
 19866  001EEE  50F5               	movf	16373,w,c
 19867  001EF0  2612               	addwf	?i1___wmul,f,c
 19868  001EF2  0E00               	movlw	0
 19869  001EF4  2213               	addwfc	?i1___wmul+1,f,c
 19870  001EF6  0ED0               	movlw	208
 19871  001EF8  2412               	addwf	?i1___wmul,w,c
 19872  001EFA  0100               	movlb	0	; () banked
 19873  001EFC  6FB1               	movwf	i1sprintf@prec& (0+255),b
 19874  001EFE  0EFF               	movlw	255
 19875  001F00  2013               	addwfc	?i1___wmul+1,w,c
 19876  001F02  6FB2               	movwf	(i1sprintf@prec+1)& (0+255),b
 19877                           
 19878                           ; BSR set to: 0
 19879  001F04  4B6B               	infsnz	i1sprintf@f& (0+255),f,b
 19880  001F06  2B6C               	incf	(i1sprintf@f+1)& (0+255),f,b
 19881  001F08                     i1l966:
 19882                           
 19883                           ; BSR set to: 0
 19884                           
 19885                           ; BSR set to: 0
 19886  001F08  0060  F1AF  FFF6   	movff	i1sprintf@f,16374
 19887  001F0E  0060  F1B3  FFF7   	movff	i1sprintf@f+1,16375
 19888  001F14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19889  001F14  6AF8               	clrf	16376,c
 19890  001F16                     	endif
 19891  001F16                     	if	0	;tblptru may be non-zero
 19892  001F16                     	endif
 19893  001F16  0008               	tblrd		*
 19894  001F18  50F5               	movf	16373,w,c
 19895  001F1A  EC46  F042         	call	i1_isdigit
 19896  001F1E  A0D8               	btfss	16344,0,c
 19897  001F20  D0DE               	goto	i1l971
 19898  001F22  D7D1               	goto	i1l967
 19899  001F24                     i1l965:
 19900                           
 19901                           ;doprnt.c: 626: prec = 0;
 19902  001F24  0E00               	movlw	0
 19903  001F26  0100               	movlb	0	; () banked
 19904  001F28  6FB2               	movwf	(i1sprintf@prec+1)& (0+255),b
 19905  001F2A  0E00               	movlw	0
 19906  001F2C  6FB1               	movwf	i1sprintf@prec& (0+255),b
 19907                           
 19908                           ; BSR set to: 0
 19909                           ;doprnt.c: 628: flag |= 0x1000;
 19910  001F2E  89B5               	bsf	(i1sprintf@flag+1)& (0+255),4,b
 19911                           
 19912                           ; BSR set to: 0
 19913                           ;doprnt.c: 635: switch(c = *f++) {
 19914                           
 19915                           ;doprnt.c: 630: }
 19916                           ;doprnt.c: 633: loop:
 19917                           
 19918                           ; BSR set to: 0
 19919  001F30  D0D6               	goto	i1l971
 19920  001F32                     
 19921                           ; BSR set to: 0
 19922                           ;doprnt.c: 643: flag |= 0x10;
 19923                           
 19924                           ; BSR set to: 0
 19925  001F32  89B4               	bsf	i1sprintf@flag& (0+255),4,b
 19926                           
 19927                           ;doprnt.c: 644: goto loop;
 19928  001F34  D0D4               	goto	i1l971
 19929  001F36                     
 19930                           ; BSR set to: 0
 19931                           ;doprnt.c: 663: flag |= 0x400;
 19932                           
 19933                           ; BSR set to: 0
 19934  001F36  85B5               	bsf	(i1sprintf@flag+1)& (0+255),2,b
 19935                           
 19936                           ;doprnt.c: 664: break;
 19937  001F38  D107               	goto	i1l976
 19938  001F3A                     
 19939                           ; BSR set to: 0
 19940                           ;doprnt.c: 670: flag |= 0x20;
 19941                           
 19942                           ; BSR set to: 0
 19943  001F3A  8BB4               	bsf	i1sprintf@flag& (0+255),5,b
 19944  001F3C                     i1l978:
 19945                           
 19946                           ; BSR set to: 0
 19947                           ;doprnt.c: 673: flag |= 0x100;
 19948  001F3C  81B5               	bsf	(i1sprintf@flag+1)& (0+255),0,b
 19949                           
 19950                           ;doprnt.c: 674: break;
 19951  001F3E  D104               	goto	i1l976
 19952  001F40                     
 19953                           ; BSR set to: 0
 19954                           ;doprnt.c: 680: flag |= 0x20;
 19955                           
 19956                           ; BSR set to: 0
 19957  001F40  8BB4               	bsf	i1sprintf@flag& (0+255),5,b
 19958  001F42                     i1l980:
 19959                           
 19960                           ; BSR set to: 0
 19961                           ;doprnt.c: 683: flag |= 0x200;
 19962  001F42  83B5               	bsf	(i1sprintf@flag+1)& (0+255),1,b
 19963                           
 19964                           ; BSR set to: 0
 19965                           ;doprnt.c: 698: case 'i':
 19966                           ;doprnt.c: 699: break;
 19967                           
 19968                           ; BSR set to: 0
 19969                           
 19970                           ;doprnt.c: 697: case 'd':
 19971                           
 19972                           ;doprnt.c: 684: break;
 19973  001F44  D101               	goto	i1l976
 19974  001F46                     
 19975                           ; BSR set to: 0
 19976                           ;doprnt.c: 721: flag |= 0x80;
 19977                           
 19978                           ; BSR set to: 0
 19979  001F46  8FB4               	bsf	i1sprintf@flag& (0+255),7,b
 19980                           
 19981                           ;doprnt.c: 723: break;
 19982  001F48  D0FF               	goto	i1l976
 19983  001F4A                     
 19984                           ; BSR set to: 0
 19985                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 19986                           
 19987                           ; BSR set to: 0
 19988  001F4A  0060  F283  FFD9   	movff	i1sprintf@ap,16345
 19989  001F50  0060  F287  FFDA   	movff	i1sprintf@ap+1,16346
 19990  001F56  006F FF78  F09C    	movff	16350,i1sprintf@cp
 19991  001F5C  006F FF74  F09D    	movff	16349,i1sprintf@cp+1
 19992                           
 19993                           ; BSR set to: 0
 19994  001F62  0E02               	movlw	2
 19995  001F64  27A0               	addwf	i1sprintf@ap& (0+255),f,b
 19996  001F66  0E00               	movlw	0
 19997  001F68  23A1               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 19998                           
 19999                           ; BSR set to: 0
 20000                           ;doprnt.c: 740: if(!cp)
 20001  001F6A  519C               	movf	i1sprintf@cp& (0+255),w,b
 20002  001F6C  119D               	iorwf	(i1sprintf@cp+1)& (0+255),w,b
 20003  001F6E  A4D8               	btfss	16344,2,c
 20004  001F70  D004               	goto	i1l985
 20005                           
 20006                           ; BSR set to: 0
 20007                           ;doprnt.c: 741: cp = "(null)";
 20008  001F72  0E93               	movlw	low STR_112
 20009  001F74  6F9C               	movwf	i1sprintf@cp& (0+255),b
 20010  001F76  0EFF               	movlw	high STR_112
 20011  001F78  6F9D               	movwf	(i1sprintf@cp+1)& (0+255),b
 20012  001F7A                     i1l985:
 20013                           
 20014                           ; BSR set to: 0
 20015                           ;doprnt.c: 745: len = 0;
 20016                           
 20017                           ; BSR set to: 0
 20018  001F7A  0E00               	movlw	0
 20019  001F7C  6F9F               	movwf	(i1sprintf@len+1)& (0+255),b
 20020  001F7E  0E00               	movlw	0
 20021  001F80  6F9E               	movwf	i1sprintf@len& (0+255),b
 20022                           
 20023                           ;doprnt.c: 746: while(cp[len])
 20024  001F82  D003               	goto	i1l986
 20025  001F84                     
 20026                           ;doprnt.c: 747: len++;
 20027                           
 20028                           ; BSR set to: 0
 20029  001F84  0100               	movlb	0	; () banked
 20030  001F86  4B9E               	infsnz	i1sprintf@len& (0+255),f,b
 20031  001F88  2B9F               	incf	(i1sprintf@len+1)& (0+255),f,b
 20032  001F8A                     i1l986:
 20033                           
 20034                           ; BSR set to: 0
 20035                           
 20036                           ; BSR set to: 0
 20037  001F8A  519E               	movf	i1sprintf@len& (0+255),w,b
 20038  001F8C  259C               	addwf	i1sprintf@cp& (0+255),w,b
 20039  001F8E  6F83               	movwf	??i1_sprintf& (0+255),b
 20040  001F90  519F               	movf	(i1sprintf@len+1)& (0+255),w,b
 20041  001F92  219D               	addwfc	(i1sprintf@cp+1)& (0+255),w,b
 20042  001F94  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 20043  001F96  0060  F20F  FFF6   	movff	??i1_sprintf,16374
 20044  001F9C  0060  F213  FFF7   	movff	??i1_sprintf+1,16375
 20045  001FA2  0E00               	movlw	low (__mediumconst shr (0+16))
 20046  001FA4  6EF8               	movwf	16376,c
 20047  001FA6  0E0F               	movlw	(high __ramtop+-1)
 20048  001FA8  64F7               	cpfsgt	16375,c
 20049  001FAA  D003               	bra	i1u1410_27
 20050  001FAC  0008               	tblrd		*
 20051  001FAE  50F5               	movf	16373,w,c
 20052  001FB0  D007               	bra	i1u1410_20
 20053  001FB2                     i1u1410_27:
 20054  001FB2  006F FFDB FFE9     	movff	16374,16361
 20055  001FB8  006F FFDF FFEA     	movff	16375,16362
 20056  001FBE  50EF               	movf	16367,w,c
 20057  001FC0                     i1u1410_20:
 20058  001FC0  0900               	iorlw	0
 20059  001FC2  A4D8               	btfss	16344,2,c
 20060  001FC4  D7DF               	goto	i1l987
 20061  001FC6                     i1u1411_20:
 20062                           
 20063                           ;doprnt.c: 753: if(prec && prec < len)
 20064                           
 20065                           ;doprnt.c: 750: dostring:
 20066  001FC6  0100               	movlb	0	; () banked
 20067  001FC8  51B1               	movf	i1sprintf@prec& (0+255),w,b
 20068  001FCA  11B2               	iorwf	(i1sprintf@prec+1)& (0+255),w,b
 20069  001FCC  B4D8               	btfsc	16344,2,c
 20070  001FCE  D00C               	goto	i1l990
 20071                           
 20072                           ; BSR set to: 0
 20073  001FD0  519E               	movf	i1sprintf@len& (0+255),w,b
 20074  001FD2  5DB1               	subwf	i1sprintf@prec& (0+255),w,b
 20075  001FD4  519F               	movf	(i1sprintf@len+1)& (0+255),w,b
 20076  001FD6  59B2               	subwfb	(i1sprintf@prec+1)& (0+255),w,b
 20077  001FD8  B0D8               	btfsc	16344,0,c
 20078  001FDA  D006               	goto	i1l990
 20079                           
 20080                           ; BSR set to: 0
 20081                           ;doprnt.c: 754: len = prec;
 20082  001FDC  0060  F2C4  F09E   	movff	i1sprintf@prec,i1sprintf@len
 20083  001FE2  0060  F2C8  F09F   	movff	i1sprintf@prec+1,i1sprintf@len+1
 20084  001FE8                     i1l990:
 20085                           
 20086                           ; BSR set to: 0
 20087                           ;doprnt.c: 757: if(width > len)
 20088                           
 20089                           ; BSR set to: 0
 20090  001FE8  51A8               	movf	i1sprintf@width& (0+255),w,b
 20091  001FEA  5D9E               	subwf	i1sprintf@len& (0+255),w,b
 20092  001FEC  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 20093  001FEE  599F               	subwfb	(i1sprintf@len+1)& (0+255),w,b
 20094  001FF0  B0D8               	btfsc	16344,0,c
 20095  001FF2  D005               	goto	i1l991
 20096                           
 20097                           ; BSR set to: 0
 20098                           ;doprnt.c: 758: width -= len;
 20099  001FF4  519E               	movf	i1sprintf@len& (0+255),w,b
 20100  001FF6  5FA8               	subwf	i1sprintf@width& (0+255),f,b
 20101  001FF8  519F               	movf	(i1sprintf@len+1)& (0+255),w,b
 20102  001FFA  5BA9               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 20103  001FFC  D004               	goto	i1l992
 20104  001FFE                     i1l991:
 20105                           
 20106                           ; BSR set to: 0
 20107                           ;doprnt.c: 759: else
 20108                           ;doprnt.c: 760: width = 0;
 20109                           
 20110                           ; BSR set to: 0
 20111  001FFE  0E00               	movlw	0
 20112  002000  6FA9               	movwf	(i1sprintf@width+1)& (0+255),b
 20113  002002  0E00               	movlw	0
 20114  002004  6FA8               	movwf	i1sprintf@width& (0+255),b
 20115  002006                     i1l992:
 20116                           
 20117                           ; BSR set to: 0
 20118                           ;doprnt.c: 762: if(!(flag & 0x08))
 20119                           
 20120                           ; BSR set to: 0
 20121  002006  A7B4               	btfss	i1sprintf@flag& (0+255),3,b
 20122  002008  D00B               	goto	i1l994
 20123  00200A  D034               	goto	i1l997
 20124  00200C                     i1l10933:
 20125                           
 20126                           ; BSR set to: 0
 20127                           ;doprnt.c: 765: ((*sp++ = (' ')));
 20128  00200C  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 20129  002012  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 20130  002018  0E20               	movlw	32
 20131  00201A  6EDF               	movwf	16351,c
 20132                           
 20133                           ; BSR set to: 0
 20134  00201C  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 20135  00201E  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 20136  002020                     i1l994:
 20137                           
 20138                           ; BSR set to: 0
 20139                           
 20140                           ; BSR set to: 0
 20141  002020  07A8               	decf	i1sprintf@width& (0+255),f,b
 20142  002022  A0D8               	btfss	16344,0,c
 20143  002024  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 20144  002026  29A8               	incf	i1sprintf@width& (0+255),w,b
 20145  002028  E1F1               	bnz	i1l10933
 20146  00202A  29A9               	incf	(i1sprintf@width+1)& (0+255),w,b
 20147  00202C  B4D8               	btfsc	16344,2,c
 20148  00202E  D022               	goto	i1l997
 20149  002030  D7ED               	goto	i1l995
 20150  002032                     i1l10939:
 20151                           
 20152                           ; BSR set to: 0
 20153                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 20154  002032  0060  F273  FFF6   	movff	i1sprintf@cp,16374
 20155  002038  0060  F277  FFF7   	movff	i1sprintf@cp+1,16375
 20156  00203E  0E00               	movlw	low (__mediumconst shr (0+16))
 20157  002040  6EF8               	movwf	16376,c
 20158  002042  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 20159  002048  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 20160  00204E  0E0F               	movlw	(high __ramtop+-1)
 20161  002050  64F7               	cpfsgt	16375,c
 20162  002052  D003               	bra	i1u1417_27
 20163  002054  0008               	tblrd		*
 20164  002056  50F5               	movf	16373,w,c
 20165  002058  D007               	bra	i1u1417_20
 20166  00205A                     i1u1417_27:
 20167  00205A  006F FFDB FFE9     	movff	16374,16361
 20168  002060  006F FFDF FFEA     	movff	16375,16362
 20169  002066  50EF               	movf	16367,w,c
 20170  002068                     i1u1417_20:
 20171  002068  6EDF               	movwf	16351,c
 20172  00206A  0100               	movlb	0	; () banked
 20173  00206C  4B9C               	infsnz	i1sprintf@cp& (0+255),f,b
 20174  00206E  2B9D               	incf	(i1sprintf@cp+1)& (0+255),f,b
 20175                           
 20176                           ; BSR set to: 0
 20177  002070  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 20178  002072  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 20179  002074                     i1l997:
 20180                           
 20181                           ; BSR set to: 0
 20182                           
 20183                           ; BSR set to: 0
 20184  002074  079E               	decf	i1sprintf@len& (0+255),f,b
 20185  002076  A0D8               	btfss	16344,0,c
 20186  002078  079F               	decf	(i1sprintf@len+1)& (0+255),f,b
 20187  00207A  299E               	incf	i1sprintf@len& (0+255),w,b
 20188  00207C  E1DA               	bnz	i1l10939
 20189  00207E  299F               	incf	(i1sprintf@len+1)& (0+255),w,b
 20190  002080  A4D8               	btfss	16344,2,c
 20191  002082  D7D7               	goto	i1l998
 20192                           
 20193                           ; BSR set to: 0
 20194                           ;doprnt.c: 770: if(flag & 0x08)
 20195  002084  B7B4               	btfsc	i1sprintf@flag& (0+255),3,b
 20196  002086  D00C               	goto	i1l1001
 20197  002088  EFF1  F01C         	goto	i1u1549_20
 20198  00208C                     i1l10949:
 20199                           
 20200                           ; BSR set to: 0
 20201                           ;doprnt.c: 772: ((*sp++ = (' ')));
 20202  00208C  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 20203  002092  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 20204  002098  0E20               	movlw	32
 20205  00209A  6EDF               	movwf	16351,c
 20206                           
 20207                           ; BSR set to: 0
 20208  00209C  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 20209  00209E  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 20210  0020A0                     i1l1001:
 20211                           
 20212                           ; BSR set to: 0
 20213                           
 20214                           ; BSR set to: 0
 20215  0020A0  07A8               	decf	i1sprintf@width& (0+255),f,b
 20216  0020A2  A0D8               	btfss	16344,0,c
 20217  0020A4  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 20218  0020A6  29A8               	incf	i1sprintf@width& (0+255),w,b
 20219  0020A8  E1F1               	bnz	i1l10949
 20220  0020AA  29A9               	incf	(i1sprintf@width+1)& (0+255),w,b
 20221  0020AC  B4D8               	btfsc	16344,2,c
 20222  0020AE  EFF1  F01C         	goto	i1u1549_20
 20223  0020B2  D7EC               	goto	i1l1002
 20224  0020B4                     
 20225                           ; BSR set to: 0
 20226                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 20227                           
 20228                           ; BSR set to: 0
 20229  0020B4  0060  F283  FFD9   	movff	i1sprintf@ap,16345
 20230  0020BA  0060  F287  FFDA   	movff	i1sprintf@ap+1,16346
 20231  0020C0  50DF               	movf	16351,w,c
 20232  0020C2  6FB3               	movwf	i1sprintf@c& (0+255),b
 20233                           
 20234                           ; BSR set to: 0
 20235  0020C4  0E02               	movlw	2
 20236  0020C6  27A0               	addwf	i1sprintf@ap& (0+255),f,b
 20237  0020C8  0E00               	movlw	0
 20238  0020CA  23A1               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 20239  0020CC                     
 20240                           ; BSR set to: 0
 20241                           ;doprnt.c: 805: cp = (char *)&c;
 20242                           
 20243                           ; BSR set to: 0
 20244  0020CC  0EB3               	movlw	low i1sprintf@c
 20245  0020CE  6F9C               	movwf	i1sprintf@cp& (0+255),b
 20246  0020D0  0E00               	movlw	high i1sprintf@c
 20247  0020D2  6F9D               	movwf	(i1sprintf@cp+1)& (0+255),b
 20248                           
 20249                           ; BSR set to: 0
 20250                           ;doprnt.c: 806: len = 1;
 20251  0020D4  0E00               	movlw	0
 20252  0020D6  6F9F               	movwf	(i1sprintf@len+1)& (0+255),b
 20253  0020D8  0E01               	movlw	1
 20254  0020DA  6F9E               	movwf	i1sprintf@len& (0+255),b
 20255                           
 20256                           ;doprnt.c: 807: goto dostring;
 20257  0020DC  D774               	goto	i1u1411_20
 20258  0020DE                     i1l971:
 20259                           
 20260                           ; BSR set to: 0
 20261  0020DE  0060  F1AF  FFF6   	movff	i1sprintf@f,16374
 20262  0020E4  0060  F1B3  FFF7   	movff	i1sprintf@f+1,16375
 20263  0020EA  0100               	movlb	0	; () banked
 20264  0020EC  4B6B               	infsnz	i1sprintf@f& (0+255),f,b
 20265  0020EE  2B6C               	incf	(i1sprintf@f+1)& (0+255),f,b
 20266  0020F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20267  0020F0  6AF8               	clrf	16376,c
 20268  0020F2                     	endif
 20269  0020F2                     	if	0	;tblptru may be non-zero
 20270  0020F2                     	endif
 20271  0020F2  0008               	tblrd		*
 20272  0020F4  006F FFD4  F0B3    	movff	16373,i1sprintf@c
 20273  0020FA  51B3               	movf	i1sprintf@c& (0+255),w,b
 20274                           
 20275                           ; Switch size 1, requested type "space"
 20276                           ; Number of cases is 12, Range of values is 0 to 120
 20277                           ; switch strategies available:
 20278                           ; Name         Instructions Cycles
 20279                           ; simple_byte           37    19 (average)
 20280                           ;	Chosen strategy is simple_byte
 20281  0020FC  0A00               	xorlw	0	; case 0
 20282  0020FE  B4D8               	btfsc	16344,2,c
 20283  002100  EF02  F01D         	goto	i1u1550_20
 20284  002104  0A45               	xorlw	69	; case 69
 20285  002106  B4D8               	btfsc	16344,2,c
 20286  002108  D718               	goto	i1l977
 20287  00210A  0A02               	xorlw	2	; case 71
 20288  00210C  B4D8               	btfsc	16344,2,c
 20289  00210E  D718               	goto	i1l979
 20290  002110  0A24               	xorlw	36	; case 99
 20291  002112  B4D8               	btfsc	16344,2,c
 20292  002114  D7CF               	goto	i1l1004
 20293  002116  0A07               	xorlw	7	; case 100
 20294  002118  B4D8               	btfsc	16344,2,c
 20295  00211A  D016               	goto	i1l976
 20296  00211C  0A01               	xorlw	1	; case 101
 20297  00211E  B4D8               	btfsc	16344,2,c
 20298  002120  D70D               	goto	i1l978
 20299  002122  0A03               	xorlw	3	; case 102
 20300  002124  B4D8               	btfsc	16344,2,c
 20301  002126  D707               	goto	i1l975
 20302  002128  0A01               	xorlw	1	; case 103
 20303  00212A  B4D8               	btfsc	16344,2,c
 20304  00212C  D70A               	goto	i1l980
 20305  00212E  0A0E               	xorlw	14	; case 105
 20306  002130  B4D8               	btfsc	16344,2,c
 20307  002132  D00A               	goto	i1l976
 20308  002134  0A05               	xorlw	5	; case 108
 20309  002136  B4D8               	btfsc	16344,2,c
 20310  002138  D6FC               	goto	i1l974
 20311  00213A  0A1F               	xorlw	31	; case 115
 20312  00213C  B4D8               	btfsc	16344,2,c
 20313  00213E  D705               	goto	i1l984
 20314  002140  0A0B               	xorlw	11	; case 120
 20315  002142  B4D8               	btfsc	16344,2,c
 20316  002144  D700               	goto	i1l983
 20317  002146  D7C2               	goto	i1l1005
 20318  002148                     i1l976:
 20319                           
 20320                           ; BSR set to: 0
 20321                           ;doprnt.c: 825: if(flag & (0x700)) {
 20322                           
 20323                           ; BSR set to: 0
 20324  002148  0E07               	movlw	7
 20325  00214A  15B5               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 20326  00214C  B4D8               	btfsc	16344,2,c
 20327  00214E  EF2B  F01A         	goto	i1l1006
 20328                           
 20329                           ; BSR set to: 0
 20330                           ;doprnt.c: 827: if(flag & 0x1000)
 20331  002152  A9B5               	btfss	(i1sprintf@flag+1)& (0+255),4,b
 20332  002154  D004               	goto	i1l1007
 20333                           
 20334                           ; BSR set to: 0
 20335                           ;doprnt.c: 829: prec = 6;
 20336  002156  0E00               	movlw	0
 20337  002158  6FB2               	movwf	(i1sprintf@prec+1)& (0+255),b
 20338  00215A  0E06               	movlw	6
 20339  00215C  6FB1               	movwf	i1sprintf@prec& (0+255),b
 20340  00215E                     i1l1007:
 20341                           
 20342                           ; BSR set to: 0
 20343                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 20344                           
 20345                           ; BSR set to: 0
 20346  00215E  0060  F283  FFD9   	movff	i1sprintf@ap,16345
 20347  002164  0060  F287  FFDA   	movff	i1sprintf@ap+1,16346
 20348  00216A  006F FF78  F0AE    	movff	16350,i1sprintf@fval
 20349  002170  006F FF78  F0AF    	movff	16350,i1sprintf@fval+1
 20350  002176  006F FF74  F0B0    	movff	16349,i1sprintf@fval+2
 20351                           
 20352                           ; BSR set to: 0
 20353  00217C  0E03               	movlw	3
 20354  00217E  27A0               	addwf	i1sprintf@ap& (0+255),f,b
 20355  002180  0E00               	movlw	0
 20356  002182  23A1               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 20357                           
 20358                           ; BSR set to: 0
 20359                           ;doprnt.c: 831: if(fval < 0.0) {
 20360  002184  AFB0               	btfss	(i1sprintf@fval+2)& (0+255),7,b
 20361  002186  D017               	goto	i1l1008
 20362                           
 20363                           ; BSR set to: 0
 20364                           ;doprnt.c: 832: fval = -fval;
 20365  002188  0060  F2B8  F030   	movff	i1sprintf@fval,i1___ftneg@f1
 20366  00218E  0060  F2BC  F031   	movff	i1sprintf@fval+1,i1___ftneg@f1+1
 20367  002194  0060  F2C0  F032   	movff	i1sprintf@fval+2,i1___ftneg@f1+2
 20368  00219A  EC0B  F042         	call	i1___ftneg	;wreg free
 20369  00219E  0060  F0C0  F0AE   	movff	?i1___ftneg,i1sprintf@fval
 20370  0021A4  0060  F0C4  F0AF   	movff	?i1___ftneg+1,i1sprintf@fval+1
 20371  0021AA  0060  F0C8  F0B0   	movff	?i1___ftneg+2,i1sprintf@fval+2
 20372                           
 20373                           ;doprnt.c: 833: flag |= 0x03;
 20374  0021B0  0E03               	movlw	3
 20375  0021B2  0100               	movlb	0	; () banked
 20376  0021B4  13B4               	iorwf	i1sprintf@flag& (0+255),f,b
 20377  0021B6                     i1l1008:
 20378                           
 20379                           ; BSR set to: 0
 20380                           ;doprnt.c: 834: }
 20381                           ;doprnt.c: 835: exp = 0;
 20382                           
 20383                           ; BSR set to: 0
 20384  0021B6  0E00               	movlw	0
 20385  0021B8  6FA7               	movwf	(i1sprintf@exp+1)& (0+255),b
 20386  0021BA  0E00               	movlw	0
 20387  0021BC  6FA6               	movwf	i1sprintf@exp& (0+255),b
 20388                           
 20389                           ; BSR set to: 0
 20390                           ;doprnt.c: 836: if( fval!=0) {
 20391  0021BE  51AE               	movf	i1sprintf@fval& (0+255),w,b
 20392  0021C0  11AF               	iorwf	(i1sprintf@fval+1)& (0+255),w,b
 20393  0021C2  11B0               	iorwf	(i1sprintf@fval+2)& (0+255),w,b
 20394  0021C4  B4D8               	btfsc	16344,2,c
 20395  0021C6  D0A5               	goto	i1l1013
 20396                           
 20397                           ; BSR set to: 0
 20398                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 20399  0021C8  0E82               	movlw	130
 20400  0021CA  6F83               	movwf	??i1_sprintf& (0+255),b
 20401  0021CC  0EFF               	movlw	255
 20402  0021CE  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 20403  0021D0  0060  F2B8  F085   	movff	i1sprintf@fval,??i1_sprintf+2
 20404  0021D6  0060  F2BC  F086   	movff	i1sprintf@fval+1,??i1_sprintf+3
 20405  0021DC  0060  F2C0  F087   	movff	i1sprintf@fval+2,??i1_sprintf+4
 20406  0021E2  0060  F2C4  F088   	movff	i1sprintf@fval+3,??i1_sprintf+5
 20407  0021E8  0E10               	movlw	16
 20408  0021EA  D005               	goto	i1u1425_20
 20409  0021EC                     i1u1425_25:
 20410  0021EC  90D8               	bcf	16344,0,c
 20411  0021EE  3388               	rrcf	(??i1_sprintf+5)& (0+255),f,b
 20412  0021F0  3387               	rrcf	(??i1_sprintf+4)& (0+255),f,b
 20413  0021F2  3386               	rrcf	(??i1_sprintf+3)& (0+255),f,b
 20414  0021F4  3385               	rrcf	(??i1_sprintf+2)& (0+255),f,b
 20415  0021F6                     i1u1425_20:
 20416  0021F6  2EE8               	decfsz	16360,f,c
 20417  0021F8  D7F9               	goto	i1u1425_25
 20418  0021FA  5185               	movf	(??i1_sprintf+2)& (0+255),w,b
 20419  0021FC  2583               	addwf	??i1_sprintf& (0+255),w,b
 20420  0021FE  6FA6               	movwf	i1sprintf@exp& (0+255),b
 20421  002200  0E00               	movlw	0
 20422  002202  2184               	addwfc	(??i1_sprintf+1)& (0+255),w,b
 20423  002204  6FA7               	movwf	(i1sprintf@exp+1)& (0+255),b
 20424                           
 20425                           ; BSR set to: 0
 20426                           ;doprnt.c: 838: exp--;
 20427  002206  07A6               	decf	i1sprintf@exp& (0+255),f,b
 20428  002208  A0D8               	btfss	16344,0,c
 20429  00220A  07A7               	decf	(i1sprintf@exp+1)& (0+255),f,b
 20430                           
 20431                           ; BSR set to: 0
 20432                           ;doprnt.c: 839: exp *= 3;
 20433  00220C  0060  F298  F012   	movff	i1sprintf@exp,i1___wmul@multiplier
 20434  002212  0060  F29C  F013   	movff	i1sprintf@exp+1,i1___wmul@multiplier+1
 20435  002218  0E00               	movlw	0
 20436  00221A  6E15               	movwf	i1___wmul@multiplicand+1,c
 20437  00221C  0E03               	movlw	3
 20438  00221E  6E14               	movwf	i1___wmul@multiplicand,c
 20439  002220  ECC9  F041         	call	i1___wmul	;wreg free
 20440  002224  0060  F048  F0A6   	movff	?i1___wmul,i1sprintf@exp
 20441  00222A  0060  F04C  F0A7   	movff	?i1___wmul+1,i1sprintf@exp+1
 20442                           
 20443                           ;doprnt.c: 840: exp /= 10;
 20444  002230  0060  F298  F00A   	movff	i1sprintf@exp,i1___awdiv@dividend
 20445  002236  0060  F29C  F00B   	movff	i1sprintf@exp+1,i1___awdiv@dividend+1
 20446  00223C  0E00               	movlw	0
 20447  00223E  6E0D               	movwf	i1___awdiv@divisor+1,c
 20448  002240  0E0A               	movlw	10
 20449  002242  6E0C               	movwf	i1___awdiv@divisor,c
 20450  002244  ECEC  F03A         	call	i1___awdiv	;wreg free
 20451  002248  0060  F028  F0A6   	movff	?i1___awdiv,i1sprintf@exp
 20452  00224E  0060  F02C  F0A7   	movff	?i1___awdiv+1,i1sprintf@exp+1
 20453                           
 20454                           ;doprnt.c: 841: if(exp < 0)
 20455  002254  0100               	movlb	0	; () banked
 20456  002256  AFA7               	btfss	(i1sprintf@exp+1)& (0+255),7,b
 20457  002258  D003               	goto	i1l1010
 20458                           
 20459                           ; BSR set to: 0
 20460                           ;doprnt.c: 842: exp--;
 20461  00225A  07A6               	decf	i1sprintf@exp& (0+255),f,b
 20462  00225C  A0D8               	btfss	16344,0,c
 20463  00225E  07A7               	decf	(i1sprintf@exp+1)& (0+255),f,b
 20464  002260                     i1l1010:
 20465                           
 20466                           ; BSR set to: 0
 20467                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 20468                           
 20469                           ; BSR set to: 0
 20470  002260  51A6               	movf	i1sprintf@exp& (0+255),w,b
 20471  002262  0800               	sublw	0
 20472  002264  EC93  F01F         	call	i1_scale
 20473  002268  0060  F108  F0A2   	movff	?i1_scale,i1sprintf@tmpval
 20474  00226E  0060  F10C  F0A3   	movff	?i1_scale+1,i1sprintf@tmpval+1
 20475  002274  0060  F110  F0A4   	movff	?i1_scale+2,i1sprintf@tmpval+2
 20476                           
 20477                           ;doprnt.c: 847: tmpval.integ *= fval;
 20478  00227A  0060  F288  F033   	movff	i1sprintf@tmpval,i1___ftmul@f1
 20479  002280  0060  F28C  F034   	movff	i1sprintf@tmpval+1,i1___ftmul@f1+1
 20480  002286  0060  F290  F035   	movff	i1sprintf@tmpval+2,i1___ftmul@f1+2
 20481  00228C  0060  F2B8  F036   	movff	i1sprintf@fval,i1___ftmul@f2
 20482  002292  0060  F2BC  F037   	movff	i1sprintf@fval+1,i1___ftmul@f2+1
 20483  002298  0060  F2C0  F038   	movff	i1sprintf@fval+2,i1___ftmul@f2+2
 20484  00229E  ECD6  F030         	call	i1___ftmul	;wreg free
 20485  0022A2  0060  F0CC  F0A2   	movff	?i1___ftmul,i1sprintf@tmpval
 20486  0022A8  0060  F0D0  F0A3   	movff	?i1___ftmul+1,i1sprintf@tmpval+1
 20487  0022AE  0060  F0D4  F0A4   	movff	?i1___ftmul+2,i1sprintf@tmpval+2
 20488                           
 20489                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 20490  0022B4  0060  F288  F060   	movff	i1sprintf@tmpval,i1___ftge@ff1
 20491  0022BA  0060  F28C  F061   	movff	i1sprintf@tmpval+1,i1___ftge@ff1+1
 20492  0022C0  0060  F290  F062   	movff	i1sprintf@tmpval+2,i1___ftge@ff1+2
 20493  0022C6  0E00               	movlw	0
 20494  0022C8  0100               	movlb	0	; () banked
 20495  0022CA  6F63               	movwf	i1___ftge@ff2& (0+255),b
 20496  0022CC  0E80               	movlw	128
 20497  0022CE  6F64               	movwf	(i1___ftge@ff2+1)& (0+255),b
 20498  0022D0  0E3F               	movlw	63
 20499  0022D2  6F65               	movwf	(i1___ftge@ff2+2)& (0+255),b
 20500  0022D4  EC88  F039         	call	i1___ftge	;wreg free
 20501  0022D8  0100               	movlb	0	; () banked
 20502  0022DA  B0D8               	btfsc	16344,0,c
 20503  0022DC  D004               	goto	i1l1011
 20504                           
 20505                           ; BSR set to: 0
 20506                           ;doprnt.c: 849: exp--;
 20507  0022DE  07A6               	decf	i1sprintf@exp& (0+255),f,b
 20508  0022E0  A0D8               	btfss	16344,0,c
 20509  0022E2  07A7               	decf	(i1sprintf@exp+1)& (0+255),f,b
 20510  0022E4  D016               	goto	i1l1013
 20511  0022E6                     i1l1011:
 20512                           
 20513                           ; BSR set to: 0
 20514                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 20515                           
 20516                           ; BSR set to: 0
 20517  0022E6  0060  F288  F060   	movff	i1sprintf@tmpval,i1___ftge@ff1
 20518  0022EC  0060  F28C  F061   	movff	i1sprintf@tmpval+1,i1___ftge@ff1+1
 20519  0022F2  0060  F290  F062   	movff	i1sprintf@tmpval+2,i1___ftge@ff1+2
 20520  0022F8  0E00               	movlw	0
 20521  0022FA  6F63               	movwf	i1___ftge@ff2& (0+255),b
 20522  0022FC  0E20               	movlw	32
 20523  0022FE  6F64               	movwf	(i1___ftge@ff2+1)& (0+255),b
 20524  002300  0E41               	movlw	65
 20525  002302  6F65               	movwf	(i1___ftge@ff2+2)& (0+255),b
 20526  002304  EC88  F039         	call	i1___ftge	;wreg free
 20527  002308  0100               	movlb	0	; () banked
 20528  00230A  A0D8               	btfss	16344,0,c
 20529  00230C  D002               	goto	i1l1013
 20530                           
 20531                           ; BSR set to: 0
 20532                           ;doprnt.c: 851: exp++;
 20533  00230E  4BA6               	infsnz	i1sprintf@exp& (0+255),f,b
 20534  002310  2BA7               	incf	(i1sprintf@exp+1)& (0+255),f,b
 20535  002312                     i1l1013:
 20536                           
 20537                           ; BSR set to: 0
 20538                           ;doprnt.c: 852: }
 20539                           ;doprnt.c: 854: if(exp <= 0)
 20540                           
 20541                           ; BSR set to: 0
 20542                           
 20543                           ; BSR set to: 0
 20544                           
 20545                           ; BSR set to: 0
 20546  002312  BFA7               	btfsc	(i1sprintf@exp+1)& (0+255),7,b
 20547  002314  D005               	goto	i1u1429_20
 20548  002316  51A7               	movf	(i1sprintf@exp+1)& (0+255),w,b
 20549  002318  E106               	bnz	i1l1014
 20550  00231A  05A6               	decf	i1sprintf@exp& (0+255),w,b
 20551  00231C  B0D8               	btfsc	16344,0,c
 20552  00231E  D003               	goto	i1l1014
 20553  002320                     i1u1429_20:
 20554                           
 20555                           ; BSR set to: 0
 20556                           ;doprnt.c: 855: c = 1;
 20557  002320  0E01               	movlw	1
 20558  002322  6FB3               	movwf	i1sprintf@c& (0+255),b
 20559  002324  D003               	goto	i1l1015
 20560  002326                     i1l1014:
 20561                           
 20562                           ; BSR set to: 0
 20563                           ;doprnt.c: 856: else
 20564                           ;doprnt.c: 857: c = exp;
 20565  002326  0060  F298  F0B3   	movff	i1sprintf@exp,i1sprintf@c
 20566  00232C                     i1l1015:
 20567                           
 20568                           ; BSR set to: 0
 20569                           ;doprnt.c: 858: if(
 20570                           ;doprnt.c: 860: flag & 0x100
 20571                           ;doprnt.c: 862: ||
 20572                           ;doprnt.c: 866: flag & 0x200 && (exp < -4 || exp >= (int)prec)
 20573                           ;doprnt.c: 868: ) {
 20574  00232C  B1B5               	btfsc	(i1sprintf@flag+1)& (0+255),0,b
 20575  00232E  D016               	goto	i1u1433_20
 20576                           
 20577                           ; BSR set to: 0
 20578  002330  A3B5               	btfss	(i1sprintf@flag+1)& (0+255),1,b
 20579  002332  EFBE  F015         	goto	i1l1016
 20580                           
 20581                           ; BSR set to: 0
 20582  002336  AFA7               	btfss	(i1sprintf@exp+1)& (0+255),7,b
 20583  002338  D006               	goto	i1u1432_20
 20584  00233A  0EFC               	movlw	252
 20585  00233C  5DA6               	subwf	i1sprintf@exp& (0+255),w,b
 20586  00233E  0EFF               	movlw	255
 20587  002340  59A7               	subwfb	(i1sprintf@exp+1)& (0+255),w,b
 20588  002342  A0D8               	btfss	16344,0,c
 20589  002344  D00B               	goto	i1u1433_20
 20590  002346                     i1u1432_20:
 20591                           
 20592                           ; BSR set to: 0
 20593  002346  51B1               	movf	i1sprintf@prec& (0+255),w,b
 20594  002348  5DA6               	subwf	i1sprintf@exp& (0+255),w,b
 20595  00234A  51A7               	movf	(i1sprintf@exp+1)& (0+255),w,b
 20596  00234C  0A80               	xorlw	128
 20597  00234E  6F83               	movwf	??i1_sprintf& (0+255),b
 20598  002350  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 20599  002352  0A80               	xorlw	128
 20600  002354  5983               	subwfb	??i1_sprintf& (0+255),w,b
 20601  002356  A0D8               	btfss	16344,0,c
 20602  002358  EFBE  F015         	goto	i1l1016
 20603  00235C                     i1u1433_20:
 20604                           
 20605                           ; BSR set to: 0
 20606                           ;doprnt.c: 870: if(prec && flag & 0x200)
 20607                           
 20608                           ; BSR set to: 0
 20609                           
 20610                           ; BSR set to: 0
 20611  00235C  51B1               	movf	i1sprintf@prec& (0+255),w,b
 20612  00235E  11B2               	iorwf	(i1sprintf@prec+1)& (0+255),w,b
 20613  002360  A4D8               	btfss	16344,2,c
 20614                           
 20615                           ; BSR set to: 0
 20616  002362  A3B5               	btfss	(i1sprintf@flag+1)& (0+255),1,b
 20617  002364  D003               	goto	i1l1021
 20618                           
 20619                           ; BSR set to: 0
 20620                           ;doprnt.c: 871: prec--;
 20621  002366  07B1               	decf	i1sprintf@prec& (0+255),f,b
 20622  002368  A0D8               	btfss	16344,0,c
 20623  00236A  07B2               	decf	(i1sprintf@prec+1)& (0+255),f,b
 20624  00236C                     i1l1021:
 20625                           
 20626                           ; BSR set to: 0
 20627                           ;doprnt.c: 873: if((unsigned)prec > (sizeof dpowers/sizeof dpowers[0]) - 2)
 20628                           
 20629                           ; BSR set to: 0
 20630  00236C  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 20631  00236E  E104               	bnz	i1u1436_20
 20632  002370  0E09               	movlw	9
 20633  002372  5DB1               	subwf	i1sprintf@prec& (0+255),w,b
 20634  002374  A0D8               	btfss	16344,0,c
 20635  002376  D003               	goto	i1l1022
 20636  002378                     i1u1436_20:
 20637                           
 20638                           ; BSR set to: 0
 20639                           ;doprnt.c: 874: c = (sizeof dpowers/sizeof dpowers[0]) - 2;
 20640  002378  0E08               	movlw	8
 20641  00237A  6FB3               	movwf	i1sprintf@c& (0+255),b
 20642  00237C  D003               	goto	i1l1023
 20643  00237E                     i1l1022:
 20644                           
 20645                           ; BSR set to: 0
 20646                           ;doprnt.c: 875: else
 20647                           ;doprnt.c: 876: c = prec;
 20648  00237E  0060  F2C4  F0B3   	movff	i1sprintf@prec,i1sprintf@c
 20649  002384                     i1l1023:
 20650                           
 20651                           ; BSR set to: 0
 20652                           ;doprnt.c: 877: if( fval!=0) {
 20653                           
 20654                           ; BSR set to: 0
 20655  002384  51AE               	movf	i1sprintf@fval& (0+255),w,b
 20656  002386  11AF               	iorwf	(i1sprintf@fval+1)& (0+255),w,b
 20657  002388  11B0               	iorwf	(i1sprintf@fval+2)& (0+255),w,b
 20658  00238A  B4D8               	btfsc	16344,2,c
 20659  00238C  D11D               	goto	i1l1028
 20660                           
 20661                           ; BSR set to: 0
 20662                           ;doprnt.c: 878: fval /= scale(exp-c);
 20663  00238E  0060  F2B8  F049   	movff	i1sprintf@fval,i1___ftdiv@f1
 20664  002394  0060  F2BC  F04A   	movff	i1sprintf@fval+1,i1___ftdiv@f1+1
 20665  00239A  0060  F2C0  F04B   	movff	i1sprintf@fval+2,i1___ftdiv@f1+2
 20666  0023A0  51B3               	movf	i1sprintf@c& (0+255),w,b
 20667  0023A2  0800               	sublw	0
 20668  0023A4  25A6               	addwf	i1sprintf@exp& (0+255),w,b
 20669  0023A6  EC93  F01F         	call	i1_scale
 20670  0023AA  0060  F108  F04C   	movff	?i1_scale,i1___ftdiv@f2
 20671  0023B0  0060  F10C  F04D   	movff	?i1_scale+1,i1___ftdiv@f2+1
 20672  0023B6  0060  F110  F04E   	movff	?i1_scale+2,i1___ftdiv@f2+2
 20673  0023BC  EC61  F033         	call	i1___ftdiv	;wreg free
 20674  0023C0  0060  F124  F0AE   	movff	?i1___ftdiv,i1sprintf@fval
 20675  0023C6  0060  F128  F0AF   	movff	?i1___ftdiv+1,i1sprintf@fval+1
 20676  0023CC  0060  F12C  F0B0   	movff	?i1___ftdiv+2,i1sprintf@fval+2
 20677                           
 20678                           ;doprnt.c: 893: if(fval - (double)(unsigned long)fval >= 0.5)
 20679  0023D2  0060  F2B8  F04F   	movff	i1sprintf@fval,i1___ftadd@f2
 20680  0023D8  0060  F2BC  F050   	movff	i1sprintf@fval+1,i1___ftadd@f2+1
 20681  0023DE  0060  F2C0  F051   	movff	i1sprintf@fval+2,i1___ftadd@f2+2
 20682  0023E4  0060  F2B8  F018   	movff	i1sprintf@fval,i1___fttol@f1
 20683  0023EA  0060  F2BC  F019   	movff	i1sprintf@fval+1,i1___fttol@f1+1
 20684  0023F0  0060  F2C0  F01A   	movff	i1sprintf@fval+2,i1___fttol@f1+2
 20685  0023F6  ECDF  F031         	call	i1___fttol	;wreg free
 20686  0023FA  0060  F060  F027   	movff	?i1___fttol,i1___lltoft@c
 20687  002400  0060  F064  F028   	movff	?i1___fttol+1,i1___lltoft@c+1
 20688  002406  0060  F068  F029   	movff	?i1___fttol+2,i1___lltoft@c+2
 20689  00240C  0060  F06C  F02A   	movff	?i1___fttol+3,i1___lltoft@c+3
 20690  002412  EC3B  F03D         	call	i1___lltoft	;wreg free
 20691  002416  0060  F09C  F030   	movff	?i1___lltoft,i1___ftneg@f1
 20692  00241C  0060  F0A0  F031   	movff	?i1___lltoft+1,i1___ftneg@f1+1
 20693  002422  0060  F0A4  F032   	movff	?i1___lltoft+2,i1___ftneg@f1+2
 20694  002428  EC0B  F042         	call	i1___ftneg	;wreg free
 20695  00242C  0060  F0C0  F04C   	movff	?i1___ftneg,i1___ftadd@f1
 20696  002432  0060  F0C4  F04D   	movff	?i1___ftneg+1,i1___ftadd@f1+1
 20697  002438  0060  F0C8  F04E   	movff	?i1___ftneg+2,i1___ftadd@f1+2
 20698  00243E  EC23  F02A         	call	i1___ftadd	;wreg free
 20699  002442  0060  F130  F060   	movff	?i1___ftadd,i1___ftge@ff1
 20700  002448  0060  F134  F061   	movff	?i1___ftadd+1,i1___ftge@ff1+1
 20701  00244E  0060  F138  F062   	movff	?i1___ftadd+2,i1___ftge@ff1+2
 20702  002454  0E00               	movlw	0
 20703  002456  0100               	movlb	0	; () banked
 20704  002458  6F63               	movwf	i1___ftge@ff2& (0+255),b
 20705  00245A  0E00               	movlw	0
 20706  00245C  6F64               	movwf	(i1___ftge@ff2+1)& (0+255),b
 20707  00245E  0E3F               	movlw	63
 20708  002460  6F65               	movwf	(i1___ftge@ff2+2)& (0+255),b
 20709  002462  EC88  F039         	call	i1___ftge	;wreg free
 20710  002466  0100               	movlb	0	; () banked
 20711  002468  A0D8               	btfss	16344,0,c
 20712  00246A  D01A               	goto	i1l1025
 20713                           
 20714                           ; BSR set to: 0
 20715                           ;doprnt.c: 894: fval += 0.5;
 20716  00246C  0060  F2B8  F04C   	movff	i1sprintf@fval,i1___ftadd@f1
 20717  002472  0060  F2BC  F04D   	movff	i1sprintf@fval+1,i1___ftadd@f1+1
 20718  002478  0060  F2C0  F04E   	movff	i1sprintf@fval+2,i1___ftadd@f1+2
 20719  00247E  0E00               	movlw	0
 20720  002480  6E4F               	movwf	i1___ftadd@f2,c
 20721  002482  0E00               	movlw	0
 20722  002484  6E50               	movwf	i1___ftadd@f2+1,c
 20723  002486  0E3F               	movlw	63
 20724  002488  6E51               	movwf	i1___ftadd@f2+2,c
 20725  00248A  EC23  F02A         	call	i1___ftadd	;wreg free
 20726  00248E  0060  F130  F0AE   	movff	?i1___ftadd,i1sprintf@fval
 20727  002494  0060  F134  F0AF   	movff	?i1___ftadd+1,i1sprintf@fval+1
 20728  00249A  0060  F138  F0B0   	movff	?i1___ftadd+2,i1sprintf@fval+2
 20729  0024A0                     i1l1025:
 20730                           
 20731                           ;doprnt.c: 895: if((unsigned long)fval >= dpowers[c+1]) {
 20732  0024A0  0060  F2CC  F083   	movff	i1sprintf@c,??i1_sprintf
 20733  0024A6  0100               	movlb	0	; () banked
 20734  0024A8  6B84               	clrf	(??i1_sprintf+1)& (0+255),b
 20735  0024AA  BF83               	btfsc	??i1_sprintf& (0+255),7,b
 20736  0024AC  0784               	decf	(??i1_sprintf+1)& (0+255),f,b
 20737  0024AE  90D8               	bcf	16344,0,c
 20738  0024B0  3783               	rlcf	??i1_sprintf& (0+255),f,b
 20739  0024B2  3784               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 20740  0024B4  90D8               	bcf	16344,0,c
 20741  0024B6  3783               	rlcf	??i1_sprintf& (0+255),f,b
 20742  0024B8  3784               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 20743  0024BA  0E04               	movlw	4
 20744  0024BC  2783               	addwf	??i1_sprintf& (0+255),f,b
 20745  0024BE  0E00               	movlw	0
 20746  0024C0  2384               	addwfc	(??i1_sprintf+1)& (0+255),f,b
 20747  0024C2  0EBF               	movlw	low _dpowers
 20748  0024C4  2583               	addwf	??i1_sprintf& (0+255),w,b
 20749  0024C6  6EF6               	movwf	16374,c
 20750  0024C8  0EFA               	movlw	high _dpowers
 20751  0024CA  2184               	addwfc	(??i1_sprintf+1)& (0+255),w,b
 20752  0024CC  6EF7               	movwf	16375,c
 20753  0024CE                     	if	1	;There are 3 active tblptr bytes
 20754  0024CE  6AF8               	clrf	16376,c
 20755  0024D0  0E00               	movlw	low (__mediumconst shr (0+16))
 20756  0024D2  22F8               	addwfc	16376,f,c
 20757  0024D4                     	endif
 20758  0024D4  0060  F2B8  F018   	movff	i1sprintf@fval,i1___fttol@f1
 20759  0024DA  0060  F2BC  F019   	movff	i1sprintf@fval+1,i1___fttol@f1+1
 20760  0024E0  0060  F2C0  F01A   	movff	i1sprintf@fval+2,i1___fttol@f1+2
 20761  0024E6  ECDF  F031         	call	i1___fttol	;wreg free
 20762  0024EA  0009               	tblrd		*+
 20763  0024EC  50F5               	movf	16373,w,c
 20764  0024EE  5C18               	subwf	?i1___fttol,w,c
 20765  0024F0  0009               	tblrd		*+
 20766  0024F2  50F5               	movf	16373,w,c
 20767  0024F4  5819               	subwfb	?i1___fttol+1,w,c
 20768  0024F6  0009               	tblrd		*+
 20769  0024F8  50F5               	movf	16373,w,c
 20770  0024FA  581A               	subwfb	?i1___fttol+2,w,c
 20771  0024FC  0009               	tblrd		*+
 20772  0024FE  50F5               	movf	16373,w,c
 20773  002500  581B               	subwfb	?i1___fttol+3,w,c
 20774  002502  A0D8               	btfss	16344,0,c
 20775  002504  D01E               	goto	i1l1026
 20776                           
 20777                           ;doprnt.c: 896: fval *= 1e-1;
 20778  002506  0060  F2B8  F033   	movff	i1sprintf@fval,i1___ftmul@f1
 20779  00250C  0060  F2BC  F034   	movff	i1sprintf@fval+1,i1___ftmul@f1+1
 20780  002512  0060  F2C0  F035   	movff	i1sprintf@fval+2,i1___ftmul@f1+2
 20781  002518  0ECD               	movlw	205
 20782  00251A  6E36               	movwf	i1___ftmul@f2,c
 20783  00251C  0ECC               	movlw	204
 20784  00251E  6E37               	movwf	i1___ftmul@f2+1,c
 20785  002520  0E3D               	movlw	61
 20786  002522  6E38               	movwf	i1___ftmul@f2+2,c
 20787  002524  ECD6  F030         	call	i1___ftmul	;wreg free
 20788  002528  0060  F0CC  F0AE   	movff	?i1___ftmul,i1sprintf@fval
 20789  00252E  0060  F0D0  F0AF   	movff	?i1___ftmul+1,i1sprintf@fval+1
 20790  002534  0060  F0D4  F0B0   	movff	?i1___ftmul+2,i1sprintf@fval+2
 20791                           
 20792                           ;doprnt.c: 897: exp++;
 20793  00253A  0100               	movlb	0	; () banked
 20794  00253C  4BA6               	infsnz	i1sprintf@exp& (0+255),f,b
 20795  00253E  2BA7               	incf	(i1sprintf@exp+1)& (0+255),f,b
 20796                           
 20797                           ;doprnt.c: 898: } else if((unsigned long)fval < dpowers[c]) {
 20798  002540  D043               	goto	i1l1028
 20799  002542                     i1l1026:
 20800                           
 20801                           ; BSR set to: 0
 20802  002542  0100               	movlb	0	; () banked
 20803  002544  51B3               	movf	i1sprintf@c& (0+255),w,b
 20804  002546  0D04               	mullw	4
 20805  002548  0EBF               	movlw	low _dpowers
 20806  00254A  24F3               	addwf	16371,w,c
 20807  00254C  6EF6               	movwf	16374,c
 20808  00254E  0EFA               	movlw	high _dpowers
 20809  002550  20F4               	addwfc	16372,w,c
 20810  002552  6EF7               	movwf	16375,c
 20811  002554                     	if	1	;There are 3 active tblptr bytes
 20812  002554  6AF8               	clrf	16376,c
 20813  002556  0E00               	movlw	low (__mediumconst shr (0+16))
 20814  002558  22F8               	addwfc	16376,f,c
 20815  00255A                     	endif
 20816  00255A  0060  F2B8  F018   	movff	i1sprintf@fval,i1___fttol@f1
 20817  002560  0060  F2BC  F019   	movff	i1sprintf@fval+1,i1___fttol@f1+1
 20818  002566  0060  F2C0  F01A   	movff	i1sprintf@fval+2,i1___fttol@f1+2
 20819  00256C  ECDF  F031         	call	i1___fttol	;wreg free
 20820  002570  0009               	tblrd		*+
 20821  002572  50F5               	movf	16373,w,c
 20822  002574  5C18               	subwf	?i1___fttol,w,c
 20823  002576  0009               	tblrd		*+
 20824  002578  50F5               	movf	16373,w,c
 20825  00257A  5819               	subwfb	?i1___fttol+1,w,c
 20826  00257C  0009               	tblrd		*+
 20827  00257E  50F5               	movf	16373,w,c
 20828  002580  581A               	subwfb	?i1___fttol+2,w,c
 20829  002582  0009               	tblrd		*+
 20830  002584  50F5               	movf	16373,w,c
 20831  002586  581B               	subwfb	?i1___fttol+3,w,c
 20832  002588  B0D8               	btfsc	16344,0,c
 20833  00258A  D01E               	goto	i1l1028
 20834                           
 20835                           ;doprnt.c: 899: fval *= 10.0;
 20836  00258C  0060  F2B8  F033   	movff	i1sprintf@fval,i1___ftmul@f1
 20837  002592  0060  F2BC  F034   	movff	i1sprintf@fval+1,i1___ftmul@f1+1
 20838  002598  0060  F2C0  F035   	movff	i1sprintf@fval+2,i1___ftmul@f1+2
 20839  00259E  0E00               	movlw	0
 20840  0025A0  6E36               	movwf	i1___ftmul@f2,c
 20841  0025A2  0E20               	movlw	32
 20842  0025A4  6E37               	movwf	i1___ftmul@f2+1,c
 20843  0025A6  0E41               	movlw	65
 20844  0025A8  6E38               	movwf	i1___ftmul@f2+2,c
 20845  0025AA  ECD6  F030         	call	i1___ftmul	;wreg free
 20846  0025AE  0060  F0CC  F0AE   	movff	?i1___ftmul,i1sprintf@fval
 20847  0025B4  0060  F0D0  F0AF   	movff	?i1___ftmul+1,i1sprintf@fval+1
 20848  0025BA  0060  F0D4  F0B0   	movff	?i1___ftmul+2,i1sprintf@fval+2
 20849                           
 20850                           ;doprnt.c: 900: exp--;
 20851  0025C0  0100               	movlb	0	; () banked
 20852  0025C2  07A6               	decf	i1sprintf@exp& (0+255),f,b
 20853  0025C4  A0D8               	btfss	16344,0,c
 20854  0025C6  07A7               	decf	(i1sprintf@exp+1)& (0+255),f,b
 20855  0025C8                     i1l1028:
 20856                           
 20857                           ;doprnt.c: 901: }
 20858                           ;doprnt.c: 903: }
 20859                           ;doprnt.c: 905: if(flag & 0x200 && !(flag & 0x800)) {
 20860                           
 20861                           ; BSR set to: 0
 20862                           
 20863                           ; BSR set to: 0
 20864                           
 20865                           ; BSR set to: 0
 20866  0025C8  0100               	movlb	0	; () banked
 20867  0025CA  B3B5               	btfsc	(i1sprintf@flag+1)& (0+255),1,b
 20868                           
 20869                           ; BSR set to: 0
 20870  0025CC  B7B5               	btfsc	(i1sprintf@flag+1)& (0+255),3,b
 20871  0025CE  D09E               	goto	i1l1036
 20872                           
 20873                           ; BSR set to: 0
 20874                           ;doprnt.c: 906: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])))
 20875  0025D0  BFB2               	btfsc	(i1sprintf@prec+1)& (0+255),7,b
 20876  0025D2  D00A               	goto	i1l1030
 20877  0025D4  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 20878  0025D6  E104               	bnz	i1u1443_20
 20879  0025D8  0E0B               	movlw	11
 20880  0025DA  5DB1               	subwf	i1sprintf@prec& (0+255),w,b
 20881  0025DC  A0D8               	btfss	16344,0,c
 20882  0025DE  D004               	goto	i1l1030
 20883  0025E0                     i1u1443_20:
 20884                           
 20885                           ; BSR set to: 0
 20886                           ;doprnt.c: 907: prec = (sizeof dpowers/sizeof dpowers[0]);
 20887  0025E0  0E00               	movlw	0
 20888  0025E2  6FB2               	movwf	(i1sprintf@prec+1)& (0+255),b
 20889  0025E4  0E0A               	movlw	10
 20890  0025E6  6FB1               	movwf	i1sprintf@prec& (0+255),b
 20891  0025E8                     i1l1030:
 20892                           
 20893                           ; BSR set to: 0
 20894                           ;doprnt.c: 915: val = (unsigned long)fval;
 20895                           
 20896                           ; BSR set to: 0
 20897  0025E8  0060  F2B8  F018   	movff	i1sprintf@fval,i1___fttol@f1
 20898  0025EE  0060  F2BC  F019   	movff	i1sprintf@fval+1,i1___fttol@f1+1
 20899  0025F4  0060  F2C0  F01A   	movff	i1sprintf@fval+2,i1___fttol@f1+2
 20900  0025FA  ECDF  F031         	call	i1___fttol	;wreg free
 20901  0025FE  0060  F060  F0AA   	movff	?i1___fttol,i1sprintf@val
 20902  002604  0060  F064  F0AB   	movff	?i1___fttol+1,i1sprintf@val+1
 20903  00260A  0060  F068  F0AC   	movff	?i1___fttol+2,i1sprintf@val+2
 20904  002610  0060  F06C  F0AD   	movff	?i1___fttol+3,i1sprintf@val+3
 20905                           
 20906                           ;doprnt.c: 916: while(val && val % 10 == 0) {
 20907  002616  D026               	goto	i1l1031
 20908  002618                     
 20909                           ;doprnt.c: 917: prec--;
 20910  002618  0100               	movlb	0	; () banked
 20911  00261A  07B1               	decf	i1sprintf@prec& (0+255),f,b
 20912  00261C  A0D8               	btfss	16344,0,c
 20913  00261E  07B2               	decf	(i1sprintf@prec+1)& (0+255),f,b
 20914                           
 20915                           ; BSR set to: 0
 20916                           ;doprnt.c: 918: val /= 10;
 20917  002620  0060  F2A8  F004   	movff	i1sprintf@val,i1___lldiv@dividend
 20918  002626  0060  F2AC  F005   	movff	i1sprintf@val+1,i1___lldiv@dividend+1
 20919  00262C  0060  F2B0  F006   	movff	i1sprintf@val+2,i1___lldiv@dividend+2
 20920  002632  0060  F2B4  F007   	movff	i1sprintf@val+3,i1___lldiv@dividend+3
 20921  002638  0E0A               	movlw	10
 20922  00263A  6E08               	movwf	i1___lldiv@divisor,c
 20923  00263C  0E00               	movlw	0
 20924  00263E  6E09               	movwf	i1___lldiv@divisor+1,c
 20925  002640  0E00               	movlw	0
 20926  002642  6E0A               	movwf	i1___lldiv@divisor+2,c
 20927  002644  0E00               	movlw	0
 20928  002646  6E0B               	movwf	i1___lldiv@divisor+3,c
 20929  002648  ECA7  F03A         	call	i1___lldiv	;wreg free
 20930  00264C  0060  F010  F0AA   	movff	?i1___lldiv,i1sprintf@val
 20931  002652  0060  F014  F0AB   	movff	?i1___lldiv+1,i1sprintf@val+1
 20932  002658  0060  F018  F0AC   	movff	?i1___lldiv+2,i1sprintf@val+2
 20933  00265E  0060  F01C  F0AD   	movff	?i1___lldiv+3,i1sprintf@val+3
 20934  002664                     i1l1031:
 20935  002664  0100               	movlb	0	; () banked
 20936  002666  51AA               	movf	i1sprintf@val& (0+255),w,b
 20937  002668  11AB               	iorwf	(i1sprintf@val+1)& (0+255),w,b
 20938  00266A  11AC               	iorwf	(i1sprintf@val+2)& (0+255),w,b
 20939  00266C  11AD               	iorwf	(i1sprintf@val+3)& (0+255),w,b
 20940  00266E  B4D8               	btfsc	16344,2,c
 20941  002670  D01C               	goto	i1u1445_20
 20942                           
 20943                           ; BSR set to: 0
 20944  002672  0060  F2A8  F011   	movff	i1sprintf@val,i1___llmod@dividend
 20945  002678  0060  F2AC  F012   	movff	i1sprintf@val+1,i1___llmod@dividend+1
 20946  00267E  0060  F2B0  F013   	movff	i1sprintf@val+2,i1___llmod@dividend+2
 20947  002684  0060  F2B4  F014   	movff	i1sprintf@val+3,i1___llmod@dividend+3
 20948  00268A  0E0A               	movlw	10
 20949  00268C  6E15               	movwf	i1___llmod@divisor,c
 20950  00268E  0E00               	movlw	0
 20951  002690  6E16               	movwf	i1___llmod@divisor+1,c
 20952  002692  0E00               	movlw	0
 20953  002694  6E17               	movwf	i1___llmod@divisor+2,c
 20954  002696  0E00               	movlw	0
 20955  002698  6E18               	movwf	i1___llmod@divisor+3,c
 20956  00269A  ECCE  F03C         	call	i1___llmod	;wreg free
 20957  00269E  5011               	movf	?i1___llmod,w,c
 20958  0026A0  1012               	iorwf	?i1___llmod+1,w,c
 20959  0026A2  1013               	iorwf	?i1___llmod+2,w,c
 20960  0026A4  1014               	iorwf	?i1___llmod+3,w,c
 20961  0026A6  B4D8               	btfsc	16344,2,c
 20962  0026A8  D7B7               	goto	i1l1032
 20963  0026AA                     i1u1445_20:
 20964                           
 20965                           ;doprnt.c: 919: }
 20966                           ;doprnt.c: 921: if(prec < c) {
 20967  0026AA  0100               	movlb	0	; () banked
 20968  0026AC  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 20969  0026AE  0A80               	xorlw	128
 20970  0026B0  6F83               	movwf	??i1_sprintf& (0+255),b
 20971  0026B2  51B3               	movf	i1sprintf@c& (0+255),w,b
 20972  0026B4  5DB1               	subwf	i1sprintf@prec& (0+255),w,b
 20973  0026B6  0E80               	movlw	128
 20974  0026B8  BFB3               	btfsc	i1sprintf@c& (0+255),7,b
 20975  0026BA  0E7F               	movlw	127
 20976  0026BC  5983               	subwfb	??i1_sprintf& (0+255),w,b
 20977  0026BE  B0D8               	btfsc	16344,0,c
 20978  0026C0  D025               	goto	i1l1036
 20979                           
 20980                           ; BSR set to: 0
 20981                           ;doprnt.c: 922: fval /= scale(c-prec);
 20982  0026C2  0060  F2B8  F049   	movff	i1sprintf@fval,i1___ftdiv@f1
 20983  0026C8  0060  F2BC  F04A   	movff	i1sprintf@fval+1,i1___ftdiv@f1+1
 20984  0026CE  0060  F2C0  F04B   	movff	i1sprintf@fval+2,i1___ftdiv@f1+2
 20985  0026D4  51B1               	movf	i1sprintf@prec& (0+255),w,b
 20986  0026D6  0800               	sublw	0
 20987  0026D8  25B3               	addwf	i1sprintf@c& (0+255),w,b
 20988  0026DA  EC93  F01F         	call	i1_scale
 20989  0026DE  0060  F108  F04C   	movff	?i1_scale,i1___ftdiv@f2
 20990  0026E4  0060  F10C  F04D   	movff	?i1_scale+1,i1___ftdiv@f2+1
 20991  0026EA  0060  F110  F04E   	movff	?i1_scale+2,i1___ftdiv@f2+2
 20992  0026F0  EC61  F033         	call	i1___ftdiv	;wreg free
 20993  0026F4  0060  F124  F0AE   	movff	?i1___ftdiv,i1sprintf@fval
 20994  0026FA  0060  F128  F0AF   	movff	?i1___ftdiv+1,i1sprintf@fval+1
 20995  002700  0060  F12C  F0B0   	movff	?i1___ftdiv+2,i1sprintf@fval+2
 20996                           
 20997                           ;doprnt.c: 923: c = prec;
 20998  002706  0060  F2C4  F0B3   	movff	i1sprintf@prec,i1sprintf@c
 20999  00270C                     i1l1036:
 21000                           
 21001                           ;doprnt.c: 924: }
 21002                           ;doprnt.c: 926: }
 21003                           ;doprnt.c: 929: width -= prec + 5;
 21004  00270C  0E05               	movlw	5
 21005  00270E  0100               	movlb	0	; () banked
 21006  002710  25B1               	addwf	i1sprintf@prec& (0+255),w,b
 21007  002712  6F83               	movwf	??i1_sprintf& (0+255),b
 21008  002714  0E00               	movlw	0
 21009  002716  21B2               	addwfc	(i1sprintf@prec+1)& (0+255),w,b
 21010  002718  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 21011  00271A  5183               	movf	??i1_sprintf& (0+255),w,b
 21012  00271C  5FA8               	subwf	i1sprintf@width& (0+255),f,b
 21013  00271E  5184               	movf	(??i1_sprintf+1)& (0+255),w,b
 21014  002720  5BA9               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 21015                           
 21016                           ; BSR set to: 0
 21017                           ;doprnt.c: 931: if(prec || flag & 0x800)
 21018  002722  51B1               	movf	i1sprintf@prec& (0+255),w,b
 21019  002724  11B2               	iorwf	(i1sprintf@prec+1)& (0+255),w,b
 21020  002726  A4D8               	btfss	16344,2,c
 21021  002728  D002               	goto	i1u1448_20
 21022                           
 21023                           ; BSR set to: 0
 21024  00272A  A7B5               	btfss	(i1sprintf@flag+1)& (0+255),3,b
 21025  00272C  D003               	goto	i1l1037
 21026  00272E                     i1u1448_20:
 21027                           
 21028                           ; BSR set to: 0
 21029                           ;doprnt.c: 932: width--;
 21030                           
 21031                           ; BSR set to: 0
 21032  00272E  07A8               	decf	i1sprintf@width& (0+255),f,b
 21033  002730  A0D8               	btfss	16344,0,c
 21034  002732  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 21035  002734                     i1l1037:
 21036                           
 21037                           ; BSR set to: 0
 21038                           ;doprnt.c: 934: if(flag & 0x03)
 21039                           
 21040                           ; BSR set to: 0
 21041  002734  0E03               	movlw	3
 21042  002736  15B4               	andwf	i1sprintf@flag& (0+255),w,b
 21043  002738  6F83               	movwf	??i1_sprintf& (0+255),b
 21044  00273A  0E00               	movlw	0
 21045  00273C  15B5               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 21046  00273E  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 21047  002740  5183               	movf	??i1_sprintf& (0+255),w,b
 21048  002742  1184               	iorwf	(??i1_sprintf+1)& (0+255),w,b
 21049  002744  B4D8               	btfsc	16344,2,c
 21050  002746  D003               	goto	i1l1040
 21051                           
 21052                           ; BSR set to: 0
 21053                           ;doprnt.c: 935: width--;
 21054  002748  07A8               	decf	i1sprintf@width& (0+255),f,b
 21055  00274A  A0D8               	btfss	16344,0,c
 21056  00274C  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 21057  00274E                     i1l1040:
 21058                           
 21059                           ; BSR set to: 0
 21060                           ;doprnt.c: 946: if(flag & 0x04) {
 21061                           
 21062                           ; BSR set to: 0
 21063  00274E  A5B4               	btfss	i1sprintf@flag& (0+255),2,b
 21064  002750  D038               	goto	i1l1041
 21065                           
 21066                           ; BSR set to: 0
 21067                           ;doprnt.c: 948: if(flag & 0x02)
 21068  002752  A3B4               	btfss	i1sprintf@flag& (0+255),1,b
 21069  002754  D014               	goto	i1l1042
 21070                           
 21071                           ; BSR set to: 0
 21072                           ;doprnt.c: 949: ((*sp++ = (flag & 0x01 ? '-' : '+')));
 21073  002756  B1B4               	btfsc	i1sprintf@flag& (0+255),0,b
 21074  002758  D004               	goto	i1l1044
 21075                           
 21076                           ; BSR set to: 0
 21077  00275A  0E00               	movlw	0
 21078  00275C  6F8E               	movwf	(i1_sprintf$2169+1)& (0+255),b
 21079  00275E  0E2B               	movlw	43
 21080  002760  D003               	goto	L23
 21081  002762                     i1l1044:
 21082                           
 21083                           ; BSR set to: 0
 21084                           
 21085                           ; BSR set to: 0
 21086  002762  0E00               	movlw	0
 21087  002764  6F8E               	movwf	(i1_sprintf$2169+1)& (0+255),b
 21088  002766  0E2D               	movlw	45
 21089  002768                     L23:
 21090  002768  6F8D               	movwf	i1_sprintf$2169& (0+255),b
 21091                           
 21092                           ; BSR set to: 0
 21093                           
 21094                           ; BSR set to: 0
 21095  00276A  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21096  002770  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21097  002776  0060  F237  FFDF   	movff	i1_sprintf$2169,16351
 21098  00277C  D00A               	goto	i1l11103
 21099  00277E                     i1l1042:
 21100                           
 21101                           ; BSR set to: 0
 21102                           ;doprnt.c: 950: else if(flag & 0x01)
 21103  00277E  A1B4               	btfss	i1sprintf@flag& (0+255),0,b
 21104  002780  D018               	goto	i1l1049
 21105                           
 21106                           ; BSR set to: 0
 21107                           ;doprnt.c: 951: ((*sp++ = (' ')));
 21108  002782  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21109  002788  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21110  00278E  0E20               	movlw	32
 21111  002790  6EDF               	movwf	16351,c
 21112  002792                     i1l11103:
 21113                           
 21114                           ; BSR set to: 0
 21115  002792  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 21116  002794  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 21117                           
 21118                           ; BSR set to: 0
 21119                           ;doprnt.c: 953: while(width > 0) {
 21120                           
 21121                           ; BSR set to: 0
 21122  002796  D00D               	goto	i1l1049
 21123  002798                     i1l11105:
 21124                           
 21125                           ; BSR set to: 0
 21126                           ;doprnt.c: 954: ((*sp++ = ('0')));
 21127  002798  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21128  00279E  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21129  0027A4  0E30               	movlw	48
 21130  0027A6  6EDF               	movwf	16351,c
 21131                           
 21132                           ; BSR set to: 0
 21133  0027A8  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 21134  0027AA  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 21135                           
 21136                           ; BSR set to: 0
 21137                           ;doprnt.c: 955: width--;
 21138  0027AC  07A8               	decf	i1sprintf@width& (0+255),f,b
 21139  0027AE  A0D8               	btfss	16344,0,c
 21140  0027B0  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 21141  0027B2                     i1l1049:
 21142                           
 21143                           ; BSR set to: 0
 21144                           
 21145                           ; BSR set to: 0
 21146  0027B2  BFA9               	btfsc	(i1sprintf@width+1)& (0+255),7,b
 21147  0027B4  D03F               	goto	i1l1063
 21148  0027B6  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 21149  0027B8  E1EF               	bnz	i1l11105
 21150  0027BA  05A8               	decf	i1sprintf@width& (0+255),w,b
 21151  0027BC  A0D8               	btfss	16344,0,c
 21152  0027BE  D03A               	goto	i1l1063
 21153  0027C0  D7EB               	goto	i1l1050
 21154  0027C2                     i1l1041:
 21155                           
 21156                           ; BSR set to: 0
 21157                           ;doprnt.c: 959: {
 21158                           ;doprnt.c: 962: if(!(flag & 0x08))
 21159  0027C2  A7B4               	btfss	i1sprintf@flag& (0+255),3,b
 21160  0027C4  D00E               	goto	i1l1054
 21161  0027C6  D014               	goto	i1u1456_20
 21162  0027C8                     i1l11115:
 21163                           
 21164                           ; BSR set to: 0
 21165                           ;doprnt.c: 965: ((*sp++ = (' ')));
 21166  0027C8  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21167  0027CE  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21168  0027D4  0E20               	movlw	32
 21169  0027D6  6EDF               	movwf	16351,c
 21170                           
 21171                           ; BSR set to: 0
 21172  0027D8  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 21173  0027DA  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 21174                           
 21175                           ; BSR set to: 0
 21176                           ;doprnt.c: 966: width--;
 21177  0027DC  07A8               	decf	i1sprintf@width& (0+255),f,b
 21178  0027DE  A0D8               	btfss	16344,0,c
 21179  0027E0  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 21180  0027E2                     i1l1054:
 21181                           
 21182                           ; BSR set to: 0
 21183                           
 21184                           ; BSR set to: 0
 21185  0027E2  BFA9               	btfsc	(i1sprintf@width+1)& (0+255),7,b
 21186  0027E4  D005               	goto	i1u1456_20
 21187  0027E6  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 21188  0027E8  E1EF               	bnz	i1l11115
 21189  0027EA  05A8               	decf	i1sprintf@width& (0+255),w,b
 21190  0027EC  B0D8               	btfsc	16344,0,c
 21191  0027EE  D7EC               	goto	i1l1055
 21192  0027F0                     i1u1456_20:
 21193                           
 21194                           ; BSR set to: 0
 21195                           ;doprnt.c: 967: }
 21196                           ;doprnt.c: 970: if(flag & 0x02)
 21197                           
 21198                           ; BSR set to: 0
 21199  0027F0  A3B4               	btfss	i1sprintf@flag& (0+255),1,b
 21200  0027F2  D014               	goto	i1l1057
 21201                           
 21202                           ; BSR set to: 0
 21203                           ;doprnt.c: 971: ((*sp++ = (flag & 0x01 ? '-' : '+')));
 21204  0027F4  B1B4               	btfsc	i1sprintf@flag& (0+255),0,b
 21205  0027F6  D004               	goto	i1l1059
 21206                           
 21207                           ; BSR set to: 0
 21208  0027F8  0E00               	movlw	0
 21209  0027FA  6F90               	movwf	(i1_sprintf$2170+1)& (0+255),b
 21210  0027FC  0E2B               	movlw	43
 21211  0027FE  D003               	goto	L24
 21212  002800                     i1l1059:
 21213                           
 21214                           ; BSR set to: 0
 21215                           
 21216                           ; BSR set to: 0
 21217  002800  0E00               	movlw	0
 21218  002802  6F90               	movwf	(i1_sprintf$2170+1)& (0+255),b
 21219  002804  0E2D               	movlw	45
 21220  002806                     L24:
 21221  002806  6F8F               	movwf	i1_sprintf$2170& (0+255),b
 21222                           
 21223                           ; BSR set to: 0
 21224                           
 21225                           ; BSR set to: 0
 21226  002808  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21227  00280E  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21228  002814  0060  F23F  FFDF   	movff	i1_sprintf$2170,16351
 21229  00281A  D00A               	goto	i1l11135
 21230  00281C                     i1l1057:
 21231                           
 21232                           ; BSR set to: 0
 21233                           ;doprnt.c: 977: else if(flag & 0x01)
 21234  00281C  A1B4               	btfss	i1sprintf@flag& (0+255),0,b
 21235  00281E  D00A               	goto	i1l1063
 21236                           
 21237                           ; BSR set to: 0
 21238                           ;doprnt.c: 978: ((*sp++ = (' ')));
 21239  002820  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21240  002826  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21241  00282C  0E20               	movlw	32
 21242  00282E  6EDF               	movwf	16351,c
 21243  002830                     i1l11135:
 21244                           
 21245                           ; BSR set to: 0
 21246  002830  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 21247  002832  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 21248  002834                     i1l1063:
 21249                           
 21250                           ; BSR set to: 0
 21251                           ;doprnt.c: 980: }
 21252                           ;doprnt.c: 985: val = (unsigned long)fval;
 21253                           
 21254                           ; BSR set to: 0
 21255                           
 21256                           ; BSR set to: 0
 21257                           
 21258                           ; BSR set to: 0
 21259  002834  0060  F2B8  F018   	movff	i1sprintf@fval,i1___fttol@f1
 21260  00283A  0060  F2BC  F019   	movff	i1sprintf@fval+1,i1___fttol@f1+1
 21261  002840  0060  F2C0  F01A   	movff	i1sprintf@fval+2,i1___fttol@f1+2
 21262  002846  ECDF  F031         	call	i1___fttol	;wreg free
 21263  00284A  0060  F060  F0AA   	movff	?i1___fttol,i1sprintf@val
 21264  002850  0060  F064  F0AB   	movff	?i1___fttol+1,i1sprintf@val+1
 21265  002856  0060  F068  F0AC   	movff	?i1___fttol+2,i1sprintf@val+2
 21266  00285C  0060  F06C  F0AD   	movff	?i1___fttol+3,i1sprintf@val+3
 21267                           
 21268                           ;doprnt.c: 986: ((*sp++ = (val/dpowers[c] + '0')));
 21269  002862  0060  F2A8  F004   	movff	i1sprintf@val,i1___lldiv@dividend
 21270  002868  0060  F2AC  F005   	movff	i1sprintf@val+1,i1___lldiv@dividend+1
 21271  00286E  0060  F2B0  F006   	movff	i1sprintf@val+2,i1___lldiv@dividend+2
 21272  002874  0060  F2B4  F007   	movff	i1sprintf@val+3,i1___lldiv@dividend+3
 21273  00287A  0100               	movlb	0	; () banked
 21274  00287C  51B3               	movf	i1sprintf@c& (0+255),w,b
 21275  00287E  0D04               	mullw	4
 21276  002880  0EBF               	movlw	low _dpowers
 21277  002882  24F3               	addwf	16371,w,c
 21278  002884  6EF6               	movwf	16374,c
 21279  002886  0EFA               	movlw	high _dpowers
 21280  002888  20F4               	addwfc	16372,w,c
 21281  00288A  6EF7               	movwf	16375,c
 21282  00288C                     	if	1	;There are 3 active tblptr bytes
 21283  00288C  6AF8               	clrf	16376,c
 21284  00288E  0E00               	movlw	low (__mediumconst shr (0+16))
 21285  002890  22F8               	addwfc	16376,f,c
 21286  002892                     	endif
 21287  002892  0009               	tblrd		*+
 21288  002894  006F FFD4  F008    	movff	16373,i1___lldiv@divisor
 21289  00289A  0009               	tblrd		*+
 21290  00289C  006F FFD4  F009    	movff	16373,i1___lldiv@divisor+1
 21291  0028A2  0009               	tblrd		*+
 21292  0028A4  006F FFD4  F00A    	movff	16373,i1___lldiv@divisor+2
 21293  0028AA  000A               	tblrd		*-
 21294  0028AC  006F FFD4  F00B    	movff	16373,i1___lldiv@divisor+3
 21295  0028B2  ECA7  F03A         	call	i1___lldiv	;wreg free
 21296  0028B6  5004               	movf	?i1___lldiv,w,c
 21297  0028B8  0F30               	addlw	48
 21298  0028BA  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21299  0028C0  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21300  0028C6  6EDF               	movwf	16351,c
 21301  0028C8  0100               	movlb	0	; () banked
 21302  0028CA  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 21303  0028CC  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 21304                           
 21305                           ; BSR set to: 0
 21306                           ;doprnt.c: 987: val %= dpowers[c];
 21307  0028CE  0060  F2A8  F011   	movff	i1sprintf@val,i1___llmod@dividend
 21308  0028D4  0060  F2AC  F012   	movff	i1sprintf@val+1,i1___llmod@dividend+1
 21309  0028DA  0060  F2B0  F013   	movff	i1sprintf@val+2,i1___llmod@dividend+2
 21310  0028E0  0060  F2B4  F014   	movff	i1sprintf@val+3,i1___llmod@dividend+3
 21311  0028E6  51B3               	movf	i1sprintf@c& (0+255),w,b
 21312  0028E8  0D04               	mullw	4
 21313  0028EA  0EBF               	movlw	low _dpowers
 21314  0028EC  24F3               	addwf	16371,w,c
 21315  0028EE  6EF6               	movwf	16374,c
 21316  0028F0  0EFA               	movlw	high _dpowers
 21317  0028F2  20F4               	addwfc	16372,w,c
 21318  0028F4  6EF7               	movwf	16375,c
 21319  0028F6                     	if	1	;There are 3 active tblptr bytes
 21320  0028F6  6AF8               	clrf	16376,c
 21321  0028F8  0E00               	movlw	low (__mediumconst shr (0+16))
 21322  0028FA  22F8               	addwfc	16376,f,c
 21323  0028FC                     	endif
 21324  0028FC  0009               	tblrd		*+
 21325  0028FE  006F FFD4  F015    	movff	16373,i1___llmod@divisor
 21326  002904  0009               	tblrd		*+
 21327  002906  006F FFD4  F016    	movff	16373,i1___llmod@divisor+1
 21328  00290C  0009               	tblrd		*+
 21329  00290E  006F FFD4  F017    	movff	16373,i1___llmod@divisor+2
 21330  002914  000A               	tblrd		*-
 21331  002916  006F FFD4  F018    	movff	16373,i1___llmod@divisor+3
 21332  00291C  ECCE  F03C         	call	i1___llmod	;wreg free
 21333  002920  0060  F044  F0AA   	movff	?i1___llmod,i1sprintf@val
 21334  002926  0060  F048  F0AB   	movff	?i1___llmod+1,i1sprintf@val+1
 21335  00292C  0060  F04C  F0AC   	movff	?i1___llmod+2,i1sprintf@val+2
 21336  002932  0060  F050  F0AD   	movff	?i1___llmod+3,i1sprintf@val+3
 21337                           
 21338                           ;doprnt.c: 990: if(prec || flag & 0x800)
 21339  002938  0100               	movlb	0	; () banked
 21340  00293A  51B1               	movf	i1sprintf@prec& (0+255),w,b
 21341  00293C  11B2               	iorwf	(i1sprintf@prec+1)& (0+255),w,b
 21342  00293E  A4D8               	btfss	16344,2,c
 21343  002940  D002               	goto	i1u1461_20
 21344                           
 21345                           ; BSR set to: 0
 21346  002942  A7B5               	btfss	(i1sprintf@flag+1)& (0+255),3,b
 21347  002944  D0A2               	goto	i1u1465_20
 21348  002946                     i1u1461_20:
 21349                           
 21350                           ; BSR set to: 0
 21351                           ;doprnt.c: 994: {
 21352                           ;doprnt.c: 995: ((*sp++ = ('.')));
 21353                           
 21354                           ; BSR set to: 0
 21355  002946  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21356  00294C  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21357  002952  0E2E               	movlw	46
 21358  002954  6EDF               	movwf	16351,c
 21359                           
 21360                           ; BSR set to: 0
 21361  002956  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 21362  002958  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 21363                           
 21364                           ; BSR set to: 0
 21365                           ;doprnt.c: 996: prec -= c;
 21366  00295A  51B3               	movf	i1sprintf@c& (0+255),w,b
 21367  00295C  5FB1               	subwf	i1sprintf@prec& (0+255),f,b
 21368  00295E  0E00               	movlw	0
 21369  002960  BFB3               	btfsc	i1sprintf@c& (0+255),7,b
 21370  002962  0EFF               	movlw	255
 21371  002964  5BB2               	subwfb	(i1sprintf@prec+1)& (0+255),f,b
 21372                           
 21373                           ;doprnt.c: 997: while(c--) {
 21374  002966  D07A               	goto	i1l1067
 21375  002968                     i1l1068:
 21376                           
 21377                           ; BSR set to: 0
 21378                           ;doprnt.c: 1002: if(flag & 0x200 && val == 0) {
 21379  002968  A3B5               	btfss	(i1sprintf@flag+1)& (0+255),1,b
 21380  00296A  D00E               	goto	i1l1069
 21381                           
 21382                           ; BSR set to: 0
 21383  00296C  51AA               	movf	i1sprintf@val& (0+255),w,b
 21384  00296E  11AB               	iorwf	(i1sprintf@val+1)& (0+255),w,b
 21385  002970  11AC               	iorwf	(i1sprintf@val+2)& (0+255),w,b
 21386  002972  11AD               	iorwf	(i1sprintf@val+3)& (0+255),w,b
 21387  002974  A4D8               	btfss	16344,2,c
 21388  002976  D008               	goto	i1l1069
 21389                           
 21390                           ; BSR set to: 0
 21391                           ;doprnt.c: 1003: prec = c = 0;
 21392  002978  0E00               	movlw	0
 21393  00297A  6FB3               	movwf	i1sprintf@c& (0+255),b
 21394  00297C  51B3               	movf	i1sprintf@c& (0+255),w,b
 21395  00297E  6FB1               	movwf	i1sprintf@prec& (0+255),b
 21396  002980  6BB2               	clrf	(i1sprintf@prec+1)& (0+255),b
 21397  002982  BFB1               	btfsc	i1sprintf@prec& (0+255),7,b
 21398  002984  07B2               	decf	(i1sprintf@prec+1)& (0+255),f,b
 21399                           
 21400                           ;doprnt.c: 1004: break;
 21401  002986  D07D               	goto	i1l1071
 21402  002988                     i1l1069:
 21403                           
 21404                           ; BSR set to: 0
 21405                           ;doprnt.c: 1005: }
 21406                           ;doprnt.c: 1007: ((*sp++ = ('0' + (val/dpowers[c]))));
 21407                           
 21408                           ; BSR set to: 0
 21409  002988  0060  F2A8  F004   	movff	i1sprintf@val,i1___lldiv@dividend
 21410  00298E  0060  F2AC  F005   	movff	i1sprintf@val+1,i1___lldiv@dividend+1
 21411  002994  0060  F2B0  F006   	movff	i1sprintf@val+2,i1___lldiv@dividend+2
 21412  00299A  0060  F2B4  F007   	movff	i1sprintf@val+3,i1___lldiv@dividend+3
 21413  0029A0  51B3               	movf	i1sprintf@c& (0+255),w,b
 21414  0029A2  0D04               	mullw	4
 21415  0029A4  0EBF               	movlw	low _dpowers
 21416  0029A6  24F3               	addwf	16371,w,c
 21417  0029A8  6EF6               	movwf	16374,c
 21418  0029AA  0EFA               	movlw	high _dpowers
 21419  0029AC  20F4               	addwfc	16372,w,c
 21420  0029AE  6EF7               	movwf	16375,c
 21421  0029B0                     	if	1	;There are 3 active tblptr bytes
 21422  0029B0  6AF8               	clrf	16376,c
 21423  0029B2  0E00               	movlw	low (__mediumconst shr (0+16))
 21424  0029B4  22F8               	addwfc	16376,f,c
 21425  0029B6                     	endif
 21426  0029B6  0009               	tblrd		*+
 21427  0029B8  006F FFD4  F008    	movff	16373,i1___lldiv@divisor
 21428  0029BE  0009               	tblrd		*+
 21429  0029C0  006F FFD4  F009    	movff	16373,i1___lldiv@divisor+1
 21430  0029C6  0009               	tblrd		*+
 21431  0029C8  006F FFD4  F00A    	movff	16373,i1___lldiv@divisor+2
 21432  0029CE  000A               	tblrd		*-
 21433  0029D0  006F FFD4  F00B    	movff	16373,i1___lldiv@divisor+3
 21434  0029D6  ECA7  F03A         	call	i1___lldiv	;wreg free
 21435  0029DA  5004               	movf	?i1___lldiv,w,c
 21436  0029DC  0F30               	addlw	48
 21437  0029DE  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21438  0029E4  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21439  0029EA  6EDF               	movwf	16351,c
 21440  0029EC  0100               	movlb	0	; () banked
 21441  0029EE  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 21442  0029F0  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 21443                           
 21444                           ; BSR set to: 0
 21445                           ;doprnt.c: 1008: val %= dpowers[c];
 21446  0029F2  0060  F2A8  F011   	movff	i1sprintf@val,i1___llmod@dividend
 21447  0029F8  0060  F2AC  F012   	movff	i1sprintf@val+1,i1___llmod@dividend+1
 21448  0029FE  0060  F2B0  F013   	movff	i1sprintf@val+2,i1___llmod@dividend+2
 21449  002A04  0060  F2B4  F014   	movff	i1sprintf@val+3,i1___llmod@dividend+3
 21450  002A0A  51B3               	movf	i1sprintf@c& (0+255),w,b
 21451  002A0C  0D04               	mullw	4
 21452  002A0E  0EBF               	movlw	low _dpowers
 21453  002A10  24F3               	addwf	16371,w,c
 21454  002A12  6EF6               	movwf	16374,c
 21455  002A14  0EFA               	movlw	high _dpowers
 21456  002A16  20F4               	addwfc	16372,w,c
 21457  002A18  6EF7               	movwf	16375,c
 21458  002A1A                     	if	1	;There are 3 active tblptr bytes
 21459  002A1A  6AF8               	clrf	16376,c
 21460  002A1C  0E00               	movlw	low (__mediumconst shr (0+16))
 21461  002A1E  22F8               	addwfc	16376,f,c
 21462  002A20                     	endif
 21463  002A20  0009               	tblrd		*+
 21464  002A22  006F FFD4  F015    	movff	16373,i1___llmod@divisor
 21465  002A28  0009               	tblrd		*+
 21466  002A2A  006F FFD4  F016    	movff	16373,i1___llmod@divisor+1
 21467  002A30  0009               	tblrd		*+
 21468  002A32  006F FFD4  F017    	movff	16373,i1___llmod@divisor+2
 21469  002A38  000A               	tblrd		*-
 21470  002A3A  006F FFD4  F018    	movff	16373,i1___llmod@divisor+3
 21471  002A40  ECCE  F03C         	call	i1___llmod	;wreg free
 21472  002A44  0060  F044  F0AA   	movff	?i1___llmod,i1sprintf@val
 21473  002A4A  0060  F048  F0AB   	movff	?i1___llmod+1,i1sprintf@val+1
 21474  002A50  0060  F04C  F0AC   	movff	?i1___llmod+2,i1sprintf@val+2
 21475  002A56  0060  F050  F0AD   	movff	?i1___llmod+3,i1sprintf@val+3
 21476  002A5C                     i1l1067:
 21477  002A5C  0100               	movlb	0	; () banked
 21478  002A5E  07B3               	decf	i1sprintf@c& (0+255),f,b
 21479  002A60  29B3               	incf	i1sprintf@c& (0+255),w,b
 21480  002A62  B4D8               	btfsc	16344,2,c
 21481  002A64  D00E               	goto	i1l1071
 21482  002A66  D780               	goto	i1l1068
 21483  002A68                     
 21484                           ; BSR set to: 0
 21485                           ;doprnt.c: 1012: ((*sp++ = ('0')));
 21486                           
 21487                           ; BSR set to: 0
 21488  002A68  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21489  002A6E  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21490  002A74  0E30               	movlw	48
 21491  002A76  6EDF               	movwf	16351,c
 21492                           
 21493                           ; BSR set to: 0
 21494  002A78  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 21495  002A7A  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 21496                           
 21497                           ; BSR set to: 0
 21498                           ;doprnt.c: 1013: prec--;
 21499  002A7C  07B1               	decf	i1sprintf@prec& (0+255),f,b
 21500  002A7E  A0D8               	btfss	16344,0,c
 21501  002A80  07B2               	decf	(i1sprintf@prec+1)& (0+255),f,b
 21502  002A82                     i1l1071:
 21503                           
 21504                           ; BSR set to: 0
 21505                           
 21506                           ; BSR set to: 0
 21507  002A82  51B1               	movf	i1sprintf@prec& (0+255),w,b
 21508  002A84  11B2               	iorwf	(i1sprintf@prec+1)& (0+255),w,b
 21509  002A86  A4D8               	btfss	16344,2,c
 21510  002A88  D7EF               	goto	i1l1072
 21511  002A8A                     i1u1465_20:
 21512                           
 21513                           ; BSR set to: 0
 21514                           ;doprnt.c: 1014: }
 21515                           ;doprnt.c: 1015: }
 21516                           ;doprnt.c: 1017: if(flag & 0x20)
 21517                           
 21518                           ; BSR set to: 0
 21519  002A8A  ABB4               	btfss	i1sprintf@flag& (0+255),5,b
 21520  002A8C  D008               	goto	i1l1074
 21521                           
 21522                           ; BSR set to: 0
 21523                           ;doprnt.c: 1018: ((*sp++ = ('E')));
 21524  002A8E  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21525  002A94  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21526  002A9A  0E45               	movlw	69
 21527  002A9C  D007               	goto	L25
 21528  002A9E                     i1l1074:
 21529                           
 21530                           ; BSR set to: 0
 21531                           ;doprnt.c: 1019: else
 21532                           ;doprnt.c: 1021: ((*sp++ = ('e')));
 21533                           
 21534                           ; BSR set to: 0
 21535  002A9E  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21536  002AA4  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21537  002AAA  0E65               	movlw	101
 21538  002AAC                     L25:
 21539  002AAC  6EDF               	movwf	16351,c
 21540                           
 21541                           ; BSR set to: 0
 21542  002AAE  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 21543  002AB0  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 21544                           
 21545                           ; BSR set to: 0
 21546                           ;doprnt.c: 1022: if(exp < 0) {
 21547                           
 21548                           ; BSR set to: 0
 21549  002AB2  AFA7               	btfss	(i1sprintf@exp+1)& (0+255),7,b
 21550  002AB4  D00C               	goto	i1l1076
 21551                           
 21552                           ; BSR set to: 0
 21553                           ;doprnt.c: 1023: exp = -exp;
 21554  002AB6  6DA6               	negf	i1sprintf@exp& (0+255),b
 21555  002AB8  1FA7               	comf	(i1sprintf@exp+1)& (0+255),f,b
 21556  002ABA  B0D8               	btfsc	16344,0,c
 21557  002ABC  2BA7               	incf	(i1sprintf@exp+1)& (0+255),f,b
 21558                           
 21559                           ; BSR set to: 0
 21560                           ;doprnt.c: 1024: ((*sp++ = ('-')));
 21561  002ABE  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21562  002AC4  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21563  002ACA  0E2D               	movlw	45
 21564  002ACC  D007               	goto	L26
 21565  002ACE                     i1l1076:
 21566                           
 21567                           ; BSR set to: 0
 21568                           ;doprnt.c: 1026: ((*sp++ = ('+')));
 21569                           
 21570                           ; BSR set to: 0
 21571  002ACE  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21572  002AD4  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21573  002ADA  0E2B               	movlw	43
 21574  002ADC                     L26:
 21575  002ADC  6EDF               	movwf	16351,c
 21576                           
 21577                           ; BSR set to: 0
 21578  002ADE  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 21579  002AE0  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 21580                           
 21581                           ; BSR set to: 0
 21582                           ;doprnt.c: 1039: ((*sp++ = (exp / 10 + '0')));
 21583                           
 21584                           ; BSR set to: 0
 21585  002AE2  0060  F298  F00A   	movff	i1sprintf@exp,i1___awdiv@dividend
 21586  002AE8  0060  F29C  F00B   	movff	i1sprintf@exp+1,i1___awdiv@dividend+1
 21587  002AEE  0E00               	movlw	0
 21588  002AF0  6E0D               	movwf	i1___awdiv@divisor+1,c
 21589  002AF2  0E0A               	movlw	10
 21590  002AF4  6E0C               	movwf	i1___awdiv@divisor,c
 21591  002AF6  ECEC  F03A         	call	i1___awdiv	;wreg free
 21592  002AFA  500A               	movf	?i1___awdiv,w,c
 21593  002AFC  0F30               	addlw	48
 21594  002AFE  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21595  002B04  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21596  002B0A  6EDF               	movwf	16351,c
 21597  002B0C  0100               	movlb	0	; () banked
 21598  002B0E  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 21599  002B10  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 21600                           
 21601                           ; BSR set to: 0
 21602                           ;doprnt.c: 1040: ((*sp++ = (exp % 10 + '0')));
 21603  002B12  0060  F298  F004   	movff	i1sprintf@exp,i1___awmod@dividend
 21604  002B18  0060  F29C  F005   	movff	i1sprintf@exp+1,i1___awmod@dividend+1
 21605  002B1E  0E00               	movlw	0
 21606  002B20  6E07               	movwf	i1___awmod@divisor+1,c
 21607  002B22  0E0A               	movlw	10
 21608  002B24  6E06               	movwf	i1___awmod@divisor,c
 21609  002B26  EC23  F03C         	call	i1___awmod	;wreg free
 21610  002B2A  5004               	movf	?i1___awmod,w,c
 21611  002B2C  0F30               	addlw	48
 21612  002B2E  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21613  002B34  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21614  002B3A  6EDF               	movwf	16351,c
 21615  002B3C  0100               	movlb	0	; () banked
 21616  002B3E  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 21617  002B40  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 21618                           
 21619                           ; BSR set to: 0
 21620                           ;doprnt.c: 1042: if((flag & 0x08) && width > 0)
 21621  002B42  B7B4               	btfsc	i1sprintf@flag& (0+255),3,b
 21622                           
 21623                           ; BSR set to: 0
 21624  002B44  BFA9               	btfsc	(i1sprintf@width+1)& (0+255),7,b
 21625  002B46  EFF1  F01C         	goto	i1u1549_20
 21626  002B4A  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 21627  002B4C  E104               	bnz	i1l11207
 21628  002B4E  05A8               	decf	i1sprintf@width& (0+255),w,b
 21629  002B50  A0D8               	btfss	16344,0,c
 21630  002B52  EFF1  F01C         	goto	i1u1549_20
 21631  002B56                     i1u1469_20:
 21632  002B56                     i1l11207:
 21633                           
 21634                           ; BSR set to: 0
 21635                           ;doprnt.c: 1044: ((*sp++ = (' ')));
 21636  002B56  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 21637  002B5C  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 21638  002B62  0E20               	movlw	32
 21639  002B64  6EDF               	movwf	16351,c
 21640                           
 21641                           ; BSR set to: 0
 21642  002B66  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 21643  002B68  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 21644                           
 21645                           ; BSR set to: 0
 21646                           ;doprnt.c: 1045: while(--width);
 21647  002B6A  07A8               	decf	i1sprintf@width& (0+255),f,b
 21648  002B6C  A0D8               	btfss	16344,0,c
 21649  002B6E  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 21650  002B70  51A8               	movf	i1sprintf@width& (0+255),w,b
 21651  002B72  11A9               	iorwf	(i1sprintf@width+1)& (0+255),w,b
 21652  002B74  B4D8               	btfsc	16344,2,c
 21653  002B76  EFF1  F01C         	goto	i1u1549_20
 21654  002B7A  D7ED               	goto	i1u1469_20
 21655  002B7C                     i1l1016:
 21656                           
 21657                           ; BSR set to: 0
 21658                           ;doprnt.c: 1048: }
 21659                           ;doprnt.c: 1087: if(flag & 0x200) {
 21660  002B7C  A3B5               	btfss	(i1sprintf@flag+1)& (0+255),1,b
 21661  002B7E  D12A               	goto	i1l1081
 21662                           
 21663                           ; BSR set to: 0
 21664                           ;doprnt.c: 1088: if(exp < 0)
 21665  002B80  AFA7               	btfss	(i1sprintf@exp+1)& (0+255),7,b
 21666  002B82  D00A               	goto	i1l1082
 21667                           
 21668                           ; BSR set to: 0
 21669                           ;doprnt.c: 1089: prec -= (exp+1);
 21670  002B84  0E01               	movlw	1
 21671  002B86  25A6               	addwf	i1sprintf@exp& (0+255),w,b
 21672  002B88  6F83               	movwf	??i1_sprintf& (0+255),b
 21673  002B8A  0E00               	movlw	0
 21674  002B8C  21A7               	addwfc	(i1sprintf@exp+1)& (0+255),w,b
 21675  002B8E  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 21676  002B90  5183               	movf	??i1_sprintf& (0+255),w,b
 21677  002B92  5FB1               	subwf	i1sprintf@prec& (0+255),f,b
 21678  002B94  5184               	movf	(??i1_sprintf+1)& (0+255),w,b
 21679  002B96  5BB2               	subwfb	(i1sprintf@prec+1)& (0+255),f,b
 21680  002B98                     i1l1082:
 21681                           
 21682                           ; BSR set to: 0
 21683                           ;doprnt.c: 1091: val = (unsigned long)fval;
 21684                           
 21685                           ; BSR set to: 0
 21686  002B98  0060  F2B8  F018   	movff	i1sprintf@fval,i1___fttol@f1
 21687  002B9E  0060  F2BC  F019   	movff	i1sprintf@fval+1,i1___fttol@f1+1
 21688  002BA4  0060  F2C0  F01A   	movff	i1sprintf@fval+2,i1___fttol@f1+2
 21689  002BAA  ECDF  F031         	call	i1___fttol	;wreg free
 21690  002BAE  0060  F060  F0AA   	movff	?i1___fttol,i1sprintf@val
 21691  002BB4  0060  F064  F0AB   	movff	?i1___fttol+1,i1sprintf@val+1
 21692  002BBA  0060  F068  F0AC   	movff	?i1___fttol+2,i1sprintf@val+2
 21693  002BC0  0060  F06C  F0AD   	movff	?i1___fttol+3,i1sprintf@val+3
 21694                           
 21695                           ;doprnt.c: 1092: for(c = 0 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 21696  002BC6  0E00               	movlw	0
 21697  002BC8  0100               	movlb	0	; () banked
 21698  002BCA  6FB3               	movwf	i1sprintf@c& (0+255),b
 21699  002BCC                     i1l11221:
 21700                           
 21701                           ; BSR set to: 0
 21702  002BCC  0E0A               	movlw	10
 21703  002BCE  19B3               	xorwf	i1sprintf@c& (0+255),w,b
 21704  002BD0  B4D8               	btfsc	16344,2,c
 21705  002BD2  D01B               	goto	i1u1475_20
 21706                           
 21707                           ; BSR set to: 0
 21708                           ;doprnt.c: 1093: if(val < dpowers[c])
 21709                           
 21710                           ; BSR set to: 0
 21711                           
 21712                           ; BSR set to: 0
 21713  002BD4  51B3               	movf	i1sprintf@c& (0+255),w,b
 21714  002BD6  0D04               	mullw	4
 21715  002BD8  0EBF               	movlw	low _dpowers
 21716  002BDA  24F3               	addwf	16371,w,c
 21717  002BDC  6EF6               	movwf	16374,c
 21718  002BDE  0EFA               	movlw	high _dpowers
 21719  002BE0  20F4               	addwfc	16372,w,c
 21720  002BE2  6EF7               	movwf	16375,c
 21721  002BE4                     	if	1	;There are 3 active tblptr bytes
 21722  002BE4  6AF8               	clrf	16376,c
 21723  002BE6  0E00               	movlw	low (__mediumconst shr (0+16))
 21724  002BE8  22F8               	addwfc	16376,f,c
 21725  002BEA                     	endif
 21726  002BEA  0009               	tblrd		*+
 21727  002BEC  50F5               	movf	16373,w,c
 21728  002BEE  5DAA               	subwf	i1sprintf@val& (0+255),w,b
 21729  002BF0  0009               	tblrd		*+
 21730  002BF2  50F5               	movf	16373,w,c
 21731  002BF4  59AB               	subwfb	(i1sprintf@val+1)& (0+255),w,b
 21732  002BF6  0009               	tblrd		*+
 21733  002BF8  50F5               	movf	16373,w,c
 21734  002BFA  59AC               	subwfb	(i1sprintf@val+2)& (0+255),w,b
 21735  002BFC  0009               	tblrd		*+
 21736  002BFE  50F5               	movf	16373,w,c
 21737  002C00  59AD               	subwfb	(i1sprintf@val+3)& (0+255),w,b
 21738  002C02  A0D8               	btfss	16344,0,c
 21739  002C04  D002               	goto	i1u1475_20
 21740                           
 21741                           ; BSR set to: 0
 21742                           
 21743                           ; BSR set to: 0
 21744                           
 21745                           ; BSR set to: 0
 21746                           ;doprnt.c: 1094: break;
 21747  002C06  2BB3               	incf	i1sprintf@c& (0+255),f,b
 21748  002C08  D7E1               	goto	i1l11221
 21749  002C0A                     i1u1475_20:
 21750                           
 21751                           ; BSR set to: 0
 21752                           ;doprnt.c: 1095: prec -= c;
 21753                           
 21754                           ; BSR set to: 0
 21755  002C0A  51B3               	movf	i1sprintf@c& (0+255),w,b
 21756  002C0C  5FB1               	subwf	i1sprintf@prec& (0+255),f,b
 21757  002C0E  0E00               	movlw	0
 21758  002C10  BFB3               	btfsc	i1sprintf@c& (0+255),7,b
 21759  002C12  0EFF               	movlw	255
 21760  002C14  5BB2               	subwfb	(i1sprintf@prec+1)& (0+255),f,b
 21761                           
 21762                           ;doprnt.c: 1096: if(prec <= 12)
 21763  002C16  BFB2               	btfsc	(i1sprintf@prec+1)& (0+255),7,b
 21764  002C18  D006               	goto	i1u1476_20
 21765  002C1A  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 21766  002C1C  E124               	bnz	i1l1086
 21767  002C1E  0E0D               	movlw	13
 21768  002C20  5DB1               	subwf	i1sprintf@prec& (0+255),w,b
 21769  002C22  B0D8               	btfsc	16344,0,c
 21770  002C24  D020               	goto	i1l1086
 21771  002C26                     i1u1476_20:
 21772                           
 21773                           ; BSR set to: 0
 21774                           ;doprnt.c: 1097: fval += fround(prec);
 21775  002C26  0060  F2B8  F04C   	movff	i1sprintf@fval,i1___ftadd@f1
 21776  002C2C  0060  F2BC  F04D   	movff	i1sprintf@fval+1,i1___ftadd@f1+1
 21777  002C32  0060  F2C0  F04E   	movff	i1sprintf@fval+2,i1___ftadd@f1+2
 21778  002C38  51B1               	movf	i1sprintf@prec& (0+255),w,b
 21779  002C3A  EC46  F025         	call	i1_fround
 21780  002C3E  0060  F108  F04F   	movff	?i1_fround,i1___ftadd@f2
 21781  002C44  0060  F10C  F050   	movff	?i1_fround+1,i1___ftadd@f2+1
 21782  002C4A  0060  F110  F051   	movff	?i1_fround+2,i1___ftadd@f2+2
 21783  002C50  EC23  F02A         	call	i1___ftadd	;wreg free
 21784  002C54  0060  F130  F0AE   	movff	?i1___ftadd,i1sprintf@fval
 21785  002C5A  0060  F134  F0AF   	movff	?i1___ftadd+1,i1sprintf@fval+1
 21786  002C60  0060  F138  F0B0   	movff	?i1___ftadd+2,i1sprintf@fval+2
 21787  002C66                     i1l1086:
 21788                           
 21789                           ;doprnt.c: 1100: {
 21790                           ;doprnt.c: 1101: double temp;
 21791                           ;doprnt.c: 1102: temp = scale(prec);
 21792  002C66  0100               	movlb	0	; () banked
 21793  002C68  51B1               	movf	i1sprintf@prec& (0+255),w,b
 21794  002C6A  EC93  F01F         	call	i1_scale
 21795  002C6E  0060  F108  F099   	movff	?i1_scale,i1sprintf@temp
 21796  002C74  0060  F10C  F09A   	movff	?i1_scale+1,i1sprintf@temp+1
 21797  002C7A  0060  F110  F09B   	movff	?i1_scale+2,i1sprintf@temp+2
 21798                           
 21799                           ;doprnt.c: 1103: temp *= fval - (double)val;
 21800  002C80  0060  F264  F033   	movff	i1sprintf@temp,i1___ftmul@f1
 21801  002C86  0060  F268  F034   	movff	i1sprintf@temp+1,i1___ftmul@f1+1
 21802  002C8C  0060  F26C  F035   	movff	i1sprintf@temp+2,i1___ftmul@f1+2
 21803  002C92  0060  F2B8  F04F   	movff	i1sprintf@fval,i1___ftadd@f2
 21804  002C98  0060  F2BC  F050   	movff	i1sprintf@fval+1,i1___ftadd@f2+1
 21805  002C9E  0060  F2C0  F051   	movff	i1sprintf@fval+2,i1___ftadd@f2+2
 21806  002CA4  0060  F2A8  F027   	movff	i1sprintf@val,i1___lltoft@c
 21807  002CAA  0060  F2AC  F028   	movff	i1sprintf@val+1,i1___lltoft@c+1
 21808  002CB0  0060  F2B0  F029   	movff	i1sprintf@val+2,i1___lltoft@c+2
 21809  002CB6  0060  F2B4  F02A   	movff	i1sprintf@val+3,i1___lltoft@c+3
 21810  002CBC  EC3B  F03D         	call	i1___lltoft	;wreg free
 21811  002CC0  0060  F09C  F030   	movff	?i1___lltoft,i1___ftneg@f1
 21812  002CC6  0060  F0A0  F031   	movff	?i1___lltoft+1,i1___ftneg@f1+1
 21813  002CCC  0060  F0A4  F032   	movff	?i1___lltoft+2,i1___ftneg@f1+2
 21814  002CD2  EC0B  F042         	call	i1___ftneg	;wreg free
 21815  002CD6  0060  F0C0  F04C   	movff	?i1___ftneg,i1___ftadd@f1
 21816  002CDC  0060  F0C4  F04D   	movff	?i1___ftneg+1,i1___ftadd@f1+1
 21817  002CE2  0060  F0C8  F04E   	movff	?i1___ftneg+2,i1___ftadd@f1+2
 21818  002CE8  EC23  F02A         	call	i1___ftadd	;wreg free
 21819  002CEC  0060  F130  F036   	movff	?i1___ftadd,i1___ftmul@f2
 21820  002CF2  0060  F134  F037   	movff	?i1___ftadd+1,i1___ftmul@f2+1
 21821  002CF8  0060  F138  F038   	movff	?i1___ftadd+2,i1___ftmul@f2+2
 21822  002CFE  ECD6  F030         	call	i1___ftmul	;wreg free
 21823  002D02  0060  F0CC  F099   	movff	?i1___ftmul,i1sprintf@temp
 21824  002D08  0060  F0D0  F09A   	movff	?i1___ftmul+1,i1sprintf@temp+1
 21825  002D0E  0060  F0D4  F09B   	movff	?i1___ftmul+2,i1sprintf@temp+2
 21826                           
 21827                           ;doprnt.c: 1104: val = (unsigned long)temp;
 21828  002D14  0060  F264  F018   	movff	i1sprintf@temp,i1___fttol@f1
 21829  002D1A  0060  F268  F019   	movff	i1sprintf@temp+1,i1___fttol@f1+1
 21830  002D20  0060  F26C  F01A   	movff	i1sprintf@temp+2,i1___fttol@f1+2
 21831  002D26  ECDF  F031         	call	i1___fttol	;wreg free
 21832  002D2A  0060  F060  F0AA   	movff	?i1___fttol,i1sprintf@val
 21833  002D30  0060  F064  F0AB   	movff	?i1___fttol+1,i1sprintf@val+1
 21834  002D36  0060  F068  F0AC   	movff	?i1___fttol+2,i1sprintf@val+2
 21835  002D3C  0060  F06C  F0AD   	movff	?i1___fttol+3,i1sprintf@val+3
 21836                           
 21837                           ;doprnt.c: 1105: }
 21838                           ;doprnt.c: 1106: while(prec && val % 10 == 0) {
 21839  002D42  D026               	goto	i1l1087
 21840  002D44                     
 21841                           ;doprnt.c: 1107: val /= 10;
 21842  002D44  0060  F2A8  F004   	movff	i1sprintf@val,i1___lldiv@dividend
 21843  002D4A  0060  F2AC  F005   	movff	i1sprintf@val+1,i1___lldiv@dividend+1
 21844  002D50  0060  F2B0  F006   	movff	i1sprintf@val+2,i1___lldiv@dividend+2
 21845  002D56  0060  F2B4  F007   	movff	i1sprintf@val+3,i1___lldiv@dividend+3
 21846  002D5C  0E0A               	movlw	10
 21847  002D5E  6E08               	movwf	i1___lldiv@divisor,c
 21848  002D60  0E00               	movlw	0
 21849  002D62  6E09               	movwf	i1___lldiv@divisor+1,c
 21850  002D64  0E00               	movlw	0
 21851  002D66  6E0A               	movwf	i1___lldiv@divisor+2,c
 21852  002D68  0E00               	movlw	0
 21853  002D6A  6E0B               	movwf	i1___lldiv@divisor+3,c
 21854  002D6C  ECA7  F03A         	call	i1___lldiv	;wreg free
 21855  002D70  0060  F010  F0AA   	movff	?i1___lldiv,i1sprintf@val
 21856  002D76  0060  F014  F0AB   	movff	?i1___lldiv+1,i1sprintf@val+1
 21857  002D7C  0060  F018  F0AC   	movff	?i1___lldiv+2,i1sprintf@val+2
 21858  002D82  0060  F01C  F0AD   	movff	?i1___lldiv+3,i1sprintf@val+3
 21859                           
 21860                           ;doprnt.c: 1108: prec--;
 21861  002D88  0100               	movlb	0	; () banked
 21862  002D8A  07B1               	decf	i1sprintf@prec& (0+255),f,b
 21863  002D8C  A0D8               	btfss	16344,0,c
 21864  002D8E  07B2               	decf	(i1sprintf@prec+1)& (0+255),f,b
 21865  002D90                     i1l1087:
 21866                           
 21867                           ; BSR set to: 0
 21868  002D90  0100               	movlb	0	; () banked
 21869  002D92  51B1               	movf	i1sprintf@prec& (0+255),w,b
 21870  002D94  11B2               	iorwf	(i1sprintf@prec+1)& (0+255),w,b
 21871  002D96  B4D8               	btfsc	16344,2,c
 21872  002D98  D046               	goto	i1l1093
 21873                           
 21874                           ; BSR set to: 0
 21875  002D9A  0060  F2A8  F011   	movff	i1sprintf@val,i1___llmod@dividend
 21876  002DA0  0060  F2AC  F012   	movff	i1sprintf@val+1,i1___llmod@dividend+1
 21877  002DA6  0060  F2B0  F013   	movff	i1sprintf@val+2,i1___llmod@dividend+2
 21878  002DAC  0060  F2B4  F014   	movff	i1sprintf@val+3,i1___llmod@dividend+3
 21879  002DB2  0E0A               	movlw	10
 21880  002DB4  6E15               	movwf	i1___llmod@divisor,c
 21881  002DB6  0E00               	movlw	0
 21882  002DB8  6E16               	movwf	i1___llmod@divisor+1,c
 21883  002DBA  0E00               	movlw	0
 21884  002DBC  6E17               	movwf	i1___llmod@divisor+2,c
 21885  002DBE  0E00               	movlw	0
 21886  002DC0  6E18               	movwf	i1___llmod@divisor+3,c
 21887  002DC2  ECCE  F03C         	call	i1___llmod	;wreg free
 21888  002DC6  5011               	movf	?i1___llmod,w,c
 21889  002DC8  1012               	iorwf	?i1___llmod+1,w,c
 21890  002DCA  1013               	iorwf	?i1___llmod+2,w,c
 21891  002DCC  1014               	iorwf	?i1___llmod+3,w,c
 21892  002DCE  A4D8               	btfss	16344,2,c
 21893  002DD0  D02A               	goto	i1l1093
 21894  002DD2  D7B8               	goto	i1l1088
 21895  002DD4                     i1l1081:
 21896                           
 21897                           ;doprnt.c: 1112: if(prec <= 12)
 21898  002DD4  0100               	movlb	0	; () banked
 21899  002DD6  BFB2               	btfsc	(i1sprintf@prec+1)& (0+255),7,b
 21900  002DD8  D006               	goto	i1u1479_20
 21901  002DDA  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 21902  002DDC  E124               	bnz	i1l11253
 21903  002DDE  0E0D               	movlw	13
 21904  002DE0  5DB1               	subwf	i1sprintf@prec& (0+255),w,b
 21905  002DE2  B0D8               	btfsc	16344,0,c
 21906  002DE4  D020               	goto	i1l1093
 21907  002DE6                     i1u1479_20:
 21908                           
 21909                           ; BSR set to: 0
 21910                           ;doprnt.c: 1113: fval += fround(prec);
 21911  002DE6  0060  F2B8  F04C   	movff	i1sprintf@fval,i1___ftadd@f1
 21912  002DEC  0060  F2BC  F04D   	movff	i1sprintf@fval+1,i1___ftadd@f1+1
 21913  002DF2  0060  F2C0  F04E   	movff	i1sprintf@fval+2,i1___ftadd@f1+2
 21914  002DF8  51B1               	movf	i1sprintf@prec& (0+255),w,b
 21915  002DFA  EC46  F025         	call	i1_fround
 21916  002DFE  0060  F108  F04F   	movff	?i1_fround,i1___ftadd@f2
 21917  002E04  0060  F10C  F050   	movff	?i1_fround+1,i1___ftadd@f2+1
 21918  002E0A  0060  F110  F051   	movff	?i1_fround+2,i1___ftadd@f2+2
 21919  002E10  EC23  F02A         	call	i1___ftadd	;wreg free
 21920  002E14  0060  F130  F0AE   	movff	?i1___ftadd,i1sprintf@fval
 21921  002E1A  0060  F134  F0AF   	movff	?i1___ftadd+1,i1sprintf@fval+1
 21922  002E20  0060  F138  F0B0   	movff	?i1___ftadd+2,i1sprintf@fval+2
 21923  002E26                     i1l1093:
 21924  002E26                     i1l11253:
 21925                           
 21926                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 21927  002E26  0100               	movlb	0	; () banked
 21928  002E28  BFA7               	btfsc	(i1sprintf@exp+1)& (0+255),7,b
 21929  002E2A  D006               	goto	i1u1480_20
 21930  002E2C  51A7               	movf	(i1sprintf@exp+1)& (0+255),w,b
 21931  002E2E  E123               	bnz	i1l11261
 21932  002E30  0E0A               	movlw	10
 21933  002E32  5DA6               	subwf	i1sprintf@exp& (0+255),w,b
 21934  002E34  B0D8               	btfsc	16344,0,c
 21935  002E36  D01F               	goto	i1u1483_20
 21936  002E38                     i1u1480_20:
 21937                           
 21938                           ; BSR set to: 0
 21939  002E38  51AE               	movf	i1sprintf@fval& (0+255),w,b
 21940  002E3A  11AF               	iorwf	(i1sprintf@fval+1)& (0+255),w,b
 21941  002E3C  11B0               	iorwf	(i1sprintf@fval+2)& (0+255),w,b
 21942  002E3E  B4D8               	btfsc	16344,2,c
 21943  002E40  D068               	goto	i1l1094
 21944                           
 21945                           ; BSR set to: 0
 21946  002E42  0060  F2B8  F018   	movff	i1sprintf@fval,i1___fttol@f1
 21947  002E48  0060  F2BC  F019   	movff	i1sprintf@fval+1,i1___fttol@f1+1
 21948  002E4E  0060  F2C0  F01A   	movff	i1sprintf@fval+2,i1___fttol@f1+2
 21949  002E54  ECDF  F031         	call	i1___fttol	;wreg free
 21950  002E58  5018               	movf	?i1___fttol,w,c
 21951  002E5A  1019               	iorwf	?i1___fttol+1,w,c
 21952  002E5C  101A               	iorwf	?i1___fttol+2,w,c
 21953  002E5E  101B               	iorwf	?i1___fttol+3,w,c
 21954  002E60  A4D8               	btfss	16344,2,c
 21955  002E62  D057               	goto	i1l1094
 21956  002E64  0100               	movlb	0	; () banked
 21957  002E66  BFA7               	btfsc	(i1sprintf@exp+1)& (0+255),7,b
 21958  002E68  D054               	goto	i1l1094
 21959  002E6A  51A7               	movf	(i1sprintf@exp+1)& (0+255),w,b
 21960  002E6C  E104               	bnz	i1l11261
 21961  002E6E  0E02               	movlw	2
 21962  002E70  5DA6               	subwf	i1sprintf@exp& (0+255),w,b
 21963  002E72  A0D8               	btfss	16344,0,c
 21964  002E74  D04E               	goto	i1l1094
 21965  002E76                     i1u1483_20:
 21966  002E76                     i1l11261:
 21967                           
 21968                           ; BSR set to: 0
 21969                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 21970  002E76  0060  F288  F060   	movff	i1sprintf@tmpval,i1___ftge@ff1
 21971  002E7C  0060  F28C  F061   	movff	i1sprintf@tmpval+1,i1___ftge@ff1+1
 21972  002E82  0060  F290  F062   	movff	i1sprintf@tmpval+2,i1___ftge@ff1+2
 21973  002E88  0E70               	movlw	112
 21974  002E8A  6F63               	movwf	i1___ftge@ff2& (0+255),b
 21975  002E8C  0E89               	movlw	137
 21976  002E8E  6F64               	movwf	(i1___ftge@ff2+1)& (0+255),b
 21977  002E90  0E40               	movlw	64
 21978  002E92  6F65               	movwf	(i1___ftge@ff2+2)& (0+255),b
 21979  002E94  EC88  F039         	call	i1___ftge	;wreg free
 21980  002E98  0100               	movlb	0	; () banked
 21981  002E9A  B0D8               	btfsc	16344,0,c
 21982  002E9C  D002               	goto	i1l1097
 21983                           
 21984                           ; BSR set to: 0
 21985                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 21986  002E9E  0EF7               	movlw	247
 21987  002EA0  D001               	goto	L27
 21988  002EA2                     i1l1097:
 21989                           
 21990                           ; BSR set to: 0
 21991                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 21992                           
 21993                           ; BSR set to: 0
 21994  002EA2  0EF8               	movlw	248
 21995  002EA4                     L27:
 21996  002EA4  27A6               	addwf	i1sprintf@exp& (0+255),f,b
 21997  002EA6  0EFF               	movlw	255
 21998  002EA8  23A7               	addwfc	(i1sprintf@exp+1)& (0+255),f,b
 21999                           
 22000                           ; BSR set to: 0
 22001                           ;doprnt.c: 1124: }
 22002                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 22003                           
 22004                           ; BSR set to: 0
 22005  002EAA  51A6               	movf	i1sprintf@exp& (0+255),w,b
 22006  002EAC  EC93  F01F         	call	i1_scale
 22007  002EB0  0060  F108  F0A2   	movff	?i1_scale,i1sprintf@tmpval
 22008  002EB6  0060  F10C  F0A3   	movff	?i1_scale+1,i1sprintf@tmpval+1
 22009  002EBC  0060  F110  F0A4   	movff	?i1_scale+2,i1sprintf@tmpval+2
 22010                           
 22011                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 22012  002EC2  0060  F2B8  F004   	movff	i1sprintf@fval,i1__tdiv_to_l_@f1
 22013  002EC8  0060  F2BC  F005   	movff	i1sprintf@fval+1,i1__tdiv_to_l_@f1+1
 22014  002ECE  0060  F2C0  F006   	movff	i1sprintf@fval+2,i1__tdiv_to_l_@f1+2
 22015  002ED4  0060  F288  F007   	movff	i1sprintf@tmpval,i1__tdiv_to_l_@f2
 22016  002EDA  0060  F28C  F008   	movff	i1sprintf@tmpval+1,i1__tdiv_to_l_@f2+1
 22017  002EE0  0060  F290  F009   	movff	i1sprintf@tmpval+2,i1__tdiv_to_l_@f2+2
 22018  002EE6  ECF6  F02D         	call	i1__tdiv_to_l_	;wreg free
 22019  002EEA  0060  F010  F0AA   	movff	?i1__tdiv_to_l_,i1sprintf@val
 22020  002EF0  0060  F014  F0AB   	movff	?i1__tdiv_to_l_+1,i1sprintf@val+1
 22021  002EF6  0060  F018  F0AC   	movff	?i1__tdiv_to_l_+2,i1sprintf@val+2
 22022  002EFC  0060  F01C  F0AD   	movff	?i1__tdiv_to_l_+3,i1sprintf@val+3
 22023                           
 22024                           ;doprnt.c: 1129: fval = 0.0;
 22025  002F02  0E00               	movlw	0
 22026  002F04  0100               	movlb	0	; () banked
 22027  002F06  6FAE               	movwf	i1sprintf@fval& (0+255),b
 22028  002F08  0E00               	movlw	0
 22029  002F0A  6FAF               	movwf	(i1sprintf@fval+1)& (0+255),b
 22030  002F0C  0E00               	movlw	0
 22031  002F0E  6FB0               	movwf	(i1sprintf@fval+2)& (0+255),b
 22032                           
 22033                           ;doprnt.c: 1130: } else {
 22034  002F10  D047               	goto	i1l1103
 22035  002F12                     i1l1094:
 22036                           
 22037                           ;doprnt.c: 1131: val = (unsigned long)fval;
 22038                           
 22039                           ; BSR set to: 0
 22040  002F12  0060  F2B8  F018   	movff	i1sprintf@fval,i1___fttol@f1
 22041  002F18  0060  F2BC  F019   	movff	i1sprintf@fval+1,i1___fttol@f1+1
 22042  002F1E  0060  F2C0  F01A   	movff	i1sprintf@fval+2,i1___fttol@f1+2
 22043  002F24  ECDF  F031         	call	i1___fttol	;wreg free
 22044  002F28  0060  F060  F0AA   	movff	?i1___fttol,i1sprintf@val
 22045  002F2E  0060  F064  F0AB   	movff	?i1___fttol+1,i1sprintf@val+1
 22046  002F34  0060  F068  F0AC   	movff	?i1___fttol+2,i1sprintf@val+2
 22047  002F3A  0060  F06C  F0AD   	movff	?i1___fttol+3,i1sprintf@val+3
 22048                           
 22049                           ;doprnt.c: 1132: fval -= (double)val;
 22050  002F40  0060  F2B8  F060   	movff	i1sprintf@fval,i1___ftsub@f1
 22051  002F46  0060  F2BC  F061   	movff	i1sprintf@fval+1,i1___ftsub@f1+1
 22052  002F4C  0060  F2C0  F062   	movff	i1sprintf@fval+2,i1___ftsub@f1+2
 22053  002F52  0060  F2A8  F027   	movff	i1sprintf@val,i1___lltoft@c
 22054  002F58  0060  F2AC  F028   	movff	i1sprintf@val+1,i1___lltoft@c+1
 22055  002F5E  0060  F2B0  F029   	movff	i1sprintf@val+2,i1___lltoft@c+2
 22056  002F64  0060  F2B4  F02A   	movff	i1sprintf@val+3,i1___lltoft@c+3
 22057  002F6A  EC3B  F03D         	call	i1___lltoft	;wreg free
 22058  002F6E  0060  F09C  F063   	movff	?i1___lltoft,i1___ftsub@f2
 22059  002F74  0060  F0A0  F064   	movff	?i1___lltoft+1,i1___ftsub@f2+1
 22060  002F7A  0060  F0A4  F065   	movff	?i1___lltoft+2,i1___ftsub@f2+2
 22061  002F80  EC69  F03F         	call	i1___ftsub	;wreg free
 22062  002F84  0060  F180  F0AE   	movff	?i1___ftsub,i1sprintf@fval
 22063  002F8A  0060  F184  F0AF   	movff	?i1___ftsub+1,i1sprintf@fval+1
 22064  002F90  0060  F188  F0B0   	movff	?i1___ftsub+2,i1sprintf@fval+2
 22065                           
 22066                           ;doprnt.c: 1133: exp = 0;
 22067  002F96  0E00               	movlw	0
 22068  002F98  0100               	movlb	0	; () banked
 22069  002F9A  6FA7               	movwf	(i1sprintf@exp+1)& (0+255),b
 22070  002F9C  0E00               	movlw	0
 22071  002F9E  6FA6               	movwf	i1sprintf@exp& (0+255),b
 22072  002FA0                     i1l1103:
 22073                           
 22074                           ; BSR set to: 0
 22075                           ;doprnt.c: 1134: }
 22076                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 22077                           
 22078                           ; BSR set to: 0
 22079  002FA0  0E01               	movlw	1
 22080  002FA2  6FB3               	movwf	i1sprintf@c& (0+255),b
 22081  002FA4                     i1l11281:
 22082                           
 22083                           ; BSR set to: 0
 22084  002FA4  0E0A               	movlw	10
 22085  002FA6  19B3               	xorwf	i1sprintf@c& (0+255),w,b
 22086  002FA8  B4D8               	btfsc	16344,2,c
 22087  002FAA  D01B               	goto	i1u1487_20
 22088                           
 22089                           ; BSR set to: 0
 22090                           ;doprnt.c: 1137: if(val < dpowers[c])
 22091                           
 22092                           ; BSR set to: 0
 22093                           
 22094                           ; BSR set to: 0
 22095  002FAC  51B3               	movf	i1sprintf@c& (0+255),w,b
 22096  002FAE  0D04               	mullw	4
 22097  002FB0  0EBF               	movlw	low _dpowers
 22098  002FB2  24F3               	addwf	16371,w,c
 22099  002FB4  6EF6               	movwf	16374,c
 22100  002FB6  0EFA               	movlw	high _dpowers
 22101  002FB8  20F4               	addwfc	16372,w,c
 22102  002FBA  6EF7               	movwf	16375,c
 22103  002FBC                     	if	1	;There are 3 active tblptr bytes
 22104  002FBC  6AF8               	clrf	16376,c
 22105  002FBE  0E00               	movlw	low (__mediumconst shr (0+16))
 22106  002FC0  22F8               	addwfc	16376,f,c
 22107  002FC2                     	endif
 22108  002FC2  0009               	tblrd		*+
 22109  002FC4  50F5               	movf	16373,w,c
 22110  002FC6  5DAA               	subwf	i1sprintf@val& (0+255),w,b
 22111  002FC8  0009               	tblrd		*+
 22112  002FCA  50F5               	movf	16373,w,c
 22113  002FCC  59AB               	subwfb	(i1sprintf@val+1)& (0+255),w,b
 22114  002FCE  0009               	tblrd		*+
 22115  002FD0  50F5               	movf	16373,w,c
 22116  002FD2  59AC               	subwfb	(i1sprintf@val+2)& (0+255),w,b
 22117  002FD4  0009               	tblrd		*+
 22118  002FD6  50F5               	movf	16373,w,c
 22119  002FD8  59AD               	subwfb	(i1sprintf@val+3)& (0+255),w,b
 22120  002FDA  A0D8               	btfss	16344,0,c
 22121  002FDC  D002               	goto	i1u1487_20
 22122                           
 22123                           ; BSR set to: 0
 22124                           
 22125                           ; BSR set to: 0
 22126                           
 22127                           ; BSR set to: 0
 22128                           ;doprnt.c: 1138: break;
 22129  002FDE  2BB3               	incf	i1sprintf@c& (0+255),f,b
 22130  002FE0  D7E1               	goto	i1l11281
 22131  002FE2                     i1u1487_20:
 22132                           
 22133                           ; BSR set to: 0
 22134                           ;doprnt.c: 1142: width -= prec + c + exp;
 22135                           
 22136                           ; BSR set to: 0
 22137  002FE2  0060  F2CC  F083   	movff	i1sprintf@c,??i1_sprintf
 22138  002FE8  6B84               	clrf	(??i1_sprintf+1)& (0+255),b
 22139  002FEA  BF83               	btfsc	??i1_sprintf& (0+255),7,b
 22140  002FEC  0784               	decf	(??i1_sprintf+1)& (0+255),f,b
 22141  002FEE  51B1               	movf	i1sprintf@prec& (0+255),w,b
 22142  002FF0  2783               	addwf	??i1_sprintf& (0+255),f,b
 22143  002FF2  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 22144  002FF4  2384               	addwfc	(??i1_sprintf+1)& (0+255),f,b
 22145  002FF6  51A6               	movf	i1sprintf@exp& (0+255),w,b
 22146  002FF8  2783               	addwf	??i1_sprintf& (0+255),f,b
 22147  002FFA  51A7               	movf	(i1sprintf@exp+1)& (0+255),w,b
 22148  002FFC  2384               	addwfc	(??i1_sprintf+1)& (0+255),f,b
 22149  002FFE  5183               	movf	??i1_sprintf& (0+255),w,b
 22150  003000  5FA8               	subwf	i1sprintf@width& (0+255),f,b
 22151  003002  5184               	movf	(??i1_sprintf+1)& (0+255),w,b
 22152  003004  5BA9               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 22153                           
 22154                           ; BSR set to: 0
 22155                           ;doprnt.c: 1143: if(
 22156                           ;doprnt.c: 1145: flag & 0x800 ||
 22157                           ;doprnt.c: 1147: prec)
 22158  003006  B7B5               	btfsc	(i1sprintf@flag+1)& (0+255),3,b
 22159  003008  D004               	goto	i1u1489_20
 22160                           
 22161                           ; BSR set to: 0
 22162  00300A  51B1               	movf	i1sprintf@prec& (0+255),w,b
 22163  00300C  11B2               	iorwf	(i1sprintf@prec+1)& (0+255),w,b
 22164  00300E  B4D8               	btfsc	16344,2,c
 22165  003010  D003               	goto	i1l1107
 22166  003012                     i1u1489_20:
 22167                           
 22168                           ; BSR set to: 0
 22169                           ;doprnt.c: 1148: width--;
 22170                           
 22171                           ; BSR set to: 0
 22172  003012  07A8               	decf	i1sprintf@width& (0+255),f,b
 22173  003014  A0D8               	btfss	16344,0,c
 22174  003016  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 22175  003018                     i1l1107:
 22176                           
 22177                           ; BSR set to: 0
 22178                           ;doprnt.c: 1149: if(flag & 0x03)
 22179                           
 22180                           ; BSR set to: 0
 22181  003018  0E03               	movlw	3
 22182  00301A  15B4               	andwf	i1sprintf@flag& (0+255),w,b
 22183  00301C  6F83               	movwf	??i1_sprintf& (0+255),b
 22184  00301E  0E00               	movlw	0
 22185  003020  15B5               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 22186  003022  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 22187  003024  5183               	movf	??i1_sprintf& (0+255),w,b
 22188  003026  1184               	iorwf	(??i1_sprintf+1)& (0+255),w,b
 22189  003028  B4D8               	btfsc	16344,2,c
 22190  00302A  D003               	goto	i1l1110
 22191                           
 22192                           ; BSR set to: 0
 22193                           ;doprnt.c: 1150: width--;
 22194  00302C  07A8               	decf	i1sprintf@width& (0+255),f,b
 22195  00302E  A0D8               	btfss	16344,0,c
 22196  003030  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 22197  003032                     i1l1110:
 22198                           
 22199                           ; BSR set to: 0
 22200                           ;doprnt.c: 1153: if(flag & 0x04) {
 22201                           
 22202                           ; BSR set to: 0
 22203  003032  A5B4               	btfss	i1sprintf@flag& (0+255),2,b
 22204  003034  D038               	goto	i1l1111
 22205                           
 22206                           ; BSR set to: 0
 22207                           ;doprnt.c: 1155: if(flag & 0x02)
 22208  003036  A3B4               	btfss	i1sprintf@flag& (0+255),1,b
 22209  003038  D014               	goto	i1l1112
 22210                           
 22211                           ; BSR set to: 0
 22212                           ;doprnt.c: 1159: ((*sp++ = (flag & 0x01 ? '-' : '+')));
 22213  00303A  B1B4               	btfsc	i1sprintf@flag& (0+255),0,b
 22214  00303C  D004               	goto	i1l1114
 22215                           
 22216                           ; BSR set to: 0
 22217  00303E  0E00               	movlw	0
 22218  003040  6F92               	movwf	(i1_sprintf$2173+1)& (0+255),b
 22219  003042  0E2B               	movlw	43
 22220  003044  D003               	goto	L28
 22221  003046                     i1l1114:
 22222                           
 22223                           ; BSR set to: 0
 22224                           
 22225                           ; BSR set to: 0
 22226  003046  0E00               	movlw	0
 22227  003048  6F92               	movwf	(i1_sprintf$2173+1)& (0+255),b
 22228  00304A  0E2D               	movlw	45
 22229  00304C                     L28:
 22230  00304C  6F91               	movwf	i1_sprintf$2173& (0+255),b
 22231                           
 22232                           ; BSR set to: 0
 22233                           
 22234                           ; BSR set to: 0
 22235  00304E  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22236  003054  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22237  00305A  0060  F247  FFDF   	movff	i1_sprintf$2173,16351
 22238  003060  D00A               	goto	i1l11321
 22239  003062                     i1l1112:
 22240                           
 22241                           ; BSR set to: 0
 22242                           ;doprnt.c: 1161: else
 22243                           ;doprnt.c: 1164: if(flag & 0x01)
 22244  003062  A1B4               	btfss	i1sprintf@flag& (0+255),0,b
 22245  003064  D018               	goto	i1l1119
 22246                           
 22247                           ; BSR set to: 0
 22248                           ;doprnt.c: 1165: ((*sp++ = (' ')));
 22249  003066  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22250  00306C  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22251  003072  0E20               	movlw	32
 22252  003074  6EDF               	movwf	16351,c
 22253  003076                     i1l11321:
 22254                           
 22255                           ; BSR set to: 0
 22256  003076  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22257  003078  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22258                           
 22259                           ; BSR set to: 0
 22260                           ;doprnt.c: 1168: while(width > 0) {
 22261                           
 22262                           ; BSR set to: 0
 22263  00307A  D00D               	goto	i1l1119
 22264  00307C                     i1l11323:
 22265                           
 22266                           ; BSR set to: 0
 22267                           ;doprnt.c: 1169: ((*sp++ = ('0')));
 22268  00307C  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22269  003082  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22270  003088  0E30               	movlw	48
 22271  00308A  6EDF               	movwf	16351,c
 22272                           
 22273                           ; BSR set to: 0
 22274  00308C  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22275  00308E  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22276                           
 22277                           ; BSR set to: 0
 22278                           ;doprnt.c: 1170: width--;
 22279  003090  07A8               	decf	i1sprintf@width& (0+255),f,b
 22280  003092  A0D8               	btfss	16344,0,c
 22281  003094  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 22282  003096                     i1l1119:
 22283                           
 22284                           ; BSR set to: 0
 22285                           
 22286                           ; BSR set to: 0
 22287  003096  BFA9               	btfsc	(i1sprintf@width+1)& (0+255),7,b
 22288  003098  D0A0               	goto	i1l1134
 22289  00309A  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 22290  00309C  E1EF               	bnz	i1l11323
 22291  00309E  05A8               	decf	i1sprintf@width& (0+255),w,b
 22292  0030A0  A0D8               	btfss	16344,0,c
 22293  0030A2  D09B               	goto	i1l1134
 22294  0030A4  D7EB               	goto	i1l1120
 22295  0030A6                     i1l1111:
 22296                           
 22297                           ; BSR set to: 0
 22298                           ;doprnt.c: 1175: {
 22299                           ;doprnt.c: 1177: if(!(flag & 0x08))
 22300  0030A6  A7B4               	btfss	i1sprintf@flag& (0+255),3,b
 22301  0030A8  D00E               	goto	i1l1124
 22302  0030AA  D014               	goto	i1u1497_20
 22303  0030AC                     i1l11333:
 22304                           
 22305                           ; BSR set to: 0
 22306                           ;doprnt.c: 1181: ((*sp++ = (' ')));
 22307  0030AC  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22308  0030B2  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22309  0030B8  0E20               	movlw	32
 22310  0030BA  6EDF               	movwf	16351,c
 22311                           
 22312                           ; BSR set to: 0
 22313  0030BC  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22314  0030BE  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22315                           
 22316                           ; BSR set to: 0
 22317                           ;doprnt.c: 1182: width--;
 22318  0030C0  07A8               	decf	i1sprintf@width& (0+255),f,b
 22319  0030C2  A0D8               	btfss	16344,0,c
 22320  0030C4  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 22321  0030C6                     i1l1124:
 22322                           
 22323                           ; BSR set to: 0
 22324                           
 22325                           ; BSR set to: 0
 22326  0030C6  BFA9               	btfsc	(i1sprintf@width+1)& (0+255),7,b
 22327  0030C8  D005               	goto	i1u1497_20
 22328  0030CA  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 22329  0030CC  E1EF               	bnz	i1l11333
 22330  0030CE  05A8               	decf	i1sprintf@width& (0+255),w,b
 22331  0030D0  B0D8               	btfsc	16344,0,c
 22332  0030D2  D7EC               	goto	i1l1125
 22333  0030D4                     i1u1497_20:
 22334                           
 22335                           ; BSR set to: 0
 22336                           ;doprnt.c: 1183: }
 22337                           ;doprnt.c: 1186: if(flag & 0x02)
 22338                           
 22339                           ; BSR set to: 0
 22340  0030D4  A3B4               	btfss	i1sprintf@flag& (0+255),1,b
 22341  0030D6  D014               	goto	i1l1127
 22342                           
 22343                           ; BSR set to: 0
 22344                           ;doprnt.c: 1190: ((*sp++ = (flag & 0x01 ? '-' : '+')));
 22345  0030D8  B1B4               	btfsc	i1sprintf@flag& (0+255),0,b
 22346  0030DA  D004               	goto	i1l1129
 22347                           
 22348                           ; BSR set to: 0
 22349  0030DC  0E00               	movlw	0
 22350  0030DE  6F94               	movwf	(i1_sprintf$2174+1)& (0+255),b
 22351  0030E0  0E2B               	movlw	43
 22352  0030E2  D003               	goto	L29
 22353  0030E4                     i1l1129:
 22354                           
 22355                           ; BSR set to: 0
 22356                           
 22357                           ; BSR set to: 0
 22358  0030E4  0E00               	movlw	0
 22359  0030E6  6F94               	movwf	(i1_sprintf$2174+1)& (0+255),b
 22360  0030E8  0E2D               	movlw	45
 22361  0030EA                     L29:
 22362  0030EA  6F93               	movwf	i1_sprintf$2174& (0+255),b
 22363                           
 22364                           ; BSR set to: 0
 22365                           
 22366                           ; BSR set to: 0
 22367  0030EC  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22368  0030F2  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22369  0030F8  0060  F24F  FFDF   	movff	i1_sprintf$2174,16351
 22370  0030FE  D06B               	goto	L38
 22371  003100                     i1l1127:
 22372                           
 22373                           ; BSR set to: 0
 22374                           ;doprnt.c: 1192: else if(flag & 0x01)
 22375  003100  A1B4               	btfss	i1sprintf@flag& (0+255),0,b
 22376  003102  D06B               	goto	i1l1134
 22377                           
 22378                           ; BSR set to: 0
 22379                           ;doprnt.c: 1193: ((*sp++ = (' ')));
 22380  003104  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22381  00310A  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22382  003110  0E20               	movlw	32
 22383  003112  D060               	goto	L30
 22384  003114                     
 22385                           ; BSR set to: 0
 22386                           ;doprnt.c: 1200: {
 22387                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 22388                           
 22389                           ; BSR set to: 0
 22390  003114  0060  F2A8  F004   	movff	i1sprintf@val,i1___lldiv@dividend
 22391  00311A  0060  F2AC  F005   	movff	i1sprintf@val+1,i1___lldiv@dividend+1
 22392  003120  0060  F2B0  F006   	movff	i1sprintf@val+2,i1___lldiv@dividend+2
 22393  003126  0060  F2B4  F007   	movff	i1sprintf@val+3,i1___lldiv@dividend+3
 22394  00312C  51B3               	movf	i1sprintf@c& (0+255),w,b
 22395  00312E  0D04               	mullw	4
 22396  003130  0EBF               	movlw	low _dpowers
 22397  003132  24F3               	addwf	16371,w,c
 22398  003134  6EF6               	movwf	16374,c
 22399  003136  0EFA               	movlw	high _dpowers
 22400  003138  20F4               	addwfc	16372,w,c
 22401  00313A  6EF7               	movwf	16375,c
 22402  00313C                     	if	1	;There are 3 active tblptr bytes
 22403  00313C  6AF8               	clrf	16376,c
 22404  00313E  0E00               	movlw	low (__mediumconst shr (0+16))
 22405  003140  22F8               	addwfc	16376,f,c
 22406  003142                     	endif
 22407  003142  0009               	tblrd		*+
 22408  003144  006F FFD4  F008    	movff	16373,i1___lldiv@divisor
 22409  00314A  0009               	tblrd		*+
 22410  00314C  006F FFD4  F009    	movff	16373,i1___lldiv@divisor+1
 22411  003152  0009               	tblrd		*+
 22412  003154  006F FFD4  F00A    	movff	16373,i1___lldiv@divisor+2
 22413  00315A  000A               	tblrd		*-
 22414  00315C  006F FFD4  F00B    	movff	16373,i1___lldiv@divisor+3
 22415  003162  ECA7  F03A         	call	i1___lldiv	;wreg free
 22416  003166  0060  F010  F0A2   	movff	?i1___lldiv,i1sprintf@tmpval
 22417  00316C  0060  F014  F0A3   	movff	?i1___lldiv+1,i1sprintf@tmpval+1
 22418  003172  0060  F018  F0A4   	movff	?i1___lldiv+2,i1sprintf@tmpval+2
 22419  003178  0060  F01C  F0A5   	movff	?i1___lldiv+3,i1sprintf@tmpval+3
 22420                           
 22421                           ;doprnt.c: 1202: tmpval.vd %= 10;
 22422  00317E  0060  F288  F011   	movff	i1sprintf@tmpval,i1___llmod@dividend
 22423  003184  0060  F28C  F012   	movff	i1sprintf@tmpval+1,i1___llmod@dividend+1
 22424  00318A  0060  F290  F013   	movff	i1sprintf@tmpval+2,i1___llmod@dividend+2
 22425  003190  0060  F294  F014   	movff	i1sprintf@tmpval+3,i1___llmod@dividend+3
 22426  003196  0E0A               	movlw	10
 22427  003198  6E15               	movwf	i1___llmod@divisor,c
 22428  00319A  0E00               	movlw	0
 22429  00319C  6E16               	movwf	i1___llmod@divisor+1,c
 22430  00319E  0E00               	movlw	0
 22431  0031A0  6E17               	movwf	i1___llmod@divisor+2,c
 22432  0031A2  0E00               	movlw	0
 22433  0031A4  6E18               	movwf	i1___llmod@divisor+3,c
 22434  0031A6  ECCE  F03C         	call	i1___llmod	;wreg free
 22435  0031AA  0060  F044  F0A2   	movff	?i1___llmod,i1sprintf@tmpval
 22436  0031B0  0060  F048  F0A3   	movff	?i1___llmod+1,i1sprintf@tmpval+1
 22437  0031B6  0060  F04C  F0A4   	movff	?i1___llmod+2,i1sprintf@tmpval+2
 22438  0031BC  0060  F050  F0A5   	movff	?i1___llmod+3,i1sprintf@tmpval+3
 22439                           
 22440                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 22441  0031C2  0100               	movlb	0	; () banked
 22442  0031C4  51A2               	movf	i1sprintf@tmpval& (0+255),w,b
 22443  0031C6  0F30               	addlw	48
 22444  0031C8  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22445  0031CE  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22446  0031D4                     L30:
 22447  0031D4  6EDF               	movwf	16351,c
 22448  0031D6                     L38:
 22449                           
 22450                           ; BSR set to: 0
 22451  0031D6  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22452  0031D8  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22453  0031DA                     i1l1134:
 22454                           
 22455                           ; BSR set to: 0
 22456                           
 22457                           ; BSR set to: 0
 22458  0031DA  07B3               	decf	i1sprintf@c& (0+255),f,b
 22459  0031DC  29B3               	incf	i1sprintf@c& (0+255),w,b
 22460  0031DE  B4D8               	btfsc	16344,2,c
 22461  0031E0  D00E               	goto	i1l1137
 22462  0031E2  D798               	goto	i1l1135
 22463  0031E4                     i1l11365:
 22464                           
 22465                           ; BSR set to: 0
 22466                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 22467  0031E4  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22468  0031EA  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22469  0031F0  0E30               	movlw	48
 22470  0031F2  6EDF               	movwf	16351,c
 22471                           
 22472                           ; BSR set to: 0
 22473  0031F4  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22474  0031F6  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22475                           
 22476                           ; BSR set to: 0
 22477                           ;doprnt.c: 1209: exp--;
 22478  0031F8  07A6               	decf	i1sprintf@exp& (0+255),f,b
 22479  0031FA  A0D8               	btfss	16344,0,c
 22480  0031FC  07A7               	decf	(i1sprintf@exp+1)& (0+255),f,b
 22481  0031FE                     i1l1137:
 22482                           
 22483                           ; BSR set to: 0
 22484                           
 22485                           ; BSR set to: 0
 22486  0031FE  BFA7               	btfsc	(i1sprintf@exp+1)& (0+255),7,b
 22487  003200  D005               	goto	i1u1502_20
 22488  003202  51A7               	movf	(i1sprintf@exp+1)& (0+255),w,b
 22489  003204  E1EF               	bnz	i1l11365
 22490  003206  05A6               	decf	i1sprintf@exp& (0+255),w,b
 22491  003208  B0D8               	btfsc	16344,0,c
 22492  00320A  D7EC               	goto	i1l1138
 22493  00320C                     i1u1502_20:
 22494                           
 22495                           ; BSR set to: 0
 22496                           ;doprnt.c: 1210: }
 22497                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 22498                           
 22499                           ; BSR set to: 0
 22500  00320C  BFB2               	btfsc	(i1sprintf@prec+1)& (0+255),7,b
 22501  00320E  D009               	goto	i1l1140
 22502  003210  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 22503  003212  E104               	bnz	i1u1503_20
 22504  003214  0E09               	movlw	9
 22505  003216  5DB1               	subwf	i1sprintf@prec& (0+255),w,b
 22506  003218  A0D8               	btfss	16344,0,c
 22507  00321A  D003               	goto	i1l1140
 22508  00321C                     i1u1503_20:
 22509                           
 22510                           ; BSR set to: 0
 22511                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 22512  00321C  0E08               	movlw	8
 22513  00321E  6FB3               	movwf	i1sprintf@c& (0+255),b
 22514  003220  D003               	goto	i1l1141
 22515  003222                     i1l1140:
 22516                           
 22517                           ; BSR set to: 0
 22518                           ;doprnt.c: 1213: else
 22519                           ;doprnt.c: 1214: c = prec;
 22520  003222  0060  F2C4  F0B3   	movff	i1sprintf@prec,i1sprintf@c
 22521  003228                     i1l1141:
 22522                           
 22523                           ; BSR set to: 0
 22524                           ;doprnt.c: 1215: prec -= c;
 22525                           
 22526                           ; BSR set to: 0
 22527  003228  51B3               	movf	i1sprintf@c& (0+255),w,b
 22528  00322A  5FB1               	subwf	i1sprintf@prec& (0+255),f,b
 22529  00322C  0E00               	movlw	0
 22530  00322E  BFB3               	btfsc	i1sprintf@c& (0+255),7,b
 22531  003230  0EFF               	movlw	255
 22532  003232  5BB2               	subwfb	(i1sprintf@prec+1)& (0+255),f,b
 22533                           
 22534                           ; BSR set to: 0
 22535                           ;doprnt.c: 1217: if(c || flag & 0x800)
 22536  003234  51B3               	movf	i1sprintf@c& (0+255),w,b
 22537  003236  A4D8               	btfss	16344,2,c
 22538  003238  D002               	goto	i1u1505_20
 22539                           
 22540                           ; BSR set to: 0
 22541  00323A  A7B5               	btfss	(i1sprintf@flag+1)& (0+255),3,b
 22542  00323C  D00A               	goto	i1l1142
 22543  00323E                     i1u1505_20:
 22544                           
 22545                           ; BSR set to: 0
 22546                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 22547                           
 22548                           ; BSR set to: 0
 22549  00323E  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22550  003244  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22551  00324A  0E2E               	movlw	46
 22552  00324C  6EDF               	movwf	16351,c
 22553                           
 22554                           ; BSR set to: 0
 22555  00324E  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22556  003250  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22557  003252                     i1l1142:
 22558                           
 22559                           ; BSR set to: 0
 22560                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 22561                           
 22562                           ; BSR set to: 0
 22563  003252  51B3               	movf	i1sprintf@c& (0+255),w,b
 22564  003254  EC93  F01F         	call	i1_scale
 22565  003258  0060  F108  F089   	movff	?i1_scale,i1_sprintf$3008
 22566  00325E  0060  F10C  F08A   	movff	?i1_scale+1,i1_sprintf$3008+1
 22567  003264  0060  F110  F08B   	movff	?i1_scale+2,i1_sprintf$3008+2
 22568                           
 22569                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 22570  00326A  0060  F2B8  F036   	movff	i1sprintf@fval,i1___ftmul@f2
 22571  003270  0060  F2BC  F037   	movff	i1sprintf@fval+1,i1___ftmul@f2+1
 22572  003276  0060  F2C0  F038   	movff	i1sprintf@fval+2,i1___ftmul@f2+2
 22573  00327C  0060  F224  F033   	movff	i1_sprintf$3008,i1___ftmul@f1
 22574  003282  0060  F228  F034   	movff	i1_sprintf$3008+1,i1___ftmul@f1+1
 22575  003288  0060  F22C  F035   	movff	i1_sprintf$3008+2,i1___ftmul@f1+2
 22576  00328E  ECD6  F030         	call	i1___ftmul	;wreg free
 22577  003292  0060  F0CC  F018   	movff	?i1___ftmul,i1___fttol@f1
 22578  003298  0060  F0D0  F019   	movff	?i1___ftmul+1,i1___fttol@f1+1
 22579  00329E  0060  F0D4  F01A   	movff	?i1___ftmul+2,i1___fttol@f1+2
 22580  0032A4  ECDF  F031         	call	i1___fttol	;wreg free
 22581  0032A8  0060  F060  F0AA   	movff	?i1___fttol,i1sprintf@val
 22582  0032AE  0060  F064  F0AB   	movff	?i1___fttol+1,i1sprintf@val+1
 22583  0032B4  0060  F068  F0AC   	movff	?i1___fttol+2,i1sprintf@val+2
 22584  0032BA  0060  F06C  F0AD   	movff	?i1___fttol+3,i1sprintf@val+3
 22585                           
 22586                           ;doprnt.c: 1228: while(c--) {
 22587  0032C0  D099               	goto	i1l1145
 22588  0032C2                     
 22589                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 22590  0032C2  0060  F2A8  F004   	movff	i1sprintf@val,i1___lldiv@dividend
 22591  0032C8  0060  F2AC  F005   	movff	i1sprintf@val+1,i1___lldiv@dividend+1
 22592  0032CE  0060  F2B0  F006   	movff	i1sprintf@val+2,i1___lldiv@dividend+2
 22593  0032D4  0060  F2B4  F007   	movff	i1sprintf@val+3,i1___lldiv@dividend+3
 22594  0032DA  0100               	movlb	0	; () banked
 22595  0032DC  51B3               	movf	i1sprintf@c& (0+255),w,b
 22596  0032DE  0D04               	mullw	4
 22597  0032E0  0EBF               	movlw	low _dpowers
 22598  0032E2  24F3               	addwf	16371,w,c
 22599  0032E4  6EF6               	movwf	16374,c
 22600  0032E6  0EFA               	movlw	high _dpowers
 22601  0032E8  20F4               	addwfc	16372,w,c
 22602  0032EA  6EF7               	movwf	16375,c
 22603  0032EC                     	if	1	;There are 3 active tblptr bytes
 22604  0032EC  6AF8               	clrf	16376,c
 22605  0032EE  0E00               	movlw	low (__mediumconst shr (0+16))
 22606  0032F0  22F8               	addwfc	16376,f,c
 22607  0032F2                     	endif
 22608  0032F2  0009               	tblrd		*+
 22609  0032F4  006F FFD4  F008    	movff	16373,i1___lldiv@divisor
 22610  0032FA  0009               	tblrd		*+
 22611  0032FC  006F FFD4  F009    	movff	16373,i1___lldiv@divisor+1
 22612  003302  0009               	tblrd		*+
 22613  003304  006F FFD4  F00A    	movff	16373,i1___lldiv@divisor+2
 22614  00330A  000A               	tblrd		*-
 22615  00330C  006F FFD4  F00B    	movff	16373,i1___lldiv@divisor+3
 22616  003312  ECA7  F03A         	call	i1___lldiv	;wreg free
 22617  003316  0060  F010  F0A2   	movff	?i1___lldiv,i1sprintf@tmpval
 22618  00331C  0060  F014  F0A3   	movff	?i1___lldiv+1,i1sprintf@tmpval+1
 22619  003322  0060  F018  F0A4   	movff	?i1___lldiv+2,i1sprintf@tmpval+2
 22620  003328  0060  F01C  F0A5   	movff	?i1___lldiv+3,i1sprintf@tmpval+3
 22621                           
 22622                           ;doprnt.c: 1230: tmpval.vd %= 10;
 22623  00332E  0060  F288  F011   	movff	i1sprintf@tmpval,i1___llmod@dividend
 22624  003334  0060  F28C  F012   	movff	i1sprintf@tmpval+1,i1___llmod@dividend+1
 22625  00333A  0060  F290  F013   	movff	i1sprintf@tmpval+2,i1___llmod@dividend+2
 22626  003340  0060  F294  F014   	movff	i1sprintf@tmpval+3,i1___llmod@dividend+3
 22627  003346  0E0A               	movlw	10
 22628  003348  6E15               	movwf	i1___llmod@divisor,c
 22629  00334A  0E00               	movlw	0
 22630  00334C  6E16               	movwf	i1___llmod@divisor+1,c
 22631  00334E  0E00               	movlw	0
 22632  003350  6E17               	movwf	i1___llmod@divisor+2,c
 22633  003352  0E00               	movlw	0
 22634  003354  6E18               	movwf	i1___llmod@divisor+3,c
 22635  003356  ECCE  F03C         	call	i1___llmod	;wreg free
 22636  00335A  0060  F044  F0A2   	movff	?i1___llmod,i1sprintf@tmpval
 22637  003360  0060  F048  F0A3   	movff	?i1___llmod+1,i1sprintf@tmpval+1
 22638  003366  0060  F04C  F0A4   	movff	?i1___llmod+2,i1sprintf@tmpval+2
 22639  00336C  0060  F050  F0A5   	movff	?i1___llmod+3,i1sprintf@tmpval+3
 22640                           
 22641                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 22642  003372  0100               	movlb	0	; () banked
 22643  003374  51A2               	movf	i1sprintf@tmpval& (0+255),w,b
 22644  003376  0F30               	addlw	48
 22645  003378  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22646  00337E  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22647  003384  6EDF               	movwf	16351,c
 22648                           
 22649                           ; BSR set to: 0
 22650  003386  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22651  003388  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22652                           
 22653                           ; BSR set to: 0
 22654                           ;doprnt.c: 1232: val %= dpowers[c];
 22655  00338A  0060  F2A8  F011   	movff	i1sprintf@val,i1___llmod@dividend
 22656  003390  0060  F2AC  F012   	movff	i1sprintf@val+1,i1___llmod@dividend+1
 22657  003396  0060  F2B0  F013   	movff	i1sprintf@val+2,i1___llmod@dividend+2
 22658  00339C  0060  F2B4  F014   	movff	i1sprintf@val+3,i1___llmod@dividend+3
 22659  0033A2  51B3               	movf	i1sprintf@c& (0+255),w,b
 22660  0033A4  0D04               	mullw	4
 22661  0033A6  0EBF               	movlw	low _dpowers
 22662  0033A8  24F3               	addwf	16371,w,c
 22663  0033AA  6EF6               	movwf	16374,c
 22664  0033AC  0EFA               	movlw	high _dpowers
 22665  0033AE  20F4               	addwfc	16372,w,c
 22666  0033B0  6EF7               	movwf	16375,c
 22667  0033B2                     	if	1	;There are 3 active tblptr bytes
 22668  0033B2  6AF8               	clrf	16376,c
 22669  0033B4  0E00               	movlw	low (__mediumconst shr (0+16))
 22670  0033B6  22F8               	addwfc	16376,f,c
 22671  0033B8                     	endif
 22672  0033B8  0009               	tblrd		*+
 22673  0033BA  006F FFD4  F015    	movff	16373,i1___llmod@divisor
 22674  0033C0  0009               	tblrd		*+
 22675  0033C2  006F FFD4  F016    	movff	16373,i1___llmod@divisor+1
 22676  0033C8  0009               	tblrd		*+
 22677  0033CA  006F FFD4  F017    	movff	16373,i1___llmod@divisor+2
 22678  0033D0  000A               	tblrd		*-
 22679  0033D2  006F FFD4  F018    	movff	16373,i1___llmod@divisor+3
 22680  0033D8  ECCE  F03C         	call	i1___llmod	;wreg free
 22681  0033DC  0060  F044  F0AA   	movff	?i1___llmod,i1sprintf@val
 22682  0033E2  0060  F048  F0AB   	movff	?i1___llmod+1,i1sprintf@val+1
 22683  0033E8  0060  F04C  F0AC   	movff	?i1___llmod+2,i1sprintf@val+2
 22684  0033EE  0060  F050  F0AD   	movff	?i1___llmod+3,i1sprintf@val+3
 22685  0033F4                     i1l1145:
 22686  0033F4  0100               	movlb	0	; () banked
 22687  0033F6  07B3               	decf	i1sprintf@c& (0+255),f,b
 22688  0033F8  29B3               	incf	i1sprintf@c& (0+255),w,b
 22689  0033FA  B4D8               	btfsc	16344,2,c
 22690  0033FC  D00E               	goto	i1l1148
 22691  0033FE  D761               	goto	i1l1146
 22692  003400                     
 22693                           ; BSR set to: 0
 22694                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 22695                           
 22696                           ; BSR set to: 0
 22697  003400  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22698  003406  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22699  00340C  0E30               	movlw	48
 22700  00340E  6EDF               	movwf	16351,c
 22701                           
 22702                           ; BSR set to: 0
 22703  003410  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22704  003412  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22705                           
 22706                           ; BSR set to: 0
 22707                           ;doprnt.c: 1237: prec--;
 22708  003414  07B1               	decf	i1sprintf@prec& (0+255),f,b
 22709  003416  A0D8               	btfss	16344,0,c
 22710  003418  07B2               	decf	(i1sprintf@prec+1)& (0+255),f,b
 22711  00341A                     i1l1148:
 22712                           
 22713                           ; BSR set to: 0
 22714                           
 22715                           ; BSR set to: 0
 22716  00341A  51B1               	movf	i1sprintf@prec& (0+255),w,b
 22717  00341C  11B2               	iorwf	(i1sprintf@prec+1)& (0+255),w,b
 22718  00341E  A4D8               	btfss	16344,2,c
 22719  003420  D7EF               	goto	i1l1149
 22720                           
 22721                           ; BSR set to: 0
 22722                           ;doprnt.c: 1238: }
 22723                           ;doprnt.c: 1240: if((flag & 0x08) && width > 0)
 22724  003422  B7B4               	btfsc	i1sprintf@flag& (0+255),3,b
 22725                           
 22726                           ; BSR set to: 0
 22727  003424  BFA9               	btfsc	(i1sprintf@width+1)& (0+255),7,b
 22728  003426  D2DD               	goto	i1u1549_20
 22729  003428  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 22730  00342A  E103               	bnz	i1l11413
 22731  00342C  05A8               	decf	i1sprintf@width& (0+255),w,b
 22732  00342E  A0D8               	btfss	16344,0,c
 22733  003430  D2D8               	goto	i1u1549_20
 22734  003432                     i1u1509_20:
 22735  003432                     i1l11413:
 22736                           
 22737                           ; BSR set to: 0
 22738                           ;doprnt.c: 1242: ((*sp++ = (' ')));
 22739  003432  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 22740  003438  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 22741  00343E  0E20               	movlw	32
 22742  003440  6EDF               	movwf	16351,c
 22743                           
 22744                           ; BSR set to: 0
 22745  003442  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 22746  003444  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 22747                           
 22748                           ; BSR set to: 0
 22749                           ;doprnt.c: 1243: while(--width);
 22750  003446  07A8               	decf	i1sprintf@width& (0+255),f,b
 22751  003448  A0D8               	btfss	16344,0,c
 22752  00344A  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 22753  00344C  51A8               	movf	i1sprintf@width& (0+255),w,b
 22754  00344E  11A9               	iorwf	(i1sprintf@width+1)& (0+255),w,b
 22755  003450  B4D8               	btfsc	16344,2,c
 22756  003452  D2C7               	goto	i1u1549_20
 22757  003454  D7EE               	goto	i1u1509_20
 22758  003456                     i1l1006:
 22759                           
 22760                           ; BSR set to: 0
 22761                           ;doprnt.c: 1246: }
 22762                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
 22763  003456  BFB4               	btfsc	i1sprintf@flag& (0+255),7,b
 22764  003458  D038               	goto	i1l1154
 22765                           
 22766                           ; BSR set to: 0
 22767                           ;doprnt.c: 1253: {
 22768                           ;doprnt.c: 1255: if(flag & 0x10)
 22769  00345A  A9B4               	btfss	i1sprintf@flag& (0+255),4,b
 22770  00345C  D014               	goto	i1l1155
 22771                           
 22772                           ; BSR set to: 0
 22773                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 22774  00345E  0060  F283  FFD9   	movff	i1sprintf@ap,16345
 22775  003464  0060  F287  FFDA   	movff	i1sprintf@ap+1,16346
 22776  00346A  006F FF78  F0AA    	movff	16350,i1sprintf@val
 22777  003470  006F FF78  F0AB    	movff	16350,i1sprintf@val+1
 22778  003476  006F FF78  F0AC    	movff	16350,i1sprintf@val+2
 22779  00347C  006F FF78  F0AD    	movff	16350,i1sprintf@val+3
 22780                           
 22781                           ; BSR set to: 0
 22782  003482  0E04               	movlw	4
 22783  003484  D012               	goto	L31
 22784  003486                     i1l1155:
 22785                           
 22786                           ; BSR set to: 0
 22787                           ;doprnt.c: 1257: else
 22788                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 22789                           
 22790                           ; BSR set to: 0
 22791  003486  0060  F283  FFD9   	movff	i1sprintf@ap,16345
 22792  00348C  0060  F287  FFDA   	movff	i1sprintf@ap+1,16346
 22793  003492  006F FF78  F0AA    	movff	16350,i1sprintf@val
 22794  003498  006F FF74  F0AB    	movff	16349,i1sprintf@val+1
 22795  00349E  0E00               	movlw	0
 22796  0034A0  BFAB               	btfsc	(i1sprintf@val+1)& (0+255),7,b
 22797  0034A2  0EFF               	movlw	-1
 22798  0034A4  6FAC               	movwf	(i1sprintf@val+2)& (0+255),b
 22799  0034A6  6FAD               	movwf	(i1sprintf@val+3)& (0+255),b
 22800                           
 22801                           ; BSR set to: 0
 22802  0034A8  0E02               	movlw	2
 22803  0034AA                     L31:
 22804  0034AA  27A0               	addwf	i1sprintf@ap& (0+255),f,b
 22805  0034AC  0E00               	movlw	0
 22806  0034AE  23A1               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 22807                           
 22808                           ; BSR set to: 0
 22809                           ;doprnt.c: 1261: if((long)val < 0) {
 22810                           
 22811                           ; BSR set to: 0
 22812  0034B0  AFAD               	btfss	(i1sprintf@val+3)& (0+255),7,b
 22813  0034B2  D039               	goto	i1l1160
 22814                           
 22815                           ; BSR set to: 0
 22816                           ;doprnt.c: 1262: flag |= 0x03;
 22817  0034B4  0E03               	movlw	3
 22818  0034B6  13B4               	iorwf	i1sprintf@flag& (0+255),f,b
 22819                           
 22820                           ; BSR set to: 0
 22821                           ;doprnt.c: 1263: val = -val;
 22822  0034B8  1FAD               	comf	(i1sprintf@val+3)& (0+255),f,b
 22823  0034BA  1FAC               	comf	(i1sprintf@val+2)& (0+255),f,b
 22824  0034BC  1FAB               	comf	(i1sprintf@val+1)& (0+255),f,b
 22825  0034BE  6DAA               	negf	i1sprintf@val& (0+255),b
 22826  0034C0  0E00               	movlw	0
 22827  0034C2  23AB               	addwfc	(i1sprintf@val+1)& (0+255),f,b
 22828  0034C4  23AC               	addwfc	(i1sprintf@val+2)& (0+255),f,b
 22829  0034C6  23AD               	addwfc	(i1sprintf@val+3)& (0+255),f,b
 22830                           
 22831                           ; BSR set to: 0
 22832                           ;doprnt.c: 1264: }
 22833                           ;doprnt.c: 1266: }
 22834  0034C8  D02E               	goto	i1l1160
 22835  0034CA                     i1l1154:
 22836                           
 22837                           ; BSR set to: 0
 22838                           ;doprnt.c: 1268: else
 22839                           ;doprnt.c: 1273: {
 22840                           ;doprnt.c: 1281: if(flag & 0x10)
 22841  0034CA  A9B4               	btfss	i1sprintf@flag& (0+255),4,b
 22842  0034CC  D014               	goto	i1l1159
 22843                           
 22844                           ; BSR set to: 0
 22845                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 22846  0034CE  0060  F283  FFD9   	movff	i1sprintf@ap,16345
 22847  0034D4  0060  F287  FFDA   	movff	i1sprintf@ap+1,16346
 22848  0034DA  006F FF78  F0AA    	movff	16350,i1sprintf@val
 22849  0034E0  006F FF78  F0AB    	movff	16350,i1sprintf@val+1
 22850  0034E6  006F FF78  F0AC    	movff	16350,i1sprintf@val+2
 22851  0034EC  006F FF78  F0AD    	movff	16350,i1sprintf@val+3
 22852                           
 22853                           ; BSR set to: 0
 22854  0034F2  0E04               	movlw	4
 22855  0034F4  D015               	goto	L32
 22856  0034F6                     i1l1159:
 22857                           
 22858                           ; BSR set to: 0
 22859                           ;doprnt.c: 1283: else
 22860                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 22861                           
 22862                           ; BSR set to: 0
 22863  0034F6  0060  F283  FFD9   	movff	i1sprintf@ap,16345
 22864  0034FC  0060  F287  FFDA   	movff	i1sprintf@ap+1,16346
 22865  003502  006F FF78  F083    	movff	16350,??i1_sprintf
 22866  003508  006F FF74  F084    	movff	16349,??i1_sprintf+1
 22867  00350E  0060  F20C  F0AA   	movff	??i1_sprintf,i1sprintf@val
 22868  003514  0060  F210  F0AB   	movff	??i1_sprintf+1,i1sprintf@val+1
 22869  00351A  6BAC               	clrf	(i1sprintf@val+2)& (0+255),b
 22870  00351C  6BAD               	clrf	(i1sprintf@val+3)& (0+255),b
 22871                           
 22872                           ; BSR set to: 0
 22873  00351E  0E02               	movlw	2
 22874  003520                     L32:
 22875  003520  27A0               	addwf	i1sprintf@ap& (0+255),f,b
 22876  003522  0E00               	movlw	0
 22877  003524  23A1               	addwfc	(i1sprintf@ap+1)& (0+255),f,b
 22878  003526                     i1l1160:
 22879                           
 22880                           ; BSR set to: 0
 22881                           ;doprnt.c: 1287: }
 22882                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 22883                           
 22884                           ; BSR set to: 0
 22885                           
 22886                           ; BSR set to: 0
 22887  003526  51B1               	movf	i1sprintf@prec& (0+255),w,b
 22888  003528  11B2               	iorwf	(i1sprintf@prec+1)& (0+255),w,b
 22889  00352A  A4D8               	btfss	16344,2,c
 22890  00352C  D04B               	goto	i1l1162
 22891                           
 22892                           ; BSR set to: 0
 22893  00352E  51AA               	movf	i1sprintf@val& (0+255),w,b
 22894  003530  11AB               	iorwf	(i1sprintf@val+1)& (0+255),w,b
 22895  003532  11AC               	iorwf	(i1sprintf@val+2)& (0+255),w,b
 22896  003534  11AD               	iorwf	(i1sprintf@val+3)& (0+255),w,b
 22897  003536  A4D8               	btfss	16344,2,c
 22898  003538  D045               	goto	i1l1162
 22899                           
 22900                           ; BSR set to: 0
 22901                           ;doprnt.c: 1291: prec++;
 22902  00353A  4BB1               	infsnz	i1sprintf@prec& (0+255),f,b
 22903  00353C  2BB2               	incf	(i1sprintf@prec+1)& (0+255),f,b
 22904                           
 22905                           ; BSR set to: 0
 22906                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
 22907  00353E  D042               	goto	i1l1162
 22908  003540                     
 22909                           ; BSR set to: 0
 22910                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 22911                           
 22912                           ; BSR set to: 0
 22913  003540  0E01               	movlw	1
 22914  003542  6FB3               	movwf	i1sprintf@c& (0+255),b
 22915  003544                     i1l11451:
 22916                           
 22917                           ; BSR set to: 0
 22918  003544  0E0A               	movlw	10
 22919  003546  19B3               	xorwf	i1sprintf@c& (0+255),w,b
 22920  003548  B4D8               	btfsc	16344,2,c
 22921  00354A  D044               	goto	i1l1167
 22922                           
 22923                           ; BSR set to: 0
 22924                           ;doprnt.c: 1306: if(val < dpowers[c])
 22925                           
 22926                           ; BSR set to: 0
 22927                           
 22928                           ; BSR set to: 0
 22929  00354C  51B3               	movf	i1sprintf@c& (0+255),w,b
 22930  00354E  0D04               	mullw	4
 22931  003550  0EBF               	movlw	low _dpowers
 22932  003552  24F3               	addwf	16371,w,c
 22933  003554  6EF6               	movwf	16374,c
 22934  003556  0EFA               	movlw	high _dpowers
 22935  003558  20F4               	addwfc	16372,w,c
 22936  00355A  6EF7               	movwf	16375,c
 22937  00355C                     	if	1	;There are 3 active tblptr bytes
 22938  00355C  6AF8               	clrf	16376,c
 22939  00355E  0E00               	movlw	low (__mediumconst shr (0+16))
 22940  003560  22F8               	addwfc	16376,f,c
 22941  003562                     	endif
 22942  003562  0009               	tblrd		*+
 22943  003564  50F5               	movf	16373,w,c
 22944  003566  5DAA               	subwf	i1sprintf@val& (0+255),w,b
 22945  003568  0009               	tblrd		*+
 22946  00356A  50F5               	movf	16373,w,c
 22947  00356C  59AB               	subwfb	(i1sprintf@val+1)& (0+255),w,b
 22948  00356E  0009               	tblrd		*+
 22949  003570  50F5               	movf	16373,w,c
 22950  003572  59AC               	subwfb	(i1sprintf@val+2)& (0+255),w,b
 22951  003574  0009               	tblrd		*+
 22952  003576  50F5               	movf	16373,w,c
 22953  003578  59AD               	subwfb	(i1sprintf@val+3)& (0+255),w,b
 22954  00357A  A0D8               	btfss	16344,0,c
 22955  00357C  D02B               	goto	i1l1167
 22956                           
 22957                           ; BSR set to: 0
 22958                           
 22959                           ; BSR set to: 0
 22960                           
 22961                           ; BSR set to: 0
 22962                           ;doprnt.c: 1307: break;
 22963  00357E  2BB3               	incf	i1sprintf@c& (0+255),f,b
 22964  003580  D7E1               	goto	i1l11451
 22965  003582                     
 22966                           ; BSR set to: 0
 22967                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 22968                           
 22969                           ; BSR set to: 0
 22970  003582  0E01               	movlw	1
 22971  003584  6FB3               	movwf	i1sprintf@c& (0+255),b
 22972  003586                     i1l11465:
 22973                           
 22974                           ; BSR set to: 0
 22975  003586  0E08               	movlw	8
 22976  003588  19B3               	xorwf	i1sprintf@c& (0+255),w,b
 22977  00358A  B4D8               	btfsc	16344,2,c
 22978  00358C  D023               	goto	i1l1167
 22979                           
 22980                           ; BSR set to: 0
 22981                           ;doprnt.c: 1317: if(val < hexpowers[c])
 22982                           
 22983                           ; BSR set to: 0
 22984                           
 22985                           ; BSR set to: 0
 22986  00358E  51B3               	movf	i1sprintf@c& (0+255),w,b
 22987  003590  0D04               	mullw	4
 22988  003592  0E35               	movlw	low _hexpowers
 22989  003594  24F3               	addwf	16371,w,c
 22990  003596  6EF6               	movwf	16374,c
 22991  003598  0EFB               	movlw	high _hexpowers
 22992  00359A  20F4               	addwfc	16372,w,c
 22993  00359C  6EF7               	movwf	16375,c
 22994  00359E                     	if	1	;There are 3 active tblptr bytes
 22995  00359E  6AF8               	clrf	16376,c
 22996  0035A0  0E00               	movlw	low (__mediumconst shr (0+16))
 22997  0035A2  22F8               	addwfc	16376,f,c
 22998  0035A4                     	endif
 22999  0035A4  0009               	tblrd		*+
 23000  0035A6  50F5               	movf	16373,w,c
 23001  0035A8  5DAA               	subwf	i1sprintf@val& (0+255),w,b
 23002  0035AA  0009               	tblrd		*+
 23003  0035AC  50F5               	movf	16373,w,c
 23004  0035AE  59AB               	subwfb	(i1sprintf@val+1)& (0+255),w,b
 23005  0035B0  0009               	tblrd		*+
 23006  0035B2  50F5               	movf	16373,w,c
 23007  0035B4  59AC               	subwfb	(i1sprintf@val+2)& (0+255),w,b
 23008  0035B6  0009               	tblrd		*+
 23009  0035B8  50F5               	movf	16373,w,c
 23010  0035BA  59AD               	subwfb	(i1sprintf@val+3)& (0+255),w,b
 23011  0035BC  A0D8               	btfss	16344,0,c
 23012  0035BE  D00A               	goto	i1l1167
 23013                           
 23014                           ; BSR set to: 0
 23015                           
 23016                           ; BSR set to: 0
 23017                           
 23018                           ; BSR set to: 0
 23019                           ;doprnt.c: 1318: break;
 23020  0035C0  2BB3               	incf	i1sprintf@c& (0+255),f,b
 23021  0035C2  D7E1               	goto	i1l11465
 23022  0035C4                     i1l1162:
 23023                           
 23024                           ; BSR set to: 0
 23025                           
 23026                           ; BSR set to: 0
 23027  0035C4  51B4               	movf	i1sprintf@flag& (0+255),w,b
 23028  0035C6  0B80               	andlw	128
 23029                           
 23030                           ; Switch size 1, requested type "space"
 23031                           ; Number of cases is 2, Range of values is 0 to 128
 23032                           ; switch strategies available:
 23033                           ; Name         Instructions Cycles
 23034                           ; simple_byte            7     4 (average)
 23035                           ;	Chosen strategy is simple_byte
 23036  0035C8  0A00               	xorlw	0	; case 0
 23037  0035CA  B4D8               	btfsc	16344,2,c
 23038  0035CC  D7B9               	goto	i1l1163
 23039  0035CE  0A80               	xorlw	128	; case 128
 23040  0035D0  B4D8               	btfsc	16344,2,c
 23041  0035D2  D7D7               	goto	i1l1168
 23042  0035D4                     i1l1167:
 23043                           
 23044                           ; BSR set to: 0
 23045                           ;doprnt.c: 1339: if(c < prec)
 23046                           
 23047                           ; BSR set to: 0
 23048  0035D4  0E80               	movlw	128
 23049  0035D6  BFB3               	btfsc	i1sprintf@c& (0+255),7,b
 23050  0035D8  0E7F               	movlw	127
 23051  0035DA  6F83               	movwf	??i1_sprintf& (0+255),b
 23052  0035DC  51B1               	movf	i1sprintf@prec& (0+255),w,b
 23053  0035DE  5DB3               	subwf	i1sprintf@c& (0+255),w,b
 23054  0035E0  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 23055  0035E2  0A80               	xorlw	128
 23056  0035E4  5983               	subwfb	??i1_sprintf& (0+255),w,b
 23057  0035E6  B0D8               	btfsc	16344,0,c
 23058  0035E8  D004               	goto	i1l1172
 23059                           
 23060                           ; BSR set to: 0
 23061                           ;doprnt.c: 1340: c = prec;
 23062  0035EA  0060  F2C4  F0B3   	movff	i1sprintf@prec,i1sprintf@c
 23063  0035F0  D010               	goto	i1l1174
 23064  0035F2                     i1l1172:
 23065                           
 23066                           ; BSR set to: 0
 23067                           ;doprnt.c: 1341: else if(prec < c)
 23068                           
 23069                           ; BSR set to: 0
 23070  0035F2  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 23071  0035F4  0A80               	xorlw	128
 23072  0035F6  6F83               	movwf	??i1_sprintf& (0+255),b
 23073  0035F8  51B3               	movf	i1sprintf@c& (0+255),w,b
 23074  0035FA  5DB1               	subwf	i1sprintf@prec& (0+255),w,b
 23075  0035FC  0E80               	movlw	128
 23076  0035FE  BFB3               	btfsc	i1sprintf@c& (0+255),7,b
 23077  003600  0E7F               	movlw	127
 23078  003602  5983               	subwfb	??i1_sprintf& (0+255),w,b
 23079  003604  B0D8               	btfsc	16344,0,c
 23080  003606  D005               	goto	i1l1174
 23081                           
 23082                           ; BSR set to: 0
 23083                           ;doprnt.c: 1342: prec = c;
 23084  003608  51B3               	movf	i1sprintf@c& (0+255),w,b
 23085  00360A  6FB1               	movwf	i1sprintf@prec& (0+255),b
 23086  00360C  6BB2               	clrf	(i1sprintf@prec+1)& (0+255),b
 23087  00360E  BFB1               	btfsc	i1sprintf@prec& (0+255),7,b
 23088  003610  07B2               	decf	(i1sprintf@prec+1)& (0+255),f,b
 23089  003612                     i1l1174:
 23090                           
 23091                           ; BSR set to: 0
 23092                           ;doprnt.c: 1345: if(width && flag & 0x03)
 23093                           
 23094                           ; BSR set to: 0
 23095                           
 23096                           ; BSR set to: 0
 23097  003612  51A8               	movf	i1sprintf@width& (0+255),w,b
 23098  003614  11A9               	iorwf	(i1sprintf@width+1)& (0+255),w,b
 23099  003616  B4D8               	btfsc	16344,2,c
 23100  003618  D00D               	goto	i1l1175
 23101                           
 23102                           ; BSR set to: 0
 23103  00361A  0E03               	movlw	3
 23104  00361C  15B4               	andwf	i1sprintf@flag& (0+255),w,b
 23105  00361E  6F83               	movwf	??i1_sprintf& (0+255),b
 23106  003620  0E00               	movlw	0
 23107  003622  15B5               	andwf	(i1sprintf@flag+1)& (0+255),w,b
 23108  003624  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 23109  003626  5183               	movf	??i1_sprintf& (0+255),w,b
 23110  003628  1184               	iorwf	(??i1_sprintf+1)& (0+255),w,b
 23111  00362A  B4D8               	btfsc	16344,2,c
 23112  00362C  D003               	goto	i1l1175
 23113                           
 23114                           ; BSR set to: 0
 23115                           ;doprnt.c: 1346: width--;
 23116  00362E  07A8               	decf	i1sprintf@width& (0+255),f,b
 23117  003630  A0D8               	btfss	16344,0,c
 23118  003632  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 23119  003634                     i1l1175:
 23120                           
 23121                           ; BSR set to: 0
 23122                           ;doprnt.c: 1348: if(flag & 0x4000) {
 23123                           
 23124                           ; BSR set to: 0
 23125  003634  ADB5               	btfss	(i1sprintf@flag+1)& (0+255),6,b
 23126  003636  D013               	goto	i1l1178
 23127                           
 23128                           ; BSR set to: 0
 23129                           ;doprnt.c: 1349: if(width > prec)
 23130  003638  51A8               	movf	i1sprintf@width& (0+255),w,b
 23131  00363A  5DB1               	subwf	i1sprintf@prec& (0+255),w,b
 23132  00363C  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 23133  00363E  0A80               	xorlw	128
 23134  003640  6F83               	movwf	??i1_sprintf& (0+255),b
 23135  003642  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 23136  003644  0A80               	xorlw	128
 23137  003646  5983               	subwfb	??i1_sprintf& (0+255),w,b
 23138  003648  B0D8               	btfsc	16344,0,c
 23139  00364A  D005               	goto	i1l1177
 23140                           
 23141                           ; BSR set to: 0
 23142                           ;doprnt.c: 1350: width -= prec;
 23143  00364C  51B1               	movf	i1sprintf@prec& (0+255),w,b
 23144  00364E  5FA8               	subwf	i1sprintf@width& (0+255),f,b
 23145  003650  51B2               	movf	(i1sprintf@prec+1)& (0+255),w,b
 23146  003652  5BA9               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 23147  003654  D004               	goto	i1l1178
 23148  003656                     i1l1177:
 23149                           
 23150                           ; BSR set to: 0
 23151                           ;doprnt.c: 1351: else
 23152                           ;doprnt.c: 1352: width = 0;
 23153                           
 23154                           ; BSR set to: 0
 23155  003656  0E00               	movlw	0
 23156  003658  6FA9               	movwf	(i1sprintf@width+1)& (0+255),b
 23157  00365A  0E00               	movlw	0
 23158  00365C  6FA8               	movwf	i1sprintf@width& (0+255),b
 23159  00365E                     i1l1178:
 23160                           
 23161                           ; BSR set to: 0
 23162                           ;doprnt.c: 1353: }
 23163                           ;doprnt.c: 1368: if((flag & (0x80|0x800)) == (0x80|0x800)) {
 23164                           
 23165                           ; BSR set to: 0
 23166                           
 23167                           ; BSR set to: 0
 23168  00365E  0E80               	movlw	128
 23169  003660  6F83               	movwf	??i1_sprintf& (0+255),b
 23170  003662  0E08               	movlw	8
 23171  003664  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 23172  003666  0060  F2D0  F085   	movff	i1sprintf@flag,??i1_sprintf+2
 23173  00366C  0060  F2D4  F086   	movff	i1sprintf@flag+1,??i1_sprintf+3
 23174  003672  5183               	movf	??i1_sprintf& (0+255),w,b
 23175  003674  1785               	andwf	(??i1_sprintf+2)& (0+255),f,b
 23176  003676  5184               	movf	(??i1_sprintf+1)& (0+255),w,b
 23177  003678  1786               	andwf	(??i1_sprintf+3)& (0+255),f,b
 23178  00367A  0E80               	movlw	128
 23179  00367C  1985               	xorwf	(??i1_sprintf+2)& (0+255),w,b
 23180  00367E  E115               	bnz	i1l11511
 23181  003680  0E08               	movlw	8
 23182  003682  1986               	xorwf	(??i1_sprintf+3)& (0+255),w,b
 23183  003684  A4D8               	btfss	16344,2,c
 23184  003686  D011               	goto	i1l1181
 23185                           
 23186                           ; BSR set to: 0
 23187                           ;doprnt.c: 1372: if(width > 2)
 23188  003688  BFA9               	btfsc	(i1sprintf@width+1)& (0+255),7,b
 23189  00368A  D00B               	goto	i1l1180
 23190  00368C  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 23191  00368E  E104               	bnz	i1u1530_20
 23192  003690  0E03               	movlw	3
 23193  003692  5DA8               	subwf	i1sprintf@width& (0+255),w,b
 23194  003694  A0D8               	btfss	16344,0,c
 23195  003696  D005               	goto	i1l1180
 23196  003698                     i1u1530_20:
 23197                           
 23198                           ; BSR set to: 0
 23199                           ;doprnt.c: 1373: width -= 2;
 23200  003698  0EFE               	movlw	254
 23201  00369A  27A8               	addwf	i1sprintf@width& (0+255),f,b
 23202  00369C  0EFF               	movlw	255
 23203  00369E  23A9               	addwfc	(i1sprintf@width+1)& (0+255),f,b
 23204  0036A0  D004               	goto	i1l1181
 23205  0036A2                     i1l1180:
 23206                           
 23207                           ; BSR set to: 0
 23208                           ;doprnt.c: 1374: else
 23209                           ;doprnt.c: 1375: width = 0;
 23210                           
 23211                           ; BSR set to: 0
 23212  0036A2  0E00               	movlw	0
 23213  0036A4  6FA9               	movwf	(i1sprintf@width+1)& (0+255),b
 23214  0036A6  0E00               	movlw	0
 23215  0036A8  6FA8               	movwf	i1sprintf@width& (0+255),b
 23216  0036AA                     i1l1181:
 23217  0036AA                     i1l11511:
 23218                           
 23219                           ; BSR set to: 0
 23220                           ;doprnt.c: 1376: }
 23221                           ;doprnt.c: 1381: if(width > c)
 23222  0036AA  0E80               	movlw	128
 23223  0036AC  BFB3               	btfsc	i1sprintf@c& (0+255),7,b
 23224  0036AE  0E7F               	movlw	127
 23225  0036B0  6F83               	movwf	??i1_sprintf& (0+255),b
 23226  0036B2  51A8               	movf	i1sprintf@width& (0+255),w,b
 23227  0036B4  5DB3               	subwf	i1sprintf@c& (0+255),w,b
 23228  0036B6  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 23229  0036B8  0A80               	xorlw	128
 23230  0036BA  5983               	subwfb	??i1_sprintf& (0+255),w,b
 23231  0036BC  B0D8               	btfsc	16344,0,c
 23232  0036BE  D007               	goto	i1l1182
 23233                           
 23234                           ; BSR set to: 0
 23235                           ;doprnt.c: 1382: width -= c;
 23236  0036C0  51B3               	movf	i1sprintf@c& (0+255),w,b
 23237  0036C2  5FA8               	subwf	i1sprintf@width& (0+255),f,b
 23238  0036C4  0E00               	movlw	0
 23239  0036C6  BFB3               	btfsc	i1sprintf@c& (0+255),7,b
 23240  0036C8  0EFF               	movlw	255
 23241  0036CA  5BA9               	subwfb	(i1sprintf@width+1)& (0+255),f,b
 23242  0036CC  D004               	goto	i1l1183
 23243  0036CE                     i1l1182:
 23244                           
 23245                           ; BSR set to: 0
 23246                           ;doprnt.c: 1383: else
 23247                           ;doprnt.c: 1384: width = 0;
 23248                           
 23249                           ; BSR set to: 0
 23250  0036CE  0E00               	movlw	0
 23251  0036D0  6FA9               	movwf	(i1sprintf@width+1)& (0+255),b
 23252  0036D2  0E00               	movlw	0
 23253  0036D4  6FA8               	movwf	i1sprintf@width& (0+255),b
 23254  0036D6                     i1l1183:
 23255                           
 23256                           ; BSR set to: 0
 23257                           ;doprnt.c: 1387: if(flag & 0x04) {
 23258                           
 23259                           ; BSR set to: 0
 23260  0036D6  A5B4               	btfss	i1sprintf@flag& (0+255),2,b
 23261  0036D8  D05B               	goto	i1l1184
 23262                           
 23263                           ; BSR set to: 0
 23264                           ;doprnt.c: 1389: if(flag & 0x02)
 23265  0036DA  A3B4               	btfss	i1sprintf@flag& (0+255),1,b
 23266  0036DC  D014               	goto	i1l1185
 23267                           
 23268                           ; BSR set to: 0
 23269                           ;doprnt.c: 1390: ((*sp++ = (flag & 0x01 ? '-' : '+')));
 23270  0036DE  B1B4               	btfsc	i1sprintf@flag& (0+255),0,b
 23271  0036E0  D004               	goto	i1l1187
 23272                           
 23273                           ; BSR set to: 0
 23274  0036E2  0E00               	movlw	0
 23275  0036E4  6F96               	movwf	(i1_sprintf$2175+1)& (0+255),b
 23276  0036E6  0E2B               	movlw	43
 23277  0036E8  D003               	goto	L33
 23278  0036EA                     i1l1187:
 23279                           
 23280                           ; BSR set to: 0
 23281                           
 23282                           ; BSR set to: 0
 23283  0036EA  0E00               	movlw	0
 23284  0036EC  6F96               	movwf	(i1_sprintf$2175+1)& (0+255),b
 23285  0036EE  0E2D               	movlw	45
 23286  0036F0                     L33:
 23287  0036F0  6F95               	movwf	i1_sprintf$2175& (0+255),b
 23288                           
 23289                           ; BSR set to: 0
 23290                           
 23291                           ; BSR set to: 0
 23292  0036F2  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23293  0036F8  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23294  0036FE  0060  F257  FFDF   	movff	i1_sprintf$2175,16351
 23295  003704  D031               	goto	L36
 23296  003706                     i1l1185:
 23297                           
 23298                           ; BSR set to: 0
 23299                           ;doprnt.c: 1396: else
 23300                           ;doprnt.c: 1399: if(flag & 0x01)
 23301  003706  A1B4               	btfss	i1sprintf@flag& (0+255),0,b
 23302  003708  D008               	goto	i1l1191
 23303                           
 23304                           ; BSR set to: 0
 23305                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 23306  00370A  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23307  003710  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23308  003716  0E20               	movlw	32
 23309  003718  D026               	goto	L34
 23310  00371A                     i1l1191:
 23311                           
 23312                           ; BSR set to: 0
 23313                           ;doprnt.c: 1403: else if((flag & (0x80|0x800)) == (0x80|0x800)) {
 23314                           
 23315                           ; BSR set to: 0
 23316  00371A  0E80               	movlw	128
 23317  00371C  6F83               	movwf	??i1_sprintf& (0+255),b
 23318  00371E  0E08               	movlw	8
 23319  003720  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 23320  003722  0060  F2D0  F085   	movff	i1sprintf@flag,??i1_sprintf+2
 23321  003728  0060  F2D4  F086   	movff	i1sprintf@flag+1,??i1_sprintf+3
 23322  00372E  5183               	movf	??i1_sprintf& (0+255),w,b
 23323  003730  1785               	andwf	(??i1_sprintf+2)& (0+255),f,b
 23324  003732  5184               	movf	(??i1_sprintf+1)& (0+255),w,b
 23325  003734  1786               	andwf	(??i1_sprintf+3)& (0+255),f,b
 23326  003736  0E80               	movlw	128
 23327  003738  1985               	xorwf	(??i1_sprintf+2)& (0+255),w,b
 23328  00373A  E118               	bnz	i1l11543
 23329  00373C  0E08               	movlw	8
 23330  00373E  1986               	xorwf	(??i1_sprintf+3)& (0+255),w,b
 23331  003740  A4D8               	btfss	16344,2,c
 23332  003742  D014               	goto	i1l1193
 23333                           
 23334                           ; BSR set to: 0
 23335                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 23336  003744  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23337  00374A  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23338  003750  0E30               	movlw	48
 23339  003752  6EDF               	movwf	16351,c
 23340                           
 23341                           ; BSR set to: 0
 23342  003754  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 23343  003756  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 23344                           
 23345                           ; BSR set to: 0
 23346                           ;doprnt.c: 1410: ((*sp++ = ('x')));
 23347  003758  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23348  00375E  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23349  003764  0E78               	movlw	120
 23350  003766                     L34:
 23351  003766  6EDF               	movwf	16351,c
 23352  003768                     L36:
 23353  003768  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 23354  00376A  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 23355  00376C                     i1l1193:
 23356  00376C                     i1l11543:
 23357                           
 23358                           ; BSR set to: 0
 23359                           ;doprnt.c: 1412: }
 23360                           ;doprnt.c: 1415: if(width)
 23361  00376C  51A8               	movf	i1sprintf@width& (0+255),w,b
 23362  00376E  11A9               	iorwf	(i1sprintf@width+1)& (0+255),w,b
 23363  003770  B4D8               	btfsc	16344,2,c
 23364  003772  D116               	goto	i1l1209
 23365                           
 23366                           ; BSR set to: 0
 23367                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 23368                           
 23369                           ; BSR set to: 0
 23370                           
 23371                           ;doprnt.c: 1416: do
 23372  003774  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23373  00377A  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23374  003780  0E30               	movlw	48
 23375  003782  6EDF               	movwf	16351,c
 23376                           
 23377                           ; BSR set to: 0
 23378  003784  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 23379  003786  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 23380                           
 23381                           ; BSR set to: 0
 23382                           ;doprnt.c: 1418: while(--width);
 23383  003788  07A8               	decf	i1sprintf@width& (0+255),f,b
 23384  00378A  A0D8               	btfss	16344,0,c
 23385  00378C  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 23386  00378E  D7EE               	goto	i1l1193
 23387  003790                     i1l1184:
 23388                           
 23389                           ; BSR set to: 0
 23390                           ;doprnt.c: 1422: {
 23391                           ;doprnt.c: 1424: if(width
 23392                           ;doprnt.c: 1426: && !(flag & 0x08)
 23393                           ;doprnt.c: 1428: )
 23394                           
 23395                           ; BSR set to: 0
 23396  003790  51A8               	movf	i1sprintf@width& (0+255),w,b
 23397  003792  11A9               	iorwf	(i1sprintf@width+1)& (0+255),w,b
 23398  003794  A4D8               	btfss	16344,2,c
 23399                           
 23400                           ; BSR set to: 0
 23401  003796  B7B4               	btfsc	i1sprintf@flag& (0+255),3,b
 23402  003798  D011               	goto	i1u1541_20
 23403  00379A                     i1u1540_20:
 23404                           
 23405                           ; BSR set to: 0
 23406                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 23407                           
 23408                           ; BSR set to: 0
 23409                           
 23410                           ;doprnt.c: 1429: do
 23411  00379A  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23412  0037A0  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23413  0037A6  0E20               	movlw	32
 23414  0037A8  6EDF               	movwf	16351,c
 23415                           
 23416                           ; BSR set to: 0
 23417  0037AA  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 23418  0037AC  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 23419                           
 23420                           ; BSR set to: 0
 23421                           ;doprnt.c: 1431: while(--width);
 23422  0037AE  07A8               	decf	i1sprintf@width& (0+255),f,b
 23423  0037B0  A0D8               	btfss	16344,0,c
 23424  0037B2  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 23425  0037B4  51A8               	movf	i1sprintf@width& (0+255),w,b
 23426  0037B6  11A9               	iorwf	(i1sprintf@width+1)& (0+255),w,b
 23427  0037B8  A4D8               	btfss	16344,2,c
 23428  0037BA  D7EF               	goto	i1u1540_20
 23429  0037BC                     i1u1541_20:
 23430                           
 23431                           ; BSR set to: 0
 23432                           ;doprnt.c: 1434: if(flag & 0x02)
 23433                           
 23434                           ; BSR set to: 0
 23435  0037BC  A3B4               	btfss	i1sprintf@flag& (0+255),1,b
 23436  0037BE  D014               	goto	i1l1201
 23437                           
 23438                           ; BSR set to: 0
 23439                           ;doprnt.c: 1435: ((*sp++ = (flag & 0x01 ? '-' : '+')));
 23440  0037C0  B1B4               	btfsc	i1sprintf@flag& (0+255),0,b
 23441  0037C2  D004               	goto	i1l1203
 23442                           
 23443                           ; BSR set to: 0
 23444  0037C4  0E00               	movlw	0
 23445  0037C6  6F98               	movwf	(i1_sprintf$2176+1)& (0+255),b
 23446  0037C8  0E2B               	movlw	43
 23447  0037CA  D003               	goto	L35
 23448  0037CC                     i1l1203:
 23449                           
 23450                           ; BSR set to: 0
 23451                           
 23452                           ; BSR set to: 0
 23453  0037CC  0E00               	movlw	0
 23454  0037CE  6F98               	movwf	(i1_sprintf$2176+1)& (0+255),b
 23455  0037D0  0E2D               	movlw	45
 23456  0037D2                     L35:
 23457  0037D2  6F97               	movwf	i1_sprintf$2176& (0+255),b
 23458                           
 23459                           ; BSR set to: 0
 23460                           
 23461                           ; BSR set to: 0
 23462  0037D4  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23463  0037DA  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23464  0037E0  0060  F25F  FFDF   	movff	i1_sprintf$2176,16351
 23465  0037E6  D00A               	goto	i1l11573
 23466  0037E8                     i1l1201:
 23467                           
 23468                           ; BSR set to: 0
 23469                           ;doprnt.c: 1443: else if(flag & 0x01)
 23470  0037E8  A1B4               	btfss	i1sprintf@flag& (0+255),0,b
 23471  0037EA  D00A               	goto	i1l1207
 23472                           
 23473                           ; BSR set to: 0
 23474                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 23475  0037EC  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23476  0037F2  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23477  0037F8  0E20               	movlw	32
 23478  0037FA  6EDF               	movwf	16351,c
 23479  0037FC                     i1l11573:
 23480                           
 23481                           ; BSR set to: 0
 23482  0037FC  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 23483  0037FE  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 23484  003800                     i1l1207:
 23485                           
 23486                           ; BSR set to: 0
 23487                           ;doprnt.c: 1454: if((flag & (0x80|0x800)) == (0x80|0x800)) {
 23488                           
 23489                           ; BSR set to: 0
 23490                           
 23491                           ; BSR set to: 0
 23492  003800  0E80               	movlw	128
 23493  003802  6F83               	movwf	??i1_sprintf& (0+255),b
 23494  003804  0E08               	movlw	8
 23495  003806  6F84               	movwf	(??i1_sprintf+1)& (0+255),b
 23496  003808  0060  F2D0  F085   	movff	i1sprintf@flag,??i1_sprintf+2
 23497  00380E  0060  F2D4  F086   	movff	i1sprintf@flag+1,??i1_sprintf+3
 23498  003814  5183               	movf	??i1_sprintf& (0+255),w,b
 23499  003816  1785               	andwf	(??i1_sprintf+2)& (0+255),f,b
 23500  003818  5184               	movf	(??i1_sprintf+1)& (0+255),w,b
 23501  00381A  1786               	andwf	(??i1_sprintf+3)& (0+255),f,b
 23502  00381C  0E80               	movlw	128
 23503  00381E  1985               	xorwf	(??i1_sprintf+2)& (0+255),w,b
 23504  003820  E103               	bnz	i1u1545_21
 23505  003822  0E08               	movlw	8
 23506  003824  1986               	xorwf	(??i1_sprintf+3)& (0+255),w,b
 23507  003826  A4D8               	btfss	16344,2,c
 23508  003828                     i1u1545_21:
 23509  003828  D0BB               	goto	i1l1209
 23510                           
 23511                           ; BSR set to: 0
 23512                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 23513  00382A  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23514  003830  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23515  003836  0E30               	movlw	48
 23516  003838  6EDF               	movwf	16351,c
 23517                           
 23518                           ; BSR set to: 0
 23519  00383A  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 23520  00383C  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 23521                           
 23522                           ; BSR set to: 0
 23523                           ;doprnt.c: 1464: ((*sp++ = ('x')));
 23524  00383E  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23525  003844  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23526  00384A  0E78               	movlw	120
 23527  00384C  6EDF               	movwf	16351,c
 23528  00384E  D0A6               	goto	i1l11595
 23529  003850                     
 23530                           ; BSR set to: 0
 23531                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 23532                           
 23533                           ; BSR set to: 0
 23534  003850  0060  F2C4  F083   	movff	i1sprintf@prec,??i1_sprintf
 23535  003856  0060  F2C8  F084   	movff	i1sprintf@prec+1,??i1_sprintf+1
 23536  00385C  90D8               	bcf	16344,0,c
 23537  00385E  3783               	rlcf	??i1_sprintf& (0+255),f,b
 23538  003860  3784               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 23539  003862  90D8               	bcf	16344,0,c
 23540  003864  3783               	rlcf	??i1_sprintf& (0+255),f,b
 23541  003866  3784               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 23542  003868  0EBF               	movlw	low _dpowers
 23543  00386A  2583               	addwf	??i1_sprintf& (0+255),w,b
 23544  00386C  6EF6               	movwf	16374,c
 23545  00386E  0EFA               	movlw	high _dpowers
 23546  003870  2184               	addwfc	(??i1_sprintf+1)& (0+255),w,b
 23547  003872  6EF7               	movwf	16375,c
 23548  003874                     	if	1	;There are 3 active tblptr bytes
 23549  003874  6AF8               	clrf	16376,c
 23550  003876  0E00               	movlw	low (__mediumconst shr (0+16))
 23551  003878  22F8               	addwfc	16376,f,c
 23552  00387A                     	endif
 23553  00387A  0009               	tblrd		*+
 23554  00387C  006F FFD4  F008    	movff	16373,i1___lldiv@divisor
 23555  003882  0009               	tblrd		*+
 23556  003884  006F FFD4  F009    	movff	16373,i1___lldiv@divisor+1
 23557  00388A  0009               	tblrd		*+
 23558  00388C  006F FFD4  F00A    	movff	16373,i1___lldiv@divisor+2
 23559  003892  000A               	tblrd		*-
 23560  003894  006F FFD4  F00B    	movff	16373,i1___lldiv@divisor+3
 23561  00389A  0060  F2A8  F004   	movff	i1sprintf@val,i1___lldiv@dividend
 23562  0038A0  0060  F2AC  F005   	movff	i1sprintf@val+1,i1___lldiv@dividend+1
 23563  0038A6  0060  F2B0  F006   	movff	i1sprintf@val+2,i1___lldiv@dividend+2
 23564  0038AC  0060  F2B4  F007   	movff	i1sprintf@val+3,i1___lldiv@dividend+3
 23565  0038B2  ECA7  F03A         	call	i1___lldiv	;wreg free
 23566  0038B6  0060  F010  F011   	movff	?i1___lldiv,i1___llmod@dividend
 23567  0038BC  0060  F014  F012   	movff	?i1___lldiv+1,i1___llmod@dividend+1
 23568  0038C2  0060  F018  F013   	movff	?i1___lldiv+2,i1___llmod@dividend+2
 23569  0038C8  0060  F01C  F014   	movff	?i1___lldiv+3,i1___llmod@dividend+3
 23570  0038CE  0E0A               	movlw	10
 23571  0038D0  6E15               	movwf	i1___llmod@divisor,c
 23572  0038D2  0E00               	movlw	0
 23573  0038D4  6E16               	movwf	i1___llmod@divisor+1,c
 23574  0038D6  0E00               	movlw	0
 23575  0038D8  6E17               	movwf	i1___llmod@divisor+2,c
 23576  0038DA  0E00               	movlw	0
 23577  0038DC  6E18               	movwf	i1___llmod@divisor+3,c
 23578  0038DE  ECCE  F03C         	call	i1___llmod	;wreg free
 23579  0038E2  5011               	movf	?i1___llmod,w,c
 23580  0038E4  0F30               	addlw	48
 23581  0038E6  0100               	movlb	0	; () banked
 23582  0038E8  6FB3               	movwf	i1sprintf@c& (0+255),b
 23583                           
 23584                           ;doprnt.c: 1491: break;
 23585  0038EA  D04F               	goto	i1l1213
 23586  0038EC                     
 23587                           ; BSR set to: 0
 23588                           ;doprnt.c: 1499: {
 23589                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 23590                           
 23591                           ; BSR set to: 0
 23592  0038EC  0060  F2A8  F004   	movff	i1sprintf@val,i1___lldiv@dividend
 23593  0038F2  0060  F2AC  F005   	movff	i1sprintf@val+1,i1___lldiv@dividend+1
 23594  0038F8  0060  F2B0  F006   	movff	i1sprintf@val+2,i1___lldiv@dividend+2
 23595  0038FE  0060  F2B4  F007   	movff	i1sprintf@val+3,i1___lldiv@dividend+3
 23596  003904  0060  F2C4  F083   	movff	i1sprintf@prec,??i1_sprintf
 23597  00390A  0060  F2C8  F084   	movff	i1sprintf@prec+1,??i1_sprintf+1
 23598  003910  90D8               	bcf	16344,0,c
 23599  003912  3783               	rlcf	??i1_sprintf& (0+255),f,b
 23600  003914  3784               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 23601  003916  90D8               	bcf	16344,0,c
 23602  003918  3783               	rlcf	??i1_sprintf& (0+255),f,b
 23603  00391A  3784               	rlcf	(??i1_sprintf+1)& (0+255),f,b
 23604  00391C  0E35               	movlw	low _hexpowers
 23605  00391E  2583               	addwf	??i1_sprintf& (0+255),w,b
 23606  003920  6EF6               	movwf	16374,c
 23607  003922  0EFB               	movlw	high _hexpowers
 23608  003924  2184               	addwfc	(??i1_sprintf+1)& (0+255),w,b
 23609  003926  6EF7               	movwf	16375,c
 23610  003928                     	if	1	;There are 3 active tblptr bytes
 23611  003928  6AF8               	clrf	16376,c
 23612  00392A  0E00               	movlw	low (__mediumconst shr (0+16))
 23613  00392C  22F8               	addwfc	16376,f,c
 23614  00392E                     	endif
 23615  00392E  0009               	tblrd		*+
 23616  003930  006F FFD4  F008    	movff	16373,i1___lldiv@divisor
 23617  003936  0009               	tblrd		*+
 23618  003938  006F FFD4  F009    	movff	16373,i1___lldiv@divisor+1
 23619  00393E  0009               	tblrd		*+
 23620  003940  006F FFD4  F00A    	movff	16373,i1___lldiv@divisor+2
 23621  003946  000A               	tblrd		*-
 23622  003948  006F FFD4  F00B    	movff	16373,i1___lldiv@divisor+3
 23623  00394E  ECA7  F03A         	call	i1___lldiv	;wreg free
 23624  003952  5004               	movf	?i1___lldiv,w,c
 23625  003954  0B0F               	andlw	15
 23626  003956  0100               	movlb	0	; () banked
 23627  003958  6F8C               	movwf	i1sprintf@idx& (0+255),b
 23628                           
 23629                           ; BSR set to: 0
 23630                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 23631  00395A  518C               	movf	i1sprintf@idx& (0+255),w,b
 23632  00395C  0D01               	mullw	1
 23633  00395E  0ECC               	movlw	low STR_113
 23634  003960  24F3               	addwf	16371,w,c
 23635  003962  6EF6               	movwf	16374,c
 23636  003964  0EFE               	movlw	high STR_113
 23637  003966  20F4               	addwfc	16372,w,c
 23638  003968  6EF7               	movwf	16375,c
 23639  00396A                     	if	1	;There are 3 active tblptr bytes
 23640  00396A  6AF8               	clrf	16376,c
 23641  00396C  0E00               	movlw	low (__mediumconst shr (0+16))
 23642  00396E  22F8               	addwfc	16376,f,c
 23643  003970                     	endif
 23644  003970  0008               	tblrd		*
 23645  003972  006F FFD4  F0B3    	movff	16373,i1sprintf@c
 23646                           
 23647                           ; BSR set to: 0
 23648                           ;doprnt.c: 1523: }
 23649                           
 23650                           ;doprnt.c: 1508: }
 23651                           ;doprnt.c: 1510: break;
 23652  003978  D008               	goto	i1l1213
 23653  00397A                     i1l11591:
 23654                           
 23655                           ; BSR set to: 0
 23656  00397A  51B4               	movf	i1sprintf@flag& (0+255),w,b
 23657  00397C  0B80               	andlw	128
 23658                           
 23659                           ; Switch size 1, requested type "space"
 23660                           ; Number of cases is 2, Range of values is 0 to 128
 23661                           ; switch strategies available:
 23662                           ; Name         Instructions Cycles
 23663                           ; simple_byte            7     4 (average)
 23664                           ;	Chosen strategy is simple_byte
 23665  00397E  0A00               	xorlw	0	; case 0
 23666  003980  B4D8               	btfsc	16344,2,c
 23667  003982  D766               	goto	i1l1212
 23668  003984  0A80               	xorlw	128	; case 128
 23669  003986  B4D8               	btfsc	16344,2,c
 23670  003988  D7B1               	goto	i1l1214
 23671  00398A                     i1l1213:
 23672                           
 23673                           ; BSR set to: 0
 23674                           ;doprnt.c: 1524: ((*sp++ = (c)));
 23675                           
 23676                           ; BSR set to: 0
 23677  00398A  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23678  003990  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23679  003996  0060  F2CF  FFDF   	movff	i1sprintf@c,16351
 23680  00399C                     i1l11595:
 23681                           
 23682                           ; BSR set to: 0
 23683  00399C  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 23684  00399E  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 23685  0039A0                     i1l1209:
 23686                           
 23687                           ; BSR set to: 0
 23688                           
 23689                           ; BSR set to: 0
 23690  0039A0  07B1               	decf	i1sprintf@prec& (0+255),f,b
 23691  0039A2  A0D8               	btfss	16344,0,c
 23692  0039A4  07B2               	decf	(i1sprintf@prec+1)& (0+255),f,b
 23693  0039A6  29B1               	incf	i1sprintf@prec& (0+255),w,b
 23694  0039A8  E1E8               	bnz	i1l11591
 23695  0039AA  29B2               	incf	(i1sprintf@prec+1)& (0+255),w,b
 23696  0039AC  A4D8               	btfss	16344,2,c
 23697  0039AE  D7E5               	goto	i1l1211
 23698                           
 23699                           ; BSR set to: 0
 23700                           ;doprnt.c: 1525: }
 23701                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 23702  0039B0  B7B4               	btfsc	i1sprintf@flag& (0+255),3,b
 23703                           
 23704                           ; BSR set to: 0
 23705  0039B2  BFA9               	btfsc	(i1sprintf@width+1)& (0+255),7,b
 23706  0039B4  D016               	goto	i1u1549_20
 23707  0039B6  51A9               	movf	(i1sprintf@width+1)& (0+255),w,b
 23708  0039B8  E103               	bnz	i1l11601
 23709  0039BA  05A8               	decf	i1sprintf@width& (0+255),w,b
 23710  0039BC  A0D8               	btfss	16344,0,c
 23711  0039BE  D011               	goto	i1u1549_20
 23712  0039C0                     i1u1548_20:
 23713  0039C0                     i1l11601:
 23714                           
 23715                           ; BSR set to: 0
 23716                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 23717  0039C0  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23718  0039C6  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23719  0039CC  0E20               	movlw	32
 23720  0039CE  6EDF               	movwf	16351,c
 23721                           
 23722                           ; BSR set to: 0
 23723  0039D0  4B69               	infsnz	i1sprintf@sp& (0+255),f,b
 23724  0039D2  2B6A               	incf	(i1sprintf@sp+1)& (0+255),f,b
 23725                           
 23726                           ; BSR set to: 0
 23727                           ;doprnt.c: 1531: while(--width);
 23728  0039D4  07A8               	decf	i1sprintf@width& (0+255),f,b
 23729  0039D6  A0D8               	btfss	16344,0,c
 23730  0039D8  07A9               	decf	(i1sprintf@width+1)& (0+255),f,b
 23731  0039DA  51A8               	movf	i1sprintf@width& (0+255),w,b
 23732  0039DC  11A9               	iorwf	(i1sprintf@width+1)& (0+255),w,b
 23733  0039DE  A4D8               	btfss	16344,2,c
 23734  0039E0  D7EF               	goto	i1u1548_20
 23735  0039E2                     i1u1549_20:
 23736                           
 23737                           ; BSR set to: 0
 23738                           
 23739                           ; BSR set to: 0
 23740                           
 23741                           ; BSR set to: 0
 23742                           
 23743                           ; BSR set to: 0
 23744  0039E2  0060  F1AF  FFF6   	movff	i1sprintf@f,16374
 23745  0039E8  0060  F1B3  FFF7   	movff	i1sprintf@f+1,16375
 23746  0039EE  4B6B               	infsnz	i1sprintf@f& (0+255),f,b
 23747  0039F0  2B6C               	incf	(i1sprintf@f+1)& (0+255),f,b
 23748  0039F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23749  0039F2  6AF8               	clrf	16376,c
 23750  0039F4                     	endif
 23751  0039F4                     	if	0	;tblptru may be non-zero
 23752  0039F4                     	endif
 23753  0039F4  0008               	tblrd		*
 23754  0039F6  006F FFD4  F0B3    	movff	16373,i1sprintf@c
 23755  0039FC  51B3               	movf	i1sprintf@c& (0+255),w,b
 23756  0039FE  A4D8               	btfss	16344,2,c
 23757  003A00  EFBC  F00E         	goto	i1l948
 23758  003A04                     i1u1550_20:
 23759                           
 23760                           ; BSR set to: 0
 23761                           ;doprnt.c: 1538: *sp = 0;
 23762                           
 23763                           ; BSR set to: 0
 23764                           
 23765                           ;doprnt.c: 1533: }
 23766                           ;doprnt.c: 1535: alldone:
 23767                           
 23768                           ; BSR set to: 0
 23769  003A04  0060  F1A7  FFD9   	movff	i1sprintf@sp,16345
 23770  003A0A  0060  F1AB  FFDA   	movff	i1sprintf@sp+1,16346
 23771  003A10  0E00               	movlw	0
 23772  003A12  6EDF               	movwf	16351,c
 23773  003A14  0012               	return	
 23774  003A16                     __end_ofi1_sprintf:
 23775                           	opt stack 0
 23776                           
 23777 ;; *************** function i1_scale *****************
 23778 ;; Defined at:
 23779 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 23780 ;; Parameters:    Size  Location     Type
 23781 ;;  scl             1    wreg     char 
 23782 ;; Auto vars:     Size  Location     Type
 23783 ;;  scl             1   71[COMRAM] char 
 23784 ;; Return value:  Size  Location     Type
 23785 ;;                  3   65[COMRAM] char 
 23786 ;; Registers used:
 23787 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23788 ;; Tracked objects:
 23789 ;;		On entry : 0/0
 23790 ;;		On exit  : 0/0
 23791 ;;		Unchanged: 0/0
 23792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23793 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23794 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23796 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23797 ;;Total ram usage:        7 bytes
 23798 ;; Hardware stack levels used:    1
 23799 ;; Hardware stack levels required when called:    2
 23800 ;; This function calls:
 23801 ;;		i1___awdiv
 23802 ;;		i1___awmod
 23803 ;;		i1___ftmul
 23804 ;;		i1___wmul
 23805 ;; This function is called by:
 23806 ;;		i1_sprintf
 23807 ;; This function uses a non-reentrant model
 23808 ;;
 23809                           
 23810                           	psect	text76
 23811  003F26                     __ptext76:
 23812                           	opt stack 0
 23813  003F26                     i1_scale:
 23814                           	opt stack 18
 23815                           
 23816                           ; BSR set to: 0
 23817                           ;incstack = 0
 23818                           ;i1scale@scl stored from wreg
 23819  003F26  6E48               	movwf	i1scale@scl,c
 23820                           
 23821                           ;doprnt.c: 428: if(scl < 0) {
 23822  003F28  AE48               	btfss	i1scale@scl,7,c
 23823  003F2A  D137               	goto	i1l937
 23824                           
 23825                           ;doprnt.c: 429: scl = -scl;
 23826  003F2C  6C48               	negf	i1scale@scl,c
 23827                           
 23828                           ;doprnt.c: 430: if(scl>=110)
 23829  003F2E  5048               	movf	i1scale@scl,w,c
 23830  003F30  0A80               	xorlw	128
 23831  003F32  0F12               	addlw	-238
 23832  003F34  A0D8               	btfss	16344,0,c
 23833  003F36  D0B0               	goto	i1l938
 23834                           
 23835                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 23836  003F38  0E00               	movlw	0
 23837  003F3A  6E15               	movwf	i1___wmul@multiplicand+1,c
 23838  003F3C  0E03               	movlw	3
 23839  003F3E  6E14               	movwf	i1___wmul@multiplicand,c
 23840  003F40  0E00               	movlw	0
 23841  003F42  6E0D               	movwf	i1___awdiv@divisor+1,c
 23842  003F44  0E0A               	movlw	10
 23843  003F46  6E0C               	movwf	i1___awdiv@divisor,c
 23844  003F48  0E00               	movlw	0
 23845  003F4A  6E07               	movwf	i1___awmod@divisor+1,c
 23846  003F4C  0E64               	movlw	100
 23847  003F4E  6E06               	movwf	i1___awmod@divisor,c
 23848  003F50  5048               	movf	i1scale@scl,w,c
 23849  003F52  6E04               	movwf	i1___awmod@dividend,c
 23850  003F54  6A05               	clrf	i1___awmod@dividend+1,c
 23851  003F56  BE04               	btfsc	i1___awmod@dividend,7,c
 23852  003F58  0605               	decf	i1___awmod@dividend+1,f,c
 23853  003F5A  EC23  F03C         	call	i1___awmod	;wreg free
 23854  003F5E  0060  F010  F00A   	movff	?i1___awmod,i1___awdiv@dividend
 23855  003F64  0060  F014  F00B   	movff	?i1___awmod+1,i1___awdiv@dividend+1
 23856  003F6A  ECEC  F03A         	call	i1___awdiv	;wreg free
 23857  003F6E  0E09               	movlw	9
 23858  003F70  240A               	addwf	?i1___awdiv,w,c
 23859  003F72  6E12               	movwf	i1___wmul@multiplier,c
 23860  003F74  0E00               	movlw	0
 23861  003F76  200B               	addwfc	?i1___awdiv+1,w,c
 23862  003F78  6E13               	movwf	i1___wmul@multiplier+1,c
 23863  003F7A  ECC9  F041         	call	i1___wmul	;wreg free
 23864  003F7E  0E0E               	movlw	low __npowers_
 23865  003F80  2412               	addwf	?i1___wmul,w,c
 23866  003F82  6EF6               	movwf	16374,c
 23867  003F84  0EFB               	movlw	high __npowers_
 23868  003F86  2013               	addwfc	?i1___wmul+1,w,c
 23869  003F88  6EF7               	movwf	16375,c
 23870  003F8A                     	if	1	;There are 3 active tblptr bytes
 23871  003F8A  6AF8               	clrf	16376,c
 23872  003F8C  0E00               	movlw	low (__mediumconst shr (0+16))
 23873  003F8E  22F8               	addwfc	16376,f,c
 23874  003F90                     	endif
 23875  003F90  0009               	tblrd		*+
 23876  003F92  006F FFD4  F036    	movff	16373,i1___ftmul@f2
 23877  003F98  0009               	tblrd		*+
 23878  003F9A  006F FFD4  F037    	movff	16373,i1___ftmul@f2+1
 23879  003FA0  000A               	tblrd		*-
 23880  003FA2  006F FFD4  F038    	movff	16373,i1___ftmul@f2+2
 23881  003FA8  0E00               	movlw	0
 23882  003FAA  6E0D               	movwf	i1___awdiv@divisor+1,c
 23883  003FAC  0E64               	movlw	100
 23884  003FAE  6E0C               	movwf	i1___awdiv@divisor,c
 23885  003FB0  5048               	movf	i1scale@scl,w,c
 23886  003FB2  6E0A               	movwf	i1___awdiv@dividend,c
 23887  003FB4  6A0B               	clrf	i1___awdiv@dividend+1,c
 23888  003FB6  BE0A               	btfsc	i1___awdiv@dividend,7,c
 23889  003FB8  060B               	decf	i1___awdiv@dividend+1,f,c
 23890  003FBA  ECEC  F03A         	call	i1___awdiv	;wreg free
 23891  003FBE  0E12               	movlw	18
 23892  003FC0  240A               	addwf	?i1___awdiv,w,c
 23893  003FC2  6E12               	movwf	i1___wmul@multiplier,c
 23894  003FC4  0E00               	movlw	0
 23895  003FC6  200B               	addwfc	?i1___awdiv+1,w,c
 23896  003FC8  6E13               	movwf	i1___wmul@multiplier+1,c
 23897  003FCA  0E00               	movlw	0
 23898  003FCC  6E15               	movwf	i1___wmul@multiplicand+1,c
 23899  003FCE  0E03               	movlw	3
 23900  003FD0  6E14               	movwf	i1___wmul@multiplicand,c
 23901  003FD2  ECC9  F041         	call	i1___wmul	;wreg free
 23902  003FD6  0E0E               	movlw	low __npowers_
 23903  003FD8  2412               	addwf	?i1___wmul,w,c
 23904  003FDA  6EF6               	movwf	16374,c
 23905  003FDC  0EFB               	movlw	high __npowers_
 23906  003FDE  2013               	addwfc	?i1___wmul+1,w,c
 23907  003FE0  6EF7               	movwf	16375,c
 23908  003FE2                     	if	1	;There are 3 active tblptr bytes
 23909  003FE2  6AF8               	clrf	16376,c
 23910  003FE4  0E00               	movlw	low (__mediumconst shr (0+16))
 23911  003FE6  22F8               	addwfc	16376,f,c
 23912  003FE8                     	endif
 23913  003FE8  0009               	tblrd		*+
 23914  003FEA  006F FFD4  F033    	movff	16373,i1___ftmul@f1
 23915  003FF0  0009               	tblrd		*+
 23916  003FF2  006F FFD4  F034    	movff	16373,i1___ftmul@f1+1
 23917  003FF8  000A               	tblrd		*-
 23918  003FFA  006F FFD4  F035    	movff	16373,i1___ftmul@f1+2
 23919  004000  ECD6  F030         	call	i1___ftmul	;wreg free
 23920  004004  0060  F0CC  F045   	movff	?i1___ftmul,i1_scale$3007
 23921  00400A  0060  F0D0  F046   	movff	?i1___ftmul+1,i1_scale$3007+1
 23922  004010  0060  F0D4  F047   	movff	?i1___ftmul+2,i1_scale$3007+2
 23923                           
 23924                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 23925  004016  0060  F114  F033   	movff	i1_scale$3007,i1___ftmul@f1
 23926  00401C  0060  F118  F034   	movff	i1_scale$3007+1,i1___ftmul@f1+1
 23927  004022  0060  F11C  F035   	movff	i1_scale$3007+2,i1___ftmul@f1+2
 23928  004028  0E00               	movlw	0
 23929  00402A  6E15               	movwf	i1___wmul@multiplicand+1,c
 23930  00402C  0E03               	movlw	3
 23931  00402E  6E14               	movwf	i1___wmul@multiplicand,c
 23932  004030  0E00               	movlw	0
 23933  004032  6E07               	movwf	i1___awmod@divisor+1,c
 23934  004034  0E0A               	movlw	10
 23935  004036  6E06               	movwf	i1___awmod@divisor,c
 23936  004038  5048               	movf	i1scale@scl,w,c
 23937  00403A  6E04               	movwf	i1___awmod@dividend,c
 23938  00403C  6A05               	clrf	i1___awmod@dividend+1,c
 23939  00403E  BE04               	btfsc	i1___awmod@dividend,7,c
 23940  004040  0605               	decf	i1___awmod@dividend+1,f,c
 23941  004042  EC23  F03C         	call	i1___awmod	;wreg free
 23942  004046  0060  F010  F012   	movff	?i1___awmod,i1___wmul@multiplier
 23943  00404C  0060  F014  F013   	movff	?i1___awmod+1,i1___wmul@multiplier+1
 23944  004052  ECC9  F041         	call	i1___wmul	;wreg free
 23945  004056  0E0E               	movlw	low __npowers_
 23946  004058  2412               	addwf	?i1___wmul,w,c
 23947  00405A  6EF6               	movwf	16374,c
 23948  00405C  0EFB               	movlw	high __npowers_
 23949  00405E  2013               	addwfc	?i1___wmul+1,w,c
 23950  004060  6EF7               	movwf	16375,c
 23951  004062                     	if	1	;There are 3 active tblptr bytes
 23952  004062  6AF8               	clrf	16376,c
 23953  004064  0E00               	movlw	low (__mediumconst shr (0+16))
 23954  004066  22F8               	addwfc	16376,f,c
 23955  004068                     	endif
 23956  004068  0009               	tblrd		*+
 23957  00406A  006F FFD4  F036    	movff	16373,i1___ftmul@f2
 23958  004070  0009               	tblrd		*+
 23959  004072  006F FFD4  F037    	movff	16373,i1___ftmul@f2+1
 23960  004078  000A               	tblrd		*-
 23961  00407A  006F FFD4  F038    	movff	16373,i1___ftmul@f2+2
 23962  004080  ECD6  F030         	call	i1___ftmul	;wreg free
 23963  004084  0060  F0CC  F042   	movff	?i1___ftmul,?i1_scale
 23964  00408A  0060  F0D0  F043   	movff	?i1___ftmul+1,?i1_scale+1
 23965  004090  0060  F0D4  F044   	movff	?i1___ftmul+2,?i1_scale+2
 23966  004096  0012               	return	
 23967  004098                     i1l938:
 23968                           
 23969                           ;doprnt.c: 432: else if(scl > 10)
 23970  004098  5048               	movf	i1scale@scl,w,c
 23971  00409A  0A80               	xorlw	128
 23972  00409C  0F75               	addlw	-139
 23973  00409E  A0D8               	btfss	16344,0,c
 23974  0040A0  D064               	goto	i1l941
 23975                           
 23976                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 23977  0040A2  0E00               	movlw	0
 23978  0040A4  6E0D               	movwf	i1___awdiv@divisor+1,c
 23979  0040A6  0E0A               	movlw	10
 23980  0040A8  6E0C               	movwf	i1___awdiv@divisor,c
 23981  0040AA  5048               	movf	i1scale@scl,w,c
 23982  0040AC  6E0A               	movwf	i1___awdiv@dividend,c
 23983  0040AE  6A0B               	clrf	i1___awdiv@dividend+1,c
 23984  0040B0  BE0A               	btfsc	i1___awdiv@dividend,7,c
 23985  0040B2  060B               	decf	i1___awdiv@dividend+1,f,c
 23986  0040B4  ECEC  F03A         	call	i1___awdiv	;wreg free
 23987  0040B8  0E09               	movlw	9
 23988  0040BA  240A               	addwf	?i1___awdiv,w,c
 23989  0040BC  6E12               	movwf	i1___wmul@multiplier,c
 23990  0040BE  0E00               	movlw	0
 23991  0040C0  200B               	addwfc	?i1___awdiv+1,w,c
 23992  0040C2  6E13               	movwf	i1___wmul@multiplier+1,c
 23993  0040C4  0E00               	movlw	0
 23994  0040C6  6E15               	movwf	i1___wmul@multiplicand+1,c
 23995  0040C8  0E03               	movlw	3
 23996  0040CA  6E14               	movwf	i1___wmul@multiplicand,c
 23997  0040CC  ECC9  F041         	call	i1___wmul	;wreg free
 23998  0040D0  0E0E               	movlw	low __npowers_
 23999  0040D2  2412               	addwf	?i1___wmul,w,c
 24000  0040D4  6EF6               	movwf	16374,c
 24001  0040D6  0EFB               	movlw	high __npowers_
 24002  0040D8  2013               	addwfc	?i1___wmul+1,w,c
 24003  0040DA  6EF7               	movwf	16375,c
 24004  0040DC                     	if	1	;There are 3 active tblptr bytes
 24005  0040DC  6AF8               	clrf	16376,c
 24006  0040DE  0E00               	movlw	low (__mediumconst shr (0+16))
 24007  0040E0  22F8               	addwfc	16376,f,c
 24008  0040E2                     	endif
 24009  0040E2  0009               	tblrd		*+
 24010  0040E4  006F FFD4  F033    	movff	16373,i1___ftmul@f1
 24011  0040EA  0009               	tblrd		*+
 24012  0040EC  006F FFD4  F034    	movff	16373,i1___ftmul@f1+1
 24013  0040F2  000A               	tblrd		*-
 24014  0040F4  006F FFD4  F035    	movff	16373,i1___ftmul@f1+2
 24015  0040FA  0E00               	movlw	0
 24016  0040FC  6E15               	movwf	i1___wmul@multiplicand+1,c
 24017  0040FE  0E03               	movlw	3
 24018  004100  6E14               	movwf	i1___wmul@multiplicand,c
 24019  004102  0E00               	movlw	0
 24020  004104  6E07               	movwf	i1___awmod@divisor+1,c
 24021  004106  0E0A               	movlw	10
 24022  004108  6E06               	movwf	i1___awmod@divisor,c
 24023  00410A  5048               	movf	i1scale@scl,w,c
 24024  00410C  6E04               	movwf	i1___awmod@dividend,c
 24025  00410E  6A05               	clrf	i1___awmod@dividend+1,c
 24026  004110  BE04               	btfsc	i1___awmod@dividend,7,c
 24027  004112  0605               	decf	i1___awmod@dividend+1,f,c
 24028  004114  EC23  F03C         	call	i1___awmod	;wreg free
 24029  004118  0060  F010  F012   	movff	?i1___awmod,i1___wmul@multiplier
 24030  00411E  0060  F014  F013   	movff	?i1___awmod+1,i1___wmul@multiplier+1
 24031  004124  ECC9  F041         	call	i1___wmul	;wreg free
 24032  004128  0E0E               	movlw	low __npowers_
 24033  00412A  2412               	addwf	?i1___wmul,w,c
 24034  00412C  6EF6               	movwf	16374,c
 24035  00412E  0EFB               	movlw	high __npowers_
 24036  004130  2013               	addwfc	?i1___wmul+1,w,c
 24037  004132  6EF7               	movwf	16375,c
 24038  004134                     	if	1	;There are 3 active tblptr bytes
 24039  004134  6AF8               	clrf	16376,c
 24040  004136  0E00               	movlw	low (__mediumconst shr (0+16))
 24041  004138  22F8               	addwfc	16376,f,c
 24042  00413A                     	endif
 24043  00413A  0009               	tblrd		*+
 24044  00413C  006F FFD4  F036    	movff	16373,i1___ftmul@f2
 24045  004142  0009               	tblrd		*+
 24046  004144  006F FFD4  F037    	movff	16373,i1___ftmul@f2+1
 24047  00414A  000A               	tblrd		*-
 24048  00414C  006F FFD4  F038    	movff	16373,i1___ftmul@f2+2
 24049  004152  ECD6  F030         	call	i1___ftmul	;wreg free
 24050  004156  0060  F0CC  F042   	movff	?i1___ftmul,?i1_scale
 24051  00415C  0060  F0D0  F043   	movff	?i1___ftmul+1,?i1_scale+1
 24052  004162  0060  F0D4  F044   	movff	?i1___ftmul+2,?i1_scale+2
 24053  004168  0012               	return	
 24054  00416A                     i1l941:
 24055                           
 24056                           ;doprnt.c: 434: return _npowers_[scl];
 24057  00416A  5048               	movf	i1scale@scl,w,c
 24058  00416C  0D03               	mullw	3
 24059  00416E  0E0E               	movlw	low __npowers_
 24060  004170  24F3               	addwf	16371,w,c
 24061  004172  6EF6               	movwf	16374,c
 24062  004174  0EFB               	movlw	high __npowers_
 24063  004176  20F4               	addwfc	16372,w,c
 24064  004178  6EF7               	movwf	16375,c
 24065  00417A                     	if	1	;There are 3 active tblptr bytes
 24066  00417A  6AF8               	clrf	16376,c
 24067  00417C  0E00               	movlw	low (__mediumconst shr (0+16))
 24068  00417E  22F8               	addwfc	16376,f,c
 24069  004180                     	endif
 24070  004180  0009               	tblrd		*+
 24071  004182  006F FFD4  F042    	movff	16373,?i1_scale
 24072  004188  0009               	tblrd		*+
 24073  00418A  006F FFD4  F043    	movff	16373,?i1_scale+1
 24074  004190  000A               	tblrd		*-
 24075  004192  006F FFD4  F044    	movff	16373,?i1_scale+2
 24076  004198  0012               	return	
 24077  00419A                     i1l937:
 24078                           
 24079                           ;doprnt.c: 435: }
 24080                           ;doprnt.c: 436: if(scl>=110)
 24081  00419A  5048               	movf	i1scale@scl,w,c
 24082  00419C  0A80               	xorlw	128
 24083  00419E  0F12               	addlw	-238
 24084  0041A0  A0D8               	btfss	16344,0,c
 24085  0041A2  D0B0               	goto	i1l942
 24086                           
 24087                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 24088  0041A4  0E00               	movlw	0
 24089  0041A6  6E15               	movwf	i1___wmul@multiplicand+1,c
 24090  0041A8  0E03               	movlw	3
 24091  0041AA  6E14               	movwf	i1___wmul@multiplicand,c
 24092  0041AC  0E00               	movlw	0
 24093  0041AE  6E0D               	movwf	i1___awdiv@divisor+1,c
 24094  0041B0  0E0A               	movlw	10
 24095  0041B2  6E0C               	movwf	i1___awdiv@divisor,c
 24096  0041B4  0E00               	movlw	0
 24097  0041B6  6E07               	movwf	i1___awmod@divisor+1,c
 24098  0041B8  0E64               	movlw	100
 24099  0041BA  6E06               	movwf	i1___awmod@divisor,c
 24100  0041BC  5048               	movf	i1scale@scl,w,c
 24101  0041BE  6E04               	movwf	i1___awmod@dividend,c
 24102  0041C0  6A05               	clrf	i1___awmod@dividend+1,c
 24103  0041C2  BE04               	btfsc	i1___awmod@dividend,7,c
 24104  0041C4  0605               	decf	i1___awmod@dividend+1,f,c
 24105  0041C6  EC23  F03C         	call	i1___awmod	;wreg free
 24106  0041CA  0060  F010  F00A   	movff	?i1___awmod,i1___awdiv@dividend
 24107  0041D0  0060  F014  F00B   	movff	?i1___awmod+1,i1___awdiv@dividend+1
 24108  0041D6  ECEC  F03A         	call	i1___awdiv	;wreg free
 24109  0041DA  0E09               	movlw	9
 24110  0041DC  240A               	addwf	?i1___awdiv,w,c
 24111  0041DE  6E12               	movwf	i1___wmul@multiplier,c
 24112  0041E0  0E00               	movlw	0
 24113  0041E2  200B               	addwfc	?i1___awdiv+1,w,c
 24114  0041E4  6E13               	movwf	i1___wmul@multiplier+1,c
 24115  0041E6  ECC9  F041         	call	i1___wmul	;wreg free
 24116  0041EA  0EE7               	movlw	low __powers_
 24117  0041EC  2412               	addwf	?i1___wmul,w,c
 24118  0041EE  6EF6               	movwf	16374,c
 24119  0041F0  0EFA               	movlw	high __powers_
 24120  0041F2  2013               	addwfc	?i1___wmul+1,w,c
 24121  0041F4  6EF7               	movwf	16375,c
 24122  0041F6                     	if	1	;There are 3 active tblptr bytes
 24123  0041F6  6AF8               	clrf	16376,c
 24124  0041F8  0E00               	movlw	low (__mediumconst shr (0+16))
 24125  0041FA  22F8               	addwfc	16376,f,c
 24126  0041FC                     	endif
 24127  0041FC  0009               	tblrd		*+
 24128  0041FE  006F FFD4  F036    	movff	16373,i1___ftmul@f2
 24129  004204  0009               	tblrd		*+
 24130  004206  006F FFD4  F037    	movff	16373,i1___ftmul@f2+1
 24131  00420C  000A               	tblrd		*-
 24132  00420E  006F FFD4  F038    	movff	16373,i1___ftmul@f2+2
 24133  004214  0E00               	movlw	0
 24134  004216  6E0D               	movwf	i1___awdiv@divisor+1,c
 24135  004218  0E64               	movlw	100
 24136  00421A  6E0C               	movwf	i1___awdiv@divisor,c
 24137  00421C  5048               	movf	i1scale@scl,w,c
 24138  00421E  6E0A               	movwf	i1___awdiv@dividend,c
 24139  004220  6A0B               	clrf	i1___awdiv@dividend+1,c
 24140  004222  BE0A               	btfsc	i1___awdiv@dividend,7,c
 24141  004224  060B               	decf	i1___awdiv@dividend+1,f,c
 24142  004226  ECEC  F03A         	call	i1___awdiv	;wreg free
 24143  00422A  0E12               	movlw	18
 24144  00422C  240A               	addwf	?i1___awdiv,w,c
 24145  00422E  6E12               	movwf	i1___wmul@multiplier,c
 24146  004230  0E00               	movlw	0
 24147  004232  200B               	addwfc	?i1___awdiv+1,w,c
 24148  004234  6E13               	movwf	i1___wmul@multiplier+1,c
 24149  004236  0E00               	movlw	0
 24150  004238  6E15               	movwf	i1___wmul@multiplicand+1,c
 24151  00423A  0E03               	movlw	3
 24152  00423C  6E14               	movwf	i1___wmul@multiplicand,c
 24153  00423E  ECC9  F041         	call	i1___wmul	;wreg free
 24154  004242  0EE7               	movlw	low __powers_
 24155  004244  2412               	addwf	?i1___wmul,w,c
 24156  004246  6EF6               	movwf	16374,c
 24157  004248  0EFA               	movlw	high __powers_
 24158  00424A  2013               	addwfc	?i1___wmul+1,w,c
 24159  00424C  6EF7               	movwf	16375,c
 24160  00424E                     	if	1	;There are 3 active tblptr bytes
 24161  00424E  6AF8               	clrf	16376,c
 24162  004250  0E00               	movlw	low (__mediumconst shr (0+16))
 24163  004252  22F8               	addwfc	16376,f,c
 24164  004254                     	endif
 24165  004254  0009               	tblrd		*+
 24166  004256  006F FFD4  F033    	movff	16373,i1___ftmul@f1
 24167  00425C  0009               	tblrd		*+
 24168  00425E  006F FFD4  F034    	movff	16373,i1___ftmul@f1+1
 24169  004264  000A               	tblrd		*-
 24170  004266  006F FFD4  F035    	movff	16373,i1___ftmul@f1+2
 24171  00426C  ECD6  F030         	call	i1___ftmul	;wreg free
 24172  004270  0060  F0CC  F045   	movff	?i1___ftmul,i1_scale$3007
 24173  004276  0060  F0D0  F046   	movff	?i1___ftmul+1,i1_scale$3007+1
 24174  00427C  0060  F0D4  F047   	movff	?i1___ftmul+2,i1_scale$3007+2
 24175                           
 24176                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 24177  004282  0060  F114  F033   	movff	i1_scale$3007,i1___ftmul@f1
 24178  004288  0060  F118  F034   	movff	i1_scale$3007+1,i1___ftmul@f1+1
 24179  00428E  0060  F11C  F035   	movff	i1_scale$3007+2,i1___ftmul@f1+2
 24180  004294  0E00               	movlw	0
 24181  004296  6E15               	movwf	i1___wmul@multiplicand+1,c
 24182  004298  0E03               	movlw	3
 24183  00429A  6E14               	movwf	i1___wmul@multiplicand,c
 24184  00429C  0E00               	movlw	0
 24185  00429E  6E07               	movwf	i1___awmod@divisor+1,c
 24186  0042A0  0E0A               	movlw	10
 24187  0042A2  6E06               	movwf	i1___awmod@divisor,c
 24188  0042A4  5048               	movf	i1scale@scl,w,c
 24189  0042A6  6E04               	movwf	i1___awmod@dividend,c
 24190  0042A8  6A05               	clrf	i1___awmod@dividend+1,c
 24191  0042AA  BE04               	btfsc	i1___awmod@dividend,7,c
 24192  0042AC  0605               	decf	i1___awmod@dividend+1,f,c
 24193  0042AE  EC23  F03C         	call	i1___awmod	;wreg free
 24194  0042B2  0060  F010  F012   	movff	?i1___awmod,i1___wmul@multiplier
 24195  0042B8  0060  F014  F013   	movff	?i1___awmod+1,i1___wmul@multiplier+1
 24196  0042BE  ECC9  F041         	call	i1___wmul	;wreg free
 24197  0042C2  0EE7               	movlw	low __powers_
 24198  0042C4  2412               	addwf	?i1___wmul,w,c
 24199  0042C6  6EF6               	movwf	16374,c
 24200  0042C8  0EFA               	movlw	high __powers_
 24201  0042CA  2013               	addwfc	?i1___wmul+1,w,c
 24202  0042CC  6EF7               	movwf	16375,c
 24203  0042CE                     	if	1	;There are 3 active tblptr bytes
 24204  0042CE  6AF8               	clrf	16376,c
 24205  0042D0  0E00               	movlw	low (__mediumconst shr (0+16))
 24206  0042D2  22F8               	addwfc	16376,f,c
 24207  0042D4                     	endif
 24208  0042D4  0009               	tblrd		*+
 24209  0042D6  006F FFD4  F036    	movff	16373,i1___ftmul@f2
 24210  0042DC  0009               	tblrd		*+
 24211  0042DE  006F FFD4  F037    	movff	16373,i1___ftmul@f2+1
 24212  0042E4  000A               	tblrd		*-
 24213  0042E6  006F FFD4  F038    	movff	16373,i1___ftmul@f2+2
 24214  0042EC  ECD6  F030         	call	i1___ftmul	;wreg free
 24215  0042F0  0060  F0CC  F042   	movff	?i1___ftmul,?i1_scale
 24216  0042F6  0060  F0D0  F043   	movff	?i1___ftmul+1,?i1_scale+1
 24217  0042FC  0060  F0D4  F044   	movff	?i1___ftmul+2,?i1_scale+2
 24218  004302  0012               	return	
 24219  004304                     i1l942:
 24220                           
 24221                           ;doprnt.c: 438: else if(scl > 10)
 24222  004304  5048               	movf	i1scale@scl,w,c
 24223  004306  0A80               	xorlw	128
 24224  004308  0F75               	addlw	-139
 24225  00430A  A0D8               	btfss	16344,0,c
 24226  00430C  D064               	goto	i1l944
 24227                           
 24228                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 24229  00430E  0E00               	movlw	0
 24230  004310  6E0D               	movwf	i1___awdiv@divisor+1,c
 24231  004312  0E0A               	movlw	10
 24232  004314  6E0C               	movwf	i1___awdiv@divisor,c
 24233  004316  5048               	movf	i1scale@scl,w,c
 24234  004318  6E0A               	movwf	i1___awdiv@dividend,c
 24235  00431A  6A0B               	clrf	i1___awdiv@dividend+1,c
 24236  00431C  BE0A               	btfsc	i1___awdiv@dividend,7,c
 24237  00431E  060B               	decf	i1___awdiv@dividend+1,f,c
 24238  004320  ECEC  F03A         	call	i1___awdiv	;wreg free
 24239  004324  0E09               	movlw	9
 24240  004326  240A               	addwf	?i1___awdiv,w,c
 24241  004328  6E12               	movwf	i1___wmul@multiplier,c
 24242  00432A  0E00               	movlw	0
 24243  00432C  200B               	addwfc	?i1___awdiv+1,w,c
 24244  00432E  6E13               	movwf	i1___wmul@multiplier+1,c
 24245  004330  0E00               	movlw	0
 24246  004332  6E15               	movwf	i1___wmul@multiplicand+1,c
 24247  004334  0E03               	movlw	3
 24248  004336  6E14               	movwf	i1___wmul@multiplicand,c
 24249  004338  ECC9  F041         	call	i1___wmul	;wreg free
 24250  00433C  0EE7               	movlw	low __powers_
 24251  00433E  2412               	addwf	?i1___wmul,w,c
 24252  004340  6EF6               	movwf	16374,c
 24253  004342  0EFA               	movlw	high __powers_
 24254  004344  2013               	addwfc	?i1___wmul+1,w,c
 24255  004346  6EF7               	movwf	16375,c
 24256  004348                     	if	1	;There are 3 active tblptr bytes
 24257  004348  6AF8               	clrf	16376,c
 24258  00434A  0E00               	movlw	low (__mediumconst shr (0+16))
 24259  00434C  22F8               	addwfc	16376,f,c
 24260  00434E                     	endif
 24261  00434E  0009               	tblrd		*+
 24262  004350  006F FFD4  F033    	movff	16373,i1___ftmul@f1
 24263  004356  0009               	tblrd		*+
 24264  004358  006F FFD4  F034    	movff	16373,i1___ftmul@f1+1
 24265  00435E  000A               	tblrd		*-
 24266  004360  006F FFD4  F035    	movff	16373,i1___ftmul@f1+2
 24267  004366  0E00               	movlw	0
 24268  004368  6E15               	movwf	i1___wmul@multiplicand+1,c
 24269  00436A  0E03               	movlw	3
 24270  00436C  6E14               	movwf	i1___wmul@multiplicand,c
 24271  00436E  0E00               	movlw	0
 24272  004370  6E07               	movwf	i1___awmod@divisor+1,c
 24273  004372  0E0A               	movlw	10
 24274  004374  6E06               	movwf	i1___awmod@divisor,c
 24275  004376  5048               	movf	i1scale@scl,w,c
 24276  004378  6E04               	movwf	i1___awmod@dividend,c
 24277  00437A  6A05               	clrf	i1___awmod@dividend+1,c
 24278  00437C  BE04               	btfsc	i1___awmod@dividend,7,c
 24279  00437E  0605               	decf	i1___awmod@dividend+1,f,c
 24280  004380  EC23  F03C         	call	i1___awmod	;wreg free
 24281  004384  0060  F010  F012   	movff	?i1___awmod,i1___wmul@multiplier
 24282  00438A  0060  F014  F013   	movff	?i1___awmod+1,i1___wmul@multiplier+1
 24283  004390  ECC9  F041         	call	i1___wmul	;wreg free
 24284  004394  0EE7               	movlw	low __powers_
 24285  004396  2412               	addwf	?i1___wmul,w,c
 24286  004398  6EF6               	movwf	16374,c
 24287  00439A  0EFA               	movlw	high __powers_
 24288  00439C  2013               	addwfc	?i1___wmul+1,w,c
 24289  00439E  6EF7               	movwf	16375,c
 24290  0043A0                     	if	1	;There are 3 active tblptr bytes
 24291  0043A0  6AF8               	clrf	16376,c
 24292  0043A2  0E00               	movlw	low (__mediumconst shr (0+16))
 24293  0043A4  22F8               	addwfc	16376,f,c
 24294  0043A6                     	endif
 24295  0043A6  0009               	tblrd		*+
 24296  0043A8  006F FFD4  F036    	movff	16373,i1___ftmul@f2
 24297  0043AE  0009               	tblrd		*+
 24298  0043B0  006F FFD4  F037    	movff	16373,i1___ftmul@f2+1
 24299  0043B6  000A               	tblrd		*-
 24300  0043B8  006F FFD4  F038    	movff	16373,i1___ftmul@f2+2
 24301  0043BE  ECD6  F030         	call	i1___ftmul	;wreg free
 24302  0043C2  0060  F0CC  F042   	movff	?i1___ftmul,?i1_scale
 24303  0043C8  0060  F0D0  F043   	movff	?i1___ftmul+1,?i1_scale+1
 24304  0043CE  0060  F0D4  F044   	movff	?i1___ftmul+2,?i1_scale+2
 24305  0043D4  0012               	return	
 24306  0043D6                     i1l944:
 24307                           
 24308                           ;doprnt.c: 440: return _powers_[scl];
 24309  0043D6  5048               	movf	i1scale@scl,w,c
 24310  0043D8  0D03               	mullw	3
 24311  0043DA  0EE7               	movlw	low __powers_
 24312  0043DC  24F3               	addwf	16371,w,c
 24313  0043DE  6EF6               	movwf	16374,c
 24314  0043E0  0EFA               	movlw	high __powers_
 24315  0043E2  20F4               	addwfc	16372,w,c
 24316  0043E4  6EF7               	movwf	16375,c
 24317  0043E6                     	if	1	;There are 3 active tblptr bytes
 24318  0043E6  6AF8               	clrf	16376,c
 24319  0043E8  0E00               	movlw	low (__mediumconst shr (0+16))
 24320  0043EA  22F8               	addwfc	16376,f,c
 24321  0043EC                     	endif
 24322  0043EC  0009               	tblrd		*+
 24323  0043EE  006F FFD4  F042    	movff	16373,?i1_scale
 24324  0043F4  0009               	tblrd		*+
 24325  0043F6  006F FFD4  F043    	movff	16373,?i1_scale+1
 24326  0043FC  000A               	tblrd		*-
 24327  0043FE  006F FFD4  F044    	movff	16373,?i1_scale+2
 24328  004404  0012               	return	
 24329  004406                     __end_ofi1_scale:
 24330                           	opt stack 0
 24331                           
 24332 ;; *************** function i1_isdigit *****************
 24333 ;; Defined at:
 24334 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 24335 ;; Parameters:    Size  Location     Type
 24336 ;;  c               1    wreg     unsigned char 
 24337 ;; Auto vars:     Size  Location     Type
 24338 ;;  c               1    5[COMRAM] unsigned char 
 24339 ;; Return value:  Size  Location     Type
 24340 ;;		None               void
 24341 ;; Registers used:
 24342 ;;		wreg, status,2, status,0
 24343 ;; Tracked objects:
 24344 ;;		On entry : 0/0
 24345 ;;		On exit  : 0/0
 24346 ;;		Unchanged: 0/0
 24347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24349 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24350 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24351 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24352 ;;Total ram usage:        3 bytes
 24353 ;; Hardware stack levels used:    1
 24354 ;; This function calls:
 24355 ;;		Nothing
 24356 ;; This function is called by:
 24357 ;;		i1_sprintf
 24358 ;; This function uses a non-reentrant model
 24359 ;;
 24360                           
 24361                           	psect	text77
 24362  00848C                     __ptext77:
 24363                           	opt stack 0
 24364  00848C                     i1_isdigit:
 24365                           	opt stack 20
 24366                           
 24367                           ;incstack = 0
 24368                           ;i1isdigit@c stored from wreg
 24369  00848C  6E06               	movwf	i1isdigit@c,c
 24370  00848E  0E00               	movlw	0
 24371  008490  6E05               	movwf	i1_isdigit$2412,c
 24372  008492  0E3A               	movlw	58
 24373  008494  6006               	cpfslt	i1isdigit@c,c
 24374  008496  D005               	goto	i1l1600
 24375  008498  0E2F               	movlw	47
 24376  00849A  6406               	cpfsgt	i1isdigit@c,c
 24377  00849C  D002               	goto	i1l1600
 24378  00849E  0E01               	movlw	1
 24379  0084A0  6E05               	movwf	i1_isdigit$2412,c
 24380  0084A2                     i1l1600:
 24381  0084A2  0060  F014  F004   	movff	i1_isdigit$2412,??i1_isdigit
 24382  0084A8  3004               	rrcf	??i1_isdigit,w,c
 24383  0084AA  0012               	return	
 24384  0084AC                     __end_ofi1_isdigit:
 24385                           	opt stack 0
 24386                           
 24387 ;; *************** function i1_fround *****************
 24388 ;; Defined at:
 24389 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 24390 ;; Parameters:    Size  Location     Type
 24391 ;;  prec            1    wreg     unsigned char 
 24392 ;; Auto vars:     Size  Location     Type
 24393 ;;  prec            1   74[COMRAM] unsigned char 
 24394 ;; Return value:  Size  Location     Type
 24395 ;;                  3   65[COMRAM] unsigned char 
 24396 ;; Registers used:
 24397 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24398 ;; Tracked objects:
 24399 ;;		On entry : 0/0
 24400 ;;		On exit  : 0/0
 24401 ;;		Unchanged: 0/0
 24402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24403 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24404 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24406 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24407 ;;Total ram usage:       10 bytes
 24408 ;; Hardware stack levels used:    1
 24409 ;; Hardware stack levels required when called:    2
 24410 ;; This function calls:
 24411 ;;		i1___awdiv
 24412 ;;		i1___awmod
 24413 ;;		i1___ftmul
 24414 ;;		i1___wmul
 24415 ;; This function is called by:
 24416 ;;		i1_sprintf
 24417 ;; This function uses a non-reentrant model
 24418 ;;
 24419                           
 24420                           	psect	text78
 24421  004A8C                     __ptext78:
 24422                           	opt stack 0
 24423  004A8C                     i1_fround:
 24424                           	opt stack 18
 24425                           
 24426                           ;incstack = 0
 24427                           ;i1fround@prec stored from wreg
 24428  004A8C  6E4B               	movwf	i1fround@prec,c
 24429                           
 24430                           ;doprnt.c: 413: if(prec>=110)
 24431  004A8E  0E6D               	movlw	109
 24432  004A90  644B               	cpfsgt	i1fround@prec,c
 24433  004A92  D0C7               	goto	i1l931
 24434                           
 24435                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 24436  004A94  0E00               	movlw	0
 24437  004A96  6E15               	movwf	i1___wmul@multiplicand+1,c
 24438  004A98  0E03               	movlw	3
 24439  004A9A  6E14               	movwf	i1___wmul@multiplicand,c
 24440  004A9C  0E00               	movlw	0
 24441  004A9E  6E0D               	movwf	i1___awdiv@divisor+1,c
 24442  004AA0  0E0A               	movlw	10
 24443  004AA2  6E0C               	movwf	i1___awdiv@divisor,c
 24444  004AA4  0E00               	movlw	0
 24445  004AA6  6E07               	movwf	i1___awmod@divisor+1,c
 24446  004AA8  0E64               	movlw	100
 24447  004AAA  6E06               	movwf	i1___awmod@divisor,c
 24448  004AAC  0060  F12C  F004   	movff	i1fround@prec,i1___awmod@dividend
 24449  004AB2  6A05               	clrf	i1___awmod@dividend+1,c
 24450  004AB4  EC23  F03C         	call	i1___awmod	;wreg free
 24451  004AB8  0060  F010  F00A   	movff	?i1___awmod,i1___awdiv@dividend
 24452  004ABE  0060  F014  F00B   	movff	?i1___awmod+1,i1___awdiv@dividend+1
 24453  004AC4  ECEC  F03A         	call	i1___awdiv	;wreg free
 24454  004AC8  0E09               	movlw	9
 24455  004ACA  240A               	addwf	?i1___awdiv,w,c
 24456  004ACC  6E12               	movwf	i1___wmul@multiplier,c
 24457  004ACE  0E00               	movlw	0
 24458  004AD0  200B               	addwfc	?i1___awdiv+1,w,c
 24459  004AD2  6E13               	movwf	i1___wmul@multiplier+1,c
 24460  004AD4  ECC9  F041         	call	i1___wmul	;wreg free
 24461  004AD8  0E0E               	movlw	low __npowers_
 24462  004ADA  2412               	addwf	?i1___wmul,w,c
 24463  004ADC  6EF6               	movwf	16374,c
 24464  004ADE  0EFB               	movlw	high __npowers_
 24465  004AE0  2013               	addwfc	?i1___wmul+1,w,c
 24466  004AE2  6EF7               	movwf	16375,c
 24467  004AE4                     	if	1	;There are 3 active tblptr bytes
 24468  004AE4  6AF8               	clrf	16376,c
 24469  004AE6  0E00               	movlw	low (__mediumconst shr (0+16))
 24470  004AE8  22F8               	addwfc	16376,f,c
 24471  004AEA                     	endif
 24472  004AEA  0009               	tblrd		*+
 24473  004AEC  006F FFD4  F036    	movff	16373,i1___ftmul@f2
 24474  004AF2  0009               	tblrd		*+
 24475  004AF4  006F FFD4  F037    	movff	16373,i1___ftmul@f2+1
 24476  004AFA  000A               	tblrd		*-
 24477  004AFC  006F FFD4  F038    	movff	16373,i1___ftmul@f2+2
 24478  004B02  0E00               	movlw	0
 24479  004B04  6E0D               	movwf	i1___awdiv@divisor+1,c
 24480  004B06  0E64               	movlw	100
 24481  004B08  6E0C               	movwf	i1___awdiv@divisor,c
 24482  004B0A  0060  F12C  F00A   	movff	i1fround@prec,i1___awdiv@dividend
 24483  004B10  6A0B               	clrf	i1___awdiv@dividend+1,c
 24484  004B12  ECEC  F03A         	call	i1___awdiv	;wreg free
 24485  004B16  0E12               	movlw	18
 24486  004B18  240A               	addwf	?i1___awdiv,w,c
 24487  004B1A  6E12               	movwf	i1___wmul@multiplier,c
 24488  004B1C  0E00               	movlw	0
 24489  004B1E  200B               	addwfc	?i1___awdiv+1,w,c
 24490  004B20  6E13               	movwf	i1___wmul@multiplier+1,c
 24491  004B22  0E00               	movlw	0
 24492  004B24  6E15               	movwf	i1___wmul@multiplicand+1,c
 24493  004B26  0E03               	movlw	3
 24494  004B28  6E14               	movwf	i1___wmul@multiplicand,c
 24495  004B2A  ECC9  F041         	call	i1___wmul	;wreg free
 24496  004B2E  0E0E               	movlw	low __npowers_
 24497  004B30  2412               	addwf	?i1___wmul,w,c
 24498  004B32  6EF6               	movwf	16374,c
 24499  004B34  0EFB               	movlw	high __npowers_
 24500  004B36  2013               	addwfc	?i1___wmul+1,w,c
 24501  004B38  6EF7               	movwf	16375,c
 24502  004B3A                     	if	1	;There are 3 active tblptr bytes
 24503  004B3A  6AF8               	clrf	16376,c
 24504  004B3C  0E00               	movlw	low (__mediumconst shr (0+16))
 24505  004B3E  22F8               	addwfc	16376,f,c
 24506  004B40                     	endif
 24507  004B40  0009               	tblrd		*+
 24508  004B42  006F FFD4  F033    	movff	16373,i1___ftmul@f1
 24509  004B48  0009               	tblrd		*+
 24510  004B4A  006F FFD4  F034    	movff	16373,i1___ftmul@f1+1
 24511  004B50  000A               	tblrd		*-
 24512  004B52  006F FFD4  F035    	movff	16373,i1___ftmul@f1+2
 24513  004B58  ECD6  F030         	call	i1___ftmul	;wreg free
 24514  004B5C  0060  F0CC  F048   	movff	?i1___ftmul,i1_fround$3005
 24515  004B62  0060  F0D0  F049   	movff	?i1___ftmul+1,i1_fround$3005+1
 24516  004B68  0060  F0D4  F04A   	movff	?i1___ftmul+2,i1_fround$3005+2
 24517                           
 24518                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 24519  004B6E  0E00               	movlw	0
 24520  004B70  6E15               	movwf	i1___wmul@multiplicand+1,c
 24521  004B72  0E03               	movlw	3
 24522  004B74  6E14               	movwf	i1___wmul@multiplicand,c
 24523  004B76  0E00               	movlw	0
 24524  004B78  6E07               	movwf	i1___awmod@divisor+1,c
 24525  004B7A  0E0A               	movlw	10
 24526  004B7C  6E06               	movwf	i1___awmod@divisor,c
 24527  004B7E  0060  F12C  F004   	movff	i1fround@prec,i1___awmod@dividend
 24528  004B84  6A05               	clrf	i1___awmod@dividend+1,c
 24529  004B86  EC23  F03C         	call	i1___awmod	;wreg free
 24530  004B8A  0060  F010  F012   	movff	?i1___awmod,i1___wmul@multiplier
 24531  004B90  0060  F014  F013   	movff	?i1___awmod+1,i1___wmul@multiplier+1
 24532  004B96  ECC9  F041         	call	i1___wmul	;wreg free
 24533  004B9A  0E0E               	movlw	low __npowers_
 24534  004B9C  2412               	addwf	?i1___wmul,w,c
 24535  004B9E  6EF6               	movwf	16374,c
 24536  004BA0  0EFB               	movlw	high __npowers_
 24537  004BA2  2013               	addwfc	?i1___wmul+1,w,c
 24538  004BA4  6EF7               	movwf	16375,c
 24539  004BA6                     	if	1	;There are 3 active tblptr bytes
 24540  004BA6  6AF8               	clrf	16376,c
 24541  004BA8  0E00               	movlw	low (__mediumconst shr (0+16))
 24542  004BAA  22F8               	addwfc	16376,f,c
 24543  004BAC                     	endif
 24544  004BAC  0009               	tblrd		*+
 24545  004BAE  006F FFD4  F036    	movff	16373,i1___ftmul@f2
 24546  004BB4  0009               	tblrd		*+
 24547  004BB6  006F FFD4  F037    	movff	16373,i1___ftmul@f2+1
 24548  004BBC  000A               	tblrd		*-
 24549  004BBE  006F FFD4  F038    	movff	16373,i1___ftmul@f2+2
 24550  004BC4  0060  F120  F033   	movff	i1_fround$3005,i1___ftmul@f1
 24551  004BCA  0060  F124  F034   	movff	i1_fround$3005+1,i1___ftmul@f1+1
 24552  004BD0  0060  F128  F035   	movff	i1_fround$3005+2,i1___ftmul@f1+2
 24553  004BD6  ECD6  F030         	call	i1___ftmul	;wreg free
 24554  004BDA  0060  F0CC  F045   	movff	?i1___ftmul,i1_fround$3006
 24555  004BE0  0060  F0D0  F046   	movff	?i1___ftmul+1,i1_fround$3006+1
 24556  004BE6  0060  F0D4  F047   	movff	?i1___ftmul+2,i1_fround$3006+2
 24557                           
 24558                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 24559  004BEC  0060  F114  F033   	movff	i1_fround$3006,i1___ftmul@f1
 24560  004BF2  0060  F118  F034   	movff	i1_fround$3006+1,i1___ftmul@f1+1
 24561  004BF8  0060  F11C  F035   	movff	i1_fround$3006+2,i1___ftmul@f1+2
 24562  004BFE  0E00               	movlw	0
 24563  004C00  6E36               	movwf	i1___ftmul@f2,c
 24564  004C02  0E00               	movlw	0
 24565  004C04  6E37               	movwf	i1___ftmul@f2+1,c
 24566  004C06  0E3F               	movlw	63
 24567  004C08  6E38               	movwf	i1___ftmul@f2+2,c
 24568  004C0A  ECD6  F030         	call	i1___ftmul	;wreg free
 24569  004C0E  0060  F0CC  F042   	movff	?i1___ftmul,?i1_fround
 24570  004C14  0060  F0D0  F043   	movff	?i1___ftmul+1,?i1_fround+1
 24571  004C1A  0060  F0D4  F044   	movff	?i1___ftmul+2,?i1_fround+2
 24572  004C20  0012               	return	
 24573  004C22                     i1l931:
 24574                           
 24575                           ;doprnt.c: 415: else if(prec > 10)
 24576  004C22  0E0A               	movlw	10
 24577  004C24  644B               	cpfsgt	i1fround@prec,c
 24578  004C26  D07C               	goto	i1l934
 24579                           
 24580                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 24581  004C28  0E00               	movlw	0
 24582  004C2A  6E15               	movwf	i1___wmul@multiplicand+1,c
 24583  004C2C  0E03               	movlw	3
 24584  004C2E  6E14               	movwf	i1___wmul@multiplicand,c
 24585  004C30  0E00               	movlw	0
 24586  004C32  6E07               	movwf	i1___awmod@divisor+1,c
 24587  004C34  0E0A               	movlw	10
 24588  004C36  6E06               	movwf	i1___awmod@divisor,c
 24589  004C38  0060  F12C  F004   	movff	i1fround@prec,i1___awmod@dividend
 24590  004C3E  6A05               	clrf	i1___awmod@dividend+1,c
 24591  004C40  EC23  F03C         	call	i1___awmod	;wreg free
 24592  004C44  0060  F010  F012   	movff	?i1___awmod,i1___wmul@multiplier
 24593  004C4A  0060  F014  F013   	movff	?i1___awmod+1,i1___wmul@multiplier+1
 24594  004C50  ECC9  F041         	call	i1___wmul	;wreg free
 24595  004C54  0E0E               	movlw	low __npowers_
 24596  004C56  2412               	addwf	?i1___wmul,w,c
 24597  004C58  6EF6               	movwf	16374,c
 24598  004C5A  0EFB               	movlw	high __npowers_
 24599  004C5C  2013               	addwfc	?i1___wmul+1,w,c
 24600  004C5E  6EF7               	movwf	16375,c
 24601  004C60                     	if	1	;There are 3 active tblptr bytes
 24602  004C60  6AF8               	clrf	16376,c
 24603  004C62  0E00               	movlw	low (__mediumconst shr (0+16))
 24604  004C64  22F8               	addwfc	16376,f,c
 24605  004C66                     	endif
 24606  004C66  0009               	tblrd		*+
 24607  004C68  006F FFD4  F036    	movff	16373,i1___ftmul@f2
 24608  004C6E  0009               	tblrd		*+
 24609  004C70  006F FFD4  F037    	movff	16373,i1___ftmul@f2+1
 24610  004C76  000A               	tblrd		*-
 24611  004C78  006F FFD4  F038    	movff	16373,i1___ftmul@f2+2
 24612  004C7E  0E00               	movlw	0
 24613  004C80  6E0D               	movwf	i1___awdiv@divisor+1,c
 24614  004C82  0E0A               	movlw	10
 24615  004C84  6E0C               	movwf	i1___awdiv@divisor,c
 24616  004C86  0060  F12C  F00A   	movff	i1fround@prec,i1___awdiv@dividend
 24617  004C8C  6A0B               	clrf	i1___awdiv@dividend+1,c
 24618  004C8E  ECEC  F03A         	call	i1___awdiv	;wreg free
 24619  004C92  0E09               	movlw	9
 24620  004C94  240A               	addwf	?i1___awdiv,w,c
 24621  004C96  6E12               	movwf	i1___wmul@multiplier,c
 24622  004C98  0E00               	movlw	0
 24623  004C9A  200B               	addwfc	?i1___awdiv+1,w,c
 24624  004C9C  6E13               	movwf	i1___wmul@multiplier+1,c
 24625  004C9E  0E00               	movlw	0
 24626  004CA0  6E15               	movwf	i1___wmul@multiplicand+1,c
 24627  004CA2  0E03               	movlw	3
 24628  004CA4  6E14               	movwf	i1___wmul@multiplicand,c
 24629  004CA6  ECC9  F041         	call	i1___wmul	;wreg free
 24630  004CAA  0E0E               	movlw	low __npowers_
 24631  004CAC  2412               	addwf	?i1___wmul,w,c
 24632  004CAE  6EF6               	movwf	16374,c
 24633  004CB0  0EFB               	movlw	high __npowers_
 24634  004CB2  2013               	addwfc	?i1___wmul+1,w,c
 24635  004CB4  6EF7               	movwf	16375,c
 24636  004CB6                     	if	1	;There are 3 active tblptr bytes
 24637  004CB6  6AF8               	clrf	16376,c
 24638  004CB8  0E00               	movlw	low (__mediumconst shr (0+16))
 24639  004CBA  22F8               	addwfc	16376,f,c
 24640  004CBC                     	endif
 24641  004CBC  0009               	tblrd		*+
 24642  004CBE  006F FFD4  F033    	movff	16373,i1___ftmul@f1
 24643  004CC4  0009               	tblrd		*+
 24644  004CC6  006F FFD4  F034    	movff	16373,i1___ftmul@f1+1
 24645  004CCC  000A               	tblrd		*-
 24646  004CCE  006F FFD4  F035    	movff	16373,i1___ftmul@f1+2
 24647  004CD4  ECD6  F030         	call	i1___ftmul	;wreg free
 24648  004CD8  0060  F0CC  F048   	movff	?i1___ftmul,i1_fround$3005
 24649  004CDE  0060  F0D0  F049   	movff	?i1___ftmul+1,i1_fround$3005+1
 24650  004CE4  0060  F0D4  F04A   	movff	?i1___ftmul+2,i1_fround$3005+2
 24651                           
 24652                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 24653  004CEA  0060  F120  F033   	movff	i1_fround$3005,i1___ftmul@f1
 24654  004CF0  0060  F124  F034   	movff	i1_fround$3005+1,i1___ftmul@f1+1
 24655  004CF6  0060  F128  F035   	movff	i1_fround$3005+2,i1___ftmul@f1+2
 24656  004CFC  0E00               	movlw	0
 24657  004CFE  6E36               	movwf	i1___ftmul@f2,c
 24658  004D00  0E00               	movlw	0
 24659  004D02  6E37               	movwf	i1___ftmul@f2+1,c
 24660  004D04  0E3F               	movlw	63
 24661  004D06  6E38               	movwf	i1___ftmul@f2+2,c
 24662  004D08  ECD6  F030         	call	i1___ftmul	;wreg free
 24663  004D0C  0060  F0CC  F042   	movff	?i1___ftmul,?i1_fround
 24664  004D12  0060  F0D0  F043   	movff	?i1___ftmul+1,?i1_fround+1
 24665  004D18  0060  F0D4  F044   	movff	?i1___ftmul+2,?i1_fround+2
 24666  004D1E  0012               	return	
 24667  004D20                     i1l934:
 24668                           
 24669                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 24670  004D20  504B               	movf	i1fround@prec,w,c
 24671  004D22  0D03               	mullw	3
 24672  004D24  0E0E               	movlw	low __npowers_
 24673  004D26  24F3               	addwf	16371,w,c
 24674  004D28  6EF6               	movwf	16374,c
 24675  004D2A  0EFB               	movlw	high __npowers_
 24676  004D2C  20F4               	addwfc	16372,w,c
 24677  004D2E  6EF7               	movwf	16375,c
 24678  004D30                     	if	1	;There are 3 active tblptr bytes
 24679  004D30  6AF8               	clrf	16376,c
 24680  004D32  0E00               	movlw	low (__mediumconst shr (0+16))
 24681  004D34  22F8               	addwfc	16376,f,c
 24682  004D36                     	endif
 24683  004D36  0009               	tblrd		*+
 24684  004D38  006F FFD4  F033    	movff	16373,i1___ftmul@f1
 24685  004D3E  0009               	tblrd		*+
 24686  004D40  006F FFD4  F034    	movff	16373,i1___ftmul@f1+1
 24687  004D46  000A               	tblrd		*-
 24688  004D48  006F FFD4  F035    	movff	16373,i1___ftmul@f1+2
 24689  004D4E  0E00               	movlw	0
 24690  004D50  6E36               	movwf	i1___ftmul@f2,c
 24691  004D52  0E00               	movlw	0
 24692  004D54  6E37               	movwf	i1___ftmul@f2+1,c
 24693  004D56  0E3F               	movlw	63
 24694  004D58  6E38               	movwf	i1___ftmul@f2+2,c
 24695  004D5A  ECD6  F030         	call	i1___ftmul	;wreg free
 24696  004D5E  0060  F0CC  F042   	movff	?i1___ftmul,?i1_fround
 24697  004D64  0060  F0D0  F043   	movff	?i1___ftmul+1,?i1_fround+1
 24698  004D6A  0060  F0D4  F044   	movff	?i1___ftmul+2,?i1_fround+2
 24699  004D70  0012               	return	
 24700  004D72                     __end_ofi1_fround:
 24701                           	opt stack 0
 24702                           
 24703 ;; *************** function i1___wmul *****************
 24704 ;; Defined at:
 24705 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 24706 ;; Parameters:    Size  Location     Type
 24707 ;;  multiplier      2   17[COMRAM] unsigned int 
 24708 ;;  multiplicand    2   19[COMRAM] unsigned int 
 24709 ;; Auto vars:     Size  Location     Type
 24710 ;;  __wmul          2   21[COMRAM] unsigned int 
 24711 ;; Return value:  Size  Location     Type
 24712 ;;                  2   17[COMRAM] unsigned int 
 24713 ;; Registers used:
 24714 ;;		wreg, status,2, status,0, prodl, prodh
 24715 ;; Tracked objects:
 24716 ;;		On entry : 0/0
 24717 ;;		On exit  : 0/0
 24718 ;;		Unchanged: 0/0
 24719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24720 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24723 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24724 ;;Total ram usage:        6 bytes
 24725 ;; Hardware stack levels used:    1
 24726 ;; This function calls:
 24727 ;;		Nothing
 24728 ;; This function is called by:
 24729 ;;		_append_Arquivo_Json
 24730 ;;		_recebeNETWORKID
 24731 ;;		i1_fround
 24732 ;;		i1_scale
 24733 ;;		i1_sprintf
 24734 ;; This function uses a non-reentrant model
 24735 ;;
 24736                           
 24737                           	psect	text79
 24738  008392                     __ptext79:
 24739                           	opt stack 0
 24740  008392                     i1___wmul:
 24741                           	opt stack 19
 24742                           
 24743                           ;incstack = 0
 24744  008392  5012               	movf	i1___wmul@multiplier,w,c
 24745  008394  0214               	mulwf	i1___wmul@multiplicand,c
 24746  008396  006F FFCC  F016    	movff	16371,i1___wmul@product
 24747  00839C  006F FFD0  F017    	movff	16372,i1___wmul@product+1
 24748  0083A2  5012               	movf	i1___wmul@multiplier,w,c
 24749  0083A4  0215               	mulwf	i1___wmul@multiplicand+1,c
 24750  0083A6  50F3               	movf	16371,w,c
 24751  0083A8  2617               	addwf	i1___wmul@product+1,f,c
 24752  0083AA  5013               	movf	i1___wmul@multiplier+1,w,c
 24753  0083AC  0214               	mulwf	i1___wmul@multiplicand,c
 24754  0083AE  50F3               	movf	16371,w,c
 24755  0083B0  2617               	addwf	i1___wmul@product+1,f,c
 24756  0083B2  0060  F058  F012   	movff	i1___wmul@product,?i1___wmul
 24757  0083B8  0060  F05C  F013   	movff	i1___wmul@product+1,?i1___wmul+1
 24758  0083BE  0012               	return	
 24759  0083C0                     __end_ofi1___wmul:
 24760                           	opt stack 0
 24761                           
 24762 ;; *************** function i1___ftmul *****************
 24763 ;; Defined at:
 24764 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 24765 ;; Parameters:    Size  Location     Type
 24766 ;;  f1              3   50[COMRAM] float 
 24767 ;;  f2              3   53[COMRAM] float 
 24768 ;; Auto vars:     Size  Location     Type
 24769 ;;  __ftmul         3   60[COMRAM] unsigned um
 24770 ;;  __ftmul         1   64[COMRAM] unsigned char 
 24771 ;;  __ftmul         1   63[COMRAM] unsigned char 
 24772 ;;  __ftmul         1   59[COMRAM] unsigned char 
 24773 ;; Return value:  Size  Location     Type
 24774 ;;                  3   50[COMRAM] float 
 24775 ;; Registers used:
 24776 ;;		wreg, status,2, status,0, cstack
 24777 ;; Tracked objects:
 24778 ;;		On entry : 0/0
 24779 ;;		On exit  : 0/0
 24780 ;;		Unchanged: 0/0
 24781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24782 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24783 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24784 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24785 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24786 ;;Total ram usage:       15 bytes
 24787 ;; Hardware stack levels used:    1
 24788 ;; Hardware stack levels required when called:    1
 24789 ;; This function calls:
 24790 ;;		i1___ftpack
 24791 ;; This function is called by:
 24792 ;;		i1_fround
 24793 ;;		i1_scale
 24794 ;;		i1_sprintf
 24795 ;; This function uses a non-reentrant model
 24796 ;;
 24797                           
 24798                           	psect	text80
 24799  0061AC                     __ptext80:
 24800                           	opt stack 0
 24801  0061AC                     i1___ftmul:
 24802                           	opt stack 18
 24803                           
 24804                           ;incstack = 0
 24805  0061AC  0060  F0D4  F039   	movff	i1___ftmul@f1+2,??i1___ftmul
 24806  0061B2  6A3A               	clrf	(??i1___ftmul+1)& (0+255),c
 24807  0061B4  6A3B               	clrf	(??i1___ftmul+2)& (0+255),c
 24808  0061B6  3434               	rlcf	i1___ftmul@f1+1,w,c
 24809  0061B8  3639               	rlcf	??i1___ftmul& (0+255),f,c
 24810  0061BA  E301               	bnc	u1346_21
 24811  0061BC  803A               	bsf	(??i1___ftmul+1)& (0+255),0,c
 24812  0061BE                     u1346_21:
 24813  0061BE  5039               	movf	??i1___ftmul,w,c
 24814  0061C0  6E3C               	movwf	i1___ftmul@exp,c
 24815  0061C2  503C               	movf	i1___ftmul@exp,w,c
 24816  0061C4  A4D8               	btfss	16344,2,c
 24817  0061C6  D007               	goto	i1l1564
 24818  0061C8  0E00               	movlw	0
 24819  0061CA  6E33               	movwf	?i1___ftmul,c
 24820  0061CC  0E00               	movlw	0
 24821  0061CE  6E34               	movwf	?i1___ftmul+1,c
 24822  0061D0  0E00               	movlw	0
 24823  0061D2  6E35               	movwf	?i1___ftmul+2,c
 24824  0061D4  0012               	return	
 24825  0061D6                     i1l1564:
 24826  0061D6  0060  F0E0  F039   	movff	i1___ftmul@f2+2,??i1___ftmul
 24827  0061DC  6A3A               	clrf	(??i1___ftmul+1)& (0+255),c
 24828  0061DE  6A3B               	clrf	(??i1___ftmul+2)& (0+255),c
 24829  0061E0  3437               	rlcf	i1___ftmul@f2+1,w,c
 24830  0061E2  3639               	rlcf	??i1___ftmul& (0+255),f,c
 24831  0061E4  E301               	bnc	u1348_21
 24832  0061E6  803A               	bsf	(??i1___ftmul+1)& (0+255),0,c
 24833  0061E8                     u1348_21:
 24834  0061E8  5039               	movf	??i1___ftmul,w,c
 24835  0061EA  6E41               	movwf	i1___ftmul@sign,c
 24836  0061EC  5041               	movf	i1___ftmul@sign,w,c
 24837  0061EE  A4D8               	btfss	16344,2,c
 24838  0061F0  D007               	goto	i1l1566
 24839  0061F2  0E00               	movlw	0
 24840  0061F4  6E33               	movwf	?i1___ftmul,c
 24841  0061F6  0E00               	movlw	0
 24842  0061F8  6E34               	movwf	?i1___ftmul+1,c
 24843  0061FA  0E00               	movlw	0
 24844  0061FC  6E35               	movwf	?i1___ftmul+2,c
 24845  0061FE  0012               	return	
 24846  006200                     i1l1566:
 24847  006200  5041               	movf	i1___ftmul@sign,w,c
 24848  006202  0F7B               	addlw	123
 24849  006204  263C               	addwf	i1___ftmul@exp,f,c
 24850  006206  0060  F0D4  F041   	movff	i1___ftmul@f1+2,i1___ftmul@sign
 24851  00620C  5038               	movf	i1___ftmul@f2+2,w,c
 24852  00620E  1A41               	xorwf	i1___ftmul@sign,f,c
 24853  006210  0E80               	movlw	128
 24854  006212  1641               	andwf	i1___ftmul@sign,f,c
 24855  006214  8E34               	bsf	i1___ftmul@f1+1,7,c
 24856  006216  8E37               	bsf	i1___ftmul@f2+1,7,c
 24857  006218  0EFF               	movlw	255
 24858  00621A  1636               	andwf	i1___ftmul@f2,f,c
 24859  00621C  0EFF               	movlw	255
 24860  00621E  1637               	andwf	i1___ftmul@f2+1,f,c
 24861  006220  0E00               	movlw	0
 24862  006222  1638               	andwf	i1___ftmul@f2+2,f,c
 24863  006224  0E00               	movlw	0
 24864  006226  6E3D               	movwf	i1___ftmul@f3_as_product,c
 24865  006228  0E00               	movlw	0
 24866  00622A  6E3E               	movwf	i1___ftmul@f3_as_product+1,c
 24867  00622C  0E00               	movlw	0
 24868  00622E  6E3F               	movwf	i1___ftmul@f3_as_product+2,c
 24869  006230  0E07               	movlw	7
 24870  006232  6E40               	movwf	i1___ftmul@cntr,c
 24871  006234  A033               	btfss	i1___ftmul@f1,0,c
 24872  006236  D006               	goto	i1l1568
 24873  006238  5036               	movf	i1___ftmul@f2,w,c
 24874  00623A  263D               	addwf	i1___ftmul@f3_as_product,f,c
 24875  00623C  5037               	movf	i1___ftmul@f2+1,w,c
 24876  00623E  223E               	addwfc	i1___ftmul@f3_as_product+1,f,c
 24877  006240  5038               	movf	i1___ftmul@f2+2,w,c
 24878  006242  223F               	addwfc	i1___ftmul@f3_as_product+2,f,c
 24879  006244                     i1l1568:
 24880  006244  90D8               	bcf	16344,0,c
 24881  006246  3235               	rrcf	i1___ftmul@f1+2,f,c
 24882  006248  3234               	rrcf	i1___ftmul@f1+1,f,c
 24883  00624A  3233               	rrcf	i1___ftmul@f1,f,c
 24884  00624C  90D8               	bcf	16344,0,c
 24885  00624E  3636               	rlcf	i1___ftmul@f2,f,c
 24886  006250  3637               	rlcf	i1___ftmul@f2+1,f,c
 24887  006252  3638               	rlcf	i1___ftmul@f2+2,f,c
 24888  006254  2E40               	decfsz	i1___ftmul@cntr,f,c
 24889  006256  D7EE               	goto	i1l1567
 24890  006258  0E09               	movlw	9
 24891  00625A  6E40               	movwf	i1___ftmul@cntr,c
 24892  00625C  A033               	btfss	i1___ftmul@f1,0,c
 24893  00625E  D006               	goto	i1l1571
 24894  006260  5036               	movf	i1___ftmul@f2,w,c
 24895  006262  263D               	addwf	i1___ftmul@f3_as_product,f,c
 24896  006264  5037               	movf	i1___ftmul@f2+1,w,c
 24897  006266  223E               	addwfc	i1___ftmul@f3_as_product+1,f,c
 24898  006268  5038               	movf	i1___ftmul@f2+2,w,c
 24899  00626A  223F               	addwfc	i1___ftmul@f3_as_product+2,f,c
 24900  00626C                     i1l1571:
 24901  00626C  90D8               	bcf	16344,0,c
 24902  00626E  3235               	rrcf	i1___ftmul@f1+2,f,c
 24903  006270  3234               	rrcf	i1___ftmul@f1+1,f,c
 24904  006272  3233               	rrcf	i1___ftmul@f1,f,c
 24905  006274  90D8               	bcf	16344,0,c
 24906  006276  323F               	rrcf	i1___ftmul@f3_as_product+2,f,c
 24907  006278  323E               	rrcf	i1___ftmul@f3_as_product+1,f,c
 24908  00627A  323D               	rrcf	i1___ftmul@f3_as_product,f,c
 24909  00627C  2E40               	decfsz	i1___ftmul@cntr,f,c
 24910  00627E  D7EE               	goto	i1l1570
 24911  006280  0060  F0F4  F004   	movff	i1___ftmul@f3_as_product,i1___ftpack@arg
 24912  006286  0060  F0F8  F005   	movff	i1___ftmul@f3_as_product+1,i1___ftpack@arg+1
 24913  00628C  0060  F0FC  F006   	movff	i1___ftmul@f3_as_product+2,i1___ftpack@arg+2
 24914  006292  0060  F0F0  F007   	movff	i1___ftmul@exp,i1___ftpack@exp
 24915  006298  0060  F104  F008   	movff	i1___ftmul@sign,i1___ftpack@sign
 24916  00629E  EC87  F037         	call	i1___ftpack	;wreg free
 24917  0062A2  0060  F010  F033   	movff	?i1___ftpack,?i1___ftmul
 24918  0062A8  0060  F014  F034   	movff	?i1___ftpack+1,?i1___ftmul+1
 24919  0062AE  0060  F018  F035   	movff	?i1___ftpack+2,?i1___ftmul+2
 24920  0062B4  0012               	return	
 24921  0062B6                     __end_ofi1___ftmul:
 24922                           	opt stack 0
 24923                           
 24924 ;; *************** function i1___awmod *****************
 24925 ;; Defined at:
 24926 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 24927 ;; Parameters:    Size  Location     Type
 24928 ;;  dividend        2    3[COMRAM] int 
 24929 ;;  divisor         2    5[COMRAM] int 
 24930 ;; Auto vars:     Size  Location     Type
 24931 ;;  __awmod         1    8[COMRAM] unsigned char 
 24932 ;;  __awmod         1    7[COMRAM] unsigned char 
 24933 ;; Return value:  Size  Location     Type
 24934 ;;                  2    3[COMRAM] int 
 24935 ;; Registers used:
 24936 ;;		wreg, status,2, status,0
 24937 ;; Tracked objects:
 24938 ;;		On entry : 0/0
 24939 ;;		On exit  : 0/0
 24940 ;;		Unchanged: 0/0
 24941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24942 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24945 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24946 ;;Total ram usage:        6 bytes
 24947 ;; Hardware stack levels used:    1
 24948 ;; This function calls:
 24949 ;;		Nothing
 24950 ;; This function is called by:
 24951 ;;		i1_fround
 24952 ;;		i1_scale
 24953 ;;		i1_sprintf
 24954 ;; This function uses a non-reentrant model
 24955 ;;
 24956                           
 24957                           	psect	text81
 24958  007846                     __ptext81:
 24959                           	opt stack 0
 24960  007846                     i1___awmod:
 24961                           	opt stack 19
 24962                           
 24963                           ;incstack = 0
 24964  007846  0E00               	movlw	0
 24965  007848  6E09               	movwf	i1___awmod@sign,c
 24966  00784A  AE05               	btfss	i1___awmod@dividend+1,7,c
 24967  00784C  D006               	goto	i1l1417
 24968  00784E  6C04               	negf	i1___awmod@dividend,c
 24969  007850  1E05               	comf	i1___awmod@dividend+1,f,c
 24970  007852  B0D8               	btfsc	16344,0,c
 24971  007854  2A05               	incf	i1___awmod@dividend+1,f,c
 24972  007856  0E01               	movlw	1
 24973  007858  6E09               	movwf	i1___awmod@sign,c
 24974  00785A                     i1l1417:
 24975  00785A  AE07               	btfss	i1___awmod@divisor+1,7,c
 24976  00785C  D004               	goto	i1l1418
 24977  00785E  6C06               	negf	i1___awmod@divisor,c
 24978  007860  1E07               	comf	i1___awmod@divisor+1,f,c
 24979  007862  B0D8               	btfsc	16344,0,c
 24980  007864  2A07               	incf	i1___awmod@divisor+1,f,c
 24981  007866                     i1l1418:
 24982  007866  5006               	movf	i1___awmod@divisor,w,c
 24983  007868  1007               	iorwf	i1___awmod@divisor+1,w,c
 24984  00786A  B4D8               	btfsc	16344,2,c
 24985  00786C  D018               	goto	i1l1425
 24986  00786E  0E01               	movlw	1
 24987  007870  6E08               	movwf	i1___awmod@counter,c
 24988  007872  D004               	goto	i1l1420
 24989  007874  90D8               	bcf	16344,0,c
 24990  007876  3606               	rlcf	i1___awmod@divisor,f,c
 24991  007878  3607               	rlcf	i1___awmod@divisor+1,f,c
 24992  00787A  2A08               	incf	i1___awmod@counter,f,c
 24993  00787C                     i1l1420:
 24994  00787C  AE07               	btfss	i1___awmod@divisor+1,7,c
 24995  00787E  D7FA               	goto	i1l1421
 24996  007880                     i1u1322_20:
 24997  007880  5006               	movf	i1___awmod@divisor,w,c
 24998  007882  5C04               	subwf	i1___awmod@dividend,w,c
 24999  007884  5007               	movf	i1___awmod@divisor+1,w,c
 25000  007886  5805               	subwfb	i1___awmod@dividend+1,w,c
 25001  007888  A0D8               	btfss	16344,0,c
 25002  00788A  D004               	goto	i1l1424
 25003  00788C  5006               	movf	i1___awmod@divisor,w,c
 25004  00788E  5E04               	subwf	i1___awmod@dividend,f,c
 25005  007890  5007               	movf	i1___awmod@divisor+1,w,c
 25006  007892  5A05               	subwfb	i1___awmod@dividend+1,f,c
 25007  007894                     i1l1424:
 25008  007894  90D8               	bcf	16344,0,c
 25009  007896  3207               	rrcf	i1___awmod@divisor+1,f,c
 25010  007898  3206               	rrcf	i1___awmod@divisor,f,c
 25011  00789A  2E08               	decfsz	i1___awmod@counter,f,c
 25012  00789C  D7F1               	goto	i1u1322_20
 25013  00789E                     i1l1425:
 25014  00789E  5009               	movf	i1___awmod@sign,w,c
 25015  0078A0  B4D8               	btfsc	16344,2,c
 25016  0078A2  D004               	goto	i1l1426
 25017  0078A4  6C04               	negf	i1___awmod@dividend,c
 25018  0078A6  1E05               	comf	i1___awmod@dividend+1,f,c
 25019  0078A8  B0D8               	btfsc	16344,0,c
 25020  0078AA  2A05               	incf	i1___awmod@dividend+1,f,c
 25021  0078AC                     i1l1426:
 25022  0078AC  0060  F010  F004   	movff	i1___awmod@dividend,?i1___awmod
 25023  0078B2  0060  F014  F005   	movff	i1___awmod@dividend+1,?i1___awmod+1
 25024  0078B8  0012               	return	
 25025  0078BA                     __end_ofi1___awmod:
 25026                           	opt stack 0
 25027                           
 25028 ;; *************** function i1___awdiv *****************
 25029 ;; Defined at:
 25030 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 25031 ;; Parameters:    Size  Location     Type
 25032 ;;  dividend        2    9[COMRAM] int 
 25033 ;;  divisor         2   11[COMRAM] int 
 25034 ;; Auto vars:     Size  Location     Type
 25035 ;;  __awdiv         2   15[COMRAM] int 
 25036 ;;  __awdiv         1   14[COMRAM] unsigned char 
 25037 ;;  __awdiv         1   13[COMRAM] unsigned char 
 25038 ;; Return value:  Size  Location     Type
 25039 ;;                  2    9[COMRAM] int 
 25040 ;; Registers used:
 25041 ;;		wreg, status,2, status,0
 25042 ;; Tracked objects:
 25043 ;;		On entry : 0/0
 25044 ;;		On exit  : 0/0
 25045 ;;		Unchanged: 0/0
 25046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25047 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25048 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25050 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25051 ;;Total ram usage:        8 bytes
 25052 ;; Hardware stack levels used:    1
 25053 ;; This function calls:
 25054 ;;		Nothing
 25055 ;; This function is called by:
 25056 ;;		i1_fround
 25057 ;;		i1_scale
 25058 ;;		i1_sprintf
 25059 ;; This function uses a non-reentrant model
 25060 ;;
 25061                           
 25062                           	psect	text82
 25063  0075D8                     __ptext82:
 25064                           	opt stack 0
 25065  0075D8                     i1___awdiv:
 25066                           	opt stack 19
 25067                           
 25068                           ;incstack = 0
 25069  0075D8  0E00               	movlw	0
 25070  0075DA  6E0F               	movwf	i1___awdiv@sign,c
 25071  0075DC  AE0D               	btfss	i1___awdiv@divisor+1,7,c
 25072  0075DE  D006               	goto	i1l1404
 25073  0075E0  6C0C               	negf	i1___awdiv@divisor,c
 25074  0075E2  1E0D               	comf	i1___awdiv@divisor+1,f,c
 25075  0075E4  B0D8               	btfsc	16344,0,c
 25076  0075E6  2A0D               	incf	i1___awdiv@divisor+1,f,c
 25077  0075E8  0E01               	movlw	1
 25078  0075EA  6E0F               	movwf	i1___awdiv@sign,c
 25079  0075EC                     i1l1404:
 25080  0075EC  AE0B               	btfss	i1___awdiv@dividend+1,7,c
 25081  0075EE  D006               	goto	i1l1405
 25082  0075F0  6C0A               	negf	i1___awdiv@dividend,c
 25083  0075F2  1E0B               	comf	i1___awdiv@dividend+1,f,c
 25084  0075F4  B0D8               	btfsc	16344,0,c
 25085  0075F6  2A0B               	incf	i1___awdiv@dividend+1,f,c
 25086  0075F8  0E01               	movlw	1
 25087  0075FA  1A0F               	xorwf	i1___awdiv@sign,f,c
 25088  0075FC                     i1l1405:
 25089  0075FC  0E00               	movlw	0
 25090  0075FE  6E11               	movwf	i1___awdiv@quotient+1,c
 25091  007600  0E00               	movlw	0
 25092  007602  6E10               	movwf	i1___awdiv@quotient,c
 25093  007604  500C               	movf	i1___awdiv@divisor,w,c
 25094  007606  100D               	iorwf	i1___awdiv@divisor+1,w,c
 25095  007608  B4D8               	btfsc	16344,2,c
 25096  00760A  D01C               	goto	i1l1412
 25097  00760C  0E01               	movlw	1
 25098  00760E  6E0E               	movwf	i1___awdiv@counter,c
 25099  007610  D004               	goto	i1l1407
 25100  007612  90D8               	bcf	16344,0,c
 25101  007614  360C               	rlcf	i1___awdiv@divisor,f,c
 25102  007616  360D               	rlcf	i1___awdiv@divisor+1,f,c
 25103  007618  2A0E               	incf	i1___awdiv@counter,f,c
 25104  00761A                     i1l1407:
 25105  00761A  AE0D               	btfss	i1___awdiv@divisor+1,7,c
 25106  00761C  D7FA               	goto	i1l1408
 25107  00761E                     i1u1316_20:
 25108  00761E  90D8               	bcf	16344,0,c
 25109  007620  3610               	rlcf	i1___awdiv@quotient,f,c
 25110  007622  3611               	rlcf	i1___awdiv@quotient+1,f,c
 25111  007624  500C               	movf	i1___awdiv@divisor,w,c
 25112  007626  5C0A               	subwf	i1___awdiv@dividend,w,c
 25113  007628  500D               	movf	i1___awdiv@divisor+1,w,c
 25114  00762A  580B               	subwfb	i1___awdiv@dividend+1,w,c
 25115  00762C  A0D8               	btfss	16344,0,c
 25116  00762E  D005               	goto	i1l1411
 25117  007630  500C               	movf	i1___awdiv@divisor,w,c
 25118  007632  5E0A               	subwf	i1___awdiv@dividend,f,c
 25119  007634  500D               	movf	i1___awdiv@divisor+1,w,c
 25120  007636  5A0B               	subwfb	i1___awdiv@dividend+1,f,c
 25121  007638  8010               	bsf	i1___awdiv@quotient,0,c
 25122  00763A                     i1l1411:
 25123  00763A  90D8               	bcf	16344,0,c
 25124  00763C  320D               	rrcf	i1___awdiv@divisor+1,f,c
 25125  00763E  320C               	rrcf	i1___awdiv@divisor,f,c
 25126  007640  2E0E               	decfsz	i1___awdiv@counter,f,c
 25127  007642  D7ED               	goto	i1u1316_20
 25128  007644                     i1l1412:
 25129  007644  500F               	movf	i1___awdiv@sign,w,c
 25130  007646  B4D8               	btfsc	16344,2,c
 25131  007648  D004               	goto	i1l1413
 25132  00764A  6C10               	negf	i1___awdiv@quotient,c
 25133  00764C  1E11               	comf	i1___awdiv@quotient+1,f,c
 25134  00764E  B0D8               	btfsc	16344,0,c
 25135  007650  2A11               	incf	i1___awdiv@quotient+1,f,c
 25136  007652                     i1l1413:
 25137  007652  0060  F040  F00A   	movff	i1___awdiv@quotient,?i1___awdiv
 25138  007658  0060  F044  F00B   	movff	i1___awdiv@quotient+1,?i1___awdiv+1
 25139  00765E  0012               	return	
 25140  007660                     __end_ofi1___awdiv:
 25141                           	opt stack 0
 25142                           
 25143 ;; *************** function i1__tdiv_to_l_ *****************
 25144 ;; Defined at:
 25145 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 25146 ;; Parameters:    Size  Location     Type
 25147 ;;  f1              3    3[COMRAM] float 
 25148 ;;  f2              3    6[COMRAM] float 
 25149 ;; Auto vars:     Size  Location     Type
 25150 ;;  _tdiv_to_l_     4   12[COMRAM] unsigned long 
 25151 ;;  _tdiv_to_l_     1   17[COMRAM] unsigned char 
 25152 ;;  _tdiv_to_l_     1   16[COMRAM] unsigned char 
 25153 ;; Return value:  Size  Location     Type
 25154 ;;                  4    3[COMRAM] unsigned long 
 25155 ;; Registers used:
 25156 ;;		wreg, status,2, status,0
 25157 ;; Tracked objects:
 25158 ;;		On entry : 0/0
 25159 ;;		On exit  : 0/0
 25160 ;;		Unchanged: 0/0
 25161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25162 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25163 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25164 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25165 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25166 ;;Total ram usage:       15 bytes
 25167 ;; Hardware stack levels used:    1
 25168 ;; This function calls:
 25169 ;;		Nothing
 25170 ;; This function is called by:
 25171 ;;		i1_sprintf
 25172 ;; This function uses a non-reentrant model
 25173 ;;
 25174                           
 25175                           	psect	text83
 25176  005BEC                     __ptext83:
 25177                           	opt stack 0
 25178  005BEC                     i1__tdiv_to_l_:
 25179                           	opt stack 20
 25180                           
 25181                           ;incstack = 0
 25182  005BEC  0060  F018  F00A   	movff	i1__tdiv_to_l_@f1+2,??i1__tdiv_to_l_
 25183  005BF2  6A0B               	clrf	(??i1__tdiv_to_l_+1)& (0+255),c
 25184  005BF4  6A0C               	clrf	(??i1__tdiv_to_l_+2)& (0+255),c
 25185  005BF6  3405               	rlcf	i1__tdiv_to_l_@f1+1,w,c
 25186  005BF8  360A               	rlcf	??i1__tdiv_to_l_& (0+255),f,c
 25187  005BFA  E301               	bnc	u1371_21
 25188  005BFC  800B               	bsf	(??i1__tdiv_to_l_+1)& (0+255),0,c
 25189  005BFE                     u1371_21:
 25190  005BFE  500A               	movf	??i1__tdiv_to_l_,w,c
 25191  005C00  6E12               	movwf	i1__tdiv_to_l_@exp1,c
 25192  005C02  5012               	movf	i1__tdiv_to_l_@exp1,w,c
 25193  005C04  A4D8               	btfss	16344,2,c
 25194  005C06  D009               	goto	i1l1540
 25195  005C08  0E00               	movlw	0
 25196  005C0A  6E04               	movwf	?i1__tdiv_to_l_,c
 25197  005C0C  0E00               	movlw	0
 25198  005C0E  6E05               	movwf	?i1__tdiv_to_l_+1,c
 25199  005C10  0E00               	movlw	0
 25200  005C12  6E06               	movwf	?i1__tdiv_to_l_+2,c
 25201  005C14  0E00               	movlw	0
 25202  005C16  6E07               	movwf	?i1__tdiv_to_l_+3,c
 25203  005C18  0012               	return	
 25204  005C1A                     i1l1540:
 25205  005C1A  0060  F024  F00A   	movff	i1__tdiv_to_l_@f2+2,??i1__tdiv_to_l_
 25206  005C20  6A0B               	clrf	(??i1__tdiv_to_l_+1)& (0+255),c
 25207  005C22  6A0C               	clrf	(??i1__tdiv_to_l_+2)& (0+255),c
 25208  005C24  3408               	rlcf	i1__tdiv_to_l_@f2+1,w,c
 25209  005C26  360A               	rlcf	??i1__tdiv_to_l_& (0+255),f,c
 25210  005C28  E301               	bnc	u1373_21
 25211  005C2A  800B               	bsf	(??i1__tdiv_to_l_+1)& (0+255),0,c
 25212  005C2C                     u1373_21:
 25213  005C2C  500A               	movf	??i1__tdiv_to_l_,w,c
 25214  005C2E  6E11               	movwf	i1__tdiv_to_l_@cntr,c
 25215  005C30  5011               	movf	i1__tdiv_to_l_@cntr,w,c
 25216  005C32  A4D8               	btfss	16344,2,c
 25217  005C34  D009               	goto	i1l1542
 25218  005C36  0E00               	movlw	0
 25219  005C38  6E04               	movwf	?i1__tdiv_to_l_,c
 25220  005C3A  0E00               	movlw	0
 25221  005C3C  6E05               	movwf	?i1__tdiv_to_l_+1,c
 25222  005C3E  0E00               	movlw	0
 25223  005C40  6E06               	movwf	?i1__tdiv_to_l_+2,c
 25224  005C42  0E00               	movlw	0
 25225  005C44  6E07               	movwf	?i1__tdiv_to_l_+3,c
 25226  005C46  0012               	return	
 25227  005C48                     i1l1542:
 25228  005C48  8E05               	bsf	i1__tdiv_to_l_@f1+1,7,c
 25229  005C4A  0EFF               	movlw	255
 25230  005C4C  1604               	andwf	i1__tdiv_to_l_@f1,f,c
 25231  005C4E  0EFF               	movlw	255
 25232  005C50  1605               	andwf	i1__tdiv_to_l_@f1+1,f,c
 25233  005C52  0E00               	movlw	0
 25234  005C54  1606               	andwf	i1__tdiv_to_l_@f1+2,f,c
 25235  005C56  8E08               	bsf	i1__tdiv_to_l_@f2+1,7,c
 25236  005C58  0EFF               	movlw	255
 25237  005C5A  1607               	andwf	i1__tdiv_to_l_@f2,f,c
 25238  005C5C  0EFF               	movlw	255
 25239  005C5E  1608               	andwf	i1__tdiv_to_l_@f2+1,f,c
 25240  005C60  0E00               	movlw	0
 25241  005C62  1609               	andwf	i1__tdiv_to_l_@f2+2,f,c
 25242  005C64  0E00               	movlw	0
 25243  005C66  6E0D               	movwf	i1__tdiv_to_l_@quot,c
 25244  005C68  0E00               	movlw	0
 25245  005C6A  6E0E               	movwf	i1__tdiv_to_l_@quot+1,c
 25246  005C6C  0E00               	movlw	0
 25247  005C6E  6E0F               	movwf	i1__tdiv_to_l_@quot+2,c
 25248  005C70  0E00               	movlw	0
 25249  005C72  6E10               	movwf	i1__tdiv_to_l_@quot+3,c
 25250  005C74  0E7F               	movlw	127
 25251  005C76  5E12               	subwf	i1__tdiv_to_l_@exp1,f,c
 25252  005C78  5011               	movf	i1__tdiv_to_l_@cntr,w,c
 25253  005C7A  0F98               	addlw	152
 25254  005C7C  5E12               	subwf	i1__tdiv_to_l_@exp1,f,c
 25255  005C7E  0E18               	movlw	24
 25256  005C80  6E11               	movwf	i1__tdiv_to_l_@cntr,c
 25257  005C82                     i1l1543:
 25258  005C82  90D8               	bcf	16344,0,c
 25259  005C84  360D               	rlcf	i1__tdiv_to_l_@quot,f,c
 25260  005C86  360E               	rlcf	i1__tdiv_to_l_@quot+1,f,c
 25261  005C88  360F               	rlcf	i1__tdiv_to_l_@quot+2,f,c
 25262  005C8A  3610               	rlcf	i1__tdiv_to_l_@quot+3,f,c
 25263  005C8C  5007               	movf	i1__tdiv_to_l_@f2,w,c
 25264  005C8E  5C04               	subwf	i1__tdiv_to_l_@f1,w,c
 25265  005C90  5008               	movf	i1__tdiv_to_l_@f2+1,w,c
 25266  005C92  5805               	subwfb	i1__tdiv_to_l_@f1+1,w,c
 25267  005C94  5009               	movf	i1__tdiv_to_l_@f2+2,w,c
 25268  005C96  5806               	subwfb	i1__tdiv_to_l_@f1+2,w,c
 25269  005C98  A0D8               	btfss	16344,0,c
 25270  005C9A  D007               	goto	i1l1544
 25271  005C9C  5007               	movf	i1__tdiv_to_l_@f2,w,c
 25272  005C9E  5E04               	subwf	i1__tdiv_to_l_@f1,f,c
 25273  005CA0  5008               	movf	i1__tdiv_to_l_@f2+1,w,c
 25274  005CA2  5A05               	subwfb	i1__tdiv_to_l_@f1+1,f,c
 25275  005CA4  5009               	movf	i1__tdiv_to_l_@f2+2,w,c
 25276  005CA6  5A06               	subwfb	i1__tdiv_to_l_@f1+2,f,c
 25277  005CA8  800D               	bsf	i1__tdiv_to_l_@quot,0,c
 25278  005CAA                     i1l1544:
 25279  005CAA  90D8               	bcf	16344,0,c
 25280  005CAC  3604               	rlcf	i1__tdiv_to_l_@f1,f,c
 25281  005CAE  3605               	rlcf	i1__tdiv_to_l_@f1+1,f,c
 25282  005CB0  3606               	rlcf	i1__tdiv_to_l_@f1+2,f,c
 25283  005CB2  2E11               	decfsz	i1__tdiv_to_l_@cntr,f,c
 25284  005CB4  D7E6               	goto	i1l1543
 25285  005CB6  AE12               	btfss	i1__tdiv_to_l_@exp1,7,c
 25286  005CB8  D016               	goto	i1l1546
 25287  005CBA  5012               	movf	i1__tdiv_to_l_@exp1,w,c
 25288  005CBC  0A80               	xorlw	128
 25289  005CBE  0F97               	addlw	151
 25290  005CC0  B0D8               	btfsc	16344,0,c
 25291  005CC2  D009               	goto	i1l1547
 25292  005CC4  0E00               	movlw	0
 25293  005CC6  6E04               	movwf	?i1__tdiv_to_l_,c
 25294  005CC8  0E00               	movlw	0
 25295  005CCA  6E05               	movwf	?i1__tdiv_to_l_+1,c
 25296  005CCC  0E00               	movlw	0
 25297  005CCE  6E06               	movwf	?i1__tdiv_to_l_+2,c
 25298  005CD0  0E00               	movlw	0
 25299  005CD2  6E07               	movwf	?i1__tdiv_to_l_+3,c
 25300  005CD4  0012               	return	
 25301  005CD6                     i1l1547:
 25302  005CD6  90D8               	bcf	16344,0,c
 25303  005CD8  3210               	rrcf	i1__tdiv_to_l_@quot+3,f,c
 25304  005CDA  320F               	rrcf	i1__tdiv_to_l_@quot+2,f,c
 25305  005CDC  320E               	rrcf	i1__tdiv_to_l_@quot+1,f,c
 25306  005CDE  320D               	rrcf	i1__tdiv_to_l_@quot,f,c
 25307  005CE0  3E12               	incfsz	i1__tdiv_to_l_@exp1,f,c
 25308  005CE2  D7F9               	goto	i1l1547
 25309  005CE4  D015               	goto	i1u1379_20
 25310  005CE6                     i1l1546:
 25311  005CE6  0E17               	movlw	23
 25312  005CE8  6412               	cpfsgt	i1__tdiv_to_l_@exp1,c
 25313  005CEA  D00F               	goto	i1l1552
 25314  005CEC  0E00               	movlw	0
 25315  005CEE  6E04               	movwf	?i1__tdiv_to_l_,c
 25316  005CF0  0E00               	movlw	0
 25317  005CF2  6E05               	movwf	?i1__tdiv_to_l_+1,c
 25318  005CF4  0E00               	movlw	0
 25319  005CF6  6E06               	movwf	?i1__tdiv_to_l_+2,c
 25320  005CF8  0E00               	movlw	0
 25321  005CFA  6E07               	movwf	?i1__tdiv_to_l_+3,c
 25322  005CFC  0012               	return	
 25323  005CFE  90D8               	bcf	16344,0,c
 25324  005D00  360D               	rlcf	i1__tdiv_to_l_@quot,f,c
 25325  005D02  360E               	rlcf	i1__tdiv_to_l_@quot+1,f,c
 25326  005D04  360F               	rlcf	i1__tdiv_to_l_@quot+2,f,c
 25327  005D06  3610               	rlcf	i1__tdiv_to_l_@quot+3,f,c
 25328  005D08  0612               	decf	i1__tdiv_to_l_@exp1,f,c
 25329  005D0A                     i1l1552:
 25330  005D0A  5012               	movf	i1__tdiv_to_l_@exp1,w,c
 25331  005D0C  A4D8               	btfss	16344,2,c
 25332  005D0E  D7F7               	goto	i1l1553
 25333  005D10                     i1u1379_20:
 25334  005D10  0060  F034  F004   	movff	i1__tdiv_to_l_@quot,?i1__tdiv_to_l_
 25335  005D16  0060  F038  F005   	movff	i1__tdiv_to_l_@quot+1,?i1__tdiv_to_l_+1
 25336  005D1C  0060  F03C  F006   	movff	i1__tdiv_to_l_@quot+2,?i1__tdiv_to_l_+2
 25337  005D22  0060  F040  F007   	movff	i1__tdiv_to_l_@quot+3,?i1__tdiv_to_l_+3
 25338  005D28  0012               	return		;funcret
 25339  005D2A                     __end_ofi1__tdiv_to_l_:
 25340                           	opt stack 0
 25341                           
 25342 ;; *************** function i1__div_to_l_ *****************
 25343 ;; Defined at:
 25344 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 25345 ;; Parameters:    Size  Location     Type
 25346 ;;  f1              3    3[COMRAM] unsigned long 
 25347 ;;  f2              3    6[COMRAM] unsigned long 
 25348 ;; Auto vars:     Size  Location     Type
 25349 ;;  _div_to_l_      4    9[COMRAM] unsigned long 
 25350 ;;  _div_to_l_      1   14[COMRAM] unsigned char 
 25351 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 25352 ;; Return value:  Size  Location     Type
 25353 ;;                  4    3[COMRAM] unsigned long 
 25354 ;; Registers used:
 25355 ;;		wreg, status,2, status,0
 25356 ;; Tracked objects:
 25357 ;;		On entry : 0/0
 25358 ;;		On exit  : 0/0
 25359 ;;		Unchanged: 0/0
 25360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25361 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25362 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25364 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25365 ;;Total ram usage:       12 bytes
 25366 ;; Hardware stack levels used:    1
 25367 ;; This function calls:
 25368 ;;		Nothing
 25369 ;; This function is called by:
 25370 ;;		i1_sprintf
 25371 ;; This function uses a non-reentrant model
 25372 ;;
 25373                           
 25374                           	psect	text84
 25375  005E5C                     __ptext84:
 25376                           	opt stack 0
 25377  005E5C                     i1__div_to_l_:
 25378                           	opt stack 20
 25379                           
 25380                           ;incstack = 0
 25381  005E5C  3406               	rlcf	i1__div_to_l_@f1+2,w,c
 25382  005E5E  3407               	rlcf	i1__div_to_l_@f1+3,w,c
 25383  005E60  6E0F               	movwf	i1__div_to_l_@exp1,c
 25384  005E62  500F               	movf	i1__div_to_l_@exp1,w,c
 25385  005E64  A4D8               	btfss	16344,2,c
 25386  005E66  D009               	goto	i1l1436
 25387  005E68  0E00               	movlw	0
 25388  005E6A  6E04               	movwf	?i1__div_to_l_,c
 25389  005E6C  0E00               	movlw	0
 25390  005E6E  6E05               	movwf	?i1__div_to_l_+1,c
 25391  005E70  0E00               	movlw	0
 25392  005E72  6E06               	movwf	?i1__div_to_l_+2,c
 25393  005E74  0E00               	movlw	0
 25394  005E76  6E07               	movwf	?i1__div_to_l_+3,c
 25395  005E78  0012               	return	
 25396  005E7A                     i1l1436:
 25397  005E7A  3409               	rlcf	i1__div_to_l_@f2+2,w,c
 25398  005E7C  340A               	rlcf	i1__div_to_l_@f2+3,w,c
 25399  005E7E  6E0E               	movwf	i1__div_to_l_@cntr,c
 25400  005E80  500E               	movf	i1__div_to_l_@cntr,w,c
 25401  005E82  A4D8               	btfss	16344,2,c
 25402  005E84  D009               	goto	i1l1438
 25403  005E86  0E00               	movlw	0
 25404  005E88  6E04               	movwf	?i1__div_to_l_,c
 25405  005E8A  0E00               	movlw	0
 25406  005E8C  6E05               	movwf	?i1__div_to_l_+1,c
 25407  005E8E  0E00               	movlw	0
 25408  005E90  6E06               	movwf	?i1__div_to_l_+2,c
 25409  005E92  0E00               	movlw	0
 25410  005E94  6E07               	movwf	?i1__div_to_l_+3,c
 25411  005E96  0012               	return	
 25412  005E98                     i1l1438:
 25413  005E98  8E06               	bsf	i1__div_to_l_@f1+2,7,c
 25414  005E9A  0EFF               	movlw	255
 25415  005E9C  1604               	andwf	i1__div_to_l_@f1,f,c
 25416  005E9E  0EFF               	movlw	255
 25417  005EA0  1605               	andwf	i1__div_to_l_@f1+1,f,c
 25418  005EA2  0EFF               	movlw	255
 25419  005EA4  1606               	andwf	i1__div_to_l_@f1+2,f,c
 25420  005EA6  0E00               	movlw	0
 25421  005EA8  1607               	andwf	i1__div_to_l_@f1+3,f,c
 25422  005EAA  8E09               	bsf	i1__div_to_l_@f2+2,7,c
 25423  005EAC  0EFF               	movlw	255
 25424  005EAE  1607               	andwf	i1__div_to_l_@f2,f,c
 25425  005EB0  0EFF               	movlw	255
 25426  005EB2  1608               	andwf	i1__div_to_l_@f2+1,f,c
 25427  005EB4  0EFF               	movlw	255
 25428  005EB6  1609               	andwf	i1__div_to_l_@f2+2,f,c
 25429  005EB8  0E00               	movlw	0
 25430  005EBA  160A               	andwf	i1__div_to_l_@f2+3,f,c
 25431  005EBC  0E00               	movlw	0
 25432  005EBE  6E0A               	movwf	i1__div_to_l_@quot,c
 25433  005EC0  0E00               	movlw	0
 25434  005EC2  6E0B               	movwf	i1__div_to_l_@quot+1,c
 25435  005EC4  0E00               	movlw	0
 25436  005EC6  6E0C               	movwf	i1__div_to_l_@quot+2,c
 25437  005EC8  0E00               	movlw	0
 25438  005ECA  6E0D               	movwf	i1__div_to_l_@quot+3,c
 25439  005ECC  0E7F               	movlw	127
 25440  005ECE  5E0F               	subwf	i1__div_to_l_@exp1,f,c
 25441  005ED0  500E               	movf	i1__div_to_l_@cntr,w,c
 25442  005ED2  0FA0               	addlw	160
 25443  005ED4  5E0F               	subwf	i1__div_to_l_@exp1,f,c
 25444  005ED6  0E20               	movlw	32
 25445  005ED8  6E0E               	movwf	i1__div_to_l_@cntr,c
 25446  005EDA  90D8               	bcf	16344,0,c
 25447  005EDC  360A               	rlcf	i1__div_to_l_@quot,f,c
 25448  005EDE  360B               	rlcf	i1__div_to_l_@quot+1,f,c
 25449  005EE0  360C               	rlcf	i1__div_to_l_@quot+2,f,c
 25450  005EE2  360D               	rlcf	i1__div_to_l_@quot+3,f,c
 25451  005EE4  5007               	movf	i1__div_to_l_@f2,w,c
 25452  005EE6  5C04               	subwf	i1__div_to_l_@f1,w,c
 25453  005EE8  5008               	movf	i1__div_to_l_@f2+1,w,c
 25454  005EEA  5805               	subwfb	i1__div_to_l_@f1+1,w,c
 25455  005EEC  5009               	movf	i1__div_to_l_@f2+2,w,c
 25456  005EEE  5806               	subwfb	i1__div_to_l_@f1+2,w,c
 25457  005EF0  500A               	movf	i1__div_to_l_@f2+3,w,c
 25458  005EF2  5807               	subwfb	i1__div_to_l_@f1+3,w,c
 25459  005EF4  A0D8               	btfss	16344,0,c
 25460  005EF6  D009               	goto	i1l1440
 25461  005EF8  5007               	movf	i1__div_to_l_@f2,w,c
 25462  005EFA  5E04               	subwf	i1__div_to_l_@f1,f,c
 25463  005EFC  5008               	movf	i1__div_to_l_@f2+1,w,c
 25464  005EFE  5A05               	subwfb	i1__div_to_l_@f1+1,f,c
 25465  005F00  5009               	movf	i1__div_to_l_@f2+2,w,c
 25466  005F02  5A06               	subwfb	i1__div_to_l_@f1+2,f,c
 25467  005F04  500A               	movf	i1__div_to_l_@f2+3,w,c
 25468  005F06  5A07               	subwfb	i1__div_to_l_@f1+3,f,c
 25469  005F08  800A               	bsf	i1__div_to_l_@quot,0,c
 25470  005F0A                     i1l1440:
 25471  005F0A  90D8               	bcf	16344,0,c
 25472  005F0C  3604               	rlcf	i1__div_to_l_@f1,f,c
 25473  005F0E  3605               	rlcf	i1__div_to_l_@f1+1,f,c
 25474  005F10  3606               	rlcf	i1__div_to_l_@f1+2,f,c
 25475  005F12  3607               	rlcf	i1__div_to_l_@f1+3,f,c
 25476  005F14  2E0E               	decfsz	i1__div_to_l_@cntr,f,c
 25477  005F16  D7E1               	goto	i1l1439
 25478  005F18  AE0F               	btfss	i1__div_to_l_@exp1,7,c
 25479  005F1A  D016               	goto	i1l1442
 25480  005F1C  500F               	movf	i1__div_to_l_@exp1,w,c
 25481  005F1E  0A80               	xorlw	128
 25482  005F20  0F9F               	addlw	159
 25483  005F22  B0D8               	btfsc	16344,0,c
 25484  005F24  D009               	goto	i1l1443
 25485  005F26  0E00               	movlw	0
 25486  005F28  6E04               	movwf	?i1__div_to_l_,c
 25487  005F2A  0E00               	movlw	0
 25488  005F2C  6E05               	movwf	?i1__div_to_l_+1,c
 25489  005F2E  0E00               	movlw	0
 25490  005F30  6E06               	movwf	?i1__div_to_l_+2,c
 25491  005F32  0E00               	movlw	0
 25492  005F34  6E07               	movwf	?i1__div_to_l_+3,c
 25493  005F36  0012               	return	
 25494  005F38                     i1l1443:
 25495  005F38  90D8               	bcf	16344,0,c
 25496  005F3A  320D               	rrcf	i1__div_to_l_@quot+3,f,c
 25497  005F3C  320C               	rrcf	i1__div_to_l_@quot+2,f,c
 25498  005F3E  320B               	rrcf	i1__div_to_l_@quot+1,f,c
 25499  005F40  320A               	rrcf	i1__div_to_l_@quot,f,c
 25500  005F42  3E0F               	incfsz	i1__div_to_l_@exp1,f,c
 25501  005F44  D7F9               	goto	i1l1443
 25502  005F46  D015               	goto	i1u1365_20
 25503  005F48                     i1l1442:
 25504  005F48  0E1F               	movlw	31
 25505  005F4A  640F               	cpfsgt	i1__div_to_l_@exp1,c
 25506  005F4C  D00F               	goto	i1l1448
 25507  005F4E  0E00               	movlw	0
 25508  005F50  6E04               	movwf	?i1__div_to_l_,c
 25509  005F52  0E00               	movlw	0
 25510  005F54  6E05               	movwf	?i1__div_to_l_+1,c
 25511  005F56  0E00               	movlw	0
 25512  005F58  6E06               	movwf	?i1__div_to_l_+2,c
 25513  005F5A  0E00               	movlw	0
 25514  005F5C  6E07               	movwf	?i1__div_to_l_+3,c
 25515  005F5E  0012               	return	
 25516  005F60  90D8               	bcf	16344,0,c
 25517  005F62  360A               	rlcf	i1__div_to_l_@quot,f,c
 25518  005F64  360B               	rlcf	i1__div_to_l_@quot+1,f,c
 25519  005F66  360C               	rlcf	i1__div_to_l_@quot+2,f,c
 25520  005F68  360D               	rlcf	i1__div_to_l_@quot+3,f,c
 25521  005F6A  060F               	decf	i1__div_to_l_@exp1,f,c
 25522  005F6C                     i1l1448:
 25523  005F6C  500F               	movf	i1__div_to_l_@exp1,w,c
 25524  005F6E  A4D8               	btfss	16344,2,c
 25525  005F70  D7F7               	goto	i1l1449
 25526  005F72                     i1u1365_20:
 25527  005F72  0060  F028  F004   	movff	i1__div_to_l_@quot,?i1__div_to_l_
 25528  005F78  0060  F02C  F005   	movff	i1__div_to_l_@quot+1,?i1__div_to_l_+1
 25529  005F7E  0060  F030  F006   	movff	i1__div_to_l_@quot+2,?i1__div_to_l_+2
 25530  005F84  0060  F034  F007   	movff	i1__div_to_l_@quot+3,?i1__div_to_l_+3
 25531  005F8A  0012               	return		;funcret
 25532  005F8C                     __end_ofi1__div_to_l_:
 25533                           	opt stack 0
 25534                           
 25535 ;; *************** function i1___lltoft *****************
 25536 ;; Defined at:
 25537 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 25538 ;; Parameters:    Size  Location     Type
 25539 ;;  c               4   38[COMRAM] unsigned long 
 25540 ;; Auto vars:     Size  Location     Type
 25541 ;;  __lltoft        1   46[COMRAM] unsigned char 
 25542 ;; Return value:  Size  Location     Type
 25543 ;;                  3   38[COMRAM] float 
 25544 ;; Registers used:
 25545 ;;		wreg, status,2, status,0, cstack
 25546 ;; Tracked objects:
 25547 ;;		On entry : 0/0
 25548 ;;		On exit  : 0/0
 25549 ;;		Unchanged: 0/0
 25550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25551 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25553 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25554 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25555 ;;Total ram usage:        9 bytes
 25556 ;; Hardware stack levels used:    1
 25557 ;; Hardware stack levels required when called:    1
 25558 ;; This function calls:
 25559 ;;		i1___ftpack
 25560 ;; This function is called by:
 25561 ;;		i1_sprintf
 25562 ;; This function uses a non-reentrant model
 25563 ;;
 25564                           
 25565                           	psect	text85
 25566  007A76                     __ptext85:
 25567                           	opt stack 0
 25568  007A76                     i1___lltoft:
 25569                           	opt stack 19
 25570                           
 25571                           ;incstack = 0
 25572  007A76  0E8E               	movlw	142
 25573  007A78  6E2F               	movwf	i1___lltoft@exp,c
 25574  007A7A  D006               	goto	i1l1647
 25575  007A7C  90D8               	bcf	16344,0,c
 25576  007A7E  322A               	rrcf	i1___lltoft@c+3,f,c
 25577  007A80  3229               	rrcf	i1___lltoft@c+2,f,c
 25578  007A82  3228               	rrcf	i1___lltoft@c+1,f,c
 25579  007A84  3227               	rrcf	i1___lltoft@c,f,c
 25580  007A86  2A2F               	incf	i1___lltoft@exp,f,c
 25581  007A88                     i1l1647:
 25582  007A88  0E00               	movlw	0
 25583  007A8A  1427               	andwf	i1___lltoft@c,w,c
 25584  007A8C  6E2B               	movwf	??i1___lltoft& (0+255),c
 25585  007A8E  0E00               	movlw	0
 25586  007A90  1428               	andwf	i1___lltoft@c+1,w,c
 25587  007A92  6E2C               	movwf	(??i1___lltoft+1)& (0+255),c
 25588  007A94  0E00               	movlw	0
 25589  007A96  1429               	andwf	i1___lltoft@c+2,w,c
 25590  007A98  6E2D               	movwf	(??i1___lltoft+2)& (0+255),c
 25591  007A9A  0EFF               	movlw	255
 25592  007A9C  142A               	andwf	i1___lltoft@c+3,w,c
 25593  007A9E  6E2E               	movwf	(??i1___lltoft+3)& (0+255),c
 25594  007AA0  502B               	movf	??i1___lltoft,w,c
 25595  007AA2  102C               	iorwf	??i1___lltoft+1,w,c
 25596  007AA4  102D               	iorwf	??i1___lltoft+2,w,c
 25597  007AA6  102E               	iorwf	??i1___lltoft+3,w,c
 25598  007AA8  A4D8               	btfss	16344,2,c
 25599  007AAA  D7E8               	goto	i1l1648
 25600  007AAC  0060  F09C  F004   	movff	i1___lltoft@c,i1___ftpack@arg
 25601  007AB2  0060  F0A0  F005   	movff	i1___lltoft@c+1,i1___ftpack@arg+1
 25602  007AB8  0060  F0A4  F006   	movff	i1___lltoft@c+2,i1___ftpack@arg+2
 25603  007ABE  0060  F0BC  F007   	movff	i1___lltoft@exp,i1___ftpack@exp
 25604  007AC4  0E00               	movlw	0
 25605  007AC6  6E08               	movwf	i1___ftpack@sign,c
 25606  007AC8  EC87  F037         	call	i1___ftpack	;wreg free
 25607  007ACC  0060  F010  F027   	movff	?i1___ftpack,?i1___lltoft
 25608  007AD2  0060  F014  F028   	movff	?i1___ftpack+1,?i1___lltoft+1
 25609  007AD8  0060  F018  F029   	movff	?i1___ftpack+2,?i1___lltoft+2
 25610  007ADE  0012               	return	
 25611  007AE0                     __end_ofi1___lltoft:
 25612                           	opt stack 0
 25613                           
 25614 ;; *************** function i1___llmod *****************
 25615 ;; Defined at:
 25616 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 25617 ;; Parameters:    Size  Location     Type
 25618 ;;  dividend        4   16[COMRAM] unsigned long 
 25619 ;;  divisor         4   20[COMRAM] unsigned long 
 25620 ;; Auto vars:     Size  Location     Type
 25621 ;;  __llmod         1   24[COMRAM] unsigned char 
 25622 ;; Return value:  Size  Location     Type
 25623 ;;                  4   16[COMRAM] unsigned long 
 25624 ;; Registers used:
 25625 ;;		wreg, status,2, status,0
 25626 ;; Tracked objects:
 25627 ;;		On entry : 0/0
 25628 ;;		On exit  : 0/0
 25629 ;;		Unchanged: 0/0
 25630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25631 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25632 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25634 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25635 ;;Total ram usage:        9 bytes
 25636 ;; Hardware stack levels used:    1
 25637 ;; This function calls:
 25638 ;;		Nothing
 25639 ;; This function is called by:
 25640 ;;		i1_sprintf
 25641 ;; This function uses a non-reentrant model
 25642 ;;
 25643                           
 25644                           	psect	text86
 25645  00799C                     __ptext86:
 25646                           	opt stack 0
 25647  00799C                     i1___llmod:
 25648                           	opt stack 20
 25649                           
 25650                           ;incstack = 0
 25651  00799C  5015               	movf	i1___llmod@divisor,w,c
 25652  00799E  1016               	iorwf	i1___llmod@divisor+1,w,c
 25653  0079A0  1017               	iorwf	i1___llmod@divisor+2,w,c
 25654  0079A2  1018               	iorwf	i1___llmod@divisor+3,w,c
 25655  0079A4  B4D8               	btfsc	16344,2,c
 25656  0079A6  D024               	goto	i1l1641
 25657  0079A8  0E01               	movlw	1
 25658  0079AA  6E19               	movwf	i1___llmod@counter,c
 25659  0079AC  D006               	goto	i1l1636
 25660  0079AE  90D8               	bcf	16344,0,c
 25661  0079B0  3615               	rlcf	i1___llmod@divisor,f,c
 25662  0079B2  3616               	rlcf	i1___llmod@divisor+1,f,c
 25663  0079B4  3617               	rlcf	i1___llmod@divisor+2,f,c
 25664  0079B6  3618               	rlcf	i1___llmod@divisor+3,f,c
 25665  0079B8  2A19               	incf	i1___llmod@counter,f,c
 25666  0079BA                     i1l1636:
 25667  0079BA  AE18               	btfss	i1___llmod@divisor+3,7,c
 25668  0079BC  D7F8               	goto	i1l1637
 25669  0079BE                     i1u1399_20:
 25670  0079BE  5015               	movf	i1___llmod@divisor,w,c
 25671  0079C0  5C11               	subwf	i1___llmod@dividend,w,c
 25672  0079C2  5016               	movf	i1___llmod@divisor+1,w,c
 25673  0079C4  5812               	subwfb	i1___llmod@dividend+1,w,c
 25674  0079C6  5017               	movf	i1___llmod@divisor+2,w,c
 25675  0079C8  5813               	subwfb	i1___llmod@dividend+2,w,c
 25676  0079CA  5018               	movf	i1___llmod@divisor+3,w,c
 25677  0079CC  5814               	subwfb	i1___llmod@dividend+3,w,c
 25678  0079CE  A0D8               	btfss	16344,0,c
 25679  0079D0  D008               	goto	i1l1640
 25680  0079D2  5015               	movf	i1___llmod@divisor,w,c
 25681  0079D4  5E11               	subwf	i1___llmod@dividend,f,c
 25682  0079D6  5016               	movf	i1___llmod@divisor+1,w,c
 25683  0079D8  5A12               	subwfb	i1___llmod@dividend+1,f,c
 25684  0079DA  5017               	movf	i1___llmod@divisor+2,w,c
 25685  0079DC  5A13               	subwfb	i1___llmod@dividend+2,f,c
 25686  0079DE  5018               	movf	i1___llmod@divisor+3,w,c
 25687  0079E0  5A14               	subwfb	i1___llmod@dividend+3,f,c
 25688  0079E2                     i1l1640:
 25689  0079E2  90D8               	bcf	16344,0,c
 25690  0079E4  3218               	rrcf	i1___llmod@divisor+3,f,c
 25691  0079E6  3217               	rrcf	i1___llmod@divisor+2,f,c
 25692  0079E8  3216               	rrcf	i1___llmod@divisor+1,f,c
 25693  0079EA  3215               	rrcf	i1___llmod@divisor,f,c
 25694  0079EC  2E19               	decfsz	i1___llmod@counter,f,c
 25695  0079EE  D7E7               	goto	i1u1399_20
 25696  0079F0                     i1l1641:
 25697  0079F0  0060  F044  F011   	movff	i1___llmod@dividend,?i1___llmod
 25698  0079F6  0060  F048  F012   	movff	i1___llmod@dividend+1,?i1___llmod+1
 25699  0079FC  0060  F04C  F013   	movff	i1___llmod@dividend+2,?i1___llmod+2
 25700  007A02  0060  F050  F014   	movff	i1___llmod@dividend+3,?i1___llmod+3
 25701  007A08  0012               	return		;funcret
 25702  007A0A                     __end_ofi1___llmod:
 25703                           	opt stack 0
 25704                           
 25705 ;; *************** function i1___lldiv *****************
 25706 ;; Defined at:
 25707 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 25708 ;; Parameters:    Size  Location     Type
 25709 ;;  dividend        4    3[COMRAM] unsigned long 
 25710 ;;  divisor         4    7[COMRAM] unsigned long 
 25711 ;; Auto vars:     Size  Location     Type
 25712 ;;  __lldiv         4   11[COMRAM] unsigned long 
 25713 ;;  __lldiv         1   15[COMRAM] unsigned char 
 25714 ;; Return value:  Size  Location     Type
 25715 ;;                  4    3[COMRAM] unsigned long 
 25716 ;; Registers used:
 25717 ;;		wreg, status,2, status,0
 25718 ;; Tracked objects:
 25719 ;;		On entry : 0/0
 25720 ;;		On exit  : 0/0
 25721 ;;		Unchanged: 0/0
 25722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25723 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25724 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25726 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25727 ;;Total ram usage:       13 bytes
 25728 ;; Hardware stack levels used:    1
 25729 ;; This function calls:
 25730 ;;		Nothing
 25731 ;; This function is called by:
 25732 ;;		i1_sprintf
 25733 ;; This function uses a non-reentrant model
 25734 ;;
 25735                           
 25736                           	psect	text87
 25737  00754E                     __ptext87:
 25738                           	opt stack 0
 25739  00754E                     i1___lldiv:
 25740                           	opt stack 20
 25741                           
 25742                           ;incstack = 0
 25743  00754E  0E00               	movlw	0
 25744  007550  6E0C               	movwf	i1___lldiv@quotient,c
 25745  007552  0E00               	movlw	0
 25746  007554  6E0D               	movwf	i1___lldiv@quotient+1,c
 25747  007556  0E00               	movlw	0
 25748  007558  6E0E               	movwf	i1___lldiv@quotient+2,c
 25749  00755A  0E00               	movlw	0
 25750  00755C  6E0F               	movwf	i1___lldiv@quotient+3,c
 25751  00755E  5008               	movf	i1___lldiv@divisor,w,c
 25752  007560  1009               	iorwf	i1___lldiv@divisor+1,w,c
 25753  007562  100A               	iorwf	i1___lldiv@divisor+2,w,c
 25754  007564  100B               	iorwf	i1___lldiv@divisor+3,w,c
 25755  007566  B4D8               	btfsc	16344,2,c
 25756  007568  D02A               	goto	i1l1631
 25757  00756A  0E01               	movlw	1
 25758  00756C  6E10               	movwf	i1___lldiv@counter,c
 25759  00756E  D006               	goto	i1l1626
 25760  007570  90D8               	bcf	16344,0,c
 25761  007572  3608               	rlcf	i1___lldiv@divisor,f,c
 25762  007574  3609               	rlcf	i1___lldiv@divisor+1,f,c
 25763  007576  360A               	rlcf	i1___lldiv@divisor+2,f,c
 25764  007578  360B               	rlcf	i1___lldiv@divisor+3,f,c
 25765  00757A  2A10               	incf	i1___lldiv@counter,f,c
 25766  00757C                     i1l1626:
 25767  00757C  AE0B               	btfss	i1___lldiv@divisor+3,7,c
 25768  00757E  D7F8               	goto	i1l1627
 25769  007580                     i1u1396_20:
 25770  007580  90D8               	bcf	16344,0,c
 25771  007582  360C               	rlcf	i1___lldiv@quotient,f,c
 25772  007584  360D               	rlcf	i1___lldiv@quotient+1,f,c
 25773  007586  360E               	rlcf	i1___lldiv@quotient+2,f,c
 25774  007588  360F               	rlcf	i1___lldiv@quotient+3,f,c
 25775  00758A  5008               	movf	i1___lldiv@divisor,w,c
 25776  00758C  5C04               	subwf	i1___lldiv@dividend,w,c
 25777  00758E  5009               	movf	i1___lldiv@divisor+1,w,c
 25778  007590  5805               	subwfb	i1___lldiv@dividend+1,w,c
 25779  007592  500A               	movf	i1___lldiv@divisor+2,w,c
 25780  007594  5806               	subwfb	i1___lldiv@dividend+2,w,c
 25781  007596  500B               	movf	i1___lldiv@divisor+3,w,c
 25782  007598  5807               	subwfb	i1___lldiv@dividend+3,w,c
 25783  00759A  A0D8               	btfss	16344,0,c
 25784  00759C  D009               	goto	i1l1630
 25785  00759E  5008               	movf	i1___lldiv@divisor,w,c
 25786  0075A0  5E04               	subwf	i1___lldiv@dividend,f,c
 25787  0075A2  5009               	movf	i1___lldiv@divisor+1,w,c
 25788  0075A4  5A05               	subwfb	i1___lldiv@dividend+1,f,c
 25789  0075A6  500A               	movf	i1___lldiv@divisor+2,w,c
 25790  0075A8  5A06               	subwfb	i1___lldiv@dividend+2,f,c
 25791  0075AA  500B               	movf	i1___lldiv@divisor+3,w,c
 25792  0075AC  5A07               	subwfb	i1___lldiv@dividend+3,f,c
 25793  0075AE  800C               	bsf	i1___lldiv@quotient,0,c
 25794  0075B0                     i1l1630:
 25795  0075B0  90D8               	bcf	16344,0,c
 25796  0075B2  320B               	rrcf	i1___lldiv@divisor+3,f,c
 25797  0075B4  320A               	rrcf	i1___lldiv@divisor+2,f,c
 25798  0075B6  3209               	rrcf	i1___lldiv@divisor+1,f,c
 25799  0075B8  3208               	rrcf	i1___lldiv@divisor,f,c
 25800  0075BA  2E10               	decfsz	i1___lldiv@counter,f,c
 25801  0075BC  D7E1               	goto	i1u1396_20
 25802  0075BE                     i1l1631:
 25803  0075BE  0060  F030  F004   	movff	i1___lldiv@quotient,?i1___lldiv
 25804  0075C4  0060  F034  F005   	movff	i1___lldiv@quotient+1,?i1___lldiv+1
 25805  0075CA  0060  F038  F006   	movff	i1___lldiv@quotient+2,?i1___lldiv+2
 25806  0075D0  0060  F03C  F007   	movff	i1___lldiv@quotient+3,?i1___lldiv+3
 25807  0075D6  0012               	return		;funcret
 25808  0075D8                     __end_ofi1___lldiv:
 25809                           	opt stack 0
 25810                           
 25811 ;; *************** function i1___fttol *****************
 25812 ;; Defined at:
 25813 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 25814 ;; Parameters:    Size  Location     Type
 25815 ;;  f1              3   23[COMRAM] float 
 25816 ;; Auto vars:     Size  Location     Type
 25817 ;;  __fttol         4   33[COMRAM] unsigned long 
 25818 ;;  __fttol         1   37[COMRAM] unsigned char 
 25819 ;;  __fttol         1   32[COMRAM] unsigned char 
 25820 ;; Return value:  Size  Location     Type
 25821 ;;                  4   23[COMRAM] long 
 25822 ;; Registers used:
 25823 ;;		wreg, status,2, status,0
 25824 ;; Tracked objects:
 25825 ;;		On entry : 0/0
 25826 ;;		On exit  : 0/0
 25827 ;;		Unchanged: 0/0
 25828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25829 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25830 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25831 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25832 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25833 ;;Total ram usage:       15 bytes
 25834 ;; Hardware stack levels used:    1
 25835 ;; This function calls:
 25836 ;;		Nothing
 25837 ;; This function is called by:
 25838 ;;		i1_sprintf
 25839 ;; This function uses a non-reentrant model
 25840 ;;
 25841                           
 25842                           	psect	text88
 25843  0063BE                     __ptext88:
 25844                           	opt stack 0
 25845  0063BE                     i1___fttol:
 25846                           	opt stack 20
 25847                           
 25848                           ;incstack = 0
 25849  0063BE  0060  F068  F01C   	movff	i1___fttol@f1+2,??i1___fttol
 25850  0063C4  6A1D               	clrf	(??i1___fttol+1)& (0+255),c
 25851  0063C6  6A1E               	clrf	(??i1___fttol+2)& (0+255),c
 25852  0063C8  3419               	rlcf	i1___fttol@f1+1,w,c
 25853  0063CA  361C               	rlcf	??i1___fttol& (0+255),f,c
 25854  0063CC  E301               	bnc	u1385_21
 25855  0063CE  801D               	bsf	(??i1___fttol+1)& (0+255),0,c
 25856  0063D0                     u1385_21:
 25857  0063D0  501C               	movf	??i1___fttol,w,c
 25858  0063D2  6E26               	movwf	i1___fttol@exp1,c
 25859  0063D4  5026               	movf	i1___fttol@exp1,w,c
 25860  0063D6  A4D8               	btfss	16344,2,c
 25861  0063D8  D009               	goto	i1l1585
 25862  0063DA  0E00               	movlw	0
 25863  0063DC  6E18               	movwf	?i1___fttol,c
 25864  0063DE  0E00               	movlw	0
 25865  0063E0  6E19               	movwf	?i1___fttol+1,c
 25866  0063E2  0E00               	movlw	0
 25867  0063E4  6E1A               	movwf	?i1___fttol+2,c
 25868  0063E6  0E00               	movlw	0
 25869  0063E8  6E1B               	movwf	?i1___fttol+3,c
 25870  0063EA  0012               	return	
 25871  0063EC                     i1l1585:
 25872  0063EC  0E17               	movlw	23
 25873  0063EE  6E1C               	movwf	??i1___fttol& (0+255),c
 25874  0063F0  0060  F060  F01D   	movff	i1___fttol@f1,??i1___fttol+1
 25875  0063F6  0060  F064  F01E   	movff	i1___fttol@f1+1,??i1___fttol+2
 25876  0063FC  0060  F068  F01F   	movff	i1___fttol@f1+2,??i1___fttol+3
 25877  006402  281C               	incf	??i1___fttol,w,c
 25878  006404  6E20               	movwf	(??i1___fttol+4)& (0+255),c
 25879  006406  D004               	goto	i1u1387_20
 25880  006408                     i1u1387_25:
 25881  006408  90D8               	bcf	16344,0,c
 25882  00640A  321F               	rrcf	??i1___fttol+3,f,c
 25883  00640C  321E               	rrcf	??i1___fttol+2,f,c
 25884  00640E  321D               	rrcf	??i1___fttol+1,f,c
 25885  006410                     i1u1387_20:
 25886  006410  2E20               	decfsz	(??i1___fttol+4)& (0+255),f,c
 25887  006412  D7FA               	goto	i1u1387_25
 25888  006414  501D               	movf	??i1___fttol+1,w,c
 25889  006416  6E21               	movwf	i1___fttol@sign1,c
 25890  006418  8E19               	bsf	i1___fttol@f1+1,7,c
 25891  00641A  0EFF               	movlw	255
 25892  00641C  1618               	andwf	i1___fttol@f1,f,c
 25893  00641E  0EFF               	movlw	255
 25894  006420  1619               	andwf	i1___fttol@f1+1,f,c
 25895  006422  0E00               	movlw	0
 25896  006424  161A               	andwf	i1___fttol@f1+2,f,c
 25897  006426  5018               	movf	i1___fttol@f1,w,c
 25898  006428  6E22               	movwf	i1___fttol@lval,c
 25899  00642A  5019               	movf	i1___fttol@f1+1,w,c
 25900  00642C  6E23               	movwf	i1___fttol@lval+1,c
 25901  00642E  501A               	movf	i1___fttol@f1+2,w,c
 25902  006430  6E24               	movwf	i1___fttol@lval+2,c
 25903  006432  6A25               	clrf	i1___fttol@lval+3,c
 25904  006434  0E8E               	movlw	142
 25905  006436  5E26               	subwf	i1___fttol@exp1,f,c
 25906  006438  AE26               	btfss	i1___fttol@exp1,7,c
 25907  00643A  D016               	goto	i1l1587
 25908  00643C  5026               	movf	i1___fttol@exp1,w,c
 25909  00643E  0A80               	xorlw	128
 25910  006440  0F8F               	addlw	143
 25911  006442  B0D8               	btfsc	16344,0,c
 25912  006444  D009               	goto	i1l1588
 25913  006446  0E00               	movlw	0
 25914  006448  6E18               	movwf	?i1___fttol,c
 25915  00644A  0E00               	movlw	0
 25916  00644C  6E19               	movwf	?i1___fttol+1,c
 25917  00644E  0E00               	movlw	0
 25918  006450  6E1A               	movwf	?i1___fttol+2,c
 25919  006452  0E00               	movlw	0
 25920  006454  6E1B               	movwf	?i1___fttol+3,c
 25921  006456  0012               	return	
 25922  006458                     i1l1588:
 25923  006458  90D8               	bcf	16344,0,c
 25924  00645A  3225               	rrcf	i1___fttol@lval+3,f,c
 25925  00645C  3224               	rrcf	i1___fttol@lval+2,f,c
 25926  00645E  3223               	rrcf	i1___fttol@lval+1,f,c
 25927  006460  3222               	rrcf	i1___fttol@lval,f,c
 25928  006462  3E26               	incfsz	i1___fttol@exp1,f,c
 25929  006464  D7F9               	goto	i1l1588
 25930  006466  D015               	goto	i1u1391_20
 25931  006468                     i1l1587:
 25932  006468  0E17               	movlw	23
 25933  00646A  6426               	cpfsgt	i1___fttol@exp1,c
 25934  00646C  D00F               	goto	i1l1593
 25935  00646E  0E00               	movlw	0
 25936  006470  6E18               	movwf	?i1___fttol,c
 25937  006472  0E00               	movlw	0
 25938  006474  6E19               	movwf	?i1___fttol+1,c
 25939  006476  0E00               	movlw	0
 25940  006478  6E1A               	movwf	?i1___fttol+2,c
 25941  00647A  0E00               	movlw	0
 25942  00647C  6E1B               	movwf	?i1___fttol+3,c
 25943  00647E  0012               	return	
 25944  006480  90D8               	bcf	16344,0,c
 25945  006482  3622               	rlcf	i1___fttol@lval,f,c
 25946  006484  3623               	rlcf	i1___fttol@lval+1,f,c
 25947  006486  3624               	rlcf	i1___fttol@lval+2,f,c
 25948  006488  3625               	rlcf	i1___fttol@lval+3,f,c
 25949  00648A  0626               	decf	i1___fttol@exp1,f,c
 25950  00648C                     i1l1593:
 25951  00648C  5026               	movf	i1___fttol@exp1,w,c
 25952  00648E  A4D8               	btfss	16344,2,c
 25953  006490  D7F7               	goto	i1l1594
 25954  006492                     i1u1391_20:
 25955  006492  5021               	movf	i1___fttol@sign1,w,c
 25956  006494  B4D8               	btfsc	16344,2,c
 25957  006496  D008               	goto	i1l1596
 25958  006498  1E25               	comf	i1___fttol@lval+3,f,c
 25959  00649A  1E24               	comf	i1___fttol@lval+2,f,c
 25960  00649C  1E23               	comf	i1___fttol@lval+1,f,c
 25961  00649E  6C22               	negf	i1___fttol@lval,c
 25962  0064A0  0E00               	movlw	0
 25963  0064A2  2223               	addwfc	i1___fttol@lval+1,f,c
 25964  0064A4  2224               	addwfc	i1___fttol@lval+2,f,c
 25965  0064A6  2225               	addwfc	i1___fttol@lval+3,f,c
 25966  0064A8                     i1l1596:
 25967  0064A8  0060  F088  F018   	movff	i1___fttol@lval,?i1___fttol
 25968  0064AE  0060  F08C  F019   	movff	i1___fttol@lval+1,?i1___fttol+1
 25969  0064B4  0060  F090  F01A   	movff	i1___fttol@lval+2,?i1___fttol+2
 25970  0064BA  0060  F094  F01B   	movff	i1___fttol@lval+3,?i1___fttol+3
 25971  0064C0  0012               	return	
 25972  0064C2                     __end_ofi1___fttol:
 25973                           	opt stack 0
 25974                           
 25975 ;; *************** function i1___ftsub *****************
 25976 ;; Defined at:
 25977 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 25978 ;; Parameters:    Size  Location     Type
 25979 ;;  f1              3    0[BANK0 ] float 
 25980 ;;  f2              3    3[BANK0 ] float 
 25981 ;; Auto vars:     Size  Location     Type
 25982 ;;		None
 25983 ;; Return value:  Size  Location     Type
 25984 ;;                  3    0[BANK0 ] float 
 25985 ;; Registers used:
 25986 ;;		wreg, status,2, status,0, cstack
 25987 ;; Tracked objects:
 25988 ;;		On entry : 0/0
 25989 ;;		On exit  : 0/0
 25990 ;;		Unchanged: 0/0
 25991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25992 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25995 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25996 ;;Total ram usage:        6 bytes
 25997 ;; Hardware stack levels used:    1
 25998 ;; Hardware stack levels required when called:    2
 25999 ;; This function calls:
 26000 ;;		i1___ftadd
 26001 ;; This function is called by:
 26002 ;;		i1_sprintf
 26003 ;; This function uses a non-reentrant model
 26004 ;;
 26005                           
 26006                           	psect	text89
 26007  007ED2                     __ptext89:
 26008                           	opt stack 0
 26009  007ED2                     i1___ftsub:
 26010                           	opt stack 18
 26011                           
 26012                           ;incstack = 0
 26013  007ED2  0100               	movlb	0	; () banked
 26014  007ED4  5163               	movf	i1___ftsub@f2& (0+255),w,b
 26015  007ED6  1164               	iorwf	(i1___ftsub@f2+1)& (0+255),w,b
 26016  007ED8  1165               	iorwf	(i1___ftsub@f2+2)& (0+255),w,b
 26017  007EDA  B4D8               	btfsc	16344,2,c
 26018  007EDC  D006               	goto	i1l1581
 26019                           
 26020                           ; BSR set to: 0
 26021  007EDE  0E00               	movlw	0
 26022  007EE0  1B63               	xorwf	i1___ftsub@f2& (0+255),f,b
 26023  007EE2  0E00               	movlw	0
 26024  007EE4  1B64               	xorwf	(i1___ftsub@f2+1)& (0+255),f,b
 26025  007EE6  0E80               	movlw	128
 26026  007EE8  1B65               	xorwf	(i1___ftsub@f2+2)& (0+255),f,b
 26027  007EEA                     i1l1581:
 26028                           
 26029                           ; BSR set to: 0
 26030                           
 26031                           ; BSR set to: 0
 26032  007EEA  0060  F180  F04C   	movff	i1___ftsub@f1,i1___ftadd@f1
 26033  007EF0  0060  F184  F04D   	movff	i1___ftsub@f1+1,i1___ftadd@f1+1
 26034  007EF6  0060  F188  F04E   	movff	i1___ftsub@f1+2,i1___ftadd@f1+2
 26035  007EFC  0060  F18C  F04F   	movff	i1___ftsub@f2,i1___ftadd@f2
 26036  007F02  0060  F190  F050   	movff	i1___ftsub@f2+1,i1___ftadd@f2+1
 26037  007F08  0060  F194  F051   	movff	i1___ftsub@f2+2,i1___ftadd@f2+2
 26038  007F0E  EC23  F02A         	call	i1___ftadd	;wreg free
 26039  007F12  0060  F130  F060   	movff	?i1___ftadd,?i1___ftsub
 26040  007F18  0060  F134  F061   	movff	?i1___ftadd+1,?i1___ftsub+1
 26041  007F1E  0060  F138  F062   	movff	?i1___ftadd+2,?i1___ftsub+2
 26042  007F24  0012               	return	
 26043  007F26                     __end_ofi1___ftsub:
 26044                           	opt stack 0
 26045                           
 26046 ;; *************** function i1___ftadd *****************
 26047 ;; Defined at:
 26048 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 26049 ;; Parameters:    Size  Location     Type
 26050 ;;  f1              3   75[COMRAM] float 
 26051 ;;  f2              3   78[COMRAM] float 
 26052 ;; Auto vars:     Size  Location     Type
 26053 ;;  __ftadd         1   86[COMRAM] unsigned char 
 26054 ;;  __ftadd         1   85[COMRAM] unsigned char 
 26055 ;;  __ftadd         1   84[COMRAM] unsigned char 
 26056 ;; Return value:  Size  Location     Type
 26057 ;;                  3   75[COMRAM] float 
 26058 ;; Registers used:
 26059 ;;		wreg, status,2, status,0, cstack
 26060 ;; Tracked objects:
 26061 ;;		On entry : 0/0
 26062 ;;		On exit  : 0/0
 26063 ;;		Unchanged: 0/0
 26064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26065 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26066 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26067 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26068 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26069 ;;Total ram usage:       12 bytes
 26070 ;; Hardware stack levels used:    1
 26071 ;; Hardware stack levels required when called:    1
 26072 ;; This function calls:
 26073 ;;		i1___ftpack
 26074 ;; This function is called by:
 26075 ;;		i1_sprintf
 26076 ;;		i1___ftsub
 26077 ;; This function uses a non-reentrant model
 26078 ;;
 26079                           
 26080                           	psect	text90
 26081  005446                     __ptext90:
 26082                           	opt stack 0
 26083  005446                     i1___ftadd:
 26084                           	opt stack 18
 26085                           
 26086                           ;incstack = 0
 26087  005446  0060  F138  F052   	movff	i1___ftadd@f1+2,??i1___ftadd
 26088  00544C  6A53               	clrf	(??i1___ftadd+1)& (0+255),c
 26089  00544E  6A54               	clrf	(??i1___ftadd+2)& (0+255),c
 26090  005450  344D               	rlcf	i1___ftadd@f1+1,w,c
 26091  005452  3652               	rlcf	??i1___ftadd& (0+255),f,c
 26092  005454  E301               	bnc	u1325_21
 26093  005456  8053               	bsf	(??i1___ftadd+1)& (0+255),0,c
 26094  005458                     u1325_21:
 26095  005458  5052               	movf	??i1___ftadd,w,c
 26096  00545A  6E57               	movwf	i1___ftadd@exp1,c
 26097  00545C  0060  F144  F052   	movff	i1___ftadd@f2+2,??i1___ftadd
 26098  005462  6A53               	clrf	(??i1___ftadd+1)& (0+255),c
 26099  005464  6A54               	clrf	(??i1___ftadd+2)& (0+255),c
 26100  005466  3450               	rlcf	i1___ftadd@f2+1,w,c
 26101  005468  3652               	rlcf	??i1___ftadd& (0+255),f,c
 26102  00546A  E301               	bnc	u1326_21
 26103  00546C  8053               	bsf	(??i1___ftadd+1)& (0+255),0,c
 26104  00546E                     u1326_21:
 26105  00546E  5052               	movf	??i1___ftadd,w,c
 26106  005470  6E56               	movwf	i1___ftadd@exp2,c
 26107  005472  5057               	movf	i1___ftadd@exp1,w,c
 26108  005474  B4D8               	btfsc	16344,2,c
 26109  005476  D00B               	goto	i1u1329_20
 26110  005478  5056               	movf	i1___ftadd@exp2,w,c
 26111  00547A  5C57               	subwf	i1___ftadd@exp1,w,c
 26112  00547C  B0D8               	btfsc	16344,0,c
 26113  00547E  D011               	goto	i1l1499
 26114  005480  5057               	movf	i1___ftadd@exp1,w,c
 26115  005482  0800               	sublw	0
 26116  005484  2456               	addwf	i1___ftadd@exp2,w,c
 26117  005486  6E52               	movwf	??i1___ftadd& (0+255),c
 26118  005488  0E18               	movlw	24
 26119  00548A  6452               	cpfsgt	??i1___ftadd,c
 26120  00548C  D00A               	goto	i1l1499
 26121  00548E                     i1u1329_20:
 26122  00548E  0060  F13C  F04C   	movff	i1___ftadd@f2,?i1___ftadd
 26123  005494  0060  F140  F04D   	movff	i1___ftadd@f2+1,?i1___ftadd+1
 26124  00549A  0060  F144  F04E   	movff	i1___ftadd@f2+2,?i1___ftadd+2
 26125  0054A0  0012               	return	
 26126  0054A2                     i1l1499:
 26127  0054A2  5056               	movf	i1___ftadd@exp2,w,c
 26128  0054A4  B4D8               	btfsc	16344,2,c
 26129  0054A6  D00B               	goto	i1u1332_20
 26130  0054A8  5057               	movf	i1___ftadd@exp1,w,c
 26131  0054AA  5C56               	subwf	i1___ftadd@exp2,w,c
 26132  0054AC  B0D8               	btfsc	16344,0,c
 26133  0054AE  D011               	goto	i1l1503
 26134  0054B0  5056               	movf	i1___ftadd@exp2,w,c
 26135  0054B2  0800               	sublw	0
 26136  0054B4  2457               	addwf	i1___ftadd@exp1,w,c
 26137  0054B6  6E52               	movwf	??i1___ftadd& (0+255),c
 26138  0054B8  0E18               	movlw	24
 26139  0054BA  6452               	cpfsgt	??i1___ftadd,c
 26140  0054BC  D00A               	goto	i1l1503
 26141  0054BE                     i1u1332_20:
 26142  0054BE  0060  F130  F04C   	movff	i1___ftadd@f1,?i1___ftadd
 26143  0054C4  0060  F134  F04D   	movff	i1___ftadd@f1+1,?i1___ftadd+1
 26144  0054CA  0060  F138  F04E   	movff	i1___ftadd@f1+2,?i1___ftadd+2
 26145  0054D0  0012               	return	
 26146  0054D2                     i1l1503:
 26147  0054D2  0E06               	movlw	6
 26148  0054D4  6E55               	movwf	i1___ftadd@sign,c
 26149  0054D6  BE4E               	btfsc	i1___ftadd@f1+2,7,c
 26150  0054D8  8E55               	bsf	i1___ftadd@sign,7,c
 26151  0054DA  BE51               	btfsc	i1___ftadd@f2+2,7,c
 26152  0054DC  8C55               	bsf	i1___ftadd@sign,6,c
 26153  0054DE  8E4D               	bsf	i1___ftadd@f1+1,7,c
 26154  0054E0  0EFF               	movlw	255
 26155  0054E2  164C               	andwf	i1___ftadd@f1,f,c
 26156  0054E4  0EFF               	movlw	255
 26157  0054E6  164D               	andwf	i1___ftadd@f1+1,f,c
 26158  0054E8  0E00               	movlw	0
 26159  0054EA  164E               	andwf	i1___ftadd@f1+2,f,c
 26160  0054EC  8E50               	bsf	i1___ftadd@f2+1,7,c
 26161  0054EE  0EFF               	movlw	255
 26162  0054F0  164F               	andwf	i1___ftadd@f2,f,c
 26163  0054F2  0EFF               	movlw	255
 26164  0054F4  1650               	andwf	i1___ftadd@f2+1,f,c
 26165  0054F6  0E00               	movlw	0
 26166  0054F8  1651               	andwf	i1___ftadd@f2+2,f,c
 26167  0054FA  5056               	movf	i1___ftadd@exp2,w,c
 26168  0054FC  5C57               	subwf	i1___ftadd@exp1,w,c
 26169  0054FE  B0D8               	btfsc	16344,0,c
 26170  005500  D01C               	goto	i1l1508
 26171  005502                     i1u1335_20:
 26172  005502  90D8               	bcf	16344,0,c
 26173  005504  364F               	rlcf	i1___ftadd@f2,f,c
 26174  005506  3650               	rlcf	i1___ftadd@f2+1,f,c
 26175  005508  3651               	rlcf	i1___ftadd@f2+2,f,c
 26176  00550A  0656               	decf	i1___ftadd@exp2,f,c
 26177  00550C  5057               	movf	i1___ftadd@exp1,w,c
 26178  00550E  1856               	xorwf	i1___ftadd@exp2,w,c
 26179  005510  B4D8               	btfsc	16344,2,c
 26180  005512  D00E               	goto	i1l1513
 26181  005514  0655               	decf	i1___ftadd@sign,f,c
 26182  005516  0060  F154  F052   	movff	i1___ftadd@sign,??i1___ftadd
 26183  00551C  0E07               	movlw	7
 26184  00551E  1652               	andwf	??i1___ftadd,f,c
 26185  005520  B4D8               	btfsc	16344,2,c
 26186  005522  D006               	goto	i1l1513
 26187  005524  D7EE               	goto	i1u1335_20
 26188  005526  90D8               	bcf	16344,0,c
 26189  005528  324E               	rrcf	i1___ftadd@f1+2,f,c
 26190  00552A  324D               	rrcf	i1___ftadd@f1+1,f,c
 26191  00552C  324C               	rrcf	i1___ftadd@f1,f,c
 26192  00552E  2A57               	incf	i1___ftadd@exp1,f,c
 26193  005530                     i1l1513:
 26194  005530  5056               	movf	i1___ftadd@exp2,w,c
 26195  005532  1857               	xorwf	i1___ftadd@exp1,w,c
 26196  005534  B4D8               	btfsc	16344,2,c
 26197  005536  D020               	goto	i1u1342_20
 26198  005538  D7F6               	goto	i1l1514
 26199  00553A                     i1l1508:
 26200  00553A  5057               	movf	i1___ftadd@exp1,w,c
 26201  00553C  5C56               	subwf	i1___ftadd@exp2,w,c
 26202  00553E  B0D8               	btfsc	16344,0,c
 26203  005540  D01B               	goto	i1u1342_20
 26204  005542                     i1u1339_20:
 26205  005542  90D8               	bcf	16344,0,c
 26206  005544  364C               	rlcf	i1___ftadd@f1,f,c
 26207  005546  364D               	rlcf	i1___ftadd@f1+1,f,c
 26208  005548  364E               	rlcf	i1___ftadd@f1+2,f,c
 26209  00554A  0657               	decf	i1___ftadd@exp1,f,c
 26210  00554C  5057               	movf	i1___ftadd@exp1,w,c
 26211  00554E  1856               	xorwf	i1___ftadd@exp2,w,c
 26212  005550  B4D8               	btfsc	16344,2,c
 26213  005552  D00E               	goto	i1l1522
 26214  005554  0655               	decf	i1___ftadd@sign,f,c
 26215  005556  0060  F154  F052   	movff	i1___ftadd@sign,??i1___ftadd
 26216  00555C  0E07               	movlw	7
 26217  00555E  1652               	andwf	??i1___ftadd,f,c
 26218  005560  B4D8               	btfsc	16344,2,c
 26219  005562  D006               	goto	i1l1522
 26220  005564  D7EE               	goto	i1u1339_20
 26221  005566  90D8               	bcf	16344,0,c
 26222  005568  3251               	rrcf	i1___ftadd@f2+2,f,c
 26223  00556A  3250               	rrcf	i1___ftadd@f2+1,f,c
 26224  00556C  324F               	rrcf	i1___ftadd@f2,f,c
 26225  00556E  2A56               	incf	i1___ftadd@exp2,f,c
 26226  005570                     i1l1522:
 26227  005570  5056               	movf	i1___ftadd@exp2,w,c
 26228  005572  1857               	xorwf	i1___ftadd@exp1,w,c
 26229  005574  A4D8               	btfss	16344,2,c
 26230  005576  D7F7               	goto	i1l1523
 26231  005578                     i1u1342_20:
 26232  005578  AE55               	btfss	i1___ftadd@sign,7,c
 26233  00557A  D00C               	goto	i1l1525
 26234  00557C  0EFF               	movlw	255
 26235  00557E  1A4C               	xorwf	i1___ftadd@f1,f,c
 26236  005580  0EFF               	movlw	255
 26237  005582  1A4D               	xorwf	i1___ftadd@f1+1,f,c
 26238  005584  0EFF               	movlw	255
 26239  005586  1A4E               	xorwf	i1___ftadd@f1+2,f,c
 26240  005588  0E01               	movlw	1
 26241  00558A  264C               	addwf	i1___ftadd@f1,f,c
 26242  00558C  0E00               	movlw	0
 26243  00558E  224D               	addwfc	i1___ftadd@f1+1,f,c
 26244  005590  0E00               	movlw	0
 26245  005592  224E               	addwfc	i1___ftadd@f1+2,f,c
 26246  005594                     i1l1525:
 26247  005594  AC55               	btfss	i1___ftadd@sign,6,c
 26248  005596  D00C               	goto	i1l1526
 26249  005598  0EFF               	movlw	255
 26250  00559A  1A4F               	xorwf	i1___ftadd@f2,f,c
 26251  00559C  0EFF               	movlw	255
 26252  00559E  1A50               	xorwf	i1___ftadd@f2+1,f,c
 26253  0055A0  0EFF               	movlw	255
 26254  0055A2  1A51               	xorwf	i1___ftadd@f2+2,f,c
 26255  0055A4  0E01               	movlw	1
 26256  0055A6  264F               	addwf	i1___ftadd@f2,f,c
 26257  0055A8  0E00               	movlw	0
 26258  0055AA  2250               	addwfc	i1___ftadd@f2+1,f,c
 26259  0055AC  0E00               	movlw	0
 26260  0055AE  2251               	addwfc	i1___ftadd@f2+2,f,c
 26261  0055B0                     i1l1526:
 26262  0055B0  0E00               	movlw	0
 26263  0055B2  6E55               	movwf	i1___ftadd@sign,c
 26264  0055B4  504C               	movf	i1___ftadd@f1,w,c
 26265  0055B6  264F               	addwf	i1___ftadd@f2,f,c
 26266  0055B8  504D               	movf	i1___ftadd@f1+1,w,c
 26267  0055BA  2250               	addwfc	i1___ftadd@f2+1,f,c
 26268  0055BC  504E               	movf	i1___ftadd@f1+2,w,c
 26269  0055BE  2251               	addwfc	i1___ftadd@f2+2,f,c
 26270  0055C0  AE51               	btfss	i1___ftadd@f2+2,7,c
 26271  0055C2  D00E               	goto	i1l1527
 26272  0055C4  0EFF               	movlw	255
 26273  0055C6  1A4F               	xorwf	i1___ftadd@f2,f,c
 26274  0055C8  0EFF               	movlw	255
 26275  0055CA  1A50               	xorwf	i1___ftadd@f2+1,f,c
 26276  0055CC  0EFF               	movlw	255
 26277  0055CE  1A51               	xorwf	i1___ftadd@f2+2,f,c
 26278  0055D0  0E01               	movlw	1
 26279  0055D2  264F               	addwf	i1___ftadd@f2,f,c
 26280  0055D4  0E00               	movlw	0
 26281  0055D6  2250               	addwfc	i1___ftadd@f2+1,f,c
 26282  0055D8  0E00               	movlw	0
 26283  0055DA  2251               	addwfc	i1___ftadd@f2+2,f,c
 26284  0055DC  0E01               	movlw	1
 26285  0055DE  6E55               	movwf	i1___ftadd@sign,c
 26286  0055E0                     i1l1527:
 26287  0055E0  0060  F13C  F004   	movff	i1___ftadd@f2,i1___ftpack@arg
 26288  0055E6  0060  F140  F005   	movff	i1___ftadd@f2+1,i1___ftpack@arg+1
 26289  0055EC  0060  F144  F006   	movff	i1___ftadd@f2+2,i1___ftpack@arg+2
 26290  0055F2  0060  F15C  F007   	movff	i1___ftadd@exp1,i1___ftpack@exp
 26291  0055F8  0060  F154  F008   	movff	i1___ftadd@sign,i1___ftpack@sign
 26292  0055FE  EC87  F037         	call	i1___ftpack	;wreg free
 26293  005602  0060  F010  F04C   	movff	?i1___ftpack,?i1___ftadd
 26294  005608  0060  F014  F04D   	movff	?i1___ftpack+1,?i1___ftadd+1
 26295  00560E  0060  F018  F04E   	movff	?i1___ftpack+2,?i1___ftadd+2
 26296  005614  0012               	return	
 26297  005616                     __end_ofi1___ftadd:
 26298                           	opt stack 0
 26299                           
 26300 ;; *************** function i1___ftneg *****************
 26301 ;; Defined at:
 26302 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 26303 ;; Parameters:    Size  Location     Type
 26304 ;;  f1              3   47[COMRAM] float 
 26305 ;; Auto vars:     Size  Location     Type
 26306 ;;		None
 26307 ;; Return value:  Size  Location     Type
 26308 ;;                  3   47[COMRAM] float 
 26309 ;; Registers used:
 26310 ;;		wreg, status,2, status,0
 26311 ;; Tracked objects:
 26312 ;;		On entry : 0/0
 26313 ;;		On exit  : 0/0
 26314 ;;		Unchanged: 0/0
 26315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26316 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26319 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26320 ;;Total ram usage:        3 bytes
 26321 ;; Hardware stack levels used:    1
 26322 ;; This function calls:
 26323 ;;		Nothing
 26324 ;; This function is called by:
 26325 ;;		i1_sprintf
 26326 ;; This function uses a non-reentrant model
 26327 ;;
 26328                           
 26329                           	psect	text91
 26330  008416                     __ptext91:
 26331                           	opt stack 0
 26332  008416                     i1___ftneg:
 26333                           	opt stack 20
 26334                           
 26335                           ;incstack = 0
 26336  008416  5030               	movf	i1___ftneg@f1,w,c
 26337  008418  1031               	iorwf	i1___ftneg@f1+1,w,c
 26338  00841A  1032               	iorwf	i1___ftneg@f1+2,w,c
 26339  00841C  B4D8               	btfsc	16344,2,c
 26340  00841E  D006               	goto	i1l1575
 26341  008420  0E00               	movlw	0
 26342  008422  1A30               	xorwf	i1___ftneg@f1,f,c
 26343  008424  0E00               	movlw	0
 26344  008426  1A31               	xorwf	i1___ftneg@f1+1,f,c
 26345  008428  0E80               	movlw	128
 26346  00842A  1A32               	xorwf	i1___ftneg@f1+2,f,c
 26347  00842C                     i1l1575:
 26348  00842C  0060  F0C0  F030   	movff	i1___ftneg@f1,?i1___ftneg
 26349  008432  0060  F0C4  F031   	movff	i1___ftneg@f1+1,?i1___ftneg+1
 26350  008438  0060  F0C8  F032   	movff	i1___ftneg@f1+2,?i1___ftneg+2
 26351  00843E  0012               	return		;funcret
 26352  008440                     __end_ofi1___ftneg:
 26353                           	opt stack 0
 26354                           
 26355 ;; *************** function i1___ftge *****************
 26356 ;; Defined at:
 26357 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 26358 ;; Parameters:    Size  Location     Type
 26359 ;;  ff1             3    0[BANK0 ] float 
 26360 ;;  ff2             3    3[BANK0 ] float 
 26361 ;; Auto vars:     Size  Location     Type
 26362 ;;		None
 26363 ;; Return value:  Size  Location     Type
 26364 ;;		None               void
 26365 ;; Registers used:
 26366 ;;		wreg, status,2, status,0
 26367 ;; Tracked objects:
 26368 ;;		On entry : 0/0
 26369 ;;		On exit  : 0/0
 26370 ;;		Unchanged: 0/0
 26371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26372 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26374 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26375 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26376 ;;Total ram usage:        9 bytes
 26377 ;; Hardware stack levels used:    1
 26378 ;; This function calls:
 26379 ;;		Nothing
 26380 ;; This function is called by:
 26381 ;;		i1_sprintf
 26382 ;; This function uses a non-reentrant model
 26383 ;;
 26384                           
 26385                           	psect	text92
 26386  007310                     __ptext92:
 26387                           	opt stack 0
 26388  007310                     i1___ftge:
 26389                           	opt stack 20
 26390                           
 26391                           ;incstack = 0
 26392  007310  0100               	movlb	0	; () banked
 26393  007312  AF62               	btfss	(i1___ftge@ff1+2)& (0+255),7,b
 26394  007314  D019               	goto	i1l1557
 26395                           
 26396                           ; BSR set to: 0
 26397  007316  0060  F180  F066   	movff	i1___ftge@ff1,??i1___ftge
 26398  00731C  0060  F184  F067   	movff	i1___ftge@ff1+1,??i1___ftge+1
 26399  007322  0060  F188  F068   	movff	i1___ftge@ff1+2,??i1___ftge+2
 26400  007328  1F66               	comf	??i1___ftge& (0+255),f,b
 26401  00732A  1F67               	comf	(??i1___ftge+1)& (0+255),f,b
 26402  00732C  1F68               	comf	(??i1___ftge+2)& (0+255),f,b
 26403  00732E  2B66               	incf	??i1___ftge& (0+255),f,b
 26404  007330  0E00               	movlw	0
 26405  007332  2367               	addwfc	(??i1___ftge+1)& (0+255),f,b
 26406  007334  2368               	addwfc	(??i1___ftge+2)& (0+255),f,b
 26407  007336  0E00               	movlw	0
 26408  007338  2566               	addwf	??i1___ftge& (0+255),w,b
 26409  00733A  6F60               	movwf	i1___ftge@ff1& (0+255),b
 26410  00733C  0E00               	movlw	0
 26411  00733E  2167               	addwfc	(??i1___ftge+1)& (0+255),w,b
 26412  007340  6F61               	movwf	(i1___ftge@ff1+1)& (0+255),b
 26413  007342  0E80               	movlw	128
 26414  007344  2168               	addwfc	(??i1___ftge+2)& (0+255),w,b
 26415  007346  6F62               	movwf	(i1___ftge@ff1+2)& (0+255),b
 26416  007348                     i1l1557:
 26417                           
 26418                           ; BSR set to: 0
 26419                           
 26420                           ; BSR set to: 0
 26421  007348  AF65               	btfss	(i1___ftge@ff2+2)& (0+255),7,b
 26422  00734A  D019               	goto	i1l1558
 26423                           
 26424                           ; BSR set to: 0
 26425  00734C  0060  F18C  F066   	movff	i1___ftge@ff2,??i1___ftge
 26426  007352  0060  F190  F067   	movff	i1___ftge@ff2+1,??i1___ftge+1
 26427  007358  0060  F194  F068   	movff	i1___ftge@ff2+2,??i1___ftge+2
 26428  00735E  1F66               	comf	??i1___ftge& (0+255),f,b
 26429  007360  1F67               	comf	(??i1___ftge+1)& (0+255),f,b
 26430  007362  1F68               	comf	(??i1___ftge+2)& (0+255),f,b
 26431  007364  2B66               	incf	??i1___ftge& (0+255),f,b
 26432  007366  0E00               	movlw	0
 26433  007368  2367               	addwfc	(??i1___ftge+1)& (0+255),f,b
 26434  00736A  2368               	addwfc	(??i1___ftge+2)& (0+255),f,b
 26435  00736C  0E00               	movlw	0
 26436  00736E  2566               	addwf	??i1___ftge& (0+255),w,b
 26437  007370  6F63               	movwf	i1___ftge@ff2& (0+255),b
 26438  007372  0E00               	movlw	0
 26439  007374  2167               	addwfc	(??i1___ftge+1)& (0+255),w,b
 26440  007376  6F64               	movwf	(i1___ftge@ff2+1)& (0+255),b
 26441  007378  0E80               	movlw	128
 26442  00737A  2168               	addwfc	(??i1___ftge+2)& (0+255),w,b
 26443  00737C  6F65               	movwf	(i1___ftge@ff2+2)& (0+255),b
 26444  00737E                     i1l1558:
 26445                           
 26446                           ; BSR set to: 0
 26447                           
 26448                           ; BSR set to: 0
 26449  00737E  0E00               	movlw	0
 26450  007380  1B60               	xorwf	i1___ftge@ff1& (0+255),f,b
 26451  007382  0E00               	movlw	0
 26452  007384  1B61               	xorwf	(i1___ftge@ff1+1)& (0+255),f,b
 26453  007386  0E80               	movlw	128
 26454  007388  1B62               	xorwf	(i1___ftge@ff1+2)& (0+255),f,b
 26455                           
 26456                           ; BSR set to: 0
 26457  00738A  0E00               	movlw	0
 26458  00738C  1B63               	xorwf	i1___ftge@ff2& (0+255),f,b
 26459  00738E  0E00               	movlw	0
 26460  007390  1B64               	xorwf	(i1___ftge@ff2+1)& (0+255),f,b
 26461  007392  0E80               	movlw	128
 26462  007394  1B65               	xorwf	(i1___ftge@ff2+2)& (0+255),f,b
 26463  007396  5163               	movf	i1___ftge@ff2& (0+255),w,b
 26464  007398  5D60               	subwf	i1___ftge@ff1& (0+255),w,b
 26465  00739A  5164               	movf	(i1___ftge@ff2+1)& (0+255),w,b
 26466  00739C  5961               	subwfb	(i1___ftge@ff1+1)& (0+255),w,b
 26467  00739E  5165               	movf	(i1___ftge@ff2+2)& (0+255),w,b
 26468  0073A0  5962               	subwfb	(i1___ftge@ff1+2)& (0+255),w,b
 26469  0073A2  B0D8               	btfsc	16344,0,c
 26470  0073A4  D002               	goto	i1l10229
 26471                           
 26472                           ; BSR set to: 0
 26473  0073A6  90D8               	bcf	16344,0,c
 26474  0073A8  0012               	return	
 26475  0073AA                     i1l10229:
 26476                           
 26477                           ; BSR set to: 0
 26478                           
 26479                           ; BSR set to: 0
 26480  0073AA  80D8               	bsf	16344,0,c
 26481                           
 26482                           ; BSR set to: 0
 26483  0073AC  0012               	return	
 26484  0073AE                     __end_ofi1___ftge:
 26485                           	opt stack 0
 26486                           
 26487 ;; *************** function i1___ftdiv *****************
 26488 ;; Defined at:
 26489 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 26490 ;; Parameters:    Size  Location     Type
 26491 ;;  f1              3   72[COMRAM] float 
 26492 ;;  f2              3   75[COMRAM] float 
 26493 ;; Auto vars:     Size  Location     Type
 26494 ;;  __ftdiv         3   82[COMRAM] float 
 26495 ;;  __ftdiv         1   86[COMRAM] unsigned char 
 26496 ;;  __ftdiv         1   85[COMRAM] unsigned char 
 26497 ;;  __ftdiv         1   81[COMRAM] unsigned char 
 26498 ;; Return value:  Size  Location     Type
 26499 ;;                  3   72[COMRAM] float 
 26500 ;; Registers used:
 26501 ;;		wreg, status,2, status,0, cstack
 26502 ;; Tracked objects:
 26503 ;;		On entry : 0/0
 26504 ;;		On exit  : 0/0
 26505 ;;		Unchanged: 0/0
 26506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26507 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26508 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26509 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26510 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26511 ;;Total ram usage:       15 bytes
 26512 ;; Hardware stack levels used:    1
 26513 ;; Hardware stack levels required when called:    1
 26514 ;; This function calls:
 26515 ;;		i1___ftpack
 26516 ;; This function is called by:
 26517 ;;		i1_sprintf
 26518 ;; This function uses a non-reentrant model
 26519 ;;
 26520                           
 26521                           	psect	text93
 26522  0066C2                     __ptext93:
 26523                           	opt stack 0
 26524  0066C2                     i1___ftdiv:
 26525                           	opt stack 19
 26526                           
 26527                           ; BSR set to: 0
 26528                           ;incstack = 0
 26529  0066C2  0060  F12C  F04F   	movff	i1___ftdiv@f1+2,??i1___ftdiv
 26530  0066C8  6A50               	clrf	(??i1___ftdiv+1)& (0+255),c
 26531  0066CA  6A51               	clrf	(??i1___ftdiv+2)& (0+255),c
 26532  0066CC  344A               	rlcf	i1___ftdiv@f1+1,w,c
 26533  0066CE  364F               	rlcf	??i1___ftdiv& (0+255),f,c
 26534  0066D0  E301               	bnc	u1366_21
 26535  0066D2  8050               	bsf	(??i1___ftdiv+1)& (0+255),0,c
 26536  0066D4                     u1366_21:
 26537  0066D4  504F               	movf	??i1___ftdiv,w,c
 26538  0066D6  6E56               	movwf	i1___ftdiv@exp,c
 26539  0066D8  5056               	movf	i1___ftdiv@exp,w,c
 26540  0066DA  A4D8               	btfss	16344,2,c
 26541  0066DC  D007               	goto	i1l1532
 26542  0066DE  0E00               	movlw	0
 26543  0066E0  6E49               	movwf	?i1___ftdiv,c
 26544  0066E2  0E00               	movlw	0
 26545  0066E4  6E4A               	movwf	?i1___ftdiv+1,c
 26546  0066E6  0E00               	movlw	0
 26547  0066E8  6E4B               	movwf	?i1___ftdiv+2,c
 26548  0066EA  0012               	return	
 26549  0066EC                     i1l1532:
 26550  0066EC  0060  F138  F04F   	movff	i1___ftdiv@f2+2,??i1___ftdiv
 26551  0066F2  6A50               	clrf	(??i1___ftdiv+1)& (0+255),c
 26552  0066F4  6A51               	clrf	(??i1___ftdiv+2)& (0+255),c
 26553  0066F6  344D               	rlcf	i1___ftdiv@f2+1,w,c
 26554  0066F8  364F               	rlcf	??i1___ftdiv& (0+255),f,c
 26555  0066FA  E301               	bnc	u1368_21
 26556  0066FC  8050               	bsf	(??i1___ftdiv+1)& (0+255),0,c
 26557  0066FE                     u1368_21:
 26558  0066FE  504F               	movf	??i1___ftdiv,w,c
 26559  006700  6E57               	movwf	i1___ftdiv@sign,c
 26560  006702  5057               	movf	i1___ftdiv@sign,w,c
 26561  006704  A4D8               	btfss	16344,2,c
 26562  006706  D007               	goto	i1l1534
 26563  006708  0E00               	movlw	0
 26564  00670A  6E49               	movwf	?i1___ftdiv,c
 26565  00670C  0E00               	movlw	0
 26566  00670E  6E4A               	movwf	?i1___ftdiv+1,c
 26567  006710  0E00               	movlw	0
 26568  006712  6E4B               	movwf	?i1___ftdiv+2,c
 26569  006714  0012               	return	
 26570  006716                     i1l1534:
 26571  006716  0E00               	movlw	0
 26572  006718  6E53               	movwf	i1___ftdiv@f3,c
 26573  00671A  0E00               	movlw	0
 26574  00671C  6E54               	movwf	i1___ftdiv@f3+1,c
 26575  00671E  0E00               	movlw	0
 26576  006720  6E55               	movwf	i1___ftdiv@f3+2,c
 26577  006722  5057               	movf	i1___ftdiv@sign,w,c
 26578  006724  0F89               	addlw	137
 26579  006726  5E56               	subwf	i1___ftdiv@exp,f,c
 26580  006728  0060  F12C  F057   	movff	i1___ftdiv@f1+2,i1___ftdiv@sign
 26581  00672E  504E               	movf	i1___ftdiv@f2+2,w,c
 26582  006730  1A57               	xorwf	i1___ftdiv@sign,f,c
 26583  006732  0E80               	movlw	128
 26584  006734  1657               	andwf	i1___ftdiv@sign,f,c
 26585  006736  8E4A               	bsf	i1___ftdiv@f1+1,7,c
 26586  006738  0EFF               	movlw	255
 26587  00673A  1649               	andwf	i1___ftdiv@f1,f,c
 26588  00673C  0EFF               	movlw	255
 26589  00673E  164A               	andwf	i1___ftdiv@f1+1,f,c
 26590  006740  0E00               	movlw	0
 26591  006742  164B               	andwf	i1___ftdiv@f1+2,f,c
 26592  006744  8E4D               	bsf	i1___ftdiv@f2+1,7,c
 26593  006746  0EFF               	movlw	255
 26594  006748  164C               	andwf	i1___ftdiv@f2,f,c
 26595  00674A  0EFF               	movlw	255
 26596  00674C  164D               	andwf	i1___ftdiv@f2+1,f,c
 26597  00674E  0E00               	movlw	0
 26598  006750  164E               	andwf	i1___ftdiv@f2+2,f,c
 26599  006752  0E18               	movlw	24
 26600  006754  6E52               	movwf	i1___ftdiv@cntr,c
 26601  006756  90D8               	bcf	16344,0,c
 26602  006758  3653               	rlcf	i1___ftdiv@f3,f,c
 26603  00675A  3654               	rlcf	i1___ftdiv@f3+1,f,c
 26604  00675C  3655               	rlcf	i1___ftdiv@f3+2,f,c
 26605  00675E  504C               	movf	i1___ftdiv@f2,w,c
 26606  006760  5C49               	subwf	i1___ftdiv@f1,w,c
 26607  006762  504D               	movf	i1___ftdiv@f2+1,w,c
 26608  006764  584A               	subwfb	i1___ftdiv@f1+1,w,c
 26609  006766  504E               	movf	i1___ftdiv@f2+2,w,c
 26610  006768  584B               	subwfb	i1___ftdiv@f1+2,w,c
 26611  00676A  A0D8               	btfss	16344,0,c
 26612  00676C  D007               	goto	i1l1536
 26613  00676E  504C               	movf	i1___ftdiv@f2,w,c
 26614  006770  5E49               	subwf	i1___ftdiv@f1,f,c
 26615  006772  504D               	movf	i1___ftdiv@f2+1,w,c
 26616  006774  5A4A               	subwfb	i1___ftdiv@f1+1,f,c
 26617  006776  504E               	movf	i1___ftdiv@f2+2,w,c
 26618  006778  5A4B               	subwfb	i1___ftdiv@f1+2,f,c
 26619  00677A  8053               	bsf	i1___ftdiv@f3,0,c
 26620  00677C                     i1l1536:
 26621  00677C  90D8               	bcf	16344,0,c
 26622  00677E  3649               	rlcf	i1___ftdiv@f1,f,c
 26623  006780  364A               	rlcf	i1___ftdiv@f1+1,f,c
 26624  006782  364B               	rlcf	i1___ftdiv@f1+2,f,c
 26625  006784  2E52               	decfsz	i1___ftdiv@cntr,f,c
 26626  006786  D7E7               	goto	i1l1535
 26627  006788  0060  F14C  F004   	movff	i1___ftdiv@f3,i1___ftpack@arg
 26628  00678E  0060  F150  F005   	movff	i1___ftdiv@f3+1,i1___ftpack@arg+1
 26629  006794  0060  F154  F006   	movff	i1___ftdiv@f3+2,i1___ftpack@arg+2
 26630  00679A  0060  F158  F007   	movff	i1___ftdiv@exp,i1___ftpack@exp
 26631  0067A0  0060  F15C  F008   	movff	i1___ftdiv@sign,i1___ftpack@sign
 26632  0067A6  EC87  F037         	call	i1___ftpack	;wreg free
 26633  0067AA  0060  F010  F049   	movff	?i1___ftpack,?i1___ftdiv
 26634  0067B0  0060  F014  F04A   	movff	?i1___ftpack+1,?i1___ftdiv+1
 26635  0067B6  0060  F018  F04B   	movff	?i1___ftpack+2,?i1___ftdiv+2
 26636  0067BC  0012               	return	
 26637  0067BE                     __end_ofi1___ftdiv:
 26638                           	opt stack 0
 26639                           
 26640 ;; *************** function i1___ftpack *****************
 26641 ;; Defined at:
 26642 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 26643 ;; Parameters:    Size  Location     Type
 26644 ;;  arg             3    3[COMRAM] unsigned um
 26645 ;;  exp             1    6[COMRAM] unsigned char 
 26646 ;;  sign            1    7[COMRAM] unsigned char 
 26647 ;; Auto vars:     Size  Location     Type
 26648 ;;		None
 26649 ;; Return value:  Size  Location     Type
 26650 ;;                  3    3[COMRAM] float 
 26651 ;; Registers used:
 26652 ;;		wreg, status,2, status,0
 26653 ;; Tracked objects:
 26654 ;;		On entry : 0/0
 26655 ;;		On exit  : 0/0
 26656 ;;		Unchanged: 0/0
 26657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26658 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26660 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26661 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26662 ;;Total ram usage:        8 bytes
 26663 ;; Hardware stack levels used:    1
 26664 ;; This function calls:
 26665 ;;		Nothing
 26666 ;; This function is called by:
 26667 ;;		i1___ftadd
 26668 ;;		i1___ftdiv
 26669 ;;		i1___ftmul
 26670 ;;		i1___lltoft
 26671 ;; This function uses a non-reentrant model
 26672 ;;
 26673                           
 26674                           	psect	text94
 26675  006F0E                     __ptext94:
 26676                           	opt stack 0
 26677  006F0E                     i1___ftpack:
 26678                           	opt stack 18
 26679                           
 26680                           ;incstack = 0
 26681  006F0E  5007               	movf	i1___ftpack@exp,w,c
 26682  006F10  B4D8               	btfsc	16344,2,c
 26683  006F12  D005               	goto	i1u1306_20
 26684  006F14  5004               	movf	i1___ftpack@arg,w,c
 26685  006F16  1005               	iorwf	i1___ftpack@arg+1,w,c
 26686  006F18  1006               	iorwf	i1___ftpack@arg+2,w,c
 26687  006F1A  A4D8               	btfss	16344,2,c
 26688  006F1C  D00C               	goto	i1l1468
 26689  006F1E                     i1u1306_20:
 26690  006F1E  0E00               	movlw	0
 26691  006F20  6E04               	movwf	?i1___ftpack,c
 26692  006F22  0E00               	movlw	0
 26693  006F24  6E05               	movwf	?i1___ftpack+1,c
 26694  006F26  0E00               	movlw	0
 26695  006F28  6E06               	movwf	?i1___ftpack+2,c
 26696  006F2A  0012               	return	
 26697  006F2C  2A07               	incf	i1___ftpack@exp,f,c
 26698  006F2E  90D8               	bcf	16344,0,c
 26699  006F30  3206               	rrcf	i1___ftpack@arg+2,f,c
 26700  006F32  3205               	rrcf	i1___ftpack@arg+1,f,c
 26701  006F34  3204               	rrcf	i1___ftpack@arg,f,c
 26702  006F36                     i1l1468:
 26703  006F36  0E00               	movlw	0
 26704  006F38  1404               	andwf	i1___ftpack@arg,w,c
 26705  006F3A  6E09               	movwf	??i1___ftpack& (0+255),c
 26706  006F3C  0E00               	movlw	0
 26707  006F3E  1405               	andwf	i1___ftpack@arg+1,w,c
 26708  006F40  6E0A               	movwf	(??i1___ftpack+1)& (0+255),c
 26709  006F42  0EFE               	movlw	254
 26710  006F44  1406               	andwf	i1___ftpack@arg+2,w,c
 26711  006F46  6E0B               	movwf	(??i1___ftpack+2)& (0+255),c
 26712  006F48  5009               	movf	??i1___ftpack,w,c
 26713  006F4A  100A               	iorwf	??i1___ftpack+1,w,c
 26714  006F4C  100B               	iorwf	??i1___ftpack+2,w,c
 26715  006F4E  B4D8               	btfsc	16344,2,c
 26716  006F50  D00C               	goto	i1l1471
 26717  006F52  D7EC               	goto	i1l1469
 26718  006F54  2A07               	incf	i1___ftpack@exp,f,c
 26719  006F56  0E01               	movlw	1
 26720  006F58  2604               	addwf	i1___ftpack@arg,f,c
 26721  006F5A  0E00               	movlw	0
 26722  006F5C  2205               	addwfc	i1___ftpack@arg+1,f,c
 26723  006F5E  0E00               	movlw	0
 26724  006F60  2206               	addwfc	i1___ftpack@arg+2,f,c
 26725  006F62  90D8               	bcf	16344,0,c
 26726  006F64  3206               	rrcf	i1___ftpack@arg+2,f,c
 26727  006F66  3205               	rrcf	i1___ftpack@arg+1,f,c
 26728  006F68  3204               	rrcf	i1___ftpack@arg,f,c
 26729  006F6A                     i1l1471:
 26730  006F6A  0E00               	movlw	0
 26731  006F6C  1404               	andwf	i1___ftpack@arg,w,c
 26732  006F6E  6E09               	movwf	??i1___ftpack& (0+255),c
 26733  006F70  0E00               	movlw	0
 26734  006F72  1405               	andwf	i1___ftpack@arg+1,w,c
 26735  006F74  6E0A               	movwf	(??i1___ftpack+1)& (0+255),c
 26736  006F76  0EFF               	movlw	255
 26737  006F78  1406               	andwf	i1___ftpack@arg+2,w,c
 26738  006F7A  6E0B               	movwf	(??i1___ftpack+2)& (0+255),c
 26739  006F7C  5009               	movf	??i1___ftpack,w,c
 26740  006F7E  100A               	iorwf	??i1___ftpack+1,w,c
 26741  006F80  100B               	iorwf	??i1___ftpack+2,w,c
 26742  006F82  B4D8               	btfsc	16344,2,c
 26743  006F84  D006               	goto	i1l1474
 26744  006F86  D7E6               	goto	i1l1472
 26745  006F88  0607               	decf	i1___ftpack@exp,f,c
 26746  006F8A  90D8               	bcf	16344,0,c
 26747  006F8C  3604               	rlcf	i1___ftpack@arg,f,c
 26748  006F8E  3605               	rlcf	i1___ftpack@arg+1,f,c
 26749  006F90  3606               	rlcf	i1___ftpack@arg+2,f,c
 26750  006F92                     i1l1474:
 26751  006F92  BE05               	btfsc	i1___ftpack@arg+1,7,c
 26752  006F94  D003               	goto	i1u1310_20
 26753  006F96  0E02               	movlw	2
 26754  006F98  6007               	cpfslt	i1___ftpack@exp,c
 26755  006F9A  D7F6               	goto	i1l1475
 26756  006F9C                     i1u1310_20:
 26757  006F9C  A007               	btfss	i1___ftpack@exp,0,c
 26758  006F9E  9E05               	bcf	i1___ftpack@arg+1,7,c
 26759  006FA0  90D8               	bcf	16344,0,c
 26760  006FA2  3207               	rrcf	i1___ftpack@exp,f,c
 26761  006FA4  5007               	movf	i1___ftpack@exp,w,c
 26762  006FA6  1206               	iorwf	i1___ftpack@arg+2,f,c
 26763  006FA8  5008               	movf	i1___ftpack@sign,w,c
 26764  006FAA  A4D8               	btfss	16344,2,c
 26765  006FAC  8E06               	bsf	i1___ftpack@arg+2,7,c
 26766  006FAE  0060  F010  F004   	movff	i1___ftpack@arg,?i1___ftpack
 26767  006FB4  0060  F014  F005   	movff	i1___ftpack@arg+1,?i1___ftpack+1
 26768  006FBA  0060  F018  F006   	movff	i1___ftpack@arg+2,?i1___ftpack+2
 26769  006FC0  0012               	return	
 26770  006FC2                     __end_ofi1___ftpack:
 26771                           	opt stack 0
 26772                           
 26773 ;; *************** function _Buffer_Escrita_COMM_Add_String *****************
 26774 ;; Defined at:
 26775 ;;		line 217 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 26776 ;; Parameters:    Size  Location     Type
 26777 ;;  dado            2    5[COMRAM] PTR unsigned char 
 26778 ;;		 -> STR_107(15), STR_103(15), STR_95(136), STR_94(24), 
 26779 ;;		 -> STR_93(44), STR_92(31), STR_91(30), STR_90(19), 
 26780 ;;		 -> STR_82(91), STR_76(28), STR_49(12), STR_48(27), 
 26781 ;;		 -> STR_39(70), STR_35(8), STR_34(25), STR_30(84), 
 26782 ;;		 -> STR_26(31), STR_17(22), STR_16(4), STR_15(12), 
 26783 ;;		 -> STR_14(12), append_Arquivo_Json@linhaArquivo(120), STR_9(51), STR_8(12), 
 26784 ;;		 -> cria_Arquivo@tamanho(15), STR_6(10), 
 26785 ;;  aguarda         2    7[COMRAM] short 
 26786 ;; Auto vars:     Size  Location     Type
 26787 ;;  i               2   11[COMRAM] int 
 26788 ;; Return value:  Size  Location     Type
 26789 ;;                  2    5[COMRAM] short 
 26790 ;; Registers used:
 26791 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26792 ;; Tracked objects:
 26793 ;;		On entry : 0/0
 26794 ;;		On exit  : 0/0
 26795 ;;		Unchanged: 0/0
 26796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26798 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26799 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26800 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26801 ;;Total ram usage:        8 bytes
 26802 ;; Hardware stack levels used:    1
 26803 ;; Hardware stack levels required when called:    1
 26804 ;; This function calls:
 26805 ;;		_Buffer_Escrita_COMM_Add_Char
 26806 ;;		i1_TransmiteBuffer_COMM
 26807 ;; This function is called by:
 26808 ;;		_cria_Arquivo
 26809 ;;		_inicia_Post
 26810 ;;		_Post
 26811 ;;		_Post2
 26812 ;;		_recebe
 26813 ;;		_recebeFRAMES
 26814 ;;		_GETMACAddr
 26815 ;;		_TASK_POST
 26816 ;;		_SOCKET_RX
 26817 ;;		_GETTask
 26818 ;;		_Envia_Post_Content
 26819 ;;		_SOCKET_QUERY
 26820 ;; This function uses a non-reentrant model
 26821 ;;
 26822                           
 26823                           	psect	text95
 26824  006CDC                     __ptext95:
 26825                           	opt stack 0
 26826  006CDC                     _Buffer_Escrita_COMM_Add_String:
 26827                           	opt stack 21
 26828                           
 26829                           ;Serial.c: 218: int i = 0;
 26830                           
 26831                           ;incstack = 0
 26832  006CDC  0E00               	movlw	0
 26833  006CDE  6E0D               	movwf	Buffer_Escrita_COMM_Add_String@i+1,c
 26834  006CE0  0E00               	movlw	0
 26835  006CE2  6E0C               	movwf	Buffer_Escrita_COMM_Add_String@i,c
 26836                           
 26837                           ;Serial.c: 220: ponteiro_COMM = 0;
 26838  006CE4  0E00               	movlw	0
 26839  006CE6  0102               	movlb	2	; () banked
 26840  006CE8  6FE4               	movwf	(_ponteiro_COMM+1)& (0+255),b
 26841  006CEA  0E00               	movlw	0
 26842  006CEC  6FE3               	movwf	_ponteiro_COMM& (0+255),b
 26843                           
 26844                           ;Serial.c: 221: ponteiro_escrita_COMM = 0;
 26845  006CEE  0E00               	movlw	0
 26846  006CF0  6FE8               	movwf	(_ponteiro_escrita_COMM+1)& (0+255),b
 26847  006CF2  0E00               	movlw	0
 26848  006CF4  6FE7               	movwf	_ponteiro_escrita_COMM& (0+255),b
 26849                           
 26850                           ;Serial.c: 222: buffer_escrita_comm[0] = 0x00;
 26851  006CF6  0E00               	movlw	0
 26852  006CF8  0107               	movlb	7	; () banked
 26853  006CFA  6F00               	movwf	_buffer_escrita_comm& (0+255),b
 26854                           
 26855                           ;Serial.c: 224: while (dado[i] != 0x00) {
 26856  006CFC  D027               	goto	i1l297
 26857  006CFE                     
 26858                           ;Serial.c: 225: if (i >= 150) return;
 26859                           
 26860                           ; BSR set to: 7
 26861  006CFE  BE0D               	btfsc	Buffer_Escrita_COMM_Add_String@i+1,7,c
 26862  006D00  D006               	goto	i1l299
 26863  006D02  500D               	movf	Buffer_Escrita_COMM_Add_String@i+1,w,c
 26864  006D04  E14C               	bnz	i1l300
 26865  006D06  0E96               	movlw	150
 26866  006D08  5C0C               	subwf	Buffer_Escrita_COMM_Add_String@i,w,c
 26867  006D0A  B0D8               	btfsc	16344,0,c
 26868  006D0C  0012               	return	
 26869  006D0E                     i1l299:
 26870                           
 26871                           ;Serial.c: 226: Buffer_Escrita_COMM_Add_Char(dado[i]);
 26872  006D0E  500C               	movf	Buffer_Escrita_COMM_Add_String@i,w,c
 26873  006D10  2406               	addwf	Buffer_Escrita_COMM_Add_String@dado,w,c
 26874  006D12  6E0A               	movwf	??_Buffer_Escrita_COMM_Add_String& (0+255),c
 26875  006D14  500D               	movf	Buffer_Escrita_COMM_Add_String@i+1,w,c
 26876  006D16  2007               	addwfc	Buffer_Escrita_COMM_Add_String@dado+1,w,c
 26877  006D18  6E0B               	movwf	(??_Buffer_Escrita_COMM_Add_String+1)& (0+255),c
 26878  006D1A  0060  F02B  FFF6   	movff	??_Buffer_Escrita_COMM_Add_String,16374
 26879  006D20  0060  F02F  FFF7   	movff	??_Buffer_Escrita_COMM_Add_String+1,16375
 26880  006D26  0E00               	movlw	low (__mediumconst shr (0+16))
 26881  006D28  6EF8               	movwf	16376,c
 26882  006D2A  0E0F               	movlw	(high __ramtop+-1)
 26883  006D2C  64F7               	cpfsgt	16375,c
 26884  006D2E  D003               	bra	i1u754_27
 26885  006D30  0008               	tblrd		*
 26886  006D32  50F5               	movf	16373,w,c
 26887  006D34  D007               	bra	i1u754_20
 26888  006D36                     i1u754_27:
 26889  006D36  006F FFDB FFE9     	movff	16374,16361
 26890  006D3C  006F FFDF FFEA     	movff	16375,16362
 26891  006D42  50EF               	movf	16367,w,c
 26892  006D44                     i1u754_20:
 26893  006D44  EC7F  F041         	call	_Buffer_Escrita_COMM_Add_Char
 26894                           
 26895                           ;Serial.c: 227: i++;
 26896  006D48  4A0C               	infsnz	Buffer_Escrita_COMM_Add_String@i,f,c
 26897  006D4A  2A0D               	incf	Buffer_Escrita_COMM_Add_String@i+1,f,c
 26898  006D4C                     i1l297:
 26899  006D4C  500C               	movf	Buffer_Escrita_COMM_Add_String@i,w,c
 26900  006D4E  2406               	addwf	Buffer_Escrita_COMM_Add_String@dado,w,c
 26901  006D50  6E0A               	movwf	??_Buffer_Escrita_COMM_Add_String& (0+255),c
 26902  006D52  500D               	movf	Buffer_Escrita_COMM_Add_String@i+1,w,c
 26903  006D54  2007               	addwfc	Buffer_Escrita_COMM_Add_String@dado+1,w,c
 26904  006D56  6E0B               	movwf	(??_Buffer_Escrita_COMM_Add_String+1)& (0+255),c
 26905  006D58  0060  F02B  FFF6   	movff	??_Buffer_Escrita_COMM_Add_String,16374
 26906  006D5E  0060  F02F  FFF7   	movff	??_Buffer_Escrita_COMM_Add_String+1,16375
 26907  006D64  0E00               	movlw	low (__mediumconst shr (0+16))
 26908  006D66  6EF8               	movwf	16376,c
 26909  006D68  0E0F               	movlw	(high __ramtop+-1)
 26910  006D6A  64F7               	cpfsgt	16375,c
 26911  006D6C  D003               	bra	i1u755_27
 26912  006D6E  0008               	tblrd		*
 26913  006D70  50F5               	movf	16373,w,c
 26914  006D72  D007               	bra	i1u755_20
 26915  006D74                     i1u755_27:
 26916  006D74  006F FFDB FFE9     	movff	16374,16361
 26917  006D7A  006F FFDF FFEA     	movff	16375,16362
 26918  006D80  50EF               	movf	16367,w,c
 26919  006D82                     i1u755_20:
 26920  006D82  0900               	iorlw	0
 26921  006D84  A4D8               	btfss	16344,2,c
 26922  006D86  D7BB               	goto	i1l298
 26923                           
 26924                           ;Serial.c: 228: }
 26925                           ;Serial.c: 229: if (aguarda){
 26926  006D88  5008               	movf	Buffer_Escrita_COMM_Add_String@aguarda,w,c
 26927  006D8A  1009               	iorwf	Buffer_Escrita_COMM_Add_String@aguarda+1,w,c
 26928  006D8C  B4D8               	btfsc	16344,2,c
 26929  006D8E  0012               	return	
 26930  006D90                     i1u757_20:
 26931                           
 26932                           ;Serial.c: 230: while (TransmiteBuffer_COMM() == 0);
 26933  006D90  ECBC  F03E         	call	i1_TransmiteBuffer_COMM	;wreg free
 26934  006D94  5004               	movf	?i1_TransmiteBuffer_COMM,w,c
 26935  006D96  1005               	iorwf	?i1_TransmiteBuffer_COMM+1,w,c
 26936  006D98  A4D8               	btfss	16344,2,c
 26937  006D9A  0012               	return	
 26938  006D9C  D7F9               	goto	i1u757_20
 26939  006D9E                     i1l300:
 26940  006D9E  0012               	return		;funcret
 26941  006DA0                     __end_of_Buffer_Escrita_COMM_Add_String:
 26942                           	opt stack 0
 26943                           
 26944 ;; *************** function i1_TransmiteBuffer_COMM *****************
 26945 ;; Defined at:
 26946 ;;		line 167 in file "I:/Projetos_Servidor/MIB_Iot_100/MIB_IOT_SW/MIB_IOT.X/Serial.c"
 26947 ;; Parameters:    Size  Location     Type
 26948 ;;		None
 26949 ;; Auto vars:     Size  Location     Type
 26950 ;;		None
 26951 ;; Return value:  Size  Location     Type
 26952 ;;                  2    3[COMRAM] int 
 26953 ;; Registers used:
 26954 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26955 ;; Tracked objects:
 26956 ;;		On entry : 0/0
 26957 ;;		On exit  : 0/0
 26958 ;;		Unchanged: 0/0
 26959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26960 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26963 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26964 ;;Total ram usage:        2 bytes
 26965 ;; Hardware stack levels used:    1
 26966 ;; This function calls:
 26967 ;;		Nothing
 26968 ;; This function is called by:
 26969 ;;		_Buffer_Escrita_COMM_Add_String
 26970 ;;		_SOCKET_RX
 26971 ;; This function uses a non-reentrant model
 26972 ;;
 26973                           
 26974                           	psect	text96
 26975  007D78                     __ptext96:
 26976                           	opt stack 0
 26977  007D78                     i1_TransmiteBuffer_COMM:
 26978                           	opt stack 21
 26979                           
 26980                           ;Serial.c: 168: if (U2ERRIRbits.TXMTIF == 0) return 0;
 26981                           
 26982                           ;incstack = 0
 26983  007D78  013D               	movlb	61	; () banked
 26984  007D7A  BFE1               	btfsc	225,7,b	;volatile
 26985  007D7C  D005               	goto	i1l267
 26986                           
 26987                           ; BSR set to: 61
 26988  007D7E  0E00               	movlw	0
 26989  007D80  6E05               	movwf	?i1_TransmiteBuffer_COMM+1,c
 26990  007D82  0E00               	movlw	0
 26991  007D84  6E04               	movwf	?i1_TransmiteBuffer_COMM,c
 26992                           
 26993                           ; BSR set to: 61
 26994  007D86  0012               	return	
 26995  007D88                     i1l267:
 26996                           
 26997                           ; BSR set to: 61
 26998                           ;Serial.c: 169: if (ponteiro_escrita_COMM < ponteiro_COMM) {
 26999                           
 27000                           ; BSR set to: 61
 27001  007D88  0102               	movlb	2	; () banked
 27002  007D8A  51E3               	movf	_ponteiro_COMM& (0+255),w,b
 27003  007D8C  5DE7               	subwf	_ponteiro_escrita_COMM& (0+255),w,b
 27004  007D8E  51E4               	movf	(_ponteiro_COMM+1)& (0+255),w,b
 27005  007D90  59E8               	subwfb	(_ponteiro_escrita_COMM+1)& (0+255),w,b
 27006  007D92  B0D8               	btfsc	16344,0,c
 27007  007D94  D011               	goto	i1l269
 27008                           
 27009                           ; BSR set to: 2
 27010                           ;Serial.c: 170: U2TXB = buffer_escrita_comm[ponteiro_escrita_COMM];
 27011  007D96  0E00               	movlw	low _buffer_escrita_comm
 27012  007D98  25E7               	addwf	_ponteiro_escrita_COMM& (0+255),w,b
 27013  007D9A  6ED9               	movwf	16345,c
 27014  007D9C  0E07               	movlw	high _buffer_escrita_comm
 27015  007D9E  21E8               	addwfc	(_ponteiro_escrita_COMM+1)& (0+255),w,b
 27016  007DA0  6EDA               	movwf	16346,c
 27017  007DA2  50DF               	movf	16351,w,c
 27018  007DA4  013D               	movlb	61	; () banked
 27019  007DA6  6FD2               	movwf	210,b	;volatile
 27020                           
 27021                           ; BSR set to: 61
 27022                           ;Serial.c: 171: ponteiro_escrita_COMM++;
 27023  007DA8  0102               	movlb	2	; () banked
 27024  007DAA  4BE7               	infsnz	_ponteiro_escrita_COMM& (0+255),f,b
 27025  007DAC  2BE8               	incf	(_ponteiro_escrita_COMM+1)& (0+255),f,b
 27026                           
 27027                           ; BSR set to: 2
 27028                           ;Serial.c: 172: return 0;
 27029  007DAE  0E00               	movlw	0
 27030  007DB0  6E05               	movwf	?i1_TransmiteBuffer_COMM+1,c
 27031  007DB2  0E00               	movlw	0
 27032  007DB4  6E04               	movwf	?i1_TransmiteBuffer_COMM,c
 27033                           
 27034                           ; BSR set to: 2
 27035                           ;Serial.c: 173: } else {
 27036                           
 27037                           ; BSR set to: 2
 27038  007DB6  0012               	return	
 27039  007DB8                     i1l269:
 27040                           
 27041                           ; BSR set to: 2
 27042                           ;Serial.c: 174: ponteiro_COMM = 0;
 27043                           
 27044                           ; BSR set to: 2
 27045  007DB8  0E00               	movlw	0
 27046  007DBA  6FE4               	movwf	(_ponteiro_COMM+1)& (0+255),b
 27047  007DBC  0E00               	movlw	0
 27048  007DBE  6FE3               	movwf	_ponteiro_COMM& (0+255),b
 27049                           
 27050                           ;Serial.c: 175: ponteiro_escrita_COMM = 0;
 27051  007DC0  0E00               	movlw	0
 27052  007DC2  6FE8               	movwf	(_ponteiro_escrita_COMM+1)& (0+255),b
 27053  007DC4  0E00               	movlw	0
 27054  007DC6  6FE7               	movwf	_ponteiro_escrita_COMM& (0+255),b
 27055                           
 27056                           ;Serial.c: 176: return 1;
 27057  007DC8  0E00               	movlw	0
 27058  007DCA  6E05               	movwf	?i1_TransmiteBuffer_COMM+1,c
 27059  007DCC  0E01               	movlw	1
 27060  007DCE  6E04               	movwf	?i1_TransmiteBuffer_COMM,c
 27061                           
 27062                           ; BSR set to: 2
 27063  007DD0  0012               	return	
 27064  007DD2                     __end_ofi1_TransmiteBuffer_COMM:
 27065                           	opt stack 0
 27066                           
 27067                           ;
 27068                           ; Interrupt Vector Table @ 0x8
 27069                           ;
 27070                           
 27071                           	psect	ivt0x8
 27072  000008                     __pivt0x8:
 27073                           	opt stack 0
 27074  000008                     ivt0x8_base:
 27075                           	opt stack 0
 27076                           
 27077                           ; Vector 0 : SWINT
 27078  000008  002B               	dw	ivt0x8_undefint shr (0+2)
 27079                           
 27080                           ; Vector 1 : HLVD
 27081  00000A  002B               	dw	ivt0x8_undefint shr (0+2)
 27082                           
 27083                           ; Vector 2 : OSF
 27084  00000C  002B               	dw	ivt0x8_undefint shr (0+2)
 27085                           
 27086                           ; Vector 3 : CSW
 27087  00000E  002B               	dw	ivt0x8_undefint shr (0+2)
 27088                           
 27089                           ; Vector 4 : NVM
 27090  000010  002B               	dw	ivt0x8_undefint shr (0+2)
 27091                           
 27092                           ; Vector 5 : SCAN
 27093  000012  002B               	dw	ivt0x8_undefint shr (0+2)
 27094                           
 27095                           ; Vector 6 : CRC
 27096  000014  002B               	dw	ivt0x8_undefint shr (0+2)
 27097                           
 27098                           ; Vector 7 : IOC
 27099  000016  002B               	dw	ivt0x8_undefint shr (0+2)
 27100                           
 27101                           ; Vector 8 : INT0
 27102  000018  002B               	dw	ivt0x8_undefint shr (0+2)
 27103                           
 27104                           ; Vector 9 : ZCD
 27105  00001A  002B               	dw	ivt0x8_undefint shr (0+2)
 27106                           
 27107                           ; Vector 10 : AD
 27108  00001C  002B               	dw	ivt0x8_undefint shr (0+2)
 27109                           
 27110                           ; Vector 11 : ADT
 27111  00001E  002B               	dw	ivt0x8_undefint shr (0+2)
 27112                           
 27113                           ; Vector 12 : CMP1
 27114  000020  002B               	dw	ivt0x8_undefint shr (0+2)
 27115                           
 27116                           ; Vector 13 : SMT1
 27117  000022  002B               	dw	ivt0x8_undefint shr (0+2)
 27118                           
 27119                           ; Vector 14 : SMT1PRA
 27120  000024  002B               	dw	ivt0x8_undefint shr (0+2)
 27121                           
 27122                           ; Vector 15 : SMT1PRW
 27123  000026  002B               	dw	ivt0x8_undefint shr (0+2)
 27124                           
 27125                           ; Vector 16 : DMA1SCNT
 27126  000028  002B               	dw	ivt0x8_undefint shr (0+2)
 27127                           
 27128                           ; Vector 17 : DMA1DCNT
 27129  00002A  002B               	dw	ivt0x8_undefint shr (0+2)
 27130                           
 27131                           ; Vector 18 : DMA1OR
 27132  00002C  002B               	dw	ivt0x8_undefint shr (0+2)
 27133                           
 27134                           ; Vector 19 : DMA1A
 27135  00002E  002B               	dw	ivt0x8_undefint shr (0+2)
 27136                           
 27137                           ; Vector 20 : SPI1RX
 27138  000030  002B               	dw	ivt0x8_undefint shr (0+2)
 27139                           
 27140                           ; Vector 21 : SPI1TX
 27141  000032  002B               	dw	ivt0x8_undefint shr (0+2)
 27142                           
 27143                           ; Vector 22 : SPI1
 27144  000034  002B               	dw	ivt0x8_undefint shr (0+2)
 27145                           
 27146                           ; Vector 23 : I2C1RX
 27147  000036  002B               	dw	ivt0x8_undefint shr (0+2)
 27148                           
 27149                           ; Vector 24 : I2C1TX
 27150  000038  002B               	dw	ivt0x8_undefint shr (0+2)
 27151                           
 27152                           ; Vector 25 : I2C1
 27153  00003A  002B               	dw	ivt0x8_undefint shr (0+2)
 27154                           
 27155                           ; Vector 26 : I2C1E
 27156  00003C  002B               	dw	ivt0x8_undefint shr (0+2)
 27157                           
 27158                           ; Vector 27 : U1RX
 27159  00003E  20FB               	dw	_Interrupt_USB_485 shr (0+2)
 27160                           
 27161                           ; Vector 28 : U1TX
 27162  000040  002B               	dw	ivt0x8_undefint shr (0+2)
 27163                           
 27164                           ; Vector 29 : U1E
 27165  000042  002B               	dw	ivt0x8_undefint shr (0+2)
 27166                           
 27167                           ; Vector 30 : U1
 27168  000044  002B               	dw	ivt0x8_undefint shr (0+2)
 27169                           
 27170                           ; Vector 31 : TMR0
 27171  000046  002B               	dw	ivt0x8_undefint shr (0+2)
 27172                           
 27173                           ; Vector 32 : TMR1
 27174  000048  002B               	dw	ivt0x8_undefint shr (0+2)
 27175                           
 27176                           ; Vector 33 : TMR1G
 27177  00004A  002B               	dw	ivt0x8_undefint shr (0+2)
 27178                           
 27179                           ; Vector 34 : TMR2
 27180  00004C  002B               	dw	ivt0x8_undefint shr (0+2)
 27181                           
 27182                           ; Vector 35 : CCP1
 27183  00004E  002B               	dw	ivt0x8_undefint shr (0+2)
 27184                           
 27185                           ; Vector 36 : Undefined
 27186  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 27187                           
 27188                           ; Vector 37 : NCO1
 27189  000052  002B               	dw	ivt0x8_undefint shr (0+2)
 27190                           
 27191                           ; Vector 38 : CWG1
 27192  000054  002B               	dw	ivt0x8_undefint shr (0+2)
 27193                           
 27194                           ; Vector 39 : CLC1
 27195  000056  002B               	dw	ivt0x8_undefint shr (0+2)
 27196                           
 27197                           ; Vector 40 : INT1
 27198  000058  002B               	dw	ivt0x8_undefint shr (0+2)
 27199                           
 27200                           ; Vector 41 : CMP2
 27201  00005A  002B               	dw	ivt0x8_undefint shr (0+2)
 27202                           
 27203                           ; Vector 42 : DMA2SCNT
 27204  00005C  002B               	dw	ivt0x8_undefint shr (0+2)
 27205                           
 27206                           ; Vector 43 : DMA2DCNT
 27207  00005E  002B               	dw	ivt0x8_undefint shr (0+2)
 27208                           
 27209                           ; Vector 44 : DMA2OR
 27210  000060  002B               	dw	ivt0x8_undefint shr (0+2)
 27211                           
 27212                           ; Vector 45 : DMA2A
 27213  000062  002B               	dw	ivt0x8_undefint shr (0+2)
 27214                           
 27215                           ; Vector 46 : I2C2RX
 27216  000064  002B               	dw	ivt0x8_undefint shr (0+2)
 27217                           
 27218                           ; Vector 47 : I2C2TX
 27219  000066  002B               	dw	ivt0x8_undefint shr (0+2)
 27220                           
 27221                           ; Vector 48 : I2C2
 27222  000068  002B               	dw	ivt0x8_undefint shr (0+2)
 27223                           
 27224                           ; Vector 49 : I2C2E
 27225  00006A  002B               	dw	ivt0x8_undefint shr (0+2)
 27226                           
 27227                           ; Vector 50 : U2RX
 27228  00006C  1F02               	dw	_Interrupt_WIFI_GSM shr (0+2)
 27229                           
 27230                           ; Vector 51 : U2TX
 27231  00006E  002B               	dw	ivt0x8_undefint shr (0+2)
 27232                           
 27233                           ; Vector 52 : U2E
 27234  000070  002B               	dw	ivt0x8_undefint shr (0+2)
 27235                           
 27236                           ; Vector 53 : U2
 27237  000072  002B               	dw	ivt0x8_undefint shr (0+2)
 27238                           
 27239                           ; Vector 54 : TMR3
 27240  000074  002B               	dw	ivt0x8_undefint shr (0+2)
 27241                           
 27242                           ; Vector 55 : TMR3G
 27243  000076  002B               	dw	ivt0x8_undefint shr (0+2)
 27244                           
 27245                           ; Vector 56 : TMR4
 27246  000078  002B               	dw	ivt0x8_undefint shr (0+2)
 27247                           
 27248                           ; Vector 57 : CCP2
 27249  00007A  002B               	dw	ivt0x8_undefint shr (0+2)
 27250                           
 27251                           ; Vector 58 : Undefined
 27252  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 27253                           
 27254                           ; Vector 59 : CWG2
 27255  00007E  002B               	dw	ivt0x8_undefint shr (0+2)
 27256                           
 27257                           ; Vector 60 : CLC2
 27258  000080  002B               	dw	ivt0x8_undefint shr (0+2)
 27259                           
 27260                           ; Vector 61 : INT2
 27261  000082  002B               	dw	ivt0x8_undefint shr (0+2)
 27262                           
 27263                           ; Vector 62 : Undefined
 27264  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 27265                           
 27266                           ; Vector 63 : Undefined
 27267  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 27268                           
 27269                           ; Vector 64 : Undefined
 27270  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 27271                           
 27272                           ; Vector 65 : Undefined
 27273  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 27274                           
 27275                           ; Vector 66 : Undefined
 27276  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 27277                           
 27278                           ; Vector 67 : Undefined
 27279  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 27280                           
 27281                           ; Vector 68 : Undefined
 27282  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 27283                           
 27284                           ; Vector 69 : Undefined
 27285  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 27286                           
 27287                           ; Vector 70 : TMR5
 27288  000094  002B               	dw	ivt0x8_undefint shr (0+2)
 27289                           
 27290                           ; Vector 71 : TMR5G
 27291  000096  002B               	dw	ivt0x8_undefint shr (0+2)
 27292                           
 27293                           ; Vector 72 : TMR6
 27294  000098  002B               	dw	ivt0x8_undefint shr (0+2)
 27295                           
 27296                           ; Vector 73 : CCP3
 27297  00009A  002B               	dw	ivt0x8_undefint shr (0+2)
 27298                           
 27299                           ; Vector 74 : CWG3
 27300  00009C  002B               	dw	ivt0x8_undefint shr (0+2)
 27301                           
 27302                           ; Vector 75 : CLC3
 27303  00009E  002B               	dw	ivt0x8_undefint shr (0+2)
 27304                           
 27305                           ; Vector 76 : Undefined
 27306  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 27307                           
 27308                           ; Vector 77 : Undefined
 27309  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 27310                           
 27311                           ; Vector 78 : Undefined
 27312  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 27313                           
 27314                           ; Vector 79 : Undefined
 27315  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 27316                           
 27317                           ; Vector 80 : CCP4
 27318  0000A8  002B               	dw	ivt0x8_undefint shr (0+2)
 27319                           
 27320                           ; Vector 81 : CLC4
 27321  0000AA  002B               	dw	ivt0x8_undefint shr (0+2)
 27322  0000AC                     ivt0x8_undefint:
 27323                           	opt stack 0
 27324  0000AC  00C0               	trap
 27325                           
 27326                           	psect	text97
 27327  000000                     __ptext97:
 27328                           	opt stack 0
 27329                           
 27330                           	psect	rparam


Data Sizes:
    Strings     1194
    Constant    150
    Data        63
    BSS         2656
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      92
    BANK0           160    119     158
    BANK1           256    148     256
    BANK2           256    176     237
    BANK3           256     24     244
    BANK4           256      0     240
    BANK5           256      0     220
    BANK6           256      0     150
    BANK7           256      0     150
    BANK8           256      0     120
    BANK9           256      0     150
    BANK10          256      0     150
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    append_Arquivo_Json$3004	PTR const unsigned char  size(2) Largest target is 1110
		 -> frameId(BIGRAM[1110]), 

    sp_Absolute function	PTR void  size(2) Largest target is 0

    sp_Aguarda_dado@ff	PTR void  size(2) Largest target is 0

    append_Arquivo_Json$2794	PTR const unsigned char  size(2) Largest target is 1110
		 -> frameId(BIGRAM[1110]), 

    Aguarda_dado@error	PTR unsigned char  size(2) Largest target is 7
		 -> STR_110(CODE[1]), STR_106(CODE[1]), STR_101(CODE[1]), STR_98(CODE[1]), 
		 -> STR_88(CODE[7]), STR_85(CODE[1]), STR_79(CODE[7]), STR_73(CODE[1]), 
		 -> STR_70(CODE[1]), STR_67(CODE[1]), STR_64(CODE[1]), STR_61(CODE[1]), 
		 -> STR_58(CODE[1]), STR_55(CODE[1]), STR_52(CODE[1]), STR_47(CODE[1]), 
		 -> STR_42(CODE[1]), STR_38(CODE[1]), STR_33(CODE[1]), STR_29(CODE[1]), 
		 -> STR_24(CODE[1]), STR_21(CODE[1]), STR_5(CODE[1]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 1110
		 -> STR_112(CODE[7]), sprintf@c(BANK2[1]), STR_109(CODE[2]), STR_108(CODE[7]), 
		 -> STR_105(CODE[3]), STR_104(CODE[10]), STR_100(CODE[2]), STR_99(CODE[4]), 
		 -> STR_97(CODE[2]), STR_96(CODE[7]), STR_87(CODE[7]), STR_86(CODE[7]), 
		 -> STR_84(CODE[3]), STR_83(CODE[2]), STR_78(CODE[2]), STR_77(CODE[17]), 
		 -> STR_72(CODE[2]), STR_71(CODE[3]), STR_69(CODE[3]), STR_68(CODE[6]), 
		 -> STR_66(CODE[2]), STR_65(CODE[7]), STR_63(CODE[2]), STR_62(CODE[6]), 
		 -> STR_60(CODE[2]), STR_59(CODE[7]), STR_57(CODE[3]), STR_56(CODE[8]), 
		 -> STR_54(CODE[2]), STR_53(CODE[10]), STR_51(CODE[2]), STR_50(CODE[19]), 
		 -> STR_46(CODE[2]), STR_45(CODE[2]), STR_41(CODE[2]), STR_40(CODE[2]), 
		 -> STR_37(CODE[2]), STR_36(CODE[10]), STR_32(CODE[3]), STR_31(CODE[3]), 
		 -> STR_28(CODE[3]), STR_27(CODE[3]), STR_23(CODE[2]), STR_22(CODE[2]), 
		 -> STR_20(CODE[2]), STR_19(CODE[3]), frameId(BIGRAM[1110]), append_Arquivo_Json@resultado(BANK1[6]), 
		 -> append_Arquivo_Json@virgula(BANK1[2]), STR_4(CODE[2]), STR_3(CODE[19]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 61
		 -> STR_111(CODE[12]), STR_81(CODE[3]), STR_80(CODE[3]), STR_13(CODE[61]), 
		 -> STR_12(CODE[6]), STR_11(CODE[5]), STR_10(CODE[6]), STR_7(CODE[5]), 
		 -> STR_2(CODE[13]), STR_1(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 120
		 -> Verifica_Analogica@valoradstr(BANK2[10]), append_Arquivo_Json@linhaArquivo(BANK1[120]), append_Arquivo_Json@resultado(BANK1[6]), append_Arquivo_Json@valorMem_Char(BANK1[10]), 
		 -> cria_Arquivo@tamanho(BANK0[15]), Aguarda_end(BANK3[10]), Aguarda_str(BANK3[20]), main@motivo(BANK3[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i1_sprintf(BANK0[2]), ?_sprintf(BANK2[2]), 

    Aguarda_dado@ff	PTR FTN()PTR void  size(2) Largest target is 3
		 -> SOCKET_RX(), WIND(), TASK_POST(), SETMACAddr(), 
		 -> Absolute function(), recebeSIZE(), recebeADDRESS(), recebeFUNCTIONCODE(), 
		 -> recebeNODEID(), recebeNETWORKID(), recebeFRAMEID(), recebeFRAMES(), 
		 -> recebe(), Post2(), nada(), Post(), 
		 -> inicia_Post(), GETMACAddr(), 

    Aguarda_dado@fim	PTR unsigned char  size(2) Largest target is 7
		 -> STR_109(CODE[2]), STR_105(CODE[3]), STR_100(CODE[2]), STR_97(CODE[2]), 
		 -> STR_87(CODE[7]), STR_84(CODE[3]), STR_78(CODE[2]), STR_72(CODE[2]), 
		 -> STR_69(CODE[3]), STR_66(CODE[2]), STR_63(CODE[2]), STR_60(CODE[2]), 
		 -> STR_57(CODE[3]), STR_54(CODE[2]), STR_51(CODE[2]), STR_46(CODE[2]), 
		 -> STR_41(CODE[2]), STR_37(CODE[2]), STR_32(CODE[3]), STR_28(CODE[3]), 
		 -> STR_23(CODE[2]), STR_20(CODE[2]), STR_4(CODE[2]), 

    Aguarda_dado@inicio	PTR unsigned char  size(2) Largest target is 19
		 -> STR_108(CODE[7]), STR_104(CODE[10]), STR_99(CODE[4]), STR_96(CODE[7]), 
		 -> STR_86(CODE[7]), STR_83(CODE[2]), STR_77(CODE[17]), STR_71(CODE[3]), 
		 -> STR_68(CODE[6]), STR_65(CODE[7]), STR_62(CODE[6]), STR_59(CODE[7]), 
		 -> STR_56(CODE[8]), STR_53(CODE[10]), STR_50(CODE[19]), STR_45(CODE[2]), 
		 -> STR_40(CODE[2]), STR_36(CODE[10]), STR_31(CODE[3]), STR_27(CODE[3]), 
		 -> STR_22(CODE[2]), STR_19(CODE[3]), STR_3(CODE[19]), 

    length@dado	PTR unsigned char  size(2) Largest target is 120
		 -> STR_16(CODE[4]), append_Arquivo_Json@linhaArquivo(BANK1[120]), STR_9(CODE[51]), 

    cria_Arquivo@dado	PTR unsigned char  size(2) Largest target is 120
		 -> STR_16(CODE[4]), append_Arquivo_Json@linhaArquivo(BANK1[120]), STR_9(CODE[51]), 

    cria_Arquivo@nome	PTR unsigned char  size(2) Largest target is 12
		 -> STR_15(CODE[12]), STR_14(CODE[12]), STR_8(CODE[12]), 

    Aguarda_Funcao	PTR FTN()void  size(2) Largest target is 3
		 -> SOCKET_RX(), WIND(), TASK_POST(), SETMACAddr(), 
		 -> Absolute function(), recebeSIZE(), recebeADDRESS(), recebeFUNCTIONCODE(), 
		 -> recebeNODEID(), recebeNETWORKID(), recebeFRAMEID(), recebeFRAMES(), 
		 -> recebe(), Post2(), nada(), Post(), 
		 -> inicia_Post(), GETMACAddr(), 

    Buffer_Escrita_COMM_Add_String@dado	PTR unsigned char  size(2) Largest target is 136
		 -> STR_107(CODE[15]), STR_103(CODE[15]), STR_95(CODE[136]), STR_94(CODE[24]), 
		 -> STR_93(CODE[44]), STR_92(CODE[31]), STR_91(CODE[30]), STR_90(CODE[19]), 
		 -> STR_82(CODE[91]), STR_76(CODE[28]), STR_49(CODE[12]), STR_48(CODE[27]), 
		 -> STR_39(CODE[70]), STR_35(CODE[8]), STR_34(CODE[25]), STR_30(CODE[84]), 
		 -> STR_26(CODE[31]), STR_17(CODE[22]), STR_16(CODE[4]), STR_15(CODE[12]), 
		 -> STR_14(CODE[12]), append_Arquivo_Json@linhaArquivo(BANK1[120]), STR_9(CODE[51]), STR_8(CODE[12]), 
		 -> cria_Arquivo@tamanho(BANK0[15]), STR_6(CODE[10]), 

    Buffer_Escrita_USB_Add_String@dado	PTR unsigned char  size(2) Largest target is 27
		 -> STR_102(CODE[2]), STR_89(CODE[17]), STR_75(CODE[5]), STR_74(CODE[11]), 
		 -> MACAddress(BANK3[18]), STR_44(CODE[25]), STR_43(CODE[27]), STR_25(CODE[10]), 
		 -> STR_18(CODE[24]), main@motivo(BANK3[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interrupt_USB_485 in COMRAM

    None.

Critical Paths under _Interrupt_WIFI_GSM in COMRAM

    _AguardaINT->_GETMACAddr
    _AguardaINT->_SOCKET_RX
    _AguardaINT->_recebeADDRESS
    _AguardaINT->_recebeFRAMES
    _AguardaINT->_recebeFUNCTIONCODE
    _AguardaINT->_recebeNETWORKID
    _AguardaINT->_recebeNODEID
    _AguardaINT->_recebeSIZE
    _Aguarda->_verificaERRO
    _append_Arquivo_Json->_cria_Arquivo
    i1_Buffer_Escrita_USB_Add_String->i1_TransmiteBuffer_USB
    i1_sprintf->i1___ftadd
    i1_sprintf->i1___ftdiv
    i1_scale->i1___ftmul
    i1_fround->i1___ftmul
    i1___wmul->i1___awdiv
    i1___ftmul->i1___ftneg
    i1___awdiv->i1___awmod
    i1___lltoft->i1___fttol
    i1___llmod->i1___lldiv
    i1___fttol->i1___wmul
    i1___ftsub->i1___ftadd
    i1___ftadd->i1_fround
    i1___ftneg->i1___lltoft
    i1___ftge->i1___ftadd
    i1___ftdiv->i1_scale
    _Buffer_Escrita_COMM_Add_String->i1_TransmiteBuffer_COMM

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt_USB_485 in BANK0

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK0

    _Interrupt_WIFI_GSM->_AguardaINT
    _AguardaINT->_SETMACAddr
    _recebeFRAMES->i1_Aguarda_dado
    _recebeSIZE->i1_Aguarda_dado
    _recebeNODEID->i1_Aguarda_dado
    _recebeNETWORKID->i1_Aguarda_dado
    _recebeFUNCTIONCODE->i1_Aguarda_dado
    _recebeFRAMEID->i1_Aguarda_dado
    _recebeADDRESS->i1_Aguarda_dado
    _recebe->i1_Aguarda_dado
    _WIND->i1_Aguarda_dado
    _TASK_POST->i1_Aguarda_dado
    _SOCKET_RX->i1_Aguarda_dado
    _SETMACAddr->_inicia_Post
    _inicia_Post->_append_Arquivo_Json
    _append_Arquivo_Json->_cria_Arquivo
    _cria_Arquivo->i1_sprintf
    _Post2->i1_Aguarda_dado
    _Post->i1_Aguarda_dado
    _GETMACAddr->i1_Aguarda_dado
    i1_Aguarda_dado->i1_sprintf
    i1_sprintf->i1___ftge

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt_USB_485 in BANK1

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK1

    _inicia_Post->_append_Arquivo_Json

Critical Paths under _main in BANK2

    _main->_Verifica_Analogica
    _Verifica_Analogica->_sprintf
    _ajusta_escala->_Calcula_Fator_m
    _Calcula_Fator_m->___ftdiv
    _Converte_Escala->___altoft
    ___awtoft->___ftpack
    ___altoft->___fttol
    _Buffer_Escrita_USB_Add_String->_TransmiteBuffer_USB
    _Aguarda_dado->_sprintf
    _sprintf->___ftge
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___fttol
    ___llmod->___lldiv
    ___fttol->___ftadd
    ___ftsub->___lltoft
    ___ftadd->_fround
    ___ftneg->___lltoft
    ___ftge->___ftneg
    ___ftdiv->_scale
    _Abre_Porta_COMM->_Calcula_BaudRate
    _Abre_Porta_1->_Calcula_BaudRate
    _Calcula_BaudRate->___aldiv

Critical Paths under _Interrupt_USB_485 in BANK2

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt_USB_485 in BANK3

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt_USB_485 in BANK4

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt_USB_485 in BANK5

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt_USB_485 in BANK6

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt_USB_485 in BANK7

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt_USB_485 in BANK8

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt_USB_485 in BANK9

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt_USB_485 in BANK10

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt_USB_485 in BANK11

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt_USB_485 in BANK12

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt_USB_485 in BANK13

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt_USB_485 in BANK14

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt_USB_485 in BANK15

    None.

Critical Paths under _Interrupt_WIFI_GSM in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0  341222
                                            174 BANK2      2     2      0
                                              0 BANK3     24    24      0
                       _Abre_Porta_1
                    _Abre_Porta_COMM
                       _Aguarda_dado
      _Buffer_Escrita_USB_Add_String
                    _Calcula_Fator_m
                     _InicializaWifi
               _TransmiteBuffer_COMM
                _TransmiteBuffer_USB
                 _Verifica_Analogica
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Verifica_Analogica                                  14    14      0  130406
                                            160 BANK2     14    14      0
                    _Converte_Escala
                            ___lldiv
                      _ajusta_escala
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _ajusta_escala                                        3     1      2   10647
                                             70 BANK2      3     1      2
                    _Calcula_Fator_m
 ---------------------------------------------------------------------------------
 (3) _Calcula_Fator_m                                      8     8      0    9937
                                             62 BANK2      8     8      0
                           ___awtoft
                            ___ftdiv
 ---------------------------------------------------------------------------------
 (2) _Converte_Escala                                      4     4      0   23843
                                             87 BANK2      4     4      0
                           ___altoft
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    4676
                                             13 BANK2      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    3307
                                             77 BANK2     10     6      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _TransmiteBuffer_COMM                                 2     0      2       0
                                              5 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _InicializaWifi                                       1     1      0       0
                                              5 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buffer_Escrita_USB_Add_String                        8     4      4    1643
                                              7 BANK2      8     4      4
        _Buffer_Escrita_USB_Add_Char
                _TransmiteBuffer_USB
 ---------------------------------------------------------------------------------
 (1) _TransmiteBuffer_USB                                  2     0      2       0
                                              5 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Buffer_Escrita_USB_Add_Char                          1     1      0      31
                                              5 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Aguarda_dado                                         8     0      8   99325
                                            160 BANK2      8     0      8
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             63    52     11   93472
                                             98 BANK2     62    51     11
                            ___awdiv
                            ___awmod
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                7     4      3   17236
                                             40 BANK2      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                              5 BANK2      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              10     7      3   16957
                                             40 BANK2     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    4348
                                             19 BANK2      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    7601
                                             25 BANK2     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    2233
                                              5 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2425
                                             11 BANK2      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     634
                                              5 BANK2     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     904
                                              5 BANK2     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3385
                                             77 BANK2      9     5      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1672
                                             18 BANK2      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1861
                                              5 BANK2     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4    1541
                                             62 BANK2     15    11      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    7134
                                             86 BANK2      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    6718
                                             50 BANK2     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     605
                                             86 BANK2      3     0      3
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     918
                                             89 BANK2      9     3      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    5193
                                             47 BANK2     15     9      6
                           ___ftpack
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3013
                                              5 BANK2      8     3      5
 ---------------------------------------------------------------------------------
 (1) _Abre_Porta_COMM                                      8     4      4    2798
                                             27 BANK2      8     4      4
                   _Calcula_BaudRate
                            ___aldiv
                           _lock_PPS
                         _unLock_PPS
 ---------------------------------------------------------------------------------
 (1) _Abre_Porta_1                                        10     4      6    2950
                                             27 BANK2     10     4      6
                   _Calcula_BaudRate
                            ___aldiv
                           _lock_PPS
                         _unLock_PPS
 ---------------------------------------------------------------------------------
 (2) _unLock_PPS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lock_PPS                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Calcula_BaudRate                                     8     4      4    1447
                                             19 BANK2      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    1165
                                              5 BANK2     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Interrupt_USB_485                                    2     2      0      67
                                              1 COMRAM     2     2      0
       _Buffer_Escrita_COMM_Add_Char
        _Buffer_Leitura_USB_Add_Char
                             _Recebe
 ---------------------------------------------------------------------------------
 (7) _Recebe                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Buffer_Leitura_USB_Add_Char                          1     1      0       0
 ---------------------------------------------------------------------------------
 (10) _Buffer_Escrita_COMM_Add_Char                        1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Interrupt_WIFI_GSM                                   6     6      0 1234865
                                            118 BANK0      1     1      0
                                              0 BANK2      5     5      0
                         _AguardaINT
                        _Recebe_COMM
      i1_Buffer_Escrita_USB_Add_Char
 ---------------------------------------------------------------------------------
 (7) _Recebe_COMM                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _AguardaINT                                           3     3      0 1234769
                                            115 BANK0      3     3      0
                   Absolute function *
                         _GETMACAddr *
                               _Post *
                              _Post2 *
                         _SETMACAddr *
                          _SOCKET_RX *
                          _TASK_POST *
                               _WIND *
                        _inicia_Post *
                               _nada *
                             _recebe *
                      _recebeADDRESS *
                      _recebeFRAMEID *
                       _recebeFRAMES *
                 _recebeFUNCTIONCODE *
                    _recebeNETWORKID *
                       _recebeNODEID *
                         _recebeSIZE *
                       _verificaERRO
 ---------------------------------------------------------------------------------
 (8) _recebeFRAMES                                         2     2      0  325784
                                             87 COMRAM     2     2      0
                            _Aguarda
     _Buffer_Escrita_COMM_Add_String
                      _recebeADDRESS
                      _recebeFRAMEID
                 _recebeFUNCTIONCODE
                    _recebeNETWORKID
                       _recebeNODEID
                         _recebeSIZE
                     i1_Aguarda_dado
    i1_Buffer_Escrita_USB_Add_String
 ---------------------------------------------------------------------------------
 (8) _recebeSIZE                                           2     2      0   45629
                                             87 COMRAM     2     2      0
                     i1_Aguarda_dado
 ---------------------------------------------------------------------------------
 (8) _recebeNODEID                                         2     2      0   45629
                                             87 COMRAM     2     2      0
                     i1_Aguarda_dado
 ---------------------------------------------------------------------------------
 (8) _recebeNETWORKID                                      6     6      0   47461
                                             87 COMRAM     2     2      0
                                             94 BANK0      4     4      0
                     i1_Aguarda_dado
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) _recebeFUNCTIONCODE                                   2     2      0   45629
                                             87 COMRAM     2     2      0
                     i1_Aguarda_dado
 ---------------------------------------------------------------------------------
 (9) _recebeFRAMEID                                        6     6      0   45629
                                             94 BANK0      6     6      0
                     i1_Aguarda_dado
 ---------------------------------------------------------------------------------
 (9) _recebeADDRESS                                        2     2      0   45629
                                             87 COMRAM     2     2      0
                     i1_Aguarda_dado
 ---------------------------------------------------------------------------------
 (9) _Aguarda                                              5     3      2     226
                                             11 COMRAM     5     3      2
                       _verificaERRO
                   _verificaFimFrame
 ---------------------------------------------------------------------------------
 (10) _verificaFimFrame                                    5     5      0      46
                                              3 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (8) _verificaERRO                                         8     8      0      69
                                              3 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (8) _recebe                                               0     0      0   49129
     _Buffer_Escrita_COMM_Add_String
                     i1_Aguarda_dado
 ---------------------------------------------------------------------------------
 (8) _nada                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _WIND                                                 0     0      0   46412
                     i1_Aguarda_dado
    i1_Buffer_Escrita_USB_Add_String
 ---------------------------------------------------------------------------------
 (8) _TASK_POST                                            0     0      0   49129
     _Buffer_Escrita_COMM_Add_String
                     i1_Aguarda_dado
 ---------------------------------------------------------------------------------
 (8) _SOCKET_RX                                            2     2      0   49219
                                             87 COMRAM     2     2      0
       _Buffer_Escrita_COMM_Add_Char
     _Buffer_Escrita_COMM_Add_String
                     i1_Aguarda_dado
             i1_TransmiteBuffer_COMM
 ---------------------------------------------------------------------------------
 (8) _SETMACAddr                                           2     2      0  146066
                                            113 BANK0      2     2      0
                        _inicia_Post
          _limpa_Buffer_Escrita_COMM
           _limpa_Buffer_Escrita_USB
    i1_Buffer_Escrita_USB_Add_String
 ---------------------------------------------------------------------------------
 (9) _limpa_Buffer_Escrita_USB                             2     2      0      46
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) _limpa_Buffer_Escrita_COMM                            2     2      0      46
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) _inicia_Post                                          2     2      0  145061
                                            111 BANK0      2     2      0
     _Buffer_Escrita_COMM_Add_String
                _append_Arquivo_Json
                     i1_Aguarda_dado
    i1_Buffer_Escrita_USB_Add_String
 ---------------------------------------------------------------------------------
 (9) _append_Arquivo_Json                                152   152      0   95149
                                            107 BANK0      4     4      0
                                              0 BANK1    148   148      0
                       _cria_Arquivo
                           i1___wmul
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (10) _cria_Arquivo                                       22    18      4   47950
                                             87 COMRAM     1     1      0
                                             86 BANK0     21    17      4
     _Buffer_Escrita_COMM_Add_String
                             _length
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (11) _length                                              6     4      2     144
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _Post2                                                0     0      0   49129
     _Buffer_Escrita_COMM_Add_String
                     i1_Aguarda_dado
 ---------------------------------------------------------------------------------
 (8) _Post                                                 0     0      0   49912
     _Buffer_Escrita_COMM_Add_String
                     i1_Aguarda_dado
    i1_Buffer_Escrita_USB_Add_String
 ---------------------------------------------------------------------------------
 (9) i1_Buffer_Escrita_USB_Add_String                      8     4      4     783
                                              5 COMRAM     8     4      4
      i1_Buffer_Escrita_USB_Add_Char
              i1_TransmiteBuffer_USB
 ---------------------------------------------------------------------------------
 (10) i1_TransmiteBuffer_USB                               2     0      2       0
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) i1_Buffer_Escrita_USB_Add_Char                        1     1      0      31
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _GETMACAddr                                           2     2      0   49129
                                             87 COMRAM     2     2      0
     _Buffer_Escrita_COMM_Add_String
                     i1_Aguarda_dado
 ---------------------------------------------------------------------------------
 (9) i1_Aguarda_dado                                       8     0      8   45629
                                             86 BANK0      8     0      8
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (10) i1_sprintf                                          78    52     26   43016
                                              9 BANK0     77    51     26
                          i1___awdiv
                          i1___awmod
                          i1___ftadd
                          i1___ftdiv
                           i1___ftge
                          i1___ftmul
                          i1___ftneg
                          i1___ftsub
                          i1___fttol
                          i1___lldiv
                          i1___llmod
                         i1___lltoft
                           i1___wmul
                       i1__div_to_l_
                      i1__tdiv_to_l_
                           i1_fround
                          i1_isdigit
                            i1_scale
 ---------------------------------------------------------------------------------
 (11) i1_scale                                             7     4      3    7114
                                             65 COMRAM     7     4      3
                          i1___awdiv
                          i1___awmod
                          i1___ftmul
                          i1___fttol (ARG)
                           i1___wmul
 ---------------------------------------------------------------------------------
 (11) i1_isdigit                                           3     3      0      99
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (11) i1_fround                                           10     7      3    6835
                                             65 COMRAM    10     7      3
                          i1___awdiv
                          i1___awmod
                          i1___ftmul
                           i1___wmul
 ---------------------------------------------------------------------------------
 (12) i1___wmul                                            6     2      4    1696
                                             17 COMRAM     6     2      4
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (12) i1___ftmul                                          15     9      6    2441
                                             50 COMRAM    15     9      6
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
                          i1___ftneg (ARG)
                         i1___ftpack
                         i1___ftpack (ARG)
                          i1___fttol (ARG)
                         i1___lltoft (ARG)
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (12) i1___awmod                                           6     2      4    1133
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) i1___awdiv                                           8     4      4    1215
                                              9 COMRAM     8     4      4
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (11) i1__tdiv_to_l_                                      15     9      6     524
                                              3 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (11) i1__div_to_l_                                       12     6      6     692
                                              3 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (11) i1___lltoft                                          9     5      4     970
                                             38 COMRAM     9     5      4
                         i1___ftpack
                          i1___fttol (ARG)
 ---------------------------------------------------------------------------------
 (11) i1___llmod                                           9     1      8     792
                                             16 COMRAM     9     1      8
                          i1___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (11) i1___lldiv                                          13     5      8     801
                                              3 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) i1___fttol                                          15    11      4     721
                                             23 COMRAM    15    11      4
                          i1___awdiv (ARG)
                          i1___awmod (ARG)
                         i1___ftpack (ARG)
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (11) i1___ftsub                                           6     0      6    2574
                                              0 BANK0      6     0      6
                          i1___ftadd
                         i1___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (12) i1___ftadd                                          12     6      6    2408
                                             75 COMRAM    12     6      6
                          i1___ftmul (ARG)
                          i1___ftneg (ARG)
                         i1___ftpack
                          i1___fttol (ARG)
                         i1___lltoft (ARG)
                           i1_fround (ARG)
 ---------------------------------------------------------------------------------
 (11) i1___ftneg                                           3     0      3     170
                                             47 COMRAM     3     0      3
                          i1___fttol (ARG)
                         i1___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (11) i1___ftge                                            9     3      6     478
                                              0 BANK0      9     3      6
                          i1___ftadd (ARG)
                          i1___ftneg (ARG)
                          i1___fttol (ARG)
                         i1___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (11) i1___ftdiv                                          15     9      6    1323
                                             72 COMRAM    15     9      6
                         i1___ftpack
                            i1_scale (ARG)
 ---------------------------------------------------------------------------------
 (13) i1___ftpack                                          8     3      5     763
                                              3 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (9) _Buffer_Escrita_COMM_Add_String                       8     4      4    3500
                                              5 COMRAM     8     4      4
       _Buffer_Escrita_COMM_Add_Char
             i1_TransmiteBuffer_COMM
 ---------------------------------------------------------------------------------
 (10) i1_TransmiteBuffer_COMM                              2     0      2       0
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _Buffer_Escrita_COMM_Add_Char                        1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Abre_Porta_1
     _Calcula_BaudRate
       ___aldiv
     ___aldiv
     _lock_PPS
     _unLock_PPS
   _Abre_Porta_COMM
     _Calcula_BaudRate
       ___aldiv
     ___aldiv
     _lock_PPS
     _unLock_PPS
   _Aguarda_dado
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftneg (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___ftsub
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _Buffer_Escrita_USB_Add_String
     _Buffer_Escrita_USB_Add_Char
     _TransmiteBuffer_USB
   _Calcula_Fator_m
     ___awtoft
       ___ftpack
     ___ftdiv
       ___ftpack
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _InicializaWifi
   _TransmiteBuffer_COMM
   _TransmiteBuffer_USB
   _Verifica_Analogica
     _Converte_Escala
       ___altoft
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     ___lldiv
     _ajusta_escala
       _Calcula_Fator_m
         ___awtoft
           ___ftpack
         ___ftdiv
           ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftneg (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___ftsub
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___awmod
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftdiv
       ___ftpack
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fttol (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___fttol (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _Interrupt_USB_485 (ROOT)
   _Buffer_Escrita_COMM_Add_Char
   _Buffer_Leitura_USB_Add_Char
   _Recebe

 _Interrupt_WIFI_GSM (ROOT)
   _AguardaINT
     Absolute function(Fake) *
     _GETMACAddr *
       _Buffer_Escrita_COMM_Add_String
         _Buffer_Escrita_COMM_Add_Char
         i1_TransmiteBuffer_COMM
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
     _Post *
       _Buffer_Escrita_COMM_Add_String
         _Buffer_Escrita_COMM_Add_Char
         i1_TransmiteBuffer_COMM
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
       i1_Buffer_Escrita_USB_Add_String
         i1_Buffer_Escrita_USB_Add_Char
         i1_TransmiteBuffer_USB
     _Post2 *
       _Buffer_Escrita_COMM_Add_String
         _Buffer_Escrita_COMM_Add_Char
         i1_TransmiteBuffer_COMM
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
     _SETMACAddr *
       _inicia_Post
         _Buffer_Escrita_COMM_Add_String
           _Buffer_Escrita_COMM_Add_Char
           i1_TransmiteBuffer_COMM
         _append_Arquivo_Json
           _cria_Arquivo
             _Buffer_Escrita_COMM_Add_String
               _Buffer_Escrita_COMM_Add_Char
               i1_TransmiteBuffer_COMM
             _length
             i1_sprintf
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftdiv
                 i1___ftpack
                 i1_scale (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftge
                 i1___ftadd (ARG)
                   i1___ftmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1_fround (ARG)
                     i1___awdiv
                       i1___awmod (ARG)
                     i1___awmod
                     i1___ftmul
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftneg (ARG)
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                         i1___lltoft (ARG)
                           i1___ftpack
                           i1___fttol (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                             i1___ftpack (ARG)
                             i1___wmul (ARG)
                               i1___awdiv (ARG)
                                 i1___awmod (ARG)
                               i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___ftpack (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___wmul
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftsub
                 i1___ftadd
                   i1___ftmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1_fround (ARG)
                     i1___awdiv
                       i1___awmod (ARG)
                     i1___awmod
                     i1___ftmul
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftneg (ARG)
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                         i1___lltoft (ARG)
                           i1___ftpack
                           i1___fttol (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                             i1___ftpack (ARG)
                             i1___wmul (ARG)
                               i1___awdiv (ARG)
                                 i1___awmod (ARG)
                               i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___ftpack (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___wmul
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lldiv
               i1___llmod
                 i1___lldiv (ARG)
               i1___lltoft
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
               i1__div_to_l_
               i1__tdiv_to_l_
               i1_fround
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1_isdigit
               i1_scale
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1_sprintf
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftdiv
               i1___ftpack
               i1_scale (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftge
               i1___ftadd (ARG)
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftsub
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lldiv
             i1___llmod
               i1___lldiv (ARG)
             i1___lltoft
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
             i1__div_to_l_
             i1__tdiv_to_l_
             i1_fround
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1_isdigit
             i1_scale
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
         i1_Aguarda_dado
           i1_sprintf
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftdiv
               i1___ftpack
               i1_scale (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftge
               i1___ftadd (ARG)
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftsub
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lldiv
             i1___llmod
               i1___lldiv (ARG)
             i1___lltoft
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
             i1__div_to_l_
             i1__tdiv_to_l_
             i1_fround
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1_isdigit
             i1_scale
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
         i1_Buffer_Escrita_USB_Add_String
           i1_Buffer_Escrita_USB_Add_Char
           i1_TransmiteBuffer_USB
       _limpa_Buffer_Escrita_COMM
       _limpa_Buffer_Escrita_USB
       i1_Buffer_Escrita_USB_Add_String
         i1_Buffer_Escrita_USB_Add_Char
         i1_TransmiteBuffer_USB
     _SOCKET_RX *
       _Buffer_Escrita_COMM_Add_Char
       _Buffer_Escrita_COMM_Add_String
         _Buffer_Escrita_COMM_Add_Char
         i1_TransmiteBuffer_COMM
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
       i1_TransmiteBuffer_COMM
     _TASK_POST *
       _Buffer_Escrita_COMM_Add_String
         _Buffer_Escrita_COMM_Add_Char
         i1_TransmiteBuffer_COMM
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
     _WIND *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
       i1_Buffer_Escrita_USB_Add_String
         i1_Buffer_Escrita_USB_Add_Char
         i1_TransmiteBuffer_USB
     _inicia_Post *
       _Buffer_Escrita_COMM_Add_String
         _Buffer_Escrita_COMM_Add_Char
         i1_TransmiteBuffer_COMM
       _append_Arquivo_Json
         _cria_Arquivo
           _Buffer_Escrita_COMM_Add_String
             _Buffer_Escrita_COMM_Add_Char
             i1_TransmiteBuffer_COMM
           _length
           i1_sprintf
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftdiv
               i1___ftpack
               i1_scale (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftge
               i1___ftadd (ARG)
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftsub
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lldiv
             i1___llmod
               i1___lldiv (ARG)
             i1___lltoft
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
             i1__div_to_l_
             i1__tdiv_to_l_
             i1_fround
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1_isdigit
             i1_scale
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
         i1___wmul
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
       i1_Buffer_Escrita_USB_Add_String
         i1_Buffer_Escrita_USB_Add_Char
         i1_TransmiteBuffer_USB
     _nada *
     _recebe *
       _Buffer_Escrita_COMM_Add_String
         _Buffer_Escrita_COMM_Add_Char
         i1_TransmiteBuffer_COMM
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
     _recebeADDRESS *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
     _recebeFRAMEID *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
     _recebeFRAMES *
       _Aguarda
         _verificaERRO
         _verificaFimFrame
       _Buffer_Escrita_COMM_Add_String
         _Buffer_Escrita_COMM_Add_Char
         i1_TransmiteBuffer_COMM
       _recebeADDRESS
         i1_Aguarda_dado
           i1_sprintf
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftdiv
               i1___ftpack
               i1_scale (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftge
               i1___ftadd (ARG)
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftsub
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lldiv
             i1___llmod
               i1___lldiv (ARG)
             i1___lltoft
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
             i1__div_to_l_
             i1__tdiv_to_l_
             i1_fround
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1_isdigit
             i1_scale
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
       _recebeFRAMEID
         i1_Aguarda_dado
           i1_sprintf
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftdiv
               i1___ftpack
               i1_scale (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftge
               i1___ftadd (ARG)
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftsub
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lldiv
             i1___llmod
               i1___lldiv (ARG)
             i1___lltoft
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
             i1__div_to_l_
             i1__tdiv_to_l_
             i1_fround
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1_isdigit
             i1_scale
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
       _recebeFUNCTIONCODE
         i1_Aguarda_dado
           i1_sprintf
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftdiv
               i1___ftpack
               i1_scale (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftge
               i1___ftadd (ARG)
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftsub
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lldiv
             i1___llmod
               i1___lldiv (ARG)
             i1___lltoft
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
             i1__div_to_l_
             i1__tdiv_to_l_
             i1_fround
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1_isdigit
             i1_scale
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
       _recebeNETWORKID
         i1_Aguarda_dado
           i1_sprintf
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftdiv
               i1___ftpack
               i1_scale (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftge
               i1___ftadd (ARG)
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftsub
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lldiv
             i1___llmod
               i1___lldiv (ARG)
             i1___lltoft
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
             i1__div_to_l_
             i1__tdiv_to_l_
             i1_fround
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1_isdigit
             i1_scale
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
         i1___wmul
           i1___awdiv (ARG)
             i1___awmod (ARG)
           i1___awmod (ARG)
       _recebeNODEID
         i1_Aguarda_dado
           i1_sprintf
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftdiv
               i1___ftpack
               i1_scale (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftge
               i1___ftadd (ARG)
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftsub
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lldiv
             i1___llmod
               i1___lldiv (ARG)
             i1___lltoft
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
             i1__div_to_l_
             i1__tdiv_to_l_
             i1_fround
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1_isdigit
             i1_scale
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
       _recebeSIZE
         i1_Aguarda_dado
           i1_sprintf
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftdiv
               i1___ftpack
               i1_scale (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftge
               i1___ftadd (ARG)
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftsub
               i1___ftadd
                 i1___ftmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1_fround (ARG)
                   i1___awdiv
                     i1___awmod (ARG)
                   i1___awmod
                   i1___ftmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftneg (ARG)
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                       i1___lltoft (ARG)
                         i1___ftpack
                         i1___fttol (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                           i1___ftpack (ARG)
                           i1___wmul (ARG)
                             i1___awdiv (ARG)
                               i1___awmod (ARG)
                             i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___ftpack (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___wmul
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lldiv
             i1___llmod
               i1___lldiv (ARG)
             i1___lltoft
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
             i1__div_to_l_
             i1__tdiv_to_l_
             i1_fround
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1_isdigit
             i1_scale
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
       i1_Buffer_Escrita_USB_Add_String
         i1_Buffer_Escrita_USB_Add_Char
         i1_TransmiteBuffer_USB
     _recebeFUNCTIONCODE *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
     _recebeNETWORKID *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
       i1___wmul
         i1___awdiv (ARG)
           i1___awmod (ARG)
         i1___awmod (ARG)
     _recebeNODEID *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
     _recebeSIZE *
       i1_Aguarda_dado
         i1_sprintf
           i1___awdiv
             i1___awmod (ARG)
           i1___awmod
           i1___ftadd
             i1___ftmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1_fround (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftdiv
             i1___ftpack
             i1_scale (ARG)
               i1___awdiv
                 i1___awmod (ARG)
               i1___awmod
               i1___ftmul
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___ftge
             i1___ftadd (ARG)
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftneg (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___ftpack (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___ftneg
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___ftsub
             i1___ftadd
               i1___ftmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftneg (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___ftpack (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1_fround (ARG)
                 i1___awdiv
                   i1___awmod (ARG)
                 i1___awmod
                 i1___ftmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftneg (ARG)
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                     i1___lltoft (ARG)
                       i1___ftpack
                       i1___fttol (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                         i1___ftpack (ARG)
                         i1___wmul (ARG)
                           i1___awdiv (ARG)
                             i1___awmod (ARG)
                           i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___ftpack (ARG)
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                   i1___lltoft (ARG)
                     i1___ftpack
                     i1___fttol (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
                       i1___ftpack (ARG)
                       i1___wmul (ARG)
                         i1___awdiv (ARG)
                           i1___awmod (ARG)
                         i1___awmod (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___wmul
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
             i1___lltoft (ARG)
               i1___ftpack
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
           i1___fttol
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
             i1___ftpack (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1___lldiv
           i1___llmod
             i1___lldiv (ARG)
           i1___lltoft
             i1___ftpack
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
           i1___wmul
             i1___awdiv (ARG)
               i1___awmod (ARG)
             i1___awmod (ARG)
           i1__div_to_l_
           i1__tdiv_to_l_
           i1_fround
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
           i1_isdigit
           i1_scale
             i1___awdiv
               i1___awmod (ARG)
             i1___awmod
             i1___ftmul
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftneg (ARG)
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                 i1___lltoft (ARG)
                   i1___ftpack
                   i1___fttol (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
                     i1___ftpack (ARG)
                     i1___wmul (ARG)
                       i1___awdiv (ARG)
                         i1___awmod (ARG)
                       i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___ftpack (ARG)
               i1___fttol (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
                 i1___ftpack (ARG)
                 i1___wmul (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
               i1___lltoft (ARG)
                 i1___ftpack
                 i1___fttol (ARG)
                   i1___awdiv (ARG)
                     i1___awmod (ARG)
                   i1___awmod (ARG)
                   i1___ftpack (ARG)
                   i1___wmul (ARG)
                     i1___awdiv (ARG)
                       i1___awmod (ARG)
                     i1___awmod (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___fttol (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
               i1___ftpack (ARG)
               i1___wmul (ARG)
                 i1___awdiv (ARG)
                   i1___awmod (ARG)
                 i1___awmod (ARG)
             i1___wmul (ARG)
               i1___awdiv (ARG)
                 i1___awmod (ARG)
               i1___awmod (ARG)
     _verificaERRO *
   _Recebe_COMM
   i1_Buffer_Escrita_USB_Add_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     456      37       27.1%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0      96      24       58.6%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0      96      23       58.6%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0      78      21       46.9%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      96      19       58.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      96      17       58.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DC      15       85.9%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      F0      13       93.8%
BITBANK3           100      0       0      10        0.0%
BANK3              100     18      F4      11       95.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100     B0      ED       9       92.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     94     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     77      9E       5       98.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      5C       1       96.8%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     877      32        0.0%
DATA                 0      0     CCD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu May 03 12:26:42 2018

                            ___altoft@exp 0255                                         _b 00DF  
                                       _m 02D8                                i1___ftpack 6F0E  
                             __CFG_CP$OFF 000000                     __size_ofi1__div_to_l_ 0130  
                           ___altoft@sign 0256                                i1___lltoft 7A76  
                            ___awdiv@sign 0210                       ___wmul@multiplicand 0215  
              ?_limpa_Buffer_Escrita_COMM 0001                          i1___wmul@product 0016  
                 trataRespostaHTTP@F20041 01F3                   trataRespostaHTTP@F20043 01EF  
                 trataRespostaHTTP@F20039 01F7                              ___ftadd@exp1 023D  
                            ___ftadd@exp2 023C                               __CFG_LVP$ON 000000  
                            ___ftadd@sign 023B                                       l121 4600  
                                     l130 477A                                       l123 463C  
                                     l124 4656                                       l125 4674  
                                     l126 46CC                                       l127 4700  
                                     l128 470C                                       l244 6A48  
                                     l245 6A6E                                       l261 7CD4  
                                     l263 7D04                                       l267 7C78  
                                     l276 6BBE                                       l277 6B6C  
                                     l269 7CA8                                       l278 6B7E  
                                     l287 82C6                                       l279 6C16  
                                     l931 4930                                       l941 3C72  
                                     l934 4A38                                       l942 3E1A  
                                     l951 0114                                       l944 3EF4  
                                     l952 00F4                                       l937 3CA4  
                            i1___ftadd@f1 004C                                       l938 3B98  
                                     l954 00FA                                       l890 4E04  
                            i1___ftadd@f2 004F                                       l971 042A  
                                     l963 0172                                       l955 0100  
                                     l891 4E4C                                       l980 028E  
                                     l956 0106                                       l948 00C0  
                                     l892 4E94                                       l884 5942  
                                     l965 0270                                       l957 010C  
                                     l949 00E2                                       l893 4EDC  
                                     l885 5948                                       l990 0334  
                                     l974 027E                                       l966 0254  
                                     l894 4F24                                       l991 034A  
                                     l983 0292                                       l975 0282  
                                     l967 0210                                       l895 4F6C  
                                     l976 0494                                       l992 0352  
                                     l984 0296                                       l896 4FB4  
                                     l985 02C6                                       l977 0286  
                                     l897 4FFC                                       l889 4DBC  
                                     l994 036C                                       l986 02D6  
                                     l978 0288                                       l898 5044  
                                     l995 0358                                       l987 02D0  
                                     l979 028C                                       l997 03C0  
                                     l998 037E                              i1___ftge@ff1 0060  
                            i1___ftge@ff2 0063                                       _iii 01DF  
                                     _low 02EB                              i1___ftdiv@f1 0049  
                            i1___ftdiv@f2 004C                              i1___ftdiv@f3 0053  
                            ___awmod@sign 020A                                       prod 003FF3  
                            i1___ftneg@f1 0030                                       tosl 003FFD  
                                     wreg 003FE8                   ??i1_TransmiteBuffer_USB 0006  
               __end_of_Interrupt_USB_485 8416                              i1___ftmul@f1 0033  
                            i1___ftmul@f2 0036                             __CFG_BBEN$OFF 000000  
                            i1___ftsub@f1 0060                              i1___ftsub@f2 0063  
                            i1___fttol@f1 0018                     __size_of_Abre_Porta_1 00DA  
         Buffer_Escrita_COMM_Add_String@i 000C                              __CFG_ZCD$OFF 000000  
                            ___ftdiv@cntr 0238                              ___ftdiv@sign 023D  
                                    l1001 03EC                                      l1010 05AE  
                                    l1002 03D8                                      l1011 0634  
                                    l1004 0400                                      l1021 06BA  
                                    l1013 0660                                      l1005 0418  
                                    l1110 1380                                      l1030 0936  
                                    l1022 06CC                                      l1014 0674  
                                    l1006 17A8                                      l1111 13F4  
                                    l1103 12EE                                      l1031 09B2  
                                    l1023 06D2                                      l1015 067A  
                                    l1007 04AA                                      l1120 13CA  
                                    l1112 13B0                                      l1040 0A9C  
                                    l1032 0966                                      l1016 0ECA  
                                    l1008 0502                                      l1201 1B3A  
                                    l1041 0B10                                      l1025 07EE  
                                    l1114 1394                                      l1050 0AE6  
                                    l1042 0ACC                                      l1026 0892  
                                    l1211 1CCE                                      l1203 1B1E  
                                    l1107 1366                                      l1300 6B1A  
                                    l1212 1BA2                                      l1140 1572  
                                    l1124 1414                                      l1044 0AB0  
                                    l1036 0A5A                                      l1028 0918  
                                    l1301 6B30                                      l1213 1CDE  
                                    l1141 1578                                      l1125 13FA  
                                    l1037 0A82                                      l1214 1C40  
                                    l1142 15A2                                      l1134 152A  
                                    l1054 0B30                                      l1207 1B52  
                                    l1135 1462                                      l1127 144E  
                                    l1119 13E4                                      l1071 0DD0  
                                    l1063 0B82                                      l1055 0B16  
                                    l1160 1878                                      l1072 0DB6  
                        cria_Arquivo@dado 00B8                                      l1209 1CF4  
                                    l1145 1746                                      l1137 154E  
                                    l1129 1432                                      l1081 1126  
                                    l1057 0B6A                                      l1049 0B00  
                                    l1321 746A                                      l1162 1916  
                                    l1154 181C                                      l1146 1612  
                                    l1138 1534                                      l1082 0EE6  
                                    l1074 0DEC                                      l1322 745E  
                                    l1411 7528                                      l1163 1892  
                                    l1155 17D8                                      l1067 0DAA  
                                    l1059 0B4E                                      l1412 7532  
                                    l1404 74DA                                      l1420 7792  
                                    l1180 19F4                                      l1172 1944  
                                    l1148 176C                                      l1076 0E1C  
                                    l1068 0CB6                                      l1413 7540  
                                    l1405 74EA                                      l1421 778A  
                                    l1181 19FC                                      l1149 1752  
                                    l1093 1176                                      l1069 0CD6  
                                    l1182 1A20                                      l1174 1964  
                                    l1094 1260                                      l1086 0FB4  
                                    l1503 5302                                      l1407 7508  
                                    l1191 1A6C                                      l1183 1A28  
                                    l1175 1986                                      l1167 1926  
                                    l1159 1848                                      l1087 10E0  
                                    l1440 5DDA                                      l1408 7500  
                                    l1424 77AA                                      l1600 8482  
                                    l1184 1AE2                                      l1168 18D4  
                                    l1088 1092                                      l1432 8168  
                                    l1513 5360                                      l1425 77B4  
                                    l1417 7770                                      l1193 1ABE  
                                    l1185 1A58                                      l1177 19A8  
                                    l1097 11F0                                      l1522 53A0  
                                    l1514 5356                                      l1442 5E18  
                                    l1426 77C2                                      l1418 777C  
                                    l1178 19B0                                      l1523 5396  
                                    l1443 5E08                                      l1187 1A3C  
                                    l1292 6A92                                      l1532 65F0  
                                    l1508 536A                                      l1436 5D4A  
                                    l1540 5ADC                                      l1293 6AAA  
                                    l1525 53C4                                      l1534 661A  
                                    l1526 53E0                                      l1630 7412  
                                    l1438 5D68                                      l1542 5B0A  
                                    l1295 6AD8                                      l1471 6EB6  
                                    l1535 665A                                      l1527 5410  
                                    l1631 7420                                      l1439 5DAA  
                                    l1543 5B44                              i1___lltoft@c 0027  
                                    l1296 6ACC                                      l1472 6EA0  
                                    l1536 6680                                      l1640 7974  
                                    l1448 5E3C                                      l1552 5BCC  
                                    l1544 5B6C                                      l1641 7982  
                                    l1449 5E30                                      l1553 5BC0  
                                    l1474 6EDE                                      l1626 73DE  
                                    l1546 5BA8                                      l1570 6152  
                                    l1299 6B0C                                      l1475 6ED4  
                                    l1627 73D2                                      l1547 5B98  
                                    l1571 6162                                      l1468 6E82  
                                    l1636 794C                                      l1564 60CC  
                                    l1469 6E78                                      l1557 72AA  
                                    l1581 7E42                                      l1637 7940  
                                    l1558 72E0                                      l1566 60F6  
                                    l1575 83D8                                      l1647 7A1E  
                                    l1567 612A                                      l1648 7A12  
                                    l1568 613A                                      l1593 6388  
                                    l1585 62E6                                      l1594 637C  
                                    l1499 52D2                                      l1587 6364  
                                    l1596 63A4                                      l1588 6354  
                                    STR_1 FEBA                              __CFG_WDTE$ON 000000  
                                    STR_2 FF1D                                      STR_3 FEA7  
                                    STR_4 FDAA                                      STR_5 FE65  
                                    STR_6 FF81                                      STR_7 FFD5  
                                    STR_8 FF42                                      STR_9 FD0F  
                        cria_Arquivo@nome 00B6                                      _WIND 7BA6  
                          _InicializaWifi 82CC                                      ___IT 000101  
                                    _Post 77D0                                      _high 02EC  
                                    _nada 8502                         i1___lldiv@divisor 0008  
                                    _main 4406                              ___ftpack@arg 0205  
                            ___ftpack@exp 0208                                _AguardaINT 64C2  
                                    _size 0564                                      _text 038C  
                                    fsr0h 003FEA                                      fsr1h 003FE2  
                                    indf0 003FEF                                      fsr2h 003FDA  
                                    fsr0l 003FE9                                      indf1 003FE7  
                                    indf2 003FDF                                      fsr1l 003FE1  
                                    fsr2l 003FD9                         i1___lldiv@counter 0010  
                            ?_inicia_Post 0001                             i1___ftdiv@exp 0056  
                       ??_recebeNETWORKID 0058                                      prodh 003FF4  
                                    prodl 003FF3                                      start 00AE  
                            i1__div_to_l_ 5E5C                           __end_ofi1_scale 4406  
          ??_Buffer_Escrita_COMM_Add_Char 0004                           __end_of_Aguarda 60A0  
                            _sprintf$2170 0279                              _sprintf$2173 027B  
                            _sprintf$2174 027D                              _sprintf$2175 027F  
                            _sprintf$2176 0281                              _sprintf$2169 0277  
                ??i1_TransmiteBuffer_COMM 0006                              _sprintf$2801 0273  
                           __CFG_CSWEN$ON 000000                             _EstadoInterno 01DB  
                            ___ftmul@cntr 0226                              ___param_bank 000000  
                            ___ftmul@sign 0227                               ?_SETMACAddr 0001  
                           i1___ftmul@exp 003C                           ??_ajusta_escala 0248  
                      _Verifica_Analogica 57DE                       __size_of_GETMACAddr 0052  
                            ___fttol@exp1 024C                              ___fttol@lval 0248  
                                   ?_WIND 0001                   i1___ftmul@f3_as_product 003D  
                                   ?_Post 0001                                     l10233 730C  
                Calcula_BaudRate@BaudRate 0213                                     l13035 1784  
                                   l13213 1CCE                                     l13133 19FC  
                                   l13223 1D14                                     l13217 1CF0  
                                   l13073 1896                                     l13165 1ABE  
                                   l13087 18D8                                     l12561 037E  
                                   l13195 1B4E                                     l12571 03D8  
                                   l12555 0358                                     l12725 0AE0  
                                   l12903 12F2                                     l12727 0AE6  
                                   l12737 0B16                                     l12843 0F1A  
                                   l13565 6A6E                                     l12829 0EA4  
                                   l12757 0B7E                                     l12943 13C4  
                                   l12945 13CA                                     l12955 13FA  
                                   l12883 11C4                                     l12875 1176  
                                   l12987 1534                           __end_of___aldiv 6B4A  
                                   ?_nada 0001                                     _ADCAP 003EF5  
                            _Abre_Porta_1 699A                                     ?_main 0001  
                          i1___awdiv@sign 000F                                     _ADPCH 003EF1  
                         __end_of___awdiv 754E                           __end_of___ftadd 5446  
                                   STR_10 FFCF                                     STR_11 FFDA  
                                   STR_20 FDAA                                     STR_12 FFC9  
                                   STR_21 FE65                                     STR_13 FCD2  
                                   STR_14 FF42                                     STR_22 FFFD  
                                   STR_30 FC38                                     STR_23 FFFD  
                                   STR_31 FFF6                                     STR_15 FF42  
                                   STR_24 FE65                                     STR_40 FFFD  
                                   STR_32 FFF0                                     STR_16 FFE3  
                                   STR_33 FE65                                     STR_41 FFFD  
                                   STR_25 FF6D                                     STR_17 FE7E  
                                   STR_42 FE65                                     STR_50 FEA7  
                                   STR_18 FE66                                     STR_34 FE35  
                                   STR_26 FD8D                                     STR_51 FDAA  
                                   STR_35 FDA4                                     STR_27 FFF6  
                                   STR_19 FFF3                                     STR_43 FDE6  
                                   STR_52 FE65                                     STR_60 FFEB  
                                   STR_28 FFF0                                     STR_36 FF77  
                                   STR_44 FE1C                           __end_of___awmod 77D0  
                                   STR_61 FE65                                     STR_29 FE65  
                                   STR_37 FDAA                                     STR_45 FFFD  
                                   STR_53 FF59                                     STR_70 FE65  
                                   STR_38 FE65                                     STR_46 FFFD  
                                   STR_62 FFBD                         ?_verificaFimFrame 0001  
                                   STR_47 FE65                                     STR_63 FFEB  
                                   STR_71 FFC0                                     STR_39 FC8C  
                                   STR_64 FE65                                     STR_72 FFEB  
                                   STR_80 FFED                                     STR_56 FF8B  
                                   STR_48 FE01                                     STR_73 FE65  
                                   STR_81 FFED                                     STR_57 FFEA  
                                   STR_65 FFA8                                     STR_49 FF36  
                                   STR_58 FE65                                     STR_66 FFEB  
                                   STR_74 FF4E                                     STR_90 FE94  
                                   STR_82 FBDD                                     STR_67 FE65  
                                   STR_75 FE61                                     STR_83 FFFB  
                                   STR_59 FFA1                                     STR_91 FDAC  
                                   STR_84 FFE7                                     STR_68 FFC3  
                                   STR_76 FDCA                                     STR_92 FD6E  
                                   STR_85 FE65                                     STR_69 FFEA  
                                   STR_77 FEEE                                     STR_93 FD42  
                                   STR_78 FDAA                                     STR_86 FF9A  
                                   STR_94 FE4E                                     STR_79 FFB6  
                                   STR_95 FB55                       ?_Verifica_Analogica 0001  
                                   STR_96 FFAF                                     STR_89 FEDD  
                                   STR_99 FFDF                           __end_of___ftdiv 66C2  
         ??i1_Buffer_Escrita_USB_Add_Char 0004                           __end_of___ftneg 83EC  
                         __end_of___lldiv 743A                           __end_of___ftmul 61AC  
                         ___awdiv@divisor 020D                           __end_of___llmod 799C  
                         __end_of___ftsub 7E7E                           __end_of___fttol 63BE  
                                   u16000 750C                                     u17000 066E  
                                   u16060 7796                                     u16301 5AEE  
                                   u17030 0694                                     u15520 6E6A  
                                   u17040 06AA                                     u18010 19EA  
                                   u17140 092E                                     u16430 5E42  
                                   u18110 1AEC                                     u17070 06C6  
                                   u15560 6EE8                                     u15720 52EE  
                                   u16360 5BD2                                     u18200 1D36  
                                   u18120 1B0E                                     u17400 0EA4  
                                   u17320 0C94                                     u17160 09FA  
                                   u16281 5AC0                                     u18210 1D58  
                                   u15651 5288                                     u15820 53A8  
                                   u17500 1136                                     u15661 529E  
                                   u16470 6ADC                                     u15750 5332  
                                   u16630 638E                                     u17510 1188  
                                   u17270 0B3E                                     u17190 0A7C  
                          __CFG_DEBUG$OFF 000000                                     u15911 60B4  
                                   u17600 1360                                     u17360 0DD8  
                                   u16720 82BC                                     u18161 1B7A  
                                   u15690 52BE                                     u16810 030C  
                                   u16571 62CA                                     u15931 60DE  
                                   u19027 4478                                     u16660 73E2  
                                   u17540 11C4                                     u17460 0F58  
                                   u16820 0312                                     u15861 65D8  
                                   u19037 4692                                     u15790 5372  
                                   u16590 630A                                     u18190 1D14  
                                   u17470 0F74                                     u19047 4754  
                                   u17800 1784                                     u18600 5A9A  
                                   u15881 6602                                     u16817 02FE  
                                   u19057 82EE                                     u16690 7950  
                                   u17730 155C                                     u16770 01E6  
                                   u16595 6302                        ajusta_escala@valor 0246  
                                   u17740 156C                                     u17580 1330  
                                   u18710 6BB4                                     u17760 158E  
                                   u17680 1422                                     u16960 0542  
                                   u16880 03B4                                     u18720 6BF6  
                                   u18800 5910                                     u18740 6C06  
                                   u16965 0538                                     u18717 6BA6  
                      __size_of_TASK_POST 003C                                     u16887 03A6  
                                   u18727 6BE8                                     u18808 5914  
                                   i1l115 7C46                                     u18835 4616  
                                   i1l300 6D9E                                     u18940 46EA  
                                   i1l109 840E                                     u18845 4622  
                                   u18837 461A                                     u18847 4626  
                                   i1l320 5FAA                                     u18960 4744  
                                   i1l313 6546                                     i1l322 6000  
                                   _U1RXB 003DE8                                     i1l323 5FF6  
                                   i1l308 651E                                     i1l261 7D2E  
                                   i1l421 5244                                     i1l341 7FBE  
                                   i1l333 8148                                     i1l309 6514  
                                   i1l422 507E                                     i1l350 81DA  
                                   i1l263 7D5E                                     i1l423 5140  
                                   i1l319 5FA0                                     i1l424 5148  
                                   i1l328 6092                                     i1l425 517A  
                                   i1l353 820C                                     i1l426 5190  
                                   i1l354 81F8                                     _U2RXB 003DD0  
                                   _U1TXB 003DEA                                     i1l267 7D88  
                                   i1l443 7DE0                                     i1l347 81C8  
                                   i1l603 6928                                     i1l276 6C88  
                                   i1l444 7DDC                                     i1l356 821E  
                                   i1l348 81B4                                     i1l604 68BE  
                                   i1l292 832A                                     i1l269 7DB8  
                                   i1l277 6C3A                                     i1l605 68DC  
                                   i1l278 6C4A                                     i1l622 71FE  
                                   i1l287 835C                                     i1l279 6CDA  
                                   i1l551 569E                                     i1l623 71DC  
                                   i1l552 56C4                                     _PCON0 003FF0  
                                   i1l297 6D4C                                     _PCON1 003FF1  
                                   i1l298 6CFE                                     i1l562 5700  
                                   _U2TXB 003DD2                                     i1l299 6D0E  
                                   i1l571 5742                                     i1l547 5662  
                                   i1l643 7BDE                                     i1l548 5764  
                                   i1l556 56D4                                     i1l660 767E  
                                   i1l565 5716                                     i1l549 568C  
                                   i1l559 56EA                                     i1l663 76AC  
                                   i1l568 572C                                     i1l931 4C22  
                                   i1l659 7694                                     i1l941 416A  
                                   i1l934 4D20                                     i1l942 4304  
                                   i1l951 1DCC                                     i1l599 7734  
                                   i1l944 43D6                                     i1l952 1DAC  
                                   i1l937 419A                                     i1l938 4098  
                                   i1l954 1DB2                                     i1l971 20DE  
                                   i1l963 1E2A                                     i1l955 1DB8  
                                   i1l980 1F42                                     i1l956 1DBE  
                                   i1l948 1D78                             ??_Recebe_COMM 0004  
                                   i1l965 1F24                                     i1l957 1DC4  
                                   i1l949 1D9A                                     i1l990 1FE8  
                                   i1l974 1F32                                     i1l966 1F08  
                                   i1l991 1FFE                                     i1l983 1F46  
                                   i1l975 1F36                                     i1l967 1EC6  
                                   i1l976 2148                                     i1l992 2006  
                                   i1l984 1F4A                                     i1l985 1F7A  
                                   i1l977 1F3A                                     i1l994 2020  
                                   i1l986 1F8A                                     i1l978 1F3C  
                                   i1l995 200C                                     i1l987 1F84  
                                   i1l979 1F40                                     i1l997 2074  
                                   i1l998 2032                           ___awdiv@counter 020F  
                      __size_of_SOCKET_RX 0080                            i1___ftadd@exp1 0057  
                          i1___ftadd@exp2 0056                            i1___ftadd@sign 0055  
                              i1isdigit@c 0006                        ??_verificaFimFrame 0004  
                      i1__tdiv_to_l_@exp1 0012                        i1__tdiv_to_l_@cntr 0011  
                         _Calcula_Fator_m 7120                                i1scale@scl 0048  
                       Calcula_Fator_m@mX 0240                         Calcula_Fator_m@mY 0243  
                            ___lltoft@exp 0255                        i1__tdiv_to_l_@quot 000D  
                          __CFG_FCMEN$OFF 000000                                     _Post2 825C  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            i1___awmod@sign 0009  
                      i1___lldiv@dividend 0004                   __size_ofi1_Aguarda_dado 0062  
                           ___awtoft@sign 0210                   Abre_Porta_COMM@BaudRate 021B  
                         __end_of_dpowers FAE7                                     _conta 01C0  
                                   _index 005A                                     _saida 00D7  
                                   _scale 3A16                    __end_of_InicializaWifi 82FE  
                         __end_of_isdigit 848C                                     _mudou 01C9  
        append_Arquivo_Json@valorMem_Char 0184                        __CFG_MCLRE$EXTMCLR 000000  
                           ___ftpack@sign 0209                                     _value 0800  
                                   _valor 00E3                                     _tempo 01E5  
                        __end_ofi1___ftge 73AE                                     pclath 003FFA  
                                   tablat 003FF5                               _Aguarda_end 03D0  
                        __end_ofi1___wmul 83C0                            i1___ftdiv@cntr 0052  
                             _Aguarda_str 03AA                            i1___ftdiv@sign 0057  
                                   plusw1 003FE3                                     plusw2 003FDB  
                                   status 003FD8                      ??_Verifica_Analogica 02A0  
                     i1___wmul@multiplier 0012                                _Max_Saida1 02D6  
                              _Max_Saida2 02D0                                _Max_Saida3 02CC  
                              _Max_Saida4 02C8                                _Max_Saida5 02C4  
                         __end_of_sprintf 1D6A                                _Max_Saida6 02C0  
                              _Max_Saida7 02BC                                _Max_Saida8 02B8  
                              _Max_Saida9 02B4                        __size_ofi1___awdiv 0088  
                      __size_ofi1___ftadd 01D0                        __size_ofi1___awmod 0074  
                        __end_ofi1_fround 4D72                        __size_ofi1___ftdiv 00FC  
                      __size_ofi1___ftneg 002A                        __size_ofi1___lldiv 008A  
                  __size_ofi1__tdiv_to_l_ 013E                        __size_ofi1___ftmul 010A  
                      __size_ofi1___llmod 006E                        __size_ofi1___ftsub 0054  
                      __size_ofi1___fttol 0104                            i1___ftpack@arg 0004  
                          i1___ftpack@exp 0007                              __end_of_WIND 7C06  
                              _Min_Saida1 01D3                           __initialization 67BE  
                            __end_of_Post 7846                              __end_of_nada 8504  
                            __end_of_main 4788                            i1_sprintf$3008 0089  
                          i1_sprintf$2170 008F                            i1_sprintf$2173 0091  
                          i1_sprintf$2174 0093                            i1_sprintf$2175 0095  
                          i1_sprintf$2176 0097                            i1_sprintf$2169 008D  
                             ?i1___ftpack 0004                            i1___ftmul@cntr 0040  
                      __size_ofi1_isdigit 0020                            __CFG_SAFEN$OFF 000000  
                          i1___ftmul@sign 0041                ??_limpa_Buffer_Escrita_USB 0004  
                      i1___lldiv@quotient 000C                               ?i1___lltoft 0027  
                                  ??_WIND 0058                                i1sprintf@c 00B3  
                              i1sprintf@f 006B                            i1___fttol@exp1 0026  
                                  ??_Post 0058                            i1___fttol@lval 0022  
             append_Arquivo_Json@valorMem 0178                                    ??_nada 0004  
                                  ??_main 02AE                             ___fttol@sign1 0247  
                          __CFG_PR1WAY$ON 000000                        __size_ofi1_sprintf 1CAC  
             append_Arquivo_Json@primeiro 017E                             __activetblptr 000003  
                          __CFG_MVECEN$ON 000000                      __size_of__tdiv_to_l_ 0140  
                            i1_scale$3007 0045                                    ?_Post2 0001  
              __size_of_Interrupt_USB_485 002A                      __end_of_cria_Arquivo 7072  
       i1Buffer_Escrita_USB_Add_Char@dado 0004           Buffer_Escrita_USB_Add_Char@dado 0205  
                                  _ADACQH 003EF4                                    _ADACQL 003EF3  
                          i1___lltoft@exp 002F                          __end_of___altoft 74C4  
                     __size_of_SETMACAddr 00A6                          ___llmod@dividend 0212  
                                  ?_scale 0228                                    STR_100 FDAA  
                                  STR_101 FE65                                    STR_110 FE65  
                                  STR_102 FFF9                                    STR_111 FF2A  
                                  STR_103 FEFF                                    STR_112 FF93  
                                  STR_104 FF63                                    STR_113 FECC  
                                  _ADRESH 003EF0                                    STR_107 FF0E  
                                  STR_108 FFAF                                    STR_109 FFC1  
                                  _ADRESL 003EEF                                    _ADPREH 003EF7  
                                  _ADPREL 003EF6                           ?_InicializaWifi 0001  
                        ___awdiv@dividend 020B                       __end_of_Recebe_COMM 8500  
                        __end_of___awtoft 8198                          __end_of___ftpack 6F0E  
                                  _U1BRGH 003DF6                                    _U1BRGL 003DF5  
                   __size_of_Aguarda_dado 0064                                    _U2BRGH 003DDE  
                                  _U2BRGL 003DDD                                    _RB1PPS 003A09  
                                  _RC0PPS 003A10                          __end_of___lltoft 7A76  
                                  i1l1001 20A0                                    i1l1010 2260  
                                  i1l1002 208C                                    i1l1011 22E6  
                                  i1l1004 20B4                                    i1l1021 236C  
                                  i1l1013 2312                                    i1l1005 20CC  
                                  i1l1110 3032                                    i1l1030 25E8  
                                  i1l1022 237E                                    i1l1014 2326  
                                  i1l1006 3456                                    i1l1111 30A6  
                                  i1l1103 2FA0                                    i1l1031 2664  
                                  i1l1023 2384                                    i1l1015 232C  
                                  i1l1007 215E                                    i1l1120 307C  
                                  i1l1112 3062                                    i1l1040 274E  
                                  i1l1032 2618                                    i1l1016 2B7C  
                                  i1l1008 21B6                                    i1l1201 37E8  
                                  i1l1041 27C2                                    i1l1025 24A0  
                                  i1l1114 3046                                    i1l1050 2798  
                                  i1l1042 277E                                    i1l1026 2542  
                                  i1l1211 397A                                    i1l1203 37CC  
                                  i1l1107 3018                                    i1l1212 3850  
                                  i1l1140 3222                                    i1l1124 30C6  
                                  i1l1044 2762                                    i1l1036 270C  
                                  i1l1028 25C8                                    i1l1213 398A  
                                  i1l1141 3228                                    i1l1125 30AC  
                                  i1l1037 2734                                    i1l1214 38EC  
                                  i1l1142 3252                                    i1l1134 31DA  
                                  i1l1054 27E2                                    i1l1207 3800  
                                  i1l1135 3114                                    i1l1127 3100  
                                  i1l1119 3096                                    i1l1071 2A82  
                                  i1l1063 2834                                    i1l1055 27C8  
                                  i1l1160 3526                                    i1l1072 2A68  
                                  i1l1209 39A0                                    i1l1145 33F4  
                                  i1l1137 31FE                                    i1l1129 30E4  
                                  i1l1081 2DD4                                    i1l1057 281C  
                                  i1l1049 27B2                                    i1l1162 35C4  
                                  i1l1154 34CA                                    i1l1146 32C2  
                                  i1l1138 31E4                                    i1l1082 2B98  
                                  i1l1074 2A9E                                    i1l1411 763A  
                                  i1l1163 3540                                    i1l1155 3486  
                                  i1l1067 2A5C                                    i1l1059 2800  
                                  _RC5PPS 003A15                                    i1l1412 7644  
                                  i1l1404 75EC                                    i1l1420 787C  
                                  i1l1180 36A2                                    i1l1172 35F2  
                                  i1l1148 341A                                    i1l1076 2ACE  
                                  i1l1068 2968                                    i1l1413 7652  
                                  i1l1405 75FC                                    i1l1421 7874  
                                  i1l1181 36AA                                    i1l1149 3400  
                                  i1l1093 2E26                                    i1l1069 2988  
                                  i1l1182 36CE                                    i1l1174 3612  
                                  i1l1094 2F12                                    i1l1086 2C66  
                                  i1l1503 54D2                                    i1l1407 761A  
                                  i1l1191 371A                                    i1l1183 36D6  
                                  i1l1175 3634                                    i1l1167 35D4  
                                  i1l1159 34F6                                    i1l1087 2D90  
                                  i1l1440 5F0A                                    i1l1408 7612  
                                  i1l1424 7894                                    i1l1600 84A2  
                                  i1l1184 3790                                    i1l1168 3582  
                                  i1l1088 2D44                                    i1l1513 5530  
                                  i1l1425 789E                                    i1l1417 785A  
                                  i1l1193 376C                                    i1l1185 3706  
                                  i1l1177 3656                                    i1l1097 2EA2  
                                  i1l1522 5570                                    i1l1514 5526  
                                  i1l1442 5F48                                    i1l1426 78AC  
                                  i1l1418 7866                                    i1l1178 365E  
                                  i1l1523 5566                                    i1l1443 5F38  
                                  i1l1187 36EA                                    i1l1532 66EC  
                                  i1l1508 553A                                    i1l1436 5E7A  
                                  i1l1540 5C1A                                    i1l1525 5594  
                                  i1l1534 6716                                    i1l1526 55B0  
                                  i1l1630 75B0                                    i1l1438 5E98  
                                  i1l1542 5C48                                    i1l1471 6F6A  
                                  i1l1535 6756                                    i1l1527 55E0  
                                  i1l1631 75BE                                    i1l1439 5EDA  
                                  i1l1543 5C82                         i1___llmod@divisor 0015  
                                  i1l1472 6F54                                    i1l1536 677C  
                                  i1l1640 79E2                                    i1l1448 5F6C  
                                  i1l1552 5D0A                                    i1l1544 5CAA  
                                  i1l1641 79F0                                    i1l1449 5F60  
                                  i1l1553 5CFE                                    i1l1474 6F92  
                                  i1l1626 757C                                    i1l1546 5CE6  
                                  i1l1570 625C                                    i1l1475 6F88  
                                  i1l1627 7570                                    i1l1547 5CD6  
                                  i1l1571 626C                                    i1l1468 6F36  
                                  i1l1636 79BA                                    i1l1564 61D6  
                                  i1l1469 6F2C                                    i1l1557 7348  
                                  i1l1581 7EEA                                    i1l1637 79AE  
                                  i1l1558 737E                                    i1l1566 6200  
                                  i1l1575 842C                                    i1l1647 7A88  
                                  i1l1567 6234                                    i1l1648 7A7C  
                                  i1l1568 6244                                    i1l1593 648C  
                                  i1l1585 63EC                                    i1l1594 6480  
                                  i1l1499 54A2                                    i1l1587 6468  
                                  i1l1596 64A8                                    i1l1588 6458  
                        _Calcula_BaudRate 6DA0                            __CFG_WDTCCS$SC 000000  
                                  _U1RXIF 01CD1B                                    _U2RXIF 01CD32  
                               ??i1_scale 0045                                 ??_Aguarda 000E  
                       i1___llmod@counter 0019                       _TransmiteBuffer_USB 7CC2  
                             ?_AguardaINT 0001                             i1sprintf@flag 00B4  
         Buffer_Leitura_USB_Add_Char@dado 0001                             i1sprintf@fval 00AE  
                           ?_recebeFRAMES 0001                             i1sprintf@prec 00B1  
                           i1sprintf@temp 0099                         __end_of_TASK_POST 825C  
                                  __IT_ID 00FA                             ?_recebeNODEID 0001  
                       __end_of_SOCKET_RX 76E0                                    _LowCRC 00FB  
                                  _Recebe 84F4              __end_of_TransmiteBuffer_COMM 7CC2  
                          __CFG_XINST$OFF 000000                          __end_of__powers_ FB0E  
         __size_ofi1_TransmiteBuffer_COMM 005A                                    ___ftge 7272  
                               ??___aldiv 020D                                    ___wmul 8362  
                               ??___awdiv 020F                                 ??___ftadd 0238  
                          __CFG_STVREN$ON 000000                                 ??___awmod 0209  
                               ??___ftdiv 0235                    __size_of_recebeADDRESS 004E  
                               ??___ftneg 0259                                 ??___lldiv 020D  
                               ??___ftmul 021F                                 ??___llmod 021A  
                               ??___ftsub 025C                                 ??___fttol 0242  
                        __end_of_lock_PPS 84DC                                    _length 7DD2  
                                  _nodeId 0400                                    _recebe 7FCA  
                                  _fround 4788                                    _offset 01C4  
                 __end_of_Calcula_Fator_m 71CC                                    clear_0 680A  
                                  clear_1 681C                                    clear_2 6828  
                                  clear_3 6834                                    clear_4 6840  
                                  clear_5 684C                                    clear_6 6858  
                                  clear_7 6864                                    clear_8 6870  
                                  clear_9 687C                          ___awdiv@quotient 0211  
                         ___awmod@divisor 0207                       i1Aguarda_dado@error 00BA  
                    ?_TransmiteBuffer_USB 0205                                    _result 0478  
                         ___awmod@counter 0209                    __size_of_recebeFRAMEID 007A  
   __end_of_Buffer_Escrita_USB_Add_String 6C18    __size_of_Buffer_Escrita_USB_Add_String 00CE  
           _Buffer_Escrita_USB_Add_String 6B4A                                    main@i2 03DA  
                           i1__tdiv_to_l_ 5BEC                     ___ftmul@f3_as_product 0223  
                       __end_ofi1___awdiv 7660                         __end_ofi1___ftadd 5616  
                       __end_ofi1___awmod 78BA                         __end_ofi1___ftdiv 67BE  
                       __end_ofi1___ftneg 8440                         __end_ofi1___lldiv 75D8  
                       __end_ofi1___ftmul 62B6                         __end_ofi1___llmod 7A0A  
                       __end_ofi1___ftsub 7F26                         __end_ofi1___fttol 64C2  
                               ??_isdigit 0205                              _Aguarda_dado 7AE0  
                     _append_Arquivo_Json 504A                              __mediumconst FABE  
                        verificaERRO@ERRO 0005                                    tblptrh 003FF7  
                                  tblptrl 003FF6                                    tblptru 003FF8  
                            ??_GETMACAddr 0058                      verificaFimFrame@dado 0008  
                        verificaERRO@dado 000B                          recebeFRAMES@exit 0058  
                             _Max_Entrada 02DD                               _Max_Saida10 01FE  
                               ??_sprintf 026D                         __end_ofi1_isdigit 84AC  
                     __size_ofi1___ftpack 00B4                       __size_ofi1___lltoft 006A  
                              __accesstop 0060                   __end_of__initialization 68AC  
                              ___altoft@c 024D                            ??_recebeFRAMES 0058  
                              ___ftadd@f1 0232                                ___ftadd@f2 0235  
                         __CFG_FEXTOSC$HS 000000                                ___ftge@ff1 0259  
                              ___ftge@ff2 025C       __end_of_Buffer_Escrita_USB_Add_Char 82CC  
             _Buffer_Escrita_USB_Add_Char 8298                           i1___ftpack@sign 0008  
                          ??_recebeNODEID 0058                         __end_ofi1_sprintf 3A16  
                           ___rparam_used 000001                      _Aguarda_End_Ponteiro 00EF  
                __size_of_Converte_Escala 015E                                ___ftdiv@f1 022F  
                              ___ftdiv@f2 0232                                ___ftdiv@f3 0239  
        ??_Buffer_Escrita_COMM_Add_String 000A           ?_Buffer_Escrita_COMM_Add_String 0006  
                    ?_append_Arquivo_Json 0001                                ___ftneg@f1 0256  
                              ___awtoft@c 020D                               _Min_Entrada 01CF  
                _append_Arquivo_Json$3004 017C                                ___ftmul@f1 0219  
                              ___ftmul@f2 021C                      __size_of_inicia_Post 0072  
                              ___ftsub@f1 0256                                ___ftsub@f2 0259  
                              ___fttol@f1 023E                            __pcstackCOMRAM 0001  
                           __end_of_Post2 8298                            AguardaINT@dado 00D5  
                            __pidataBANK1 84DC                              __pidataBANK2 8440  
                              ___lltoft@c 024D                        __end_of_GETMACAddr 7F78  
                          ivt0x8_undefint 00AC                             __end_of_scale 3F26  
                   ??_TransmiteBuffer_USB 0207               ??_limpa_Buffer_Escrita_COMM 0004  
                          ?i1__tdiv_to_l_ 0004                                 ?i1___ftge 0060  
                      _recebeFUNCTIONCODE 8068                                 ?i1___wmul 0012  
                              __div_to_l_ 5D2A                       __size_of_AguardaINT 0102  
                             _Recebe_COMM 84FA                  __size_of_Abre_Porta_COMM 00AE  
                               ?i1_fround 0042                               i1sprintf@ap 00A0  
                             i1sprintf@cp 009C                    i1_TransmiteBuffer_COMM 7D78  
                             i1sprintf@sp 0069                         _Aguarda_end_frame 0396  
                                 ??_Post2 0058                           i1___fttol@sign1 0021  
                          i1_Aguarda_dado 7B44                       ?_recebeFUNCTIONCODE 0001  
                         _recebeNETWORKID 68B2                         i1Aguarda_dado@fim 00B8  
         append_Arquivo_Json@linhaArquivo 0100                           __div_to_l_@exp1 0210  
                         __div_to_l_@cntr 020F                             _recebeADDRESS 801A  
          __size_ofi1_TransmiteBuffer_USB 005A                                   ??_scale 022B  
           __end_ofi1_TransmiteBuffer_USB 7D78                           __div_to_l_@quot 020B  
            append_Arquivo_Json@resultado 018E                           __CFG_IVT1WAY$ON 000000  
                            sprintf@width 0292                               SETMACAddr@i 00D1  
                              __pbssBANK0 00D7                                __pbssBANK1 0194  
                              __pbssBANK2 02D8                                __pbssBANK3 0300  
                              __pbssBANK4 0400                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                           _recebeFRAMEID 76E0                      _ponteiro_escrita_USB 02E5  
                    Calcula_BaudRate@baud 0217                       Abre_Porta_COMM@baud 021F  
                   ??_append_Arquivo_Json 00CB                              __IT_INT_MASK 00F8  
                           __div_to_l_@f1 0205                             __div_to_l_@f2 0208  
                                 IVTBASEH 003FD6                                   IVTBASEL 003FD5  
                                 IVTBASEU 003FD7                              __IT_SAVE_BSR 00F7  
  i1Buffer_Escrita_USB_Add_String@aguarda 0008      Buffer_Escrita_USB_Add_String@aguarda 0209  
                                 ?_Recebe 0001               __size_of_Interrupt_WIFI_GSM 005E  
                    ??_recebeFUNCTIONCODE 0058                              ??_SETMACAddr 0059  
                                 ?___ftge 0259          __end_of_limpa_Buffer_Escrita_USB 81DC  
                                 ?___wmul 0213                           __CFG_PPS1WAY$ON 000000  
                                 ?_length 0004                                 ?___altoft 024D  
                                 ?_recebe 0001                                   ?_fround 0228  
          Buffer_Escrita_USB_Add_String@i 020D                                 ?___awtoft 020D  
                               ?___ftpack 0205                          ?_Calcula_Fator_m 0001  
                              ??i1___ftge 0066                                 ?___lltoft 024D  
                   __size_of_cria_Arquivo 00B0                                ??i1___wmul 0016  
                   Interrupt_USB_485@lido 0003                             i1_fround$3005 0048  
                           i1_fround$3006 0045                            Aguarda_dado@ff 02A6  
                      i1___llmod@dividend 0011                                   u1325_21 5458  
                                 u1326_21 546E                                   u1346_21 61BE  
                                 u1371_21 5BFE                                   i1l11103 2792  
                                 u1348_21 61E8                                   i1l11105 2798  
                                 i1l11115 27C8                                   i1l10229 73AA  
                                 i1l11221 2BCC                                   i1l11207 2B56  
                                 i1l11135 2830                        i1___awdiv@dividend 000A  
                                 u1373_21 5C2C                                   i1l11321 3076  
                                 i1l11323 307C                                   i1l11413 3432  
                                 i1l11333 30AC                                   i1l11261 2E76  
                                 i1l11253 2E26                                   i1l11511 36AA  
                                 u1366_21 66D4                                   i1l11601 39C0  
                                 i1l11281 2FA4                                   i1l11451 3544  
                                 i1l11365 31E4                                   i1l11543 376C  
                                 i1l11465 3586                                   i1l11573 37FC  
                                 i1l10933 200C                                   i1l11591 397A  
                                 u1368_21 66FE                                   i1l11595 399C  
                                 i1l10939 2032                                   i1l10949 208C  
                     cria_Arquivo@tamanho 00BC                                   u1385_21 63D0  
                     __CFG_PWRTS$PWRT_OFF 000000                    __end_ofi1_Aguarda_dado 7BA6  
                                 _MEMORIA 0194                                   _U1RXPPS 003AE5  
                              ??i1_fround 0045                                   _U2RXPPS 003AE8  
 __end_ofi1_Buffer_Escrita_USB_Add_String 6CDC  __size_ofi1_Buffer_Escrita_USB_Add_String 00C4  
       ??i1_Buffer_Escrita_USB_Add_String 000A          ?i1_Buffer_Escrita_USB_Add_String 0006  
          ?_Buffer_Escrita_USB_Add_String 0207           i1_Buffer_Escrita_USB_Add_String 6C18  
                    _TransmiteBuffer_COMM 7C66                            ?_recebeADDRESS 0001  
                        recebeNETWORKID@i 00C0                                   _PPSLOCK 003ABF  
                      __end_of_SETMACAddr 7272                            ?_recebeFRAMEID 0001  
               _limpa_Buffer_Escrita_COMM 81DC                                   i1_scale 3F26  
                               _ADCLKbits 003EFF       __end_of_Buffer_Leitura_USB_Add_Char 8502  
             _Buffer_Leitura_USB_Add_Char 8500                                   _Aguarda 5F8C  
                          i1sprintf@width 00A8                                   _HighCRC 005C  
               __size_of_verificaFimFrame 004E                                 ?_lock_PPS 0001  
                               _ADREFbits 003EFD                              i1fround@prec 004B  
                       __end_of__npowers_ FB35                                   __Hparam 0000  
                              _scale$2800 022B                                   __Lparam 0000  
                      i1___awdiv@quotient 0010                           __size_of_Recebe 0006  
                            _cria_Arquivo 6FC2                                   ___aldiv 6A74  
                         __size_of___ftge 009E                              ??i1___ftpack 0009  
                                 ___awdiv 74C4                                   ___ftadd 5274  
                                 ___awmod 775A                                   ___ftdiv 65C4  
                                 ___ftneg 83C0                                   ___lldiv 73AE  
                         __size_of___wmul 0030                                   ___ftmul 60A0  
                                 ___llmod 792C                                   ___ftsub 7E2A  
                                 ___fttol 62B6                              ??i1___lltoft 002B  
                       ??_Converte_Escala 0257                           ??i1__tdiv_to_l_ 000A  
                   __end_of_ajusta_escala 504A                                   _address 04B4  
                              ??___altoft 0251                  __end_of_Calcula_BaudRate 6E58  
                                 __pcinit 67BE                           __size_of_length 0058  
                              ??___awtoft 0210                                ??___ftpack 020A  
                         __size_of_recebe 0050                           __size_of_fround 0304  
                                 __ramtop 1000                                _recebeSIZE 7E7E  
                              ??___lltoft 0251                                   __ptext0 4406  
                                 __ptext1 57DE                                   __ptext2 4D72  
                                 __ptext3 7120                                   __ptext4 594E  
                                 __ptext5 8152                                   __ptext6 743A  
                                 __ptext7 7C66                                   __ptext8 82CC  
                                 __ptext9 6B4A                   __end_of_recebeNETWORKID 699A  
                                 _frameId 0A96                           __CFG_WRTAPP$OFF 000000  
                    __end_of_recebeFRAMES 57DE                         __end_of_hexpowers FB55  
                             ?__div_to_l_ 0205                                   _dpowers FABF  
                        ??_InicializaWifi 0205                      __end_of_recebeNODEID 8104  
               limpa_Buffer_Escrita_USB@i 0004                                   _isdigit 8468  
                         ?i1_Aguarda_dado 00B6                                   clear_10 6888  
                                 clear_11 6894                          ___awmod@dividend 0205  
                        ___aldiv@dividend 0205                      i1Aguarda_dado@inicio 00B6  
                         __CFG_WRTSAF$OFF 000000                                   _samples 0500  
                   ?_TransmiteBuffer_COMM 0205                limpa_Buffer_Escrita_COMM@i 0004  
                                 _sprintf 00B2                      end_of_initialization 68AC  
                       ??_Abre_Porta_COMM 021F                             _AguardaFrames 00F3  
                              _unLock_PPS 84AC                                   length@i 0008  
                      __end_ofi1___ftpack 6FC2                                ??_lock_PPS 0205  
                               i1u1310_20 6F9C                        __end_ofi1___lltoft 7AE0  
                               i1u1306_20 6F1E                                 i1u1322_20 7880  
                               i1u1410_20 1FC0                                 i1u1410_27 1FB2  
                               i1u1411_20 1FC6                                 i1u1332_20 54BE  
                               i1u1316_20 761E                              ??_AguardaINT 00D3  
                               i1u1342_20 5578                                 i1u1502_20 320C  
                               i1u1406_20 1E9C                                 i1u1335_20 5502  
                               i1u1503_20 321C                                 i1u1432_20 2346  
                               i1u1329_20 548E                                 i1u1505_20 323E  
                               i1u1433_20 235C                                 i1u1425_20 21F6  
                               i1u1417_20 2068                                 i1u1425_25 21EC  
                               i1u1417_27 205A                                 i1u1530_20 3698  
                               i1u1339_20 5542                                 i1u1443_20 25E0  
                               i1u1611_20 6C80                                 i1u1611_27 6C72  
                               i1u1540_20 379A                                 i1u1436_20 2378  
                               i1u1612_20 6CBE                                 i1u1612_27 6CB0  
                               i1u1365_20 5F72                                 i1u1541_20 37BC  
                               i1u1509_20 3432                                 i1u1461_20 2946  
                               i1u1445_20 26AA                                 i1u1429_20 2320  
                               i1u1550_20 3A04                                 i1u1614_20 6CCC  
                               i1u1391_20 6492                                 i1u1480_20 2E38  
                               i1u1456_20 27F0                                 i1u1448_20 272E  
                               i1u1616_20 76F0                                 i1u1465_20 2A8A  
                               i1u1561_20 8352                                 i1u1617_20 68CC  
                    Abre_Porta_1@BaudRate 021D                                 i1u1545_21 3828  
                               i1u1387_20 6410                                 i1u1379_20 5D10  
                               i1u1483_20 2E76                                 i1u1475_20 2C0A  
             __size_of_Verifica_Analogica 0170                                 i1u1387_25 6408  
                               i1u1396_20 7580                                 i1u1548_20 39C0  
                               i1u1476_20 2C26                                 i1u1549_20 39E2  
                               i1u1469_20 2B56                                 i1u1399_20 79BE  
                               i1u1487_20 2FE2                                 i1u1479_20 2DE6  
                               i1u1497_20 30D4                                 i1u1489_20 3012  
                               i1u1906_27 78DE                                 i1u1907_27 7F30  
                               _SELECIONA 01C7                                 i1u1908_27 6FD2  
                               i1u1867_28 65B2                             _Aguarda_error 03A0  
                         ___lldiv@divisor 0209                           ___lldiv@counter 0211  
                        ___aldiv@quotient 020F                                 _TASK_POST 8220  
                                 postdec1 003FE5                                   postdec2 003FDD  
                                 postinc0 003FEE                                   postinc2 003FDE  
                         i1__div_to_l_@f1 0004                           i1__div_to_l_@f2 0007  
                               _SOCKET_RX 7660                            __tdiv_to_l_@f1 0205  
                          __tdiv_to_l_@f2 0208                              _Max_Entrada1 02D4  
                            _Max_Entrada2 02CE                              _Max_Entrada3 02CA  
                            _Max_Entrada4 02C6                              _Max_Entrada5 02C2  
                            _Max_Entrada6 02BE                              _Max_Entrada7 02BA  
                            _Max_Entrada8 02B6                              _Max_Entrada9 02B2  
                   i1___wmul@multiplicand 0014                     __CFG_WDTCPS$WDTCPS_31 000000  
                    append_Arquivo_Json@i 0182                             ??__tdiv_to_l_ 020B  
                               _PORTAbits 003FCA                                 _PORTBbits 003FCB  
                               _PORTEbits 003FCE                           ??_recebeADDRESS 0058  
                      __end_of_AguardaINT 65C4                                 _TRISAbits 003FC2  
                               _TRISBbits 003FC3                                 _TRISCbits 003FC4  
                               _TRISDbits 003FC5                                 _TRISEbits 003FC6  
                               _TRISFbits 003FC7                                 i1___awdiv 75D8  
                           ?_verificaERRO 0001                                 i1___ftadd 5446  
                               i1___awmod 7846                                 i1___ftdiv 66C2  
                               i1___ftneg 8416                                 i1___lldiv 754E  
                               i1___ftmul 61AC                                 i1___llmod 799C  
                               i1___ftsub 7ED2                                 i1___fttol 63BE  
                         ??_recebeFRAMEID 00BE         __size_of_limpa_Buffer_Escrita_USB 0044  
               ?_limpa_Buffer_Escrita_USB 0001                               ___ftdiv@exp 023C  
                         cria_Arquivo@tam 00BA                                 i1_isdigit 848C  
                              main@motivo 03DE                       __size_of__div_to_l_ 0132  
                            _Min_Entrada1 02D2                               ___ftmul@exp 0222  
                               i1_sprintf 1D6A                            __end_of_Recebe 84FA  
                              ?_TASK_POST 0001                                ?_SOCKET_RX 0001  
                          __end_of___ftge 7310                            __end_of___wmul 8392  
                             ?_recebeSIZE 0001          Buffer_Escrita_COMM_Add_Char@dado 0004  
    __size_of_Buffer_Escrita_USB_Add_Char 0034                            __end_of_length 7E2A  
                 ?i1_TransmiteBuffer_COMM 0004                            __end_of_recebe 801A  
                          __end_of_fround 4A8C                          ?_recebeNETWORKID 0001  
                            ?_Recebe_COMM 0001                                 ___DCDelay 03F2  
                  ??_TransmiteBuffer_COMM 0207                                 _Max_Saida 02DF  
                       __size_ofi1___ftge 009E                       start_initialization 67BE  
                       __size_ofi1___wmul 002E                            ??_verificaERRO 0004  
                               _Min_Saida 01D1                       __end_of__tdiv_to_l_ 5BEC  
                              ?i1___awdiv 000A                                ?i1___ftadd 004C  
                              ?i1___awmod 0004                                ?i1___ftdiv 0049  
                              ?i1___ftneg 0030                                ?i1___lldiv 0004  
                              ?i1___ftmul 0033                                ?i1___llmod 0011  
                              ?i1___ftsub 0060                                ?i1___fttol 0018  
                       __size_ofi1_fround 02E6                                ivt0x8_base 0008  
                             ?_unLock_PPS 0001                append_Arquivo_Json@virgula 0180  
                        _verificaFimFrame 8104                                length@dado 0004  
                         ___llmod@divisor 0216                             ??_inicia_Post 00CF  
                              ?i1_isdigit 0001                                 _Registros 0364  
                         ___llmod@counter 021A                             ?i1__div_to_l_ 0004  
                            i1sprintf@idx 008C                              i1sprintf@len 009E  
                            i1sprintf@exp 00A6                              i1sprintf@val 00AA  
                                ??_Recebe 0001                          __CFG_LPBOREN$OFF 000000  
             __end_of_TransmiteBuffer_USB 7D1E        __size_of_limpa_Buffer_Escrita_COMM 0044  
                              ?i1_sprintf 0069                                  ??___ftge 025F  
                                ??___wmul 0217                     __size_of_recebeFRAMES 01C8  
                             __pdataBANK1 01E9                               __pdataBANK2 02B0  
                      i1___awmod@dividend 0004                     __size_of_recebeNODEID 004E  
                                ??_length 0006                          _Aguarda_Resposta 0300  
          __end_ofi1_TransmiteBuffer_COMM 7DD2                                  ??_recebe 0058  
                     verificaFimFrame@FIM 0005                                  ??_fround 022B  
                        _Aguarda_Ponteiro 00F1                             _sample_result 00DB  
                           ?_Abre_Porta_1 021B                             sprintf@tmpval 028C  
                       __size_of___altoft 008A                               __pbssBANK10 0A00  
                              fround@prec 0231                         __size_of___awtoft 0046  
                       __size_of___ftpack 00B6                               __pbssBIGRAM 0A96  
                  Interrupt_WIFI_GSM@lido 00D6                         __size_of___lltoft 006C  
                             __pbssCOMRAM 005A                           __IT_SAVE_STATUS 00F5  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200                             __pcstackBANK3 03DA  
                   _ponteiro_escrita_COMM 02E7                      _endereco_dispositivo 01D9  
                            _isdigit$2412 0206               __end_of_append_Arquivo_Json 5274  
        i1Buffer_Escrita_USB_Add_String@i 000C     __end_ofi1_Buffer_Escrita_USB_Add_Char 8362  
  __size_ofi1_Buffer_Escrita_USB_Add_Char 0032             i1_Buffer_Escrita_USB_Add_Char 8330  
                                ?i1_scale 0042                                  ?_Aguarda 000C  
                   i1_TransmiteBuffer_USB 7D1E                          i1Aguarda_dado@ff 00BC  
                             sprintf@flag 029E                               sprintf@fval 0298  
                             sprintf@prec 029B                           _Converte_Escala 594E  
                             sprintf@temp 0283                            ??i1__div_to_l_ 000A  
                     __size_of_recebeSIZE 0054                __end_of_Interrupt_WIFI_GSM 7C66  
                               __pnvBANK3 03F2                             __IT_SAVE_WREG 00F6  
                            _recebeFRAMES 5616                       _buffer_escrita_comm 0700  
         ??_Buffer_Escrita_USB_Add_String 020B                         __size_of_lock_PPS 0018  
                            _recebeNODEID 80B6               __size_of_recebeFUNCTIONCODE 004E  
                             ??_TASK_POST 0058                             __pmediumconst FABE  
                                ?___aldiv 0205                                  ?___awdiv 020B  
                     __end_of_inicia_Post 792C                                  ?___ftadd 0232  
                             ??_SOCKET_RX 0058                                  ?___awmod 0205  
                                ?___ftdiv 022F                                  ?___ftneg 0256  
                                ?___lldiv 0205                                  ?___ftmul 0219  
                                ?___llmod 0212                                  ?___ftsub 0256  
                               __npowers_ FB0E                                  ?___fttol 023E  
       __end_of_limpa_Buffer_Escrita_COMM 8220      __size_of_Buffer_Leitura_USB_Add_Char 0002  
                        ??i1_Aguarda_dado 0058                         i1___awdiv@divisor 000C  
                              SOCKET_RX@i 0058                            ??_Abre_Porta_1 0221  
                       i1___awdiv@counter 000E                              _functionCode 05A0  
                     __size_of_unLock_PPS 0018                         ?_Calcula_BaudRate 0213  
                             __tdiv_to_l_ 5AAC                           _Abre_Porta_COMM 7072  
                            ??__div_to_l_ 020B                    __CFG_BBSIZE$BBSIZE_512 000000  
                      ??_Calcula_BaudRate 0217                                  ?_isdigit 0001  
                      Aguarda_dado@inicio 02A0                            __size_of_Post2 003C  
                             ??i1___awdiv 000E                               ??i1___ftadd 0052  
                __size_of_Calcula_Fator_m 00AC                               ??i1___awmod 0008  
                             ??i1___ftdiv 004F                                 _hexpowers FB35  
                             ??i1___ftneg 0033                               ??i1___lldiv 000C  
                             ??i1___ftmul 0039                               ??i1___llmod 0019  
                             ??i1___ftsub 0058                               ??i1___fttol 001C  
                                ?_sprintf 0262                       _resultado_polinomio 01CB  
                          __size_of_scale 0510                                 _tamFrames 01E1  
                             _U1ERRIRbits 003DF9                           Aguarda_dado@fim 02A2  
                          i1_isdigit$2412 0005                           ___aldiv@divisor 0209  
                             _U2ERRIRbits 003DE1                           ___aldiv@counter 020D  
                          ___wmul@product 0217                                  _LATAbits 003FBA  
                                _LATDbits 003FBD                                  _LATEbits 003FBE  
                                _LATFbits 003FBF                               ??i1_isdigit 0004  
                         _ponteiro_analog 01CD                                  _PIE3bits 003993  
                               _networkId 043C                                  _PIE6bits 003996  
                     __CFG_BORV$VBOR_2P45 000000                                  i1u700_20 8320  
                                i1u921_21 7F84                                  i1u754_20 6D44  
                      __end_of__div_to_l_ 5E5C                                  i1u754_27 6D36  
                                i1u755_20 6D82                                  i1u755_27 6D74  
                                i1u757_20 6D90                                  i1u925_20 813E  
                                i1u759_20 7E16                                  i1u759_27 7E08  
                             ??i1_sprintf 0083                      __end_of_verificaERRO 7FCA  
                     _buffer_leitura_comm 0900                                 _strBuffer 00FC  
                   __end_ofi1__tdiv_to_l_ 5D2A                                  i1___ftge 7310  
                              _ADCON0bits 003EF8                         ___wmul@multiplier 0213  
                                i1___wmul 8392                             _Ponteiro_ERRO 00E9  
                           ?_Aguarda_dado 02A0                                  i1_fround 4A8C  
                         i1sprintf@tmpval 00A2                                  __IT_DATA 00F9  
                    __size_of_Recebe_COMM 0006                   __end_of_Converte_Escala 5AAC  
                        i1__tdiv_to_l_@f1 0004                          i1__tdiv_to_l_@f2 0007  
                             _INTCON0bits 003FD2                                 copy_data0 67D2  
                               copy_data1 67F4                    ?i1_TransmiteBuffer_USB 0004  
   Buffer_Escrita_COMM_Add_String@aguarda 0008                __end_of_Verifica_Analogica 594E  
                                ___DCByte 03F3                    __size_of_ajusta_escala 02D8  
                        __size_ofi1_scale 04E0                               Aguarda@dado 0010  
                        __size_of_Aguarda 0114                               _inicia_Post 78BA  
          ?i1_Buffer_Escrita_USB_Add_Char 0001              ?_Buffer_Escrita_USB_Add_Char 0001  
                                __Hrparam 0000                   __CFG_RSTOSC$EXTOSC_4PLL 000000  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                       _TimeOut_Threshold 01D5                         Abre_Porta_1@PORTA 021B  
                 __end_of_Abre_Porta_COMM 7120                         i1___awmod@divisor 0006  
                       i1___awmod@counter 0008                          __size_of___aldiv 00D6  
                        __size_of___awdiv 008A                             _breakpoint_sw 01E3  
                        __size_of___ftadd 01D2                          __size_of___awmod 0076  
                        __size_of___ftdiv 00FE                          __size_of___ftneg 002C  
                        __size_of___lldiv 008C                                  ___altoft 743A  
                        __size_of___ftmul 010C                          __size_of___llmod 0070  
                        __size_of___ftsub 0054                          __size_of___fttol 0108  
                            ??_recebeSIZE 0058                                  ___awtoft 8152  
                                ___ftpack 6E58                  __end_of_verificaFimFrame 8152  
                             _fround$2798 022E                               _fround$2799 022B  
                                ___lltoft 7A0A                                _ANSELAbits 003A40  
                          ??_Aguarda_dado 02A8                                _ANSELBbits 003A50  
                              _ANSELCbits 003A60                                _ANSELDbits 003A70  
                              _ANSELEbits 003A80                      __end_ofi1__div_to_l_ 5F8C  
                              sprintf@idx 0276                                sprintf@len 0288  
                              sprintf@exp 0290                                sprintf@val 0294  
                      _buffer_escrita_USB 0600                          __size_of_isdigit 0024  
                                __pivt0x8 0008                                _GETMACAddr 7F26  
                              _BORCONbits 0039D0                     __end_of_recebeADDRESS 8068  
                                __ptext10 7CC2                                  __ptext11 8298  
                                __ptext20 74C4                                  __ptext12 7AE0  
                                __ptext21 5AAC                                  __ptext13 00B2  
                                __ptext30 7272                                  __ptext22 5D2A  
                                __ptext14 3A16                                  __ptext31 65C4  
                                __ptext23 7A0A                                  __ptext15 8468  
                                __ptext40 84F4                                  __ptext32 6E58  
                                __ptext24 792C                                  __ptext16 4788  
                                __ptext41 8500                                  __ptext33 7072  
                                __ptext25 73AE                                  __ptext17 8362  
                                __ptext50 7E7E                                  __ptext42 82FE  
                                __ptext34 699A                                  __ptext26 62B6  
                                __ptext18 60A0                                  __ptext51 801A  
                                __ptext43 7C08                                  __ptext35 84AC  
                                __ptext27 7E2A                                  __ptext19 775A  
                                __ptext60 77D0                                  __ptext52 8068  
                                __ptext44 84FA                                  __ptext36 84C4  
                                __ptext28 5274                                  __ptext61 7F26  
                                __ptext53 80B6                                  __ptext45 64C2  
                                __ptext37 6DA0                                  __ptext29 83C0  
                                __ptext70 7DD2                                  __ptext62 5616  
                                __ptext54 68B2                                  __ptext46 8220  
                                __ptext38 6A74                                  __ptext71 6C18  
                                __ptext63 5F8C                                  __ptext55 76E0  
                                __ptext47 71CC                                  __ptext39 83EC  
                                __ptext80 61AC                                  __ptext72 7D1E  
                                __ptext64 8104                                  __ptext56 78BA  
                                __ptext48 7660                                  __ptext81 7846  
                                __ptext73 8330                                  __ptext65 7F78  
                                __ptext57 7FCA                                  __ptext49 7BA6  
                                __ptext90 5446                                  __ptext82 75D8  
                                __ptext74 7B44                                  __ptext66 8198  
                                __ptext58 825C                                  __ptext91 8416  
                                __ptext83 5BEC                                  __ptext75 1D6A  
                                __ptext67 81DC                                  __ptext59 8502  
                                __ptext92 7310                                  __ptext84 5E5C  
                                __ptext76 3F26                                  __ptext68 504A  
                                __ptext93 66C2                                  __ptext85 7A76  
                                __ptext77 848C                                  __ptext69 6FC2  
                                __ptext94 6F0E                                  __ptext86 799C  
                                __ptext78 4A8C                                  __ptext95 6CDC  
                                __ptext87 754E                                  __ptext79 8392  
                                __ptext96 7D78                                  __ptext88 63BE  
                                __ptext97 0000                                  __ptext89 7ED2  
                                __powers_ FAE7      __end_of_Buffer_Escrita_COMM_Add_Char 8330  
   __size_of_Buffer_Escrita_COMM_Add_Char 0032              _Buffer_Escrita_COMM_Add_Char 82FE  
                              _U1CON0bits 003DF2                                _U1CON1bits 003DF3  
                                _contaLed 01BC                              ??_unLock_PPS 0205  
                        __size_of_sprintf 1CB8                                _U2CON0bits 003DDA  
                              _U2CON1bits 003DDB                     __end_of_recebeFRAMEID 775A  
      Buffer_Escrita_COMM_Add_String@dado 0006                             __size_of_WIND 0060  
                             _recebeu_r_n 01E7                         Aguarda_dado@error 02A4  
                    __end_of_Abre_Porta_1 6A74                             __size_of_Post 0076  
                 __size_of_InicializaWifi 0032                                  _lock_PPS 84C4  
                          _ponteiroFrames 00E5                             __size_of_nada 0002  
                       ??_Calcula_Fator_m 023E                             __size_of_main 0382  
                              _MACAddress 03BE                        __end_of_recebeSIZE 7ED2  
                    __CFG_WDTCWS$WDTCWS_7 000000             ??_Buffer_Escrita_USB_Add_Char 0205  
                                _valor_AD 02DB                        _buffer_leitura_USB 0A00  
                            _TimeoutCount 01D7                           _RecebendoFrames 01DD  
                                _primeiro 02E9                                  _ponteiro 00E1  
                            _Ponteiro_FIM 00E7                             _ajusta_escala 4D72  
                      __end_of_unLock_PPS 84C4                    verificaFimFrame@F19988 01FB  
                _limpa_Buffer_Escrita_USB 8198                         i1__div_to_l_@exp1 000F  
                       i1__div_to_l_@cntr 000E                                _FVRCONbits 003EC1  
                          _Aguarda_Funcao 00EB                         i1__div_to_l_@quot 000A  
           __size_of_TransmiteBuffer_COMM 005C                                  isdigit@c 0207  
                                scale@scl 022E                          ?_Converte_Escala 0001  
                __size_of_recebeNETWORKID 00E8                          Abre_Porta_1@baud 0221  
                      verificaERRO@F19991 01E9                                  intlevel1 0000  
                               sprintf@ap 028A                                 sprintf@cp 0286  
                        __tdiv_to_l_@exp1 0213                                 sprintf@sp 0262  
                        __tdiv_to_l_@cntr 0212             ?_Buffer_Escrita_COMM_Add_Char 0001  
                        __tdiv_to_l_@quot 020E       i1Buffer_Escrita_USB_Add_String@dado 0006  
       Buffer_Escrita_USB_Add_String@dado 0207              ?_Buffer_Leitura_USB_Add_Char 0001  
                        ___lldiv@dividend 0205                            _Aguarda_str_OK 00ED  
                   __size_of_verificaERRO 0052                         __CFG_CLKOUTEN$OFF 000000  
                           _ponteiro_COMM 02E3                               _WDTCON0bits 00395B  
            Verifica_Analogica@valoradstr 02A4                             ?_cria_Arquivo 00B6  
                              _SETMACAddr 71CC                          ?_Abre_Porta_COMM 021B  
                          ?_ajusta_escala 0246                        _Interrupt_WIFI_GSM 7C08  
                            ?__tdiv_to_l_ 0205              __size_of_TransmiteBuffer_USB 005C  
                           _Max_Entrada10 02B0                                  sprintf@c 029D  
                                sprintf@f 0264                       recebeNETWORKID@para 00BE  
                        ___lldiv@quotient 020D                              _ponteiro_USB 02E1  
                     ?_Interrupt_WIFI_GSM 0001    __end_of_Buffer_Escrita_COMM_Add_String 6DA0  
 __size_of_Buffer_Escrita_COMM_Add_String 00C4            _Buffer_Escrita_COMM_Add_String 6CDC  
                            ___aldiv@sign 020E                               ?_GETMACAddr 0001  
                            _verificaERRO 7F78                         _Interrupt_USB_485 83EC  
               __size_of_Calcula_BaudRate 00B8                        ?_Interrupt_USB_485 0001  
                    __end_of_Aguarda_dado 7B44             ??_Buffer_Leitura_USB_Add_Char 0001  
              __end_of_recebeFUNCTIONCODE 80B6              __size_of_append_Arquivo_Json 022A  
                    ??_Interrupt_WIFI_GSM 0200                            ??_cria_Arquivo 0058  
                     ??_Interrupt_USB_485 0002  
